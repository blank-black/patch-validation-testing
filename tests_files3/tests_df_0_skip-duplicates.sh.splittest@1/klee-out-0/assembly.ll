; ModuleID = '/work/data/df/25a2c948b24163ce0e0e9e52f6a5fef33d7d7842/execution/ctrl/output/latest/testscases_workdir/shadow_se/df.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-f128:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

module asm ".section .gnu.warning.__fpending"
module asm "\09.previous"

%0 = type { i64 }
%1 = type { %2 }
%2 = type { void (i8*)*, i8*, i8* }
%3 = type { [4 x i32] }
%4 = type { i16, [2 x i8], i32, i8*, i8*, i8*, i8*, i8*, i8*, %4*, [2 x i32], %struct.__mbstate_t }
%5 = type { void (i32)* }
%6 = type { %7, [20 x i32] }
%7 = type { i32, i32, i32, i64, i64 }
%8 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [3 x i64] }
%9 = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, [5 x i64] }
%10 = type { void (i32, i8*)*, i8* }
%struct.Elf64_auxv_t = type { i64, %0 }
%struct.FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct.FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct.F_triple = type { i8*, i64, i64 }
%struct.Hash_table = type { %struct.fs_type_list*, %struct.fs_type_list*, i64, i64, i64, %struct.Hash_tuning*, i64 (i8*, i64)*, i8 (i8*, i8*)*, void (i8*)*, %struct.fs_type_list* }
%struct.Hash_tuning = type { float, float, float, float, i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct.FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct.FILE*, i32 }
%struct.__fsid_t = type { [2 x i32] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__kernel_termios = type { i32, i32, i32, i32, i8, [19 x i8] }
%struct.__mbstate_t = type { i32, i32 }
%struct.__sigset_t = type { [16 x i64] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._cap_struct = type opaque
%struct._getopt_data = type { i32, i32, i32, i8*, i32, i8*, i32, i32, i32, i32 }
%struct.anon = type { [12 x i8], i32 }
%struct.argument = type { i32, %union.argvalue_t }
%struct.arguments = type { i64, %struct.argument*, [7 x %struct.argument] }
%struct.cd_buf = type { i32 }
%struct.char_directive = type { i8*, i8*, i32, i8*, i8*, i64, i8*, i8*, i64, i8, i64 }
%struct.char_directives = type { i64, %struct.char_directive*, i64, i64, [7 x %struct.char_directive] }
%struct.devlist = type { i64, %struct.mount_entry*, %struct.devlist* }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.dirent64 = type { i64, i64, i16, i8, [256 x i8] }
%struct.exe_disk_file_t = type { i32, i8*, i8*, %struct.stat*, %struct.exe_sockaddr_t* }
%struct.exe_file_system_t = type { i32, i32, i32, %struct.exe_disk_file_t*, %struct.exe_disk_file_t*, i32, %struct.exe_disk_file_t*, %struct.exe_disk_file_t*, i32, i32, %struct.exe_disk_file_t*, i32, i32, %struct.exe_disk_file_t*, i32, i32*, i32*, i32*, 
%struct.exe_file_t = type { i32, i32, i64, %struct.exe_disk_file_t*, %struct.exe_sockaddr_t, %struct.exe_sockaddr_t*, i32 }
%struct.exe_sockaddr_t = type { %struct.sockaddr_storage*, i32 }
%struct.exe_sym_env_t = type { [32 x %struct.exe_file_t], i32, i32, i32 }
%struct.exit_function = type { i64, %1 }
%struct.exit_status = type { i16, i16 }
%struct.fd_set = type { [16 x i64] }
%struct.field_data_t = type { i32, i8*, i32, i8*, i64, i32, i8 }
%struct.field_values_t = type { i64, i64, i64, i64, i8, i64, i64, i8 }
%struct.fill_info_t = type { i32, i32, i32, %union.sigval_t }
%struct.fs_type_list = type { i8*, %struct.fs_type_list* }
%struct.fs_usage = type { i64, i64, i64, i64, i8, i64, i64 }
%struct.hash_entry = type { i8*, %struct.fs_type_list* }
%struct.in6_addr = type { %3 }
%struct.in_addr = type { i32 }
%struct.iovec = type { i8*, i64 }
%struct.kernel_sigaction = type { void (i32)*, i64, void ()*, %struct.__sigset_t }
%struct.lconv = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.mbchar = type { i8*, i64, i8, i32, [24 x i8] }
%struct.mbchar_t = type { i8*, i64, i8, i32, [24 x i8] }
%struct.mbi_iterator_t = type { i8*, i8, %struct.mbstate_t, i8, %struct.mbchar }
%struct.mbiter_multi = type { i8*, i8, %struct.mbstate_t, i8, %struct.mbchar }
%struct.mbstate_t = type { i32, %struct.cd_buf }
%struct.mbui_iterator_t = type { i8, %struct.mbstate_t, i8, %struct.mbchar }
%struct.mbuiter_multi = type { i8, %struct.mbstate_t, i8, %struct.mbchar }
%struct.mntent = type { i8*, i8*, i8*, i8*, i32, i32 }
%struct.mount_entry = type { i8*, i8*, i8*, i64, i64, %struct.mount_entry* }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i64, i8*, i64, i32 }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.ppfs_t = type { i8*, %struct.printf_info, i32, i32, i32, [4 x i8], [9 x i32], [1 x %struct.__va_list_tag], [9 x %union.argvalue_t] }
%struct.printf_info = type { i32, i32, i32, i32, i32 }
%struct.psfs_t = type { [9 x i8*], i32, i32, i8*, i8*, i32, i32, i32, i32, i8, i8 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.saved_cwd = type { i32, i8* }
%struct.scan_cookie = type { i32, i32, %4*, i32, i32, i32, i8, i8, i8, i8, %struct.__mbstate_t, i32, i32, i32 (%struct.scan_cookie*)*, i8*, i32, i32, i8* }
%struct.sigaction = type { %5, %struct.__sigset_t, i32, void ()* }
%struct.siginfo_t = type { i32, i32, i32, %6 }
%struct.sigset_t = type { [16 x i64] }
%struct.slotvec = type { i64, i8* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.sockaddr_in = type { i16, i16, %struct.cd_buf, [8 x i8] }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.sockaddr_storage = type { i16, i64, [112 x i8] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.statfs = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct.statvfs = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [6 x i32] }
%struct.termios = type { i32, i32, i32, i32, i8, [32 x i8], i32, i32 }
%struct.timespec = type { i64, i64 }
%struct.timeval = type { i64, i64 }
%struct.utmp = type { i16, i32, [32 x i8], [4 x i8], [32 x i8], [256 x i8], %struct.exit_status, i64, %struct.timespec, [4 x i32], [20 x i8] }
%struct.utsname = type { [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8] }
%union..0anon = type { i32, [1023 x i32] }
%union.anon = type { i32 }
%union.argvalue_t = type { x86_fp80 }
%union.header = type { i8*, [2 x i32] }
%union.memory_double = type { x86_fp80 }
%union.sigval_t = type { i8* }

@.str = private unnamed_addr constant [36 x i8] c"KLEE_CHANGE_RUNTIME_SET_OLD_VERSION\00", align 8
@version_str.5917 = internal unnamed_addr global i8* null
@header_mode = internal unnamed_addr global i32 0
@field_data = internal unnamed_addr global [12 x %struct.field_data_t] [%struct.field_data_t { i32 0, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i32 2, i8* getelementptr inbounds ([11 x i8]* @.str2, i64 0, i64 0), i64 14, i32 0, i8 0 },
@.str1 = private unnamed_addr constant [7 x i8] c"source\00", align 1
@.str2 = private unnamed_addr constant [11 x i8] c"Filesystem\00", align 1
@.str3 = private unnamed_addr constant [7 x i8] c"fstype\00", align 1
@.str4 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str5 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str6 = private unnamed_addr constant [7 x i8] c"blocks\00", align 1
@.str7 = private unnamed_addr constant [5 x i8] c"used\00", align 1
@.str8 = private unnamed_addr constant [5 x i8] c"Used\00", align 1
@.str9 = private unnamed_addr constant [6 x i8] c"avail\00", align 1
@.str10 = private unnamed_addr constant [10 x i8] c"Available\00", align 1
@.str11 = private unnamed_addr constant [6 x i8] c"pcent\00", align 1
@.str12 = private unnamed_addr constant [5 x i8] c"Use%\00", align 1
@.str13 = private unnamed_addr constant [7 x i8] c"itotal\00", align 1
@.str14 = private unnamed_addr constant [7 x i8] c"Inodes\00", align 1
@.str15 = private unnamed_addr constant [6 x i8] c"iused\00", align 1
@.str16 = private unnamed_addr constant [6 x i8] c"IUsed\00", align 1
@.str17 = private unnamed_addr constant [7 x i8] c"iavail\00", align 1
@.str18 = private unnamed_addr constant [6 x i8] c"IFree\00", align 1
@.str19 = private unnamed_addr constant [7 x i8] c"ipcent\00", align 1
@.str20 = private unnamed_addr constant [6 x i8] c"IUse%\00", align 1
@.str21 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str22 = private unnamed_addr constant [11 x i8] c"Mounted on\00", align 1
@.str23 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str24 = private unnamed_addr constant [5 x i8] c"File\00", align 1
@all_args_string = internal unnamed_addr global i8* getelementptr inbounds ([75 x i8]* @.str25, i64 0, i64 0)
@.str25 = private unnamed_addr constant [75 x i8] c"source,fstype,itotal,iused,iavail,ipcent,size,used,avail,pcent,file,target\00", align 8
@long_options = internal unnamed_addr constant [17 x %struct.option] [%struct.option { i8* getelementptr inbounds ([4 x i8]* @.str26, i64 0, i64 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([11 x i8]* @.str27, i64 0, i64 0
@.str26 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str27 = private unnamed_addr constant [11 x i8] c"block-size\00", align 1
@.str28 = private unnamed_addr constant [7 x i8] c"inodes\00", align 1
@.str29 = private unnamed_addr constant [15 x i8] c"human-readable\00", align 1
@.str30 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@.str31 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str32 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str33 = private unnamed_addr constant [12 x i8] c"portability\00", align 1
@.str34 = private unnamed_addr constant [11 x i8] c"print-type\00", align 1
@.str35 = private unnamed_addr constant [5 x i8] c"sync\00", align 1
@.str36 = private unnamed_addr constant [8 x i8] c"no-sync\00", align 1
@.str37 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@.str38 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str39 = private unnamed_addr constant [13 x i8] c"exclude-type\00", align 1
@.str40 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str41 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@nrows = internal unnamed_addr global i64 0
@table = internal unnamed_addr global i8*** null
@ncolumns = internal unnamed_addr global i64 0
@columns = internal unnamed_addr global %struct.field_data_t** null
@.str42 = private unnamed_addr constant [14 x i8] c"!\22field used\22\00", align 1
@.str43 = private unnamed_addr constant [9 x i8] c"src/df.c\00", align 1
@__PRETTY_FUNCTION__.6079 = internal unnamed_addr constant [12 x i8] c"alloc_field\00"
@.str44 = private unnamed_addr constant [34 x i8] c"option --output: field %s unknown\00", align 8
@.str45 = private unnamed_addr constant [46 x i8] c"option --output: field %s used more than once\00", align 8
@.str46 = private unnamed_addr constant [5 x i8] c"Size\00", align 1
@.str47 = private unnamed_addr constant [6 x i8] c"Avail\00", align 1
@.str48 = private unnamed_addr constant [17 x i8] c"!\22invalid field\22\00", align 1
@__PRETTY_FUNCTION__.6128 = internal unnamed_addr constant [18 x i8] c"decode_output_arg\00"
@print_type = internal unnamed_addr global i8 0
@.str49 = private unnamed_addr constant [9 x i8] c"Capacity\00", align 1
@.str50 = private unnamed_addr constant [23 x i8] c"!\22invalid header_mode\22\00", align 1
@__PRETTY_FUNCTION__.6164 = internal unnamed_addr constant [15 x i8] c"get_field_list\00"
@human_output_opts = internal unnamed_addr global i32 0
@output_block_size = internal unnamed_addr global i64 0
@.str51 = private unnamed_addr constant [6 x i8] c"%s-%s\00", align 1
@fs_select_list = internal unnamed_addr global %struct.fs_type_list* null
@fs_exclude_list = internal unnamed_addr global %struct.fs_type_list* null
@mount_list = internal unnamed_addr global %struct.mount_entry* null
@.str52 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str53 = private unnamed_addr constant [24 x i8] c"-0123456789abcdefABCDEF\00", align 1
@grand_fsu = internal unnamed_addr global %struct.fs_usage zeroinitializer, align 32
@show_local_fs = internal unnamed_addr global i8 0
@show_all_fs = internal unnamed_addr global i8 0
@show_listed_fs = internal unnamed_addr global i8 0
@.str54 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_status = internal unnamed_addr global i32 0
@file_systems_processed = internal unnamed_addr global i8 0
@print_grand_total = internal unnamed_addr global i8 0
@.str55 = private unnamed_addr constant [18 x i8] c"!\22bad field_type\22\00", align 1
@__PRETTY_FUNCTION__.6599 = internal unnamed_addr constant [8 x i8] c"get_dev\00"
@.str56 = private unnamed_addr constant [7 x i8] c"%.0f%%\00", align 1
@.str57 = private unnamed_addr constant [19 x i8] c"!\22unhandled field\22\00", align 1
@.str58 = private unnamed_addr constant [14 x i8] c"!\22empty cell\22\00", align 1
@.str59 = private unnamed_addr constant [5 x i8] c"lofs\00", align 1
@.str60 = private unnamed_addr constant [33 x i8] c"Usage: %s [OPTION]... [FILE]...\0A\00", align 8
@.str61 = private unnamed_addr constant [100 x i8] c"Show information about the file system on which each FILE resides,\0Aor all file systems by default.\0A\00", align 8
@.str62 = private unnamed_addr constant [430 x i8] c"  -a, --all             include dummy file systems\0A  -B, --block-size=SIZE  scale sizes by SIZE before printing them; e.g.,\0A                           '-BM' prints sizes in units of 1,048,576 bytes
@.str63 = private unnamed_addr constant [255 x i8] c"  -i, --inodes          list inode information instead of block usage\0A  -k                    like --block-size=1K\0A  -l, --local           limit listing to local file systems\0A      --no-sync     
@.str64 = private unnamed_addr constant [489 x i8] c"      --output[=FIELD_LIST]  use the output format defined by FIELD_LIST,\0A                               or print all fields if FIELD_LIST is omitted.\0A  -P, --portability     use the POSIX output f
@.str65 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 8
@.str66 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 8
@.str67 = private unnamed_addr constant [3 x i8] c"DF\00", align 1
@.str68 = private unnamed_addr constant [220 x i8] c"\0AFIELD_LIST is a comma-separated list of columns to be included.  Valid\0Afield names are: 'source', 'fstype', 'itotal', 'iused', 'iavail', 'ipcent',\0A'size', 'used', 'avail', 'pcent', 'file' and 't
@.str69 = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 8
@.str70 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 8
@.str71 = private unnamed_addr constant [223 x i8] c"\0ADisplay values are in units of the first available SIZE from --block-size,\0Aand the %s_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.\0AOtherwise, units default to 1024 bytes (or 512 i
@.str72 = private unnamed_addr constant [153 x i8] c"\0AThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\0AUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\0A\00", align 8
@.str73 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str74 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str75 = private unnamed_addr constant [39 x i8] c"http://www.gnu.org/software/coreutils/\00", align 8
@.str76 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str77 = private unnamed_addr constant [69 x i8] c"Report %s translation bugs to <http://translationproject.org/team/>\0A\00", align 8
@.str78 = private unnamed_addr constant [65 x i8] c"For complete documentation, run: info coreutils '%s invocation'\0A\00", align 8
@.str79 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str80 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str81 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str82 = private unnamed_addr constant [41 x i8] c"options %s and %s are mutually exclusive\00", align 8
@.str83 = private unnamed_addr constant [19 x i8] c"aB:iF:hHklmPTt:vx:\00", align 1
@.str84 = private unnamed_addr constant [3 x i8] c"-i\00", align 1
@.str85 = private unnamed_addr constant [9 x i8] c"--output\00", align 1
@.str86 = private unnamed_addr constant [3 x i8] c"-T\00", align 1
@.str87 = private unnamed_addr constant [3 x i8] c"-P\00", align 1
@require_sync = internal unnamed_addr global i8 0
@.str88 = private unnamed_addr constant [18 x i8] c"Torbjorn Granlund\00", align 1
@.str89 = private unnamed_addr constant [19 x i8] c"Torbj\C3\B6rn Granlund\00", align 1
@.str90 = private unnamed_addr constant [3 x i8] c"df\00", align 1
@.str91 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str92 = private unnamed_addr constant [12 x i8] c"Paul Eggert\00", align 1
@.str93 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str94 = private unnamed_addr constant [14 x i8] c"DF_BLOCK_SIZE\00", align 1
@.str95 = private unnamed_addr constant [47 x i8] c"file system type %s both selected and excluded\00", align 8
@.str96 = private unnamed_addr constant [10 x i8] c"Warning: \00", align 1
@.str97 = private unnamed_addr constant [42 x i8] c"cannot read table of mounted file systems\00", align 8
@.str98 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str99 = private unnamed_addr constant [26 x i8] c"no file systems processed\00", align 1
@.str100 = private constant [29 x i8] c"cannot get current directory\00", align 1
@.str1101 = private constant [30 x i8] c"cannot change to directory %s\00", align 1
@.str2102 = private constant [2 x i8] c".\00", align 1
@.str3103 = private constant [39 x i8] c"cannot stat current directory (now %s)\00", align 8
@.str4104 = private constant [3 x i8] c"..\00", align 1
@.str5105 = private constant [15 x i8] c"cannot stat %s\00", align 1
@.str6106 = private constant [46 x i8] c"failed to return to initial working directory\00", align 8
@Version = unnamed_addr global i8* getelementptr inbounds ([21 x i8]* @.str109, i64 0, i64 0)
@.str109 = private constant [21 x i8] c"8.22.108-25a2c-dirty\00", align 1
@.str110 = private constant [2 x i8] c"/\00", align 1
@file_name = internal global i8* null
@ignore_EPIPE = internal global i8 0
@.str112 = private constant [12 x i8] c"write error\00", align 1
@.str1113 = private constant [7 x i8] c"%s: %s\00", align 1
@.str2114 = private constant [3 x i8] c"%s\00", align 1
@exit_failure = global i32 1
@default_tuning = internal constant %struct.Hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 16
@.str122 = private constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str1123 = private constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str2124 = private constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 8
@.str3125 = private constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@power_letter = internal constant [9 x i8] c"\00KMGTPEZY"
@.str133 = private constant [2 x i8] c".\00", align 1
@.str1134 = private constant [1 x i8] zeroinitializer, align 1
@.str2135 = private constant [6 x i8] c"%.0Lf\00", align 1
@.str3136 = private constant [6 x i8] c"%.1Lf\00", align 1
@block_size_args = internal constant [3 x i8*] [i8* getelementptr inbounds ([15 x i8]* @.str4137, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str5138, i64 0, i64 0), i8* null], align 16
@.str4137 = private constant [15 x i8] c"human-readable\00", align 1
@.str5138 = private constant [3 x i8] c"si\00", align 1
@block_size_opts = internal constant [2 x i32] [i32 176, i32 144]
@.str6139 = private constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str7140 = private constant [11 x i8] c"BLOCK_SIZE\00", align 1
@.str8141 = private constant [10 x i8] c"BLOCKSIZE\00", align 1
@.str9142 = private constant [18 x i8] c"eEgGkKmMpPtTyYzZ0\00", align 1
@program_name = unnamed_addr global i8* null
@.str149 = private constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 8
@.str1150 = private constant [8 x i8] c"/.libs/\00", align 1
@.str2151 = private constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external global i8*
@program_invocation_name = external global i8*
@.str153 = private constant [23 x i8] c"mbsinit (&iter->state)\00", align 1
@.str1154 = private constant [14 x i8] c"lib/mbuiter.h\00", align 1
@__PRETTY_FUNCTION__.3934 = internal constant [19 x i8] c"mbuiter_multi_next\00"
@.str2155 = private constant [23 x i8] c"*iter->cur.ptr == '\5C0'\00", align 1
@.str3156 = private constant [18 x i8] c"iter->cur.wc == 0\00", align 1
@.str4157 = private constant [8 x i8] c"%s (%s)\00", align 1
@.str5158 = private constant [6 x i8] c"UTF-8\00", align 1
@.str6159 = private constant [11 x i8] c"//TRANSLIT\00", align 1
@quoting_style_args = constant [9 x i8*] [i8* getelementptr inbounds ([8 x i8]* @.str161, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str1162, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str2163, i64 0, i64 0), i8* getelementptr in
@.str161 = private constant [8 x i8] c"literal\00", align 1
@.str1162 = private constant [6 x i8] c"shell\00", align 1
@.str2163 = private constant [13 x i8] c"shell-always\00", align 1
@.str3164 = private constant [2 x i8] c"c\00", align 1
@.str4165 = private constant [8 x i8] c"c-maybe\00", align 1
@.str5166 = private constant [7 x i8] c"escape\00", align 1
@.str6167 = private constant [7 x i8] c"locale\00", align 1
@.str7168 = private constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = constant [8 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7], align 32
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 32
@.str8169 = private constant [6 x i8] c"UTF-8\00", align 1
@.str9170 = private constant [4 x i8] c"\E2\80\98\00", align 1
@.str10171 = private constant [4 x i8] c"\E2\80\99\00", align 1
@.str11172 = private constant [8 x i8] c"GB18030\00", align 1
@.str12173 = private constant [4 x i8] c"\A1\07e\00", align 1
@.str13174 = private constant [3 x i8] c"\A1\AF\00", align 1
@.str14175 = private constant [2 x i8] c"\22\00", align 1
@.str15176 = private constant [2 x i8] c"'\00", align 1
@.str16177 = private constant [2 x i8] c"`\00", align 1
@nslots = internal global i32 1
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8]* @slot0, i64 0, i64 0) }, align 16
@slot0 = internal global [256 x i8] zeroinitializer, align 32
@slotvec = internal global %struct.slotvec* @slotvec0
@quote_quoting_options = global %struct.quoting_options { i32 6, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 32
@.str180 = private constant [3 x i8] c"%s\00", align 1
@.str182 = private constant [2 x i8] c".\00", align 1
@.str186 = private constant [23 x i8] c"mbsinit (&iter->state)\00", align 1
@.str1187 = private constant [13 x i8] c"lib/mbiter.h\00", align 1
@__PRETTY_FUNCTION__.3909 = internal constant [18 x i8] c"mbiter_multi_next\00"
@.str2188 = private constant [23 x i8] c"*iter->cur.ptr == '\5C0'\00", align 1
@.str3189 = private constant [18 x i8] c"iter->cur.wc == 0\00", align 1
@.str192 = private constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str1193 = private constant [7 x i8] c"%s %s\0A\00", align 1
@.str2194 = private constant [4 x i8] c"(C)\00", align 1
@.str3195 = private constant [203 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A
@.str4196 = private constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str5197 = private constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str6198 = private constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str7199 = private constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 8
@.str8200 = private constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 8
@.str9201 = private constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 8
@.str10202 = private constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 8
@.str11203 = private constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 8
@.str12204 = private constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 8
@.str13205 = private constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 8
@.str14206 = private constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str15207 = private constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str16208 = private constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str17209 = private constant [14 x i8] c"GNU coreutils\00", align 1
@.str18210 = private constant [39 x i8] c"http://www.gnu.org/software/coreutils/\00", align 8
@.str19211 = private constant [64 x i8] c"General help using GNU software: <http://www.gnu.org/gethelp/>\0A\00", align 8
@version_etc_copyright = constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 32
@.str221 = private constant [17 x i8] c"memory exhausted\00", align 1
@.str1222 = private constant [3 x i8] c"%s\00", align 1
@.str226 = private constant [3 x i8] c"--\00", align 1
@.str1227 = private constant [27 x i8] c"invalid %s%s argument '%s'\00", align 1
@.str2228 = private constant [37 x i8] c"invalid suffix in %s%s argument '%s'\00", align 8
@.str3229 = private constant [29 x i8] c"%s%s argument '%s' too large\00", align 1
@.str231 = private constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 8
@.str1232 = private constant [14 x i8] c"lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.3300 = internal constant [11 x i8] c"xstrtoumax\00"
@.str235 = private constant [13 x i8] c"! close_fail\00", align 1
@.str1236 = private constant [17 x i8] c"lib/chdir-long.c\00", align 1
@__PRETTY_FUNCTION__.3963 = internal constant [9 x i8] c"cdb_free\00"
@.str2237 = private constant [2 x i8] c"/\00", align 1
@.str3238 = private constant [8 x i8] c"0 < len\00", align 1
@__PRETTY_FUNCTION__.3999 = internal constant [11 x i8] c"chdir_long\00"
@.str4239 = private constant [16 x i8] c"PATH_MAX <= len\00", align 1
@.str5240 = private constant [12 x i8] c"*dir != '/'\00", align 1
@.str6241 = private constant [15 x i8] c"dir <= dir_end\00", align 1
@.str7242 = private constant [23 x i8] c"slash - dir < PATH_MAX\00", align 1
@statvfs_works_cache.2085 = internal global i32 -1
@.str244 = private constant [7 x i8] c"2.6.36\00", align 1
@.str246 = private constant [10 x i8] c"/etc/mtab\00", align 1
@.str1247 = private constant [2 x i8] c"r\00", align 1
@.str2248 = private constant [7 x i8] c"autofs\00", align 1
@.str3249 = private constant [5 x i8] c"proc\00", align 1
@.str4250 = private constant [6 x i8] c"subfs\00", align 1
@.str5251 = private constant [8 x i8] c"debugfs\00", align 1
@.str6252 = private constant [7 x i8] c"devpts\00", align 1
@.str7253 = private constant [8 x i8] c"fusectl\00", align 1
@.str8254 = private constant [7 x i8] c"mqueue\00", align 1
@.str9255 = private constant [11 x i8] c"rpc_pipefs\00", align 1
@.str10256 = private constant [6 x i8] c"sysfs\00", align 1
@.str11257 = private constant [6 x i8] c"devfs\00", align 1
@.str12258 = private constant [7 x i8] c"kernfs\00", align 1
@.str13259 = private constant [7 x i8] c"ignore\00", align 1
@.str14260 = private constant [5 x i8] c"none\00", align 1
@.str15261 = private constant [6 x i8] c"smbfs\00", align 1
@.str16262 = private constant [5 x i8] c"cifs\00", align 1
@argmatch_die = global void ()* @__argmatch_die
@.str267 = private constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str1268 = private constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str2269 = private constant [21 x i8] c"Valid arguments are:\00", align 1
@.str3270 = private constant [8 x i8] c"\0A  - %s\00", align 1
@.str4271 = private constant [5 x i8] c", %s\00", align 1
@charset_aliases = internal global i8* null
@.str279 = private constant [14 x i8] c"charset.alias\00", align 1
@.str1280 = private constant [16 x i8] c"CHARSETALIASDIR\00", align 1
@.str2281 = private constant [15 x i8] c"/usr/local/lib\00", align 1
@.str3282 = private constant [1 x i8] zeroinitializer, align 1
@.str4283 = private constant [2 x i8] c"r\00", align 1
@.str5284 = private constant [10 x i8] c"%50s %50s\00", align 1
@.str6285 = private constant [6 x i8] c"ASCII\00", align 1
@.str287 = private constant [23 x i8] c"mbsinit (&iter->state)\00", align 1
@.str1288 = private constant [13 x i8] c"lib/mbiter.h\00", align 1
@__PRETTY_FUNCTION__.3289 = internal constant [18 x i8] c"mbiter_multi_next\00"
@.str2289 = private constant [23 x i8] c"*iter->cur.ptr == '\5C0'\00", align 1
@.str3290 = private constant [18 x i8] c"iter->cur.wc == 0\00", align 1
@.str293 = private constant [23 x i8] c"mbsinit (&iter->state)\00", align 1
@.str1294 = private constant [14 x i8] c"lib/mbuiter.h\00", align 1
@__PRETTY_FUNCTION__.3813 = internal constant [19 x i8] c"mbuiter_multi_next\00"
@.str2295 = private constant [23 x i8] c"*iter->cur.ptr == '\5C0'\00", align 1
@.str3296 = private constant [18 x i8] c"iter->cur.wc == 0\00", align 1
@.str301 = private constant [23 x i8] c"mbsinit (&iter->state)\00", align 1
@.str1302 = private constant [14 x i8] c"lib/mbuiter.h\00", align 1
@__PRETTY_FUNCTION__.3802 = internal constant [19 x i8] c"mbuiter_multi_next\00"
@.str2303 = private constant [23 x i8] c"*iter->cur.ptr == '\5C0'\00", align 1
@.str3304 = private constant [18 x i8] c"iter->cur.wc == 0\00", align 1
@have_dupfd_cloexec.2627 = internal global i32 0
@mmalloca_results = internal global [257 x i8*] zeroinitializer, align 32
@is_basic_table = constant [8 x i32] [i32 6656, i32 -17, i32 -2, i32 2147483646, i32 0, i32 0, i32 0, i32 0], align 32
@.str324 = private constant [23 x i8] c"mbsinit (&iter->state)\00", align 1
@.str1325 = private constant [14 x i8] c"lib/mbuiter.h\00", align 1
@__PRETTY_FUNCTION__.3802326 = internal constant [19 x i8] c"mbuiter_multi_next\00"
@.str2327 = private constant [23 x i8] c"*iter->cur.ptr == '\5C0'\00", align 1
@.str3328 = private constant [18 x i8] c"iter->cur.wc == 0\00", align 1
@.str335 = private constant [7 x i8] c"(NULL)\00", align 1
@wide_null_string.1937 = internal constant [7 x i32] [i32 40, i32 78, i32 85, i32 76, i32 76, i32 41, i32 0]
@__evoke_link_warning___fpending = internal constant [167 x i8] c"This version of __fpending returns bytes remaining in buffer for both narrow and wide streams.  glibc's version returns wide chars in buffer for the wide stream case.\00", section ".gnu.wa
@llvm.used = appending global [1 x i8*] [i8* getelementptr inbounds ([167 x i8]* @__evoke_link_warning___fpending, i64 0, i64 0)], section "llvm.metadata"
@__libc_stack_end = global i8* null
@__uclibc_progname = hidden global i8* getelementptr inbounds ([1 x i8]* @.str101, i64 0, i64 0)
@.str101 = private constant [1 x i8] zeroinitializer, align 1
@__environ = global i8** null
@__pagesize = global i64 0
@.str1102 = private constant [10 x i8] c"/dev/null\00", align 1
@been_there_done_that.2848 = internal global i32 0
@__app_fini = hidden global void ()* null
@__rtld_fini = hidden global void ()* null
@been_there_done_that = internal global i32 0
@__dso_handle = extern_weak global i8*
@.str107 = private constant [4 x i8] c" \09\0A\00", align 1
@.str1108 = private constant [1 x i8] zeroinitializer, align 1
@buff.2072 = internal global i8* null
@mnt.2073 = internal global %struct.mntent zeroinitializer
@.str2109 = private constant [19 x i8] c"%s %s %s %s %d %d\0A\00", align 1
@error_message_count = global i32 0
@.str113 = private constant [5 x i8] c": %s\00", align 1
@error_one_per_line = common global i32 0
@old_line_number.2047 = internal global i32 0
@old_file_name.2046 = internal global i8* null
@.str1114 = private constant [8 x i8] c"%s:%d: \00", align 1
@__exit_cleanup = hidden global void (i32)* null
@optind = unnamed_addr global i32 1
@opterr = global i32 1
@optopt = global i32 63
@.str134 = private constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str1135 = private constant [3 x i8] c"--\00", align 1
@.str2136 = private constant [30 x i8] c"%s: option `%s' is ambiguous\0A\00", align 1
@.str3137 = private constant [45 x i8] c"%s: option `--%s' doesn't allow an argument\0A\00", align 8
@.str4138 = private constant [45 x i8] c"%s: option `%c%s' doesn't allow an argument\0A\00", align 8
@.str5139 = private constant [38 x i8] c"%s: option `%s' requires an argument\0A\00", align 8
@.str6140 = private constant [32 x i8] c"%s: unrecognized option `--%s'\0A\00", align 8
@.str7141 = private constant [32 x i8] c"%s: unrecognized option `%c%s'\0A\00", align 8
@.str8142 = private constant [1 x i8] zeroinitializer, align 1
@.str9143 = private constant [26 x i8] c"%s: illegal option -- %c\0A\00", align 1
@.str10144 = private constant [26 x i8] c"%s: invalid option -- %c\0A\00", align 1
@.str11145 = private constant [39 x i8] c"%s: option requires an argument -- %c\0A\00", align 8
@getopt_data = internal global %struct._getopt_data zeroinitializer, align 32
@optarg = common unnamed_addr global i8* null
@static_fd = internal global i32 -1
@default_file_name = internal constant [14 x i8] c"/var/run/utmp\00"
@static_ut_name = internal global i8* getelementptr inbounds ([14 x i8]* @default_file_name, i64 0, i64 0)
@static_utmp = internal global %struct.utmp zeroinitializer, align 32
@decpt = internal constant [2 x i8] c".\00"
@the_lconv = internal global %struct.lconv zeroinitializer, align 32
@mbstate.2221 = internal global %struct.__mbstate_t zeroinitializer
@nl_data = internal constant [417 x i8] c"\00\0B\0E$VVZ\00\02\04\06\08\0A\0C\0E\10\12\14\1A\1B\1B\1B\1B\1B\1B\1B\1B\1B\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1E $(,048<CJR\5Celuy}\81\85\89\8D\91\95\99\9D\A1\A5\AD6<BFKPWair{~\81\96\9F\A8\B3\B3\B3\B3\B3
@C_string = internal constant [2 x i8] c"C\00"
@.str164 = private constant [6 x i8] c"POSIX\00", align 1
@.str168 = private constant [13 x i8] c"/proc/mounts\00", align 1
@.str1169 = private constant [2 x i8] c"r\00", align 1
@.str2170 = private constant [10 x i8] c"/etc/mtab\00", align 1
@.str3171 = private constant [3 x i8] c"ro\00", align 1
@.str4172 = private constant [7 x i8] c"nosuid\00", align 1
@.str5173 = private constant [7 x i8] c"noexec\00", align 1
@.str6174 = private constant [6 x i8] c"nodev\00", align 1
@.str7175 = private constant [5 x i8] c"sync\00", align 1
@.str8176 = private constant [5 x i8] c"mand\00", align 1
@.str9177 = private constant [8 x i8] c"noatime\00", align 1
@.str10178 = private constant [11 x i8] c"nodiratime\00", align 1
@.str11179 = private constant [2 x i8] c",\00", align 1
@_stdio_streams = internal global [3 x %4] [%4 { i16 544, [2 x i8] zeroinitializer, i32 0, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1), [2 x i32] zeroinitializer, %struc
@stdin = global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0)
@stdout = unnamed_addr global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1)
@stderr = unnamed_addr global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 2)
@__stdin = global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0)
@__stdout = global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1)
@_stdio_openlist = global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0)
@errno = global i32 0
@h_errno = global i32 0
@desc2flag = internal constant [13 x i16] [i16 0, i16 2048, i16 4, i16 256, i16 512, i16 8, i16 128, i16 2, i16 64, i16 1024, i16 32, i16 1, i16 16], align 16
@mbstate.2222 = internal global %struct.__mbstate_t zeroinitializer
@mbstate.2221221 = internal global %struct.__mbstate_t zeroinitializer
@buf.1212 = internal global [50 x i8] zeroinitializer
@spec_base.3674 = internal constant [7 x i8] c"\10\10\10\08\0A\0A\0A"
@.str232 = private constant [6 x i8] c"(nil)\00", align 1
@.str1233 = private constant [7 x i8] c"(null)\00", align 1
@prefix.3675 = internal constant [12 x i8] c"+\00-\00 \000x\000X\00"
@__C_ctype_b_data = constant [384 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i1
@__C_ctype_b = global i16* getelementptr inbounds ([384 x i16]* @__C_ctype_b_data, i64 0, i64 128)
@__ctype_b = global i16* getelementptr inbounds ([384 x i16]* @__C_ctype_b_data, i64 0, i64 128)
@spec_base = internal constant [15 x i8] c"\10\10\10\08\0A\0A\00\0A\0A\0A\0A\0A\0A\0A\0A"
@nil_string = internal constant [6 x i8] c"(nil)\00"
@nan_inf_str.3836 = internal constant [11 x i8] c"an\00nfinity\00"
@__exit_count = hidden global i32 0
@__exit_function_table = hidden global %struct.exit_function* null
@__exit_slots = hidden global i32 0
@decpt_str = internal constant [2 x i8] c".\00"
@spec_flags = internal constant [4 x i8] c"*'I\00"
@spec_chars = internal constant [23 x i8] c"npxXoudifFeEgGaACSncs[\00", align 16
@qual_chars = internal constant [18 x i8] c"hlLjztq\00\02\04\08\04\04\04\08\00\01\08", align 16
@spec_ranges = internal constant [8 x i8] c"\00\01\07\0F\10\12\13\15"
@spec_allowed = internal constant [8 x i16] [i16 31, i16 16, i16 127, i16 124, i16 16, i16 144, i16 20, i16 148], align 16
@unknown.1225 = internal constant [14 x i8] c"Unknown error "
@fmt = internal constant [20 x i8] c"inf\00INF\00nan\00NAN\00.\00,\00", align 16
@exp10_table = internal constant [13 x x86_fp80] [x86_fp80 0xK4002A000000000000000, x86_fp80 0xK4005C800000000000000, x86_fp80 0xK400C9C40000000000000, x86_fp80 0xK4019BEBC200000000000, x86_fp80 0xK40348E1BC9BF04000000, x86_fp80 0xK40699DC5ADA82B70B59E, 
@type_codes = internal constant [12 x i16] [i16 8, i16 5, i16 3, i16 4, i16 1, i16 512, i16 0, i16 1024, i16 2048, i16 2, i16 7, i16 2055], align 16
@type_sizes = internal constant [12 x i8] c"\00\01\01\01\04\02\01\01\01\01\01\01"
@spec_flags.3665 = internal constant [8 x i8] c" +0-#'I\00"
@qual_chars.3670 = internal constant [20 x i8] c"hlLjztqZ\00\02\04\08\04\04\04\08\04\00\01\08"
@spec_chars.3666 = internal constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@spec_ranges.3667 = internal constant [9 x i8] c"\00\01\07\0F\10\11\12\13\14"
@spec_or_mask.3668 = internal constant [8 x i16] [i16 4096, i16 5, i16 0, i16 7, i16 2, i16 4, i16 1, i16 3]
@spec_and_mask.3669 = internal constant [8 x i16] [i16 7936, i16 5, i16 3840, i16 2055, i16 2, i16 4, i16 1, i16 3]
@nan_inf_str.2180 = internal constant [21 x i8] c"\05nan\00\0Ainfinity\00\05inf\00\00"
@_string_syserrmsgs = hidden constant [2906 x i8] c"Success\00Operation not permitted\00No such file or directory\00No such process\00Interrupted system call\00Input/output error\00No such device or address\00Argument list too long\00Exec format error\00
@__C_ctype_tolower_data = constant [384 x i16] [i16 -128, i16 -127, i16 -126, i16 -125, i16 -124, i16 -123, i16 -122, i16 -121, i16 -120, i16 -119, i16 -118, i16 -117, i16 -116, i16 -115, i16 -114, i16 -113, i16 -112, i16 -111, i16 -110, i16 -109, i16 -1
@__C_ctype_tolower = global i16* getelementptr inbounds ([384 x i16]* @__C_ctype_tolower_data, i64 0, i64 128)
@__ctype_tolower = global i16* getelementptr inbounds ([384 x i16]* @__C_ctype_tolower_data, i64 0, i64 128)
@.str271 = private constant [16 x i8] c"klee_init_env.c\00", align 1
@.str1272 = private constant [9 x i8] c"user.err\00", align 1
@.str2273 = private constant [24 x i8] c"invalid escape sequence\00", align 1
@.str3274 = private constant [37 x i8] c"too many arguments for klee_init_env\00", align 8
@.str5275 = private constant [7 x i8] c"--help\00", align 1
@.str6276 = private constant [593 x i8] c"klee_init_env\0A\0Ausage: (klee_init_env) [options] [program arguments]\0A  -sym-arg <N>              - Replace by a symbolic argument with length N\0A  -sym-args <MIN> <MAX> <N> - Replace by at least MIN argumen
@.str7277 = private constant [10 x i8] c"--sym-arg\00", align 1
@.str8278 = private constant [9 x i8] c"-sym-arg\00", align 1
@.str9279 = private constant [48 x i8] c"--sym-arg expects an integer argument <max-len>\00", align 8
@.str10280 = private constant [11 x i8] c"--sym-args\00", align 1
@.str11281 = private constant [10 x i8] c"-sym-args\00", align 1
@.str12282 = private constant [77 x i8] c"--sym-args expects three integer arguments <min-argvs> <max-argvs> <max-len>\00", align 8
@.str13283 = private constant [7 x i8] c"n_args\00", align 1
@.str14284 = private constant [12 x i8] c"--sym-files\00", align 1
@.str15285 = private constant [11 x i8] c"-sym-files\00", align 1
@.str16286 = private constant [72 x i8] c"--sym-files expects two integer arguments <no-sym-files> <sym-file-len>\00", align 8
@.str17287 = private constant [13 x i8] c"--sym-stdout\00", align 1
@.str18288 = private constant [12 x i8] c"-sym-stdout\00", align 1
@.str19289 = private constant [18 x i8] c"--save-all-writes\00", align 1
@.str20290 = private constant [17 x i8] c"-save-all-writes\00", align 1
@.str21291 = private constant [10 x i8] c"--fd-fail\00", align 1
@.str22292 = private constant [9 x i8] c"-fd-fail\00", align 1
@.str23293 = private constant [11 x i8] c"--max-fail\00", align 1
@.str24294 = private constant [10 x i8] c"-max-fail\00", align 1
@.str25295 = private constant [54 x i8] c"--max-fail expects an integer argument <max-failures>\00", align 8
@.str26296 = private constant [14 x i8] c"--sym-streams\00", align 1
@.str27297 = private constant [13 x i8] c"-sym-streams\00", align 1
@.str28298 = private constant [76 x i8] c"--sym-streams expects two integer arguments <no-streams> <bytes-per-stream>\00", align 8
@.str29299 = private constant [16 x i8] c"--sym-datagrams\00", align 1
@.str30300 = private constant [15 x i8] c"-sym-datagrams\00", align 1
@.str31301 = private constant [82 x i8] c"--sym-datagrams expects two integer arguments <no-datagrams> <bytes-per-datagram>\00", align 8
@.str32302 = private constant [19 x i8] c"--one-line-streams\00", align 1
@.str33303 = private constant [18 x i8] c"-one-line-streams\00", align 1
@.str34304 = private constant [15 x i8] c"--fill-streams\00", align 1
@.str35305 = private constant [14 x i8] c"-fill-streams\00", align 1
@.str36306 = private constant [121 x i8] c"--fill-streams expects arguments <offset> \22set\22 <length> <value> or <offset> \22copy\22 <string> or <offset> \22file\22 <string>\00", align 8
@.str37307 = private constant [32 x i8] c"--fill-streams: too many blocks\00", align 8
@.str38308 = private constant [4 x i8] c"set\00", align 1
@.str39309 = private constant [5 x i8] c"copy\00", align 1
@.str40310 = private constant [5 x i8] c"file\00", align 1
@.str41311 = private constant [17 x i8] c"--fill-datagrams\00", align 1
@.str42312 = private constant [16 x i8] c"-fill-datagrams\00", align 1
@.str43313 = private constant [95 x i8] c"--fill-datagrams expects arguments <offset> \22set\22 <length> <value> or <offset> \22copy\22 <string>\00", align 8
@.str44314 = private constant [34 x i8] c"--fill-datagrams: too many blocks\00", align 8
@.str316 = private constant [18 x i8] c"ignoring (ENOMEM)\00", align 1
@.str1317 = private constant [18 x i8] c"ignoring (EACCES)\00", align 1
@.str2318 = private constant [17 x i8] c"ignoring (EPERM)\00", align 1
@.str3319 = private constant [10 x i8] c"illegal.c\00", align 1
@.str4320 = private constant [20 x i8] c"longjmp unsupported\00", align 1
@.str5321 = private constant [8 x i8] c"xxx.err\00", align 1
@.str6322 = private constant [9 x i8] c"ignoring\00", align 1
@.str325 = private constant [18 x i8] c"ignoring (ENOENT)\00", align 1
@.str1326 = private constant [32 x i8] c"symbolic file, ignoring (EBADF)\00", align 8
@.str2328 = private constant [33 x i8] c"symbolic file, ignoring (EINVAL)\00", align 8
@.str3329 = private constant [54 x i8] c"futimens: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str4330 = private constant [32 x i8] c"symbolic file, ignoring (EPERM)\00", align 8
@.str5331 = private constant [33 x i8] c"symbolic file, ignoring (ENOENT)\00", align 8
@.str6332 = private constant [41 x i8] c"(TCGETS) symbolic file, incomplete model\00", align 8
@.str7333 = private constant [42 x i8] c"(TCSETS) symbolic file, silently ignoring\00", align 8
@.str8334 = private constant [43 x i8] c"(TCSETSW) symbolic file, silently ignoring\00", align 8
@.str9335 = private constant [43 x i8] c"(TCSETSF) symbolic file, silently ignoring\00", align 8
@.str10336 = private constant [45 x i8] c"(TIOCGWINSZ) symbolic file, incomplete model\00", align 8
@.str11337 = private constant [46 x i8] c"(TIOCSWINSZ) symbolic file, ignoring (EINVAL)\00", align 8
@.str12338 = private constant [43 x i8] c"(FIONREAD) symbolic file, incomplete model\00", align 8
@.str13339 = private constant [44 x i8] c"(MTIOCGET) symbolic file, ignoring (EINVAL)\00", align 8
@n_calls.5871 = internal global i32 0
@.str14340 = private constant [52 x i8] c"getdents called on symbolic file, ignoring (EINVAL)\00", align 8
@.str15341 = private constant [18 x i8] c"s != (off64_t) -1\00", align 1
@.str16342 = private constant [5 x i8] c"fd.c\00", align 1
@__PRETTY_FUNCTION__.6593 = internal constant [14 x i8] c"__fd_getdents\00"
@.str17343 = private constant [2 x i8] c"0\00", align 1
@__PRETTY_FUNCTION__.7291 = internal constant [18 x i8] c"__fd_gather_write\00", align 16
@.str18344 = private constant [23 x i8] c"write() ignores bytes.\00", align 1
@.str19345 = private constant [57 x i8] c"scatter read malfunctions when provided a symbolic iovec\00", align 8
@.str20346 = private constant [12 x i8] c"f->off >= 0\00", align 1
@__PRETTY_FUNCTION__.7229 = internal constant [18 x i8] c"__fd_scatter_read\00", align 16
@.str21347 = private constant [33 x i8] c"0 && \22unable to allocate memory\22\00", align 8
@.str22348 = private constant [11 x i8] c"readv data\00", align 1
@.str23349 = private constant [47 x i8] c"KLEE: MODEL: pipe: returning {%d,%d}->{%d,%d}\0A\00", align 8
@UseConcretePath = common global i8 0
@.str24350 = private constant [32 x i8] c"ZEST: opening symbolic file %s\0A\00", align 8
@.str25351 = private constant [6 x i8] c".test\00", align 1
@.str26352 = private constant [40 x i8] c"ZEST: opening symbolic file (.test) %s\0A\00", align 8
@.str27353 = private constant [32 x i8] c"ZEST: opening concrete file %s\0A\00", align 8
@.str28354 = private constant [40 x i8] c"utime: symbolic file, ignoring (ENOENT)\00", align 8
@.str29355 = private constant [41 x i8] c"utimes: symbolic file, ignoring (ENOENT)\00", align 8
@.str30356 = private constant [52 x i8] c"openat: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str31357 = private constant [42 x i8] c"symlink: symbolic path, ignoring (ENOENT)\00", align 8
@.str32358 = private constant [39 x i8] c"link: symbolic path, ignoring (ENOENT)\00", align 8
@.str33359 = private constant [44 x i8] c"futimesat: symbolic path, ignoring (ENOENT)\00", align 8
@.str34360 = private constant [55 x i8] c"futimesat: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str35361 = private constant [43 x i8] c"unlinkat: symbolic path, ignoring (ENOENT)\00", align 8
@.str36362 = private constant [54 x i8] c"unlinkat: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str37363 = private constant [42 x i8] c"fstatat: symbolic path, ignoring (ENOENT)\00", align 8
@.str38364 = private constant [53 x i8] c"fstatat: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@n_calls.7064 = internal global i32 0
@n_calls.6554 = internal global i32 0
@.str39365 = private constant [30 x i8] c"symbolic file, ignoring (EIO)\00", align 1
@.str40366 = private constant [18 x i8] c"new_off == f->off\00", align 1
@__PRETTY_FUNCTION__.6098 = internal constant [11 x i8] c"__fd_lseek\00"
@n_calls.5974 = internal global i32 0
@n_calls.5898 = internal global i32 0
@__PRETTY_FUNCTION__.5902 = internal constant [5 x i8] c"read\00"
@.str41367 = private constant [10 x i8] c"read data\00", align 1
@.str42368 = private constant [43 x i8] c"mmap_simple: unable to read requested size\00", align 8
@.str43369 = private constant [18 x i8] c"mmap_simple: read\00", align 1
@.str44370 = private constant [30 x i8] c"mmap64: unsupported mmap call\00", align 1
@n_calls.6299 = internal global i32 0
@n_calls.6276 = internal global i32 0
@n_calls.6018 = internal global i32 0
@.str45371 = private constant [5 x i8] c"cbuf\00", align 1
@__PRETTY_FUNCTION__.6022 = internal constant [6 x i8] c"write\00"
@.str46372 = private constant [7 x i8] c"r >= 0\00", align 1
@.str47373 = private constant [33 x i8] c"WARNING: write() ignores bytes.\0A\00", align 8
@.str48374 = private constant [47 x i8] c"Undefined call to open(): O_EXCL w/o O_RDONLY\0A\00", align 8
@.str49375 = private constant [15 x i8] c"/proc/self/fd/\00", align 1
@.str50376 = private constant [1 x i8] zeroinitializer, align 1
@.str51377 = private constant [19 x i8] c"/proc/self/fd/%d%s\00", align 1
@.str52378 = private constant [44 x i8] c"symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str397 = private constant [19 x i8] c"(f->foreign)->addr\00", align 1
@.str1398 = private constant [14 x i8] c"sockets.c.inc\00", align 1
@__PRETTY_FUNCTION__.7471 = internal constant [18 x i8] c"__fd_attach_dgram\00", align 16
@.str2399 = private constant [26 x i8] c"0 && \22unsupported domain\22\00", align 1
@dummy_dfile = internal global %struct.exe_disk_file_t zeroinitializer, align 32
@.str3400 = private constant [31 x i8] c"cap_get_file: ignoring (EPERM)\00", align 8
@.str4401 = private constant [17 x i8] c"ignoring (EPERM)\00", align 1
@.str5402 = private constant [25 x i8] c"0 && \22not supported yet\22\00", align 1
@__PRETTY_FUNCTION__.7439 = internal constant [13 x i8] c"__fd_recvmsg\00"
@.str6403 = private constant [28 x i8] c"flags is not zero, ignoring\00", align 1
@__PRETTY_FUNCTION__.7339 = internal constant [13 x i8] c"__fd_sendmsg\00"
@.str7404 = private constant [17 x i8] c"f->foreign->addr\00", align 1
@__PRETTY_FUNCTION__.7179 = internal constant [12 x i8] c"getpeername\00"
@.str8405 = private constant [14 x i8] c"f->local.addr\00", align 1
@__PRETTY_FUNCTION__.7141 = internal constant [12 x i8] c"getsockname\00"
@__PRETTY_FUNCTION__.6905 = internal constant [8 x i8] c"connect\00"
@.str9406 = private constant [505 x i8] c"((((f->foreign)->addr) ? (void) (0) : __assert_fail (\22(f->foreign)->addr\22, \22sockets.c.inc\22, 337, __PRETTY_FUNCTION__)), ( ((struct sockaddr *)((f->foreign)->addr))->sa_family == 2 ? ((struct sockaddr_in *
@__PRETTY_FUNCTION__.6833 = internal constant [5 x i8] c"bind\00"
@.str11407 = private constant [48 x i8] c"Calling rename with possibly symbolic arguments\00", align 8
@.str12408 = private constant [2 x i8] c"a\00", align 1
@__PRETTY_FUNCTION__.6681 = internal constant [20 x i8] c"__allocate_sockaddr\00", align 16
@.str13409 = private constant [25 x i8] c"No more symbolic streams\00", align 1
@.str14410 = private constant [25 x i8] c"No more file descriptors\00", align 1
@.str15411 = private constant [24 x i8] c"unsupported socket type\00", align 1
@.str16412 = private constant [28 x i8] c"unsupported socket protocol\00", align 1
@.str17413 = private constant [20 x i8] c"ignoring setsockopt\00", align 1
@.str18414 = private constant [20 x i8] c"ignoring getsockopt\00", align 1
@.str19415 = private constant [46 x i8] c"__socketcall(type=%d: unknown): errno=ENOSYS\0A\00", align 8
@.str20416 = private constant [18 x i8] c"silently ignoring\00", align 1
@__exe_env = global %struct.exe_sym_env_t { [32 x %struct.exe_file_t] [%struct.exe_file_t { i32 0, i32 5, i64 0, %struct.exe_disk_file_t* null, %struct.exe_sockaddr_t zeroinitializer, %struct.exe_sockaddr_t* null, i32 0 }, %struct.exe_file_t { i32 1, i32
@.str423 = private constant [37 x i8] c"s >= 0 && \22unable to open fill file\22\00", align 8
@.str1424 = private constant [10 x i8] c"fd_init.c\00", align 1
@__PRETTY_FUNCTION__.5216 = internal constant [14 x i8] c"__fill_blocks\00"
@.str2425 = private constant [62 x i8] c"dfile->size >= p->offset + s && \22fill file to big for socket\22\00", align 8
@.str3426 = private constant [27 x i8] c"0 && \22unknown fill method\22\00", align 1
@.str4427 = private constant [6 x i8] c"-stat\00", align 1
@.str5428 = private constant [17 x i8] c"contents || size\00", align 1
@__PRETTY_FUNCTION__.5290 = internal constant [19 x i8] c"__create_new_dfile\00", align 16
@.str6429 = private constant [22 x i8] c"-1 != stat64(name, s)\00", align 1
@.str7430 = private constant [34 x i8] c"-1 != stat64(name, &originalStat)\00", align 8
@.str8431 = private constant [5 x i8] c"-src\00", align 1
@.str9432 = private constant [2 x i8] c".\00", align 1
@__exe_fs = common global %struct.exe_file_system_t zeroinitializer, align 32
@__stream_fill_info = internal global %struct.fill_info_t* null
@__n_stream_fill_info = internal global i32 0
@__dgram_fill_info = internal global %struct.fill_info_t* null
@__n_dgram_fill_info = internal global i32 0
@.str13434 = private constant [6 x i8] c"stdin\00", align 1
@.str14435 = private constant [10 x i8] c"read_fail\00", align 1
@.str15436 = private constant [11 x i8] c"write_fail\00", align 1
@.str16437 = private constant [11 x i8] c"close_fail\00", align 1
@.str17438 = private constant [15 x i8] c"ftruncate_fail\00", align 1
@.str18439 = private constant [12 x i8] c"getcwd_fail\00", align 1
@.str19440 = private constant [7 x i8] c"stdout\00", align 1
@.str20441 = private constant [14 x i8] c"model_version\00", align 1
@.str21442 = private constant [37 x i8] c"malloc returned NULL for sym_streams\00", align 8
@.str22443 = private constant [36 x i8] c"malloc returned NULL for sym_dgrams\00", align 8
@.str446 = private constant [8 x i8] c"IGNORED\00", align 1
@.str1447 = private constant [16 x i8] c"overshift error\00", align 1
@.str2448 = private constant [14 x i8] c"overshift.err\00", align 1
@.str450 = private constant [5 x i8] c"argv\00", align 1
@.str452 = private constant [22 x i8] c"klee_div_zero_check.c\00", align 1
@.str1453 = private constant [15 x i8] c"divide by zero\00", align 1
@.str2454 = private constant [8 x i8] c"div.err\00", align 1
@.str456 = private constant [13 x i8] c"klee_range.c\00", align 1
@.str1457 = private constant [14 x i8] c"invalid range\00", align 1
@.str2458 = private constant [5 x i8] c"user\00", align 1

@fgetc_unlocked = alias i32 (%4*)* @__fgetc_unlocked
@getc_unlocked = alias i32 (%4*)* @__fgetc_unlocked
@fgetc = alias i32 (%4*)* @__fgetc_unlocked
@getc = alias i32 (%4*)* @__fgetc_unlocked
@fputc_unlocked = alias i32 (i32, %4*)* @__fputc_unlocked
@putc_unlocked = alias i32 (i32, %4*)* @__fputc_unlocked
@fputc = alias i32 (i32, %4*)* @__fputc_unlocked
@putc = alias i32 (i32, %4*)* @__fputc_unlocked
@environ = alias weak i8*** @__environ
@error = alias weak void (i32, i32, i8*, ...)* @__error
@error_at_line = alias weak void (i32, i32, i8*, i32, i8*, ...)* @__error_at_line
@ferror = alias i32 (%4*)* @ferror_unlocked
@fflush = alias i32 (%4*)* @fflush_unlocked
@fileno = alias i32 (%4*)* @fileno_unlocked
@fputs = alias i32 (i8*, %4*)* @fputs_unlocked
@fseeko = alias i32 (%4*, i64, i32)* @fseek
@fwrite = alias i64 (i8*, i64, i64, %4*)* @fwrite_unlocked
@putchar = alias i32 (i32)* @putchar_unlocked
@strcoll = alias i32 (i8*, i8*)* @strcmp
@strtoumax = alias i64 (i8*, i8**, i32)* @strtoul
@strtoull = alias i64 (i8*, i8**, i32)* @strtoul
@fgets = alias i8* (i8*, i32, %4*)* @fgets_unlocked
@raise = alias weak i32 (i32)* @__raise
@sigaction = alias weak i32 (i32, %struct.sigaction*, %struct.sigaction*)* @__libc_sigaction
@strerror_r = alias weak i32 (i32, i8*, i64)* @__xpg_strerror_r
@strtoimax = alias i64 (i8*, i8**, i32)* @strtol
@strtoll = alias i64 (i8*, i8**, i32)* @strtol
@__getdents = alias i64 (i32, %struct.dirent*, i64)* @getdents

define internal i32 @klee_get_true() nounwind noinline {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 1, i32* %0, align 4
  %1 = load i32* %0, align 4
  store i32 %1, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define internal i32 @klee_get_false() nounwind noinline {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 0, i32* %0, align 4
  %1 = load i32* %0, align 4
  store i32 %1, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

declare i64 @klee_change(i64, i64) nounwind noinline

define internal i8* @hide_problematic_chars(i8* %cell) nounwind {
entry:
  %cell_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %cell, i8** %cell_addr
  %1 = load i8** %cell_addr, align 8
  store i8* %1, i8** %p, align 8
  br label %bb3

bb:                                               ; preds = %bb3
  %2 = call i16** @__ctype_b_loc() nounwind readnone
  %3 = load i16** %2, align 8
  %4 = load i8** %p, align 8
  %5 = load i8* %4, align 1
  %6 = sext i8 %5 to i32
  %7 = trunc i32 %6 to i8
  %8 = call zeroext i8 @to_uchar(i8 signext %7) nounwind
  %9 = zext i8 %8 to i32
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i16* %3, i64 %10
  %12 = load i16* %11, align 1
  %13 = zext i16 %12 to i32
  %14 = and i32 %13, 2
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %16 = load i8** %p, align 8
  store i8 63, i8* %16, align 1
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %17 = load i8** %p, align 8
  %18 = getelementptr inbounds i8* %17, i64 1
  store i8* %18, i8** %p, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %entry
  %19 = load i8** %p, align 8
  %20 = load i8* %19, align 1
  %21 = icmp ne i8 %20, 0
  br i1 %21, label %bb, label %bb4

bb4:                                              ; preds = %bb3
  %22 = load i8** %cell_addr, align 8
  store i8* %22, i8** %0, align 8
  %23 = load i8** %0, align 8
  store i8* %23, i8** %retval, align 8
  %retval5 = load i8** %retval
  ret i8* %retval5
}

declare i16** @__ctype_b_loc() nounwind readnone

define internal zeroext i8 @to_uchar(i8 signext %ch) nounwind inlinehint {
entry:
  %ch_addr = alloca i8, align 1
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8 %ch, i8* %ch_addr
  %1 = load i8* %ch_addr, align 1
  %2 = zext i8 %1 to i32
  store i32 %2, i32* %0, align 4
  %3 = load i32* %0, align 4
  store i32 %3, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define internal void @alloc_table_row() nounwind {
entry:
  %0 = load i64* @nrows, align 8
  %1 = add i64 %0, 1
  store i64 %1, i64* @nrows, align 8
  %2 = load i64* @nrows, align 8
  %3 = load i8**** @table, align 8
  %4 = bitcast i8*** %3 to i8*
  %5 = call i8* @xnrealloc(i8* %4, i64 %2, i64 8) nounwind
  %6 = bitcast i8* %5 to i8***
  store i8*** %6, i8**** @table, align 8
  %7 = load i8**** @table, align 8
  %8 = load i64* @nrows, align 8
  %9 = sub i64 %8, 1
  %10 = load i64* @ncolumns, align 8
  %11 = call noalias i8* @xnmalloc(i64 %10, i64 8) nounwind
  %12 = bitcast i8* %11 to i8**
  %13 = getelementptr inbounds i8*** %7, i64 %9
  store i8** %12, i8*** %13, align 1
  ret void
}

define internal void @print_table() nounwind {
entry:
  %iftmp.44 = alloca i8*
  %row = alloca i64
  %col = alloca i64
  %cell = alloca i8*
  %flags = alloca i32
  %width = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 0, i64* %row, align 8
  br label %bb11

bb:                                               ; preds = %bb11
  store i64 0, i64* %col, align 8
  br label %bb9

bb1:                                              ; preds = %bb9
  %0 = load i8**** @table, align 8
  %1 = load i64* %row, align 8
  %2 = getelementptr inbounds i8*** %0, i64 %1
  %3 = load i8*** %2, align 1
  %4 = load i64* %col, align 8
  %5 = getelementptr inbounds i8** %3, i64 %4
  %6 = load i8** %5, align 1
  store i8* %6, i8** %cell, align 8
  %7 = load i64* %col, align 8
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %9 = call i32 @putchar_unlocked(i32 32) nounwind
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  store i32 0, i32* %flags, align 4
  %10 = load i64* @ncolumns, align 8
  %11 = sub i64 %10, 1
  %12 = load i64* %col, align 8
  %13 = icmp eq i64 %11, %12
  br i1 %13, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 8, i32* %flags, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %14 = load %struct.field_data_t*** @columns, align 8
  %15 = load i64* %col, align 8
  %16 = getelementptr inbounds %struct.field_data_t** %14, i64 %15
  %17 = load %struct.field_data_t** %16, align 1
  %18 = getelementptr inbounds %struct.field_data_t* %17, i32 0, i32 4
  %19 = load i64* %18, align 8
  store i64 %19, i64* %width, align 8
  %20 = load %struct.field_data_t*** @columns, align 8
  %21 = load i64* %col, align 8
  %22 = getelementptr inbounds %struct.field_data_t** %20, i64 %21
  %23 = load %struct.field_data_t** %22, align 1
  %24 = getelementptr inbounds %struct.field_data_t* %23, i32 0, i32 5
  %25 = load i32* %24, align 8
  %26 = load i8** %cell, align 8
  %27 = load i32* %flags, align 4
  %28 = call i8* @ambsalign(i8* %26, i64* %width, i32 %25, i32 %27) nounwind
  store i8* %28, i8** %cell, align 8
  %29 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %30 = load i8** %cell, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %32 = load i8**** @table, align 8
  %33 = load i64* %row, align 8
  %34 = getelementptr inbounds i8*** %32, i64 %33
  %35 = load i8*** %34, align 1
  %36 = load i64* %col, align 8
  %37 = getelementptr inbounds i8** %35, i64 %36
  %38 = load i8** %37, align 1
  store i8* %38, i8** %iftmp.44, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  %39 = load i8** %cell, align 8
  store i8* %39, i8** %iftmp.44, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %40 = load i8** %iftmp.44, align 8
  %41 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %40, %struct.FILE* noalias %29) nounwind
  %42 = load i8** %cell, align 8
  call void @free(i8* %42) nounwind
  %43 = load i64* %col, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %col, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb
  %45 = load i64* @ncolumns, align 8
  %46 = load i64* %col, align 8
  %47 = icmp ult i64 %46, %45
  br i1 %47, label %bb1, label %bb10

bb10:                                             ; preds = %bb9
  %48 = call i32 @putchar_unlocked(i32 10) nounwind
  %49 = load i64* %row, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %row, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %entry
  %51 = load i64* @nrows, align 8
  %52 = load i64* %row, align 8
  %53 = icmp ult i64 %52, %51
  br i1 %53, label %bb, label %return

return:                                           ; preds = %bb11
  ret void
}

declare void @free(i8*) nounwind

define internal void @alloc_field(i32 %f, i8* %c) nounwind {
entry:
  %f_addr = alloca i32, align 4
  %c_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %f, i32* %f_addr
  store i8* %c, i8** %c_addr
  %0 = load i64* @ncolumns, align 8
  %1 = add i64 %0, 1
  store i64 %1, i64* @ncolumns, align 8
  %2 = load i64* @ncolumns, align 8
  %3 = load %struct.field_data_t*** @columns, align 8
  %4 = bitcast %struct.field_data_t** %3 to i8*
  %5 = call i8* @xnrealloc(i8* %4, i64 %2, i64 8) nounwind inlinehint
  %6 = bitcast i8* %5 to %struct.field_data_t**
  store %struct.field_data_t** %6, %struct.field_data_t*** @columns, align 8
  %7 = load %struct.field_data_t*** @columns, align 8
  %8 = load i64* @ncolumns, align 8
  %9 = sub i64 %8, 1
  %10 = load i32* %f_addr, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [12 x %struct.field_data_t]* @field_data, i64 0, i64 %11
  %13 = getelementptr inbounds %struct.field_data_t** %7, i64 %9
  store %struct.field_data_t* %12, %struct.field_data_t** %13, align 1
  %14 = load i8** %c_addr, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %bb, label %bb1

bb:                                               ; preds = %entry
  %16 = load %struct.field_data_t*** @columns, align 8
  %17 = load i64* @ncolumns, align 8
  %18 = sub i64 %17, 1
  %19 = getelementptr inbounds %struct.field_data_t** %16, i64 %18
  %20 = load %struct.field_data_t** %19, align 1
  %21 = getelementptr inbounds %struct.field_data_t* %20, i32 0, i32 3
  %22 = load i8** %c_addr, align 8
  store i8* %22, i8** %21, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %23 = load i32* %f_addr, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [12 x %struct.field_data_t]* @field_data, i64 0, i64 %24
  %26 = getelementptr inbounds %struct.field_data_t* %25, i32 0, i32 6
  %27 = load i8* %26, align 4
  %toBool = icmp ne i8 %27, 0
  br i1 %toBool, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8]* @.str42, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i32 353, i8* getelementptr inbounds ([12 x i8]* @__PRETTY_FUNCTION__.6079, i64 0, i64 0)) noreturn nou
  unreachable

bb3:                                              ; preds = %bb1
  %28 = load i32* %f_addr, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [12 x %struct.field_data_t]* @field_data, i64 0, i64 %29
  %31 = getelementptr inbounds %struct.field_data_t* %30, i32 0, i32 6
  store i8 1, i8* %31, align 4
  ret void
}

declare void @__assert_fail(i8*, i8*, i32, i8*) noreturn nounwind

define internal void @decode_output_arg(i8* %arg) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %arg_writable = alloca i8*
  %s = alloca i8*
  %comma = alloca i8*
  %field = alloca i32
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  %0 = load i8** %arg_addr, align 8
  %1 = call noalias i8* @xstrdup(i8* %0) nounwind
  store i8* %1, i8** %arg_writable, align 8
  %2 = load i8** %arg_writable, align 8
  store i8* %2, i8** %s, align 8
  br label %bb

bb:                                               ; preds = %bb16, %entry
  %3 = load i8** %s, align 8
  %4 = call i8* @strchr(i8* %3, i32 44) nounwind readonly
  store i8* %4, i8** %comma, align 8
  %5 = load i8** %comma, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %7 = load i8** %comma, align 8
  store i8 0, i8* %7, align 1
  %8 = load i8** %comma, align 8
  %9 = getelementptr inbounds i8* %8, i64 1
  store i8* %9, i8** %comma, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  store i32 12, i32* %field, align 4
  store i32 0, i32* %i, align 4
  br label %bb6

bb3:                                              ; preds = %bb6
  %10 = load i32* %i, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds [12 x %struct.field_data_t]* @field_data, i64 0, i64 %11
  %13 = getelementptr inbounds %struct.field_data_t* %12, i32 0, i32 1
  %14 = load i8** %13, align 8
  %15 = load i8** %s, align 8
  %16 = call i32 @strcmp(i8* %14, i8* %15) nounwind readonly
  %17 = icmp eq i32 %16, 0
  %18 = load i32* %i, align 4
  br i1 %17, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 %18, i32* %field, align 4
  br label %bb7

bb5:                                              ; preds = %bb3
  %19 = add i32 %18, 1
  store i32 %19, i32* %i, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %20 = load i32* %i, align 4
  %21 = icmp ule i32 %20, 11
  br i1 %21, label %bb3, label %bb7

bb7:                                              ; preds = %bb6, %bb4
  %22 = load i32* %field, align 4
  %23 = icmp eq i32 %22, 12
  br i1 %23, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %24 = load i8** %s, align 8
  %25 = call i8* @quote(i8* %24) nounwind
  %26 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8]* @.str44, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %26, i8* %25) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb9:                                              ; preds = %bb7
  %27 = load i32* %field, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds [12 x %struct.field_data_t]* @field_data, i64 0, i64 %28
  %30 = getelementptr inbounds %struct.field_data_t* %29, i32 0, i32 6
  %31 = load i8* %30, align 4
  %toBool = icmp ne i8 %31, 0
  %32 = load i32* %field, align 4
  br i1 %toBool, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds [12 x %struct.field_data_t]* @field_data, i64 0, i64 %33
  %35 = getelementptr inbounds %struct.field_data_t* %34, i32 0, i32 1
  %36 = load i8** %35, align 8
  %37 = call i8* @quote(i8* %36) nounwind
  %38 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8]* @.str45, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %38, i8* %37) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb11:                                             ; preds = %bb9
  switch i32 %32, label %bb15 [
    i32 0, label %bb12
    i32 1, label %bb12
    i32 2, label %bb13
    i32 3, label %bb12
    i32 4, label %bb14
    i32 5, label %bb12
    i32 6, label %bb12
    i32 7, label %bb12
    i32 8, label %bb12
    i32 9, label %bb12
    i32 10, label %bb12
    i32 11, label %bb12
  ]

bb12:                                             ; preds = %bb11, %bb11, %bb11, %bb11, %bb11, %bb11, %bb11, %bb11, %bb11, %bb11
  %39 = load i32* %field, align 4
  call void @alloc_field(i32 %39, i8* null) nounwind
  br label %bb16

bb13:                                             ; preds = %bb11
  %40 = load i32* %field, align 4
  call void @alloc_field(i32 %40, i8* getelementptr inbounds ([5 x i8]* @.str46, i64 0, i64 0)) nounwind
  br label %bb16

bb14:                                             ; preds = %bb11
  %41 = load i32* %field, align 4
  call void @alloc_field(i32 %41, i8* getelementptr inbounds ([6 x i8]* @.str47, i64 0, i64 0)) nounwind
  br label %bb16

bb15:                                             ; preds = %bb11
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str48, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i32 424, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.6128, i64 0, i64 0)) noreturn nou
  unreachable

bb16:                                             ; preds = %bb14, %bb13, %bb12
  %42 = load i8** %comma, align 8
  store i8* %42, i8** %s, align 8
  %43 = load i8** %s, align 8
  %44 = icmp ne i8* %43, null
  br i1 %44, label %bb, label %bb17

bb17:                                             ; preds = %bb16
  %45 = load i8** %arg_writable, align 8
  call void @free(i8* %45) nounwind
  ret void
}

declare i8* @gettext(i8*) nounwind

define void @usage(i32 %status) noreturn nounwind {
entry:
  %status_addr = alloca i32, align 4
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  %0 = load i32* %status_addr, align 4
  %1 = icmp ne i32 %0, 0
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @emit_try_help() nounwind
  br label %bb2

bb1:                                              ; preds = %entry
  %2 = load i8** @program_name, align 8
  %3 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8]* @.str60, i64 0, i64 0)) nounwind
  %4 = call i32 (i8*, ...)* @printf(i8* noalias %3, i8* %2) nounwind
  %5 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %6 = call i8* @gettext(i8* getelementptr inbounds ([100 x i8]* @.str61, i64 0, i64 0)) nounwind
  %7 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %6, %struct.FILE* noalias %5) nounwind
  call void @emit_mandatory_arg_note() nounwind
  %8 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %9 = call i8* @gettext(i8* getelementptr inbounds ([430 x i8]* @.str62, i64 0, i64 0)) nounwind
  %10 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %9, %struct.FILE* noalias %8) nounwind
  %11 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %12 = call i8* @gettext(i8* getelementptr inbounds ([255 x i8]* @.str63, i64 0, i64 0)) nounwind
  %13 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %12, %struct.FILE* noalias %11) nounwind
  %14 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %15 = call i8* @gettext(i8* getelementptr inbounds ([489 x i8]* @.str64, i64 0, i64 0)) nounwind
  %16 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %15, %struct.FILE* noalias %14) nounwind
  %17 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %18 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8]* @.str65, i64 0, i64 0)) nounwind
  %19 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %18, %struct.FILE* noalias %17) nounwind
  %20 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %21 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8]* @.str66, i64 0, i64 0)) nounwind
  %22 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %21, %struct.FILE* noalias %20) nounwind
  call void @emit_blocksize_note(i8* getelementptr inbounds ([3 x i8]* @.str67, i64 0, i64 0)) nounwind
  call void @emit_size_note() nounwind
  %23 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %24 = call i8* @gettext(i8* getelementptr inbounds ([220 x i8]* @.str68, i64 0, i64 0)) nounwind
  %25 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %24, %struct.FILE* noalias %23) nounwind
  call void @emit_ancillary_info() nounwind
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %26 = load i32* %status_addr, align 4
  call void @exit(i32 %26) noreturn nounwind
  unreachable
}

define internal void @get_field_list() nounwind {
entry:
  %0 = load i32* @header_mode, align 4
  switch i32 %0, label %bb18 [
    i32 0, label %bb
    i32 1, label %bb7
    i32 2, label %bb3
    i32 3, label %bb11
    i32 4, label %bb15
  ]

bb:                                               ; preds = %entry
  call void @alloc_field(i32 0, i8* null) nounwind
  %1 = load i8* @print_type, align 1
  %toBool = icmp ne i8 %1, 0
  br i1 %toBool, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @alloc_field(i32 1, i8* null) nounwind
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  call void @alloc_field(i32 2, i8* null) nounwind
  call void @alloc_field(i32 3, i8* null) nounwind
  call void @alloc_field(i32 4, i8* null) nounwind
  call void @alloc_field(i32 5, i8* null) nounwind
  call void @alloc_field(i32 10, i8* null) nounwind
  br label %return

bb3:                                              ; preds = %entry
  call void @alloc_field(i32 0, i8* null) nounwind
  %2 = load i8* @print_type, align 1
  %toBool4 = icmp ne i8 %2, 0
  br i1 %toBool4, label %bb5, label %bb6

bb5:                                              ; preds = %bb3
  call void @alloc_field(i32 1, i8* null) nounwind
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  call void @alloc_field(i32 2, i8* getelementptr inbounds ([5 x i8]* @.str46, i64 0, i64 0)) nounwind
  call void @alloc_field(i32 3, i8* null) nounwind
  call void @alloc_field(i32 4, i8* getelementptr inbounds ([6 x i8]* @.str47, i64 0, i64 0)) nounwind
  call void @alloc_field(i32 5, i8* null) nounwind
  call void @alloc_field(i32 10, i8* null) nounwind
  br label %return

bb7:                                              ; preds = %entry
  call void @alloc_field(i32 0, i8* null) nounwind
  %3 = load i8* @print_type, align 1
  %toBool8 = icmp ne i8 %3, 0
  br i1 %toBool8, label %bb9, label %bb10

bb9:                                              ; preds = %bb7
  call void @alloc_field(i32 1, i8* null) nounwind
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  call void @alloc_field(i32 6, i8* null) nounwind
  call void @alloc_field(i32 7, i8* null) nounwind
  call void @alloc_field(i32 8, i8* null) nounwind
  call void @alloc_field(i32 9, i8* null) nounwind
  call void @alloc_field(i32 10, i8* null) nounwind
  br label %return

bb11:                                             ; preds = %entry
  call void @alloc_field(i32 0, i8* null) nounwind
  %4 = load i8* @print_type, align 1
  %toBool12 = icmp ne i8 %4, 0
  br i1 %toBool12, label %bb13, label %bb14

bb13:                                             ; preds = %bb11
  call void @alloc_field(i32 1, i8* null) nounwind
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  call void @alloc_field(i32 2, i8* null) nounwind
  call void @alloc_field(i32 3, i8* null) nounwind
  call void @alloc_field(i32 4, i8* null) nounwind
  call void @alloc_field(i32 5, i8* getelementptr inbounds ([9 x i8]* @.str49, i64 0, i64 0)) nounwind
  call void @alloc_field(i32 10, i8* null) nounwind
  br label %return

bb15:                                             ; preds = %entry
  %5 = load i64* @ncolumns, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %bb16, label %return

bb16:                                             ; preds = %bb15
  %7 = load i8** @all_args_string, align 8
  call void @decode_output_arg(i8* %7) nounwind
  br label %return

bb18:                                             ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8]* @.str50, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i32 493, i8* getelementptr inbounds ([15 x i8]* @__PRETTY_FUNCTION__.6164, i64 0, i64 0)) noreturn nou
  unreachable

return:                                           ; preds = %bb2, %bb6, %bb10, %bb14, %bb16, %bb15
  ret void
}

define internal void @get_header() nounwind {
entry:
  %iftmp.88 = alloca i64
  %col = alloca i64
  %cell = alloca i8*
  %header = alloca i8*
  %buf = alloca [652 x i8]
  %opts = alloca i32
  %q1000 = alloca i64
  %q1024 = alloca i64
  %divisible_by_1000 = alloca i8
  %divisible_by_1024 = alloca i8
  %num = alloca i8*
  %buf19 = alloca [21 x i8]
  %num20 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  call void @alloc_table_row() nounwind
  store i64 0, i64* %col, align 8
  br label %bb31

bb:                                               ; preds = %bb31
  store i8* null, i8** %cell, align 8
  %0 = load %struct.field_data_t*** @columns, align 8
  %1 = load i64* %col, align 8
  %2 = getelementptr inbounds %struct.field_data_t** %0, i64 %1
  %3 = load %struct.field_data_t** %2, align 1
  %4 = getelementptr inbounds %struct.field_data_t* %3, i32 0, i32 3
  %5 = load i8** %4, align 8
  %6 = call i8* @gettext(i8* %5) nounwind
  store i8* %6, i8** %header, align 8
  %7 = load %struct.field_data_t*** @columns, align 8
  %8 = load i64* %col, align 8
  %9 = getelementptr inbounds %struct.field_data_t** %7, i64 %8
  %10 = load %struct.field_data_t** %9, align 1
  %11 = getelementptr inbounds %struct.field_data_t* %10, i32 0, i32 0
  %12 = load i32* %11, align 8
  %13 = icmp ne i32 %12, 2
  br i1 %13, label %bb16, label %bb1

bb1:                                              ; preds = %bb
  %14 = load i32* @header_mode, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %bb4, label %bb2

bb2:                                              ; preds = %bb1
  %16 = load i32* @header_mode, align 4
  %17 = icmp ne i32 %16, 4
  br i1 %17, label %bb16, label %bb3

bb3:                                              ; preds = %bb2
  %18 = load i32* @human_output_opts, align 4
  %19 = and i32 %18, 16
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %bb4, label %bb16

bb4:                                              ; preds = %bb3, %bb1
  %21 = load i32* @human_output_opts, align 4
  %22 = and i32 %21, 292
  %23 = or i32 %22, 152
  store i32 %23, i32* %opts, align 4
  %24 = load i64* @output_block_size, align 8
  store i64 %24, i64* %q1000, align 8
  %25 = load i64* @output_block_size, align 8
  store i64 %25, i64* %q1024, align 8
  br label %bb5

bb5:                                              ; preds = %klee_div_zero_check.exit6, %bb4
  %26 = load i64* %q1000, align 8
  %int_cast_to_i64 = bitcast i64 1000 to i64
  %27 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %28 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %28, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb5
  call void @klee_disable_symbex() nounwind
  %29 = urem i64 %26, 1000
  %30 = icmp eq i64 %29, 0
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %divisible_by_1000, align 1
  %32 = load i64* %q1000, align 8
  %int_cast_to_i641 = bitcast i64 1000 to i64
  %33 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %34 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %34, label %bb.i3, label %klee_div_zero_check.exit4

bb.i3:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit4:                        ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %35 = udiv i64 %32, 1000
  store i64 %35, i64* %q1000, align 8
  %36 = load i64* %q1024, align 8
  %37 = and i64 %36, 1023
  %38 = icmp eq i64 %37, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %divisible_by_1024, align 1
  %40 = load i64* %q1024, align 8
  %int_cast_to_i642 = bitcast i64 1024 to i64
  %41 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %42 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %42, label %bb.i5, label %klee_div_zero_check.exit6

bb.i5:                                            ; preds = %klee_div_zero_check.exit4
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit6:                        ; preds = %klee_div_zero_check.exit4
  call void @klee_disable_symbex() nounwind
  %43 = udiv i64 %40, 1024
  store i64 %43, i64* %q1024, align 8
  %44 = load i8* %divisible_by_1000, align 1
  %45 = zext i8 %44 to i32
  %46 = load i8* %divisible_by_1024, align 1
  %47 = zext i8 %46 to i32
  %48 = and i32 %45, %47
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %bb5, label %bb6

bb6:                                              ; preds = %klee_div_zero_check.exit6
  %50 = load i8* %divisible_by_1000, align 1
  %51 = zext i8 %50 to i32
  %52 = load i8* %divisible_by_1024, align 1
  %53 = zext i8 %52 to i32
  %54 = icmp slt i32 %51, %53
  br i1 %54, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %55 = load i32* %opts, align 4
  %56 = or i32 %55, 32
  store i32 %56, i32* %opts, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %57 = load i8* %divisible_by_1024, align 1
  %58 = zext i8 %57 to i32
  %59 = load i8* %divisible_by_1000, align 1
  %60 = zext i8 %59 to i32
  %61 = icmp slt i32 %58, %60
  br i1 %61, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %62 = load i32* %opts, align 4
  %63 = and i32 %62, -33
  store i32 %63, i32* %opts, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %64 = load i32* %opts, align 4
  %65 = and i32 %64, 32
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %67 = load i32* %opts, align 4
  %68 = or i32 %67, 256
  store i32 %68, i32* %opts, align 4
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %69 = load i64* @output_block_size, align 8
  %buf13 = bitcast [652 x i8]* %buf to i8*
  %70 = load i32* %opts, align 4
  %71 = call i8* @human_readable(i64 %69, i8* %buf13, i32 %70, i64 1, i64 1) nounwind
  store i8* %71, i8** %num, align 8
  %72 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8]* @.str6, i64 0, i64 0)) nounwind
  store i8* %72, i8** %header, align 8
  %73 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8]* @.str51, i64 0, i64 0)) nounwind
  %74 = load i8** %num, align 8
  %75 = load i8** %header, align 8
  %76 = call i32 (i8**, i8*, ...)* @rpl_asprintf(i8** %cell, i8* %73, i8* %74, i8* %75) nounwind
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %bb14, label %bb25

bb14:                                             ; preds = %bb12
  store i8* null, i8** %cell, align 8
  br label %bb25

bb16:                                             ; preds = %bb3, %bb2, %bb
  %78 = load i32* @header_mode, align 4
  %79 = icmp ne i32 %78, 3
  br i1 %79, label %bb24, label %bb17

bb17:                                             ; preds = %bb16
  %80 = load %struct.field_data_t*** @columns, align 8
  %81 = load i64* %col, align 8
  %82 = getelementptr inbounds %struct.field_data_t** %80, i64 %81
  %83 = load %struct.field_data_t** %82, align 1
  %84 = getelementptr inbounds %struct.field_data_t* %83, i32 0, i32 0
  %85 = load i32* %84, align 8
  %86 = icmp ne i32 %85, 2
  br i1 %86, label %bb24, label %bb18

bb18:                                             ; preds = %bb17
  %87 = load i64* @output_block_size, align 8
  %buf1921 = bitcast [21 x i8]* %buf19 to i8*
  %88 = call i8* @umaxtostr(i64 %87, i8* %buf1921) nounwind
  store i8* %88, i8** %num20, align 8
  %89 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8]* @.str51, i64 0, i64 0)) nounwind
  %90 = load i8** %num20, align 8
  %91 = load i8** %header, align 8
  %92 = call i32 (i8**, i8*, ...)* @rpl_asprintf(i8** %cell, i8* %89, i8* %90, i8* %91) nounwind
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %bb22, label %bb25

bb22:                                             ; preds = %bb18
  store i8* null, i8** %cell, align 8
  br label %bb25

bb24:                                             ; preds = %bb17, %bb16
  %94 = load i8** %header, align 8
  %95 = call noalias i8* @strdup(i8* %94) nounwind
  store i8* %95, i8** %cell, align 8
  br label %bb25

bb25:                                             ; preds = %bb18, %bb22, %bb12, %bb14, %bb24
  %96 = load i8** %cell, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  call void @xalloc_die() noreturn nounwind
  unreachable

bb27:                                             ; preds = %bb25
  %98 = load i8** %cell, align 8
  %99 = call i8* @hide_problematic_chars(i8* %98) nounwind
  %100 = load i8**** @table, align 8
  %101 = load i64* @nrows, align 8
  %102 = sub i64 %101, 1
  %103 = getelementptr inbounds i8*** %100, i64 %102
  %104 = load i8*** %103, align 1
  %105 = load i8** %cell, align 8
  %106 = load i64* %col, align 8
  %107 = getelementptr inbounds i8** %104, i64 %106
  store i8* %105, i8** %107, align 1
  %108 = load %struct.field_data_t*** @columns, align 8
  %109 = load i64* %col, align 8
  %110 = getelementptr inbounds %struct.field_data_t** %108, i64 %109
  %111 = load %struct.field_data_t** %110, align 1
  %112 = load %struct.field_data_t*** @columns, align 8
  %113 = load i64* %col, align 8
  %114 = getelementptr inbounds %struct.field_data_t** %112, i64 %113
  %115 = load %struct.field_data_t** %114, align 1
  %116 = getelementptr inbounds %struct.field_data_t* %115, i32 0, i32 4
  %117 = load i64* %116, align 8
  %118 = load i8** %cell, align 8
  %119 = call i32 @gnu_mbswidth(i8* %118, i32 0) nounwind
  %120 = sext i32 %119 to i64
  %121 = icmp ugt i64 %117, %120
  br i1 %121, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %122 = load %struct.field_data_t*** @columns, align 8
  %123 = load i64* %col, align 8
  %124 = getelementptr inbounds %struct.field_data_t** %122, i64 %123
  %125 = load %struct.field_data_t** %124, align 1
  %126 = getelementptr inbounds %struct.field_data_t* %125, i32 0, i32 4
  %127 = load i64* %126, align 8
  store i64 %127, i64* %iftmp.88, align 8
  br label %bb30

bb29:                                             ; preds = %bb27
  %128 = load i8** %cell, align 8
  %129 = call i32 @gnu_mbswidth(i8* %128, i32 0) nounwind
  %130 = sext i32 %129 to i64
  store i64 %130, i64* %iftmp.88, align 8
  br label %bb30

bb30:                                             ; preds = %bb29, %bb28
  %131 = getelementptr inbounds %struct.field_data_t* %111, i32 0, i32 4
  %132 = load i64* %iftmp.88, align 8
  store i64 %132, i64* %131, align 8
  %133 = load i64* %col, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %col, align 8
  br label %bb31

bb31:                                             ; preds = %bb30, %entry
  %135 = load i64* @ncolumns, align 8
  %136 = load i64* %col, align 8
  %137 = icmp ult i64 %136, %135
  br i1 %137, label %bb, label %return

return:                                           ; preds = %bb31
  ret void
}

define internal zeroext i8 @selected_fstype(i8* %fstype) nounwind readonly {
entry:
  %fstype_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %fsp = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %fstype, i8** %fstype_addr
  %1 = load %struct.fs_type_list** @fs_select_list, align 8
  %2 = icmp eq %struct.fs_type_list* %1, null
  br i1 %2, label %bb1, label %bb

bb:                                               ; preds = %entry
  %3 = load i8** %fstype_addr, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  store i32 1, i32* %0, align 4
  br label %bb8

bb2:                                              ; preds = %bb
  %5 = load %struct.fs_type_list** @fs_select_list, align 8
  store %struct.fs_type_list* %5, %struct.fs_type_list** %fsp, align 8
  br label %bb6

bb3:                                              ; preds = %bb6
  %6 = load %struct.fs_type_list** %fsp, align 8
  %7 = getelementptr inbounds %struct.fs_type_list* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  %9 = load i8** %fstype_addr, align 8
  %10 = call i32 @strcmp(i8* %9, i8* %8) nounwind readonly
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 1, i32* %0, align 4
  br label %bb8

bb5:                                              ; preds = %bb3
  %12 = load %struct.fs_type_list** %fsp, align 8
  %13 = getelementptr inbounds %struct.fs_type_list* %12, i32 0, i32 1
  %14 = load %struct.fs_type_list** %13, align 8
  store %struct.fs_type_list* %14, %struct.fs_type_list** %fsp, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %15 = load %struct.fs_type_list** %fsp, align 8
  %16 = icmp ne %struct.fs_type_list* %15, null
  br i1 %16, label %bb3, label %bb7

bb7:                                              ; preds = %bb6
  store i32 0, i32* %0, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb4, %bb1
  %17 = load i32* %0, align 4
  store i32 %17, i32* %retval, align 4
  %retval9 = load i32* %retval
  %retval910 = trunc i32 %retval9 to i8
  ret i8 %retval910
}

define internal zeroext i8 @excluded_fstype(i8* %fstype) nounwind readonly {
entry:
  %fstype_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %fsp = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %fstype, i8** %fstype_addr
  %1 = load %struct.fs_type_list** @fs_exclude_list, align 8
  %2 = icmp eq %struct.fs_type_list* %1, null
  br i1 %2, label %bb1, label %bb

bb:                                               ; preds = %entry
  %3 = load i8** %fstype_addr, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  store i32 0, i32* %0, align 4
  br label %bb8

bb2:                                              ; preds = %bb
  %5 = load %struct.fs_type_list** @fs_exclude_list, align 8
  store %struct.fs_type_list* %5, %struct.fs_type_list** %fsp, align 8
  br label %bb6

bb3:                                              ; preds = %bb6
  %6 = load %struct.fs_type_list** %fsp, align 8
  %7 = getelementptr inbounds %struct.fs_type_list* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  %9 = load i8** %fstype_addr, align 8
  %10 = call i32 @strcmp(i8* %9, i8* %8) nounwind readonly
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 1, i32* %0, align 4
  br label %bb8

bb5:                                              ; preds = %bb3
  %12 = load %struct.fs_type_list** %fsp, align 8
  %13 = getelementptr inbounds %struct.fs_type_list* %12, i32 0, i32 1
  %14 = load %struct.fs_type_list** %13, align 8
  store %struct.fs_type_list* %14, %struct.fs_type_list** %fsp, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %15 = load %struct.fs_type_list** %fsp, align 8
  %16 = icmp ne %struct.fs_type_list* %15, null
  br i1 %16, label %bb3, label %bb7

bb7:                                              ; preds = %bb6
  store i32 0, i32* %0, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb4, %bb1
  %17 = load i32* %0, align 4
  store i32 %17, i32* %retval, align 4
  %retval9 = load i32* %retval
  %retval910 = trunc i32 %retval9 to i8
  ret i8 %retval910
}

define internal void @filter_mount_list() nounwind {
entry:
  %me = alloca %struct.mount_entry*
  %devlist_head = alloca %struct.devlist*
  %buf = alloca %struct.stat
  %devlist = alloca %struct.devlist*
  %discard_me = alloca %struct.mount_entry*
  %devlist20 = alloca %struct.devlist*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.devlist* null, %struct.devlist** %devlist_head, align 8
  %0 = load %struct.mount_entry** @mount_list, align 8
  store %struct.mount_entry* %0, %struct.mount_entry** %me, align 8
  br label %bb17

bb:                                               ; preds = %bb17
  store %struct.mount_entry* null, %struct.mount_entry** %discard_me, align 8
  %1 = load %struct.mount_entry** %me, align 8
  %2 = getelementptr inbounds %struct.mount_entry* %1, i32 0, i32 1
  %3 = load i8** %2, align 8
  %4 = call i32 @stat(i8* noalias %3, %struct.stat* noalias %buf) nounwind
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %6 = load %struct.mount_entry** %me, align 8
  %7 = getelementptr inbounds %struct.mount_entry* %6, i32 0, i32 3
  %8 = load i64* %7, align 8
  %9 = getelementptr inbounds %struct.stat* %buf, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  br label %bb14

bb2:                                              ; preds = %bb
  %10 = load %struct.devlist** %devlist_head, align 8
  store %struct.devlist* %10, %struct.devlist** %devlist, align 8
  br label %bb5

bb3:                                              ; preds = %bb5
  %11 = load %struct.devlist** %devlist, align 8
  %12 = getelementptr inbounds %struct.devlist* %11, i32 0, i32 0
  %13 = load i64* %12, align 8
  %14 = getelementptr inbounds %struct.stat* %buf, i32 0, i32 0
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %13, %15
  br i1 %16, label %bb6, label %bb4

bb4:                                              ; preds = %bb3
  %17 = load %struct.devlist** %devlist, align 8
  %18 = getelementptr inbounds %struct.devlist* %17, i32 0, i32 2
  %19 = load %struct.devlist** %18, align 8
  store %struct.devlist* %19, %struct.devlist** %devlist, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load %struct.devlist** %devlist, align 8
  %21 = icmp ne %struct.devlist* %20, null
  br i1 %21, label %bb3, label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %22 = load %struct.devlist** %devlist, align 8
  %23 = icmp ne %struct.devlist* %22, null
  br i1 %23, label %bb7, label %bb14

bb7:                                              ; preds = %bb6
  %24 = load %struct.mount_entry** %discard_me, align 8
  %25 = ptrtoint %struct.mount_entry* %24 to i64
  %26 = load %struct.mount_entry** %me, align 8
  %27 = ptrtoint %struct.mount_entry* %26 to i64
  %28 = call i64 @klee_change(i64 %27, i64 %25) nounwind noinline
  %29 = inttoptr i64 %28 to %struct.mount_entry*
  store %struct.mount_entry* %29, %struct.mount_entry** %discard_me, align 8
  %30 = load %struct.mount_entry** %me, align 8
  %31 = getelementptr inbounds %struct.mount_entry* %30, i32 0, i32 0
  %32 = load i8** %31, align 8
  %33 = call i8* @strchr(i8* %32, i32 47) nounwind readonly
  %34 = icmp eq i8* %33, null
  br i1 %34, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  %35 = load %struct.devlist** %devlist, align 8
  %36 = getelementptr inbounds %struct.devlist* %35, i32 0, i32 1
  %37 = load %struct.mount_entry** %36, align 8
  %38 = getelementptr inbounds %struct.mount_entry* %37, i32 0, i32 0
  %39 = load i8** %38, align 8
  %40 = call i8* @strchr(i8* %39, i32 47) nounwind readonly
  %41 = icmp eq i8* %40, null
  br i1 %41, label %bb10, label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %42 = load %struct.devlist** %devlist, align 8
  %43 = getelementptr inbounds %struct.devlist* %42, i32 0, i32 1
  %44 = load %struct.mount_entry** %43, align 8
  %45 = getelementptr inbounds %struct.mount_entry* %44, i32 0, i32 1
  %46 = load i8** %45, align 8
  %47 = call i64 @strlen(i8* %46) nounwind readonly
  %48 = load %struct.mount_entry** %me, align 8
  %49 = getelementptr inbounds %struct.mount_entry* %48, i32 0, i32 1
  %50 = load i8** %49, align 8
  %51 = call i64 @strlen(i8* %50) nounwind readonly
  %52 = icmp ugt i64 %47, %51
  br i1 %52, label %bb10, label %bb11

bb10:                                             ; preds = %bb9, %bb8
  %53 = load %struct.devlist** %devlist, align 8
  %54 = getelementptr inbounds %struct.devlist* %53, i32 0, i32 1
  %55 = load %struct.mount_entry** %54, align 8
  store %struct.mount_entry* %55, %struct.mount_entry** %discard_me, align 8
  %56 = load %struct.devlist** %devlist, align 8
  %57 = getelementptr inbounds %struct.devlist* %56, i32 0, i32 1
  %58 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %58, %struct.mount_entry** %57, align 8
  br label %bb14

bb11:                                             ; preds = %bb9
  %59 = call i32 @klee_get_true() nounwind noinline
  %60 = sext i32 %59 to i64
  %61 = call i32 @klee_get_false() nounwind noinline
  %62 = sext i32 %61 to i64
  %63 = call i64 @klee_change(i64 %62, i64 %60) nounwind noinline
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %bb12, label %bb14

bb12:                                             ; preds = %bb11
  %65 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %65, %struct.mount_entry** %discard_me, align 8
  %66 = load %struct.mount_entry** %me, align 8
  %67 = getelementptr inbounds %struct.mount_entry* %66, i32 0, i32 0
  %68 = load i8** %67, align 8
  %69 = load %struct.devlist** %devlist, align 8
  %70 = getelementptr inbounds %struct.devlist* %69, i32 0, i32 1
  %71 = load %struct.mount_entry** %70, align 8
  %72 = getelementptr inbounds %struct.mount_entry* %71, i32 0, i32 0
  %73 = load i8** %72, align 8
  %74 = call i32 @strcmp(i8* %73, i8* %68) nounwind readonly
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %76 = load %struct.devlist** %devlist, align 8
  %77 = getelementptr inbounds %struct.devlist* %76, i32 0, i32 1
  %78 = load %struct.mount_entry** %77, align 8
  %79 = getelementptr inbounds %struct.mount_entry* %78, i32 0, i32 0
  %80 = load i8** %79, align 8
  call void @free(i8* %80) nounwind
  %81 = load %struct.devlist** %devlist, align 8
  %82 = getelementptr inbounds %struct.devlist* %81, i32 0, i32 1
  %83 = load %struct.mount_entry** %82, align 8
  %84 = load %struct.mount_entry** %me, align 8
  %85 = getelementptr inbounds %struct.mount_entry* %84, i32 0, i32 0
  %86 = load i8** %85, align 8
  %87 = call noalias i8* @xstrdup(i8* %86) nounwind
  %88 = getelementptr inbounds %struct.mount_entry* %83, i32 0, i32 0
  store i8* %87, i8** %88, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12, %bb11, %bb10, %bb6, %bb1
  %89 = load %struct.mount_entry** %discard_me, align 8
  %90 = icmp ne %struct.mount_entry* %89, null
  br i1 %90, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %91 = load %struct.mount_entry** %me, align 8
  %92 = getelementptr inbounds %struct.mount_entry* %91, i32 0, i32 5
  %93 = load %struct.mount_entry** %92, align 8
  store %struct.mount_entry* %93, %struct.mount_entry** %me, align 8
  %94 = load %struct.mount_entry** %discard_me, align 8
  call void @free_mount_entry(%struct.mount_entry* %94) nounwind
  br label %bb17

bb16:                                             ; preds = %bb14
  %95 = call noalias i8* @xmalloc(i64 24) nounwind
  %96 = bitcast i8* %95 to %struct.devlist*
  store %struct.devlist* %96, %struct.devlist** %devlist, align 8
  %97 = load %struct.devlist** %devlist, align 8
  %98 = getelementptr inbounds %struct.devlist* %97, i32 0, i32 1
  %99 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %99, %struct.mount_entry** %98, align 8
  %100 = getelementptr inbounds %struct.stat* %buf, i32 0, i32 0
  %101 = load i64* %100, align 8
  %102 = load %struct.devlist** %devlist, align 8
  %103 = getelementptr inbounds %struct.devlist* %102, i32 0, i32 0
  store i64 %101, i64* %103, align 8
  %104 = load %struct.devlist** %devlist, align 8
  %105 = getelementptr inbounds %struct.devlist* %104, i32 0, i32 2
  %106 = load %struct.devlist** %devlist_head, align 8
  store %struct.devlist* %106, %struct.devlist** %105, align 8
  %107 = load %struct.devlist** %devlist, align 8
  store %struct.devlist* %107, %struct.devlist** %devlist_head, align 8
  %108 = load %struct.mount_entry** %me, align 8
  %109 = getelementptr inbounds %struct.mount_entry* %108, i32 0, i32 5
  %110 = load %struct.mount_entry** %109, align 8
  store %struct.mount_entry* %110, %struct.mount_entry** %me, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15, %entry
  %111 = load %struct.mount_entry** %me, align 8
  %112 = icmp ne %struct.mount_entry* %111, null
  br i1 %112, label %bb, label %bb18

bb18:                                             ; preds = %bb17
  store %struct.mount_entry* null, %struct.mount_entry** @mount_list, align 8
  br label %bb21

bb19:                                             ; preds = %bb21
  %113 = load %struct.devlist** %devlist_head, align 8
  %114 = getelementptr inbounds %struct.devlist* %113, i32 0, i32 1
  %115 = load %struct.mount_entry** %114, align 8
  store %struct.mount_entry* %115, %struct.mount_entry** %me, align 8
  %116 = load %struct.mount_entry** @mount_list, align 8
  %117 = load %struct.mount_entry** %me, align 8
  %118 = getelementptr inbounds %struct.mount_entry* %117, i32 0, i32 5
  store %struct.mount_entry* %116, %struct.mount_entry** %118, align 8
  %119 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %119, %struct.mount_entry** @mount_list, align 8
  %120 = load %struct.devlist** %devlist_head, align 8
  %121 = getelementptr inbounds %struct.devlist* %120, i32 0, i32 2
  %122 = load %struct.devlist** %121, align 8
  store %struct.devlist* %122, %struct.devlist** %devlist20, align 8
  %123 = load %struct.devlist** %devlist_head, align 8
  %124 = bitcast %struct.devlist* %123 to i8*
  call void @free(i8* %124) nounwind
  %125 = load %struct.devlist** %devlist20, align 8
  store %struct.devlist* %125, %struct.devlist** %devlist_head, align 8
  br label %bb21

bb21:                                             ; preds = %bb19, %bb18
  %126 = load %struct.devlist** %devlist_head, align 8
  %127 = icmp ne %struct.devlist* %126, null
  br i1 %127, label %bb19, label %return

return:                                           ; preds = %bb21
  ret void
}

define internal zeroext i8 @known_value(i64 %n) nounwind {
entry:
  %n_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  %1 = load i64* %n_addr, align 8
  %2 = icmp ule i64 %1, -3
  %3 = zext i1 %2 to i32
  store i32 %3, i32* %0, align 4
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define internal i8* @df_readable(i8 zeroext %negative, i64 %n, i8* %buf, i64 %input_units, i64 %output_units) nounwind {
entry:
  %negative_addr = alloca i8, align 1
  %n_addr = alloca i64, align 8
  %buf_addr = alloca i8*, align 8
  %input_units_addr = alloca i64, align 8
  %output_units_addr = alloca i64, align 8
  %retval = alloca i8*
  %iftmp.104 = alloca i64
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8 %negative, i8* %negative_addr
  store i64 %n, i64* %n_addr
  store i8* %buf, i8** %buf_addr
  store i64 %input_units, i64* %input_units_addr
  store i64 %output_units, i64* %output_units_addr
  %1 = load i64* %n_addr, align 8
  %2 = call zeroext i8 @known_value(i64 %1) nounwind
  %toBool = icmp ne i8 %2, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  %toBool3not = xor i1 %toBool3, true
  %toBool3not4 = zext i1 %toBool3not to i8
  %toBool6 = icmp ne i8 %toBool3not4, 0
  br i1 %toBool6, label %bb15, label %bb

bb:                                               ; preds = %entry
  %3 = load i8* %negative_addr, align 1
  %toBool7 = icmp ne i8 %3, 0
  %toBool7not = xor i1 %toBool7, true
  %toBool7not8 = zext i1 %toBool7not to i8
  %toBool10 = icmp ne i8 %toBool7not8, 0
  %toBool10not = xor i1 %toBool10, true
  %toBool10not11 = zext i1 %toBool10not to i8
  %toBool13 = icmp ne i8 %toBool10not11, 0
  br i1 %toBool13, label %bb15, label %bb14

bb14:                                             ; preds = %bb
  store i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0), i8** %0, align 8
  br label %bb23

bb15:                                             ; preds = %bb, %entry
  %4 = load i32* @human_output_opts, align 4
  %5 = load i8* %negative_addr, align 1
  %6 = zext i8 %5 to i32
  %7 = load i8** %buf_addr, align 8
  %8 = sext i32 %6 to i64
  %9 = getelementptr inbounds i8* %7, i64 %8
  %10 = load i8* %negative_addr, align 1
  %toBool16 = icmp ne i8 %10, 0
  %11 = load i64* %n_addr, align 8
  br i1 %toBool16, label %bb17, label %bb18

bb17:                                             ; preds = %bb15
  %12 = sub i64 0, %11
  store i64 %12, i64* %iftmp.104, align 8
  br label %bb19

bb18:                                             ; preds = %bb15
  store i64 %11, i64* %iftmp.104, align 8
  br label %bb19

bb19:                                             ; preds = %bb18, %bb17
  %13 = load i64* %iftmp.104, align 8
  %14 = load i64* %input_units_addr, align 8
  %15 = load i64* %output_units_addr, align 8
  %16 = call i8* @human_readable(i64 %13, i8* %9, i32 %4, i64 %14, i64 %15) nounwind
  store i8* %16, i8** %p, align 8
  %17 = load i8* %negative_addr, align 1
  %toBool20 = icmp ne i8 %17, 0
  br i1 %toBool20, label %bb21, label %bb22

bb21:                                             ; preds = %bb19
  %18 = load i8** %p, align 8
  %19 = getelementptr inbounds i8* %18, i64 -1
  store i8* %19, i8** %p, align 8
  %20 = load i8** %p, align 8
  store i8 45, i8* %20, align 1
  br label %bb22

bb22:                                             ; preds = %bb21, %bb19
  %21 = load i8** %p, align 8
  store i8* %21, i8** %0, align 8
  br label %bb23

bb23:                                             ; preds = %bb22, %bb14
  %22 = load i8** %0, align 8
  store i8* %22, i8** %retval, align 8
  %retval24 = load i8** %retval
  ret i8* %retval24
}

define internal void @add_uint_with_neg_flag(i64* %dest, i8* %dest_neg, i64 %src, i8 zeroext %src_neg) nounwind {
entry:
  %dest_addr = alloca i64*, align 8
  %dest_neg_addr = alloca i8*, align 8
  %src_addr = alloca i64, align 8
  %src_neg_addr = alloca i8, align 1
  %"alloca point" = bitcast i32 0 to i32
  store i64* %dest, i64** %dest_addr
  store i8* %dest_neg, i8** %dest_neg_addr
  store i64 %src, i64* %src_addr
  store i8 %src_neg, i8* %src_neg_addr
  %0 = load i8** %dest_neg_addr, align 8
  %1 = load i8* %0, align 1
  %toBool = icmp ne i8 %1, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %2 = load i8* %src_neg_addr, align 1
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  %toBool4 = icmp ne i8 %2, 0
  %3 = xor i1 %toBool3, %toBool4
  %4 = zext i1 %3 to i8
  %toBool5 = icmp ne i8 %4, 0
  br i1 %toBool5, label %bb, label %bb6

bb:                                               ; preds = %entry
  %5 = load i64** %dest_addr, align 8
  %6 = load i64* %5, align 8
  %7 = load i64* %src_addr, align 8
  %8 = add i64 %6, %7
  %9 = load i64** %dest_addr, align 8
  store i64 %8, i64* %9, align 8
  br label %return

bb6:                                              ; preds = %entry
  %10 = load i8** %dest_neg_addr, align 8
  %11 = load i8* %10, align 1
  %toBool7 = icmp ne i8 %11, 0
  br i1 %toBool7, label %bb8, label %bb9

bb8:                                              ; preds = %bb6
  %12 = load i64** %dest_addr, align 8
  %13 = load i64* %12, align 8
  %14 = sub i64 0, %13
  %15 = load i64** %dest_addr, align 8
  store i64 %14, i64* %15, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb6
  %16 = load i8* %src_neg_addr, align 1
  %toBool10 = icmp ne i8 %16, 0
  br i1 %toBool10, label %bb11, label %bb12

bb11:                                             ; preds = %bb9
  %17 = load i64* %src_addr, align 8
  %18 = sub i64 0, %17
  store i64 %18, i64* %src_addr, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb9
  %19 = load i64** %dest_addr, align 8
  %20 = load i64* %19, align 8
  %21 = load i64* %src_addr, align 8
  %22 = icmp ugt i64 %20, %21
  %23 = load i64** %dest_addr, align 8
  %24 = load i64* %23, align 8
  %25 = load i64* %src_addr, align 8
  br i1 %22, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %26 = sub i64 %24, %25
  %27 = load i64** %dest_addr, align 8
  store i64 %26, i64* %27, align 8
  br label %bb15

bb14:                                             ; preds = %bb12
  %28 = sub i64 %25, %24
  %29 = load i64** %dest_addr, align 8
  store i64 %28, i64* %29, align 8
  %30 = load i8** %dest_neg_addr, align 8
  %31 = load i8* %src_neg_addr, align 1
  store i8 %31, i8* %30, align 1
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  %32 = load i8** %dest_neg_addr, align 8
  %33 = load i8* %32, align 1
  %toBool16 = icmp ne i8 %33, 0
  br i1 %toBool16, label %bb17, label %return

bb17:                                             ; preds = %bb15
  %34 = load i64** %dest_addr, align 8
  %35 = load i64* %34, align 8
  %36 = sub i64 0, %35
  %37 = load i64** %dest_addr, align 8
  store i64 %36, i64* %37, align 8
  br label %return

return:                                           ; preds = %bb, %bb15, %bb17
  ret void
}

define internal zeroext i8 @has_uuid_suffix(i8* %s) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.105 = alloca i32
  %0 = alloca i32
  %len = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  %1 = load i8** %s_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  store i64 %2, i64* %len, align 8
  %3 = load i64* %len, align 8
  %4 = icmp ule i64 %3, 36
  br i1 %4, label %bb2, label %bb

bb:                                               ; preds = %entry
  %5 = load i8** %s_addr, align 8
  %6 = load i64* %len, align 8
  %7 = getelementptr inbounds i8* %5, i64 %6
  %8 = getelementptr inbounds i8* %7, i64 -36
  %9 = call i64 @strspn(i8* %8, i8* getelementptr inbounds ([24 x i8]* @.str53, i64 0, i64 0)) nounwind readonly
  %10 = icmp ne i64 %9, 36
  br i1 %10, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.105, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.105, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i32* %iftmp.105, align 4
  %12 = trunc i32 %11 to i8
  %13 = zext i8 %12 to i32
  store i32 %13, i32* %0, align 4
  %14 = load i32* %0, align 4
  store i32 %14, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define internal void @get_field_values(%struct.field_values_t* %bv, %struct.field_values_t* %iv, %struct.fs_usage* %fsu) nounwind {
entry:
  %bv_addr = alloca %struct.field_values_t*, align 8
  %iv_addr = alloca %struct.field_values_t*, align 8
  %fsu_addr = alloca %struct.fs_usage*, align 8
  %iftmp.107 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.field_values_t* %bv, %struct.field_values_t** %bv_addr
  store %struct.field_values_t* %iv, %struct.field_values_t** %iv_addr
  store %struct.fs_usage* %fsu, %struct.fs_usage** %fsu_addr
  %0 = load %struct.field_values_t** %iv_addr, align 8
  %1 = getelementptr inbounds %struct.field_values_t* %0, i32 0, i32 1
  store i64 1, i64* %1, align 8
  %2 = load %struct.field_values_t** %iv_addr, align 8
  %3 = getelementptr inbounds %struct.field_values_t* %2, i32 0, i32 1
  %4 = load i64* %3, align 8
  %5 = load %struct.field_values_t** %iv_addr, align 8
  %6 = getelementptr inbounds %struct.field_values_t* %5, i32 0, i32 0
  store i64 %4, i64* %6, align 8
  %7 = load %struct.fs_usage** %fsu_addr, align 8
  %8 = getelementptr inbounds %struct.fs_usage* %7, i32 0, i32 5
  %9 = load i64* %8, align 8
  %10 = load %struct.field_values_t** %iv_addr, align 8
  %11 = getelementptr inbounds %struct.field_values_t* %10, i32 0, i32 2
  store i64 %9, i64* %11, align 8
  %12 = load %struct.fs_usage** %fsu_addr, align 8
  %13 = getelementptr inbounds %struct.fs_usage* %12, i32 0, i32 6
  %14 = load i64* %13, align 8
  %15 = load %struct.field_values_t** %iv_addr, align 8
  %16 = getelementptr inbounds %struct.field_values_t* %15, i32 0, i32 5
  store i64 %14, i64* %16, align 8
  %17 = load %struct.field_values_t** %iv_addr, align 8
  %18 = getelementptr inbounds %struct.field_values_t* %17, i32 0, i32 5
  %19 = load i64* %18, align 8
  %20 = load %struct.field_values_t** %iv_addr, align 8
  %21 = getelementptr inbounds %struct.field_values_t* %20, i32 0, i32 3
  store i64 %19, i64* %21, align 8
  %22 = load %struct.field_values_t** %iv_addr, align 8
  %23 = getelementptr inbounds %struct.field_values_t* %22, i32 0, i32 4
  store i8 0, i8* %23, align 8
  %24 = load %struct.field_values_t** %iv_addr, align 8
  %25 = getelementptr inbounds %struct.field_values_t* %24, i32 0, i32 6
  store i64 -1, i64* %25, align 8
  %26 = load %struct.field_values_t** %iv_addr, align 8
  %27 = getelementptr inbounds %struct.field_values_t* %26, i32 0, i32 7
  store i8 0, i8* %27, align 8
  %28 = load %struct.field_values_t** %iv_addr, align 8
  %29 = getelementptr inbounds %struct.field_values_t* %28, i32 0, i32 2
  %30 = load i64* %29, align 8
  %31 = call zeroext i8 @known_value(i64 %30) nounwind
  %toBool = icmp ne i8 %31, 0
  br i1 %toBool, label %bb, label %bb3

bb:                                               ; preds = %entry
  %32 = load %struct.field_values_t** %iv_addr, align 8
  %33 = getelementptr inbounds %struct.field_values_t* %32, i32 0, i32 5
  %34 = load i64* %33, align 8
  %35 = call zeroext i8 @known_value(i64 %34) nounwind
  %toBool1 = icmp ne i8 %35, 0
  br i1 %toBool1, label %bb2, label %bb3

bb2:                                              ; preds = %bb
  %36 = load %struct.field_values_t** %iv_addr, align 8
  %37 = getelementptr inbounds %struct.field_values_t* %36, i32 0, i32 2
  %38 = load i64* %37, align 8
  %39 = load %struct.field_values_t** %iv_addr, align 8
  %40 = getelementptr inbounds %struct.field_values_t* %39, i32 0, i32 5
  %41 = load i64* %40, align 8
  %42 = sub i64 %38, %41
  %43 = load %struct.field_values_t** %iv_addr, align 8
  %44 = getelementptr inbounds %struct.field_values_t* %43, i32 0, i32 6
  store i64 %42, i64* %44, align 8
  %45 = load %struct.field_values_t** %iv_addr, align 8
  %46 = getelementptr inbounds %struct.field_values_t* %45, i32 0, i32 2
  %47 = load i64* %46, align 8
  %48 = load %struct.field_values_t** %iv_addr, align 8
  %49 = getelementptr inbounds %struct.field_values_t* %48, i32 0, i32 5
  %50 = load i64* %49, align 8
  %51 = icmp ult i64 %47, %50
  %52 = zext i1 %51 to i8
  %53 = load %struct.field_values_t** %iv_addr, align 8
  %54 = getelementptr inbounds %struct.field_values_t* %53, i32 0, i32 7
  store i8 %52, i8* %54, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb, %entry
  %55 = load %struct.fs_usage** %fsu_addr, align 8
  %56 = getelementptr inbounds %struct.fs_usage* %55, i32 0, i32 0
  %57 = load i64* %56, align 8
  %58 = load %struct.field_values_t** %bv_addr, align 8
  %59 = getelementptr inbounds %struct.field_values_t* %58, i32 0, i32 0
  store i64 %57, i64* %59, align 8
  %60 = load i64* @output_block_size, align 8
  %61 = load %struct.field_values_t** %bv_addr, align 8
  %62 = getelementptr inbounds %struct.field_values_t* %61, i32 0, i32 1
  store i64 %60, i64* %62, align 8
  %63 = load %struct.fs_usage** %fsu_addr, align 8
  %64 = getelementptr inbounds %struct.fs_usage* %63, i32 0, i32 1
  %65 = load i64* %64, align 8
  %66 = load %struct.field_values_t** %bv_addr, align 8
  %67 = getelementptr inbounds %struct.field_values_t* %66, i32 0, i32 2
  store i64 %65, i64* %67, align 8
  %68 = load %struct.fs_usage** %fsu_addr, align 8
  %69 = getelementptr inbounds %struct.fs_usage* %68, i32 0, i32 3
  %70 = load i64* %69, align 8
  %71 = load %struct.field_values_t** %bv_addr, align 8
  %72 = getelementptr inbounds %struct.field_values_t* %71, i32 0, i32 3
  store i64 %70, i64* %72, align 8
  %73 = load %struct.fs_usage** %fsu_addr, align 8
  %74 = getelementptr inbounds %struct.fs_usage* %73, i32 0, i32 2
  %75 = load i64* %74, align 8
  %76 = load %struct.field_values_t** %bv_addr, align 8
  %77 = getelementptr inbounds %struct.field_values_t* %76, i32 0, i32 5
  store i64 %75, i64* %77, align 8
  %78 = load %struct.fs_usage** %fsu_addr, align 8
  %79 = getelementptr inbounds %struct.fs_usage* %78, i32 0, i32 4
  %80 = load i8* %79, align 8
  %toBool4 = icmp ne i8 %80, 0
  %toBool4not = xor i1 %toBool4, true
  %toBool4not5 = zext i1 %toBool4not to i8
  %toBool7 = icmp ne i8 %toBool4not5, 0
  br i1 %toBool7, label %bb14, label %bb8

bb8:                                              ; preds = %bb3
  %81 = load %struct.fs_usage** %fsu_addr, align 8
  %82 = getelementptr inbounds %struct.fs_usage* %81, i32 0, i32 3
  %83 = load i64* %82, align 8
  %84 = call zeroext i8 @known_value(i64 %83) nounwind
  %toBool9 = icmp ne i8 %84, 0
  %toBool9not = xor i1 %toBool9, true
  %toBool9not10 = zext i1 %toBool9not to i8
  %toBool12 = icmp ne i8 %toBool9not10, 0
  br i1 %toBool12, label %bb14, label %bb13

bb13:                                             ; preds = %bb8
  store i32 1, i32* %iftmp.107, align 4
  br label %bb15

bb14:                                             ; preds = %bb8, %bb3
  store i32 0, i32* %iftmp.107, align 4
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  %85 = load i32* %iftmp.107, align 4
  %86 = trunc i32 %85 to i8
  %87 = load %struct.field_values_t** %bv_addr, align 8
  %88 = getelementptr inbounds %struct.field_values_t* %87, i32 0, i32 4
  store i8 %86, i8* %88, align 8
  %89 = load %struct.field_values_t** %bv_addr, align 8
  %90 = getelementptr inbounds %struct.field_values_t* %89, i32 0, i32 6
  store i64 -1, i64* %90, align 8
  %91 = load %struct.field_values_t** %bv_addr, align 8
  %92 = getelementptr inbounds %struct.field_values_t* %91, i32 0, i32 7
  store i8 0, i8* %92, align 8
  %93 = load %struct.field_values_t** %bv_addr, align 8
  %94 = getelementptr inbounds %struct.field_values_t* %93, i32 0, i32 2
  %95 = load i64* %94, align 8
  %96 = call zeroext i8 @known_value(i64 %95) nounwind
  %toBool16 = icmp ne i8 %96, 0
  br i1 %toBool16, label %bb17, label %return

bb17:                                             ; preds = %bb15
  %97 = load %struct.field_values_t** %bv_addr, align 8
  %98 = getelementptr inbounds %struct.field_values_t* %97, i32 0, i32 5
  %99 = load i64* %98, align 8
  %100 = call zeroext i8 @known_value(i64 %99) nounwind
  %toBool18 = icmp ne i8 %100, 0
  br i1 %toBool18, label %bb19, label %return

bb19:                                             ; preds = %bb17
  %101 = load %struct.field_values_t** %bv_addr, align 8
  %102 = getelementptr inbounds %struct.field_values_t* %101, i32 0, i32 2
  %103 = load i64* %102, align 8
  %104 = load %struct.field_values_t** %bv_addr, align 8
  %105 = getelementptr inbounds %struct.field_values_t* %104, i32 0, i32 5
  %106 = load i64* %105, align 8
  %107 = sub i64 %103, %106
  %108 = load %struct.field_values_t** %bv_addr, align 8
  %109 = getelementptr inbounds %struct.field_values_t* %108, i32 0, i32 6
  store i64 %107, i64* %109, align 8
  %110 = load %struct.field_values_t** %bv_addr, align 8
  %111 = getelementptr inbounds %struct.field_values_t* %110, i32 0, i32 2
  %112 = load i64* %111, align 8
  %113 = load %struct.field_values_t** %bv_addr, align 8
  %114 = getelementptr inbounds %struct.field_values_t* %113, i32 0, i32 5
  %115 = load i64* %114, align 8
  %116 = icmp ult i64 %112, %115
  %117 = zext i1 %116 to i8
  %118 = load %struct.field_values_t** %bv_addr, align 8
  %119 = getelementptr inbounds %struct.field_values_t* %118, i32 0, i32 7
  store i8 %117, i8* %119, align 8
  br label %return

return:                                           ; preds = %bb15, %bb17, %bb19
  ret void
}

define internal void @add_to_grand_total(%struct.field_values_t* %bv, %struct.field_values_t* %iv) nounwind {
entry:
  %bv_addr = alloca %struct.field_values_t*, align 8
  %iv_addr = alloca %struct.field_values_t*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.field_values_t* %bv, %struct.field_values_t** %bv_addr
  store %struct.field_values_t* %iv, %struct.field_values_t** %iv_addr
  %0 = load %struct.field_values_t** %iv_addr, align 8
  %1 = getelementptr inbounds %struct.field_values_t* %0, i32 0, i32 2
  %2 = load i64* %1, align 8
  %3 = call zeroext i8 @known_value(i64 %2) nounwind
  %toBool = icmp ne i8 %3, 0
  br i1 %toBool, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = load i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 5), align 8
  %5 = load %struct.field_values_t** %iv_addr, align 8
  %6 = getelementptr inbounds %struct.field_values_t* %5, i32 0, i32 2
  %7 = load i64* %6, align 8
  %8 = add i64 %4, %7
  store i64 %8, i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 5), align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %9 = load %struct.field_values_t** %iv_addr, align 8
  %10 = getelementptr inbounds %struct.field_values_t* %9, i32 0, i32 3
  %11 = load i64* %10, align 8
  %12 = call zeroext i8 @known_value(i64 %11) nounwind
  %toBool2 = icmp ne i8 %12, 0
  br i1 %toBool2, label %bb3, label %bb4

bb3:                                              ; preds = %bb1
  %13 = load i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 6), align 8
  %14 = load %struct.field_values_t** %iv_addr, align 8
  %15 = getelementptr inbounds %struct.field_values_t* %14, i32 0, i32 3
  %16 = load i64* %15, align 8
  %17 = add i64 %13, %16
  store i64 %17, i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 6), align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %18 = load %struct.field_values_t** %bv_addr, align 8
  %19 = getelementptr inbounds %struct.field_values_t* %18, i32 0, i32 2
  %20 = load i64* %19, align 8
  %21 = call zeroext i8 @known_value(i64 %20) nounwind
  %toBool5 = icmp ne i8 %21, 0
  br i1 %toBool5, label %bb6, label %bb7

bb6:                                              ; preds = %bb4
  %22 = load i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 1), align 8
  %23 = load %struct.field_values_t** %bv_addr, align 8
  %24 = getelementptr inbounds %struct.field_values_t* %23, i32 0, i32 0
  %25 = load i64* %24, align 8
  %26 = load %struct.field_values_t** %bv_addr, align 8
  %27 = getelementptr inbounds %struct.field_values_t* %26, i32 0, i32 2
  %28 = load i64* %27, align 8
  %29 = mul i64 %25, %28
  %30 = add i64 %22, %29
  store i64 %30, i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 1), align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4
  %31 = load %struct.field_values_t** %bv_addr, align 8
  %32 = getelementptr inbounds %struct.field_values_t* %31, i32 0, i32 5
  %33 = load i64* %32, align 8
  %34 = call zeroext i8 @known_value(i64 %33) nounwind
  %toBool8 = icmp ne i8 %34, 0
  br i1 %toBool8, label %bb9, label %bb10

bb9:                                              ; preds = %bb7
  %35 = load i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 2), align 8
  %36 = load %struct.field_values_t** %bv_addr, align 8
  %37 = getelementptr inbounds %struct.field_values_t* %36, i32 0, i32 0
  %38 = load i64* %37, align 8
  %39 = load %struct.field_values_t** %bv_addr, align 8
  %40 = getelementptr inbounds %struct.field_values_t* %39, i32 0, i32 5
  %41 = load i64* %40, align 8
  %42 = mul i64 %38, %41
  %43 = add i64 %35, %42
  store i64 %43, i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 2), align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %44 = load %struct.field_values_t** %bv_addr, align 8
  %45 = getelementptr inbounds %struct.field_values_t* %44, i32 0, i32 3
  %46 = load i64* %45, align 8
  %47 = call zeroext i8 @known_value(i64 %46) nounwind
  %toBool11 = icmp ne i8 %47, 0
  br i1 %toBool11, label %bb12, label %return

bb12:                                             ; preds = %bb10
  %48 = load %struct.field_values_t** %bv_addr, align 8
  %49 = getelementptr inbounds %struct.field_values_t* %48, i32 0, i32 4
  %50 = load i8* %49, align 8
  %51 = zext i8 %50 to i32
  %52 = load %struct.field_values_t** %bv_addr, align 8
  %53 = getelementptr inbounds %struct.field_values_t* %52, i32 0, i32 0
  %54 = load i64* %53, align 8
  %55 = load %struct.field_values_t** %bv_addr, align 8
  %56 = getelementptr inbounds %struct.field_values_t* %55, i32 0, i32 3
  %57 = load i64* %56, align 8
  %58 = mul i64 %54, %57
  %59 = trunc i32 %51 to i8
  call void @add_uint_with_neg_flag(i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 3), i8* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 4), i64 %58, i8 zeroext %59) nounwind
  br label %return

return:                                           ; preds = %bb10, %bb12
  ret void
}

define internal void @get_dev(i8* %disk, i8* %mount_point, i8* %file, i8* %stat_file, i8* %fstype, i8 zeroext %me_dummy, i8 zeroext %me_remote, %struct.fs_usage* %force_fsu, i8 zeroext %process_all) nounwind {
entry:
  %disk_addr = alloca i8*, align 8
  %mount_point_addr = alloca i8*, align 8
  %file_addr = alloca i8*, align 8
  %stat_file_addr = alloca i8*, align 8
  %fstype_addr = alloca i8*, align 8
  %me_dummy_addr = alloca i8, align 1
  %me_remote_addr = alloca i8, align 1
  %force_fsu_addr = alloca %struct.fs_usage*, align 8
  %process_all_addr = alloca i8, align 1
  %iftmp.124 = alloca i64
  %iftmp.119 = alloca double
  %iftmp.118 = alloca double
  %iftmp.117 = alloca double
  %iftmp.111 = alloca i8*
  %fsu = alloca %struct.fs_usage
  %dev_name = alloca i8*
  %resolved_dev = alloca i8*
  %block_values = alloca %struct.field_values_t
  %inode_values = alloca %struct.field_values_t
  %col = alloca i64
  %buf = alloca [653 x i8]
  %cell = alloca i8*
  %v = alloca %struct.field_values_t*
  %pct = alloca double
  %u100 = alloca i64
  %nonroot_total = alloca i64
  %u = alloca double
  %a = alloca double
  %nonroot_total107 = alloca double
  %lipct = alloca i64
  %ipct = alloca double
  %"alloca point" = bitcast i32 0 to i32
  store i8* %disk, i8** %disk_addr
  store i8* %mount_point, i8** %mount_point_addr
  store i8* %file, i8** %file_addr
  store i8* %stat_file, i8** %stat_file_addr
  store i8* %fstype, i8** %fstype_addr
  store i8 %me_dummy, i8* %me_dummy_addr
  store i8 %me_remote, i8* %me_remote_addr
  store %struct.fs_usage* %force_fsu, %struct.fs_usage** %force_fsu_addr
  store i8 %process_all, i8* %process_all_addr
  %0 = load i8* %me_remote_addr, align 1
  %toBool = icmp ne i8 %0, 0
  %1 = load i8* @show_local_fs, align 1
  %toBool1 = icmp ne i8 %1, 0
  %or.cond = and i1 %toBool, %toBool1
  br i1 %or.cond, label %return, label %bb2

bb2:                                              ; preds = %entry
  %2 = load i8* %me_dummy_addr, align 1
  %toBool3 = icmp ne i8 %2, 0
  br i1 %toBool3, label %bb4, label %bb14

bb4:                                              ; preds = %bb2
  %3 = load i8* @show_all_fs, align 1
  %toBool5 = icmp ne i8 %3, 0
  %toBool5not = xor i1 %toBool5, true
  %toBool5not6 = zext i1 %toBool5not to i8
  %toBool8 = icmp ne i8 %toBool5not6, 0
  br i1 %toBool8, label %bb9, label %bb14

bb9:                                              ; preds = %bb4
  %4 = load i8* @show_listed_fs, align 1
  %toBool10 = icmp ne i8 %4, 0
  %toBool10not = xor i1 %toBool10, true
  %toBool10not11 = zext i1 %toBool10not to i8
  %toBool13 = icmp ne i8 %toBool10not11, 0
  br i1 %toBool13, label %return, label %bb14

bb14:                                             ; preds = %bb9, %bb4, %bb2
  %5 = load i8** %fstype_addr, align 8
  %6 = call zeroext i8 @selected_fstype(i8* %5) nounwind readonly
  %toBool15 = icmp ne i8 %6, 0
  %toBool15not = xor i1 %toBool15, true
  %toBool15not16 = zext i1 %toBool15not to i8
  %toBool18 = icmp ne i8 %toBool15not16, 0
  br i1 %toBool18, label %return, label %bb19

bb19:                                             ; preds = %bb14
  %7 = load i8** %fstype_addr, align 8
  %8 = call zeroext i8 @excluded_fstype(i8* %7) nounwind readonly
  %toBool20 = icmp ne i8 %8, 0
  br i1 %toBool20, label %return, label %bb22

bb22:                                             ; preds = %bb19
  %9 = load %struct.fs_usage** %force_fsu_addr, align 8
  %10 = icmp eq %struct.fs_usage* %9, null
  br i1 %10, label %bb23, label %bb25

bb23:                                             ; preds = %bb22
  %11 = load i8** %mount_point_addr, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %13 = load i8** %mount_point_addr, align 8
  %14 = getelementptr inbounds i8* %13, i64 0
  %15 = load i8* %14, align 1
  %16 = icmp ne i8 %15, 47
  br i1 %16, label %return, label %bb25

bb25:                                             ; preds = %bb24, %bb23, %bb22
  %17 = load i8** %stat_file_addr, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %bb26, label %bb30

bb26:                                             ; preds = %bb25
  %19 = load i8** %mount_point_addr, align 8
  %20 = icmp ne i8* %19, null
  br i1 %20, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %21 = load i8** %mount_point_addr, align 8
  store i8* %21, i8** %iftmp.111, align 8
  br label %bb29

bb28:                                             ; preds = %bb26
  %22 = load i8** %disk_addr, align 8
  store i8* %22, i8** %iftmp.111, align 8
  br label %bb29

bb29:                                             ; preds = %bb28, %bb27
  %23 = load i8** %iftmp.111, align 8
  store i8* %23, i8** %stat_file_addr, align 8
  br label %bb30

bb30:                                             ; preds = %bb29, %bb25
  %24 = load %struct.fs_usage** %force_fsu_addr, align 8
  %25 = icmp ne %struct.fs_usage* %24, null
  br i1 %25, label %bb31, label %bb32

bb31:                                             ; preds = %bb30
  %26 = load %struct.fs_usage** %force_fsu_addr, align 8
  %27 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 0
  %28 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 0
  %29 = load i64* %28, align 8
  store i64 %29, i64* %27, align 8
  %30 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 1
  %31 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 1
  %32 = load i64* %31, align 8
  store i64 %32, i64* %30, align 8
  %33 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 2
  %34 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 2
  %35 = load i64* %34, align 8
  store i64 %35, i64* %33, align 8
  %36 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 3
  %37 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 3
  %38 = load i64* %37, align 8
  store i64 %38, i64* %36, align 8
  %39 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 4
  %40 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 4
  %41 = load i8* %40, align 8
  store i8 %41, i8* %39, align 8
  %42 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 5
  %43 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 5
  %44 = load i64* %43, align 8
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 6
  %46 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 6
  %47 = load i64* %46, align 8
  store i64 %47, i64* %45, align 8
  br label %bb34

bb32:                                             ; preds = %bb30
  %48 = load i8** %stat_file_addr, align 8
  %49 = load i8** %disk_addr, align 8
  %50 = call i32 @get_fs_usage(i8* %48, i8* %49, %struct.fs_usage* %fsu) nounwind
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %bb33, label %bb34

bb33:                                             ; preds = %bb32
  %52 = load i8** %stat_file_addr, align 8
  %53 = call i8* @quote(i8* %52) nounwind
  %54 = call i32* @__errno_location() nounwind readnone
  %55 = load i32* %54, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %55, i8* getelementptr inbounds ([3 x i8]* @.str54, i64 0, i64 0), i8* %53) nounwind
  store i32 1, i32* @exit_status, align 4
  br label %return

bb34:                                             ; preds = %bb32, %bb31
  %56 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 1
  %57 = load i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %bb35, label %bb45

bb35:                                             ; preds = %bb34
  %59 = load i8* @show_all_fs, align 1
  %toBool36 = icmp ne i8 %59, 0
  %toBool36not = xor i1 %toBool36, true
  %toBool36not37 = zext i1 %toBool36not to i8
  %toBool39 = icmp ne i8 %toBool36not37, 0
  br i1 %toBool39, label %bb40, label %bb45

bb40:                                             ; preds = %bb35
  %60 = load i8* @show_listed_fs, align 1
  %toBool41 = icmp ne i8 %60, 0
  %toBool41not = xor i1 %toBool41, true
  %toBool41not42 = zext i1 %toBool41not to i8
  %toBool44 = icmp ne i8 %toBool41not42, 0
  br i1 %toBool44, label %return, label %bb45

bb45:                                             ; preds = %bb40, %bb35, %bb34
  %61 = load %struct.fs_usage** %force_fsu_addr, align 8
  %62 = icmp eq %struct.fs_usage* %61, null
  br i1 %62, label %bb46, label %bb47

bb46:                                             ; preds = %bb45
  store i8 1, i8* @file_systems_processed, align 1
  br label %bb47

bb47:                                             ; preds = %bb46, %bb45
  call void @alloc_table_row() nounwind
  %63 = load i8** %disk_addr, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %bb48, label %bb49

bb48:                                             ; preds = %bb47
  store i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0), i8** %disk_addr, align 8
  br label %bb49

bb49:                                             ; preds = %bb48, %bb47
  %65 = load i8** %file_addr, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %bb50, label %bb51

bb50:                                             ; preds = %bb49
  store i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0), i8** %file_addr, align 8
  br label %bb51

bb51:                                             ; preds = %bb50, %bb49
  %67 = load i8** %disk_addr, align 8
  %68 = call noalias i8* @xstrdup(i8* %67) nounwind
  store i8* %68, i8** %dev_name, align 8
  %69 = load i8* %process_all_addr, align 1
  %toBool52 = icmp ne i8 %69, 0
  br i1 %toBool52, label %bb53, label %bb57

bb53:                                             ; preds = %bb51
  %70 = load i8** %dev_name, align 8
  %71 = call zeroext i8 @has_uuid_suffix(i8* %70) nounwind readonly
  %toBool54 = icmp ne i8 %71, 0
  br i1 %toBool54, label %bb55, label %bb57

bb55:                                             ; preds = %bb53
  %72 = load i8** %dev_name, align 8
  %73 = call i8* @canonicalize_filename_mode(i8* %72, i32 0) nounwind
  store i8* %73, i8** %resolved_dev, align 8
  %74 = load i8** %resolved_dev, align 8
  %75 = icmp ne i8* %74, null
  br i1 %75, label %bb56, label %bb57

bb56:                                             ; preds = %bb55
  %76 = load i8** %dev_name, align 8
  call void @free(i8* %76) nounwind
  %77 = load i8** %resolved_dev, align 8
  store i8* %77, i8** %dev_name, align 8
  br label %bb57

bb57:                                             ; preds = %bb56, %bb55, %bb53, %bb51
  %78 = load i8** %fstype_addr, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %bb58, label %bb59

bb58:                                             ; preds = %bb57
  store i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0), i8** %fstype_addr, align 8
  br label %bb59

bb59:                                             ; preds = %bb58, %bb57
  call void @get_field_values(%struct.field_values_t* %block_values, %struct.field_values_t* %inode_values, %struct.fs_usage* %fsu) nounwind
  %80 = load i8* @print_grand_total, align 1
  %toBool60 = icmp ne i8 %80, 0
  br i1 %toBool60, label %bb61, label %bb63

bb61:                                             ; preds = %bb59
  %81 = load %struct.fs_usage** %force_fsu_addr, align 8
  %82 = icmp eq %struct.fs_usage* %81, null
  br i1 %82, label %bb62, label %bb63

bb62:                                             ; preds = %bb61
  call void @add_to_grand_total(%struct.field_values_t* %block_values, %struct.field_values_t* %inode_values) nounwind
  br label %bb63

bb63:                                             ; preds = %bb62, %bb61, %bb59
  store i64 0, i64* %col, align 8
  br label %bb139

bb64:                                             ; preds = %bb139
  %83 = load %struct.field_data_t*** @columns, align 8
  %84 = load i64* %col, align 8
  %85 = getelementptr inbounds %struct.field_data_t** %83, i64 %84
  %86 = load %struct.field_data_t** %85, align 1
  %87 = getelementptr inbounds %struct.field_data_t* %86, i32 0, i32 2
  %88 = load i32* %87, align 8
  switch i32 %88, label %bb68 [
    i32 0, label %bb65
    i32 1, label %bb66
    i32 2, label %bb67
  ]

bb65:                                             ; preds = %bb64
  store %struct.field_values_t* %block_values, %struct.field_values_t** %v, align 8
  br label %bb69

bb66:                                             ; preds = %bb64
  store %struct.field_values_t* %inode_values, %struct.field_values_t** %v, align 8
  br label %bb69

bb67:                                             ; preds = %bb64
  store %struct.field_values_t* null, %struct.field_values_t** %v, align 8
  br label %bb69

bb68:                                             ; preds = %bb64
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8]* @.str55, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i32 958, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6599, i64 0, i64 0)) noreturn noun
  unreachable

bb69:                                             ; preds = %bb67, %bb66, %bb65
  %89 = load %struct.field_data_t*** @columns, align 8
  %90 = load i64* %col, align 8
  %91 = getelementptr inbounds %struct.field_data_t** %89, i64 %90
  %92 = load %struct.field_data_t** %91, align 1
  %93 = getelementptr inbounds %struct.field_data_t* %92, i32 0, i32 0
  %94 = load i32* %93, align 8
  switch i32 %94, label %bb132 [
    i32 0, label %bb70
    i32 1, label %bb71
    i32 2, label %bb72
    i32 3, label %bb74
    i32 4, label %bb76
    i32 5, label %bb78
    i32 6, label %bb72
    i32 7, label %bb74
    i32 8, label %bb76
    i32 9, label %bb78
    i32 10, label %bb131
    i32 11, label %bb130
  ]

bb70:                                             ; preds = %bb69
  %95 = load i8** %dev_name, align 8
  %96 = call noalias i8* @xstrdup(i8* %95) nounwind
  store i8* %96, i8** %cell, align 8
  br label %bb133

bb71:                                             ; preds = %bb69
  %97 = load i8** %fstype_addr, align 8
  %98 = call noalias i8* @xstrdup(i8* %97) nounwind
  store i8* %98, i8** %cell, align 8
  br label %bb133

bb72:                                             ; preds = %bb69, %bb69
  %99 = load %struct.field_values_t** %v, align 8
  %100 = getelementptr inbounds %struct.field_values_t* %99, i32 0, i32 1
  %101 = load i64* %100, align 8
  %102 = load %struct.field_values_t** %v, align 8
  %103 = getelementptr inbounds %struct.field_values_t* %102, i32 0, i32 0
  %104 = load i64* %103, align 8
  %105 = load %struct.field_values_t** %v, align 8
  %106 = getelementptr inbounds %struct.field_values_t* %105, i32 0, i32 2
  %107 = load i64* %106, align 8
  %buf73 = bitcast [653 x i8]* %buf to i8*
  %108 = call i8* @df_readable(i8 zeroext 0, i64 %107, i8* %buf73, i64 %104, i64 %101) nounwind
  %109 = call noalias i8* @xstrdup(i8* %108) nounwind
  store i8* %109, i8** %cell, align 8
  br label %bb133

bb74:                                             ; preds = %bb69, %bb69
  %110 = load %struct.field_values_t** %v, align 8
  %111 = getelementptr inbounds %struct.field_values_t* %110, i32 0, i32 1
  %112 = load i64* %111, align 8
  %113 = load %struct.field_values_t** %v, align 8
  %114 = getelementptr inbounds %struct.field_values_t* %113, i32 0, i32 0
  %115 = load i64* %114, align 8
  %116 = load %struct.field_values_t** %v, align 8
  %117 = getelementptr inbounds %struct.field_values_t* %116, i32 0, i32 6
  %118 = load i64* %117, align 8
  %119 = load %struct.field_values_t** %v, align 8
  %120 = getelementptr inbounds %struct.field_values_t* %119, i32 0, i32 7
  %121 = load i8* %120, align 8
  %122 = zext i8 %121 to i32
  %123 = trunc i32 %122 to i8
  %buf75 = bitcast [653 x i8]* %buf to i8*
  %124 = call i8* @df_readable(i8 zeroext %123, i64 %118, i8* %buf75, i64 %115, i64 %112) nounwind
  %125 = call noalias i8* @xstrdup(i8* %124) nounwind
  store i8* %125, i8** %cell, align 8
  br label %bb133

bb76:                                             ; preds = %bb69, %bb69
  %126 = load %struct.field_values_t** %v, align 8
  %127 = getelementptr inbounds %struct.field_values_t* %126, i32 0, i32 1
  %128 = load i64* %127, align 8
  %129 = load %struct.field_values_t** %v, align 8
  %130 = getelementptr inbounds %struct.field_values_t* %129, i32 0, i32 0
  %131 = load i64* %130, align 8
  %132 = load %struct.field_values_t** %v, align 8
  %133 = getelementptr inbounds %struct.field_values_t* %132, i32 0, i32 3
  %134 = load i64* %133, align 8
  %135 = load %struct.field_values_t** %v, align 8
  %136 = getelementptr inbounds %struct.field_values_t* %135, i32 0, i32 4
  %137 = load i8* %136, align 8
  %138 = zext i8 %137 to i32
  %139 = trunc i32 %138 to i8
  %buf77 = bitcast [653 x i8]* %buf to i8*
  %140 = call i8* @df_readable(i8 zeroext %139, i64 %134, i8* %buf77, i64 %131, i64 %128) nounwind
  %141 = call noalias i8* @xstrdup(i8* %140) nounwind
  store i8* %141, i8** %cell, align 8
  br label %bb133

bb78:                                             ; preds = %bb69, %bb69
  store double -1.000000e+00, double* %pct, align 8
  %142 = load %struct.field_values_t** %v, align 8
  %143 = getelementptr inbounds %struct.field_values_t* %142, i32 0, i32 6
  %144 = load i64* %143, align 8
  %145 = call zeroext i8 @known_value(i64 %144) nounwind
  %toBool79 = icmp ne i8 %145, 0
  %toBool79not = xor i1 %toBool79, true
  %toBool79not80 = zext i1 %toBool79not to i8
  %toBool82 = icmp ne i8 %toBool79not80, 0
  %toBool82not = xor i1 %toBool82, true
  %toBool82not83 = zext i1 %toBool82not to i8
  %toBool85 = icmp ne i8 %toBool82not83, 0
  br i1 %toBool85, label %bb86, label %bb122

bb86:                                             ; preds = %bb78
  %146 = load %struct.field_values_t** %v, align 8
  %147 = getelementptr inbounds %struct.field_values_t* %146, i32 0, i32 3
  %148 = load i64* %147, align 8
  %149 = call zeroext i8 @known_value(i64 %148) nounwind
  %toBool87 = icmp ne i8 %149, 0
  %toBool87not = xor i1 %toBool87, true
  %toBool87not88 = zext i1 %toBool87not to i8
  %toBool90 = icmp ne i8 %toBool87not88, 0
  %toBool90not = xor i1 %toBool90, true
  %toBool90not91 = zext i1 %toBool90not to i8
  %toBool93 = icmp ne i8 %toBool90not91, 0
  br i1 %toBool93, label %bb94, label %bb122

bb94:                                             ; preds = %bb86
  %150 = load %struct.field_values_t** %v, align 8
  %151 = getelementptr inbounds %struct.field_values_t* %150, i32 0, i32 7
  %152 = load i8* %151, align 8
  %toBool95 = icmp ne i8 %152, 0
  %toBool95not = xor i1 %toBool95, true
  %toBool95not96 = zext i1 %toBool95not to i8
  %toBool98 = icmp ne i8 %toBool95not96, 0
  %toBool98not = xor i1 %toBool98, true
  %toBool98not99 = zext i1 %toBool98not to i8
  %toBool101 = icmp ne i8 %toBool98not99, 0
  br i1 %toBool101, label %bb106, label %bb102

bb102:                                            ; preds = %bb94
  %153 = load %struct.field_values_t** %v, align 8
  %154 = getelementptr inbounds %struct.field_values_t* %153, i32 0, i32 6
  %155 = load i64* %154, align 8
  %156 = icmp ugt i64 %155, 184467440737095516
  br i1 %156, label %bb106, label %bb103

bb103:                                            ; preds = %bb102
  %157 = load %struct.field_values_t** %v, align 8
  %158 = getelementptr inbounds %struct.field_values_t* %157, i32 0, i32 6
  %159 = load i64* %158, align 8
  %160 = load %struct.field_values_t** %v, align 8
  %161 = getelementptr inbounds %struct.field_values_t* %160, i32 0, i32 3
  %162 = load i64* %161, align 8
  %163 = add i64 %159, %162
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %bb106, label %bb104

bb104:                                            ; preds = %bb103
  %165 = load %struct.field_values_t** %v, align 8
  %166 = getelementptr inbounds %struct.field_values_t* %165, i32 0, i32 6
  %167 = load i64* %166, align 8
  %168 = load %struct.field_values_t** %v, align 8
  %169 = getelementptr inbounds %struct.field_values_t* %168, i32 0, i32 3
  %170 = load i64* %169, align 8
  %171 = add i64 %167, %170
  %172 = load %struct.field_values_t** %v, align 8
  %173 = getelementptr inbounds %struct.field_values_t* %172, i32 0, i32 6
  %174 = load i64* %173, align 8
  %175 = icmp ult i64 %171, %174
  %176 = zext i1 %175 to i32
  %177 = load %struct.field_values_t** %v, align 8
  %178 = getelementptr inbounds %struct.field_values_t* %177, i32 0, i32 4
  %179 = load i8* %178, align 8
  %180 = zext i8 %179 to i32
  %181 = icmp ne i32 %176, %180
  br i1 %181, label %bb106, label %bb105

bb105:                                            ; preds = %bb104
  %182 = load %struct.field_values_t** %v, align 8
  %183 = getelementptr inbounds %struct.field_values_t* %182, i32 0, i32 6
  %184 = load i64* %183, align 8
  %185 = mul i64 %184, 100
  store i64 %185, i64* %u100, align 8
  %186 = load %struct.field_values_t** %v, align 8
  %187 = getelementptr inbounds %struct.field_values_t* %186, i32 0, i32 6
  %188 = load i64* %187, align 8
  %189 = load %struct.field_values_t** %v, align 8
  %190 = getelementptr inbounds %struct.field_values_t* %189, i32 0, i32 3
  %191 = load i64* %190, align 8
  %192 = add i64 %188, %191
  store i64 %192, i64* %nonroot_total, align 8
  %193 = load i64* %u100, align 8
  %194 = load i64* %nonroot_total, align 8
  %int_cast_to_i64 = bitcast i64 %194 to i64
  %195 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %196 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %196, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb105
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb105
  call void @klee_disable_symbex() nounwind
  %197 = udiv i64 %193, %194
  %198 = load i64* %u100, align 8
  %199 = load i64* %nonroot_total, align 8
  %int_cast_to_i641 = bitcast i64 %199 to i64
  %200 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %201 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %201, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %202 = urem i64 %198, %199
  %203 = icmp ne i64 %202, 0
  %204 = zext i1 %203 to i64
  %205 = add i64 %197, %204
  %206 = uitofp i64 %205 to double
  store double %206, double* %pct, align 8
  br label %bb122

bb106:                                            ; preds = %bb104, %bb103, %bb102, %bb94
  %207 = load %struct.field_values_t** %v, align 8
  %208 = getelementptr inbounds %struct.field_values_t* %207, i32 0, i32 7
  %209 = load i8* %208, align 8
  %toBool108 = icmp ne i8 %209, 0
  %210 = load %struct.field_values_t** %v, align 8
  %211 = getelementptr inbounds %struct.field_values_t* %210, i32 0, i32 6
  %212 = load i64* %211, align 8
  br i1 %toBool108, label %bb109, label %bb110

bb109:                                            ; preds = %bb106
  %213 = sub i64 0, %212
  %214 = uitofp i64 %213 to double
  %215 = fsub double -0.000000e+00, %214
  store double %215, double* %iftmp.117, align 8
  br label %bb111

bb110:                                            ; preds = %bb106
  %216 = uitofp i64 %212 to double
  store double %216, double* %iftmp.117, align 8
  br label %bb111

bb111:                                            ; preds = %bb110, %bb109
  %217 = load double* %iftmp.117, align 8
  store double %217, double* %u, align 8
  %218 = load %struct.field_values_t** %v, align 8
  %219 = getelementptr inbounds %struct.field_values_t* %218, i32 0, i32 4
  %220 = load i8* %219, align 8
  %toBool112 = icmp ne i8 %220, 0
  %221 = load %struct.field_values_t** %v, align 8
  %222 = getelementptr inbounds %struct.field_values_t* %221, i32 0, i32 3
  %223 = load i64* %222, align 8
  br i1 %toBool112, label %bb113, label %bb114

bb113:                                            ; preds = %bb111
  %224 = sub i64 0, %223
  %225 = uitofp i64 %224 to double
  %226 = fsub double -0.000000e+00, %225
  store double %226, double* %iftmp.118, align 8
  br label %bb115

bb114:                                            ; preds = %bb111
  %227 = uitofp i64 %223 to double
  store double %227, double* %iftmp.118, align 8
  br label %bb115

bb115:                                            ; preds = %bb114, %bb113
  %228 = load double* %iftmp.118, align 8
  store double %228, double* %a, align 8
  %229 = load double* %u, align 8
  %230 = load double* %a, align 8
  %231 = fadd double %229, %230
  store double %231, double* %nonroot_total107, align 8
  %232 = load double* %nonroot_total107, align 8
  %233 = fcmp une double %232, 0.000000e+00
  br i1 %233, label %bb116, label %bb122

bb116:                                            ; preds = %bb115
  %234 = load double* %u, align 8
  %235 = fmul double %234, 1.000000e+02
  %236 = load double* %nonroot_total107, align 8
  %237 = fdiv double %235, %236
  store double %237, double* %pct, align 8
  %238 = load double* %pct, align 8
  %239 = fptosi double %238 to i64
  store i64 %239, i64* %lipct, align 8
  %240 = load i64* %lipct, align 8
  %241 = sitofp i64 %240 to double
  store double %241, double* %ipct, align 8
  %242 = load double* %ipct, align 8
  %243 = fsub double %242, 1.000000e+00
  %244 = load double* %pct, align 8
  %245 = fcmp olt double %243, %244
  br i1 %245, label %bb117, label %bb122

bb117:                                            ; preds = %bb116
  %246 = load double* %ipct, align 8
  %247 = fadd double %246, 1.000000e+00
  %248 = load double* %pct, align 8
  %249 = fcmp oge double %247, %248
  br i1 %249, label %bb118, label %bb122

bb118:                                            ; preds = %bb117
  %250 = load double* %ipct, align 8
  %251 = load double* %pct, align 8
  %252 = fcmp olt double %250, %251
  br i1 %252, label %bb119, label %bb120

bb119:                                            ; preds = %bb118
  store double 1.000000e+00, double* %iftmp.119, align 8
  br label %bb121

bb120:                                            ; preds = %bb118
  store double 0.000000e+00, double* %iftmp.119, align 8
  br label %bb121

bb121:                                            ; preds = %bb120, %bb119
  %253 = load double* %iftmp.119, align 8
  %254 = load double* %ipct, align 8
  %255 = fadd double %253, %254
  store double %255, double* %pct, align 8
  br label %bb122

bb122:                                            ; preds = %bb121, %bb117, %bb116, %bb115, %klee_div_zero_check.exit3, %bb86, %bb78
  %256 = load double* %pct, align 8
  %257 = fcmp oge double %256, 0.000000e+00
  br i1 %257, label %bb123, label %bb126

bb123:                                            ; preds = %bb122
  %258 = load double* %pct, align 8
  %259 = call i32 (i8**, i8*, ...)* @rpl_asprintf(i8** %cell, i8* getelementptr inbounds ([7 x i8]* @.str56, i64 0, i64 0), double %258) nounwind
  %260 = icmp eq i32 %259, -1
  br i1 %260, label %bb124, label %bb127

bb124:                                            ; preds = %bb123
  store i8* null, i8** %cell, align 8
  br label %bb127

bb126:                                            ; preds = %bb122
  %261 = call noalias i8* @strdup(i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0)) nounwind
  store i8* %261, i8** %cell, align 8
  br label %bb127

bb127:                                            ; preds = %bb123, %bb124, %bb126
  %262 = load i8** %cell, align 8
  %263 = icmp eq i8* %262, null
  br i1 %263, label %bb128, label %bb133

bb128:                                            ; preds = %bb127
  call void @xalloc_die() noreturn nounwind
  unreachable

bb130:                                            ; preds = %bb69
  %264 = load i8** %file_addr, align 8
  %265 = call noalias i8* @xstrdup(i8* %264) nounwind
  store i8* %265, i8** %cell, align 8
  br label %bb133

bb131:                                            ; preds = %bb69
  %266 = load i8** %mount_point_addr, align 8
  %267 = call noalias i8* @xstrdup(i8* %266) nounwind
  store i8* %267, i8** %cell, align 8
  br label %bb133

bb132:                                            ; preds = %bb69
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8]* @.str57, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i32 1060, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6599, i64 0, i64 0)) noreturn nou
  unreachable

bb133:                                            ; preds = %bb127, %bb131, %bb130, %bb76, %bb74, %bb72, %bb71, %bb70
  %268 = load i8** %cell, align 8
  %269 = icmp eq i8* %268, null
  br i1 %269, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8]* @.str58, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i32 1064, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6599, i64 0, i64 0)) noreturn nou
  unreachable

bb135:                                            ; preds = %bb133
  %270 = load i8** %cell, align 8
  %271 = call i8* @hide_problematic_chars(i8* %270) nounwind
  %272 = load %struct.field_data_t*** @columns, align 8
  %273 = load i64* %col, align 8
  %274 = getelementptr inbounds %struct.field_data_t** %272, i64 %273
  %275 = load %struct.field_data_t** %274, align 1
  %276 = load %struct.field_data_t*** @columns, align 8
  %277 = load i64* %col, align 8
  %278 = getelementptr inbounds %struct.field_data_t** %276, i64 %277
  %279 = load %struct.field_data_t** %278, align 1
  %280 = getelementptr inbounds %struct.field_data_t* %279, i32 0, i32 4
  %281 = load i64* %280, align 8
  %282 = load i8** %cell, align 8
  %283 = call i32 @gnu_mbswidth(i8* %282, i32 0) nounwind
  %284 = sext i32 %283 to i64
  %285 = icmp ugt i64 %281, %284
  br i1 %285, label %bb136, label %bb137

bb136:                                            ; preds = %bb135
  %286 = load %struct.field_data_t*** @columns, align 8
  %287 = load i64* %col, align 8
  %288 = getelementptr inbounds %struct.field_data_t** %286, i64 %287
  %289 = load %struct.field_data_t** %288, align 1
  %290 = getelementptr inbounds %struct.field_data_t* %289, i32 0, i32 4
  %291 = load i64* %290, align 8
  store i64 %291, i64* %iftmp.124, align 8
  br label %bb138

bb137:                                            ; preds = %bb135
  %292 = load i8** %cell, align 8
  %293 = call i32 @gnu_mbswidth(i8* %292, i32 0) nounwind
  %294 = sext i32 %293 to i64
  store i64 %294, i64* %iftmp.124, align 8
  br label %bb138

bb138:                                            ; preds = %bb137, %bb136
  %295 = getelementptr inbounds %struct.field_data_t* %275, i32 0, i32 4
  %296 = load i64* %iftmp.124, align 8
  store i64 %296, i64* %295, align 8
  %297 = load i8**** @table, align 8
  %298 = load i64* @nrows, align 8
  %299 = sub i64 %298, 1
  %300 = getelementptr inbounds i8*** %297, i64 %299
  %301 = load i8*** %300, align 1
  %302 = load i8** %cell, align 8
  %303 = load i64* %col, align 8
  %304 = getelementptr inbounds i8** %301, i64 %303
  store i8* %302, i8** %304, align 1
  %305 = load i64* %col, align 8
  %306 = add i64 %305, 1
  store i64 %306, i64* %col, align 8
  br label %bb139

bb139:                                            ; preds = %bb138, %bb63
  %307 = load i64* @ncolumns, align 8
  %308 = load i64* %col, align 8
  %309 = icmp ult i64 %308, %307
  br i1 %309, label %bb64, label %bb140

bb140:                                            ; preds = %bb139
  %310 = load i8** %dev_name, align 8
  call void @free(i8* %310) nounwind
  br label %return

return:                                           ; preds = %bb9, %bb24, %bb33, %bb40, %bb140, %entry, %bb19, %bb14
  ret void
}

define internal zeroext i8 @get_disk(i8* %disk) nounwind {
entry:
  %disk_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %me = alloca %struct.mount_entry*
  %best_match = alloca %struct.mount_entry*
  %file = alloca i8*
  %resolved = alloca i8*
  %best_match_len = alloca i64
  %devname = alloca i8*
  %canon_dev = alloca i8*
  %len = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %disk, i8** %disk_addr
  store %struct.mount_entry* null, %struct.mount_entry** %best_match, align 8
  %1 = load i8** %disk_addr, align 8
  store i8* %1, i8** %file, align 8
  %2 = load i8** %disk_addr, align 8
  %3 = call i8* @canonicalize_file_name(i8* %2) nounwind
  store i8* %3, i8** %resolved, align 8
  %4 = load i8** %resolved, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %bb, label %bb2

bb:                                               ; preds = %entry
  %6 = load i8** %resolved, align 8
  %7 = getelementptr inbounds i8* %6, i64 0
  %8 = load i8* %7, align 1
  %9 = icmp eq i8 %8, 47
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %10 = load i8** %resolved, align 8
  store i8* %10, i8** %disk_addr, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb, %entry
  store i64 -1, i64* %best_match_len, align 8
  %11 = load %struct.mount_entry** @mount_list, align 8
  store %struct.mount_entry* %11, %struct.mount_entry** %me, align 8
  br label %bb11

bb3:                                              ; preds = %bb11
  %12 = load %struct.mount_entry** %me, align 8
  %13 = getelementptr inbounds %struct.mount_entry* %12, i32 0, i32 0
  %14 = load i8** %13, align 8
  store i8* %14, i8** %devname, align 8
  %15 = load %struct.mount_entry** %me, align 8
  %16 = getelementptr inbounds %struct.mount_entry* %15, i32 0, i32 0
  %17 = load i8** %16, align 8
  %18 = call i8* @canonicalize_file_name(i8* %17) nounwind
  store i8* %18, i8** %canon_dev, align 8
  %19 = load i8** %canon_dev, align 8
  %20 = icmp ne i8* %19, null
  br i1 %20, label %bb4, label %bb6

bb4:                                              ; preds = %bb3
  %21 = load i8** %canon_dev, align 8
  %22 = getelementptr inbounds i8* %21, i64 0
  %23 = load i8* %22, align 1
  %24 = icmp eq i8 %23, 47
  br i1 %24, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %25 = load i8** %canon_dev, align 8
  store i8* %25, i8** %devname, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4, %bb3
  %26 = load i8** %disk_addr, align 8
  %27 = load i8** %devname, align 8
  %28 = call i32 @strcmp(i8* %26, i8* %27) nounwind readonly
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %bb7, label %bb10

bb7:                                              ; preds = %bb6
  %30 = load %struct.mount_entry** %me, align 8
  %31 = getelementptr inbounds %struct.mount_entry* %30, i32 0, i32 1
  %32 = load i8** %31, align 8
  %33 = call i64 @strlen(i8* %32) nounwind readonly
  store i64 %33, i64* %len, align 8
  %34 = load i64* %len, align 8
  %35 = load i64* %best_match_len, align 8
  %36 = icmp ult i64 %34, %35
  br i1 %36, label %bb8, label %bb10

bb8:                                              ; preds = %bb7
  %37 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %37, %struct.mount_entry** %best_match, align 8
  %38 = load i64* %len, align 8
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %bb12, label %bb9

bb9:                                              ; preds = %bb8
  %40 = load i64* %len, align 8
  store i64 %40, i64* %best_match_len, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7, %bb6
  %41 = load i8** %canon_dev, align 8
  call void @free(i8* %41) nounwind
  %42 = load %struct.mount_entry** %me, align 8
  %43 = getelementptr inbounds %struct.mount_entry* %42, i32 0, i32 5
  %44 = load %struct.mount_entry** %43, align 8
  store %struct.mount_entry* %44, %struct.mount_entry** %me, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb2
  %45 = load %struct.mount_entry** %me, align 8
  %46 = icmp ne %struct.mount_entry* %45, null
  br i1 %46, label %bb3, label %bb12

bb12:                                             ; preds = %bb11, %bb8
  %47 = load i8** %resolved, align 8
  call void @free(i8* %47) nounwind
  %48 = load %struct.mount_entry** %best_match, align 8
  %49 = icmp ne %struct.mount_entry* %48, null
  br i1 %49, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %50 = load %struct.mount_entry** %best_match, align 8
  %51 = getelementptr inbounds %struct.mount_entry* %50, i32 0, i32 4
  %52 = load i64* %51, align 8
  %int_cast_to_i64 = bitcast i64 62 to i64
  %53 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %53, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb13
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb13
  %54 = shl i64 %52, 62
  %int_cast_to_i641 = bitcast i64 63 to i64
  %55 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %55, label %klee_overshift_check.exit5, label %bb.i4

bb.i4:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit5:                       ; preds = %klee_overshift_check.exit
  %56 = lshr i64 %54, 63
  %57 = trunc i64 %56 to i1
  %58 = icmp ne i1 %57, false
  %59 = zext i1 %58 to i32
  %60 = load %struct.mount_entry** %best_match, align 8
  %61 = getelementptr inbounds %struct.mount_entry* %60, i32 0, i32 4
  %62 = load i64* %61, align 8
  %int_cast_to_i642 = bitcast i64 63 to i64
  %63 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %63, label %klee_overshift_check.exit7, label %bb.i6

bb.i6:                                            ; preds = %klee_overshift_check.exit5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit7:                       ; preds = %klee_overshift_check.exit5
  %64 = shl i64 %62, 63
  %int_cast_to_i643 = bitcast i64 63 to i64
  %65 = icmp ult i64 %int_cast_to_i643, 64
  br i1 %65, label %klee_overshift_check.exit9, label %bb.i8

bb.i8:                                            ; preds = %klee_overshift_check.exit7
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit9:                       ; preds = %klee_overshift_check.exit7
  %66 = lshr i64 %64, 63
  %67 = trunc i64 %66 to i1
  %68 = icmp ne i1 %67, false
  %69 = zext i1 %68 to i32
  %70 = load %struct.mount_entry** %best_match, align 8
  %71 = getelementptr inbounds %struct.mount_entry* %70, i32 0, i32 2
  %72 = load i8** %71, align 8
  %73 = load %struct.mount_entry** %best_match, align 8
  %74 = getelementptr inbounds %struct.mount_entry* %73, i32 0, i32 1
  %75 = load i8** %74, align 8
  %76 = load %struct.mount_entry** %best_match, align 8
  %77 = getelementptr inbounds %struct.mount_entry* %76, i32 0, i32 0
  %78 = load i8** %77, align 8
  %79 = load i8** %file, align 8
  %80 = trunc i32 %69 to i8
  %81 = trunc i32 %59 to i8
  call void @get_dev(i8* %78, i8* %75, i8* %79, i8* null, i8* %72, i8 zeroext %80, i8 zeroext %81, %struct.fs_usage* null, i8 zeroext 0) nounwind
  store i32 1, i32* %0, align 4
  br label %bb15

bb14:                                             ; preds = %bb12
  store i32 0, i32* %0, align 4
  br label %bb15

bb15:                                             ; preds = %bb14, %klee_overshift_check.exit9
  %82 = load i32* %0, align 4
  store i32 %82, i32* %retval, align 4
  %retval16 = load i32* %retval
  %retval1617 = trunc i32 %retval16 to i8
  ret i8 %retval1617
}

define internal void @get_point(i8* %point, %struct.stat* %statp) nounwind {
entry:
  %point_addr = alloca i8*, align 8
  %statp_addr = alloca %struct.stat*, align 8
  %disk_stats = alloca %struct.stat
  %me = alloca %struct.mount_entry*
  %best_match = alloca %struct.mount_entry*
  %resolved = alloca i8*
  %resolved_len = alloca i64
  %best_match_len = alloca i64
  %len = alloca i64
  %mp = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %point, i8** %point_addr
  store %struct.stat* %statp, %struct.stat** %statp_addr
  store %struct.mount_entry* null, %struct.mount_entry** %best_match, align 8
  %0 = load i8** %point_addr, align 8
  %1 = call i8* @canonicalize_file_name(i8* %0) nounwind
  store i8* %1, i8** %resolved, align 8
  %2 = load i8** %resolved, align 8
  %3 = icmp ne i8* %2, null
  br i1 %3, label %bb, label %bb15

bb:                                               ; preds = %entry
  %4 = load i8** %resolved, align 8
  %5 = getelementptr inbounds i8* %4, i64 0
  %6 = load i8* %5, align 1
  %7 = icmp eq i8 %6, 47
  br i1 %7, label %bb1, label %bb15

bb1:                                              ; preds = %bb
  %8 = load i8** %resolved, align 8
  %9 = call i64 @strlen(i8* %8) nounwind readonly
  store i64 %9, i64* %resolved_len, align 8
  store i64 0, i64* %best_match_len, align 8
  %10 = load %struct.mount_entry** @mount_list, align 8
  store %struct.mount_entry* %10, %struct.mount_entry** %me, align 8
  br label %bb14

bb2:                                              ; preds = %bb14
  %11 = load %struct.mount_entry** %me, align 8
  %12 = getelementptr inbounds %struct.mount_entry* %11, i32 0, i32 2
  %13 = load i8** %12, align 8
  %14 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([5 x i8]* @.str59, i64 0, i64 0)) nounwind readonly
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %bb3, label %bb13

bb3:                                              ; preds = %bb2
  %16 = load %struct.mount_entry** %best_match, align 8
  %17 = icmp eq %struct.mount_entry* %16, null
  br i1 %17, label %bb6, label %bb4

bb4:                                              ; preds = %bb3
  %18 = load %struct.mount_entry** %best_match, align 8
  %19 = getelementptr inbounds %struct.mount_entry* %18, i32 0, i32 4
  %20 = load i64* %19, align 8
  %int_cast_to_i64 = bitcast i64 63 to i64
  %21 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %21, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb4
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb4
  %22 = shl i64 %20, 63
  %int_cast_to_i641 = bitcast i64 63 to i64
  %23 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %23, label %klee_overshift_check.exit13, label %bb.i12

bb.i12:                                           ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit13:                      ; preds = %klee_overshift_check.exit
  %24 = lshr i64 %22, 63
  %25 = trunc i64 %24 to i1
  %26 = icmp ne i1 %25, false
  br i1 %26, label %bb6, label %bb5

bb5:                                              ; preds = %klee_overshift_check.exit13
  %27 = load %struct.mount_entry** %me, align 8
  %28 = getelementptr inbounds %struct.mount_entry* %27, i32 0, i32 4
  %29 = load i64* %28, align 8
  %int_cast_to_i642 = bitcast i64 63 to i64
  %30 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %30, label %klee_overshift_check.exit15, label %bb.i14

bb.i14:                                           ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit15:                      ; preds = %bb5
  %31 = shl i64 %29, 63
  %int_cast_to_i643 = bitcast i64 63 to i64
  %32 = icmp ult i64 %int_cast_to_i643, 64
  br i1 %32, label %klee_overshift_check.exit17, label %bb.i16

bb.i16:                                           ; preds = %klee_overshift_check.exit15
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit17:                      ; preds = %klee_overshift_check.exit15
  %33 = lshr i64 %31, 63
  %34 = trunc i64 %33 to i1
  %35 = icmp eq i1 %34, false
  br i1 %35, label %bb6, label %bb13

bb6:                                              ; preds = %klee_overshift_check.exit17, %klee_overshift_check.exit13, %bb3
  %36 = load %struct.mount_entry** %me, align 8
  %37 = getelementptr inbounds %struct.mount_entry* %36, i32 0, i32 1
  %38 = load i8** %37, align 8
  %39 = call i64 @strlen(i8* %38) nounwind readonly
  store i64 %39, i64* %len, align 8
  %40 = load i64* %best_match_len, align 8
  %41 = load i64* %len, align 8
  %42 = icmp ule i64 %40, %41
  br i1 %42, label %bb7, label %bb13

bb7:                                              ; preds = %bb6
  %43 = load i64* %len, align 8
  %44 = load i64* %resolved_len, align 8
  %45 = icmp ule i64 %43, %44
  br i1 %45, label %bb8, label %bb13

bb8:                                              ; preds = %bb7
  %46 = load i64* %len, align 8
  %47 = icmp eq i64 %46, 1
  br i1 %47, label %bb12, label %bb9

bb9:                                              ; preds = %bb8
  %48 = load i64* %len, align 8
  %49 = load i64* %resolved_len, align 8
  %50 = icmp eq i64 %48, %49
  br i1 %50, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  %51 = load i8** %resolved, align 8
  %52 = load i64* %len, align 8
  %53 = getelementptr inbounds i8* %51, i64 %52
  %54 = load i8* %53, align 1
  %55 = icmp eq i8 %54, 47
  br i1 %55, label %bb11, label %bb13

bb11:                                             ; preds = %bb10, %bb9
  %56 = load %struct.mount_entry** %me, align 8
  %57 = getelementptr inbounds %struct.mount_entry* %56, i32 0, i32 1
  %58 = load i8** %57, align 8
  %59 = load i8** %resolved, align 8
  %60 = load i64* %len, align 8
  %61 = call i32 @strncmp(i8* %58, i8* %59, i64 %60) nounwind readonly
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %bb12, label %bb13

bb12:                                             ; preds = %bb11, %bb8
  %63 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %63, %struct.mount_entry** %best_match, align 8
  %64 = load i64* %len, align 8
  store i64 %64, i64* %best_match_len, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11, %bb10, %bb7, %bb6, %klee_overshift_check.exit17, %bb2
  %65 = load %struct.mount_entry** %me, align 8
  %66 = getelementptr inbounds %struct.mount_entry* %65, i32 0, i32 5
  %67 = load %struct.mount_entry** %66, align 8
  store %struct.mount_entry* %67, %struct.mount_entry** %me, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb1
  %68 = load %struct.mount_entry** %me, align 8
  %69 = icmp ne %struct.mount_entry* %68, null
  br i1 %69, label %bb2, label %bb15

bb15:                                             ; preds = %bb14, %bb, %entry
  %70 = load i8** %resolved, align 8
  call void @free(i8* %70) nounwind
  %71 = load %struct.mount_entry** %best_match, align 8
  %72 = icmp ne %struct.mount_entry* %71, null
  br i1 %72, label %bb16, label %bb19

bb16:                                             ; preds = %bb15
  %73 = load %struct.mount_entry** %best_match, align 8
  %74 = getelementptr inbounds %struct.mount_entry* %73, i32 0, i32 1
  %75 = load i8** %74, align 8
  %76 = call i32 @stat(i8* noalias %75, %struct.stat* noalias %disk_stats) nounwind
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %bb18, label %bb17

bb17:                                             ; preds = %bb16
  %78 = getelementptr inbounds %struct.stat* %disk_stats, i32 0, i32 0
  %79 = load i64* %78, align 8
  %80 = load %struct.stat** %statp_addr, align 8
  %81 = getelementptr inbounds %struct.stat* %80, i32 0, i32 0
  %82 = load i64* %81, align 8
  %83 = icmp ne i64 %79, %82
  br i1 %83, label %bb18, label %bb19

bb18:                                             ; preds = %bb17, %bb16
  store %struct.mount_entry* null, %struct.mount_entry** %best_match, align 8
  br label %bb19

bb19:                                             ; preds = %bb18, %bb17, %bb15
  %84 = load %struct.mount_entry** %best_match, align 8
  %85 = icmp eq %struct.mount_entry* %84, null
  br i1 %85, label %bb20, label %bb38

bb20:                                             ; preds = %bb19
  %86 = load %struct.mount_entry** @mount_list, align 8
  store %struct.mount_entry* %86, %struct.mount_entry** %me, align 8
  br label %bb37

bb21:                                             ; preds = %bb37
  %87 = load %struct.mount_entry** %me, align 8
  %88 = getelementptr inbounds %struct.mount_entry* %87, i32 0, i32 3
  %89 = load i64* %88, align 8
  %90 = icmp eq i64 %89, -1
  br i1 %90, label %bb22, label %bb27

bb22:                                             ; preds = %bb21
  %91 = load %struct.mount_entry** %me, align 8
  %92 = getelementptr inbounds %struct.mount_entry* %91, i32 0, i32 1
  %93 = load i8** %92, align 8
  %94 = call i32 @stat(i8* noalias %93, %struct.stat* noalias %disk_stats) nounwind
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  %96 = getelementptr inbounds %struct.stat* %disk_stats, i32 0, i32 0
  %97 = load i64* %96, align 8
  %98 = load %struct.mount_entry** %me, align 8
  %99 = getelementptr inbounds %struct.mount_entry* %98, i32 0, i32 3
  store i64 %97, i64* %99, align 8
  br label %bb27

bb24:                                             ; preds = %bb22
  %100 = call i32* @__errno_location() nounwind readnone
  %101 = load i32* %100, align 4
  %102 = icmp eq i32 %101, 5
  br i1 %102, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  %103 = load %struct.mount_entry** %me, align 8
  %104 = getelementptr inbounds %struct.mount_entry* %103, i32 0, i32 1
  %105 = load i8** %104, align 8
  %106 = call i8* @quote(i8* %105) nounwind
  %107 = call i32* @__errno_location() nounwind readnone
  %108 = load i32* %107, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %108, i8* getelementptr inbounds ([3 x i8]* @.str54, i64 0, i64 0), i8* %106) nounwind
  store i32 1, i32* @exit_status, align 4
  br label %bb26

bb26:                                             ; preds = %bb25, %bb24
  %109 = load %struct.mount_entry** %me, align 8
  %110 = getelementptr inbounds %struct.mount_entry* %109, i32 0, i32 3
  store i64 -2, i64* %110, align 8
  br label %bb27

bb27:                                             ; preds = %bb26, %bb23, %bb21
  %111 = load %struct.stat** %statp_addr, align 8
  %112 = getelementptr inbounds %struct.stat* %111, i32 0, i32 0
  %113 = load i64* %112, align 8
  %114 = load %struct.mount_entry** %me, align 8
  %115 = getelementptr inbounds %struct.mount_entry* %114, i32 0, i32 3
  %116 = load i64* %115, align 8
  %117 = icmp eq i64 %113, %116
  br i1 %117, label %bb28, label %bb36

bb28:                                             ; preds = %bb27
  %118 = load %struct.mount_entry** %me, align 8
  %119 = getelementptr inbounds %struct.mount_entry* %118, i32 0, i32 2
  %120 = load i8** %119, align 8
  %121 = call i32 @strcmp(i8* %120, i8* getelementptr inbounds ([5 x i8]* @.str59, i64 0, i64 0)) nounwind readonly
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %bb29, label %bb36

bb29:                                             ; preds = %bb28
  %123 = load %struct.mount_entry** %best_match, align 8
  %124 = icmp eq %struct.mount_entry* %123, null
  br i1 %124, label %bb32, label %bb30

bb30:                                             ; preds = %bb29
  %125 = load %struct.mount_entry** %best_match, align 8
  %126 = getelementptr inbounds %struct.mount_entry* %125, i32 0, i32 4
  %127 = load i64* %126, align 8
  %int_cast_to_i644 = bitcast i64 63 to i64
  %128 = icmp ult i64 %int_cast_to_i644, 64
  br i1 %128, label %klee_overshift_check.exit19, label %bb.i18

bb.i18:                                           ; preds = %bb30
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit19:                      ; preds = %bb30
  %129 = shl i64 %127, 63
  %int_cast_to_i645 = bitcast i64 63 to i64
  %130 = icmp ult i64 %int_cast_to_i645, 64
  br i1 %130, label %klee_overshift_check.exit21, label %bb.i20

bb.i20:                                           ; preds = %klee_overshift_check.exit19
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit21:                      ; preds = %klee_overshift_check.exit19
  %131 = lshr i64 %129, 63
  %132 = trunc i64 %131 to i1
  %133 = icmp ne i1 %132, false
  br i1 %133, label %bb32, label %bb31

bb31:                                             ; preds = %klee_overshift_check.exit21
  %134 = load %struct.mount_entry** %me, align 8
  %135 = getelementptr inbounds %struct.mount_entry* %134, i32 0, i32 4
  %136 = load i64* %135, align 8
  %int_cast_to_i646 = bitcast i64 63 to i64
  %137 = icmp ult i64 %int_cast_to_i646, 64
  br i1 %137, label %klee_overshift_check.exit23, label %bb.i22

bb.i22:                                           ; preds = %bb31
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit23:                      ; preds = %bb31
  %138 = shl i64 %136, 63
  %int_cast_to_i647 = bitcast i64 63 to i64
  %139 = icmp ult i64 %int_cast_to_i647, 64
  br i1 %139, label %klee_overshift_check.exit25, label %bb.i24

bb.i24:                                           ; preds = %klee_overshift_check.exit23
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit25:                      ; preds = %klee_overshift_check.exit23
  %140 = lshr i64 %138, 63
  %141 = trunc i64 %140 to i1
  %142 = icmp eq i1 %141, false
  br i1 %142, label %bb32, label %bb36

bb32:                                             ; preds = %klee_overshift_check.exit25, %klee_overshift_check.exit21, %bb29
  %143 = load %struct.mount_entry** %me, align 8
  %144 = getelementptr inbounds %struct.mount_entry* %143, i32 0, i32 1
  %145 = load i8** %144, align 8
  %146 = call i32 @stat(i8* noalias %145, %struct.stat* noalias %disk_stats) nounwind
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  %148 = getelementptr inbounds %struct.stat* %disk_stats, i32 0, i32 0
  %149 = load i64* %148, align 8
  %150 = load %struct.mount_entry** %me, align 8
  %151 = getelementptr inbounds %struct.mount_entry* %150, i32 0, i32 3
  %152 = load i64* %151, align 8
  %153 = icmp ne i64 %149, %152
  br i1 %153, label %bb34, label %bb35

bb34:                                             ; preds = %bb33, %bb32
  %154 = load %struct.mount_entry** %me, align 8
  %155 = getelementptr inbounds %struct.mount_entry* %154, i32 0, i32 3
  store i64 -2, i64* %155, align 8
  br label %bb36

bb35:                                             ; preds = %bb33
  %156 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %156, %struct.mount_entry** %best_match, align 8
  br label %bb36

bb36:                                             ; preds = %bb35, %bb34, %klee_overshift_check.exit25, %bb28, %bb27
  %157 = load %struct.mount_entry** %me, align 8
  %158 = getelementptr inbounds %struct.mount_entry* %157, i32 0, i32 5
  %159 = load %struct.mount_entry** %158, align 8
  store %struct.mount_entry* %159, %struct.mount_entry** %me, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb20
  %160 = load %struct.mount_entry** %me, align 8
  %161 = icmp ne %struct.mount_entry* %160, null
  br i1 %161, label %bb21, label %bb38

bb38:                                             ; preds = %bb37, %bb19
  %162 = load %struct.mount_entry** %best_match, align 8
  %163 = icmp ne %struct.mount_entry* %162, null
  br i1 %163, label %bb39, label %bb40

bb39:                                             ; preds = %bb38
  %164 = load %struct.mount_entry** %best_match, align 8
  %165 = getelementptr inbounds %struct.mount_entry* %164, i32 0, i32 4
  %166 = load i64* %165, align 8
  %int_cast_to_i648 = bitcast i64 62 to i64
  %167 = icmp ult i64 %int_cast_to_i648, 64
  br i1 %167, label %klee_overshift_check.exit27, label %bb.i26

bb.i26:                                           ; preds = %bb39
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit27:                      ; preds = %bb39
  %168 = shl i64 %166, 62
  %int_cast_to_i649 = bitcast i64 63 to i64
  %169 = icmp ult i64 %int_cast_to_i649, 64
  br i1 %169, label %klee_overshift_check.exit29, label %bb.i28

bb.i28:                                           ; preds = %klee_overshift_check.exit27
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit29:                      ; preds = %klee_overshift_check.exit27
  %170 = lshr i64 %168, 63
  %171 = trunc i64 %170 to i1
  %172 = icmp ne i1 %171, false
  %173 = zext i1 %172 to i32
  %174 = load %struct.mount_entry** %best_match, align 8
  %175 = getelementptr inbounds %struct.mount_entry* %174, i32 0, i32 4
  %176 = load i64* %175, align 8
  %int_cast_to_i6410 = bitcast i64 63 to i64
  %177 = icmp ult i64 %int_cast_to_i6410, 64
  br i1 %177, label %klee_overshift_check.exit31, label %bb.i30

bb.i30:                                           ; preds = %klee_overshift_check.exit29
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit31:                      ; preds = %klee_overshift_check.exit29
  %178 = shl i64 %176, 63
  %int_cast_to_i6411 = bitcast i64 63 to i64
  %179 = icmp ult i64 %int_cast_to_i6411, 64
  br i1 %179, label %klee_overshift_check.exit33, label %bb.i32

bb.i32:                                           ; preds = %klee_overshift_check.exit31
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit33:                      ; preds = %klee_overshift_check.exit31
  %180 = lshr i64 %178, 63
  %181 = trunc i64 %180 to i1
  %182 = icmp ne i1 %181, false
  %183 = zext i1 %182 to i32
  %184 = load %struct.mount_entry** %best_match, align 8
  %185 = getelementptr inbounds %struct.mount_entry* %184, i32 0, i32 2
  %186 = load i8** %185, align 8
  %187 = load %struct.mount_entry** %best_match, align 8
  %188 = getelementptr inbounds %struct.mount_entry* %187, i32 0, i32 1
  %189 = load i8** %188, align 8
  %190 = load %struct.mount_entry** %best_match, align 8
  %191 = getelementptr inbounds %struct.mount_entry* %190, i32 0, i32 0
  %192 = load i8** %191, align 8
  %193 = load i8** %point_addr, align 8
  %194 = load i8** %point_addr, align 8
  %195 = trunc i32 %183 to i8
  %196 = trunc i32 %173 to i8
  call void @get_dev(i8* %192, i8* %189, i8* %193, i8* %194, i8* %186, i8 zeroext %195, i8 zeroext %196, %struct.fs_usage* null, i8 zeroext 0) nounwind
  br label %return

bb40:                                             ; preds = %bb38
  %197 = load i8** %point_addr, align 8
  %198 = load %struct.stat** %statp_addr, align 8
  %199 = call i8* @find_mount_point(i8* %197, %struct.stat* %198) nounwind
  store i8* %199, i8** %mp, align 8
  %200 = load i8** %mp, align 8
  %201 = icmp ne i8* %200, null
  br i1 %201, label %bb41, label %return

bb41:                                             ; preds = %bb40
  %202 = load i8** %mp, align 8
  %203 = load i8** %point_addr, align 8
  call void @get_dev(i8* null, i8* %202, i8* %203, i8* null, i8* null, i8 zeroext 0, i8 zeroext 0, %struct.fs_usage* null, i8 zeroext 0) nounwind
  %204 = load i8** %mp, align 8
  call void @free(i8* %204) nounwind
  br label %return

return:                                           ; preds = %klee_overshift_check.exit33, %bb40, %bb41
  ret void
}

define internal void @get_entry(i8* %name, %struct.stat* %statp) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %statp_addr = alloca %struct.stat*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store %struct.stat* %statp, %struct.stat** %statp_addr
  %0 = load %struct.stat** %statp_addr, align 8
  %1 = getelementptr inbounds %struct.stat* %0, i32 0, i32 3
  %2 = load i32* %1, align 8
  %3 = and i32 %2, 61440
  %4 = icmp eq i32 %3, 24576
  br i1 %4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %5 = load %struct.stat** %statp_addr, align 8
  %6 = getelementptr inbounds %struct.stat* %5, i32 0, i32 3
  %7 = load i32* %6, align 8
  %8 = and i32 %7, 61440
  %9 = icmp eq i32 %8, 8192
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  %10 = load i8** %name_addr, align 8
  %11 = call zeroext i8 @get_disk(i8* %10) nounwind
  %toBool = icmp ne i8 %11, 0
  br i1 %toBool, label %return, label %bb2

bb2:                                              ; preds = %bb1, %bb
  %12 = load i8** %name_addr, align 8
  %13 = load %struct.stat** %statp_addr, align 8
  call void @get_point(i8* %12, %struct.stat* %13) nounwind
  br label %return

return:                                           ; preds = %bb1, %bb2
  ret void
}

define internal void @get_all_entries() nounwind {
entry:
  %me = alloca %struct.mount_entry*
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i8* @show_all_fs, align 1
  %toBool = icmp ne i8 %0, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb, label %bb4

bb:                                               ; preds = %entry
  call void @filter_mount_list() nounwind
  br label %bb4

bb4:                                              ; preds = %bb, %entry
  %1 = load %struct.mount_entry** @mount_list, align 8
  store %struct.mount_entry* %1, %struct.mount_entry** %me, align 8
  br label %bb6

bb5:                                              ; preds = %bb6
  %2 = load %struct.mount_entry** %me, align 8
  %3 = getelementptr inbounds %struct.mount_entry* %2, i32 0, i32 4
  %4 = load i64* %3, align 8
  %int_cast_to_i64 = bitcast i64 62 to i64
  %5 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %5, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb5
  %6 = shl i64 %4, 62
  %int_cast_to_i641 = bitcast i64 63 to i64
  %7 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %7, label %klee_overshift_check.exit5, label %bb.i4

bb.i4:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit5:                       ; preds = %klee_overshift_check.exit
  %8 = lshr i64 %6, 63
  %9 = trunc i64 %8 to i1
  %10 = icmp ne i1 %9, false
  %11 = zext i1 %10 to i32
  %12 = load %struct.mount_entry** %me, align 8
  %13 = getelementptr inbounds %struct.mount_entry* %12, i32 0, i32 4
  %14 = load i64* %13, align 8
  %int_cast_to_i642 = bitcast i64 63 to i64
  %15 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %15, label %klee_overshift_check.exit7, label %bb.i6

bb.i6:                                            ; preds = %klee_overshift_check.exit5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit7:                       ; preds = %klee_overshift_check.exit5
  %16 = shl i64 %14, 63
  %int_cast_to_i643 = bitcast i64 63 to i64
  %17 = icmp ult i64 %int_cast_to_i643, 64
  br i1 %17, label %klee_overshift_check.exit9, label %bb.i8

bb.i8:                                            ; preds = %klee_overshift_check.exit7
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit9:                       ; preds = %klee_overshift_check.exit7
  %18 = lshr i64 %16, 63
  %19 = trunc i64 %18 to i1
  %20 = icmp ne i1 %19, false
  %21 = zext i1 %20 to i32
  %22 = load %struct.mount_entry** %me, align 8
  %23 = getelementptr inbounds %struct.mount_entry* %22, i32 0, i32 2
  %24 = load i8** %23, align 8
  %25 = load %struct.mount_entry** %me, align 8
  %26 = getelementptr inbounds %struct.mount_entry* %25, i32 0, i32 1
  %27 = load i8** %26, align 8
  %28 = load %struct.mount_entry** %me, align 8
  %29 = getelementptr inbounds %struct.mount_entry* %28, i32 0, i32 0
  %30 = load i8** %29, align 8
  %31 = trunc i32 %21 to i8
  %32 = trunc i32 %11 to i8
  call void @get_dev(i8* %30, i8* %27, i8* null, i8* null, i8* %24, i8 zeroext %31, i8 zeroext %32, %struct.fs_usage* null, i8 zeroext 1) nounwind
  %33 = load %struct.mount_entry** %me, align 8
  %34 = getelementptr inbounds %struct.mount_entry* %33, i32 0, i32 5
  %35 = load %struct.mount_entry** %34, align 8
  store %struct.mount_entry* %35, %struct.mount_entry** %me, align 8
  br label %bb6

bb6:                                              ; preds = %klee_overshift_check.exit9, %bb4
  %36 = load %struct.mount_entry** %me, align 8
  %37 = icmp ne %struct.mount_entry* %36, null
  br i1 %37, label %bb5, label %return

return:                                           ; preds = %bb6
  ret void
}

define internal void @add_fs_type(i8* %fstype) nounwind {
entry:
  %fstype_addr = alloca i8*, align 8
  %fsp = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %fstype, i8** %fstype_addr
  %0 = call noalias i8* @xmalloc(i64 16) nounwind
  %1 = bitcast i8* %0 to %struct.fs_type_list*
  store %struct.fs_type_list* %1, %struct.fs_type_list** %fsp, align 8
  %2 = load i8** %fstype_addr, align 8
  %3 = load %struct.fs_type_list** %fsp, align 8
  %4 = getelementptr inbounds %struct.fs_type_list* %3, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = load %struct.fs_type_list** @fs_select_list, align 8
  %6 = load %struct.fs_type_list** %fsp, align 8
  %7 = getelementptr inbounds %struct.fs_type_list* %6, i32 0, i32 1
  store %struct.fs_type_list* %5, %struct.fs_type_list** %7, align 8
  %8 = load %struct.fs_type_list** %fsp, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** @fs_select_list, align 8
  ret void
}

define internal void @add_excluded_fs_type(i8* %fstype) nounwind {
entry:
  %fstype_addr = alloca i8*, align 8
  %fsp = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %fstype, i8** %fstype_addr
  %0 = call noalias i8* @xmalloc(i64 16) nounwind
  %1 = bitcast i8* %0 to %struct.fs_type_list*
  store %struct.fs_type_list* %1, %struct.fs_type_list** %fsp, align 8
  %2 = load i8** %fstype_addr, align 8
  %3 = load %struct.fs_type_list** %fsp, align 8
  %4 = getelementptr inbounds %struct.fs_type_list* %3, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = load %struct.fs_type_list** @fs_exclude_list, align 8
  %6 = load %struct.fs_type_list** %fsp, align 8
  %7 = getelementptr inbounds %struct.fs_type_list* %6, i32 0, i32 1
  store %struct.fs_type_list* %5, %struct.fs_type_list** %7, align 8
  %8 = load %struct.fs_type_list** %fsp, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** @fs_exclude_list, align 8
  ret void
}

define internal void @emit_try_help() nounwind inlinehint {
entry:
  %0 = load i8** @program_name, align 8
  %1 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8]* @.str69, i64 0, i64 0)) nounwind
  %2 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %3 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %2, i8* noalias %1, i8* %0) nounwind
  ret void
}

declare i32 @printf(i8* noalias, ...) nounwind

define internal void @emit_mandatory_arg_note() nounwind inlinehint {
entry:
  %0 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %1 = call i8* @gettext(i8* getelementptr inbounds ([75 x i8]* @.str70, i64 0, i64 0)) nounwind
  %2 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %1, %struct.FILE* noalias %0) nounwind
  ret void
}

define internal void @emit_blocksize_note(i8* %program) nounwind inlinehint {
entry:
  %program_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %program, i8** %program_addr
  %0 = call i8* @gettext(i8* getelementptr inbounds ([223 x i8]* @.str71, i64 0, i64 0)) nounwind
  %1 = load i8** %program_addr, align 8
  %2 = call i32 (i8*, ...)* @printf(i8* noalias %0, i8* %1) nounwind
  ret void
}

define internal void @emit_size_note() nounwind inlinehint {
entry:
  %0 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %1 = call i8* @gettext(i8* getelementptr inbounds ([153 x i8]* @.str72, i64 0, i64 0)) nounwind
  %2 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %1, %struct.FILE* noalias %0) nounwind
  ret void
}

define internal void @emit_ancillary_info() nounwind inlinehint {
entry:
  %lc_messages = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  %0 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8]* @.str73, i64 0, i64 0)) nounwind
  %1 = call i32 (i8*, ...)* @printf(i8* noalias %0, i8* getelementptr inbounds ([14 x i8]* @.str74, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8]* @.str75, i64 0, i64 0)) nounwind
  %2 = call i8* @setlocale(i32 5, i8* null) nounwind
  store i8* %2, i8** %lc_messages, align 8
  %3 = load i8** %lc_messages, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %bb, label %bb2

bb:                                               ; preds = %entry
  %5 = load i8** %lc_messages, align 8
  %6 = call i32 @strncmp(i8* %5, i8* getelementptr inbounds ([4 x i8]* @.str76, i64 0, i64 0), i64 3) nounwind readonly
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %8 = load i8** @program_name, align 8
  %9 = call i8* @last_component(i8* %8) nounwind readonly
  %10 = call i8* @gettext(i8* getelementptr inbounds ([69 x i8]* @.str77, i64 0, i64 0)) nounwind
  %11 = call i32 (i8*, ...)* @printf(i8* noalias %10, i8* %9) nounwind
  br label %bb2

bb2:                                              ; preds = %bb1, %bb, %entry
  %12 = load i8** @program_name, align 8
  %13 = call i8* @last_component(i8* %12) nounwind readonly
  %14 = call i8* @gettext(i8* getelementptr inbounds ([65 x i8]* @.str78, i64 0, i64 0)) nounwind
  %15 = call i32 (i8*, ...)* @printf(i8* noalias %14, i8* %13) nounwind
  ret void
}

define i32 @__user_main(i32 %argc, i8** %argv) nounwind {
entry:
  %argcPtr = alloca i32
  %argvPtr = alloca i8**
  store i32 %argc, i32* %argcPtr
  store i8** %argv, i8*** %argvPtr
  call void @klee_init_env(i32* %argcPtr, i8*** %argvPtr)
  %newArgc = load i32* %argcPtr
  %newArgv = load i8*** %argvPtr
  call void @klee_mark_arg_symbolic(i32 %newArgc, i8** %newArgv)
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.187 = alloca i8*
  %iftmp.181 = alloca i8*
  %iftmp.170 = alloca i32
  %iftmp.162 = alloca i64
  %stats = alloca %struct.stat*
  %posix_format = alloca i8
  %msg_mut_excl = alloca i8*
  %oi = alloca i32
  %c = alloca i32
  %e = alloca i32
  %match = alloca i8
  %fs_incl = alloca %struct.fs_type_list*
  %fs_excl = alloca %struct.fs_type_list*
  %i = alloca i32
  %fd = alloca i32
  %status = alloca i32
  %warning = alloca i8*
  %i105 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %newArgc, i32* %argc_addr
  store i8** %newArgv, i8*** %argv_addr
  %1 = load i8*** %argv_addr, align 8
  %2 = getelementptr inbounds i8** %1, i64 0
  %3 = load i8** %2, align 1
  call void @set_program_name(i8* %3) nounwind
  %4 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8]* @.str79, i64 0, i64 0)) nounwind
  %5 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8]* @.str80, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8]* @.str81, i64 0, i64 0)) nounwind
  %6 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8]* @.str80, i64 0, i64 0)) nounwind
  %7 = call i32 @atexit(void ()* @close_stdout) nounwind
  store %struct.fs_type_list* null, %struct.fs_type_list** @fs_select_list, align 8
  store %struct.fs_type_list* null, %struct.fs_type_list** @fs_exclude_list, align 8
  store i8 0, i8* @show_all_fs, align 1
  store i8 0, i8* @show_listed_fs, align 1
  store i32 -1, i32* @human_output_opts, align 4
  store i8 0, i8* @print_type, align 1
  store i8 0, i8* @file_systems_processed, align 1
  store i32 0, i32* @exit_status, align 4
  store i8 0, i8* @print_grand_total, align 1
  store i64 1, i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 0), align 8
  store i8 0, i8* %posix_format, align 1
  %8 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8]* @.str82, i64 0, i64 0)) nounwind
  store i8* %8, i8** %msg_mut_excl, align 8
  br label %bb

bb:                                               ; preds = %bb2, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13, %bb16, %bb19, %bb20, %bb21, %bb22, %bb24, %bb36, %bb3, %bb1, %bb34, %bb33, %entry
  store i32 -1, i32* %oi, align 4
  %9 = load i32* %argc_addr, align 4
  %10 = load i8*** %argv_addr, align 8
  %11 = call i32 @getopt_long(i32 %9, i8** %10, i8* getelementptr inbounds ([19 x i8]* @.str83, i64 0, i64 0), %struct.option* getelementptr inbounds ([17 x %struct.option]* @long_options, i64 0, i64 0), i32* %oi) nounwind
  store i32 %11, i32* %c, align 4
  %12 = load i32* %c, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %bb41, label %bb1

bb1:                                              ; preds = %bb
  %14 = load i32* %c, align 4
  switch i32 %14, label %bb39 [
    i32 -131, label %bb38
    i32 -130, label %bb37
    i32 66, label %bb3
    i32 70, label %bb22
    i32 72, label %bb10
    i32 80, label %bb17
    i32 84, label %bb14
    i32 97, label %bb2
    i32 104, label %bb9
    i32 105, label %bb6
    i32 107, label %bb11
    i32 108, label %bb12
    i32 109, label %bb13
    i32 116, label %bb22
    i32 118, label %bb
    i32 120, label %bb24
    i32 128, label %bb21
    i32 129, label %bb20
    i32 130, label %bb36
    i32 131, label %bb25
  ]

bb2:                                              ; preds = %bb1
  store i8 1, i8* @show_all_fs, align 1
  br label %bb

bb3:                                              ; preds = %bb1
  %15 = load i8** @optarg, align 8
  %16 = call i32 @human_options(i8* %15, i32* @human_output_opts, i64* @output_block_size) nounwind
  store i32 %16, i32* %e, align 4
  %17 = load i32* %e, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %bb4, label %bb

bb4:                                              ; preds = %bb3
  %19 = load i8** @optarg, align 8
  %20 = load i32* %c, align 4
  %21 = trunc i32 %20 to i8
  %22 = sext i8 %21 to i32
  %23 = load i32* %oi, align 4
  %24 = load i32* %e, align 4
  %25 = trunc i32 %22 to i8
  call void @xstrtol_fatal(i32 %24, i32 %23, i8 signext %25, %struct.option* getelementptr inbounds ([17 x %struct.option]* @long_options, i64 0, i64 0), i8* %19) noreturn nounwind
  unreachable

bb6:                                              ; preds = %bb1
  %26 = load i32* @header_mode, align 4
  %27 = icmp eq i32 %26, 4
  br i1 %27, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %28 = load i8** %msg_mut_excl, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %28, i8* getelementptr inbounds ([3 x i8]* @.str84, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str85, i64 0, i64 0)) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb8:                                              ; preds = %bb6
  store i32 1, i32* @header_mode, align 4
  br label %bb

bb9:                                              ; preds = %bb1
  store i32 176, i32* @human_output_opts, align 4
  store i64 1, i64* @output_block_size, align 8
  br label %bb

bb10:                                             ; preds = %bb1
  store i32 144, i32* @human_output_opts, align 4
  store i64 1, i64* @output_block_size, align 8
  br label %bb

bb11:                                             ; preds = %bb1
  store i32 0, i32* @human_output_opts, align 4
  store i64 1024, i64* @output_block_size, align 8
  br label %bb

bb12:                                             ; preds = %bb1
  store i8 1, i8* @show_local_fs, align 1
  br label %bb

bb13:                                             ; preds = %bb1
  store i32 0, i32* @human_output_opts, align 4
  store i64 1048576, i64* @output_block_size, align 8
  br label %bb

bb14:                                             ; preds = %bb1
  %29 = load i32* @header_mode, align 4
  %30 = icmp eq i32 %29, 4
  br i1 %30, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %31 = load i8** %msg_mut_excl, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %31, i8* getelementptr inbounds ([3 x i8]* @.str86, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str85, i64 0, i64 0)) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb16:                                             ; preds = %bb14
  store i8 1, i8* @print_type, align 1
  br label %bb

bb17:                                             ; preds = %bb1
  %32 = load i32* @header_mode, align 4
  %33 = icmp eq i32 %32, 4
  br i1 %33, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  %34 = load i8** %msg_mut_excl, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %34, i8* getelementptr inbounds ([3 x i8]* @.str87, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str85, i64 0, i64 0)) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb19:                                             ; preds = %bb17
  store i8 1, i8* %posix_format, align 1
  br label %bb

bb20:                                             ; preds = %bb1
  store i8 1, i8* @require_sync, align 1
  br label %bb

bb21:                                             ; preds = %bb1
  store i8 0, i8* @require_sync, align 1
  br label %bb

bb22:                                             ; preds = %bb1, %bb1
  %35 = load i8** @optarg, align 8
  call void @add_fs_type(i8* %35) nounwind
  br label %bb

bb24:                                             ; preds = %bb1
  %36 = load i8** @optarg, align 8
  call void @add_excluded_fs_type(i8* %36) nounwind
  br label %bb

bb25:                                             ; preds = %bb1
  %37 = load i32* @header_mode, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  %39 = load i8** %msg_mut_excl, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %39, i8* getelementptr inbounds ([3 x i8]* @.str84, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str85, i64 0, i64 0)) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb27:                                             ; preds = %bb25
  %40 = load i8* %posix_format, align 1
  %toBool = icmp ne i8 %40, 0
  %41 = load i32* @header_mode, align 4
  %42 = icmp eq i32 %41, 0
  %or.cond = and i1 %toBool, %42
  br i1 %or.cond, label %bb29, label %bb30

bb29:                                             ; preds = %bb27
  %43 = load i8** %msg_mut_excl, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %43, i8* getelementptr inbounds ([3 x i8]* @.str87, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str85, i64 0, i64 0)) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb30:                                             ; preds = %bb27
  %44 = load i8* @print_type, align 1
  %toBool31 = icmp ne i8 %44, 0
  br i1 %toBool31, label %bb32, label %bb33

bb32:                                             ; preds = %bb30
  %45 = load i8** %msg_mut_excl, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %45, i8* getelementptr inbounds ([3 x i8]* @.str86, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str85, i64 0, i64 0)) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb33:                                             ; preds = %bb30
  store i32 4, i32* @header_mode, align 4
  %46 = load i8** @optarg, align 8
  %47 = icmp ne i8* %46, null
  br i1 %47, label %bb34, label %bb

bb34:                                             ; preds = %bb33
  %48 = load i8** @optarg, align 8
  call void @decode_output_arg(i8* %48) nounwind
  br label %bb

bb36:                                             ; preds = %bb1
  store i8 1, i8* @print_grand_total, align 1
  br label %bb

bb37:                                             ; preds = %bb1
  call void @usage(i32 0) noreturn nounwind
  unreachable

bb38:                                             ; preds = %bb1
  %49 = call i8* @proper_name_utf8(i8* getelementptr inbounds ([18 x i8]* @.str88, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8]* @.str89, i64 0, i64 0)) nounwind
  %50 = load i8** @Version, align 8
  %51 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  call void (%struct.FILE*, i8*, i8*, i8*, ...)* @version_etc(%struct.FILE* %51, i8* getelementptr inbounds ([3 x i8]* @.str90, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str74, i64 0, i64 0), i8* %50, i8* %49, i8* getelementptr inbounds ([1
  call void @exit(i32 0) noreturn nounwind
  unreachable

bb39:                                             ; preds = %bb1
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb41:                                             ; preds = %bb
  %52 = load i32* @human_output_opts, align 4
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %bb42, label %bb49

bb42:                                             ; preds = %bb41
  %54 = load i8* %posix_format, align 1
  %toBool43 = icmp ne i8 %54, 0
  br i1 %toBool43, label %bb44, label %bb48

bb44:                                             ; preds = %bb42
  store i32 0, i32* @human_output_opts, align 4
  %55 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8]* @.str93, i64 0, i64 0)) nounwind
  %56 = icmp ne i8* %55, null
  br i1 %56, label %bb45, label %bb46

bb45:                                             ; preds = %bb44
  store i64 512, i64* %iftmp.162, align 8
  br label %bb47

bb46:                                             ; preds = %bb44
  store i64 1024, i64* %iftmp.162, align 8
  br label %bb47

bb47:                                             ; preds = %bb46, %bb45
  %57 = load i64* %iftmp.162, align 8
  store i64 %57, i64* @output_block_size, align 8
  br label %bb49

bb48:                                             ; preds = %bb42
  %58 = call i8* @getenv(i8* getelementptr inbounds ([14 x i8]* @.str94, i64 0, i64 0)) nounwind
  %59 = call i32 @human_options(i8* %58, i32* @human_output_opts, i64* @output_block_size) nounwind
  br label %bb49

bb49:                                             ; preds = %bb48, %bb47, %bb41
  %60 = load i32* @header_mode, align 4
  %61 = icmp ne i32 %60, 1
  %62 = load i32* @header_mode, align 4
  %63 = icmp ne i32 %62, 4
  %or.cond3 = and i1 %61, %63
  br i1 %or.cond3, label %bb51, label %bb56

bb51:                                             ; preds = %bb49
  %64 = load i32* @human_output_opts, align 4
  %65 = and i32 %64, 16
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %bb52, label %bb53

bb52:                                             ; preds = %bb51
  store i32 2, i32* @header_mode, align 4
  br label %bb56

bb53:                                             ; preds = %bb51
  %67 = load i8* %posix_format, align 1
  %toBool54 = icmp ne i8 %67, 0
  br i1 %toBool54, label %bb55, label %bb56

bb55:                                             ; preds = %bb53
  store i32 3, i32* @header_mode, align 4
  br label %bb56

bb56:                                             ; preds = %bb55, %bb53, %bb52, %bb49
  store i8 0, i8* %match, align 1
  %68 = load %struct.fs_type_list** @fs_select_list, align 8
  store %struct.fs_type_list* %68, %struct.fs_type_list** %fs_incl, align 8
  br label %bb63

bb57:                                             ; preds = %bb63
  %69 = load %struct.fs_type_list** @fs_exclude_list, align 8
  store %struct.fs_type_list* %69, %struct.fs_type_list** %fs_excl, align 8
  br label %bb61

bb58:                                             ; preds = %bb61
  %70 = load %struct.fs_type_list** %fs_excl, align 8
  %71 = getelementptr inbounds %struct.fs_type_list* %70, i32 0, i32 0
  %72 = load i8** %71, align 8
  %73 = load %struct.fs_type_list** %fs_incl, align 8
  %74 = getelementptr inbounds %struct.fs_type_list* %73, i32 0, i32 0
  %75 = load i8** %74, align 8
  %76 = call i32 @strcmp(i8* %75, i8* %72) nounwind readonly
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %78 = load %struct.fs_type_list** %fs_incl, align 8
  %79 = getelementptr inbounds %struct.fs_type_list* %78, i32 0, i32 0
  %80 = load i8** %79, align 8
  %81 = call i8* @quote(i8* %80) nounwind
  %82 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8]* @.str95, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %82, i8* %81) nounwind
  store i8 1, i8* %match, align 1
  br label %bb62

bb60:                                             ; preds = %bb58
  %83 = load %struct.fs_type_list** %fs_excl, align 8
  %84 = getelementptr inbounds %struct.fs_type_list* %83, i32 0, i32 1
  %85 = load %struct.fs_type_list** %84, align 8
  store %struct.fs_type_list* %85, %struct.fs_type_list** %fs_excl, align 8
  br label %bb61

bb61:                                             ; preds = %bb60, %bb57
  %86 = load %struct.fs_type_list** %fs_excl, align 8
  %87 = icmp ne %struct.fs_type_list* %86, null
  br i1 %87, label %bb58, label %bb62

bb62:                                             ; preds = %bb61, %bb59
  %88 = load %struct.fs_type_list** %fs_incl, align 8
  %89 = getelementptr inbounds %struct.fs_type_list* %88, i32 0, i32 1
  %90 = load %struct.fs_type_list** %89, align 8
  store %struct.fs_type_list* %90, %struct.fs_type_list** %fs_incl, align 8
  br label %bb63

bb63:                                             ; preds = %bb62, %bb56
  %91 = load %struct.fs_type_list** %fs_incl, align 8
  %92 = icmp ne %struct.fs_type_list* %91, null
  br i1 %92, label %bb57, label %bb64

bb64:                                             ; preds = %bb63
  %93 = load i8* %match, align 1
  %toBool65 = icmp ne i8 %93, 0
  br i1 %toBool65, label %bb66, label %bb67

bb66:                                             ; preds = %bb64
  call void @exit(i32 1) noreturn nounwind
  unreachable

bb67:                                             ; preds = %bb64
  %94 = load i32* @optind, align 4
  %95 = load i32* %argc_addr, align 4
  %96 = icmp slt i32 %94, %95
  br i1 %96, label %bb68, label %bb77

bb68:                                             ; preds = %bb67
  %97 = load i32* @optind, align 4
  %98 = load i32* %argc_addr, align 4
  %99 = sub nsw i32 %98, %97
  %100 = sext i32 %99 to i64
  %101 = call noalias i8* @xnmalloc(i64 %100, i64 144) nounwind
  %102 = bitcast i8* %101 to %struct.stat*
  store %struct.stat* %102, %struct.stat** %stats, align 8
  %103 = load i32* @optind, align 4
  store i32 %103, i32* %i, align 4
  br label %bb76

bb69:                                             ; preds = %bb76
  %104 = load i8*** %argv_addr, align 8
  %105 = load i32* %i, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i8** %104, i64 %106
  %108 = load i8** %107, align 1
  %109 = call i32 (i8*, i32, ...)* @open(i8* %108, i32 256) nounwind
  store i32 %109, i32* %fd, align 4
  %110 = load i32* %fd, align 4
  %111 = icmp slt i32 %110, 0
  br i1 %111, label %bb71, label %bb70

bb70:                                             ; preds = %bb69
  %112 = load i32* @optind, align 4
  %113 = load i32* %i, align 4
  %114 = sub nsw i32 %113, %112
  %115 = load %struct.stat** %stats, align 8
  %116 = sext i32 %114 to i64
  %117 = getelementptr inbounds %struct.stat* %115, i64 %116
  %118 = load i32* %fd, align 4
  %119 = call i32 @fstat(i32 %118, %struct.stat* %117) nounwind
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %bb71, label %bb73

bb71:                                             ; preds = %bb70, %bb69
  %121 = load i32* @optind, align 4
  %122 = load i32* %i, align 4
  %123 = sub nsw i32 %122, %121
  %124 = load %struct.stat** %stats, align 8
  %125 = sext i32 %123 to i64
  %126 = getelementptr inbounds %struct.stat* %124, i64 %125
  %127 = load i8*** %argv_addr, align 8
  %128 = load i32* %i, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8** %127, i64 %129
  %131 = load i8** %130, align 1
  %132 = call i32 @stat(i8* noalias %131, %struct.stat* noalias %126) nounwind
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %bb72, label %bb73

bb72:                                             ; preds = %bb71
  %134 = load i8*** %argv_addr, align 8
  %135 = load i32* %i, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i8** %134, i64 %136
  %138 = load i8** %137, align 1
  %139 = call i8* @quote(i8* %138) nounwind
  %140 = call i32* @__errno_location() nounwind readnone
  %141 = load i32* %140, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %141, i8* getelementptr inbounds ([3 x i8]* @.str54, i64 0, i64 0), i8* %139) nounwind
  store i32 1, i32* @exit_status, align 4
  %142 = load i8*** %argv_addr, align 8
  %143 = load i32* %i, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i8** %142, i64 %144
  store i8* null, i8** %145, align 1
  br label %bb73

bb73:                                             ; preds = %bb72, %bb71, %bb70
  %146 = load i32* %fd, align 4
  %147 = icmp sge i32 %146, 0
  br i1 %147, label %bb74, label %bb75

bb74:                                             ; preds = %bb73
  %148 = load i32* %fd, align 4
  %149 = call i32 @close(i32 %148) nounwind
  br label %bb75

bb75:                                             ; preds = %bb74, %bb73
  %150 = load i32* %i, align 4
  %151 = add nsw i32 %150, 1
  store i32 %151, i32* %i, align 4
  br label %bb76

bb76:                                             ; preds = %bb75, %bb68
  %152 = load i32* %i, align 4
  %153 = load i32* %argc_addr, align 4
  %154 = icmp slt i32 %152, %153
  br i1 %154, label %bb69, label %bb77

bb77:                                             ; preds = %bb76, %bb67
  %155 = load %struct.fs_type_list** @fs_select_list, align 8
  %156 = icmp ne %struct.fs_type_list* %155, null
  %157 = load %struct.fs_type_list** @fs_exclude_list, align 8
  %158 = icmp ne %struct.fs_type_list* %157, null
  %or.cond5 = or i1 %156, %158
  %159 = load i8* @print_type, align 1
  %toBool80 = icmp ne i8 %159, 0
  %or.cond6 = or i1 %or.cond5, %toBool80
  %160 = load i8* getelementptr inbounds ([12 x %struct.field_data_t]* @field_data, i64 0, i64 1, i32 6), align 4
  %toBool82 = icmp ne i8 %160, 0
  %or.cond7 = or i1 %or.cond6, %toBool82
  %161 = load i8* @show_local_fs, align 1
  %toBool84 = icmp ne i8 %161, 0
  %or.cond8 = or i1 %or.cond7, %toBool84
  br i1 %or.cond8, label %bb85, label %bb86

bb85:                                             ; preds = %bb77
  store i32 1, i32* %iftmp.170, align 4
  br label %bb87

bb86:                                             ; preds = %bb77
  store i32 0, i32* %iftmp.170, align 4
  br label %bb87

bb87:                                             ; preds = %bb86, %bb85
  %162 = load i32* %iftmp.170, align 4
  %163 = trunc i32 %162 to i8
  %164 = zext i8 %163 to i32
  %165 = trunc i32 %164 to i8
  %166 = call %struct.mount_entry* @read_file_system_list(i8 zeroext %165) nounwind
  store %struct.mount_entry* %166, %struct.mount_entry** @mount_list, align 8
  %167 = load %struct.mount_entry** @mount_list, align 8
  %168 = icmp eq %struct.mount_entry* %167, null
  br i1 %168, label %bb88, label %bb100

bb88:                                             ; preds = %bb87
  store i32 0, i32* %status, align 4
  %169 = load i32* @optind, align 4
  %170 = load i32* %argc_addr, align 4
  %171 = icmp sge i32 %169, %170
  %172 = load i8* @show_all_fs, align 1
  %toBool90 = icmp ne i8 %172, 0
  %or.cond9 = or i1 %171, %toBool90
  %173 = load i8* @show_local_fs, align 1
  %toBool92 = icmp ne i8 %173, 0
  %or.cond10 = or i1 %or.cond9, %toBool92
  %174 = load %struct.fs_type_list** @fs_select_list, align 8
  %175 = icmp ne %struct.fs_type_list* %174, null
  %or.cond12 = or i1 %or.cond10, %175
  %176 = load %struct.fs_type_list** @fs_exclude_list, align 8
  %177 = icmp ne %struct.fs_type_list* %176, null
  %or.cond14 = or i1 %or.cond12, %177
  br i1 %or.cond14, label %bb95, label %bb96

bb95:                                             ; preds = %bb88
  store i32 1, i32* %status, align 4
  br label %bb96

bb96:                                             ; preds = %bb88, %bb95
  %178 = load i32* %status, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %bb97, label %bb98

bb97:                                             ; preds = %bb96
  %180 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8]* @.str96, i64 0, i64 0)) nounwind
  store i8* %180, i8** %iftmp.181, align 8
  br label %bb99

bb98:                                             ; preds = %bb96
  store i8* getelementptr inbounds ([1 x i8]* @.str79, i64 0, i64 0), i8** %iftmp.181, align 8
  br label %bb99

bb99:                                             ; preds = %bb98, %bb97
  %181 = load i8** %iftmp.181, align 8
  store i8* %181, i8** %warning, align 8
  %182 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8]* @.str97, i64 0, i64 0)) nounwind
  %183 = call i32* @__errno_location() nounwind readnone
  %184 = load i32* %183, align 4
  %185 = load i32* %status, align 4
  %186 = load i8** %warning, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 %185, i32 %184, i8* getelementptr inbounds ([5 x i8]* @.str98, i64 0, i64 0), i8* %186, i8* %182) nounwind
  br label %bb100

bb100:                                            ; preds = %bb99, %bb87
  %187 = load i8* @require_sync, align 1
  %toBool101 = icmp ne i8 %187, 0
  br i1 %toBool101, label %bb102, label %bb103

bb102:                                            ; preds = %bb100
  call void @sync() nounwind
  br label %bb103

bb103:                                            ; preds = %bb102, %bb100
  call void @get_field_list() nounwind
  call void @get_header() nounwind
  %188 = load i32* @optind, align 4
  %189 = load i32* %argc_addr, align 4
  %190 = icmp slt i32 %188, %189
  br i1 %190, label %bb104, label %bb111

bb104:                                            ; preds = %bb103
  store i8 1, i8* @show_listed_fs, align 1
  %191 = load i32* @optind, align 4
  store i32 %191, i32* %i105, align 4
  br label %bb109

bb106:                                            ; preds = %bb109
  %192 = load i8*** %argv_addr, align 8
  %193 = load i32* %i105, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i8** %192, i64 %194
  %196 = load i8** %195, align 1
  %197 = icmp ne i8* %196, null
  br i1 %197, label %bb107, label %bb108

bb107:                                            ; preds = %bb106
  %198 = load i32* @optind, align 4
  %199 = load i32* %i105, align 4
  %200 = sub nsw i32 %199, %198
  %201 = load %struct.stat** %stats, align 8
  %202 = sext i32 %200 to i64
  %203 = getelementptr inbounds %struct.stat* %201, i64 %202
  %204 = load i8*** %argv_addr, align 8
  %205 = load i32* %i105, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i8** %204, i64 %206
  %208 = load i8** %207, align 1
  call void @get_entry(i8* %208, %struct.stat* %203) nounwind
  br label %bb108

bb108:                                            ; preds = %bb107, %bb106
  %209 = load i32* %i105, align 4
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %i105, align 4
  br label %bb109

bb109:                                            ; preds = %bb108, %bb104
  %211 = load i32* %i105, align 4
  %212 = load i32* %argc_addr, align 4
  %213 = icmp slt i32 %211, %212
  br i1 %213, label %bb106, label %bb112

bb111:                                            ; preds = %bb103
  call void @get_all_entries() nounwind
  br label %bb112

bb112:                                            ; preds = %bb109, %bb111
  %214 = load i8* @file_systems_processed, align 1
  %toBool113 = icmp ne i8 %214, 0
  br i1 %toBool113, label %bb114, label %bb122

bb114:                                            ; preds = %bb112
  %215 = load i8* @print_grand_total, align 1
  %toBool115 = icmp ne i8 %215, 0
  br i1 %toBool115, label %bb116, label %bb121

bb116:                                            ; preds = %bb114
  %216 = load i8* getelementptr inbounds ([12 x %struct.field_data_t]* @field_data, i64 0, i64 0, i32 6), align 4
  %toBool117 = icmp ne i8 %216, 0
  br i1 %toBool117, label %bb118, label %bb119

bb118:                                            ; preds = %bb116
  store i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0), i8** %iftmp.187, align 8
  br label %bb120

bb119:                                            ; preds = %bb116
  store i8* getelementptr inbounds ([6 x i8]* @.str37, i64 0, i64 0), i8** %iftmp.187, align 8
  br label %bb120

bb120:                                            ; preds = %bb119, %bb118
  %217 = load i8** %iftmp.187, align 8
  call void @get_dev(i8* getelementptr inbounds ([6 x i8]* @.str37, i64 0, i64 0), i8* %217, i8* null, i8* null, i8* null, i8 zeroext 0, i8 zeroext 0, %struct.fs_usage* @grand_fsu, i8 zeroext 0) nounwind
  br label %bb121

bb121:                                            ; preds = %bb120, %bb114
  call void @print_table() nounwind
  br label %bb124

bb122:                                            ; preds = %bb112
  %218 = load i32* @exit_status, align 4
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %bb123, label %bb124

bb123:                                            ; preds = %bb122
  %220 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8]* @.str99, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 0, i8* %220) nounwind
  br label %bb124

bb124:                                            ; preds = %bb123, %bb122, %bb121
  %221 = load i32* @exit_status, align 4
  call void @exit(i32 %221) noreturn nounwind
  unreachable
}

declare i8* @bindtextdomain(i8*, i8*) nounwind

declare i8* @textdomain(i8*) nounwind

declare void @sync() nounwind

define i8* @find_mount_point(i8* %file, %struct.stat* %file_stat) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %file_stat_addr = alloca %struct.stat*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %1 = alloca i8*
  %cwd = alloca %struct.saved_cwd
  %last_stat = alloca %struct.stat
  %mp = alloca i8*
  %xdir = alloca i8*
  %dir = alloca i8*
  %__old = alloca i8*
  %__len = alloca i64
  %__new = alloca i8*
  %st = alloca %struct.stat
  %save_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store %struct.stat* %file_stat, %struct.stat** %file_stat_addr
  store i8* null, i8** %mp, align 8
  %2 = call i32 @save_cwd(%struct.saved_cwd* %cwd) nounwind
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8]* @.str100, i64 0, i64 0)) nounwind
  %5 = call i32* @__errno_location() nounwind readnone
  %6 = load i32* %5, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %6, i8* %4) nounwind
  store i8* null, i8** %1, align 8
  br label %bb22

bb1:                                              ; preds = %entry
  %7 = load %struct.stat** %file_stat_addr, align 8
  %8 = getelementptr inbounds %struct.stat* %7, i32 0, i32 3
  %9 = load i32* %8, align 8
  %10 = and i32 %9, 61440
  %11 = icmp eq i32 %10, 16384
  br i1 %11, label %bb2, label %bb6

bb2:                                              ; preds = %bb1
  %12 = load %struct.stat** %file_stat_addr, align 8
  %last_stat3 = bitcast %struct.stat* %last_stat to i8*
  %13 = bitcast %struct.stat* %12 to i8*
  %14 = call i8* @memcpy(i8* %last_stat3, i8* %13, i64 144)
  %15 = load i8** %file_addr, align 8
  %16 = call i32 @chdir(i8* %15) nounwind
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %bb4, label %bb10

bb4:                                              ; preds = %bb2
  %18 = load i8** %file_addr, align 8
  %19 = call i8* @quote(i8* %18) nounwind
  %20 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8]* @.str1101, i64 0, i64 0)) nounwind
  %21 = call i32* @__errno_location() nounwind readnone
  %22 = load i32* %21, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %22, i8* %20, i8* %19) nounwind
  store i8* null, i8** %1, align 8
  br label %bb22

bb6:                                              ; preds = %bb1
  %23 = load i8** %file_addr, align 8
  %24 = call i8* @dir_name(i8* %23) nounwind
  store i8* %24, i8** %xdir, align 8
  %25 = load i8** %xdir, align 8
  store i8* %25, i8** %__old, align 8
  %26 = load i8** %__old, align 8
  %27 = call i64 @strlen(i8* %26) nounwind readonly
  %28 = add i64 %27, 1
  store i64 %28, i64* %__len, align 8
  %29 = load i64* %__len, align 8
  %30 = alloca i8, i64 %29, align 1
  store i8* %30, i8** %__new, align 8
  %31 = load i8** %__new, align 8
  %32 = load i8** %__old, align 8
  %33 = load i64* %__len, align 8
  %34 = call i8* @memcpy(i8* %31, i8* %32, i64 %33)
  store i8* %31, i8** %0, align 8
  %35 = load i8** %0, align 8
  store i8* %35, i8** %dir, align 8
  %36 = load i8** %xdir, align 8
  call void @free(i8* %36) nounwind
  %37 = load i8** %dir, align 8
  %38 = call i32 @chdir(i8* %37) nounwind
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %40 = load i8** %dir, align 8
  %41 = call i8* @quote(i8* %40) nounwind
  %42 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8]* @.str1101, i64 0, i64 0)) nounwind
  %43 = call i32* @__errno_location() nounwind readnone
  %44 = load i32* %43, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %44, i8* %42, i8* %41) nounwind
  store i8* null, i8** %1, align 8
  br label %bb22

bb8:                                              ; preds = %bb6
  %45 = call i32 @stat(i8* noalias getelementptr inbounds ([2 x i8]* @.str2102, i64 0, i64 0), %struct.stat* noalias %last_stat) nounwind
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %47 = load i8** %dir, align 8
  %48 = call i8* @quote(i8* %47) nounwind
  %49 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8]* @.str3103, i64 0, i64 0)) nounwind
  %50 = call i32* @__errno_location() nounwind readnone
  %51 = load i32* %50, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %51, i8* %49, i8* %48) nounwind
  br label %done

bb10:                                             ; preds = %bb2, %bb16, %bb8
  %52 = call i32 @stat(i8* noalias getelementptr inbounds ([3 x i8]* @.str4104, i64 0, i64 0), %struct.stat* noalias %st) nounwind
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %54 = call i8* @quote(i8* getelementptr inbounds ([3 x i8]* @.str4104, i64 0, i64 0)) nounwind
  %55 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8]* @.str5105, i64 0, i64 0)) nounwind
  %56 = call i32* @__errno_location() nounwind readnone
  %57 = load i32* %56, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %57, i8* %55, i8* %54) nounwind
  br label %done

bb12:                                             ; preds = %bb10
  %58 = getelementptr inbounds %struct.stat* %st, i32 0, i32 0
  %59 = load i64* %58, align 8
  %60 = getelementptr inbounds %struct.stat* %last_stat, i32 0, i32 0
  %61 = load i64* %60, align 8
  %62 = icmp ne i64 %59, %61
  br i1 %62, label %bb19, label %bb13

bb13:                                             ; preds = %bb12
  %63 = getelementptr inbounds %struct.stat* %st, i32 0, i32 1
  %64 = load i64* %63, align 8
  %65 = getelementptr inbounds %struct.stat* %last_stat, i32 0, i32 1
  %66 = load i64* %65, align 8
  %67 = icmp eq i64 %64, %66
  br i1 %67, label %bb19, label %bb14

bb14:                                             ; preds = %bb13
  %68 = call i32 @chdir(i8* getelementptr inbounds ([3 x i8]* @.str4104, i64 0, i64 0)) nounwind
  %69 = icmp slt i32 %68, 0
  br i1 %69, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %70 = call i8* @quote(i8* getelementptr inbounds ([3 x i8]* @.str4104, i64 0, i64 0)) nounwind
  %71 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8]* @.str1101, i64 0, i64 0)) nounwind
  %72 = call i32* @__errno_location() nounwind readnone
  %73 = load i32* %72, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %73, i8* %71, i8* %70) nounwind
  br label %done

bb16:                                             ; preds = %bb14
  %last_stat17 = bitcast %struct.stat* %last_stat to i8*
  %st18 = bitcast %struct.stat* %st to i8*
  %74 = call i8* @memcpy(i8* %last_stat17, i8* %st18, i64 144)
  br label %bb10

bb19:                                             ; preds = %bb13, %bb12
  %75 = call i8* @xgetcwd() nounwind
  store i8* %75, i8** %mp, align 8
  br label %done

done:                                             ; preds = %bb19, %bb15, %bb11, %bb9
  %76 = call i32* @__errno_location() nounwind readnone
  %77 = load i32* %76, align 4
  store i32 %77, i32* %save_errno, align 4
  %78 = call i32 @restore_cwd(%struct.saved_cwd* %cwd) nounwind
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %bb20, label %bb21

bb20:                                             ; preds = %done
  %80 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8]* @.str6106, i64 0, i64 0)) nounwind
  %81 = call i32* @__errno_location() nounwind readnone
  %82 = load i32* %81, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 %82, i8* %80) nounwind
  br label %bb21

bb21:                                             ; preds = %bb20, %done
  call void @free_cwd(%struct.saved_cwd* %cwd) nounwind
  %83 = call i32* @__errno_location() nounwind readnone
  %84 = load i32* %save_errno, align 4
  store i32 %84, i32* %83, align 4
  %85 = load i8** %mp, align 8
  store i8* %85, i8** %1, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb7, %bb4, %bb
  %86 = load i8** %1, align 8
  store i8* %86, i8** %retval, align 8
  %retval23 = load i8** %retval
  ret i8* %retval23
}

declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture, i64, i32, i1) nounwind

define internal zeroext i8 @seen_triple(%struct.Hash_table** %ht, i8* %filename, %struct.stat* %st) nounwind {
entry:
  %ht_addr = alloca %struct.Hash_table**, align 8
  %filename_addr = alloca i8*, align 8
  %st_addr = alloca %struct.stat*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %initial_capacity = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table** %ht, %struct.Hash_table*** %ht_addr
  store i8* %filename, i8** %filename_addr
  store %struct.stat* %st, %struct.stat** %st_addr
  %1 = load %struct.Hash_table*** %ht_addr, align 8
  %2 = load %struct.Hash_table** %1, align 8
  %3 = icmp eq %struct.Hash_table* %2, null
  br i1 %3, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i64 7, i64* %initial_capacity, align 8
  %4 = load i64* %initial_capacity, align 8
  %5 = call %struct.Hash_table* @hash_initialize(i64 %4, %struct.Hash_tuning* null, i64 (i8*, i64)* @triple_hash, i8 (i8*, i8*)* @triple_compare_ino_str, void (i8*)* @triple_free) nounwind
  %6 = load %struct.Hash_table*** %ht_addr, align 8
  store %struct.Hash_table* %5, %struct.Hash_table** %6, align 8
  %7 = load %struct.Hash_table*** %ht_addr, align 8
  %8 = load %struct.Hash_table** %7, align 8
  %9 = icmp eq %struct.Hash_table* %8, null
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb, %entry
  %10 = load %struct.Hash_table*** %ht_addr, align 8
  %11 = load %struct.Hash_table** %10, align 8
  %12 = load i8** %filename_addr, align 8
  %13 = load %struct.stat** %st_addr, align 8
  %14 = call zeroext i8 @seen_file(%struct.Hash_table* %11, i8* %12, %struct.stat* %13) nounwind
  %toBool = icmp ne i8 %14, 0
  br i1 %toBool, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i32 1, i32* %0, align 4
  br label %bb5

bb4:                                              ; preds = %bb2
  %15 = load %struct.Hash_table*** %ht_addr, align 8
  %16 = load %struct.Hash_table** %15, align 8
  %17 = load i8** %filename_addr, align 8
  %18 = load %struct.stat** %st_addr, align 8
  call void @record_file(%struct.Hash_table* %16, i8* %17, %struct.stat* %18) nounwind
  store i32 0, i32* %0, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %19 = load i32* %0, align 4
  store i32 %19, i32* %retval, align 4
  %retval6 = load i32* %retval
  %retval67 = trunc i32 %retval6 to i8
  ret i8 %retval67
}

define i8* @canonicalize_filename_mode(i8* %name, i32 %can_mode) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %can_mode_addr = alloca i32, align 4
  %retval = alloca i8*
  %iftmp.24 = alloca i8
  %0 = alloca i8*
  %rname = alloca i8*
  %dest = alloca i8*
  %extra_buf = alloca i8*
  %start = alloca i8*
  %end = alloca i8*
  %rname_limit = alloca i8*
  %extra_len = alloca i64
  %ht = alloca %struct.Hash_table*
  %saved_errno = alloca i32
  %can_flags = alloca i32
  %logical = alloca i8
  %prefix_len = alloca i64
  %p = alloca i8*
  %st = alloca %struct.stat
  %dest_offset = alloca i64
  %new_size = alloca i64
  %buf = alloca i8*
  %n = alloca i64
  %len = alloca i64
  %pfxlen = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store i32 %can_mode, i32* %can_mode_addr
  store i8* null, i8** %extra_buf, align 8
  store i64 0, i64* %extra_len, align 8
  store %struct.Hash_table* null, %struct.Hash_table** %ht, align 8
  %1 = load i32* %can_mode_addr, align 4
  %2 = and i32 %1, -4
  store i32 %2, i32* %can_flags, align 4
  %3 = load i32* %can_flags, align 4
  %4 = and i32 %3, 4
  %5 = icmp ne i32 %4, 0
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %logical, align 1
  %7 = load i32* %can_mode_addr, align 4
  %8 = and i32 %7, 3
  store i32 %8, i32* %can_mode_addr, align 4
  %9 = load i32* %can_mode_addr, align 4
  %10 = sub i32 %9, 1
  %11 = load i32* %can_mode_addr, align 4
  %12 = and i32 %10, %11
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %bb, label %bb1

bb:                                               ; preds = %entry
  %14 = call i32* @__errno_location() nounwind readnone
  store i32 22, i32* %14, align 4
  store i8* null, i8** %0, align 8
  br label %bb100

bb1:                                              ; preds = %entry
  %15 = load i8** %name_addr, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %17 = call i32* @__errno_location() nounwind readnone
  store i32 22, i32* %17, align 4
  store i8* null, i8** %0, align 8
  br label %bb100

bb3:                                              ; preds = %bb1
  %18 = load i8** %name_addr, align 8
  %19 = getelementptr inbounds i8* %18, i64 0
  %20 = load i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %22 = call i32* @__errno_location() nounwind readnone
  store i32 2, i32* %22, align 4
  store i8* null, i8** %0, align 8
  br label %bb100

bb5:                                              ; preds = %bb3
  store i64 0, i64* %prefix_len, align 8
  %23 = load i8** %name_addr, align 8
  %24 = getelementptr inbounds i8* %23, i64 0
  %25 = load i8* %24, align 1
  %26 = icmp ne i8 %25, 47
  br i1 %26, label %bb6, label %bb12

bb6:                                              ; preds = %bb5
  %27 = call i8* @xgetcwd() nounwind
  store i8* %27, i8** %rname, align 8
  %28 = load i8** %rname, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store i8* null, i8** %0, align 8
  br label %bb100

bb8:                                              ; preds = %bb6
  %30 = load i8** %rname, align 8
  %31 = call i8* @strchr(i8* %30, i32 0) nounwind readonly
  store i8* %31, i8** %dest, align 8
  %32 = load i8** %dest, align 8
  %33 = ptrtoint i8* %32 to i64
  %34 = load i8** %rname, align 8
  %35 = ptrtoint i8* %34 to i64
  %36 = sub nsw i64 %33, %35
  %37 = icmp sle i64 %36, 4095
  br i1 %37, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %38 = load i8** %rname, align 8
  %39 = call i8* @xrealloc(i8* %38, i64 4096) nounwind
  store i8* %39, i8** %p, align 8
  %40 = load i8** %dest, align 8
  %41 = ptrtoint i8* %40 to i64
  %42 = load i8** %rname, align 8
  %43 = ptrtoint i8* %42 to i64
  %44 = sub nsw i64 %41, %43
  %45 = load i8** %p, align 8
  %46 = getelementptr inbounds i8* %45, i64 %44
  store i8* %46, i8** %dest, align 8
  %47 = load i8** %p, align 8
  store i8* %47, i8** %rname, align 8
  %48 = load i8** %rname, align 8
  %49 = getelementptr inbounds i8* %48, i64 4096
  store i8* %49, i8** %rname_limit, align 8
  br label %bb11

bb10:                                             ; preds = %bb8
  %50 = load i8** %dest, align 8
  store i8* %50, i8** %rname_limit, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %51 = load i8** %name_addr, align 8
  store i8* %51, i8** %start, align 8
  store i64 0, i64* %prefix_len, align 8
  br label %bb89

bb12:                                             ; preds = %bb5
  %52 = call noalias i8* @xmalloc(i64 4096) nounwind
  store i8* %52, i8** %rname, align 8
  %53 = load i8** %rname, align 8
  %54 = getelementptr inbounds i8* %53, i64 4096
  store i8* %54, i8** %rname_limit, align 8
  %55 = load i8** %rname, align 8
  store i8* %55, i8** %dest, align 8
  %56 = load i64* %prefix_len, align 8
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %58 = load i8** %rname, align 8
  %59 = load i8** %name_addr, align 8
  %60 = load i64* %prefix_len, align 8
  %61 = call i8* @memcpy(i8* %58, i8* %59, i64 %60)
  %62 = load i8** %dest, align 8
  %63 = load i64* %prefix_len, align 8
  %64 = getelementptr inbounds i8* %62, i64 %63
  store i8* %64, i8** %dest, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %65 = load i8** %dest, align 8
  store i8 47, i8* %65, align 1
  %66 = load i8** %dest, align 8
  %67 = getelementptr inbounds i8* %66, i64 1
  store i8* %67, i8** %dest, align 8
  %68 = load i8** %name_addr, align 8
  %69 = load i64* %prefix_len, align 8
  %70 = getelementptr inbounds i8* %68, i64 %69
  store i8* %70, i8** %start, align 8
  br label %bb89

bb17:                                             ; preds = %bb18
  %71 = getelementptr inbounds i8* %75, i64 1
  store i8* %71, i8** %start, align 8
  br label %bb18

bb18:                                             ; preds = %bb89, %bb17
  %72 = load i8** %start, align 8
  %73 = load i8* %72, align 1
  %74 = icmp eq i8 %73, 47
  %75 = load i8** %start, align 8
  br i1 %74, label %bb17, label %bb19

bb19:                                             ; preds = %bb18
  store i8* %75, i8** %end, align 8
  br label %bb21

bb20:                                             ; preds = %bb22
  %76 = load i8** %end, align 8
  %77 = getelementptr inbounds i8* %76, i64 1
  store i8* %77, i8** %end, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %bb19
  %78 = load i8** %end, align 8
  %79 = load i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %bb23, label %bb22

bb22:                                             ; preds = %bb21
  %81 = load i8** %end, align 8
  %82 = load i8* %81, align 1
  %83 = icmp ne i8 %82, 47
  br i1 %83, label %bb20, label %bb23

bb23:                                             ; preds = %bb22, %bb21
  %84 = load i8** %end, align 8
  %85 = load i8** %start, align 8
  %86 = icmp eq i8* %84, %85
  br i1 %86, label %bb90, label %bb24

bb24:                                             ; preds = %bb23
  %87 = load i8** %end, align 8
  %88 = ptrtoint i8* %87 to i64
  %89 = load i8** %start, align 8
  %90 = ptrtoint i8* %89 to i64
  %91 = sub nsw i64 %88, %90
  %92 = icmp ne i64 %91, 1
  br i1 %92, label %bb27, label %bb25

bb25:                                             ; preds = %bb24
  %93 = load i8** %start, align 8
  %94 = getelementptr inbounds i8* %93, i64 0
  %95 = load i8* %94, align 1
  %96 = icmp ne i8 %95, 46
  br i1 %96, label %bb27, label %bb88

bb27:                                             ; preds = %bb25, %bb24
  %97 = load i8** %end, align 8
  %98 = ptrtoint i8* %97 to i64
  %99 = load i8** %start, align 8
  %100 = ptrtoint i8* %99 to i64
  %101 = sub nsw i64 %98, %100
  %102 = icmp ne i64 %101, 2
  br i1 %102, label %bb36, label %bb28

bb28:                                             ; preds = %bb27
  %103 = load i8** %start, align 8
  %104 = getelementptr inbounds i8* %103, i64 0
  %105 = load i8* %104, align 1
  %106 = icmp ne i8 %105, 46
  br i1 %106, label %bb36, label %bb29

bb29:                                             ; preds = %bb28
  %107 = load i8** %start, align 8
  %108 = getelementptr inbounds i8* %107, i64 1
  %109 = load i8* %108, align 1
  %110 = icmp ne i8 %109, 46
  br i1 %110, label %bb36, label %bb30

bb30:                                             ; preds = %bb29
  %111 = load i8** %rname, align 8
  %112 = load i64* %prefix_len, align 8
  %113 = getelementptr inbounds i8* %111, i64 %112
  %114 = getelementptr inbounds i8* %113, i64 1
  %115 = load i8** %dest, align 8
  %116 = icmp ult i8* %114, %115
  br i1 %116, label %bb31, label %bb88

bb31:                                             ; preds = %bb30
  %117 = load i8** %dest, align 8
  %118 = getelementptr inbounds i8* %117, i64 -1
  store i8* %118, i8** %dest, align 8
  br label %bb33

bb32:                                             ; preds = %bb34
  %119 = load i8** %dest, align 8
  %120 = getelementptr inbounds i8* %119, i64 -1
  store i8* %120, i8** %dest, align 8
  br label %bb33

bb33:                                             ; preds = %bb32, %bb31
  %121 = load i8** %dest, align 8
  %122 = load i8** %rname, align 8
  %123 = icmp ule i8* %121, %122
  br i1 %123, label %bb88, label %bb34

bb34:                                             ; preds = %bb33
  %124 = load i8** %dest, align 8
  %125 = getelementptr inbounds i8* %124, i64 -1
  %126 = load i8* %125, align 1
  %127 = icmp ne i8 %126, 47
  br i1 %127, label %bb32, label %bb88

bb36:                                             ; preds = %bb29, %bb28, %bb27
  %128 = load i8** %dest, align 8
  %129 = getelementptr inbounds i8* %128, i64 -1
  %130 = load i8* %129, align 1
  %131 = icmp ne i8 %130, 47
  br i1 %131, label %bb37, label %bb38

bb37:                                             ; preds = %bb36
  %132 = load i8** %dest, align 8
  store i8 47, i8* %132, align 1
  %133 = load i8** %dest, align 8
  %134 = getelementptr inbounds i8* %133, i64 1
  store i8* %134, i8** %dest, align 8
  br label %bb38

bb38:                                             ; preds = %bb37, %bb36
  %135 = load i8** %end, align 8
  %136 = ptrtoint i8* %135 to i64
  %137 = load i8** %start, align 8
  %138 = ptrtoint i8* %137 to i64
  %139 = sub nsw i64 %136, %138
  %140 = load i8** %dest, align 8
  %141 = getelementptr inbounds i8* %140, i64 %139
  %142 = load i8** %rname_limit, align 8
  %143 = icmp uge i8* %141, %142
  br i1 %143, label %bb39, label %bb43

bb39:                                             ; preds = %bb38
  %144 = load i8** %dest, align 8
  %145 = ptrtoint i8* %144 to i64
  %146 = load i8** %rname, align 8
  %147 = ptrtoint i8* %146 to i64
  %148 = sub nsw i64 %145, %147
  store i64 %148, i64* %dest_offset, align 8
  %149 = load i8** %rname_limit, align 8
  %150 = ptrtoint i8* %149 to i64
  %151 = load i8** %rname, align 8
  %152 = ptrtoint i8* %151 to i64
  %153 = sub nsw i64 %150, %152
  store i64 %153, i64* %new_size, align 8
  %154 = load i8** %end, align 8
  %155 = ptrtoint i8* %154 to i64
  %156 = load i8** %start, align 8
  %157 = ptrtoint i8* %156 to i64
  %158 = sub nsw i64 %155, %157
  %159 = add nsw i64 %158, 1
  %160 = icmp sgt i64 %159, 4096
  br i1 %160, label %bb40, label %bb41

bb40:                                             ; preds = %bb39
  %161 = load i8** %end, align 8
  %162 = ptrtoint i8* %161 to i64
  %163 = load i8** %start, align 8
  %164 = ptrtoint i8* %163 to i64
  %165 = sub nsw i64 %162, %164
  %166 = load i64* %new_size, align 8
  %167 = add i64 %165, %166
  %168 = add i64 %167, 1
  store i64 %168, i64* %new_size, align 8
  br label %bb42

bb41:                                             ; preds = %bb39
  %169 = load i64* %new_size, align 8
  %170 = add i64 %169, 4096
  store i64 %170, i64* %new_size, align 8
  br label %bb42

bb42:                                             ; preds = %bb41, %bb40
  %171 = load i8** %rname, align 8
  %172 = load i64* %new_size, align 8
  %173 = call i8* @xrealloc(i8* %171, i64 %172) nounwind
  store i8* %173, i8** %rname, align 8
  %174 = load i8** %rname, align 8
  %175 = load i64* %new_size, align 8
  %176 = getelementptr inbounds i8* %174, i64 %175
  store i8* %176, i8** %rname_limit, align 8
  %177 = load i8** %rname, align 8
  %178 = load i64* %dest_offset, align 8
  %179 = getelementptr inbounds i8* %177, i64 %178
  store i8* %179, i8** %dest, align 8
  br label %bb43

bb43:                                             ; preds = %bb42, %bb38
  %180 = load i8** %end, align 8
  %181 = ptrtoint i8* %180 to i64
  %182 = load i8** %start, align 8
  %183 = ptrtoint i8* %182 to i64
  %184 = sub nsw i64 %181, %183
  %185 = load i8** %dest, align 8
  %186 = load i8** %start, align 8
  %187 = call i8* @memcpy(i8* %185, i8* %186, i64 %184)
  store i8* %185, i8** %dest, align 8
  %188 = load i8** %end, align 8
  %189 = ptrtoint i8* %188 to i64
  %190 = load i8** %start, align 8
  %191 = ptrtoint i8* %190 to i64
  %192 = sub nsw i64 %189, %191
  %193 = load i8** %dest, align 8
  %194 = getelementptr inbounds i8* %193, i64 %192
  store i8* %194, i8** %dest, align 8
  %195 = load i8** %dest, align 8
  store i8 0, i8* %195, align 1
  %196 = load i8* %logical, align 1
  %toBool = icmp ne i8 %196, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot44 = zext i1 %toBoolnot to i8
  %toBool46 = icmp ne i8 %toBoolnot44, 0
  br i1 %toBool46, label %bb49, label %bb47

bb47:                                             ; preds = %bb43
  %197 = load i32* %can_mode_addr, align 4
  %198 = icmp ne i32 %197, 2
  br i1 %198, label %bb49, label %bb48

bb48:                                             ; preds = %bb47
  %199 = getelementptr inbounds %struct.stat* %st, i32 0, i32 3
  store i32 0, i32* %199, align 8
  br label %bb61

bb49:                                             ; preds = %bb47, %bb43
  %200 = load i8* %logical, align 1
  %toBool50 = icmp ne i8 %200, 0
  %201 = load i8** %rname, align 8
  br i1 %toBool50, label %bb51, label %bb52

bb51:                                             ; preds = %bb49
  %202 = call i32 @stat(i8* noalias %201, %struct.stat* noalias %st) nounwind
  %203 = icmp ne i32 %202, 0
  %204 = zext i1 %203 to i8
  store i8 %204, i8* %iftmp.24, align 1
  br label %bb53

bb52:                                             ; preds = %bb49
  %205 = call i32 @lstat(i8* noalias %201, %struct.stat* noalias %st) nounwind
  %206 = icmp ne i32 %205, 0
  %207 = zext i1 %206 to i8
  store i8 %207, i8* %iftmp.24, align 1
  br label %bb53

bb53:                                             ; preds = %bb52, %bb51
  %208 = load i8* %iftmp.24, align 1
  %toBool54 = icmp ne i8 %208, 0
  br i1 %toBool54, label %bb55, label %bb61

bb55:                                             ; preds = %bb53
  %209 = call i32* @__errno_location() nounwind readnone
  %210 = load i32* %209, align 4
  store i32 %210, i32* %saved_errno, align 4
  %211 = load i32* %can_mode_addr, align 4
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %error, label %bb56

bb56:                                             ; preds = %bb55
  %213 = load i32* %can_mode_addr, align 4
  %214 = icmp eq i32 %213, 1
  br i1 %214, label %bb57, label %bb60

bb57:                                             ; preds = %bb56
  %215 = load i8** %end, align 8
  %216 = call i64 @strspn(i8* %215, i8* getelementptr inbounds ([2 x i8]* @.str110, i64 0, i64 0)) nounwind readonly
  %217 = load i8** %end, align 8
  %218 = getelementptr inbounds i8* %217, i64 %216
  %219 = load i8* %218, align 1
  %220 = icmp ne i8 %219, 0
  br i1 %220, label %error, label %bb58

bb58:                                             ; preds = %bb57
  %221 = load i32* %saved_errno, align 4
  %222 = icmp ne i32 %221, 2
  br i1 %222, label %error, label %bb88

bb60:                                             ; preds = %bb56
  %223 = getelementptr inbounds %struct.stat* %st, i32 0, i32 3
  store i32 0, i32* %223, align 8
  br label %bb61

bb61:                                             ; preds = %bb60, %bb53, %bb48
  %224 = getelementptr inbounds %struct.stat* %st, i32 0, i32 3
  %225 = load i32* %224, align 8
  %226 = and i32 %225, 61440
  %227 = icmp eq i32 %226, 40960
  br i1 %227, label %bb62, label %bb84

bb62:                                             ; preds = %bb61
  %228 = load i8** %name_addr, align 8
  %229 = call zeroext i8 @seen_triple(%struct.Hash_table** %ht, i8* %228, %struct.stat* %st) nounwind
  %toBool63 = icmp ne i8 %229, 0
  br i1 %toBool63, label %bb64, label %bb66

bb64:                                             ; preds = %bb62
  %230 = load i32* %can_mode_addr, align 4
  %231 = icmp eq i32 %230, 2
  br i1 %231, label %bb88, label %bb65

bb65:                                             ; preds = %bb64
  store i32 40, i32* %saved_errno, align 4
  br label %error

bb66:                                             ; preds = %bb62
  %232 = getelementptr inbounds %struct.stat* %st, i32 0, i32 8
  %233 = load i64* %232, align 8
  %234 = load i8** %rname, align 8
  %235 = call i8* @areadlink_with_size(i8* %234, i64 %233) nounwind
  store i8* %235, i8** %buf, align 8
  %236 = load i8** %buf, align 8
  %237 = icmp eq i8* %236, null
  br i1 %237, label %bb67, label %bb70

bb67:                                             ; preds = %bb66
  %238 = load i32* %can_mode_addr, align 4
  %239 = icmp eq i32 %238, 2
  br i1 %239, label %bb68, label %bb69

bb68:                                             ; preds = %bb67
  %240 = call i32* @__errno_location() nounwind readnone
  %241 = load i32* %240, align 4
  %242 = icmp ne i32 %241, 12
  br i1 %242, label %bb88, label %bb69

bb69:                                             ; preds = %bb68, %bb67
  %243 = call i32* @__errno_location() nounwind readnone
  %244 = load i32* %243, align 4
  store i32 %244, i32* %saved_errno, align 4
  br label %error

bb70:                                             ; preds = %bb66
  %245 = load i8** %buf, align 8
  %246 = call i64 @strlen(i8* %245) nounwind readonly
  store i64 %246, i64* %n, align 8
  %247 = load i8** %end, align 8
  %248 = call i64 @strlen(i8* %247) nounwind readonly
  store i64 %248, i64* %len, align 8
  %249 = load i64* %extra_len, align 8
  %250 = icmp eq i64 %249, 0
  %251 = load i64* %n, align 8
  %252 = load i64* %len, align 8
  %253 = add i64 %251, %252
  %254 = add i64 %253, 1
  br i1 %250, label %bb71, label %bb72

bb71:                                             ; preds = %bb70
  %255 = icmp uge i64 %254, 4096
  %max = select i1 %255, i64 %254, i64 4096
  store i64 %max, i64* %extra_len, align 8
  %256 = load i64* %extra_len, align 8
  %257 = call noalias i8* @xmalloc(i64 %256) nounwind
  store i8* %257, i8** %extra_buf, align 8
  br label %bb74

bb72:                                             ; preds = %bb70
  %258 = load i64* %extra_len, align 8
  %259 = icmp ugt i64 %254, %258
  br i1 %259, label %bb73, label %bb74

bb73:                                             ; preds = %bb72
  %260 = load i64* %n, align 8
  %261 = load i64* %len, align 8
  %262 = add i64 %260, %261
  %263 = add i64 %262, 1
  store i64 %263, i64* %extra_len, align 8
  %264 = load i8** %extra_buf, align 8
  %265 = load i64* %extra_len, align 8
  %266 = call i8* @xrealloc(i8* %264, i64 %265) nounwind
  store i8* %266, i8** %extra_buf, align 8
  br label %bb74

bb74:                                             ; preds = %bb73, %bb72, %bb71
  %267 = load i64* %len, align 8
  %268 = add i64 %267, 1
  %269 = load i8** %extra_buf, align 8
  %270 = load i64* %n, align 8
  %271 = getelementptr inbounds i8* %269, i64 %270
  %272 = load i8** %end, align 8
  %273 = call i8* @memmove(i8* %271, i8* %272, i64 %268)
  %274 = load i8** %extra_buf, align 8
  %275 = load i8** %buf, align 8
  %276 = load i64* %n, align 8
  %277 = call i8* @memcpy(i8* %274, i8* %275, i64 %276)
  store i8* %274, i8** %end, align 8
  %278 = load i8** %end, align 8
  store i8* %278, i8** %name_addr, align 8
  %279 = load i8** %buf, align 8
  %280 = getelementptr inbounds i8* %279, i64 0
  %281 = load i8* %280, align 1
  %282 = icmp eq i8 %281, 47
  br i1 %282, label %bb75, label %bb78

bb75:                                             ; preds = %bb74
  store i64 0, i64* %pfxlen, align 8
  %283 = load i64* %pfxlen, align 8
  %284 = icmp ne i64 %283, 0
  br i1 %284, label %bb76, label %bb77

bb76:                                             ; preds = %bb75
  %285 = load i8** %rname, align 8
  %286 = load i8** %buf, align 8
  %287 = load i64* %pfxlen, align 8
  %288 = call i8* @memcpy(i8* %285, i8* %286, i64 %287)
  br label %bb77

bb77:                                             ; preds = %bb76, %bb75
  %289 = load i8** %rname, align 8
  %290 = load i64* %pfxlen, align 8
  %291 = getelementptr inbounds i8* %289, i64 %290
  store i8* %291, i8** %dest, align 8
  %292 = load i8** %dest, align 8
  store i8 47, i8* %292, align 1
  %293 = load i8** %dest, align 8
  %294 = getelementptr inbounds i8* %293, i64 1
  store i8* %294, i8** %dest, align 8
  %295 = load i64* %pfxlen, align 8
  store i64 %295, i64* %prefix_len, align 8
  br label %bb83

bb78:                                             ; preds = %bb74
  %296 = load i8** %rname, align 8
  %297 = load i64* %prefix_len, align 8
  %298 = getelementptr inbounds i8* %296, i64 %297
  %299 = getelementptr inbounds i8* %298, i64 1
  %300 = load i8** %dest, align 8
  %301 = icmp ult i8* %299, %300
  br i1 %301, label %bb79, label %bb83

bb79:                                             ; preds = %bb78
  %302 = load i8** %dest, align 8
  %303 = getelementptr inbounds i8* %302, i64 -1
  store i8* %303, i8** %dest, align 8
  br label %bb81

bb80:                                             ; preds = %bb82
  %304 = load i8** %dest, align 8
  %305 = getelementptr inbounds i8* %304, i64 -1
  store i8* %305, i8** %dest, align 8
  br label %bb81

bb81:                                             ; preds = %bb80, %bb79
  %306 = load i8** %dest, align 8
  %307 = load i8** %rname, align 8
  %308 = icmp ule i8* %306, %307
  br i1 %308, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %309 = load i8** %dest, align 8
  %310 = getelementptr inbounds i8* %309, i64 -1
  %311 = load i8* %310, align 1
  %312 = icmp ne i8 %311, 47
  br i1 %312, label %bb80, label %bb83

bb83:                                             ; preds = %bb82, %bb81, %bb78, %bb77
  %313 = load i8** %buf, align 8
  call void @free(i8* %313) nounwind
  br label %bb88

bb84:                                             ; preds = %bb61
  %314 = getelementptr inbounds %struct.stat* %st, i32 0, i32 3
  %315 = load i32* %314, align 8
  %316 = and i32 %315, 61440
  %317 = icmp ne i32 %316, 16384
  br i1 %317, label %bb85, label %bb88

bb85:                                             ; preds = %bb84
  %318 = load i8** %end, align 8
  %319 = load i8* %318, align 1
  %320 = icmp ne i8 %319, 0
  br i1 %320, label %bb86, label %bb88

bb86:                                             ; preds = %bb85
  %321 = load i32* %can_mode_addr, align 4
  %322 = icmp ne i32 %321, 2
  br i1 %322, label %bb87, label %bb88

bb87:                                             ; preds = %bb86
  store i32 20, i32* %saved_errno, align 4
  br label %error

bb88:                                             ; preds = %bb58, %bb30, %bb33, %bb34, %bb25, %bb86, %bb85, %bb84, %bb83, %bb68, %bb64
  %323 = load i8** %end, align 8
  store i8* %323, i8** %start, align 8
  br label %bb89

bb89:                                             ; preds = %bb11, %bb14, %bb88
  %324 = load i8** %start, align 8
  %325 = load i8* %324, align 1
  %326 = icmp ne i8 %325, 0
  br i1 %326, label %bb18, label %bb90

bb90:                                             ; preds = %bb89, %bb23
  %327 = load i8** %rname, align 8
  %328 = load i64* %prefix_len, align 8
  %329 = getelementptr inbounds i8* %327, i64 %328
  %330 = getelementptr inbounds i8* %329, i64 1
  %331 = load i8** %dest, align 8
  %332 = icmp ult i8* %330, %331
  br i1 %332, label %bb91, label %bb93

bb91:                                             ; preds = %bb90
  %333 = load i8** %dest, align 8
  %334 = getelementptr inbounds i8* %333, i64 -1
  %335 = load i8* %334, align 1
  %336 = icmp eq i8 %335, 47
  br i1 %336, label %bb92, label %bb93

bb92:                                             ; preds = %bb91
  %337 = load i8** %dest, align 8
  %338 = getelementptr inbounds i8* %337, i64 -1
  store i8* %338, i8** %dest, align 8
  br label %bb93

bb93:                                             ; preds = %bb92, %bb91, %bb90
  %339 = load i8** %dest, align 8
  store i8 0, i8* %339, align 1
  %340 = load i8** %dest, align 8
  %341 = getelementptr inbounds i8* %340, i64 1
  %342 = load i8** %rname_limit, align 8
  %343 = icmp ne i8* %341, %342
  br i1 %343, label %bb94, label %bb95

bb94:                                             ; preds = %bb93
  %344 = load i8** %dest, align 8
  %345 = ptrtoint i8* %344 to i64
  %346 = load i8** %rname, align 8
  %347 = ptrtoint i8* %346 to i64
  %348 = sub nsw i64 %345, %347
  %349 = add nsw i64 %348, 1
  %350 = load i8** %rname, align 8
  %351 = call i8* @xrealloc(i8* %350, i64 %349) nounwind
  store i8* %351, i8** %rname, align 8
  br label %bb95

bb95:                                             ; preds = %bb94, %bb93
  %352 = load i8** %extra_buf, align 8
  call void @free(i8* %352) nounwind
  %353 = load %struct.Hash_table** %ht, align 8
  %354 = icmp ne %struct.Hash_table* %353, null
  br i1 %354, label %bb96, label %bb97

bb96:                                             ; preds = %bb95
  %355 = load %struct.Hash_table** %ht, align 8
  call void @hash_free(%struct.Hash_table* %355) nounwind
  br label %bb97

bb97:                                             ; preds = %bb96, %bb95
  %356 = load i8** %rname, align 8
  store i8* %356, i8** %0, align 8
  br label %bb100

error:                                            ; preds = %bb87, %bb69, %bb65, %bb58, %bb57, %bb55
  %357 = load i8** %extra_buf, align 8
  call void @free(i8* %357) nounwind
  %358 = load i8** %rname, align 8
  call void @free(i8* %358) nounwind
  %359 = load %struct.Hash_table** %ht, align 8
  %360 = icmp ne %struct.Hash_table* %359, null
  br i1 %360, label %bb98, label %bb99

bb98:                                             ; preds = %error
  %361 = load %struct.Hash_table** %ht, align 8
  call void @hash_free(%struct.Hash_table* %361) nounwind
  br label %bb99

bb99:                                             ; preds = %bb98, %error
  %362 = call i32* @__errno_location() nounwind readnone
  %363 = load i32* %saved_errno, align 4
  store i32 %363, i32* %362, align 4
  store i8* null, i8** %0, align 8
  br label %bb100

bb100:                                            ; preds = %bb99, %bb97, %bb7, %bb4, %bb2, %bb
  %364 = load i8** %0, align 8
  store i8* %364, i8** %retval, align 8
  %retval101 = load i8** %retval
  ret i8* %retval101
}

declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture, i64, i32, i1) nounwind

define void @close_stdout_set_file_name(i8* %file) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  %0 = load i8** %file_addr, align 8
  store i8* %0, i8** @file_name, align 8
  ret void
}

define void @close_stdout_set_ignore_EPIPE(i8 zeroext %ignore) nounwind {
entry:
  %ignore_addr = alloca i8, align 1
  %"alloca point" = bitcast i32 0 to i32
  store i8 %ignore, i8* %ignore_addr
  %0 = load i8* %ignore_addr, align 1
  store i8 %0, i8* @ignore_EPIPE, align 1
  ret void
}

define void @close_stdout() nounwind {
entry:
  %write_error = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  %0 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %1 = call i32 @close_stream(%struct.FILE* %0) nounwind
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %bb, label %bb9

bb:                                               ; preds = %entry
  %3 = load i8* @ignore_EPIPE, align 1
  %toBool = icmp ne i8 %3, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb5, label %bb4

bb4:                                              ; preds = %bb
  %4 = call i32* @__errno_location() nounwind readnone
  %5 = load i32* %4, align 4
  %6 = icmp ne i32 %5, 32
  br i1 %6, label %bb5, label %bb9

bb5:                                              ; preds = %bb4, %bb
  %7 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8]* @.str112, i64 0, i64 0)) nounwind
  store i8* %7, i8** %write_error, align 8
  %8 = load i8** @file_name, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %10 = load i8** @file_name, align 8
  %11 = call i8* @quotearg_colon(i8* %10) nounwind
  %12 = call i32* @__errno_location() nounwind readnone
  %13 = load i32* %12, align 4
  %14 = load i8** %write_error, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %13, i8* getelementptr inbounds ([7 x i8]* @.str1113, i64 0, i64 0), i8* %11, i8* %14) nounwind
  br label %bb8

bb7:                                              ; preds = %bb5
  %15 = call i32* @__errno_location() nounwind readnone
  %16 = load i32* %15, align 4
  %17 = load i8** %write_error, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %16, i8* getelementptr inbounds ([3 x i8]* @.str2114, i64 0, i64 0), i8* %17) nounwind
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %18 = volatile load i32* @exit_failure, align 4
  call void @_exit(i32 %18) noreturn nounwind
  unreachable

bb9:                                              ; preds = %bb4, %entry
  %19 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %20 = call i32 @close_stream(%struct.FILE* %19) nounwind
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %bb10, label %return

bb10:                                             ; preds = %bb9
  %22 = volatile load i32* @exit_failure, align 4
  call void @_exit(i32 %22) noreturn nounwind
  unreachable

return:                                           ; preds = %bb9
  ret void
}

declare void @_exit(i32) noreturn nounwind

define i8* @dir_name(i8* %file) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %result = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  %1 = load i8** %file_addr, align 8
  %2 = call i8* @mdir_name(i8* %1) nounwind
  store i8* %2, i8** %result, align 8
  %3 = load i8** %result, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %5 = load i8** %result, align 8
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i64 @dir_len(i8* %file) nounwind readonly {
entry:
  %file_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.0 = alloca i32
  %prefix_length = alloca i64
  %length = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i64 0, i64* %prefix_length, align 8
  %1 = load i64* %prefix_length, align 8
  %2 = icmp ne i64 %1, 0
  br i1 %2, label %bb2, label %bb

bb:                                               ; preds = %entry
  %3 = load i8** %file_addr, align 8
  %4 = getelementptr inbounds i8* %3, i64 0
  %5 = load i8* %4, align 1
  %6 = icmp ne i8 %5, 47
  br i1 %6, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %7 = load i32* %iftmp.0, align 4
  %8 = sext i32 %7 to i64
  %9 = load i64* %prefix_length, align 8
  %10 = add i64 %8, %9
  store i64 %10, i64* %prefix_length, align 8
  %11 = load i8** %file_addr, align 8
  %12 = call i8* @last_component(i8* %11) nounwind readonly
  %13 = ptrtoint i8* %12 to i64
  %14 = load i8** %file_addr, align 8
  %15 = ptrtoint i8* %14 to i64
  %16 = sub nsw i64 %13, %15
  store i64 %16, i64* %length, align 8
  br label %bb6

bb4:                                              ; preds = %bb6
  %17 = load i64* %length, align 8
  %18 = sub i64 %17, 1
  %19 = load i8** %file_addr, align 8
  %20 = getelementptr inbounds i8* %19, i64 %18
  %21 = load i8* %20, align 1
  %22 = icmp ne i8 %21, 47
  br i1 %22, label %bb7, label %bb5

bb5:                                              ; preds = %bb4
  %23 = load i64* %length, align 8
  %24 = sub i64 %23, 1
  store i64 %24, i64* %length, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %25 = load i64* %prefix_length, align 8
  %26 = load i64* %length, align 8
  %27 = icmp ult i64 %25, %26
  br i1 %27, label %bb4, label %bb7

bb7:                                              ; preds = %bb6, %bb4
  %28 = load i64* %length, align 8
  store i64 %28, i64* %0, align 8
  %29 = load i64* %0, align 8
  store i64 %29, i64* %retval, align 8
  %retval8 = load i64* %retval
  ret i64 %retval8
}

define i8* @mdir_name(i8* %file) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %length = alloca i64
  %append_dot = alloca i8
  %dir = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  %1 = load i8** %file_addr, align 8
  %2 = call i64 @dir_len(i8* %1) nounwind readonly
  store i64 %2, i64* %length, align 8
  %3 = load i64* %length, align 8
  %4 = icmp eq i64 %3, 0
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %append_dot, align 1
  %6 = load i8* %append_dot, align 1
  %7 = zext i8 %6 to i64
  %8 = load i64* %length, align 8
  %9 = add i64 %7, %8
  %10 = add i64 %9, 1
  %11 = call noalias i8* @malloc(i64 %10) nounwind
  store i8* %11, i8** %dir, align 8
  %12 = load i8** %dir, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb4

bb1:                                              ; preds = %entry
  %14 = load i8** %dir, align 8
  %15 = load i8** %file_addr, align 8
  %16 = load i64* %length, align 8
  %17 = call i8* @memcpy(i8* %14, i8* %15, i64 %16)
  %18 = load i8* %append_dot, align 1
  %toBool = icmp ne i8 %18, 0
  br i1 %toBool, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %19 = load i8** %dir, align 8
  %20 = load i64* %length, align 8
  %21 = getelementptr inbounds i8* %19, i64 %20
  store i8 46, i8* %21, align 1
  %22 = load i64* %length, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %length, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %24 = load i8** %dir, align 8
  %25 = load i64* %length, align 8
  %26 = getelementptr inbounds i8* %24, i64 %25
  store i8 0, i8* %26, align 1
  %27 = load i8** %dir, align 8
  store i8* %27, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb
  %28 = load i8** %0, align 8
  store i8* %28, i8** %retval, align 8
  %retval5 = load i8** %retval
  ret i8* %retval5
}

declare noalias i8* @malloc(i64) nounwind

define i8* @last_component(i8* %name) nounwind readonly {
entry:
  %name_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %base = alloca i8*
  %p = alloca i8*
  %saw_slash = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  %1 = load i8** %name_addr, align 8
  %2 = getelementptr inbounds i8* %1, i64 0
  store i8* %2, i8** %base, align 8
  store i8 0, i8* %saw_slash, align 1
  br label %bb1

bb:                                               ; preds = %bb1
  %3 = getelementptr inbounds i8* %7, i64 1
  store i8* %3, i8** %base, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %4 = load i8** %base, align 8
  %5 = load i8* %4, align 1
  %6 = icmp eq i8 %5, 47
  %7 = load i8** %base, align 8
  br i1 %6, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  store i8* %7, i8** %p, align 8
  br label %bb8

bb3:                                              ; preds = %bb8
  %8 = load i8** %p, align 8
  %9 = load i8* %8, align 1
  %10 = icmp eq i8 %9, 47
  br i1 %10, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i8 1, i8* %saw_slash, align 1
  br label %bb7

bb5:                                              ; preds = %bb3
  %11 = load i8* %saw_slash, align 1
  %toBool = icmp ne i8 %11, 0
  br i1 %toBool, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %12 = load i8** %p, align 8
  store i8* %12, i8** %base, align 8
  store i8 0, i8* %saw_slash, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5, %bb4
  %13 = load i8** %p, align 8
  %14 = getelementptr inbounds i8* %13, i64 1
  store i8* %14, i8** %p, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb2
  %15 = load i8** %p, align 8
  %16 = load i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  br i1 %17, label %bb3, label %bb9

bb9:                                              ; preds = %bb8
  %18 = load i8** %base, align 8
  store i8* %18, i8** %0, align 8
  %19 = load i8** %0, align 8
  store i8* %19, i8** %retval, align 8
  %retval10 = load i8** %retval
  ret i8* %retval10
}

define i64 @base_len(i8* %name) nounwind readonly {
entry:
  %name_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %len = alloca i64
  %prefix_len = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store i64 0, i64* %prefix_len, align 8
  %1 = load i8** %name_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  store i64 %2, i64* %len, align 8
  br label %bb1

bb:                                               ; preds = %bb2
  %3 = load i64* %len, align 8
  %4 = sub i64 %3, 1
  store i64 %4, i64* %len, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %5 = load i64* %len, align 8
  %6 = icmp ule i64 %5, 1
  br i1 %6, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %7 = load i64* %len, align 8
  %8 = sub i64 %7, 1
  %9 = load i8** %name_addr, align 8
  %10 = getelementptr inbounds i8* %9, i64 %8
  %11 = load i8* %10, align 1
  %12 = icmp eq i8 %11, 47
  br i1 %12, label %bb, label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %13 = load i64* %len, align 8
  store i64 %13, i64* %0, align 8
  %14 = load i64* %0, align 8
  store i64 %14, i64* %retval, align 8
  %retval4 = load i64* %retval
  ret i64 %retval4
}

define void @record_file(%struct.Hash_table* %ht, i8* %file, %struct.stat* %stats) nounwind {
entry:
  %ht_addr = alloca %struct.Hash_table*, align 8
  %file_addr = alloca i8*, align 8
  %stats_addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*
  %ent_from_table = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %ht, %struct.Hash_table** %ht_addr
  store i8* %file, i8** %file_addr
  store %struct.stat* %stats, %struct.stat** %stats_addr
  %0 = load %struct.Hash_table** %ht_addr, align 8
  %1 = icmp eq %struct.Hash_table* %0, null
  br i1 %1, label %return, label %bb

bb:                                               ; preds = %entry
  %2 = call noalias i8* @xmalloc(i64 24) nounwind
  %3 = bitcast i8* %2 to %struct.F_triple*
  store %struct.F_triple* %3, %struct.F_triple** %ent, align 8
  %4 = load i8** %file_addr, align 8
  %5 = call noalias i8* @xstrdup(i8* %4) nounwind
  %6 = load %struct.F_triple** %ent, align 8
  %7 = getelementptr inbounds %struct.F_triple* %6, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = load %struct.stat** %stats_addr, align 8
  %9 = getelementptr inbounds %struct.stat* %8, i32 0, i32 1
  %10 = load i64* %9, align 8
  %11 = load %struct.F_triple** %ent, align 8
  %12 = getelementptr inbounds %struct.F_triple* %11, i32 0, i32 1
  store i64 %10, i64* %12, align 8
  %13 = load %struct.stat** %stats_addr, align 8
  %14 = getelementptr inbounds %struct.stat* %13, i32 0, i32 0
  %15 = load i64* %14, align 8
  %16 = load %struct.F_triple** %ent, align 8
  %17 = getelementptr inbounds %struct.F_triple* %16, i32 0, i32 2
  store i64 %15, i64* %17, align 8
  %18 = load %struct.Hash_table** %ht_addr, align 8
  %19 = load %struct.F_triple** %ent, align 8
  %20 = bitcast %struct.F_triple* %19 to i8*
  %21 = call i8* @hash_insert(%struct.Hash_table* %18, i8* %20) nounwind
  %22 = bitcast i8* %21 to %struct.F_triple*
  store %struct.F_triple* %22, %struct.F_triple** %ent_from_table, align 8
  %23 = load %struct.F_triple** %ent_from_table, align 8
  %24 = icmp eq %struct.F_triple* %23, null
  br i1 %24, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb
  %25 = load %struct.F_triple** %ent_from_table, align 8
  %26 = load %struct.F_triple** %ent, align 8
  %27 = icmp ne %struct.F_triple* %25, %26
  br i1 %27, label %bb3, label %return

bb3:                                              ; preds = %bb2
  %28 = load %struct.F_triple** %ent, align 8
  %29 = bitcast %struct.F_triple* %28 to i8*
  call void @triple_free(i8* %29) nounwind
  br label %return

return:                                           ; preds = %entry, %bb2, %bb3
  ret void
}

define zeroext i8 @seen_file(%struct.Hash_table* %ht, i8* %file, %struct.stat* %stats) nounwind {
entry:
  %ht_addr = alloca %struct.Hash_table*, align 8
  %file_addr = alloca i8*, align 8
  %stats_addr = alloca %struct.stat*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %new_ent = alloca %struct.F_triple
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %ht, %struct.Hash_table** %ht_addr
  store i8* %file, i8** %file_addr
  store %struct.stat* %stats, %struct.stat** %stats_addr
  %1 = load %struct.Hash_table** %ht_addr, align 8
  %2 = bitcast %struct.Hash_table* %1 to i8*
  %3 = icmp eq i8* %2, null
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb3

bb1:                                              ; preds = %entry
  %4 = load i8** %file_addr, align 8
  %5 = getelementptr inbounds %struct.F_triple* %new_ent, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  %6 = load %struct.stat** %stats_addr, align 8
  %7 = getelementptr inbounds %struct.stat* %6, i32 0, i32 1
  %8 = load i64* %7, align 8
  %9 = getelementptr inbounds %struct.F_triple* %new_ent, i32 0, i32 1
  store i64 %8, i64* %9, align 8
  %10 = load %struct.stat** %stats_addr, align 8
  %11 = getelementptr inbounds %struct.stat* %10, i32 0, i32 0
  %12 = load i64* %11, align 8
  %13 = getelementptr inbounds %struct.F_triple* %new_ent, i32 0, i32 2
  store i64 %12, i64* %13, align 8
  %14 = load %struct.Hash_table** %ht_addr, align 8
  %new_ent2 = bitcast %struct.F_triple* %new_ent to i8*
  %15 = call i8* @hash_lookup(%struct.Hash_table* %14, i8* %new_ent2) nounwind
  %16 = icmp ne i8* %15, null
  %17 = zext i1 %16 to i32
  store i32 %17, i32* %0, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb
  %18 = load i32* %0, align 4
  store i32 %18, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define i64 @hash_get_n_buckets(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 2
  %3 = load i64* %2, align 8
  store i64 %3, i64* %0, align 8
  %4 = load i64* %0, align 8
  store i64 %4, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @hash_get_n_buckets_used(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 3
  %3 = load i64* %2, align 8
  store i64 %3, i64* %0, align 8
  %4 = load i64* %0, align 8
  store i64 %4, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @hash_get_n_entries(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 4
  %3 = load i64* %2, align 8
  store i64 %3, i64* %0, align 8
  %4 = load i64* %0, align 8
  store i64 %4, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @hash_get_max_bucket_length(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %bucket = alloca %struct.fs_type_list*
  %max_bucket_length = alloca i64
  %cursor = alloca %struct.fs_type_list*
  %bucket_length = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i64 0, i64* %max_bucket_length, align 8
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.fs_type_list** %2, align 8
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  br label %bb7

bb:                                               ; preds = %bb7
  %4 = load %struct.fs_type_list** %bucket, align 8
  %5 = getelementptr inbounds %struct.fs_type_list* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb6

bb1:                                              ; preds = %bb
  %8 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** %cursor, align 8
  store i64 1, i64* %bucket_length, align 8
  br label %bb3

bb2:                                              ; preds = %bb3
  %9 = add i64 %15, 1
  store i64 %9, i64* %bucket_length, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %10 = load %struct.fs_type_list** %cursor, align 8
  %11 = getelementptr inbounds %struct.fs_type_list* %10, i32 0, i32 1
  %12 = load %struct.fs_type_list** %11, align 8
  store %struct.fs_type_list* %12, %struct.fs_type_list** %cursor, align 8
  %13 = load %struct.fs_type_list** %cursor, align 8
  %14 = icmp ne %struct.fs_type_list* %13, null
  %15 = load i64* %bucket_length, align 8
  br i1 %14, label %bb2, label %bb4

bb4:                                              ; preds = %bb3
  %16 = load i64* %max_bucket_length, align 8
  %17 = icmp ugt i64 %15, %16
  br i1 %17, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %18 = load i64* %bucket_length, align 8
  store i64 %18, i64* %max_bucket_length, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4, %bb
  %19 = load %struct.fs_type_list** %bucket, align 8
  %20 = getelementptr inbounds %struct.fs_type_list* %19, i64 1
  store %struct.fs_type_list* %20, %struct.fs_type_list** %bucket, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %entry
  %21 = load %struct.Hash_table** %table_addr, align 8
  %22 = getelementptr inbounds %struct.Hash_table* %21, i32 0, i32 1
  %23 = load %struct.fs_type_list** %22, align 8
  %24 = load %struct.fs_type_list** %bucket, align 8
  %25 = icmp ugt %struct.fs_type_list* %23, %24
  br i1 %25, label %bb, label %bb8

bb8:                                              ; preds = %bb7
  %26 = load i64* %max_bucket_length, align 8
  store i64 %26, i64* %0, align 8
  %27 = load i64* %0, align 8
  store i64 %27, i64* %retval, align 8
  %retval9 = load i64* %retval
  ret i64 %retval9
}

define zeroext i8 @hash_table_ok(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %bucket = alloca %struct.fs_type_list*
  %n_buckets_used = alloca i64
  %n_entries = alloca i64
  %cursor = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i64 0, i64* %n_buckets_used, align 8
  store i64 0, i64* %n_entries, align 8
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.fs_type_list** %2, align 8
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  br label %bb5

bb:                                               ; preds = %bb5
  %4 = load %struct.fs_type_list** %bucket, align 8
  %5 = getelementptr inbounds %struct.fs_type_list* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb4

bb1:                                              ; preds = %bb
  %8 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** %cursor, align 8
  %9 = load i64* %n_buckets_used, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* %n_buckets_used, align 8
  %11 = load i64* %n_entries, align 8
  %12 = add i64 %11, 1
  store i64 %12, i64* %n_entries, align 8
  br label %bb3

bb2:                                              ; preds = %bb3
  %13 = load i64* %n_entries, align 8
  %14 = add i64 %13, 1
  store i64 %14, i64* %n_entries, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %15 = load %struct.fs_type_list** %cursor, align 8
  %16 = getelementptr inbounds %struct.fs_type_list* %15, i32 0, i32 1
  %17 = load %struct.fs_type_list** %16, align 8
  store %struct.fs_type_list* %17, %struct.fs_type_list** %cursor, align 8
  %18 = load %struct.fs_type_list** %cursor, align 8
  %19 = icmp ne %struct.fs_type_list* %18, null
  br i1 %19, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb
  %20 = load %struct.fs_type_list** %bucket, align 8
  %21 = getelementptr inbounds %struct.fs_type_list* %20, i64 1
  store %struct.fs_type_list* %21, %struct.fs_type_list** %bucket, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %entry
  %22 = load %struct.Hash_table** %table_addr, align 8
  %23 = getelementptr inbounds %struct.Hash_table* %22, i32 0, i32 1
  %24 = load %struct.fs_type_list** %23, align 8
  %25 = load %struct.fs_type_list** %bucket, align 8
  %26 = icmp ugt %struct.fs_type_list* %24, %25
  br i1 %26, label %bb, label %bb6

bb6:                                              ; preds = %bb5
  %27 = load %struct.Hash_table** %table_addr, align 8
  %28 = getelementptr inbounds %struct.Hash_table* %27, i32 0, i32 3
  %29 = load i64* %28, align 8
  %30 = load i64* %n_buckets_used, align 8
  %31 = icmp eq i64 %29, %30
  br i1 %31, label %bb7, label %bb9

bb7:                                              ; preds = %bb6
  %32 = load %struct.Hash_table** %table_addr, align 8
  %33 = getelementptr inbounds %struct.Hash_table* %32, i32 0, i32 4
  %34 = load i64* %33, align 8
  %35 = load i64* %n_entries, align 8
  %36 = icmp eq i64 %34, %35
  br i1 %36, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  store i32 1, i32* %0, align 4
  br label %bb10

bb9:                                              ; preds = %bb7, %bb6
  store i32 0, i32* %0, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %37 = load i32* %0, align 4
  store i32 %37, i32* %retval, align 4
  %retval11 = load i32* %retval
  %retval1112 = trunc i32 %retval11 to i8
  ret i8 %retval1112
}

define void @hash_print_statistics(%struct.Hash_table* %table, %struct.FILE* %stream) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %stream_addr = alloca %struct.FILE*, align 8
  %n_entries = alloca i64
  %n_buckets = alloca i64
  %n_buckets_used = alloca i64
  %max_bucket_length = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  %0 = load %struct.Hash_table** %table_addr, align 8
  %1 = call i64 @hash_get_n_entries(%struct.Hash_table* %0) nounwind readonly
  store i64 %1, i64* %n_entries, align 8
  %2 = load %struct.Hash_table** %table_addr, align 8
  %3 = call i64 @hash_get_n_buckets(%struct.Hash_table* %2) nounwind readonly
  store i64 %3, i64* %n_buckets, align 8
  %4 = load %struct.Hash_table** %table_addr, align 8
  %5 = call i64 @hash_get_n_buckets_used(%struct.Hash_table* %4) nounwind readonly
  store i64 %5, i64* %n_buckets_used, align 8
  %6 = load %struct.Hash_table** %table_addr, align 8
  %7 = call i64 @hash_get_max_bucket_length(%struct.Hash_table* %6) nounwind readonly
  store i64 %7, i64* %max_bucket_length, align 8
  %8 = load %struct.FILE** %stream_addr, align 8
  %9 = load i64* %n_entries, align 8
  %10 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %8, i8* noalias getelementptr inbounds ([24 x i8]* @.str122, i64 0, i64 0), i64 %9) nounwind
  %11 = load %struct.FILE** %stream_addr, align 8
  %12 = load i64* %n_buckets, align 8
  %13 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %11, i8* noalias getelementptr inbounds ([24 x i8]* @.str1123, i64 0, i64 0), i64 %12) nounwind
  %14 = load i64* %n_buckets_used, align 8
  %15 = uitofp i64 %14 to double
  %16 = fmul double %15, 1.000000e+02
  %17 = load i64* %n_buckets, align 8
  %18 = uitofp i64 %17 to double
  %19 = fdiv double %16, %18
  %20 = load %struct.FILE** %stream_addr, align 8
  %21 = load i64* %n_buckets_used, align 8
  %22 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %20, i8* noalias getelementptr inbounds ([33 x i8]* @.str2124, i64 0, i64 0), i64 %21, double %19) nounwind
  %23 = load %struct.FILE** %stream_addr, align 8
  %24 = load i64* %max_bucket_length, align 8
  %25 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %23, i8* noalias getelementptr inbounds ([24 x i8]* @.str3125, i64 0, i64 0), i64 %24) nounwind
  ret void
}

define internal %struct.fs_type_list* @safe_hasher(%struct.Hash_table* %table, i8* %key) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %key_addr = alloca i8*, align 8
  %retval = alloca %struct.fs_type_list*
  %0 = alloca %struct.fs_type_list*
  %n = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %key, i8** %key_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 6
  %3 = load i64 (i8*, i64)** %2, align 8
  %4 = load %struct.Hash_table** %table_addr, align 8
  %5 = getelementptr inbounds %struct.Hash_table* %4, i32 0, i32 2
  %6 = load i64* %5, align 8
  %7 = load i8** %key_addr, align 8
  %8 = call i64 %3(i8* %7, i64 %6) nounwind
  store i64 %8, i64* %n, align 8
  %9 = load %struct.Hash_table** %table_addr, align 8
  %10 = getelementptr inbounds %struct.Hash_table* %9, i32 0, i32 2
  %11 = load i64* %10, align 8
  %12 = load i64* %n, align 8
  %13 = icmp ule i64 %11, %12
  br i1 %13, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %14 = load %struct.Hash_table** %table_addr, align 8
  %15 = getelementptr inbounds %struct.Hash_table* %14, i32 0, i32 0
  %16 = load %struct.fs_type_list** %15, align 8
  %17 = load i64* %n, align 8
  %18 = getelementptr inbounds %struct.fs_type_list* %16, i64 %17
  store %struct.fs_type_list* %18, %struct.fs_type_list** %0, align 8
  %19 = load %struct.fs_type_list** %0, align 8
  store %struct.fs_type_list* %19, %struct.fs_type_list** %retval, align 8
  %retval2 = load %struct.fs_type_list** %retval
  ret %struct.fs_type_list* %retval2
}

define i8* @hash_lookup(%struct.Hash_table* %table, i8* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call %struct.fs_type_list* @safe_hasher(%struct.Hash_table* %1, i8* %2) nounwind
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  %4 = load %struct.fs_type_list** %bucket, align 8
  %5 = getelementptr inbounds %struct.fs_type_list* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb9

bb2:                                              ; preds = %entry
  %8 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** %cursor, align 8
  br label %bb7

bb3:                                              ; preds = %bb7
  %9 = load %struct.fs_type_list** %cursor, align 8
  %10 = getelementptr inbounds %struct.fs_type_list* %9, i32 0, i32 0
  %11 = load i8** %10, align 8
  %12 = load i8** %entry_addr, align 8
  %13 = icmp eq i8* %11, %12
  br i1 %13, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %14 = load %struct.Hash_table** %table_addr, align 8
  %15 = getelementptr inbounds %struct.Hash_table* %14, i32 0, i32 7
  %16 = load i8 (i8*, i8*)** %15, align 8
  %17 = load %struct.fs_type_list** %cursor, align 8
  %18 = getelementptr inbounds %struct.fs_type_list* %17, i32 0, i32 0
  %19 = load i8** %18, align 8
  %20 = load i8** %entry_addr, align 8
  %21 = call zeroext i8 %16(i8* %20, i8* %19) nounwind
  %toBool = icmp ne i8 %21, 0
  br i1 %toBool, label %bb5, label %bb6

bb5:                                              ; preds = %bb4, %bb3
  %22 = load %struct.fs_type_list** %cursor, align 8
  %23 = getelementptr inbounds %struct.fs_type_list* %22, i32 0, i32 0
  %24 = load i8** %23, align 8
  store i8* %24, i8** %0, align 8
  br label %bb9

bb6:                                              ; preds = %bb4
  %25 = load %struct.fs_type_list** %cursor, align 8
  %26 = getelementptr inbounds %struct.fs_type_list* %25, i32 0, i32 1
  %27 = load %struct.fs_type_list** %26, align 8
  store %struct.fs_type_list* %27, %struct.fs_type_list** %cursor, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb2
  %28 = load %struct.fs_type_list** %cursor, align 8
  %29 = icmp ne %struct.fs_type_list* %28, null
  br i1 %29, label %bb3, label %bb8

bb8:                                              ; preds = %bb7
  store i8* null, i8** %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb5, %bb
  %30 = load i8** %0, align 8
  store i8* %30, i8** %retval, align 8
  %retval10 = load i8** %retval
  ret i8* %retval10
}

define i8* @hash_get_first(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %bucket = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 4
  %3 = load i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb7

bb1:                                              ; preds = %entry
  %5 = load %struct.Hash_table** %table_addr, align 8
  %6 = getelementptr inbounds %struct.Hash_table* %5, i32 0, i32 0
  %7 = load %struct.fs_type_list** %6, align 8
  store %struct.fs_type_list* %7, %struct.fs_type_list** %bucket, align 8
  br label %bb2

bb2:                                              ; preds = %bb6, %bb1
  %8 = load %struct.Hash_table** %table_addr, align 8
  %9 = getelementptr inbounds %struct.Hash_table* %8, i32 0, i32 1
  %10 = load %struct.fs_type_list** %9, align 8
  %11 = load %struct.fs_type_list** %bucket, align 8
  %12 = icmp ule %struct.fs_type_list* %10, %11
  br i1 %12, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  call void @abort() noreturn nounwind
  unreachable

bb4:                                              ; preds = %bb2
  %13 = load %struct.fs_type_list** %bucket, align 8
  %14 = getelementptr inbounds %struct.fs_type_list* %13, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = icmp ne i8* %15, null
  %17 = load %struct.fs_type_list** %bucket, align 8
  br i1 %16, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %18 = getelementptr inbounds %struct.fs_type_list* %17, i32 0, i32 0
  %19 = load i8** %18, align 8
  store i8* %19, i8** %0, align 8
  br label %bb7

bb6:                                              ; preds = %bb4
  %20 = getelementptr inbounds %struct.fs_type_list* %17, i64 1
  store %struct.fs_type_list* %20, %struct.fs_type_list** %bucket, align 8
  br label %bb2

bb7:                                              ; preds = %bb5, %bb
  %21 = load i8** %0, align 8
  store i8* %21, i8** %retval, align 8
  %retval8 = load i8** %retval
  ret i8* %retval8
}

define i8* @hash_get_next(%struct.Hash_table* %table, i8* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call %struct.fs_type_list* @safe_hasher(%struct.Hash_table* %1, i8* %2) nounwind
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  %4 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %4, %struct.fs_type_list** %cursor, align 8
  br label %bb

bb:                                               ; preds = %bb4, %entry
  %5 = load %struct.fs_type_list** %cursor, align 8
  %6 = getelementptr inbounds %struct.fs_type_list* %5, i32 0, i32 0
  %7 = load i8** %6, align 8
  %8 = load i8** %entry_addr, align 8
  %9 = icmp eq i8* %7, %8
  br i1 %9, label %bb2, label %bb4

bb2:                                              ; preds = %bb
  %10 = load %struct.fs_type_list** %cursor, align 8
  %11 = getelementptr inbounds %struct.fs_type_list* %10, i32 0, i32 1
  %12 = load %struct.fs_type_list** %11, align 8
  %13 = icmp ne %struct.fs_type_list* %12, null
  br i1 %13, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %14 = load %struct.fs_type_list** %cursor, align 8
  %15 = getelementptr inbounds %struct.fs_type_list* %14, i32 0, i32 1
  %16 = load %struct.fs_type_list** %15, align 8
  %17 = getelementptr inbounds %struct.fs_type_list* %16, i32 0, i32 0
  %18 = load i8** %17, align 8
  store i8* %18, i8** %0, align 8
  br label %bb10

bb4:                                              ; preds = %bb2, %bb
  %19 = load %struct.fs_type_list** %cursor, align 8
  %20 = getelementptr inbounds %struct.fs_type_list* %19, i32 0, i32 1
  %21 = load %struct.fs_type_list** %20, align 8
  store %struct.fs_type_list* %21, %struct.fs_type_list** %cursor, align 8
  %22 = load %struct.fs_type_list** %cursor, align 8
  %23 = bitcast %struct.fs_type_list* %22 to i8*
  %24 = icmp ne i8* %23, null
  br i1 %24, label %bb, label %bb8

bb6:                                              ; preds = %bb8
  %25 = load %struct.fs_type_list** %bucket, align 8
  %26 = getelementptr inbounds %struct.fs_type_list* %25, i32 0, i32 0
  %27 = load i8** %26, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %29 = load %struct.fs_type_list** %bucket, align 8
  %30 = getelementptr inbounds %struct.fs_type_list* %29, i32 0, i32 0
  %31 = load i8** %30, align 8
  store i8* %31, i8** %0, align 8
  br label %bb10

bb8:                                              ; preds = %bb4, %bb6
  %32 = load %struct.fs_type_list** %bucket, align 8
  %33 = getelementptr inbounds %struct.fs_type_list* %32, i64 1
  store %struct.fs_type_list* %33, %struct.fs_type_list** %bucket, align 8
  %34 = load %struct.Hash_table** %table_addr, align 8
  %35 = getelementptr inbounds %struct.Hash_table* %34, i32 0, i32 1
  %36 = load %struct.fs_type_list** %35, align 8
  %37 = load %struct.fs_type_list** %bucket, align 8
  %38 = icmp ult %struct.fs_type_list* %37, %36
  br i1 %38, label %bb6, label %bb9

bb9:                                              ; preds = %bb8
  store i8* null, i8** %0, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7, %bb3
  %39 = load i8** %0, align 8
  store i8* %39, i8** %retval, align 8
  %retval11 = load i8** %retval
  ret i8* %retval11
}

define i64 @hash_get_entries(%struct.Hash_table* %table, i8** %buffer, i64 %buffer_size) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %buffer_addr = alloca i8**, align 8
  %buffer_size_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %counter = alloca i64
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8** %buffer, i8*** %buffer_addr
  store i64 %buffer_size, i64* %buffer_size_addr
  store i64 0, i64* %counter, align 8
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.fs_type_list** %2, align 8
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  br label %bb7

bb:                                               ; preds = %bb7
  %4 = load %struct.fs_type_list** %bucket, align 8
  %5 = getelementptr inbounds %struct.fs_type_list* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb6

bb1:                                              ; preds = %bb
  %8 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** %cursor, align 8
  br label %bb5

bb2:                                              ; preds = %bb5
  %9 = load i64* %counter, align 8
  %10 = load i64* %buffer_size_addr, align 8
  %11 = icmp uge i64 %9, %10
  br i1 %11, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %12 = load i64* %counter, align 8
  store i64 %12, i64* %0, align 8
  br label %bb9

bb4:                                              ; preds = %bb2
  %13 = load %struct.fs_type_list** %cursor, align 8
  %14 = getelementptr inbounds %struct.fs_type_list* %13, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = load i8*** %buffer_addr, align 8
  %17 = load i64* %counter, align 8
  %18 = getelementptr inbounds i8** %16, i64 %17
  store i8* %15, i8** %18, align 1
  %19 = load i64* %counter, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %counter, align 8
  %21 = load %struct.fs_type_list** %cursor, align 8
  %22 = getelementptr inbounds %struct.fs_type_list* %21, i32 0, i32 1
  %23 = load %struct.fs_type_list** %22, align 8
  store %struct.fs_type_list* %23, %struct.fs_type_list** %cursor, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb1
  %24 = load %struct.fs_type_list** %cursor, align 8
  %25 = icmp ne %struct.fs_type_list* %24, null
  br i1 %25, label %bb2, label %bb6

bb6:                                              ; preds = %bb5, %bb
  %26 = load %struct.fs_type_list** %bucket, align 8
  %27 = getelementptr inbounds %struct.fs_type_list* %26, i64 1
  store %struct.fs_type_list* %27, %struct.fs_type_list** %bucket, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %entry
  %28 = load %struct.Hash_table** %table_addr, align 8
  %29 = getelementptr inbounds %struct.Hash_table* %28, i32 0, i32 1
  %30 = load %struct.fs_type_list** %29, align 8
  %31 = load %struct.fs_type_list** %bucket, align 8
  %32 = icmp ugt %struct.fs_type_list* %30, %31
  br i1 %32, label %bb, label %bb8

bb8:                                              ; preds = %bb7
  %33 = load i64* %counter, align 8
  store i64 %33, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb3
  %34 = load i64* %0, align 8
  store i64 %34, i64* %retval, align 8
  %retval10 = load i64* %retval
  ret i64 %retval10
}

define i64 @hash_do_for_each(%struct.Hash_table* %table, i8 (i8*, i8*)* %processor, i8* %processor_data) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %processor_addr = alloca i8 (i8*, i8*)*, align 8
  %processor_data_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %counter = alloca i64
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8 (i8*, i8*)* %processor, i8 (i8*, i8*)** %processor_addr
  store i8* %processor_data, i8** %processor_data_addr
  store i64 0, i64* %counter, align 8
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.fs_type_list** %2, align 8
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  br label %bb10

bb:                                               ; preds = %bb10
  %4 = load %struct.fs_type_list** %bucket, align 8
  %5 = getelementptr inbounds %struct.fs_type_list* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb9

bb1:                                              ; preds = %bb
  %8 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** %cursor, align 8
  br label %bb8

bb2:                                              ; preds = %bb8
  %9 = load %struct.fs_type_list** %cursor, align 8
  %10 = getelementptr inbounds %struct.fs_type_list* %9, i32 0, i32 0
  %11 = load i8** %10, align 8
  %12 = load i8 (i8*, i8*)** %processor_addr, align 8
  %13 = load i8** %processor_data_addr, align 8
  %14 = call zeroext i8 %12(i8* %11, i8* %13) nounwind
  %toBool = icmp ne i8 %14, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot3 = zext i1 %toBoolnot to i8
  %toBool5 = icmp ne i8 %toBoolnot3, 0
  %15 = load i64* %counter, align 8
  br i1 %toBool5, label %bb6, label %bb7

bb6:                                              ; preds = %bb2
  store i64 %15, i64* %0, align 8
  br label %bb12

bb7:                                              ; preds = %bb2
  %16 = add i64 %15, 1
  store i64 %16, i64* %counter, align 8
  %17 = load %struct.fs_type_list** %cursor, align 8
  %18 = getelementptr inbounds %struct.fs_type_list* %17, i32 0, i32 1
  %19 = load %struct.fs_type_list** %18, align 8
  store %struct.fs_type_list* %19, %struct.fs_type_list** %cursor, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb1
  %20 = load %struct.fs_type_list** %cursor, align 8
  %21 = icmp ne %struct.fs_type_list* %20, null
  br i1 %21, label %bb2, label %bb9

bb9:                                              ; preds = %bb8, %bb
  %22 = load %struct.fs_type_list** %bucket, align 8
  %23 = getelementptr inbounds %struct.fs_type_list* %22, i64 1
  store %struct.fs_type_list* %23, %struct.fs_type_list** %bucket, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %entry
  %24 = load %struct.Hash_table** %table_addr, align 8
  %25 = getelementptr inbounds %struct.Hash_table* %24, i32 0, i32 1
  %26 = load %struct.fs_type_list** %25, align 8
  %27 = load %struct.fs_type_list** %bucket, align 8
  %28 = icmp ugt %struct.fs_type_list* %26, %27
  br i1 %28, label %bb, label %bb11

bb11:                                             ; preds = %bb10
  %29 = load i64* %counter, align 8
  store i64 %29, i64* %0, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb6
  %30 = load i64* %0, align 8
  store i64 %30, i64* %retval, align 8
  %retval13 = load i64* %retval
  ret i64 %retval13
}

define i64 @hash_string(i8* %string, i64 %n_buckets) nounwind readonly {
entry:
  %string_addr = alloca i8*, align 8
  %n_buckets_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %value = alloca i64
  %ch = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  store i64 %n_buckets, i64* %n_buckets_addr
  store i64 0, i64* %value, align 8
  br label %bb1

bb:                                               ; preds = %bb1
  %1 = mul i64 %15, 31
  %2 = load i8* %ch, align 1
  %3 = zext i8 %2 to i64
  %4 = add i64 %1, %3
  %5 = load i64* %n_buckets_addr, align 8
  %int_cast_to_i64 = bitcast i64 %5 to i64
  %6 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %7 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %7, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb
  call void @klee_disable_symbex() nounwind
  %8 = urem i64 %4, %5
  store i64 %8, i64* %value, align 8
  %9 = load i8** %string_addr, align 8
  %10 = getelementptr inbounds i8* %9, i64 1
  store i8* %10, i8** %string_addr, align 8
  br label %bb1

bb1:                                              ; preds = %klee_div_zero_check.exit, %entry
  %11 = load i8** %string_addr, align 8
  %12 = load i8* %11, align 1
  store i8 %12, i8* %ch, align 1
  %13 = load i8* %ch, align 1
  %14 = icmp ne i8 %13, 0
  %15 = load i64* %value, align 8
  br i1 %14, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  store i64 %15, i64* %0, align 8
  %16 = load i64* %0, align 8
  store i64 %16, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define internal zeroext i8 @is_prime(i64 %candidate) nounwind readnone {
entry:
  %candidate_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %divisor = alloca i64
  %square = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %candidate, i64* %candidate_addr
  store i64 3, i64* %divisor, align 8
  %1 = load i64* %divisor, align 8
  %2 = load i64* %divisor, align 8
  %3 = mul i64 %1, %2
  store i64 %3, i64* %square, align 8
  br label %bb1

bb:                                               ; preds = %klee_div_zero_check.exit
  %4 = load i64* %divisor, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %divisor, align 8
  %6 = load i64* %divisor, align 8
  %7 = mul i64 %6, 4
  %8 = load i64* %square, align 8
  %9 = add i64 %7, %8
  store i64 %9, i64* %square, align 8
  %10 = load i64* %divisor, align 8
  %11 = add i64 %10, 1
  store i64 %11, i64* %divisor, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %12 = load i64* %square, align 8
  %13 = load i64* %candidate_addr, align 8
  %14 = icmp uge i64 %12, %13
  br i1 %14, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %15 = load i64* %candidate_addr, align 8
  %16 = load i64* %divisor, align 8
  %int_cast_to_i64 = bitcast i64 %16 to i64
  %17 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %18 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %18, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %19 = urem i64 %15, %16
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %bb, label %bb3

bb3:                                              ; preds = %klee_div_zero_check.exit, %bb1
  %21 = load i64* %candidate_addr, align 8
  %22 = load i64* %divisor, align 8
  %int_cast_to_i641 = bitcast i64 %22 to i64
  %23 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %24 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %24, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %bb3
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %bb3
  call void @klee_disable_symbex() nounwind
  %25 = urem i64 %21, %22
  %26 = icmp ne i64 %25, 0
  %27 = zext i1 %26 to i32
  store i32 %27, i32* %0, align 4
  %28 = load i32* %0, align 4
  store i32 %28, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define internal i64 @next_prime(i64 %candidate) nounwind readnone {
entry:
  %candidate_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %candidate, i64* %candidate_addr
  %1 = load i64* %candidate_addr, align 8
  %2 = icmp ule i64 %1, 9
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i64 10, i64* %candidate_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %3 = load i64* %candidate_addr, align 8
  %4 = or i64 %3, 1
  store i64 %4, i64* %candidate_addr, align 8
  br label %bb3

bb2:                                              ; preds = %bb4
  %5 = load i64* %candidate_addr, align 8
  %6 = add i64 %5, 2
  store i64 %6, i64* %candidate_addr, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %7 = load i64* %candidate_addr, align 8
  %8 = icmp eq i64 %7, -1
  br i1 %8, label %bb8, label %bb4

bb4:                                              ; preds = %bb3
  %9 = load i64* %candidate_addr, align 8
  %10 = call zeroext i8 @is_prime(i64 %9) nounwind readnone
  %toBool = icmp ne i8 %10, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot5 = zext i1 %toBoolnot to i8
  %toBool7 = icmp ne i8 %toBoolnot5, 0
  br i1 %toBool7, label %bb2, label %bb8

bb8:                                              ; preds = %bb4, %bb3
  %11 = load i64* %candidate_addr, align 8
  store i64 %11, i64* %0, align 8
  %12 = load i64* %0, align 8
  store i64 %12, i64* %retval, align 8
  %retval9 = load i64* %retval
  ret i64 %retval9
}

define void @hash_reset_tuning(%struct.Hash_tuning* %tuning) nounwind {
entry:
  %tuning_addr = alloca %struct.Hash_tuning*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_tuning* %tuning, %struct.Hash_tuning** %tuning_addr
  %0 = load %struct.Hash_tuning** %tuning_addr, align 8
  %1 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 0
  %2 = load float* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 0), align 4
  store float %2, float* %1, align 4
  %3 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 1
  %4 = load float* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 1), align 4
  store float %4, float* %3, align 4
  %5 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 2
  %6 = load float* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 2), align 4
  store float %6, float* %5, align 4
  %7 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 3
  %8 = load float* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 3), align 4
  store float %8, float* %7, align 4
  %9 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 4
  %10 = load i8* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 4), align 4
  store i8 %10, i8* %9, align 4
  ret void
}

define internal i64 @raw_hasher(i8* %data, i64 %n) nounwind {
entry:
  %data_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %val = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %data, i8** %data_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %data_addr, align 8
  %2 = ptrtoint i8* %1 to i64
  %3 = call i64 @rotr_sz(i64 %2, i32 3) nounwind
  store i64 %3, i64* %val, align 8
  %4 = load i64* %val, align 8
  %5 = load i64* %n_addr, align 8
  %int_cast_to_i64 = bitcast i64 %5 to i64
  %6 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %7 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %7, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %8 = urem i64 %4, %5
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define internal zeroext i8 @raw_comparator(i8* %a, i8* %b) nounwind {
entry:
  %a_addr = alloca i8*, align 8
  %b_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %a, i8** %a_addr
  store i8* %b, i8** %b_addr
  %1 = load i8** %a_addr, align 8
  %2 = load i8** %b_addr, align 8
  %3 = icmp eq i8* %1, %2
  %4 = zext i1 %3 to i32
  store i32 %4, i32* %0, align 4
  %5 = load i32* %0, align 4
  store i32 %5, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define internal zeroext i8 @check_tuning(%struct.Hash_table* %table) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %tuning = alloca %struct.Hash_tuning*
  %epsilon = alloca float
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 5
  %3 = load %struct.Hash_tuning** %2, align 8
  store %struct.Hash_tuning* %3, %struct.Hash_tuning** %tuning, align 8
  %4 = load %struct.Hash_tuning** %tuning, align 8
  %5 = icmp eq %struct.Hash_tuning* %4, @default_tuning
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb10

bb1:                                              ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4
  %6 = load %struct.Hash_tuning** %tuning, align 8
  %7 = getelementptr inbounds %struct.Hash_tuning* %6, i32 0, i32 2
  %8 = load float* %7, align 4
  %9 = load float* %epsilon, align 4
  %10 = fcmp ogt float %8, %9
  br i1 %10, label %bb2, label %bb9

bb2:                                              ; preds = %bb1
  %11 = load %struct.Hash_tuning** %tuning, align 8
  %12 = getelementptr inbounds %struct.Hash_tuning* %11, i32 0, i32 2
  %13 = load float* %12, align 4
  %14 = load float* %epsilon, align 4
  %15 = fsub float 1.000000e+00, %14
  %16 = fcmp olt float %13, %15
  br i1 %16, label %bb3, label %bb9

bb3:                                              ; preds = %bb2
  %17 = load float* %epsilon, align 4
  %18 = fadd float %17, 1.000000e+00
  %19 = load %struct.Hash_tuning** %tuning, align 8
  %20 = getelementptr inbounds %struct.Hash_tuning* %19, i32 0, i32 3
  %21 = load float* %20, align 4
  %22 = fcmp olt float %18, %21
  br i1 %22, label %bb4, label %bb9

bb4:                                              ; preds = %bb3
  %23 = load %struct.Hash_tuning** %tuning, align 8
  %24 = getelementptr inbounds %struct.Hash_tuning* %23, i32 0, i32 0
  %25 = load float* %24, align 4
  %26 = fcmp oge float %25, 0.000000e+00
  br i1 %26, label %bb5, label %bb9

bb5:                                              ; preds = %bb4
  %27 = load %struct.Hash_tuning** %tuning, align 8
  %28 = getelementptr inbounds %struct.Hash_tuning* %27, i32 0, i32 0
  %29 = load float* %28, align 4
  %30 = load float* %epsilon, align 4
  %31 = fadd float %29, %30
  %32 = load %struct.Hash_tuning** %tuning, align 8
  %33 = getelementptr inbounds %struct.Hash_tuning* %32, i32 0, i32 1
  %34 = load float* %33, align 4
  %35 = fcmp olt float %31, %34
  br i1 %35, label %bb6, label %bb9

bb6:                                              ; preds = %bb5
  %36 = load %struct.Hash_tuning** %tuning, align 8
  %37 = getelementptr inbounds %struct.Hash_tuning* %36, i32 0, i32 1
  %38 = load float* %37, align 4
  %39 = fcmp ole float %38, 1.000000e+00
  br i1 %39, label %bb7, label %bb9

bb7:                                              ; preds = %bb6
  %40 = load %struct.Hash_tuning** %tuning, align 8
  %41 = getelementptr inbounds %struct.Hash_tuning* %40, i32 0, i32 0
  %42 = load float* %41, align 4
  %43 = load float* %epsilon, align 4
  %44 = fadd float %42, %43
  %45 = load %struct.Hash_tuning** %tuning, align 8
  %46 = getelementptr inbounds %struct.Hash_tuning* %45, i32 0, i32 2
  %47 = load float* %46, align 4
  %48 = fcmp olt float %44, %47
  br i1 %48, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  store i32 1, i32* %0, align 4
  br label %bb10

bb9:                                              ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2, %bb1
  %49 = load %struct.Hash_table** %table_addr, align 8
  %50 = getelementptr inbounds %struct.Hash_table* %49, i32 0, i32 5
  store %struct.Hash_tuning* @default_tuning, %struct.Hash_tuning** %50, align 8
  store i32 0, i32* %0, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8, %bb
  %51 = load i32* %0, align 4
  store i32 %51, i32* %retval, align 4
  %retval11 = load i32* %retval
  %retval1112 = trunc i32 %retval11 to i8
  ret i8 %retval1112
}

define internal i64 @compute_bucket_size(i64 %candidate, %struct.Hash_tuning* %tuning) nounwind readonly {
entry:
  %candidate_addr = alloca i64, align 8
  %tuning_addr = alloca %struct.Hash_tuning*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %new_candidate = alloca float
  %"alloca point" = bitcast i32 0 to i32
  store i64 %candidate, i64* %candidate_addr
  store %struct.Hash_tuning* %tuning, %struct.Hash_tuning** %tuning_addr
  %1 = load %struct.Hash_tuning** %tuning_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_tuning* %1, i32 0, i32 4
  %3 = load i8* %2, align 4
  %toBool = icmp ne i8 %3, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb, label %bb6

bb:                                               ; preds = %entry
  %4 = load i64* %candidate_addr, align 8
  %5 = uitofp i64 %4 to float
  %6 = load %struct.Hash_tuning** %tuning_addr, align 8
  %7 = getelementptr inbounds %struct.Hash_tuning* %6, i32 0, i32 2
  %8 = load float* %7, align 4
  %9 = fdiv float %5, %8
  store float %9, float* %new_candidate, align 4
  %10 = load float* %new_candidate, align 4
  %11 = fcmp oge float %10, 0x43F0000000000000
  br i1 %11, label %bb4, label %bb5

bb4:                                              ; preds = %bb
  store i64 0, i64* %0, align 8
  br label %bb9

bb5:                                              ; preds = %bb
  %12 = load float* %new_candidate, align 4
  %13 = fptoui float %12 to i64
  store i64 %13, i64* %candidate_addr, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %entry
  %14 = load i64* %candidate_addr, align 8
  %15 = call i64 @next_prime(i64 %14) nounwind readnone
  store i64 %15, i64* %candidate_addr, align 8
  %16 = load i64* %candidate_addr, align 8
  %17 = icmp ugt i64 %16, 2305843009213693951
  br i1 %17, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store i64 0, i64* %0, align 8
  br label %bb9

bb8:                                              ; preds = %bb6
  %18 = load i64* %candidate_addr, align 8
  store i64 %18, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7, %bb4
  %19 = load i64* %0, align 8
  store i64 %19, i64* %retval, align 8
  %retval10 = load i64* %retval
  ret i64 %retval10
}

define %struct.Hash_table* @hash_initialize(i64 %candidate, %struct.Hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i8 (i8*, i8*)* %comparator, void (i8*)* %data_freer) nounwind {
entry:
  %candidate_addr = alloca i64, align 8
  %tuning_addr = alloca %struct.Hash_tuning*, align 8
  %hasher_addr = alloca i64 (i8*, i64)*, align 8
  %comparator_addr = alloca i8 (i8*, i8*)*, align 8
  %data_freer_addr = alloca void (i8*)*, align 8
  %retval = alloca %struct.Hash_table*
  %0 = alloca %struct.Hash_table*
  %table = alloca %struct.Hash_table*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %candidate, i64* %candidate_addr
  store %struct.Hash_tuning* %tuning, %struct.Hash_tuning** %tuning_addr
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher_addr
  store i8 (i8*, i8*)* %comparator, i8 (i8*, i8*)** %comparator_addr
  store void (i8*)* %data_freer, void (i8*)** %data_freer_addr
  %1 = load i64 (i8*, i64)** %hasher_addr, align 8
  %2 = icmp eq i64 (i8*, i64)* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %3 = load i8 (i8*, i8*)** %comparator_addr, align 8
  %4 = icmp eq i8 (i8*, i8*)* %3, null
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i8 (i8*, i8*)* @raw_comparator, i8 (i8*, i8*)** %comparator_addr, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = call noalias i8* @malloc(i64 80) nounwind
  %6 = bitcast i8* %5 to %struct.Hash_table*
  store %struct.Hash_table* %6, %struct.Hash_table** %table, align 8
  %7 = load %struct.Hash_table** %table, align 8
  %8 = icmp eq %struct.Hash_table* %7, null
  br i1 %8, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store %struct.Hash_table* null, %struct.Hash_table** %0, align 8
  br label %bb14

bb5:                                              ; preds = %bb3
  %9 = load %struct.Hash_tuning** %tuning_addr, align 8
  %10 = icmp eq %struct.Hash_tuning* %9, null
  br i1 %10, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  store %struct.Hash_tuning* @default_tuning, %struct.Hash_tuning** %tuning_addr, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %11 = load %struct.Hash_table** %table, align 8
  %12 = getelementptr inbounds %struct.Hash_table* %11, i32 0, i32 5
  %13 = load %struct.Hash_tuning** %tuning_addr, align 8
  store %struct.Hash_tuning* %13, %struct.Hash_tuning** %12, align 8
  %14 = load %struct.Hash_table** %table, align 8
  %15 = call zeroext i8 @check_tuning(%struct.Hash_table* %14) nounwind
  %toBool = icmp ne i8 %15, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot8 = zext i1 %toBoolnot to i8
  %toBool10 = icmp ne i8 %toBoolnot8, 0
  br i1 %toBool10, label %fail, label %bb11

bb11:                                             ; preds = %bb7
  %16 = load i64* %candidate_addr, align 8
  %17 = load %struct.Hash_tuning** %tuning_addr, align 8
  %18 = call i64 @compute_bucket_size(i64 %16, %struct.Hash_tuning* %17) nounwind readonly
  %19 = load %struct.Hash_table** %table, align 8
  %20 = getelementptr inbounds %struct.Hash_table* %19, i32 0, i32 2
  store i64 %18, i64* %20, align 8
  %21 = load %struct.Hash_table** %table, align 8
  %22 = getelementptr inbounds %struct.Hash_table* %21, i32 0, i32 2
  %23 = load i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %fail, label %bb12

bb12:                                             ; preds = %bb11
  %25 = load %struct.Hash_table** %table, align 8
  %26 = getelementptr inbounds %struct.Hash_table* %25, i32 0, i32 2
  %27 = load i64* %26, align 8
  %28 = call noalias i8* @calloc(i64 %27, i64 16) nounwind
  %29 = bitcast i8* %28 to %struct.fs_type_list*
  %30 = load %struct.Hash_table** %table, align 8
  %31 = getelementptr inbounds %struct.Hash_table* %30, i32 0, i32 0
  store %struct.fs_type_list* %29, %struct.fs_type_list** %31, align 8
  %32 = load %struct.Hash_table** %table, align 8
  %33 = getelementptr inbounds %struct.Hash_table* %32, i32 0, i32 0
  %34 = load %struct.fs_type_list** %33, align 8
  %35 = icmp eq %struct.fs_type_list* %34, null
  br i1 %35, label %fail, label %bb13

bb13:                                             ; preds = %bb12
  %36 = load %struct.Hash_table** %table, align 8
  %37 = getelementptr inbounds %struct.Hash_table* %36, i32 0, i32 0
  %38 = load %struct.fs_type_list** %37, align 8
  %39 = load %struct.Hash_table** %table, align 8
  %40 = getelementptr inbounds %struct.Hash_table* %39, i32 0, i32 2
  %41 = load i64* %40, align 8
  %42 = getelementptr inbounds %struct.fs_type_list* %38, i64 %41
  %43 = load %struct.Hash_table** %table, align 8
  %44 = getelementptr inbounds %struct.Hash_table* %43, i32 0, i32 1
  store %struct.fs_type_list* %42, %struct.fs_type_list** %44, align 8
  %45 = load %struct.Hash_table** %table, align 8
  %46 = getelementptr inbounds %struct.Hash_table* %45, i32 0, i32 3
  store i64 0, i64* %46, align 8
  %47 = load %struct.Hash_table** %table, align 8
  %48 = getelementptr inbounds %struct.Hash_table* %47, i32 0, i32 4
  store i64 0, i64* %48, align 8
  %49 = load %struct.Hash_table** %table, align 8
  %50 = getelementptr inbounds %struct.Hash_table* %49, i32 0, i32 6
  %51 = load i64 (i8*, i64)** %hasher_addr, align 8
  store i64 (i8*, i64)* %51, i64 (i8*, i64)** %50, align 8
  %52 = load %struct.Hash_table** %table, align 8
  %53 = getelementptr inbounds %struct.Hash_table* %52, i32 0, i32 7
  %54 = load i8 (i8*, i8*)** %comparator_addr, align 8
  store i8 (i8*, i8*)* %54, i8 (i8*, i8*)** %53, align 8
  %55 = load %struct.Hash_table** %table, align 8
  %56 = getelementptr inbounds %struct.Hash_table* %55, i32 0, i32 8
  %57 = load void (i8*)** %data_freer_addr, align 8
  store void (i8*)* %57, void (i8*)** %56, align 8
  %58 = load %struct.Hash_table** %table, align 8
  %59 = getelementptr inbounds %struct.Hash_table* %58, i32 0, i32 9
  store %struct.fs_type_list* null, %struct.fs_type_list** %59, align 8
  %60 = load %struct.Hash_table** %table, align 8
  store %struct.Hash_table* %60, %struct.Hash_table** %0, align 8
  br label %bb14

fail:                                             ; preds = %bb12, %bb11, %bb7
  %61 = load %struct.Hash_table** %table, align 8
  %62 = bitcast %struct.Hash_table* %61 to i8*
  call void @free(i8* %62) nounwind
  store %struct.Hash_table* null, %struct.Hash_table** %0, align 8
  br label %bb14

bb14:                                             ; preds = %fail, %bb13, %bb4
  %63 = load %struct.Hash_table** %0, align 8
  store %struct.Hash_table* %63, %struct.Hash_table** %retval, align 8
  %retval15 = load %struct.Hash_table** %retval
  ret %struct.Hash_table* %retval15
}

declare noalias i8* @calloc(i64, i64) nounwind

define void @hash_clear(%struct.Hash_table* %table) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %next = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %0 = load %struct.Hash_table** %table_addr, align 8
  %1 = getelementptr inbounds %struct.Hash_table* %0, i32 0, i32 0
  %2 = load %struct.fs_type_list** %1, align 8
  store %struct.fs_type_list* %2, %struct.fs_type_list** %bucket, align 8
  br label %bb10

bb:                                               ; preds = %bb10
  %3 = load %struct.fs_type_list** %bucket, align 8
  %4 = getelementptr inbounds %struct.fs_type_list* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %bb1, label %bb9

bb1:                                              ; preds = %bb
  %7 = load %struct.fs_type_list** %bucket, align 8
  %8 = getelementptr inbounds %struct.fs_type_list* %7, i32 0, i32 1
  %9 = load %struct.fs_type_list** %8, align 8
  store %struct.fs_type_list* %9, %struct.fs_type_list** %cursor, align 8
  br label %bb5

bb2:                                              ; preds = %bb5
  br i1 %35, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %10 = load %struct.Hash_table** %table_addr, align 8
  %11 = getelementptr inbounds %struct.Hash_table* %10, i32 0, i32 8
  %12 = load void (i8*)** %11, align 8
  %13 = load %struct.fs_type_list** %cursor, align 8
  %14 = getelementptr inbounds %struct.fs_type_list* %13, i32 0, i32 0
  %15 = load i8** %14, align 8
  call void %12(i8* %15) nounwind
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %16 = load %struct.fs_type_list** %cursor, align 8
  %17 = getelementptr inbounds %struct.fs_type_list* %16, i32 0, i32 0
  store i8* null, i8** %17, align 8
  %18 = load %struct.fs_type_list** %cursor, align 8
  %19 = getelementptr inbounds %struct.fs_type_list* %18, i32 0, i32 1
  %20 = load %struct.fs_type_list** %19, align 8
  store %struct.fs_type_list* %20, %struct.fs_type_list** %next, align 8
  %21 = load %struct.Hash_table** %table_addr, align 8
  %22 = getelementptr inbounds %struct.Hash_table* %21, i32 0, i32 9
  %23 = load %struct.fs_type_list** %22, align 8
  %24 = load %struct.fs_type_list** %cursor, align 8
  %25 = getelementptr inbounds %struct.fs_type_list* %24, i32 0, i32 1
  store %struct.fs_type_list* %23, %struct.fs_type_list** %25, align 8
  %26 = load %struct.Hash_table** %table_addr, align 8
  %27 = getelementptr inbounds %struct.Hash_table* %26, i32 0, i32 9
  %28 = load %struct.fs_type_list** %cursor, align 8
  store %struct.fs_type_list* %28, %struct.fs_type_list** %27, align 8
  %29 = load %struct.fs_type_list** %next, align 8
  store %struct.fs_type_list* %29, %struct.fs_type_list** %cursor, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb1
  %30 = load %struct.fs_type_list** %cursor, align 8
  %31 = icmp ne %struct.fs_type_list* %30, null
  %32 = load %struct.Hash_table** %table_addr, align 8
  %33 = getelementptr inbounds %struct.Hash_table* %32, i32 0, i32 8
  %34 = load void (i8*)** %33, align 8
  %35 = icmp ne void (i8*)* %34, null
  br i1 %31, label %bb2, label %bb6

bb6:                                              ; preds = %bb5
  br i1 %35, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %36 = load %struct.Hash_table** %table_addr, align 8
  %37 = getelementptr inbounds %struct.Hash_table* %36, i32 0, i32 8
  %38 = load void (i8*)** %37, align 8
  %39 = load %struct.fs_type_list** %bucket, align 8
  %40 = getelementptr inbounds %struct.fs_type_list* %39, i32 0, i32 0
  %41 = load i8** %40, align 8
  call void %38(i8* %41) nounwind
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %42 = load %struct.fs_type_list** %bucket, align 8
  %43 = getelementptr inbounds %struct.fs_type_list* %42, i32 0, i32 0
  store i8* null, i8** %43, align 8
  %44 = load %struct.fs_type_list** %bucket, align 8
  %45 = getelementptr inbounds %struct.fs_type_list* %44, i32 0, i32 1
  store %struct.fs_type_list* null, %struct.fs_type_list** %45, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb
  %46 = load %struct.fs_type_list** %bucket, align 8
  %47 = getelementptr inbounds %struct.fs_type_list* %46, i64 1
  store %struct.fs_type_list* %47, %struct.fs_type_list** %bucket, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %entry
  %48 = load %struct.Hash_table** %table_addr, align 8
  %49 = getelementptr inbounds %struct.Hash_table* %48, i32 0, i32 1
  %50 = load %struct.fs_type_list** %49, align 8
  %51 = load %struct.fs_type_list** %bucket, align 8
  %52 = icmp ugt %struct.fs_type_list* %50, %51
  br i1 %52, label %bb, label %bb11

bb11:                                             ; preds = %bb10
  %53 = load %struct.Hash_table** %table_addr, align 8
  %54 = getelementptr inbounds %struct.Hash_table* %53, i32 0, i32 3
  store i64 0, i64* %54, align 8
  %55 = load %struct.Hash_table** %table_addr, align 8
  %56 = getelementptr inbounds %struct.Hash_table* %55, i32 0, i32 4
  store i64 0, i64* %56, align 8
  ret void
}

define void @hash_free(%struct.Hash_table* %table) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %next = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %0 = load %struct.Hash_table** %table_addr, align 8
  %1 = getelementptr inbounds %struct.Hash_table* %0, i32 0, i32 8
  %2 = load void (i8*)** %1, align 8
  %3 = icmp ne void (i8*)* %2, null
  br i1 %3, label %bb, label %bb8

bb:                                               ; preds = %entry
  %4 = load %struct.Hash_table** %table_addr, align 8
  %5 = getelementptr inbounds %struct.Hash_table* %4, i32 0, i32 4
  %6 = load i64* %5, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %bb1, label %bb8

bb1:                                              ; preds = %bb
  %8 = load %struct.Hash_table** %table_addr, align 8
  %9 = getelementptr inbounds %struct.Hash_table* %8, i32 0, i32 0
  %10 = load %struct.fs_type_list** %9, align 8
  store %struct.fs_type_list* %10, %struct.fs_type_list** %bucket, align 8
  br label %bb7

bb2:                                              ; preds = %bb7
  %11 = load %struct.fs_type_list** %bucket, align 8
  %12 = getelementptr inbounds %struct.fs_type_list* %11, i32 0, i32 0
  %13 = load i8** %12, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %bb3, label %bb6

bb3:                                              ; preds = %bb2
  %15 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %15, %struct.fs_type_list** %cursor, align 8
  br label %bb5

bb4:                                              ; preds = %bb5
  %16 = load %struct.Hash_table** %table_addr, align 8
  %17 = getelementptr inbounds %struct.Hash_table* %16, i32 0, i32 8
  %18 = load void (i8*)** %17, align 8
  %19 = load %struct.fs_type_list** %cursor, align 8
  %20 = getelementptr inbounds %struct.fs_type_list* %19, i32 0, i32 0
  %21 = load i8** %20, align 8
  call void %18(i8* %21) nounwind
  %22 = load %struct.fs_type_list** %cursor, align 8
  %23 = getelementptr inbounds %struct.fs_type_list* %22, i32 0, i32 1
  %24 = load %struct.fs_type_list** %23, align 8
  store %struct.fs_type_list* %24, %struct.fs_type_list** %cursor, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %25 = load %struct.fs_type_list** %cursor, align 8
  %26 = icmp ne %struct.fs_type_list* %25, null
  br i1 %26, label %bb4, label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %27 = load %struct.fs_type_list** %bucket, align 8
  %28 = getelementptr inbounds %struct.fs_type_list* %27, i64 1
  store %struct.fs_type_list* %28, %struct.fs_type_list** %bucket, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb1
  %29 = load %struct.Hash_table** %table_addr, align 8
  %30 = getelementptr inbounds %struct.Hash_table* %29, i32 0, i32 1
  %31 = load %struct.fs_type_list** %30, align 8
  %32 = load %struct.fs_type_list** %bucket, align 8
  %33 = icmp ugt %struct.fs_type_list* %31, %32
  br i1 %33, label %bb2, label %bb8

bb8:                                              ; preds = %bb7, %bb, %entry
  %34 = load %struct.Hash_table** %table_addr, align 8
  %35 = getelementptr inbounds %struct.Hash_table* %34, i32 0, i32 0
  %36 = load %struct.fs_type_list** %35, align 8
  store %struct.fs_type_list* %36, %struct.fs_type_list** %bucket, align 8
  br label %bb13

bb9:                                              ; preds = %bb13
  %37 = load %struct.fs_type_list** %bucket, align 8
  %38 = getelementptr inbounds %struct.fs_type_list* %37, i32 0, i32 1
  %39 = load %struct.fs_type_list** %38, align 8
  store %struct.fs_type_list* %39, %struct.fs_type_list** %cursor, align 8
  br label %bb11

bb10:                                             ; preds = %bb11
  %40 = load %struct.fs_type_list** %cursor, align 8
  %41 = getelementptr inbounds %struct.fs_type_list* %40, i32 0, i32 1
  %42 = load %struct.fs_type_list** %41, align 8
  store %struct.fs_type_list* %42, %struct.fs_type_list** %next, align 8
  %43 = load %struct.fs_type_list** %cursor, align 8
  %44 = bitcast %struct.fs_type_list* %43 to i8*
  call void @free(i8* %44) nounwind
  %45 = load %struct.fs_type_list** %next, align 8
  store %struct.fs_type_list* %45, %struct.fs_type_list** %cursor, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %46 = load %struct.fs_type_list** %cursor, align 8
  %47 = icmp ne %struct.fs_type_list* %46, null
  br i1 %47, label %bb10, label %bb12

bb12:                                             ; preds = %bb11
  %48 = load %struct.fs_type_list** %bucket, align 8
  %49 = getelementptr inbounds %struct.fs_type_list* %48, i64 1
  store %struct.fs_type_list* %49, %struct.fs_type_list** %bucket, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb8
  %50 = load %struct.Hash_table** %table_addr, align 8
  %51 = getelementptr inbounds %struct.Hash_table* %50, i32 0, i32 1
  %52 = load %struct.fs_type_list** %51, align 8
  %53 = load %struct.fs_type_list** %bucket, align 8
  %54 = icmp ugt %struct.fs_type_list* %52, %53
  br i1 %54, label %bb9, label %bb14

bb14:                                             ; preds = %bb13
  %55 = load %struct.Hash_table** %table_addr, align 8
  %56 = getelementptr inbounds %struct.Hash_table* %55, i32 0, i32 9
  %57 = load %struct.fs_type_list** %56, align 8
  store %struct.fs_type_list* %57, %struct.fs_type_list** %cursor, align 8
  br label %bb16

bb15:                                             ; preds = %bb16
  %58 = load %struct.fs_type_list** %cursor, align 8
  %59 = getelementptr inbounds %struct.fs_type_list* %58, i32 0, i32 1
  %60 = load %struct.fs_type_list** %59, align 8
  store %struct.fs_type_list* %60, %struct.fs_type_list** %next, align 8
  %61 = load %struct.fs_type_list** %cursor, align 8
  %62 = bitcast %struct.fs_type_list* %61 to i8*
  call void @free(i8* %62) nounwind
  %63 = load %struct.fs_type_list** %next, align 8
  store %struct.fs_type_list* %63, %struct.fs_type_list** %cursor, align 8
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %64 = load %struct.fs_type_list** %cursor, align 8
  %65 = icmp ne %struct.fs_type_list* %64, null
  br i1 %65, label %bb15, label %bb17

bb17:                                             ; preds = %bb16
  %66 = load %struct.Hash_table** %table_addr, align 8
  %67 = getelementptr inbounds %struct.Hash_table* %66, i32 0, i32 0
  %68 = load %struct.fs_type_list** %67, align 8
  %69 = bitcast %struct.fs_type_list* %68 to i8*
  call void @free(i8* %69) nounwind
  %70 = load %struct.Hash_table** %table_addr, align 8
  %71 = bitcast %struct.Hash_table* %70 to i8*
  call void @free(i8* %71) nounwind
  ret void
}

define internal %struct.fs_type_list* @allocate_entry(%struct.Hash_table* %table) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca %struct.fs_type_list*
  %0 = alloca %struct.fs_type_list*
  %new = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 9
  %3 = load %struct.fs_type_list** %2, align 8
  %4 = icmp ne %struct.fs_type_list* %3, null
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %5 = load %struct.Hash_table** %table_addr, align 8
  %6 = getelementptr inbounds %struct.Hash_table* %5, i32 0, i32 9
  %7 = load %struct.fs_type_list** %6, align 8
  store %struct.fs_type_list* %7, %struct.fs_type_list** %new, align 8
  %8 = load %struct.fs_type_list** %new, align 8
  %9 = getelementptr inbounds %struct.fs_type_list* %8, i32 0, i32 1
  %10 = load %struct.fs_type_list** %9, align 8
  %11 = load %struct.Hash_table** %table_addr, align 8
  %12 = getelementptr inbounds %struct.Hash_table* %11, i32 0, i32 9
  store %struct.fs_type_list* %10, %struct.fs_type_list** %12, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %13 = call noalias i8* @malloc(i64 16) nounwind
  %14 = bitcast i8* %13 to %struct.fs_type_list*
  store %struct.fs_type_list* %14, %struct.fs_type_list** %new, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %15 = load %struct.fs_type_list** %new, align 8
  store %struct.fs_type_list* %15, %struct.fs_type_list** %0, align 8
  %16 = load %struct.fs_type_list** %0, align 8
  store %struct.fs_type_list* %16, %struct.fs_type_list** %retval, align 8
  %retval3 = load %struct.fs_type_list** %retval
  ret %struct.fs_type_list* %retval3
}

define internal void @free_entry(%struct.Hash_table* %table, %struct.fs_type_list* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca %struct.fs_type_list*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store %struct.fs_type_list* %entry1, %struct.fs_type_list** %entry_addr
  %0 = load %struct.fs_type_list** %entry_addr, align 8
  %1 = getelementptr inbounds %struct.fs_type_list* %0, i32 0, i32 0
  store i8* null, i8** %1, align 8
  %2 = load %struct.Hash_table** %table_addr, align 8
  %3 = getelementptr inbounds %struct.Hash_table* %2, i32 0, i32 9
  %4 = load %struct.fs_type_list** %3, align 8
  %5 = load %struct.fs_type_list** %entry_addr, align 8
  %6 = getelementptr inbounds %struct.fs_type_list* %5, i32 0, i32 1
  store %struct.fs_type_list* %4, %struct.fs_type_list** %6, align 8
  %7 = load %struct.Hash_table** %table_addr, align 8
  %8 = getelementptr inbounds %struct.Hash_table* %7, i32 0, i32 9
  %9 = load %struct.fs_type_list** %entry_addr, align 8
  store %struct.fs_type_list* %9, %struct.fs_type_list** %8, align 8
  ret void
}

define internal i8* @hash_find_entry(%struct.Hash_table* %table, i8* %entry1, %struct.fs_type_list** %bucket_head, i8 zeroext %delete) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %bucket_head_addr = alloca %struct.fs_type_list**, align 8
  %delete_addr = alloca i8, align 1
  %retval = alloca i8*
  %0 = alloca i8*
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %data = alloca i8*
  %next = alloca %struct.fs_type_list*
  %data15 = alloca i8*
  %next18 = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  store %struct.fs_type_list** %bucket_head, %struct.fs_type_list*** %bucket_head_addr
  store i8 %delete, i8* %delete_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call %struct.fs_type_list* @safe_hasher(%struct.Hash_table* %1, i8* %2) nounwind
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  %4 = load %struct.fs_type_list*** %bucket_head_addr, align 8
  %5 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %5, %struct.fs_type_list** %4, align 8
  %6 = load %struct.fs_type_list** %bucket, align 8
  %7 = getelementptr inbounds %struct.fs_type_list* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb23

bb2:                                              ; preds = %entry
  %10 = load %struct.fs_type_list** %bucket, align 8
  %11 = getelementptr inbounds %struct.fs_type_list* %10, i32 0, i32 0
  %12 = load i8** %11, align 8
  %13 = load i8** %entry_addr, align 8
  %14 = icmp eq i8* %12, %13
  br i1 %14, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %15 = load %struct.Hash_table** %table_addr, align 8
  %16 = getelementptr inbounds %struct.Hash_table* %15, i32 0, i32 7
  %17 = load i8 (i8*, i8*)** %16, align 8
  %18 = load %struct.fs_type_list** %bucket, align 8
  %19 = getelementptr inbounds %struct.fs_type_list* %18, i32 0, i32 0
  %20 = load i8** %19, align 8
  %21 = load i8** %entry_addr, align 8
  %22 = call zeroext i8 %17(i8* %21, i8* %20) nounwind
  %toBool = icmp ne i8 %22, 0
  br i1 %toBool, label %bb4, label %bb10

bb4:                                              ; preds = %bb3, %bb2
  %23 = load %struct.fs_type_list** %bucket, align 8
  %24 = getelementptr inbounds %struct.fs_type_list* %23, i32 0, i32 0
  %25 = load i8** %24, align 8
  store i8* %25, i8** %data, align 8
  %26 = load i8* %delete_addr, align 1
  %toBool5 = icmp ne i8 %26, 0
  br i1 %toBool5, label %bb6, label %bb9

bb6:                                              ; preds = %bb4
  %27 = load %struct.fs_type_list** %bucket, align 8
  %28 = getelementptr inbounds %struct.fs_type_list* %27, i32 0, i32 1
  %29 = load %struct.fs_type_list** %28, align 8
  %30 = icmp ne %struct.fs_type_list* %29, null
  %31 = load %struct.fs_type_list** %bucket, align 8
  br i1 %30, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %32 = getelementptr inbounds %struct.fs_type_list* %31, i32 0, i32 1
  %33 = load %struct.fs_type_list** %32, align 8
  store %struct.fs_type_list* %33, %struct.fs_type_list** %next, align 8
  %34 = load %struct.fs_type_list** %bucket, align 8
  %35 = load %struct.fs_type_list** %next, align 8
  %36 = getelementptr inbounds %struct.fs_type_list* %34, i32 0, i32 0
  %37 = getelementptr inbounds %struct.fs_type_list* %35, i32 0, i32 0
  %38 = load i8** %37, align 8
  store i8* %38, i8** %36, align 8
  %39 = getelementptr inbounds %struct.fs_type_list* %34, i32 0, i32 1
  %40 = getelementptr inbounds %struct.fs_type_list* %35, i32 0, i32 1
  %41 = load %struct.fs_type_list** %40, align 8
  store %struct.fs_type_list* %41, %struct.fs_type_list** %39, align 8
  %42 = load %struct.Hash_table** %table_addr, align 8
  %43 = load %struct.fs_type_list** %next, align 8
  call void @free_entry(%struct.Hash_table* %42, %struct.fs_type_list* %43) nounwind
  br label %bb9

bb8:                                              ; preds = %bb6
  %44 = getelementptr inbounds %struct.fs_type_list* %31, i32 0, i32 0
  store i8* null, i8** %44, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7, %bb4
  %45 = load i8** %data, align 8
  store i8* %45, i8** %0, align 8
  br label %bb23

bb10:                                             ; preds = %bb3
  %46 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %46, %struct.fs_type_list** %cursor, align 8
  br label %bb21

bb11:                                             ; preds = %bb21
  %47 = load %struct.fs_type_list** %cursor, align 8
  %48 = getelementptr inbounds %struct.fs_type_list* %47, i32 0, i32 1
  %49 = load %struct.fs_type_list** %48, align 8
  %50 = getelementptr inbounds %struct.fs_type_list* %49, i32 0, i32 0
  %51 = load i8** %50, align 8
  %52 = load i8** %entry_addr, align 8
  %53 = icmp eq i8* %51, %52
  br i1 %53, label %bb14, label %bb12

bb12:                                             ; preds = %bb11
  %54 = load %struct.Hash_table** %table_addr, align 8
  %55 = getelementptr inbounds %struct.Hash_table* %54, i32 0, i32 7
  %56 = load i8 (i8*, i8*)** %55, align 8
  %57 = load %struct.fs_type_list** %cursor, align 8
  %58 = getelementptr inbounds %struct.fs_type_list* %57, i32 0, i32 1
  %59 = load %struct.fs_type_list** %58, align 8
  %60 = getelementptr inbounds %struct.fs_type_list* %59, i32 0, i32 0
  %61 = load i8** %60, align 8
  %62 = load i8** %entry_addr, align 8
  %63 = call zeroext i8 %56(i8* %62, i8* %61) nounwind
  %toBool13 = icmp ne i8 %63, 0
  br i1 %toBool13, label %bb14, label %bb20

bb14:                                             ; preds = %bb12, %bb11
  %64 = load %struct.fs_type_list** %cursor, align 8
  %65 = getelementptr inbounds %struct.fs_type_list* %64, i32 0, i32 1
  %66 = load %struct.fs_type_list** %65, align 8
  %67 = getelementptr inbounds %struct.fs_type_list* %66, i32 0, i32 0
  %68 = load i8** %67, align 8
  store i8* %68, i8** %data15, align 8
  %69 = load i8* %delete_addr, align 1
  %toBool16 = icmp ne i8 %69, 0
  br i1 %toBool16, label %bb17, label %bb19

bb17:                                             ; preds = %bb14
  %70 = load %struct.fs_type_list** %cursor, align 8
  %71 = getelementptr inbounds %struct.fs_type_list* %70, i32 0, i32 1
  %72 = load %struct.fs_type_list** %71, align 8
  store %struct.fs_type_list* %72, %struct.fs_type_list** %next18, align 8
  %73 = load %struct.fs_type_list** %next18, align 8
  %74 = getelementptr inbounds %struct.fs_type_list* %73, i32 0, i32 1
  %75 = load %struct.fs_type_list** %74, align 8
  %76 = load %struct.fs_type_list** %cursor, align 8
  %77 = getelementptr inbounds %struct.fs_type_list* %76, i32 0, i32 1
  store %struct.fs_type_list* %75, %struct.fs_type_list** %77, align 8
  %78 = load %struct.Hash_table** %table_addr, align 8
  %79 = load %struct.fs_type_list** %next18, align 8
  call void @free_entry(%struct.Hash_table* %78, %struct.fs_type_list* %79) nounwind
  br label %bb19

bb19:                                             ; preds = %bb17, %bb14
  %80 = load i8** %data15, align 8
  store i8* %80, i8** %0, align 8
  br label %bb23

bb20:                                             ; preds = %bb12
  %81 = load %struct.fs_type_list** %cursor, align 8
  %82 = getelementptr inbounds %struct.fs_type_list* %81, i32 0, i32 1
  %83 = load %struct.fs_type_list** %82, align 8
  store %struct.fs_type_list* %83, %struct.fs_type_list** %cursor, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %bb10
  %84 = load %struct.fs_type_list** %cursor, align 8
  %85 = getelementptr inbounds %struct.fs_type_list* %84, i32 0, i32 1
  %86 = load %struct.fs_type_list** %85, align 8
  %87 = icmp ne %struct.fs_type_list* %86, null
  br i1 %87, label %bb11, label %bb22

bb22:                                             ; preds = %bb21
  store i8* null, i8** %0, align 8
  br label %bb23

bb23:                                             ; preds = %bb22, %bb19, %bb9, %bb
  %88 = load i8** %0, align 8
  store i8* %88, i8** %retval, align 8
  %retval24 = load i8** %retval
  ret i8* %retval24
}

define internal zeroext i8 @transfer_entries(%struct.Hash_table* %dst, %struct.Hash_table* %src, i8 zeroext %safe) nounwind {
entry:
  %dst_addr = alloca %struct.Hash_table*, align 8
  %src_addr = alloca %struct.Hash_table*, align 8
  %safe_addr = alloca i8, align 1
  %retval = alloca i32
  %0 = alloca i32
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %next = alloca %struct.fs_type_list*
  %data = alloca i8*
  %new_bucket = alloca %struct.fs_type_list*
  %new_entry = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %dst, %struct.Hash_table** %dst_addr
  store %struct.Hash_table* %src, %struct.Hash_table** %src_addr
  store i8 %safe, i8* %safe_addr
  %1 = load %struct.Hash_table** %src_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.fs_type_list** %2, align 8
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  br label %bb15

bb:                                               ; preds = %bb15
  %4 = load %struct.fs_type_list** %bucket, align 8
  %5 = getelementptr inbounds %struct.fs_type_list* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb14

bb1:                                              ; preds = %bb
  %8 = load %struct.fs_type_list** %bucket, align 8
  %9 = getelementptr inbounds %struct.fs_type_list* %8, i32 0, i32 1
  %10 = load %struct.fs_type_list** %9, align 8
  store %struct.fs_type_list* %10, %struct.fs_type_list** %cursor, align 8
  br label %bb6

bb2:                                              ; preds = %bb6
  %11 = load %struct.fs_type_list** %cursor, align 8
  %12 = getelementptr inbounds %struct.fs_type_list* %11, i32 0, i32 0
  %13 = load i8** %12, align 8
  store i8* %13, i8** %data, align 8
  %14 = load %struct.Hash_table** %dst_addr, align 8
  %15 = load i8** %data, align 8
  %16 = call %struct.fs_type_list* @safe_hasher(%struct.Hash_table* %14, i8* %15) nounwind
  store %struct.fs_type_list* %16, %struct.fs_type_list** %new_bucket, align 8
  %17 = load %struct.fs_type_list** %cursor, align 8
  %18 = getelementptr inbounds %struct.fs_type_list* %17, i32 0, i32 1
  %19 = load %struct.fs_type_list** %18, align 8
  store %struct.fs_type_list* %19, %struct.fs_type_list** %next, align 8
  %20 = load %struct.fs_type_list** %new_bucket, align 8
  %21 = getelementptr inbounds %struct.fs_type_list* %20, i32 0, i32 0
  %22 = load i8** %21, align 8
  %23 = icmp ne i8* %22, null
  %24 = load %struct.fs_type_list** %new_bucket, align 8
  br i1 %23, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %25 = getelementptr inbounds %struct.fs_type_list* %24, i32 0, i32 1
  %26 = load %struct.fs_type_list** %25, align 8
  %27 = load %struct.fs_type_list** %cursor, align 8
  %28 = getelementptr inbounds %struct.fs_type_list* %27, i32 0, i32 1
  store %struct.fs_type_list* %26, %struct.fs_type_list** %28, align 8
  %29 = load %struct.fs_type_list** %new_bucket, align 8
  %30 = getelementptr inbounds %struct.fs_type_list* %29, i32 0, i32 1
  %31 = load %struct.fs_type_list** %cursor, align 8
  store %struct.fs_type_list* %31, %struct.fs_type_list** %30, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %32 = getelementptr inbounds %struct.fs_type_list* %24, i32 0, i32 0
  %33 = load i8** %data, align 8
  store i8* %33, i8** %32, align 8
  %34 = load %struct.Hash_table** %dst_addr, align 8
  %35 = getelementptr inbounds %struct.Hash_table* %34, i32 0, i32 3
  %36 = load i64* %35, align 8
  %37 = add i64 %36, 1
  %38 = load %struct.Hash_table** %dst_addr, align 8
  %39 = getelementptr inbounds %struct.Hash_table* %38, i32 0, i32 3
  store i64 %37, i64* %39, align 8
  %40 = load %struct.Hash_table** %dst_addr, align 8
  %41 = load %struct.fs_type_list** %cursor, align 8
  call void @free_entry(%struct.Hash_table* %40, %struct.fs_type_list* %41) nounwind
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %42 = load %struct.fs_type_list** %next, align 8
  store %struct.fs_type_list* %42, %struct.fs_type_list** %cursor, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %43 = load %struct.fs_type_list** %cursor, align 8
  %44 = icmp ne %struct.fs_type_list* %43, null
  br i1 %44, label %bb2, label %bb7

bb7:                                              ; preds = %bb6
  %45 = load %struct.fs_type_list** %bucket, align 8
  %46 = getelementptr inbounds %struct.fs_type_list* %45, i32 0, i32 0
  %47 = load i8** %46, align 8
  store i8* %47, i8** %data, align 8
  %48 = load %struct.fs_type_list** %bucket, align 8
  %49 = getelementptr inbounds %struct.fs_type_list* %48, i32 0, i32 1
  store %struct.fs_type_list* null, %struct.fs_type_list** %49, align 8
  %50 = load i8* %safe_addr, align 1
  %toBool = icmp ne i8 %50, 0
  br i1 %toBool, label %bb14, label %bb8

bb8:                                              ; preds = %bb7
  %51 = load %struct.Hash_table** %dst_addr, align 8
  %52 = load i8** %data, align 8
  %53 = call %struct.fs_type_list* @safe_hasher(%struct.Hash_table* %51, i8* %52) nounwind
  store %struct.fs_type_list* %53, %struct.fs_type_list** %new_bucket, align 8
  %54 = load %struct.fs_type_list** %new_bucket, align 8
  %55 = getelementptr inbounds %struct.fs_type_list* %54, i32 0, i32 0
  %56 = load i8** %55, align 8
  %57 = icmp ne i8* %56, null
  br i1 %57, label %bb9, label %bb12

bb9:                                              ; preds = %bb8
  %58 = load %struct.Hash_table** %dst_addr, align 8
  %59 = call %struct.fs_type_list* @allocate_entry(%struct.Hash_table* %58) nounwind
  store %struct.fs_type_list* %59, %struct.fs_type_list** %new_entry, align 8
  %60 = load %struct.fs_type_list** %new_entry, align 8
  %61 = icmp eq %struct.fs_type_list* %60, null
  br i1 %61, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  store i32 0, i32* %0, align 4
  br label %bb17

bb11:                                             ; preds = %bb9
  %62 = load %struct.fs_type_list** %new_entry, align 8
  %63 = getelementptr inbounds %struct.fs_type_list* %62, i32 0, i32 0
  %64 = load i8** %data, align 8
  store i8* %64, i8** %63, align 8
  %65 = load %struct.fs_type_list** %new_bucket, align 8
  %66 = getelementptr inbounds %struct.fs_type_list* %65, i32 0, i32 1
  %67 = load %struct.fs_type_list** %66, align 8
  %68 = load %struct.fs_type_list** %new_entry, align 8
  %69 = getelementptr inbounds %struct.fs_type_list* %68, i32 0, i32 1
  store %struct.fs_type_list* %67, %struct.fs_type_list** %69, align 8
  %70 = load %struct.fs_type_list** %new_bucket, align 8
  %71 = getelementptr inbounds %struct.fs_type_list* %70, i32 0, i32 1
  %72 = load %struct.fs_type_list** %new_entry, align 8
  store %struct.fs_type_list* %72, %struct.fs_type_list** %71, align 8
  br label %bb13

bb12:                                             ; preds = %bb8
  %73 = load %struct.fs_type_list** %new_bucket, align 8
  %74 = getelementptr inbounds %struct.fs_type_list* %73, i32 0, i32 0
  %75 = load i8** %data, align 8
  store i8* %75, i8** %74, align 8
  %76 = load %struct.Hash_table** %dst_addr, align 8
  %77 = getelementptr inbounds %struct.Hash_table* %76, i32 0, i32 3
  %78 = load i64* %77, align 8
  %79 = add i64 %78, 1
  %80 = load %struct.Hash_table** %dst_addr, align 8
  %81 = getelementptr inbounds %struct.Hash_table* %80, i32 0, i32 3
  store i64 %79, i64* %81, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11
  %82 = load %struct.fs_type_list** %bucket, align 8
  %83 = getelementptr inbounds %struct.fs_type_list* %82, i32 0, i32 0
  store i8* null, i8** %83, align 8
  %84 = load %struct.Hash_table** %src_addr, align 8
  %85 = getelementptr inbounds %struct.Hash_table* %84, i32 0, i32 3
  %86 = load i64* %85, align 8
  %87 = sub i64 %86, 1
  %88 = load %struct.Hash_table** %src_addr, align 8
  %89 = getelementptr inbounds %struct.Hash_table* %88, i32 0, i32 3
  store i64 %87, i64* %89, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb7, %bb
  %90 = load %struct.fs_type_list** %bucket, align 8
  %91 = getelementptr inbounds %struct.fs_type_list* %90, i64 1
  store %struct.fs_type_list* %91, %struct.fs_type_list** %bucket, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %entry
  %92 = load %struct.Hash_table** %src_addr, align 8
  %93 = getelementptr inbounds %struct.Hash_table* %92, i32 0, i32 1
  %94 = load %struct.fs_type_list** %93, align 8
  %95 = load %struct.fs_type_list** %bucket, align 8
  %96 = icmp ugt %struct.fs_type_list* %94, %95
  br i1 %96, label %bb, label %bb16

bb16:                                             ; preds = %bb15
  store i32 1, i32* %0, align 4
  br label %bb17

bb17:                                             ; preds = %bb16, %bb10
  %97 = load i32* %0, align 4
  store i32 %97, i32* %retval, align 4
  %retval18 = load i32* %retval
  %retval1819 = trunc i32 %retval18 to i8
  ret i8 %retval1819
}

define zeroext i8 @hash_rehash(%struct.Hash_table* %table, i64 %candidate) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %candidate_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %storage = alloca %struct.Hash_table
  %new_table = alloca %struct.Hash_table*
  %new_size = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i64 %candidate, i64* %candidate_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 5
  %3 = load %struct.Hash_tuning** %2, align 8
  %4 = load i64* %candidate_addr, align 8
  %5 = call i64 @compute_bucket_size(i64 %4, %struct.Hash_tuning* %3) nounwind readonly
  store i64 %5, i64* %new_size, align 8
  %6 = load i64* %new_size, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb19

bb1:                                              ; preds = %entry
  %8 = load %struct.Hash_table** %table_addr, align 8
  %9 = getelementptr inbounds %struct.Hash_table* %8, i32 0, i32 2
  %10 = load i64* %9, align 8
  %11 = load i64* %new_size, align 8
  %12 = icmp eq i64 %10, %11
  br i1 %12, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i32 1, i32* %0, align 4
  br label %bb19

bb3:                                              ; preds = %bb1
  store %struct.Hash_table* %storage, %struct.Hash_table** %new_table, align 8
  %13 = load i64* %new_size, align 8
  %14 = call noalias i8* @calloc(i64 %13, i64 16) nounwind
  %15 = bitcast i8* %14 to %struct.fs_type_list*
  %16 = load %struct.Hash_table** %new_table, align 8
  %17 = getelementptr inbounds %struct.Hash_table* %16, i32 0, i32 0
  store %struct.fs_type_list* %15, %struct.fs_type_list** %17, align 8
  %18 = load %struct.Hash_table** %new_table, align 8
  %19 = getelementptr inbounds %struct.Hash_table* %18, i32 0, i32 0
  %20 = load %struct.fs_type_list** %19, align 8
  %21 = icmp eq %struct.fs_type_list* %20, null
  br i1 %21, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 0, i32* %0, align 4
  br label %bb19

bb5:                                              ; preds = %bb3
  %22 = load %struct.Hash_table** %new_table, align 8
  %23 = getelementptr inbounds %struct.Hash_table* %22, i32 0, i32 2
  %24 = load i64* %new_size, align 8
  store i64 %24, i64* %23, align 8
  %25 = load %struct.Hash_table** %new_table, align 8
  %26 = getelementptr inbounds %struct.Hash_table* %25, i32 0, i32 0
  %27 = load %struct.fs_type_list** %26, align 8
  %28 = load i64* %new_size, align 8
  %29 = getelementptr inbounds %struct.fs_type_list* %27, i64 %28
  %30 = load %struct.Hash_table** %new_table, align 8
  %31 = getelementptr inbounds %struct.Hash_table* %30, i32 0, i32 1
  store %struct.fs_type_list* %29, %struct.fs_type_list** %31, align 8
  %32 = load %struct.Hash_table** %new_table, align 8
  %33 = getelementptr inbounds %struct.Hash_table* %32, i32 0, i32 3
  store i64 0, i64* %33, align 8
  %34 = load %struct.Hash_table** %new_table, align 8
  %35 = getelementptr inbounds %struct.Hash_table* %34, i32 0, i32 4
  store i64 0, i64* %35, align 8
  %36 = load %struct.Hash_table** %table_addr, align 8
  %37 = getelementptr inbounds %struct.Hash_table* %36, i32 0, i32 5
  %38 = load %struct.Hash_tuning** %37, align 8
  %39 = load %struct.Hash_table** %new_table, align 8
  %40 = getelementptr inbounds %struct.Hash_table* %39, i32 0, i32 5
  store %struct.Hash_tuning* %38, %struct.Hash_tuning** %40, align 8
  %41 = load %struct.Hash_table** %table_addr, align 8
  %42 = getelementptr inbounds %struct.Hash_table* %41, i32 0, i32 6
  %43 = load i64 (i8*, i64)** %42, align 8
  %44 = load %struct.Hash_table** %new_table, align 8
  %45 = getelementptr inbounds %struct.Hash_table* %44, i32 0, i32 6
  store i64 (i8*, i64)* %43, i64 (i8*, i64)** %45, align 8
  %46 = load %struct.Hash_table** %table_addr, align 8
  %47 = getelementptr inbounds %struct.Hash_table* %46, i32 0, i32 7
  %48 = load i8 (i8*, i8*)** %47, align 8
  %49 = load %struct.Hash_table** %new_table, align 8
  %50 = getelementptr inbounds %struct.Hash_table* %49, i32 0, i32 7
  store i8 (i8*, i8*)* %48, i8 (i8*, i8*)** %50, align 8
  %51 = load %struct.Hash_table** %table_addr, align 8
  %52 = getelementptr inbounds %struct.Hash_table* %51, i32 0, i32 8
  %53 = load void (i8*)** %52, align 8
  %54 = load %struct.Hash_table** %new_table, align 8
  %55 = getelementptr inbounds %struct.Hash_table* %54, i32 0, i32 8
  store void (i8*)* %53, void (i8*)** %55, align 8
  %56 = load %struct.Hash_table** %table_addr, align 8
  %57 = getelementptr inbounds %struct.Hash_table* %56, i32 0, i32 9
  %58 = load %struct.fs_type_list** %57, align 8
  %59 = load %struct.Hash_table** %new_table, align 8
  %60 = getelementptr inbounds %struct.Hash_table* %59, i32 0, i32 9
  store %struct.fs_type_list* %58, %struct.fs_type_list** %60, align 8
  %61 = load %struct.Hash_table** %new_table, align 8
  %62 = load %struct.Hash_table** %table_addr, align 8
  %63 = call zeroext i8 @transfer_entries(%struct.Hash_table* %61, %struct.Hash_table* %62, i8 zeroext 0) nounwind
  %toBool = icmp ne i8 %63, 0
  br i1 %toBool, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %64 = load %struct.Hash_table** %table_addr, align 8
  %65 = getelementptr inbounds %struct.Hash_table* %64, i32 0, i32 0
  %66 = load %struct.fs_type_list** %65, align 8
  %67 = bitcast %struct.fs_type_list* %66 to i8*
  call void @free(i8* %67) nounwind
  %68 = load %struct.Hash_table** %new_table, align 8
  %69 = getelementptr inbounds %struct.Hash_table* %68, i32 0, i32 0
  %70 = load %struct.fs_type_list** %69, align 8
  %71 = load %struct.Hash_table** %table_addr, align 8
  %72 = getelementptr inbounds %struct.Hash_table* %71, i32 0, i32 0
  store %struct.fs_type_list* %70, %struct.fs_type_list** %72, align 8
  %73 = load %struct.Hash_table** %new_table, align 8
  %74 = getelementptr inbounds %struct.Hash_table* %73, i32 0, i32 1
  %75 = load %struct.fs_type_list** %74, align 8
  %76 = load %struct.Hash_table** %table_addr, align 8
  %77 = getelementptr inbounds %struct.Hash_table* %76, i32 0, i32 1
  store %struct.fs_type_list* %75, %struct.fs_type_list** %77, align 8
  %78 = load %struct.Hash_table** %new_table, align 8
  %79 = getelementptr inbounds %struct.Hash_table* %78, i32 0, i32 2
  %80 = load i64* %79, align 8
  %81 = load %struct.Hash_table** %table_addr, align 8
  %82 = getelementptr inbounds %struct.Hash_table* %81, i32 0, i32 2
  store i64 %80, i64* %82, align 8
  %83 = load %struct.Hash_table** %new_table, align 8
  %84 = getelementptr inbounds %struct.Hash_table* %83, i32 0, i32 3
  %85 = load i64* %84, align 8
  %86 = load %struct.Hash_table** %table_addr, align 8
  %87 = getelementptr inbounds %struct.Hash_table* %86, i32 0, i32 3
  store i64 %85, i64* %87, align 8
  %88 = load %struct.Hash_table** %new_table, align 8
  %89 = getelementptr inbounds %struct.Hash_table* %88, i32 0, i32 9
  %90 = load %struct.fs_type_list** %89, align 8
  %91 = load %struct.Hash_table** %table_addr, align 8
  %92 = getelementptr inbounds %struct.Hash_table* %91, i32 0, i32 9
  store %struct.fs_type_list* %90, %struct.fs_type_list** %92, align 8
  store i32 1, i32* %0, align 4
  br label %bb19

bb7:                                              ; preds = %bb5
  %93 = load %struct.Hash_table** %new_table, align 8
  %94 = getelementptr inbounds %struct.Hash_table* %93, i32 0, i32 9
  %95 = load %struct.fs_type_list** %94, align 8
  %96 = load %struct.Hash_table** %table_addr, align 8
  %97 = getelementptr inbounds %struct.Hash_table* %96, i32 0, i32 9
  store %struct.fs_type_list* %95, %struct.fs_type_list** %97, align 8
  %98 = load %struct.Hash_table** %table_addr, align 8
  %99 = load %struct.Hash_table** %new_table, align 8
  %100 = call zeroext i8 @transfer_entries(%struct.Hash_table* %98, %struct.Hash_table* %99, i8 zeroext 1) nounwind
  %toBool8 = icmp ne i8 %100, 0
  %toBool8not = xor i1 %toBool8, true
  %toBool8not9 = zext i1 %toBool8not to i8
  %toBool11 = icmp ne i8 %toBool8not9, 0
  br i1 %toBool11, label %bb17, label %bb12

bb12:                                             ; preds = %bb7
  %101 = load %struct.Hash_table** %table_addr, align 8
  %102 = load %struct.Hash_table** %new_table, align 8
  %103 = call zeroext i8 @transfer_entries(%struct.Hash_table* %101, %struct.Hash_table* %102, i8 zeroext 0) nounwind
  %toBool13 = icmp ne i8 %103, 0
  %toBool13not = xor i1 %toBool13, true
  %toBool13not14 = zext i1 %toBool13not to i8
  %toBool16 = icmp ne i8 %toBool13not14, 0
  br i1 %toBool16, label %bb17, label %bb18

bb17:                                             ; preds = %bb12, %bb7
  call void @abort() noreturn nounwind
  unreachable

bb18:                                             ; preds = %bb12
  %104 = load %struct.Hash_table** %new_table, align 8
  %105 = getelementptr inbounds %struct.Hash_table* %104, i32 0, i32 0
  %106 = load %struct.fs_type_list** %105, align 8
  %107 = bitcast %struct.fs_type_list* %106 to i8*
  call void @free(i8* %107) nounwind
  store i32 0, i32* %0, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %bb6, %bb4, %bb2, %bb
  %108 = load i32* %0, align 4
  store i32 %108, i32* %retval, align 4
  %retval20 = load i32* %retval
  %retval2021 = trunc i32 %retval20 to i8
  ret i8 %retval2021
}

define i32 @hash_insert_if_absent(%struct.Hash_table* %table, i8* %entry1, i8** %matched_ent) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %matched_ent_addr = alloca i8**, align 8
  %retval = alloca i32
  %iftmp.3 = alloca float
  %0 = alloca i32
  %data = alloca i8*
  %bucket = alloca %struct.fs_type_list*
  %tuning = alloca %struct.Hash_tuning*
  %candidate = alloca float
  %new_entry = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  store i8** %matched_ent, i8*** %matched_ent_addr
  %1 = load i8** %entry_addr, align 8
  %2 = icmp eq i8* %1, null
  br i1 %2, label %bb, label %bb2

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb2:                                              ; preds = %entry
  %3 = load %struct.Hash_table** %table_addr, align 8
  %4 = load i8** %entry_addr, align 8
  %5 = call i8* @hash_find_entry(%struct.Hash_table* %3, i8* %4, %struct.fs_type_list** %bucket, i8 zeroext 0) nounwind
  store i8* %5, i8** %data, align 8
  %6 = load i8** %data, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb3, label %bb6

bb3:                                              ; preds = %bb2
  %8 = load i8*** %matched_ent_addr, align 8
  %9 = icmp ne i8** %8, null
  br i1 %9, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %10 = load i8*** %matched_ent_addr, align 8
  %11 = load i8** %data, align 8
  store i8* %11, i8** %10, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  store i32 0, i32* %0, align 4
  br label %bb26

bb6:                                              ; preds = %bb2
  %12 = load %struct.Hash_table** %table_addr, align 8
  %13 = getelementptr inbounds %struct.Hash_table* %12, i32 0, i32 3
  %14 = load i64* %13, align 8
  %15 = uitofp i64 %14 to float
  %16 = load %struct.Hash_table** %table_addr, align 8
  %17 = getelementptr inbounds %struct.Hash_table* %16, i32 0, i32 5
  %18 = load %struct.Hash_tuning** %17, align 8
  %19 = getelementptr inbounds %struct.Hash_tuning* %18, i32 0, i32 2
  %20 = load float* %19, align 4
  %21 = load %struct.Hash_table** %table_addr, align 8
  %22 = getelementptr inbounds %struct.Hash_table* %21, i32 0, i32 2
  %23 = load i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = fmul float %20, %24
  %26 = fcmp ogt float %15, %25
  br i1 %26, label %bb7, label %bb21

bb7:                                              ; preds = %bb6
  %27 = load %struct.Hash_table** %table_addr, align 8
  %28 = call zeroext i8 @check_tuning(%struct.Hash_table* %27) nounwind
  %29 = load %struct.Hash_table** %table_addr, align 8
  %30 = getelementptr inbounds %struct.Hash_table* %29, i32 0, i32 3
  %31 = load i64* %30, align 8
  %32 = uitofp i64 %31 to float
  %33 = load %struct.Hash_table** %table_addr, align 8
  %34 = getelementptr inbounds %struct.Hash_table* %33, i32 0, i32 5
  %35 = load %struct.Hash_tuning** %34, align 8
  %36 = getelementptr inbounds %struct.Hash_tuning* %35, i32 0, i32 2
  %37 = load float* %36, align 4
  %38 = load %struct.Hash_table** %table_addr, align 8
  %39 = getelementptr inbounds %struct.Hash_table* %38, i32 0, i32 2
  %40 = load i64* %39, align 8
  %41 = uitofp i64 %40 to float
  %42 = fmul float %37, %41
  %43 = fcmp ogt float %32, %42
  br i1 %43, label %bb8, label %bb21

bb8:                                              ; preds = %bb7
  %44 = load %struct.Hash_table** %table_addr, align 8
  %45 = getelementptr inbounds %struct.Hash_table* %44, i32 0, i32 5
  %46 = load %struct.Hash_tuning** %45, align 8
  store %struct.Hash_tuning* %46, %struct.Hash_tuning** %tuning, align 8
  %47 = load %struct.Hash_tuning** %tuning, align 8
  %48 = getelementptr inbounds %struct.Hash_tuning* %47, i32 0, i32 4
  %49 = load i8* %48, align 4
  %toBool = icmp ne i8 %49, 0
  %50 = load %struct.Hash_table** %table_addr, align 8
  %51 = getelementptr inbounds %struct.Hash_table* %50, i32 0, i32 2
  %52 = load i64* %51, align 8
  %53 = uitofp i64 %52 to float
  %54 = load %struct.Hash_tuning** %tuning, align 8
  %55 = getelementptr inbounds %struct.Hash_tuning* %54, i32 0, i32 3
  %56 = load float* %55, align 4
  %57 = fmul float %53, %56
  br i1 %toBool, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store float %57, float* %iftmp.3, align 4
  br label %bb11

bb10:                                             ; preds = %bb8
  %58 = load %struct.Hash_tuning** %tuning, align 8
  %59 = getelementptr inbounds %struct.Hash_tuning* %58, i32 0, i32 2
  %60 = load float* %59, align 4
  %61 = fmul float %57, %60
  store float %61, float* %iftmp.3, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %62 = load float* %iftmp.3, align 4
  store float %62, float* %candidate, align 4
  %63 = load float* %candidate, align 4
  %64 = fcmp oge float %63, 0x43F0000000000000
  br i1 %64, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  store i32 -1, i32* %0, align 4
  br label %bb26

bb13:                                             ; preds = %bb11
  %65 = load float* %candidate, align 4
  %66 = fptoui float %65 to i64
  %67 = load %struct.Hash_table** %table_addr, align 8
  %68 = call zeroext i8 @hash_rehash(%struct.Hash_table* %67, i64 %66) nounwind
  %toBool14 = icmp ne i8 %68, 0
  %toBool14not = xor i1 %toBool14, true
  %toBool14not15 = zext i1 %toBool14not to i8
  %toBool17 = icmp ne i8 %toBool14not15, 0
  br i1 %toBool17, label %bb18, label %bb19

bb18:                                             ; preds = %bb13
  store i32 -1, i32* %0, align 4
  br label %bb26

bb19:                                             ; preds = %bb13
  %69 = load %struct.Hash_table** %table_addr, align 8
  %70 = load i8** %entry_addr, align 8
  %71 = call i8* @hash_find_entry(%struct.Hash_table* %69, i8* %70, %struct.fs_type_list** %bucket, i8 zeroext 0) nounwind
  %72 = icmp ne i8* %71, null
  br i1 %72, label %bb20, label %bb21

bb20:                                             ; preds = %bb19
  call void @abort() noreturn nounwind
  unreachable

bb21:                                             ; preds = %bb19, %bb7, %bb6
  %73 = load %struct.fs_type_list** %bucket, align 8
  %74 = getelementptr inbounds %struct.fs_type_list* %73, i32 0, i32 0
  %75 = load i8** %74, align 8
  %76 = icmp ne i8* %75, null
  br i1 %76, label %bb22, label %bb25

bb22:                                             ; preds = %bb21
  %77 = load %struct.Hash_table** %table_addr, align 8
  %78 = call %struct.fs_type_list* @allocate_entry(%struct.Hash_table* %77) nounwind
  store %struct.fs_type_list* %78, %struct.fs_type_list** %new_entry, align 8
  %79 = load %struct.fs_type_list** %new_entry, align 8
  %80 = icmp eq %struct.fs_type_list* %79, null
  br i1 %80, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  store i32 -1, i32* %0, align 4
  br label %bb26

bb24:                                             ; preds = %bb22
  %81 = load i8** %entry_addr, align 8
  %82 = load %struct.fs_type_list** %new_entry, align 8
  %83 = getelementptr inbounds %struct.fs_type_list* %82, i32 0, i32 0
  store i8* %81, i8** %83, align 8
  %84 = load %struct.fs_type_list** %bucket, align 8
  %85 = getelementptr inbounds %struct.fs_type_list* %84, i32 0, i32 1
  %86 = load %struct.fs_type_list** %85, align 8
  %87 = load %struct.fs_type_list** %new_entry, align 8
  %88 = getelementptr inbounds %struct.fs_type_list* %87, i32 0, i32 1
  store %struct.fs_type_list* %86, %struct.fs_type_list** %88, align 8
  %89 = load %struct.fs_type_list** %bucket, align 8
  %90 = getelementptr inbounds %struct.fs_type_list* %89, i32 0, i32 1
  %91 = load %struct.fs_type_list** %new_entry, align 8
  store %struct.fs_type_list* %91, %struct.fs_type_list** %90, align 8
  %92 = load %struct.Hash_table** %table_addr, align 8
  %93 = getelementptr inbounds %struct.Hash_table* %92, i32 0, i32 4
  %94 = load i64* %93, align 8
  %95 = add i64 %94, 1
  %96 = load %struct.Hash_table** %table_addr, align 8
  %97 = getelementptr inbounds %struct.Hash_table* %96, i32 0, i32 4
  store i64 %95, i64* %97, align 8
  store i32 1, i32* %0, align 4
  br label %bb26

bb25:                                             ; preds = %bb21
  %98 = load %struct.fs_type_list** %bucket, align 8
  %99 = load i8** %entry_addr, align 8
  %100 = getelementptr inbounds %struct.fs_type_list* %98, i32 0, i32 0
  store i8* %99, i8** %100, align 8
  %101 = load %struct.Hash_table** %table_addr, align 8
  %102 = getelementptr inbounds %struct.Hash_table* %101, i32 0, i32 4
  %103 = load i64* %102, align 8
  %104 = add i64 %103, 1
  %105 = load %struct.Hash_table** %table_addr, align 8
  %106 = getelementptr inbounds %struct.Hash_table* %105, i32 0, i32 4
  store i64 %104, i64* %106, align 8
  %107 = load %struct.Hash_table** %table_addr, align 8
  %108 = getelementptr inbounds %struct.Hash_table* %107, i32 0, i32 3
  %109 = load i64* %108, align 8
  %110 = add i64 %109, 1
  %111 = load %struct.Hash_table** %table_addr, align 8
  %112 = getelementptr inbounds %struct.Hash_table* %111, i32 0, i32 3
  store i64 %110, i64* %112, align 8
  store i32 1, i32* %0, align 4
  br label %bb26

bb26:                                             ; preds = %bb25, %bb24, %bb23, %bb18, %bb12, %bb5
  %113 = load i32* %0, align 4
  store i32 %113, i32* %retval, align 4
  %retval27 = load i32* %retval
  ret i32 %retval27
}

define i32 @hash_insert0(%struct.Hash_table* %table, i8* %entry1, i8** %matched_ent) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %matched_ent_addr = alloca i8**, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  store i8** %matched_ent, i8*** %matched_ent_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = load i8*** %matched_ent_addr, align 8
  %4 = call i32 @hash_insert_if_absent(%struct.Hash_table* %1, i8* %2, i8** %3) nounwind
  store i32 %4, i32* %0, align 4
  %5 = load i32* %0, align 4
  store i32 %5, i32* %retval, align 4
  %retval2 = load i32* %retval
  ret i32 %retval2
}

define i8* @hash_insert(%struct.Hash_table* %table, i8* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %retval = alloca i8*
  %iftmp.11 = alloca i8*
  %iftmp.10 = alloca i8*
  %0 = alloca i8*
  %matched_ent = alloca i8*
  %err = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call i32 @hash_insert_if_absent(%struct.Hash_table* %1, i8* %2, i8** %matched_ent) nounwind
  store i32 %3, i32* %err, align 4
  %4 = load i32* %err, align 4
  %5 = icmp ne i32 %4, -1
  br i1 %5, label %bb, label %bb5

bb:                                               ; preds = %entry
  %6 = load i32* %err, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %bb2, label %bb3

bb2:                                              ; preds = %bb
  %8 = load i8** %matched_ent, align 8
  store i8* %8, i8** %iftmp.11, align 8
  br label %bb4

bb3:                                              ; preds = %bb
  %9 = load i8** %entry_addr, align 8
  store i8* %9, i8** %iftmp.11, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %10 = load i8** %iftmp.11, align 8
  store i8* %10, i8** %iftmp.10, align 8
  br label %bb6

bb5:                                              ; preds = %entry
  store i8* null, i8** %iftmp.10, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %11 = load i8** %iftmp.10, align 8
  store i8* %11, i8** %0, align 8
  %12 = load i8** %0, align 8
  store i8* %12, i8** %retval, align 8
  %retval7 = load i8** %retval
  ret i8* %retval7
}

define i8* @hash_delete(%struct.Hash_table* %table, i8* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %retval = alloca i8*
  %iftmp.13 = alloca i64
  %0 = alloca i8*
  %data = alloca i8*
  %bucket = alloca %struct.fs_type_list*
  %tuning = alloca %struct.Hash_tuning*
  %candidate = alloca i64
  %cursor = alloca %struct.fs_type_list*
  %next = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call i8* @hash_find_entry(%struct.Hash_table* %1, i8* %2, %struct.fs_type_list** %bucket, i8 zeroext 1) nounwind
  store i8* %3, i8** %data, align 8
  %4 = load i8** %data, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb18

bb2:                                              ; preds = %entry
  %6 = load %struct.Hash_table** %table_addr, align 8
  %7 = getelementptr inbounds %struct.Hash_table* %6, i32 0, i32 4
  %8 = load i64* %7, align 8
  %9 = sub i64 %8, 1
  %10 = load %struct.Hash_table** %table_addr, align 8
  %11 = getelementptr inbounds %struct.Hash_table* %10, i32 0, i32 4
  store i64 %9, i64* %11, align 8
  %12 = load %struct.fs_type_list** %bucket, align 8
  %13 = getelementptr inbounds %struct.fs_type_list* %12, i32 0, i32 0
  %14 = load i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %bb3, label %bb17

bb3:                                              ; preds = %bb2
  %16 = load %struct.Hash_table** %table_addr, align 8
  %17 = getelementptr inbounds %struct.Hash_table* %16, i32 0, i32 3
  %18 = load i64* %17, align 8
  %19 = sub i64 %18, 1
  %20 = load %struct.Hash_table** %table_addr, align 8
  %21 = getelementptr inbounds %struct.Hash_table* %20, i32 0, i32 3
  store i64 %19, i64* %21, align 8
  %22 = load %struct.Hash_table** %table_addr, align 8
  %23 = getelementptr inbounds %struct.Hash_table* %22, i32 0, i32 3
  %24 = load i64* %23, align 8
  %25 = uitofp i64 %24 to float
  %26 = load %struct.Hash_table** %table_addr, align 8
  %27 = getelementptr inbounds %struct.Hash_table* %26, i32 0, i32 5
  %28 = load %struct.Hash_tuning** %27, align 8
  %29 = getelementptr inbounds %struct.Hash_tuning* %28, i32 0, i32 0
  %30 = load float* %29, align 4
  %31 = load %struct.Hash_table** %table_addr, align 8
  %32 = getelementptr inbounds %struct.Hash_table* %31, i32 0, i32 2
  %33 = load i64* %32, align 8
  %34 = uitofp i64 %33 to float
  %35 = fmul float %30, %34
  %36 = fcmp olt float %25, %35
  br i1 %36, label %bb4, label %bb17

bb4:                                              ; preds = %bb3
  %37 = load %struct.Hash_table** %table_addr, align 8
  %38 = call zeroext i8 @check_tuning(%struct.Hash_table* %37) nounwind
  %39 = load %struct.Hash_table** %table_addr, align 8
  %40 = getelementptr inbounds %struct.Hash_table* %39, i32 0, i32 3
  %41 = load i64* %40, align 8
  %42 = uitofp i64 %41 to float
  %43 = load %struct.Hash_table** %table_addr, align 8
  %44 = getelementptr inbounds %struct.Hash_table* %43, i32 0, i32 5
  %45 = load %struct.Hash_tuning** %44, align 8
  %46 = getelementptr inbounds %struct.Hash_tuning* %45, i32 0, i32 0
  %47 = load float* %46, align 4
  %48 = load %struct.Hash_table** %table_addr, align 8
  %49 = getelementptr inbounds %struct.Hash_table* %48, i32 0, i32 2
  %50 = load i64* %49, align 8
  %51 = uitofp i64 %50 to float
  %52 = fmul float %47, %51
  %53 = fcmp olt float %42, %52
  br i1 %53, label %bb5, label %bb17

bb5:                                              ; preds = %bb4
  %54 = load %struct.Hash_table** %table_addr, align 8
  %55 = getelementptr inbounds %struct.Hash_table* %54, i32 0, i32 5
  %56 = load %struct.Hash_tuning** %55, align 8
  store %struct.Hash_tuning* %56, %struct.Hash_tuning** %tuning, align 8
  %57 = load %struct.Hash_tuning** %tuning, align 8
  %58 = getelementptr inbounds %struct.Hash_tuning* %57, i32 0, i32 4
  %59 = load i8* %58, align 4
  %toBool = icmp ne i8 %59, 0
  %60 = load %struct.Hash_table** %table_addr, align 8
  %61 = getelementptr inbounds %struct.Hash_table* %60, i32 0, i32 2
  %62 = load i64* %61, align 8
  %63 = uitofp i64 %62 to float
  %64 = load %struct.Hash_tuning** %tuning, align 8
  %65 = getelementptr inbounds %struct.Hash_tuning* %64, i32 0, i32 1
  %66 = load float* %65, align 4
  %67 = fmul float %63, %66
  br i1 %toBool, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %68 = fptoui float %67 to i64
  store i64 %68, i64* %iftmp.13, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  %69 = load %struct.Hash_tuning** %tuning, align 8
  %70 = getelementptr inbounds %struct.Hash_tuning* %69, i32 0, i32 2
  %71 = load float* %70, align 4
  %72 = fmul float %67, %71
  %73 = fptoui float %72 to i64
  store i64 %73, i64* %iftmp.13, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %74 = load i64* %iftmp.13, align 8
  store i64 %74, i64* %candidate, align 8
  %75 = load %struct.Hash_table** %table_addr, align 8
  %76 = load i64* %candidate, align 8
  %77 = call zeroext i8 @hash_rehash(%struct.Hash_table* %75, i64 %76) nounwind
  %toBool9 = icmp ne i8 %77, 0
  %toBool9not = xor i1 %toBool9, true
  %toBool9not10 = zext i1 %toBool9not to i8
  %toBool12 = icmp ne i8 %toBool9not10, 0
  br i1 %toBool12, label %bb13, label %bb17

bb13:                                             ; preds = %bb8
  %78 = load %struct.Hash_table** %table_addr, align 8
  %79 = getelementptr inbounds %struct.Hash_table* %78, i32 0, i32 9
  %80 = load %struct.fs_type_list** %79, align 8
  store %struct.fs_type_list* %80, %struct.fs_type_list** %cursor, align 8
  br label %bb15

bb14:                                             ; preds = %bb15
  %81 = load %struct.fs_type_list** %cursor, align 8
  %82 = getelementptr inbounds %struct.fs_type_list* %81, i32 0, i32 1
  %83 = load %struct.fs_type_list** %82, align 8
  store %struct.fs_type_list* %83, %struct.fs_type_list** %next, align 8
  %84 = load %struct.fs_type_list** %cursor, align 8
  %85 = bitcast %struct.fs_type_list* %84 to i8*
  call void @free(i8* %85) nounwind
  %86 = load %struct.fs_type_list** %next, align 8
  store %struct.fs_type_list* %86, %struct.fs_type_list** %cursor, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  %87 = load %struct.fs_type_list** %cursor, align 8
  %88 = icmp ne %struct.fs_type_list* %87, null
  br i1 %88, label %bb14, label %bb16

bb16:                                             ; preds = %bb15
  %89 = load %struct.Hash_table** %table_addr, align 8
  %90 = getelementptr inbounds %struct.Hash_table* %89, i32 0, i32 9
  store %struct.fs_type_list* null, %struct.fs_type_list** %90, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb8, %bb4, %bb3, %bb2
  %91 = load i8** %data, align 8
  store i8* %91, i8** %0, align 8
  br label %bb18

bb18:                                             ; preds = %bb17, %bb
  %92 = load i8** %0, align 8
  store i8* %92, i8** %retval, align 8
  %retval19 = load i8** %retval
  ret i8* %retval19
}

define i64 @triple_hash(i8* %x, i64 %table_size) nounwind readonly {
entry:
  %x_addr = alloca i8*, align 8
  %table_size_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca %struct.F_triple*
  %tmp = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i64 %table_size, i64* %table_size_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.F_triple*
  store %struct.F_triple* %2, %struct.F_triple** %p, align 8
  %3 = load %struct.F_triple** %p, align 8
  %4 = getelementptr inbounds %struct.F_triple* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = load i64* %table_size_addr, align 8
  %7 = call i64 @hash_pjw(i8* %5, i64 %6) nounwind readonly
  store i64 %7, i64* %tmp, align 8
  %8 = load %struct.F_triple** %p, align 8
  %9 = getelementptr inbounds %struct.F_triple* %8, i32 0, i32 1
  %10 = load i64* %9, align 8
  %11 = load i64* %tmp, align 8
  %12 = xor i64 %10, %11
  %13 = load i64* %table_size_addr, align 8
  %int_cast_to_i64 = bitcast i64 %13 to i64
  %14 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %15 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %15, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %16 = urem i64 %12, %13
  store i64 %16, i64* %0, align 8
  %17 = load i64* %0, align 8
  store i64 %17, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @triple_hash_no_name(i8* %x, i64 %table_size) nounwind readonly {
entry:
  %x_addr = alloca i8*, align 8
  %table_size_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i64 %table_size, i64* %table_size_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.F_triple*
  store %struct.F_triple* %2, %struct.F_triple** %p, align 8
  %3 = load %struct.F_triple** %p, align 8
  %4 = getelementptr inbounds %struct.F_triple* %3, i32 0, i32 1
  %5 = load i64* %4, align 8
  %6 = load i64* %table_size_addr, align 8
  %int_cast_to_i64 = bitcast i64 %6 to i64
  %7 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %8 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %8, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %9 = urem i64 %5, %6
  store i64 %9, i64* %0, align 8
  %10 = load i64* %0, align 8
  store i64 %10, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define zeroext i8 @triple_compare(i8* %x, i8* %y) nounwind {
entry:
  %x_addr = alloca i8*, align 8
  %y_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %a = alloca %struct.F_triple*
  %b = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i8* %y, i8** %y_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.F_triple*
  store %struct.F_triple* %2, %struct.F_triple** %a, align 8
  %3 = load i8** %y_addr, align 8
  %4 = bitcast i8* %3 to %struct.F_triple*
  store %struct.F_triple* %4, %struct.F_triple** %b, align 8
  %5 = load %struct.F_triple** %a, align 8
  %6 = getelementptr inbounds %struct.F_triple* %5, i32 0, i32 1
  %7 = load i64* %6, align 8
  %8 = load %struct.F_triple** %b, align 8
  %9 = getelementptr inbounds %struct.F_triple* %8, i32 0, i32 1
  %10 = load i64* %9, align 8
  %11 = icmp ne i64 %7, %10
  br i1 %11, label %bb6, label %bb

bb:                                               ; preds = %entry
  %12 = load %struct.F_triple** %a, align 8
  %13 = getelementptr inbounds %struct.F_triple* %12, i32 0, i32 2
  %14 = load i64* %13, align 8
  %15 = load %struct.F_triple** %b, align 8
  %16 = getelementptr inbounds %struct.F_triple* %15, i32 0, i32 2
  %17 = load i64* %16, align 8
  %18 = icmp ne i64 %14, %17
  br i1 %18, label %bb6, label %bb1

bb1:                                              ; preds = %bb
  %19 = load %struct.F_triple** %b, align 8
  %20 = getelementptr inbounds %struct.F_triple* %19, i32 0, i32 0
  %21 = load i8** %20, align 8
  %22 = load %struct.F_triple** %a, align 8
  %23 = getelementptr inbounds %struct.F_triple* %22, i32 0, i32 0
  %24 = load i8** %23, align 8
  %25 = call zeroext i8 @same_name(i8* %24, i8* %21) nounwind
  %toBool = icmp ne i8 %25, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot2 = zext i1 %toBoolnot to i8
  %toBool4 = icmp ne i8 %toBoolnot2, 0
  br i1 %toBool4, label %bb6, label %bb5

bb5:                                              ; preds = %bb1
  store i32 1, i32* %iftmp.0, align 4
  br label %bb7

bb6:                                              ; preds = %bb1, %bb, %entry
  store i32 0, i32* %iftmp.0, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %26 = load i32* %iftmp.0, align 4
  %27 = trunc i32 %26 to i8
  %28 = zext i8 %27 to i32
  store i32 %28, i32* %0, align 4
  %29 = load i32* %0, align 4
  store i32 %29, i32* %retval, align 4
  %retval8 = load i32* %retval
  %retval89 = trunc i32 %retval8 to i8
  ret i8 %retval89
}

define zeroext i8 @triple_compare_ino_str(i8* %x, i8* %y) nounwind readonly {
entry:
  %x_addr = alloca i8*, align 8
  %y_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.1 = alloca i32
  %0 = alloca i32
  %a = alloca %struct.F_triple*
  %b = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i8* %y, i8** %y_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.F_triple*
  store %struct.F_triple* %2, %struct.F_triple** %a, align 8
  %3 = load i8** %y_addr, align 8
  %4 = bitcast i8* %3 to %struct.F_triple*
  store %struct.F_triple* %4, %struct.F_triple** %b, align 8
  %5 = load %struct.F_triple** %a, align 8
  %6 = getelementptr inbounds %struct.F_triple* %5, i32 0, i32 1
  %7 = load i64* %6, align 8
  %8 = load %struct.F_triple** %b, align 8
  %9 = getelementptr inbounds %struct.F_triple* %8, i32 0, i32 1
  %10 = load i64* %9, align 8
  %11 = icmp ne i64 %7, %10
  br i1 %11, label %bb3, label %bb

bb:                                               ; preds = %entry
  %12 = load %struct.F_triple** %a, align 8
  %13 = getelementptr inbounds %struct.F_triple* %12, i32 0, i32 2
  %14 = load i64* %13, align 8
  %15 = load %struct.F_triple** %b, align 8
  %16 = getelementptr inbounds %struct.F_triple* %15, i32 0, i32 2
  %17 = load i64* %16, align 8
  %18 = icmp ne i64 %14, %17
  br i1 %18, label %bb3, label %bb1

bb1:                                              ; preds = %bb
  %19 = load %struct.F_triple** %b, align 8
  %20 = getelementptr inbounds %struct.F_triple* %19, i32 0, i32 0
  %21 = load i8** %20, align 8
  %22 = load %struct.F_triple** %a, align 8
  %23 = getelementptr inbounds %struct.F_triple* %22, i32 0, i32 0
  %24 = load i8** %23, align 8
  %25 = call i32 @strcmp(i8* %24, i8* %21) nounwind readonly
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  store i32 1, i32* %iftmp.1, align 4
  br label %bb4

bb3:                                              ; preds = %bb1, %bb, %entry
  store i32 0, i32* %iftmp.1, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %27 = load i32* %iftmp.1, align 4
  %28 = trunc i32 %27 to i8
  %29 = zext i8 %28 to i32
  store i32 %29, i32* %0, align 4
  %30 = load i32* %0, align 4
  store i32 %30, i32* %retval, align 4
  %retval5 = load i32* %retval
  %retval56 = trunc i32 %retval5 to i8
  ret i8 %retval56
}

define void @triple_free(i8* %x) nounwind {
entry:
  %x_addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  %0 = load i8** %x_addr, align 8
  %1 = bitcast i8* %0 to %struct.F_triple*
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8
  %2 = load %struct.F_triple** %a, align 8
  %3 = getelementptr inbounds %struct.F_triple* %2, i32 0, i32 0
  %4 = load i8** %3, align 8
  call void @free(i8* %4) nounwind
  %5 = load %struct.F_triple** %a, align 8
  %6 = bitcast %struct.F_triple* %5 to i8*
  call void @free(i8* %6) nounwind
  ret void
}

define internal x86_fp80 @adjust_value(i32 %inexact_style, x86_fp80 %value) nounwind {
entry:
  %inexact_style_addr = alloca i32, align 4
  %value_addr = alloca x86_fp80, align 16
  %retval = alloca x86_fp80
  %0 = alloca x86_fp80
  %iftmp.0 = alloca i32
  %u = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %inexact_style, i32* %inexact_style_addr
  store x86_fp80 %value, x86_fp80* %value_addr
  %1 = load i32* %inexact_style_addr, align 4
  %2 = icmp ne i32 %1, 1
  br i1 %2, label %bb, label %bb6

bb:                                               ; preds = %entry
  %3 = load x86_fp80* %value_addr, align 16
  %4 = fcmp olt x86_fp80 %3, 0xK403EFFFFFFFFFFFFFFFF
  br i1 %4, label %bb1, label %bb6

bb1:                                              ; preds = %bb
  %5 = load x86_fp80* %value_addr, align 16
  %6 = fptoui x86_fp80 %5 to i64
  store i64 %6, i64* %u, align 8
  %7 = load i32* %inexact_style_addr, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %bb4, label %bb2

bb2:                                              ; preds = %bb1
  %9 = load i64* %u, align 8
  %10 = uitofp i64 %9 to x86_fp80
  %11 = load x86_fp80* %value_addr, align 16
  %12 = fcmp oeq x86_fp80 %10, %11
  br i1 %12, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  store i32 1, i32* %iftmp.0, align 4
  br label %bb5

bb4:                                              ; preds = %bb2, %bb1
  store i32 0, i32* %iftmp.0, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %13 = load i32* %iftmp.0, align 4
  %14 = sext i32 %13 to i64
  %15 = load i64* %u, align 8
  %16 = add i64 %14, %15
  %17 = uitofp i64 %16 to x86_fp80
  store x86_fp80 %17, x86_fp80* %value_addr, align 16
  br label %bb6

bb6:                                              ; preds = %bb5, %bb, %entry
  %18 = load x86_fp80* %value_addr, align 16
  store x86_fp80 %18, x86_fp80* %0, align 16
  %19 = load x86_fp80* %0, align 16
  store x86_fp80 %19, x86_fp80* %retval, align 16
  %retval7 = load x86_fp80* %retval
  ret x86_fp80 %retval7
}

define internal i8* @group_number(i8* %number, i64 %numberlen, i8* %grouping, i8* %thousands_sep) nounwind {
entry:
  %number_addr = alloca i8*, align 8
  %numberlen_addr = alloca i64, align 8
  %grouping_addr = alloca i8*, align 8
  %thousands_sep_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.1 = alloca i64
  %d = alloca i8*
  %grouplen = alloca i64
  %thousands_seplen = alloca i64
  %i = alloca i64
  %buf = alloca [41 x i8]
  %g = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %number, i8** %number_addr
  store i64 %numberlen, i64* %numberlen_addr
  store i8* %grouping, i8** %grouping_addr
  store i8* %thousands_sep, i8** %thousands_sep_addr
  store i64 -1, i64* %grouplen, align 8
  %1 = load i8** %thousands_sep_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  store i64 %2, i64* %thousands_seplen, align 8
  %3 = load i64* %numberlen_addr, align 8
  store i64 %3, i64* %i, align 8
  %buf1 = bitcast [41 x i8]* %buf to i8*
  %4 = load i8** %number_addr, align 8
  %5 = load i64* %numberlen_addr, align 8
  %6 = call i8* @memcpy(i8* %buf1, i8* %4, i64 %5)
  %7 = load i8** %number_addr, align 8
  %8 = load i64* %numberlen_addr, align 8
  %9 = getelementptr inbounds i8* %7, i64 %8
  store i8* %9, i8** %d, align 8
  br label %bb

bb:                                               ; preds = %bb11, %entry
  %10 = load i8** %grouping_addr, align 8
  %11 = load i8* %10, align 1
  store i8 %11, i8* %g, align 1
  %12 = load i8* %g, align 1
  %13 = icmp ne i8 %12, 0
  br i1 %13, label %bb2, label %bb6

bb2:                                              ; preds = %bb
  %14 = load i8* %g, align 1
  %15 = icmp ule i8 %14, 126
  br i1 %15, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %16 = load i8* %g, align 1
  %17 = zext i8 %16 to i64
  store i64 %17, i64* %iftmp.1, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %18 = load i64* %i, align 8
  store i64 %18, i64* %iftmp.1, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %19 = load i64* %iftmp.1, align 8
  store i64 %19, i64* %grouplen, align 8
  %20 = load i8** %grouping_addr, align 8
  %21 = getelementptr inbounds i8* %20, i64 1
  store i8* %21, i8** %grouping_addr, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb
  %22 = load i64* %i, align 8
  %23 = load i64* %grouplen, align 8
  %24 = icmp ult i64 %22, %23
  br i1 %24, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %25 = load i64* %i, align 8
  store i64 %25, i64* %grouplen, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %26 = load i64* %grouplen, align 8
  %27 = sub nsw i64 0, %26
  %28 = load i8** %d, align 8
  %29 = getelementptr inbounds i8* %28, i64 %27
  store i8* %29, i8** %d, align 8
  %30 = load i64* %i, align 8
  %31 = load i64* %grouplen, align 8
  %32 = sub i64 %30, %31
  store i64 %32, i64* %i, align 8
  %buf9 = bitcast [41 x i8]* %buf to i8*
  %33 = load i64* %i, align 8
  %34 = getelementptr inbounds i8* %buf9, i64 %33
  %35 = load i8** %d, align 8
  %36 = load i64* %grouplen, align 8
  %37 = call i8* @memcpy(i8* %35, i8* %34, i64 %36)
  %38 = load i64* %i, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %bb10, label %bb11

bb10:                                             ; preds = %bb8
  %40 = load i8** %d, align 8
  store i8* %40, i8** %0, align 8
  %41 = load i8** %0, align 8
  store i8* %41, i8** %retval, align 8
  %retval12 = load i8** %retval
  ret i8* %retval12

bb11:                                             ; preds = %bb8
  %42 = load i64* %thousands_seplen, align 8
  %43 = sub nsw i64 0, %42
  %44 = load i8** %d, align 8
  %45 = getelementptr inbounds i8* %44, i64 %43
  store i8* %45, i8** %d, align 8
  %46 = load i8** %d, align 8
  %47 = load i8** %thousands_sep_addr, align 8
  %48 = load i64* %thousands_seplen, align 8
  %49 = call i8* @memcpy(i8* %46, i8* %47, i64 %48)
  br label %bb
}

define i8* @human_readable(i64 %n, i8* %buf, i32 %opts, i64 %from_block_size, i64 %to_block_size) nounwind {
entry:
  %n_addr = alloca i64, align 8
  %buf_addr = alloca i8*, align 8
  %opts_addr = alloca i32, align 4
  %from_block_size_addr = alloca i64, align 8
  %to_block_size_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.22 = alloca i8
  %iftmp.18 = alloca i32
  %iftmp.17 = alloca i8
  %iftmp.15 = alloca i32
  %iftmp.14 = alloca i8
  %iftmp.12 = alloca i32
  %iftmp.10 = alloca i32
  %iftmp.6 = alloca i32
  %iftmp.5 = alloca i32
  %iftmp.4 = alloca i32
  %inexact_style = alloca i32
  %base = alloca i32
  %amt = alloca i64
  %tenths = alloca i32
  %exponent = alloca i32
  %exponent_max = alloca i32
  %p = alloca i8*
  %psuffix = alloca i8*
  %integerlim = alloca i8*
  %rounding = alloca i32
  %decimal_point = alloca i8*
  %decimal_pointlen = alloca i64
  %grouping = alloca i8*
  %thousands_sep = alloca i8*
  %l = alloca %struct.lconv*
  %pointlen = alloca i64
  %multiplier = alloca i64
  %divisor = alloca i64
  %r10 = alloca i64
  %r2 = alloca i64
  %dto_block_size = alloca x86_fp80
  %damt = alloca x86_fp80
  %buflen = alloca i64
  %nonintegerlen = alloca i64
  %e = alloca x86_fp80
  %r1033 = alloca i32
  %r234 = alloca i32
  %digit = alloca i32
  %power = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  store i8* %buf, i8** %buf_addr
  store i32 %opts, i32* %opts_addr
  store i64 %from_block_size, i64* %from_block_size_addr
  store i64 %to_block_size, i64* %to_block_size_addr
  %1 = load i32* %opts_addr, align 4
  %2 = and i32 %1, 3
  store i32 %2, i32* %inexact_style, align 4
  %3 = load i32* %opts_addr, align 4
  %4 = and i32 %3, 32
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1024, i32* %iftmp.4, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 1000, i32* %iftmp.4, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %6 = load i32* %iftmp.4, align 4
  store i32 %6, i32* %base, align 4
  store i32 -1, i32* %exponent, align 4
  store i32 8, i32* %exponent_max, align 4
  store i8* getelementptr inbounds ([2 x i8]* @.str133, i64 0, i64 0), i8** %decimal_point, align 8
  store i64 1, i64* %decimal_pointlen, align 8
  store i8* getelementptr inbounds ([1 x i8]* @.str1134, i64 0, i64 0), i8** %grouping, align 8
  store i8* getelementptr inbounds ([1 x i8]* @.str1134, i64 0, i64 0), i8** %thousands_sep, align 8
  %7 = call %struct.lconv* @localeconv() nounwind
  store %struct.lconv* %7, %struct.lconv** %l, align 8
  %8 = load %struct.lconv** %l, align 8
  %9 = getelementptr inbounds %struct.lconv* %8, i32 0, i32 0
  %10 = load i8** %9, align 8
  %11 = call i64 @strlen(i8* %10) nounwind readonly
  store i64 %11, i64* %pointlen, align 8
  %12 = load i64* %pointlen, align 8
  %13 = icmp ne i64 %12, 0
  %14 = load i64* %pointlen, align 8
  %15 = icmp ule i64 %14, 16
  %or.cond = and i1 %13, %15
  br i1 %or.cond, label %bb4, label %bb5

bb4:                                              ; preds = %bb2
  %16 = load %struct.lconv** %l, align 8
  %17 = getelementptr inbounds %struct.lconv* %16, i32 0, i32 0
  %18 = load i8** %17, align 8
  store i8* %18, i8** %decimal_point, align 8
  %19 = load i64* %pointlen, align 8
  store i64 %19, i64* %decimal_pointlen, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load %struct.lconv** %l, align 8
  %21 = getelementptr inbounds %struct.lconv* %20, i32 0, i32 2
  %22 = load i8** %21, align 8
  store i8* %22, i8** %grouping, align 8
  %23 = load %struct.lconv** %l, align 8
  %24 = getelementptr inbounds %struct.lconv* %23, i32 0, i32 1
  %25 = load i8** %24, align 8
  %26 = call i64 @strlen(i8* %25) nounwind readonly
  %27 = icmp ule i64 %26, 16
  br i1 %27, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %28 = load %struct.lconv** %l, align 8
  %29 = getelementptr inbounds %struct.lconv* %28, i32 0, i32 1
  %30 = load i8** %29, align 8
  store i8* %30, i8** %thousands_sep, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %31 = load i8** %buf_addr, align 8
  %32 = getelementptr inbounds i8* %31, i64 651
  %33 = getelementptr inbounds i8* %32, i64 -3
  store i8* %33, i8** %psuffix, align 8
  %34 = load i8** %psuffix, align 8
  store i8* %34, i8** %p, align 8
  %35 = load i64* %to_block_size_addr, align 8
  %36 = load i64* %from_block_size_addr, align 8
  %37 = icmp ule i64 %35, %36
  %38 = load i64* %from_block_size_addr, align 8
  br i1 %37, label %bb8, label %bb12

bb8:                                              ; preds = %bb7
  %39 = load i64* %to_block_size_addr, align 8
  %int_cast_to_i64 = bitcast i64 %39 to i64
  %40 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %41 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %41, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb8
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb8
  call void @klee_disable_symbex() nounwind
  %42 = urem i64 %38, %39
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %bb9, label %bb21

bb9:                                              ; preds = %klee_div_zero_check.exit
  %44 = load i64* %from_block_size_addr, align 8
  %45 = load i64* %to_block_size_addr, align 8
  %int_cast_to_i641 = bitcast i64 %45 to i64
  %46 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %47 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %47, label %bb.i16, label %klee_div_zero_check.exit17

bb.i16:                                           ; preds = %bb9
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit17:                       ; preds = %bb9
  call void @klee_disable_symbex() nounwind
  %48 = udiv i64 %44, %45
  store i64 %48, i64* %multiplier, align 8
  %49 = load i64* %n_addr, align 8
  %50 = load i64* %multiplier, align 8
  %51 = mul i64 %49, %50
  store i64 %51, i64* %amt, align 8
  %52 = load i64* %amt, align 8
  %53 = load i64* %multiplier, align 8
  %int_cast_to_i642 = bitcast i64 %53 to i64
  %54 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %55 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %55, label %bb.i18, label %klee_div_zero_check.exit19

bb.i18:                                           ; preds = %klee_div_zero_check.exit17
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit19:                       ; preds = %klee_div_zero_check.exit17
  call void @klee_disable_symbex() nounwind
  %56 = udiv i64 %52, %53
  %57 = load i64* %n_addr, align 8
  %58 = icmp eq i64 %56, %57
  br i1 %58, label %bb10, label %bb21

bb10:                                             ; preds = %klee_div_zero_check.exit19
  store i32 0, i32* %tenths, align 4
  store i32 0, i32* %rounding, align 4
  br label %use_integer_arithmetic

bb12:                                             ; preds = %bb7
  %59 = icmp ne i64 %38, 0
  br i1 %59, label %bb13, label %bb21

bb13:                                             ; preds = %bb12
  %60 = load i64* %to_block_size_addr, align 8
  %61 = load i64* %from_block_size_addr, align 8
  %int_cast_to_i643 = bitcast i64 %61 to i64
  %62 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %63 = icmp eq i64 %int_cast_to_i643, 0
  br i1 %63, label %bb.i20, label %klee_div_zero_check.exit21

bb.i20:                                           ; preds = %bb13
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit21:                       ; preds = %bb13
  call void @klee_disable_symbex() nounwind
  %64 = urem i64 %60, %61
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %bb14, label %bb21

bb14:                                             ; preds = %klee_div_zero_check.exit21
  %66 = load i64* %to_block_size_addr, align 8
  %67 = load i64* %from_block_size_addr, align 8
  %int_cast_to_i644 = bitcast i64 %67 to i64
  %68 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %69 = icmp eq i64 %int_cast_to_i644, 0
  br i1 %69, label %bb.i22, label %klee_div_zero_check.exit23

bb.i22:                                           ; preds = %bb14
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit23:                       ; preds = %bb14
  call void @klee_disable_symbex() nounwind
  %70 = udiv i64 %66, %67
  store i64 %70, i64* %divisor, align 8
  %71 = load i64* %n_addr, align 8
  %72 = load i64* %divisor, align 8
  %int_cast_to_i645 = bitcast i64 %72 to i64
  %73 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %74 = icmp eq i64 %int_cast_to_i645, 0
  br i1 %74, label %bb.i24, label %klee_div_zero_check.exit25

bb.i24:                                           ; preds = %klee_div_zero_check.exit23
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit25:                       ; preds = %klee_div_zero_check.exit23
  call void @klee_disable_symbex() nounwind
  %75 = urem i64 %71, %72
  %76 = mul i64 %75, 10
  store i64 %76, i64* %r10, align 8
  %77 = load i64* %r10, align 8
  %78 = load i64* %divisor, align 8
  %int_cast_to_i646 = bitcast i64 %78 to i64
  %79 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %80 = icmp eq i64 %int_cast_to_i646, 0
  br i1 %80, label %bb.i26, label %klee_div_zero_check.exit27

bb.i26:                                           ; preds = %klee_div_zero_check.exit25
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit27:                       ; preds = %klee_div_zero_check.exit25
  call void @klee_disable_symbex() nounwind
  %81 = urem i64 %77, %78
  %82 = mul i64 %81, 2
  store i64 %82, i64* %r2, align 8
  %83 = load i64* %n_addr, align 8
  %84 = load i64* %divisor, align 8
  %int_cast_to_i647 = bitcast i64 %84 to i64
  %85 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %86 = icmp eq i64 %int_cast_to_i647, 0
  br i1 %86, label %bb.i28, label %klee_div_zero_check.exit29

bb.i28:                                           ; preds = %klee_div_zero_check.exit27
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit29:                       ; preds = %klee_div_zero_check.exit27
  call void @klee_disable_symbex() nounwind
  %87 = udiv i64 %83, %84
  store i64 %87, i64* %amt, align 8
  %88 = load i64* %r10, align 8
  %89 = load i64* %divisor, align 8
  %int_cast_to_i648 = bitcast i64 %89 to i64
  %90 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %91 = icmp eq i64 %int_cast_to_i648, 0
  br i1 %91, label %bb.i30, label %klee_div_zero_check.exit31

bb.i30:                                           ; preds = %klee_div_zero_check.exit29
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit31:                       ; preds = %klee_div_zero_check.exit29
  call void @klee_disable_symbex() nounwind
  %92 = udiv i64 %88, %89
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %tenths, align 4
  %94 = load i64* %r2, align 8
  %95 = load i64* %divisor, align 8
  %96 = icmp ult i64 %94, %95
  br i1 %96, label %bb15, label %bb16

bb15:                                             ; preds = %klee_div_zero_check.exit31
  %97 = load i64* %r2, align 8
  %98 = icmp ne i64 %97, 0
  %99 = zext i1 %98 to i32
  store i32 %99, i32* %iftmp.5, align 4
  br label %bb20

bb16:                                             ; preds = %klee_div_zero_check.exit31
  %100 = load i64* %divisor, align 8
  %101 = load i64* %r2, align 8
  %102 = icmp ult i64 %100, %101
  br i1 %102, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  store i32 3, i32* %iftmp.6, align 4
  br label %bb19

bb18:                                             ; preds = %bb16
  store i32 2, i32* %iftmp.6, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %bb17
  %103 = load i32* %iftmp.6, align 4
  store i32 %103, i32* %iftmp.5, align 4
  br label %bb20

bb20:                                             ; preds = %bb19, %bb15
  %104 = load i32* %iftmp.5, align 4
  store i32 %104, i32* %rounding, align 4
  br label %use_integer_arithmetic

bb21:                                             ; preds = %klee_div_zero_check.exit, %klee_div_zero_check.exit19, %klee_div_zero_check.exit21, %bb12
  %105 = load i64* %to_block_size_addr, align 8
  %106 = uitofp i64 %105 to x86_fp80
  store x86_fp80 %106, x86_fp80* %dto_block_size, align 16
  %107 = load i64* %n_addr, align 8
  %108 = uitofp i64 %107 to x86_fp80
  %109 = load i64* %from_block_size_addr, align 8
  %110 = uitofp i64 %109 to x86_fp80
  %111 = load x86_fp80* %dto_block_size, align 16
  %112 = fdiv x86_fp80 %110, %111
  %113 = fmul x86_fp80 %108, %112
  store x86_fp80 %113, x86_fp80* %damt, align 16
  %114 = load i32* %opts_addr, align 4
  %115 = and i32 %114, 16
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  %117 = load i32* %inexact_style, align 4
  %118 = load x86_fp80* %damt, align 16
  %119 = call x86_fp80 @adjust_value(i32 %117, x86_fp80 %118) nounwind
  %120 = load i8** %buf_addr, align 8
  %121 = call i32 (i8*, i8*, ...)* @sprintf(i8* noalias %120, i8* noalias getelementptr inbounds ([6 x i8]* @.str2135, i64 0, i64 0), x86_fp80 %119) nounwind
  %122 = load i8** %buf_addr, align 8
  %123 = call i64 @strlen(i8* %122) nounwind readonly
  store i64 %123, i64* %buflen, align 8
  store i64 0, i64* %nonintegerlen, align 8
  br label %bb30

bb23:                                             ; preds = %bb21
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %e, align 16
  store i32 0, i32* %exponent, align 4
  br label %bb24

bb24:                                             ; preds = %bb25, %bb23
  %124 = load i32* %base, align 4
  %125 = uitofp i32 %124 to x86_fp80
  %126 = load x86_fp80* %e, align 16
  %127 = fmul x86_fp80 %125, %126
  store x86_fp80 %127, x86_fp80* %e, align 16
  %128 = load i32* %exponent, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %exponent, align 4
  %130 = load i32* %base, align 4
  %131 = uitofp i32 %130 to x86_fp80
  %132 = load x86_fp80* %e, align 16
  %133 = fmul x86_fp80 %131, %132
  %134 = load x86_fp80* %damt, align 16
  %135 = fcmp ugt x86_fp80 %133, %134
  br i1 %135, label %bb26, label %bb25

bb25:                                             ; preds = %bb24
  %136 = load i32* %exponent, align 4
  %137 = load i32* %exponent_max, align 4
  %138 = icmp slt i32 %136, %137
  br i1 %138, label %bb24, label %bb26

bb26:                                             ; preds = %bb25, %bb24
  %139 = load x86_fp80* %damt, align 16
  %140 = load x86_fp80* %e, align 16
  %141 = fdiv x86_fp80 %139, %140
  store x86_fp80 %141, x86_fp80* %damt, align 16
  %142 = load i32* %inexact_style, align 4
  %143 = load x86_fp80* %damt, align 16
  %144 = call x86_fp80 @adjust_value(i32 %142, x86_fp80 %143) nounwind
  %145 = load i8** %buf_addr, align 8
  %146 = call i32 (i8*, i8*, ...)* @sprintf(i8* noalias %145, i8* noalias getelementptr inbounds ([6 x i8]* @.str3136, i64 0, i64 0), x86_fp80 %144) nounwind
  %147 = load i8** %buf_addr, align 8
  %148 = call i64 @strlen(i8* %147) nounwind readonly
  store i64 %148, i64* %buflen, align 8
  %149 = load i64* %decimal_pointlen, align 8
  %150 = add i64 %149, 1
  store i64 %150, i64* %nonintegerlen, align 8
  %151 = load i32* %opts_addr, align 4
  %152 = and i32 %151, 32
  %153 = icmp eq i32 %152, 0
  %154 = zext i1 %153 to i64
  %155 = load i64* %nonintegerlen, align 8
  %156 = add i64 %154, %155
  %157 = add i64 %156, 1
  %158 = load i64* %buflen, align 8
  %159 = icmp ult i64 %157, %158
  br i1 %159, label %bb29, label %bb27

bb27:                                             ; preds = %bb26
  %160 = load i32* %opts_addr, align 4
  %161 = and i32 %160, 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %bb30, label %bb28

bb28:                                             ; preds = %bb27
  %163 = load i64* %buflen, align 8
  %164 = sub i64 %163, 1
  %165 = load i8** %buf_addr, align 8
  %166 = getelementptr inbounds i8* %165, i64 %164
  %167 = load i8* %166, align 1
  %168 = icmp eq i8 %167, 48
  br i1 %168, label %bb29, label %bb30

bb29:                                             ; preds = %bb28, %bb26
  %169 = load x86_fp80* %damt, align 16
  %170 = fmul x86_fp80 %169, 0xK4002A000000000000000
  %171 = load i32* %inexact_style, align 4
  %172 = call x86_fp80 @adjust_value(i32 %171, x86_fp80 %170) nounwind
  %173 = fdiv x86_fp80 %172, 0xK4002A000000000000000
  %174 = load i8** %buf_addr, align 8
  %175 = call i32 (i8*, i8*, ...)* @sprintf(i8* noalias %174, i8* noalias getelementptr inbounds ([6 x i8]* @.str2135, i64 0, i64 0), x86_fp80 %173) nounwind
  %176 = load i8** %buf_addr, align 8
  %177 = call i64 @strlen(i8* %176) nounwind readonly
  store i64 %177, i64* %buflen, align 8
  store i64 0, i64* %nonintegerlen, align 8
  br label %bb30

bb30:                                             ; preds = %bb29, %bb28, %bb27, %bb22
  %178 = load i64* %buflen, align 8
  %179 = sub nsw i64 0, %178
  %180 = load i8** %psuffix, align 8
  %181 = getelementptr inbounds i8* %180, i64 %179
  store i8* %181, i8** %p, align 8
  %182 = load i8** %p, align 8
  %183 = load i8** %buf_addr, align 8
  %184 = load i64* %buflen, align 8
  %185 = call i8* @memmove(i8* %182, i8* %183, i64 %184)
  %186 = load i8** %p, align 8
  %187 = load i64* %buflen, align 8
  %188 = getelementptr inbounds i8* %186, i64 %187
  %189 = load i64* %nonintegerlen, align 8
  %190 = sub nsw i64 0, %189
  %191 = getelementptr inbounds i8* %188, i64 %190
  store i8* %191, i8** %integerlim, align 8
  br label %do_grouping

use_integer_arithmetic:                           ; preds = %bb20, %bb10
  %192 = load i32* %opts_addr, align 4
  %193 = and i32 %192, 16
  %194 = icmp ne i32 %193, 0
  br i1 %194, label %bb31, label %bb57

bb31:                                             ; preds = %use_integer_arithmetic
  store i32 0, i32* %exponent, align 4
  %195 = load i32* %base, align 4
  %196 = zext i32 %195 to i64
  %197 = load i64* %amt, align 8
  %198 = icmp ule i64 %196, %197
  br i1 %198, label %bb32, label %bb57

bb32:                                             ; preds = %bb41, %bb31
  %199 = load i32* %base, align 4
  %200 = zext i32 %199 to i64
  %201 = load i64* %amt, align 8
  %int_cast_to_i649 = bitcast i64 %200 to i64
  %202 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %203 = icmp eq i64 %int_cast_to_i649, 0
  br i1 %203, label %bb.i32, label %klee_div_zero_check.exit33

bb.i32:                                           ; preds = %bb32
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit33:                       ; preds = %bb32
  call void @klee_disable_symbex() nounwind
  %204 = urem i64 %201, %200
  %205 = mul i64 %204, 10
  %206 = trunc i64 %205 to i32
  %207 = load i32* %tenths, align 4
  %208 = add i32 %206, %207
  store i32 %208, i32* %r1033, align 4
  %209 = load i32* %r1033, align 4
  %210 = load i32* %base, align 4
  %int_cast_to_i6410 = zext i32 %210 to i64
  %211 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %212 = icmp eq i64 %int_cast_to_i6410, 0
  br i1 %212, label %bb.i34, label %klee_div_zero_check.exit35

bb.i34:                                           ; preds = %klee_div_zero_check.exit33
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit35:                       ; preds = %klee_div_zero_check.exit33
  call void @klee_disable_symbex() nounwind
  %213 = urem i32 %209, %210
  %214 = mul i32 %213, 2
  %215 = load i32* %rounding, align 4
  %int_cast_to_i6415 = zext i32 1 to i64
  %216 = icmp ult i64 %int_cast_to_i6415, 32
  br i1 %216, label %klee_overshift_check.exit, label %bb.i44

bb.i44:                                           ; preds = %klee_div_zero_check.exit35
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %klee_div_zero_check.exit35
  %217 = ashr i32 %215, 1
  %218 = add i32 %214, %217
  store i32 %218, i32* %r234, align 4
  %219 = load i32* %base, align 4
  %220 = zext i32 %219 to i64
  %221 = load i64* %amt, align 8
  %int_cast_to_i6411 = bitcast i64 %220 to i64
  %222 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %223 = icmp eq i64 %int_cast_to_i6411, 0
  br i1 %223, label %bb.i36, label %klee_div_zero_check.exit37

bb.i36:                                           ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit37:                       ; preds = %klee_overshift_check.exit
  call void @klee_disable_symbex() nounwind
  %224 = udiv i64 %221, %220
  store i64 %224, i64* %amt, align 8
  %225 = load i32* %r1033, align 4
  %226 = load i32* %base, align 4
  %int_cast_to_i6412 = zext i32 %226 to i64
  %227 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %228 = icmp eq i64 %int_cast_to_i6412, 0
  br i1 %228, label %bb.i38, label %klee_div_zero_check.exit39

bb.i38:                                           ; preds = %klee_div_zero_check.exit37
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit39:                       ; preds = %klee_div_zero_check.exit37
  call void @klee_disable_symbex() nounwind
  %229 = udiv i32 %225, %226
  store i32 %229, i32* %tenths, align 4
  %230 = load i32* %r234, align 4
  %231 = load i32* %base, align 4
  %232 = icmp ult i32 %230, %231
  %233 = load i32* %rounding, align 4
  %234 = load i32* %r234, align 4
  %235 = add i32 %234, %233
  br i1 %232, label %bb35, label %bb36

bb35:                                             ; preds = %klee_div_zero_check.exit39
  %236 = icmp ne i32 %235, 0
  %237 = zext i1 %236 to i32
  store i32 %237, i32* %iftmp.10, align 4
  br label %bb40

bb36:                                             ; preds = %klee_div_zero_check.exit39
  %238 = load i32* %base, align 4
  %239 = icmp ugt i32 %235, %238
  br i1 %239, label %bb37, label %bb38

bb37:                                             ; preds = %bb36
  store i32 3, i32* %iftmp.12, align 4
  br label %bb39

bb38:                                             ; preds = %bb36
  store i32 2, i32* %iftmp.12, align 4
  br label %bb39

bb39:                                             ; preds = %bb38, %bb37
  %240 = load i32* %iftmp.12, align 4
  store i32 %240, i32* %iftmp.10, align 4
  br label %bb40

bb40:                                             ; preds = %bb39, %bb35
  %241 = load i32* %iftmp.10, align 4
  store i32 %241, i32* %rounding, align 4
  %242 = load i32* %exponent, align 4
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %exponent, align 4
  %244 = load i32* %base, align 4
  %245 = zext i32 %244 to i64
  %246 = load i64* %amt, align 8
  %247 = icmp ugt i64 %245, %246
  br i1 %247, label %bb42, label %bb41

bb41:                                             ; preds = %bb40
  %248 = load i32* %exponent, align 4
  %249 = load i32* %exponent_max, align 4
  %250 = icmp slt i32 %248, %249
  br i1 %250, label %bb32, label %bb42

bb42:                                             ; preds = %bb41, %bb40
  %251 = load i64* %amt, align 8
  %252 = icmp ule i64 %251, 9
  br i1 %252, label %bb43, label %bb57

bb43:                                             ; preds = %bb42
  %253 = load i32* %inexact_style, align 4
  %254 = icmp eq i32 %253, 1
  br i1 %254, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  %255 = load i32* %tenths, align 4
  %256 = and i32 %255, 1
  %257 = load i32* %rounding, align 4
  %258 = add nsw i32 %256, %257
  %259 = icmp sgt i32 %258, 2
  %260 = zext i1 %259 to i8
  store i8 %260, i8* %iftmp.14, align 1
  br label %bb50

bb45:                                             ; preds = %bb43
  %261 = load i32* %inexact_style, align 4
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %bb48, label %bb46

bb46:                                             ; preds = %bb45
  %263 = load i32* %rounding, align 4
  %264 = icmp sle i32 %263, 0
  br i1 %264, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  store i32 1, i32* %iftmp.15, align 4
  br label %bb49

bb48:                                             ; preds = %bb46, %bb45
  store i32 0, i32* %iftmp.15, align 4
  br label %bb49

bb49:                                             ; preds = %bb48, %bb47
  %265 = load i32* %iftmp.15, align 4
  %266 = trunc i32 %265 to i8
  store i8 %266, i8* %iftmp.14, align 1
  br label %bb50

bb50:                                             ; preds = %bb49, %bb44
  %267 = load i8* %iftmp.14, align 1
  %toBool = icmp ne i8 %267, 0
  br i1 %toBool, label %bb51, label %bb53

bb51:                                             ; preds = %bb50
  %268 = load i32* %tenths, align 4
  %269 = add nsw i32 %268, 1
  store i32 %269, i32* %tenths, align 4
  store i32 0, i32* %rounding, align 4
  %270 = load i32* %tenths, align 4
  %271 = icmp eq i32 %270, 10
  br i1 %271, label %bb52, label %bb53

bb52:                                             ; preds = %bb51
  %272 = load i64* %amt, align 8
  %273 = add i64 %272, 1
  store i64 %273, i64* %amt, align 8
  store i32 0, i32* %tenths, align 4
  br label %bb53

bb53:                                             ; preds = %bb52, %bb51, %bb50
  %274 = load i64* %amt, align 8
  %275 = icmp ule i64 %274, 9
  br i1 %275, label %bb54, label %bb57

bb54:                                             ; preds = %bb53
  %276 = load i32* %tenths, align 4
  %277 = icmp ne i32 %276, 0
  br i1 %277, label %bb56, label %bb55

bb55:                                             ; preds = %bb54
  %278 = load i32* %opts_addr, align 4
  %279 = and i32 %278, 8
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %bb56, label %bb57

bb56:                                             ; preds = %bb55, %bb54
  %281 = load i8** %p, align 8
  %282 = getelementptr inbounds i8* %281, i64 -1
  store i8* %282, i8** %p, align 8
  %283 = load i32* %tenths, align 4
  %284 = trunc i32 %283 to i8
  %285 = add i8 %284, 48
  %286 = load i8** %p, align 8
  store i8 %285, i8* %286, align 1
  %287 = load i64* %decimal_pointlen, align 8
  %288 = sub nsw i64 0, %287
  %289 = load i8** %p, align 8
  %290 = getelementptr inbounds i8* %289, i64 %288
  store i8* %290, i8** %p, align 8
  %291 = load i8** %p, align 8
  %292 = load i8** %decimal_point, align 8
  %293 = load i64* %decimal_pointlen, align 8
  %294 = call i8* @memcpy(i8* %291, i8* %292, i64 %293)
  store i32 0, i32* %rounding, align 4
  %295 = load i32* %rounding, align 4
  store i32 %295, i32* %tenths, align 4
  br label %bb57

bb57:                                             ; preds = %bb56, %bb55, %bb53, %bb42, %bb31, %use_integer_arithmetic
  %296 = load i32* %inexact_style, align 4
  %297 = icmp eq i32 %296, 1
  br i1 %297, label %bb58, label %bb59

bb58:                                             ; preds = %bb57
  %298 = load i32* %rounding, align 4
  %299 = sext i32 %298 to i64
  %300 = load i64* %amt, align 8
  %301 = and i64 %300, 1
  %302 = add i64 %299, %301
  %303 = icmp ne i64 %302, 0
  %304 = zext i1 %303 to i32
  %305 = load i32* %tenths, align 4
  %306 = add nsw i32 %304, %305
  %307 = icmp sgt i32 %306, 5
  %308 = zext i1 %307 to i8
  store i8 %308, i8* %iftmp.17, align 1
  br label %bb64

bb59:                                             ; preds = %bb57
  %309 = load i32* %inexact_style, align 4
  %310 = icmp ne i32 %309, 0
  br i1 %310, label %bb62, label %bb60

bb60:                                             ; preds = %bb59
  %311 = load i32* %tenths, align 4
  %312 = load i32* %rounding, align 4
  %313 = add nsw i32 %311, %312
  %314 = icmp sle i32 %313, 0
  br i1 %314, label %bb62, label %bb61

bb61:                                             ; preds = %bb60
  store i32 1, i32* %iftmp.18, align 4
  br label %bb63

bb62:                                             ; preds = %bb60, %bb59
  store i32 0, i32* %iftmp.18, align 4
  br label %bb63

bb63:                                             ; preds = %bb62, %bb61
  %315 = load i32* %iftmp.18, align 4
  %316 = trunc i32 %315 to i8
  store i8 %316, i8* %iftmp.17, align 1
  br label %bb64

bb64:                                             ; preds = %bb63, %bb58
  %317 = load i8* %iftmp.17, align 1
  %toBool65 = icmp ne i8 %317, 0
  br i1 %toBool65, label %bb66, label %bb72

bb66:                                             ; preds = %bb64
  %318 = load i64* %amt, align 8
  %319 = add i64 %318, 1
  store i64 %319, i64* %amt, align 8
  %320 = load i32* %opts_addr, align 4
  %321 = and i32 %320, 16
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %bb67, label %bb72

bb67:                                             ; preds = %bb66
  %323 = load i32* %base, align 4
  %324 = zext i32 %323 to i64
  %325 = load i64* %amt, align 8
  %326 = icmp eq i64 %324, %325
  br i1 %326, label %bb68, label %bb72

bb68:                                             ; preds = %bb67
  %327 = load i32* %exponent, align 4
  %328 = load i32* %exponent_max, align 4
  %329 = icmp slt i32 %327, %328
  br i1 %329, label %bb69, label %bb72

bb69:                                             ; preds = %bb68
  %330 = load i32* %exponent, align 4
  %331 = add nsw i32 %330, 1
  store i32 %331, i32* %exponent, align 4
  %332 = load i32* %opts_addr, align 4
  %333 = and i32 %332, 8
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %bb70, label %bb71

bb70:                                             ; preds = %bb69
  %335 = load i8** %p, align 8
  %336 = getelementptr inbounds i8* %335, i64 -1
  store i8* %336, i8** %p, align 8
  %337 = load i8** %p, align 8
  store i8 48, i8* %337, align 1
  %338 = load i64* %decimal_pointlen, align 8
  %339 = sub nsw i64 0, %338
  %340 = load i8** %p, align 8
  %341 = getelementptr inbounds i8* %340, i64 %339
  store i8* %341, i8** %p, align 8
  %342 = load i8** %p, align 8
  %343 = load i8** %decimal_point, align 8
  %344 = load i64* %decimal_pointlen, align 8
  %345 = call i8* @memcpy(i8* %342, i8* %343, i64 %344)
  br label %bb71

bb71:                                             ; preds = %bb70, %bb69
  store i64 1, i64* %amt, align 8
  br label %bb72

bb72:                                             ; preds = %bb71, %bb68, %bb67, %bb66, %bb64
  %346 = load i8** %p, align 8
  store i8* %346, i8** %integerlim, align 8
  br label %bb73

bb73:                                             ; preds = %klee_div_zero_check.exit43, %bb72
  %347 = load i64* %amt, align 8
  %int_cast_to_i6413 = bitcast i64 10 to i64
  %348 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %349 = icmp eq i64 %int_cast_to_i6413, 0
  br i1 %349, label %bb.i40, label %klee_div_zero_check.exit41

bb.i40:                                           ; preds = %bb73
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit41:                       ; preds = %bb73
  call void @klee_disable_symbex() nounwind
  %350 = urem i64 %347, 10
  %351 = trunc i64 %350 to i32
  store i32 %351, i32* %digit, align 4
  %352 = load i8** %p, align 8
  %353 = getelementptr inbounds i8* %352, i64 -1
  store i8* %353, i8** %p, align 8
  %354 = load i32* %digit, align 4
  %355 = trunc i32 %354 to i8
  %356 = add i8 %355, 48
  %357 = load i8** %p, align 8
  store i8 %356, i8* %357, align 1
  %358 = load i64* %amt, align 8
  %int_cast_to_i6414 = bitcast i64 10 to i64
  %359 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %360 = icmp eq i64 %int_cast_to_i6414, 0
  br i1 %360, label %bb.i42, label %klee_div_zero_check.exit43

bb.i42:                                           ; preds = %klee_div_zero_check.exit41
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit43:                       ; preds = %klee_div_zero_check.exit41
  call void @klee_disable_symbex() nounwind
  %361 = udiv i64 %358, 10
  store i64 %361, i64* %amt, align 8
  %362 = load i64* %amt, align 8
  %363 = icmp ne i64 %362, 0
  br i1 %363, label %bb73, label %do_grouping

do_grouping:                                      ; preds = %klee_div_zero_check.exit43, %bb30
  %364 = load i32* %opts_addr, align 4
  %365 = and i32 %364, 4
  %366 = icmp ne i32 %365, 0
  br i1 %366, label %bb74, label %bb75

bb74:                                             ; preds = %do_grouping
  %367 = load i8** %integerlim, align 8
  %368 = ptrtoint i8* %367 to i64
  %369 = load i8** %p, align 8
  %370 = ptrtoint i8* %369 to i64
  %371 = sub nsw i64 %368, %370
  %372 = load i8** %p, align 8
  %373 = load i8** %grouping, align 8
  %374 = load i8** %thousands_sep, align 8
  %375 = call i8* @group_number(i8* %372, i64 %371, i8* %373, i8* %374) nounwind
  store i8* %375, i8** %p, align 8
  br label %bb75

bb75:                                             ; preds = %bb74, %do_grouping
  %376 = load i32* %opts_addr, align 4
  %377 = and i32 %376, 128
  %378 = icmp ne i32 %377, 0
  br i1 %378, label %bb76, label %bb95

bb76:                                             ; preds = %bb75
  %379 = load i32* %exponent, align 4
  %380 = icmp slt i32 %379, 0
  br i1 %380, label %bb77, label %bb81

bb77:                                             ; preds = %bb76
  store i32 0, i32* %exponent, align 4
  store i64 1, i64* %power, align 8
  br label %bb80

bb78:                                             ; preds = %bb80
  %381 = load i32* %exponent, align 4
  %382 = add nsw i32 %381, 1
  store i32 %382, i32* %exponent, align 4
  %383 = load i32* %exponent, align 4
  %384 = load i32* %exponent_max, align 4
  %385 = icmp eq i32 %383, %384
  br i1 %385, label %bb81, label %bb79

bb79:                                             ; preds = %bb78
  %386 = load i32* %base, align 4
  %387 = zext i32 %386 to i64
  %388 = load i64* %power, align 8
  %389 = mul i64 %387, %388
  store i64 %389, i64* %power, align 8
  br label %bb80

bb80:                                             ; preds = %bb79, %bb77
  %390 = load i64* %power, align 8
  %391 = load i64* %to_block_size_addr, align 8
  %392 = icmp ult i64 %390, %391
  br i1 %392, label %bb78, label %bb81

bb81:                                             ; preds = %bb80, %bb78, %bb76
  %393 = load i32* %opts_addr, align 4
  %394 = and i32 %393, 256
  %395 = load i32* %exponent, align 4
  %396 = or i32 %394, %395
  %397 = icmp ne i32 %396, 0
  br i1 %397, label %bb82, label %bb84

bb82:                                             ; preds = %bb81
  %398 = load i32* %opts_addr, align 4
  %399 = and i32 %398, 64
  %400 = icmp ne i32 %399, 0
  br i1 %400, label %bb83, label %bb84

bb83:                                             ; preds = %bb82
  %401 = load i8** %psuffix, align 8
  store i8 32, i8* %401, align 1
  %402 = load i8** %psuffix, align 8
  %403 = getelementptr inbounds i8* %402, i64 1
  store i8* %403, i8** %psuffix, align 8
  br label %bb84

bb84:                                             ; preds = %bb83, %bb82, %bb81
  %404 = load i32* %exponent, align 4
  %405 = icmp ne i32 %404, 0
  br i1 %405, label %bb85, label %bb90

bb85:                                             ; preds = %bb84
  %406 = load i32* %opts_addr, align 4
  %407 = and i32 %406, 32
  %408 = icmp ne i32 %407, 0
  br i1 %408, label %bb87, label %bb86

bb86:                                             ; preds = %bb85
  %409 = load i32* %exponent, align 4
  %410 = icmp ne i32 %409, 1
  br i1 %410, label %bb87, label %bb88

bb87:                                             ; preds = %bb86, %bb85
  %411 = load i32* %exponent, align 4
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds [9 x i8]* @power_letter, i64 0, i64 %412
  %414 = load i8* %413, align 1
  store i8 %414, i8* %iftmp.22, align 1
  br label %bb89

bb88:                                             ; preds = %bb86
  store i8 107, i8* %iftmp.22, align 1
  br label %bb89

bb89:                                             ; preds = %bb88, %bb87
  %415 = load i8** %psuffix, align 8
  %416 = load i8* %iftmp.22, align 1
  store i8 %416, i8* %415, align 1
  %417 = load i8** %psuffix, align 8
  %418 = getelementptr inbounds i8* %417, i64 1
  store i8* %418, i8** %psuffix, align 8
  br label %bb90

bb90:                                             ; preds = %bb89, %bb84
  %419 = load i32* %opts_addr, align 4
  %420 = and i32 %419, 256
  %421 = icmp ne i32 %420, 0
  br i1 %421, label %bb91, label %bb95

bb91:                                             ; preds = %bb90
  %422 = load i32* %opts_addr, align 4
  %423 = and i32 %422, 32
  %424 = icmp ne i32 %423, 0
  br i1 %424, label %bb92, label %bb94

bb92:                                             ; preds = %bb91
  %425 = load i32* %exponent, align 4
  %426 = icmp ne i32 %425, 0
  br i1 %426, label %bb93, label %bb94

bb93:                                             ; preds = %bb92
  %427 = load i8** %psuffix, align 8
  store i8 105, i8* %427, align 1
  %428 = load i8** %psuffix, align 8
  %429 = getelementptr inbounds i8* %428, i64 1
  store i8* %429, i8** %psuffix, align 8
  br label %bb94

bb94:                                             ; preds = %bb93, %bb92, %bb91
  %430 = load i8** %psuffix, align 8
  store i8 66, i8* %430, align 1
  %431 = load i8** %psuffix, align 8
  %432 = getelementptr inbounds i8* %431, i64 1
  store i8* %432, i8** %psuffix, align 8
  br label %bb95

bb95:                                             ; preds = %bb94, %bb90, %bb75
  %433 = load i8** %psuffix, align 8
  store i8 0, i8* %433, align 1
  %434 = load i8** %p, align 8
  store i8* %434, i8** %0, align 8
  %435 = load i8** %0, align 8
  store i8* %435, i8** %retval, align 8
  %retval96 = load i8** %retval
  ret i8* %retval96
}

define internal i64 @default_block_size() nounwind {
entry:
  %retval = alloca i64
  %iftmp.24 = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  %1 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8]* @.str6139, i64 0, i64 0)) nounwind
  %2 = icmp ne i8* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i64 512, i64* %iftmp.24, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store i64 1024, i64* %iftmp.24, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %3 = load i64* %iftmp.24, align 8
  store i64 %3, i64* %0, align 8
  %4 = load i64* %0, align 8
  store i64 %4, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define internal i32 @humblock(i8* %spec, i64* %block_size, i32* %options) nounwind {
entry:
  %spec_addr = alloca i8*, align 8
  %block_size_addr = alloca i64*, align 8
  %options_addr = alloca i32*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %i = alloca i32
  %opts = alloca i32
  %ptr = alloca i8*
  %e = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %spec, i8** %spec_addr
  store i64* %block_size, i64** %block_size_addr
  store i32* %options, i32** %options_addr
  store i32 0, i32* %opts, align 4
  %1 = load i8** %spec_addr, align 8
  %2 = icmp ne i8* %1, null
  br i1 %2, label %bb3, label %bb

bb:                                               ; preds = %entry
  %3 = call i8* @getenv(i8* getelementptr inbounds ([11 x i8]* @.str7140, i64 0, i64 0)) nounwind
  store i8* %3, i8** %spec_addr, align 8
  %4 = load i8** %spec_addr, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %bb3, label %bb1

bb1:                                              ; preds = %bb
  %6 = call i8* @getenv(i8* getelementptr inbounds ([10 x i8]* @.str8141, i64 0, i64 0)) nounwind
  store i8* %6, i8** %spec_addr, align 8
  %7 = load i8** %spec_addr, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %9 = call i64 @default_block_size() nounwind
  %10 = load i64** %block_size_addr, align 8
  store i64 %9, i64* %10, align 8
  br label %bb20

bb3:                                              ; preds = %bb1, %bb, %entry
  %11 = load i8** %spec_addr, align 8
  %12 = load i8* %11, align 1
  %13 = icmp eq i8 %12, 39
  br i1 %13, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %14 = load i32* %opts, align 4
  %15 = or i32 %14, 4
  store i32 %15, i32* %opts, align 4
  %16 = load i8** %spec_addr, align 8
  %17 = getelementptr inbounds i8* %16, i64 1
  store i8* %17, i8** %spec_addr, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %18 = load i8** %spec_addr, align 8
  %19 = call i64 @argmatch(i8* %18, i8** getelementptr inbounds ([3 x i8*]* @block_size_args, i64 0, i64 0), i8* bitcast ([2 x i32]* @block_size_opts to i8*), i64 4) nounwind readonly
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %i, align 4
  %21 = load i32* %i, align 4
  %22 = icmp sge i32 %21, 0
  br i1 %22, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %23 = load i32* %i, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [2 x i32]* @block_size_opts, i64 0, i64 %24
  %26 = load i32* %25, align 4
  %27 = load i32* %opts, align 4
  %28 = or i32 %26, %27
  store i32 %28, i32* %opts, align 4
  %29 = load i64** %block_size_addr, align 8
  store i64 1, i64* %29, align 8
  br label %bb20

bb7:                                              ; preds = %bb5
  %30 = load i8** %spec_addr, align 8
  %31 = load i64** %block_size_addr, align 8
  %32 = call i32 @xstrtoumax(i8* %30, i8** %ptr, i32 0, i64* %31, i8* getelementptr inbounds ([18 x i8]* @.str9142, i64 0, i64 0)) nounwind
  store i32 %32, i32* %e, align 4
  %33 = load i32* %e, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %bb8, label %bb18

bb8:                                              ; preds = %bb7
  %35 = load i32** %options_addr, align 8
  store i32 0, i32* %35, align 4
  %36 = load i32* %e, align 4
  store i32 %36, i32* %0, align 4
  br label %bb21

bb10:                                             ; preds = %bb19, %bb18
  %37 = load i8** %ptr, align 8
  %38 = load i8** %spec_addr, align 8
  %39 = icmp eq i8* %38, %37
  br i1 %39, label %bb11, label %bb17

bb11:                                             ; preds = %bb10
  %40 = load i32* %opts, align 4
  %41 = or i32 %40, 128
  store i32 %41, i32* %opts, align 4
  %42 = load i8** %ptr, align 8
  %43 = getelementptr inbounds i8* %42, i64 -1
  %44 = load i8* %43, align 1
  %45 = icmp eq i8 %44, 66
  br i1 %45, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  %46 = load i32* %opts, align 4
  %47 = or i32 %46, 256
  store i32 %47, i32* %opts, align 4
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11
  %48 = load i8** %ptr, align 8
  %49 = getelementptr inbounds i8* %48, i64 -1
  %50 = load i8* %49, align 1
  %51 = icmp ne i8 %50, 66
  br i1 %51, label %bb15, label %bb14

bb14:                                             ; preds = %bb13
  %52 = load i8** %ptr, align 8
  %53 = getelementptr inbounds i8* %52, i64 -2
  %54 = load i8* %53, align 1
  %55 = icmp eq i8 %54, 105
  br i1 %55, label %bb15, label %bb20

bb15:                                             ; preds = %bb14, %bb13
  %56 = load i32* %opts, align 4
  %57 = or i32 %56, 32
  store i32 %57, i32* %opts, align 4
  br label %bb20

bb17:                                             ; preds = %bb10
  %58 = load i8** %spec_addr, align 8
  %59 = getelementptr inbounds i8* %58, i64 1
  store i8* %59, i8** %spec_addr, align 8
  br label %bb18

bb18:                                             ; preds = %bb7, %bb17
  %60 = load i8** %spec_addr, align 8
  %61 = load i8* %60, align 1
  %62 = icmp sle i8 %61, 47
  br i1 %62, label %bb10, label %bb19

bb19:                                             ; preds = %bb18
  %63 = load i8** %spec_addr, align 8
  %64 = load i8* %63, align 1
  %65 = icmp sgt i8 %64, 57
  br i1 %65, label %bb10, label %bb20

bb20:                                             ; preds = %bb14, %bb15, %bb19, %bb6, %bb2
  %66 = load i32** %options_addr, align 8
  %67 = load i32* %opts, align 4
  store i32 %67, i32* %66, align 4
  store i32 0, i32* %0, align 4
  br label %bb21

bb21:                                             ; preds = %bb20, %bb8
  %68 = load i32* %0, align 4
  store i32 %68, i32* %retval, align 4
  %retval22 = load i32* %retval
  ret i32 %retval22
}

define i32 @human_options(i8* %spec, i32* %opts, i64* %block_size) nounwind {
entry:
  %spec_addr = alloca i8*, align 8
  %opts_addr = alloca i32*, align 8
  %block_size_addr = alloca i64*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %e = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %spec, i8** %spec_addr
  store i32* %opts, i32** %opts_addr
  store i64* %block_size, i64** %block_size_addr
  %1 = load i8** %spec_addr, align 8
  %2 = load i64** %block_size_addr, align 8
  %3 = load i32** %opts_addr, align 8
  %4 = call i32 @humblock(i8* %1, i64* %2, i32* %3) nounwind
  store i32 %4, i32* %e, align 4
  %5 = load i64** %block_size_addr, align 8
  %6 = load i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %bb, label %bb1

bb:                                               ; preds = %entry
  %8 = call i64 @default_block_size() nounwind
  %9 = load i64** %block_size_addr, align 8
  store i64 %8, i64* %9, align 8
  store i32 4, i32* %e, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %10 = load i32* %e, align 4
  store i32 %10, i32* %0, align 4
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval2 = load i32* %retval
  ret i32 %retval2
}

define i8* @umaxtostr(i64 %i, i8* %buf) nounwind {
entry:
  %i_addr = alloca i64, align 8
  %buf_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %i, i64* %i_addr
  store i8* %buf, i8** %buf_addr
  %1 = load i8** %buf_addr, align 8
  %2 = getelementptr inbounds i8* %1, i64 20
  store i8* %2, i8** %p, align 8
  %3 = load i8** %p, align 8
  store i8 0, i8* %3, align 1
  br label %bb

bb:                                               ; preds = %klee_div_zero_check.exit3, %entry
  %4 = load i8** %p, align 8
  %5 = getelementptr inbounds i8* %4, i64 -1
  store i8* %5, i8** %p, align 8
  %6 = load i64* %i_addr, align 8
  %int_cast_to_i64 = bitcast i64 10 to i64
  %7 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %8 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %8, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb
  call void @klee_disable_symbex() nounwind
  %9 = urem i64 %6, 10
  %10 = trunc i64 %9 to i8
  %11 = add i8 %10, 48
  %12 = load i8** %p, align 8
  store i8 %11, i8* %12, align 1
  %13 = load i64* %i_addr, align 8
  %int_cast_to_i641 = bitcast i64 10 to i64
  %14 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %15 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %15, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %16 = udiv i64 %13, 10
  store i64 %16, i64* %i_addr, align 8
  %17 = load i64* %i_addr, align 8
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %bb, label %bb1

bb1:                                              ; preds = %klee_div_zero_check.exit3
  %19 = load i8** %p, align 8
  store i8* %19, i8** %0, align 8
  %20 = load i8** %0, align 8
  store i8* %20, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define internal zeroext i8 @wc_ensure_printable(i32* %wchars) nounwind {
entry:
  %wchars_addr = alloca i32*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %replaced = alloca i8
  %wc = alloca i32*
  %"alloca point" = bitcast i32 0 to i32
  store i32* %wchars, i32** %wchars_addr
  store i8 0, i8* %replaced, align 1
  %1 = load i32** %wchars_addr, align 8
  store i32* %1, i32** %wc, align 8
  br label %bb3

bb:                                               ; preds = %bb3
  %2 = load i32** %wc, align 8
  %3 = load i32* %2, align 4
  %4 = call i32 @iswprint(i32 %3) nounwind readonly
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %6 = load i32** %wc, align 8
  store i32 65533, i32* %6, align 4
  store i8 1, i8* %replaced, align 1
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %7 = load i32** %wc, align 8
  %8 = getelementptr inbounds i32* %7, i64 1
  store i32* %8, i32** %wc, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %entry
  %9 = load i32** %wc, align 8
  %10 = load i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %bb, label %bb4

bb4:                                              ; preds = %bb3
  %12 = load i8* %replaced, align 1
  %13 = zext i8 %12 to i32
  store i32 %13, i32* %0, align 4
  %14 = load i32* %0, align 4
  store i32 %14, i32* %retval, align 4
  %retval5 = load i32* %retval
  %retval56 = trunc i32 %retval5 to i8
  ret i8 %retval56
}

define internal i64 @wc_truncate(i32* %wc, i64 %width) nounwind {
entry:
  %wc_addr = alloca i32*, align 8
  %width_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %cells = alloca i64
  %next_cells = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32* %wc, i32** %wc_addr
  store i64 %width, i64* %width_addr
  store i64 0, i64* %cells, align 8
  store i32 0, i32* %next_cells, align 4
  br label %bb4

bb:                                               ; preds = %bb4
  %1 = load i32** %wc_addr, align 8
  %2 = load i32* %1, align 4
  %3 = call i32 @wcwidth(i32 %2) nounwind
  store i32 %3, i32* %next_cells, align 4
  %4 = load i32* %next_cells, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %6 = load i32** %wc_addr, align 8
  store i32 65533, i32* %6, align 4
  store i32 1, i32* %next_cells, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %7 = load i32* %next_cells, align 4
  %8 = sext i32 %7 to i64
  %9 = load i64* %cells, align 8
  %10 = add i64 %8, %9
  %11 = load i64* %width_addr, align 8
  %12 = icmp ugt i64 %10, %11
  br i1 %12, label %bb5, label %bb3

bb3:                                              ; preds = %bb2
  %13 = load i32* %next_cells, align 4
  %14 = sext i32 %13 to i64
  %15 = load i64* %cells, align 8
  %16 = add i64 %14, %15
  store i64 %16, i64* %cells, align 8
  %17 = load i32** %wc_addr, align 8
  %18 = getelementptr inbounds i32* %17, i64 1
  store i32* %18, i32** %wc_addr, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %entry
  %19 = load i32** %wc_addr, align 8
  %20 = load i32* %19, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %bb, label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %22 = load i32** %wc_addr, align 8
  store i32 0, i32* %22, align 4
  %23 = load i64* %cells, align 8
  store i64 %23, i64* %0, align 8
  %24 = load i64* %0, align 8
  store i64 %24, i64* %retval, align 8
  %retval6 = load i64* %retval
  ret i64 %retval6
}

define internal i8* @mbs_align_pad(i8* %dest, i8* %dest_end, i64 %n_spaces) nounwind {
entry:
  %dest_addr = alloca i8*, align 8
  %dest_end_addr = alloca i8*, align 8
  %n_spaces_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dest, i8** %dest_addr
  store i8* %dest_end, i8** %dest_end_addr
  store i64 %n_spaces, i64* %n_spaces_addr
  br label %bb1

bb:                                               ; preds = %bb2
  %1 = load i8** %dest_addr, align 8
  store i8 32, i8* %1, align 1
  %2 = load i8** %dest_addr, align 8
  %3 = getelementptr inbounds i8* %2, i64 1
  store i8* %3, i8** %dest_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %4 = load i64* %n_spaces_addr, align 8
  %5 = sub i64 %4, 1
  store i64 %5, i64* %n_spaces_addr, align 8
  %6 = load i64* %n_spaces_addr, align 8
  %7 = icmp eq i64 %6, -1
  br i1 %7, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %8 = load i8** %dest_addr, align 8
  %9 = load i8** %dest_end_addr, align 8
  %10 = icmp ult i8* %8, %9
  br i1 %10, label %bb, label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i8** %dest_addr, align 8
  store i8 0, i8* %11, align 1
  %12 = load i8** %dest_addr, align 8
  store i8* %12, i8** %0, align 8
  %13 = load i8** %0, align 8
  store i8* %13, i8** %retval, align 8
  %retval4 = load i8** %retval
  ret i8* %retval4
}

define i64 @mbsalign(i8* %src, i8* %dest, i64 %dest_size, i64* %width, i32 %align, i32 %flags) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %dest_addr = alloca i8*, align 8
  %dest_size_addr = alloca i64, align 8
  %width_addr = alloca i64*, align 8
  %align_addr = alloca i32, align 4
  %flags_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %ret = alloca i64
  %src_size = alloca i64
  %newstr = alloca i8*
  %str_wc = alloca i32*
  %str_to_print = alloca i8*
  %n_cols = alloca i64
  %n_used_bytes = alloca i64
  %n_spaces = alloca i64
  %conversion = alloca i8
  %wc_enabled = alloca i8
  %src_chars = alloca i64
  %start_spaces = alloca i64
  %end_spaces = alloca i64
  %space_left = alloca i64
  %dest_end = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i8* %dest, i8** %dest_addr
  store i64 %dest_size, i64* %dest_size_addr
  store i64* %width, i64** %width_addr
  store i32 %align, i32* %align_addr
  store i32 %flags, i32* %flags_addr
  store i64 -1, i64* %ret, align 8
  %1 = load i8** %src_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  %3 = add i64 %2, 1
  store i64 %3, i64* %src_size, align 8
  store i8* null, i8** %newstr, align 8
  store i32* null, i32** %str_wc, align 8
  %4 = load i8** %src_addr, align 8
  store i8* %4, i8** %str_to_print, align 8
  %5 = load i64* %src_size, align 8
  %6 = sub i64 %5, 1
  store i64 %6, i64* %n_cols, align 8
  %7 = load i64* %n_cols, align 8
  store i64 %7, i64* %n_used_bytes, align 8
  store i64 0, i64* %n_spaces, align 8
  store i8 0, i8* %conversion, align 1
  store i8 0, i8* %wc_enabled, align 1
  %8 = load i32* %flags_addr, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %bb, label %bb8

bb:                                               ; preds = %entry
  %11 = call i64 @_stdlib_mb_cur_max() nounwind
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %bb1, label %bb8

bb1:                                              ; preds = %bb
  %13 = load i8** %src_addr, align 8
  %14 = call i64 @mbstowcs(i32* noalias null, i8* noalias %13, i64 0) nounwind
  store i64 %14, i64* %src_chars, align 8
  %15 = load i64* %src_chars, align 8
  %16 = icmp eq i64 %15, -1
  br i1 %16, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %17 = load i32* %flags_addr, align 4
  %18 = and i32 %17, 1
  %19 = trunc i32 %18 to i8
  %toBool = icmp ne i8 %19, 0
  br i1 %toBool, label %mbsalign_unibyte, label %mbsalign_cleanup

bb3:                                              ; preds = %bb1
  %20 = load i64* %src_chars, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %src_chars, align 8
  %22 = load i64* %src_chars, align 8
  %23 = mul i64 %22, 4
  %24 = call noalias i8* @malloc(i64 %23) nounwind
  %25 = bitcast i8* %24 to i32*
  store i32* %25, i32** %str_wc, align 8
  %26 = load i32** %str_wc, align 8
  %27 = icmp eq i32* %26, null
  br i1 %27, label %bb4, label %bb6

bb4:                                              ; preds = %bb3
  %28 = load i32* %flags_addr, align 4
  %29 = and i32 %28, 1
  %30 = trunc i32 %29 to i8
  %toBool5 = icmp ne i8 %30, 0
  br i1 %toBool5, label %mbsalign_unibyte, label %mbsalign_cleanup

bb6:                                              ; preds = %bb3
  %31 = load i32** %str_wc, align 8
  %32 = load i8** %src_addr, align 8
  %33 = load i64* %src_chars, align 8
  %34 = call i64 @mbstowcs(i32* noalias %31, i8* noalias %32, i64 %33) nounwind
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %36 = load i64* %src_chars, align 8
  %37 = sub i64 %36, 1
  %38 = load i32** %str_wc, align 8
  %39 = getelementptr inbounds i32* %38, i64 %37
  store i32 0, i32* %39, align 1
  store i8 1, i8* %wc_enabled, align 1
  %40 = load i32** %str_wc, align 8
  %41 = call zeroext i8 @wc_ensure_printable(i32* %40) nounwind
  store i8 %41, i8* %conversion, align 1
  %42 = load i32** %str_wc, align 8
  %43 = load i64* %src_chars, align 8
  %44 = call i32 @wcswidth(i32* %42, i64 %43) nounwind
  %45 = sext i32 %44 to i64
  store i64 %45, i64* %n_cols, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb, %entry
  %46 = load i8* %wc_enabled, align 1
  %toBool9 = icmp ne i8 %46, 0
  br i1 %toBool9, label %bb10, label %mbsalign_unibyte

bb10:                                             ; preds = %bb8
  %47 = load i8* %conversion, align 1
  %toBool11 = icmp ne i8 %47, 0
  br i1 %toBool11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %48 = load i64** %width_addr, align 8
  %49 = load i64* %48, align 8
  %50 = load i64* %n_cols, align 8
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %bb13, label %mbsalign_unibyte

bb13:                                             ; preds = %bb12, %bb10
  %52 = load i8* %conversion, align 1
  %toBool14 = icmp ne i8 %52, 0
  br i1 %toBool14, label %bb15, label %bb16

bb15:                                             ; preds = %bb13
  %53 = load i32** %str_wc, align 8
  %54 = call i64 @wcstombs(i8* noalias null, i32* noalias %53, i64 0) nounwind
  %55 = add i64 %54, 1
  store i64 %55, i64* %src_size, align 8
  br label %bb16

bb16:                                             ; preds = %bb15, %bb13
  %56 = load i64* %src_size, align 8
  %57 = call noalias i8* @malloc(i64 %56) nounwind
  store i8* %57, i8** %newstr, align 8
  %58 = load i8** %newstr, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %bb17, label %bb19

bb17:                                             ; preds = %bb16
  %60 = load i32* %flags_addr, align 4
  %61 = and i32 %60, 1
  %62 = trunc i32 %61 to i8
  %toBool18 = icmp ne i8 %62, 0
  br i1 %toBool18, label %mbsalign_unibyte, label %mbsalign_cleanup

bb19:                                             ; preds = %bb16
  %63 = load i8** %newstr, align 8
  store i8* %63, i8** %str_to_print, align 8
  %64 = load i64** %width_addr, align 8
  %65 = load i64* %64, align 8
  %66 = load i32** %str_wc, align 8
  %67 = call i64 @wc_truncate(i32* %66, i64 %65) nounwind
  store i64 %67, i64* %n_cols, align 8
  %68 = load i8** %newstr, align 8
  %69 = load i32** %str_wc, align 8
  %70 = load i64* %src_size, align 8
  %71 = call i64 @wcstombs(i8* noalias %68, i32* noalias %69, i64 %70) nounwind
  store i64 %71, i64* %n_used_bytes, align 8
  br label %mbsalign_unibyte

mbsalign_unibyte:                                 ; preds = %bb19, %bb17, %bb12, %bb8, %bb4, %bb2
  %72 = load i64** %width_addr, align 8
  %73 = load i64* %72, align 8
  %74 = load i64* %n_cols, align 8
  %75 = icmp ult i64 %73, %74
  br i1 %75, label %bb20, label %bb21

bb20:                                             ; preds = %mbsalign_unibyte
  %76 = load i64** %width_addr, align 8
  %77 = load i64* %76, align 8
  store i64 %77, i64* %n_cols, align 8
  %78 = load i64* %n_cols, align 8
  store i64 %78, i64* %n_used_bytes, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %mbsalign_unibyte
  %79 = load i64** %width_addr, align 8
  %80 = load i64* %79, align 8
  %81 = load i64* %n_cols, align 8
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  %83 = load i64** %width_addr, align 8
  %84 = load i64* %83, align 8
  %85 = load i64* %n_cols, align 8
  %86 = sub i64 %84, %85
  store i64 %86, i64* %n_spaces, align 8
  br label %bb23

bb23:                                             ; preds = %bb22, %bb21
  %87 = load i64** %width_addr, align 8
  %88 = load i64* %n_cols, align 8
  store i64 %88, i64* %87, align 8
  %89 = load i32* %align_addr, align 4
  switch i32 %89, label %bb26 [
    i32 0, label %bb24
    i32 1, label %bb25
  ]

bb24:                                             ; preds = %bb23
  store i64 0, i64* %start_spaces, align 8
  %90 = load i64* %n_spaces, align 8
  store i64 %90, i64* %end_spaces, align 8
  br label %bb27

bb25:                                             ; preds = %bb23
  %91 = load i64* %n_spaces, align 8
  store i64 %91, i64* %start_spaces, align 8
  store i64 0, i64* %end_spaces, align 8
  br label %bb27

bb26:                                             ; preds = %bb23
  %92 = load i64* %n_spaces, align 8
  %int_cast_to_i64 = bitcast i64 2 to i64
  %93 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %94 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %94, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb26
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb26
  call void @klee_disable_symbex() nounwind
  %95 = udiv i64 %92, 2
  %96 = load i64* %n_spaces, align 8
  %97 = and i64 %96, 1
  %98 = add i64 %95, %97
  store i64 %98, i64* %start_spaces, align 8
  %99 = load i64* %n_spaces, align 8
  %int_cast_to_i641 = bitcast i64 2 to i64
  %100 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %101 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %101, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %102 = udiv i64 %99, 2
  store i64 %102, i64* %end_spaces, align 8
  br label %bb27

bb27:                                             ; preds = %klee_div_zero_check.exit3, %bb25, %bb24
  %103 = load i32* %flags_addr, align 4
  %104 = and i32 %103, 4
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  store i64 0, i64* %start_spaces, align 8
  br label %bb29

bb29:                                             ; preds = %bb28, %bb27
  %106 = load i32* %flags_addr, align 4
  %107 = and i32 %106, 8
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  store i64 0, i64* %end_spaces, align 8
  br label %bb31

bb31:                                             ; preds = %bb30, %bb29
  %109 = load i64* %dest_size_addr, align 8
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %bb32, label %bb34

bb32:                                             ; preds = %bb31
  %111 = load i8** %dest_addr, align 8
  %112 = load i64* %dest_size_addr, align 8
  %113 = getelementptr inbounds i8* %111, i64 %112
  %114 = getelementptr inbounds i8* %113, i64 -1
  store i8* %114, i8** %dest_end, align 8
  %115 = load i8** %dest_addr, align 8
  %116 = load i8** %dest_end, align 8
  %117 = load i64* %start_spaces, align 8
  %118 = call i8* @mbs_align_pad(i8* %115, i8* %116, i64 %117) nounwind
  store i8* %118, i8** %dest_addr, align 8
  %119 = load i8** %dest_end, align 8
  %120 = ptrtoint i8* %119 to i64
  %121 = load i8** %dest_addr, align 8
  %122 = ptrtoint i8* %121 to i64
  %123 = sub nsw i64 %120, %122
  store i64 %123, i64* %space_left, align 8
  %124 = load i64* %space_left, align 8
  %125 = load i64* %n_used_bytes, align 8
  %126 = icmp ule i64 %124, %125
  %min = select i1 %126, i64 %124, i64 %125
  %127 = load i8** %dest_addr, align 8
  %128 = load i8** %str_to_print, align 8
  %129 = call i8* @mempcpy(i8* noalias %127, i8* noalias %128, i64 %min) nounwind
  store i8* %129, i8** %dest_addr, align 8
  %130 = load i8** %dest_addr, align 8
  %131 = load i8** %dest_end, align 8
  %132 = load i64* %end_spaces, align 8
  %133 = call i8* @mbs_align_pad(i8* %130, i8* %131, i64 %132) nounwind
  br label %bb34

bb34:                                             ; preds = %bb32, %bb31
  %134 = load i64* %start_spaces, align 8
  %135 = load i64* %end_spaces, align 8
  %136 = add i64 %134, %135
  %137 = load i64* %n_used_bytes, align 8
  %138 = add i64 %136, %137
  store i64 %138, i64* %ret, align 8
  br label %mbsalign_cleanup

mbsalign_cleanup:                                 ; preds = %bb34, %bb17, %bb4, %bb2
  %139 = load i32** %str_wc, align 8
  %140 = bitcast i32* %139 to i8*
  call void @free(i8* %140) nounwind
  %141 = load i8** %newstr, align 8
  call void @free(i8* %141) nounwind
  %142 = load i64* %ret, align 8
  store i64 %142, i64* %0, align 8
  %143 = load i64* %0, align 8
  store i64 %143, i64* %retval, align 8
  %retval35 = load i64* %retval
  ret i64 %retval35
}

define i8* @ambsalign(i8* %src, i64* %width, i32 %align, i32 %flags) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %width_addr = alloca i64*, align 8
  %align_addr = alloca i32, align 4
  %flags_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %orig_width = alloca i64
  %size = alloca i64
  %req = alloca i64
  %buf = alloca i8*
  %nbuf = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i64* %width, i64** %width_addr
  store i32 %align, i32* %align_addr
  store i32 %flags, i32* %flags_addr
  %1 = load i64** %width_addr, align 8
  %2 = load i64* %1, align 8
  store i64 %2, i64* %orig_width, align 8
  %3 = load i64** %width_addr, align 8
  %4 = load i64* %3, align 8
  store i64 %4, i64* %size, align 8
  %5 = load i64* %size, align 8
  store i64 %5, i64* %req, align 8
  store i8* null, i8** %buf, align 8
  br label %bb4

bb:                                               ; preds = %bb4
  %6 = load i64* %req, align 8
  %7 = add i64 %6, 1
  store i64 %7, i64* %size, align 8
  %8 = load i8** %buf, align 8
  %9 = load i64* %size, align 8
  %10 = call i8* @realloc(i8* %8, i64 %9) nounwind
  store i8* %10, i8** %nbuf, align 8
  %11 = load i8** %nbuf, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %13 = load i8** %buf, align 8
  call void @free(i8* %13) nounwind
  store i8* null, i8** %buf, align 8
  br label %bb5

bb2:                                              ; preds = %bb
  %14 = load i8** %nbuf, align 8
  store i8* %14, i8** %buf, align 8
  %15 = load i64** %width_addr, align 8
  %16 = load i64* %orig_width, align 8
  store i64 %16, i64* %15, align 8
  %17 = load i8** %src_addr, align 8
  %18 = load i8** %buf, align 8
  %19 = load i64* %size, align 8
  %20 = load i64** %width_addr, align 8
  %21 = load i32* %align_addr, align 4
  %22 = load i32* %flags_addr, align 4
  %23 = call i64 @mbsalign(i8* %17, i8* %18, i64 %19, i64* %20, i32 %21, i32 %22) nounwind
  store i64 %23, i64* %req, align 8
  %24 = load i64* %req, align 8
  %25 = icmp eq i64 %24, -1
  br i1 %25, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %26 = load i8** %buf, align 8
  call void @free(i8* %26) nounwind
  store i8* null, i8** %buf, align 8
  br label %bb5

bb4:                                              ; preds = %bb2, %entry
  %27 = load i64* %req, align 8
  %28 = load i64* %size, align 8
  %29 = icmp uge i64 %27, %28
  br i1 %29, label %bb, label %bb5

bb5:                                              ; preds = %bb4, %bb3, %bb1
  %30 = load i8** %buf, align 8
  store i8* %30, i8** %0, align 8
  %31 = load i8** %0, align 8
  store i8* %31, i8** %retval, align 8
  %retval6 = load i8** %retval
  ret i8* %retval6
}

declare i8* @realloc(i8*, i64) nounwind

define i32 @gnu_mbswidth(i8* %string, i32 %flags) nounwind {
entry:
  %string_addr = alloca i8*, align 8
  %flags_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  store i32 %flags, i32* %flags_addr
  %1 = load i8** %string_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  %3 = load i8** %string_addr, align 8
  %4 = load i32* %flags_addr, align 4
  %5 = call i32 @mbsnwidth(i8* %3, i64 %2, i32 %4) nounwind
  store i32 %5, i32* %0, align 4
  %6 = load i32* %0, align 4
  store i32 %6, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @mbsnwidth(i8* %string, i64 %nbytes, i32 %flags) nounwind {
entry:
  %string_addr = alloca i8*, align 8
  %nbytes_addr = alloca i64, align 8
  %flags_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %p = alloca i8*
  %plimit = alloca i8*
  %width = alloca i32
  %mbstate = alloca %struct.mbstate_t
  %wc = alloca i32
  %bytes = alloca i64
  %w = alloca i32
  %c = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  store i64 %nbytes, i64* %nbytes_addr
  store i32 %flags, i32* %flags_addr
  %1 = load i8** %string_addr, align 8
  store i8* %1, i8** %p, align 8
  %2 = load i8** %p, align 8
  %3 = load i64* %nbytes_addr, align 8
  %4 = getelementptr inbounds i8* %2, i64 %3
  store i8* %4, i8** %plimit, align 8
  store i32 0, i32* %width, align 4
  %5 = call i64 @_stdlib_mb_cur_max() nounwind
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %bb25, label %bb37

bb1:                                              ; preds = %bb25
  %7 = load i8** %p, align 8
  %8 = load i8* %7, align 1
  %9 = sext i8 %8 to i32
  switch i32 %9, label %bb3 [
    i32 32, label %bb2
    i32 33, label %bb2
    i32 34, label %bb2
    i32 35, label %bb2
    i32 37, label %bb2
    i32 38, label %bb2
    i32 39, label %bb2
    i32 40, label %bb2
    i32 41, label %bb2
    i32 42, label %bb2
    i32 43, label %bb2
    i32 44, label %bb2
    i32 45, label %bb2
    i32 46, label %bb2
    i32 47, label %bb2
    i32 48, label %bb2
    i32 49, label %bb2
    i32 50, label %bb2
    i32 51, label %bb2
    i32 52, label %bb2
    i32 53, label %bb2
    i32 54, label %bb2
    i32 55, label %bb2
    i32 56, label %bb2
    i32 57, label %bb2
    i32 58, label %bb2
    i32 59, label %bb2
    i32 60, label %bb2
    i32 61, label %bb2
    i32 62, label %bb2
    i32 63, label %bb2
    i32 65, label %bb2
    i32 66, label %bb2
    i32 67, label %bb2
    i32 68, label %bb2
    i32 69, label %bb2
    i32 70, label %bb2
    i32 71, label %bb2
    i32 72, label %bb2
    i32 73, label %bb2
    i32 74, label %bb2
    i32 75, label %bb2
    i32 76, label %bb2
    i32 77, label %bb2
    i32 78, label %bb2
    i32 79, label %bb2
    i32 80, label %bb2
    i32 81, label %bb2
    i32 82, label %bb2
    i32 83, label %bb2
    i32 84, label %bb2
    i32 85, label %bb2
    i32 86, label %bb2
    i32 87, label %bb2
    i32 88, label %bb2
    i32 89, label %bb2
    i32 90, label %bb2
    i32 91, label %bb2
    i32 92, label %bb2
    i32 93, label %bb2
    i32 94, label %bb2
    i32 95, label %bb2
    i32 97, label %bb2
    i32 98, label %bb2
    i32 99, label %bb2
    i32 100, label %bb2
    i32 101, label %bb2
    i32 102, label %bb2
    i32 103, label %bb2
    i32 104, label %bb2
    i32 105, label %bb2
    i32 106, label %bb2
    i32 107, label %bb2
    i32 108, label %bb2
    i32 109, label %bb2
    i32 110, label %bb2
    i32 111, label %bb2
    i32 112, label %bb2
    i32 113, label %bb2
    i32 114, label %bb2
    i32 115, label %bb2
    i32 116, label %bb2
    i32 117, label %bb2
    i32 118, label %bb2
    i32 119, label %bb2
    i32 120, label %bb2
    i32 121, label %bb2
    i32 122, label %bb2
    i32 123, label %bb2
    i32 124, label %bb2
    i32 125, label %bb2
    i32 126, label %bb2
  ]

bb2:                                              ; preds = %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %b
  %10 = load i8** %p, align 8
  %11 = getelementptr inbounds i8* %10, i64 1
  store i8* %11, i8** %p, align 8
  %12 = load i32* %width, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %width, align 4
  br label %bb25

bb3:                                              ; preds = %bb1
  %mbstate4 = bitcast %struct.mbstate_t* %mbstate to i8*
  %14 = call i8* @memset(i8* %mbstate4, i32 0, i64 8)
  br label %bb5

bb5:                                              ; preds = %bb24, %bb3
  %15 = load i8** %plimit, align 8
  %16 = ptrtoint i8* %15 to i64
  %17 = load i8** %p, align 8
  %18 = ptrtoint i8* %17 to i64
  %19 = sub nsw i64 %16, %18
  %20 = load i8** %p, align 8
  %21 = call i64 bitcast (i64 (i32*, i8*, i64, %struct.__mbstate_t*)* @mbrtowc to i64 (i32*, i8*, i64, %struct.mbstate_t*)*)(i32* noalias %wc, i8* noalias %20, i64 %19, %struct.mbstate_t* noalias %mbstate) nounwind
  store i64 %21, i64* %bytes, align 8
  %22 = load i64* %bytes, align 8
  %23 = icmp eq i64 %22, -1
  br i1 %23, label %bb6, label %bb9

bb6:                                              ; preds = %bb5
  %24 = load i32* %flags_addr, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %27 = load i8** %p, align 8
  %28 = getelementptr inbounds i8* %27, i64 1
  store i8* %28, i8** %p, align 8
  %29 = load i32* %width, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %width, align 4
  br label %bb25

bb8:                                              ; preds = %bb6
  store i32 -1, i32* %0, align 4
  br label %bb39

bb9:                                              ; preds = %bb5
  %31 = load i64* %bytes, align 8
  %32 = icmp eq i64 %31, -2
  br i1 %32, label %bb10, label %bb13

bb10:                                             ; preds = %bb9
  %33 = load i32* %flags_addr, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %36 = load i8** %plimit, align 8
  store i8* %36, i8** %p, align 8
  %37 = load i32* %width, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %width, align 4
  br label %bb25

bb12:                                             ; preds = %bb10
  store i32 -1, i32* %0, align 4
  br label %bb39

bb13:                                             ; preds = %bb9
  %39 = load i64* %bytes, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %bb14, label %bb15

bb14:                                             ; preds = %bb13
  store i64 1, i64* %bytes, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  %41 = load i32* %wc, align 4
  %42 = call i32 @wcwidth(i32 %41) nounwind
  store i32 %42, i32* %w, align 4
  %43 = load i32* %w, align 4
  %44 = icmp sge i32 %43, 0
  br i1 %44, label %bb16, label %bb18

bb16:                                             ; preds = %bb15
  %45 = load i32* %width, align 4
  %46 = sub nsw i32 2147483647, %45
  %47 = load i32* %w, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %overflow, label %bb17

bb17:                                             ; preds = %bb16
  %49 = load i32* %width, align 4
  %50 = load i32* %w, align 4
  %51 = add nsw i32 %49, %50
  store i32 %51, i32* %width, align 4
  br label %bb24

bb18:                                             ; preds = %bb15
  %52 = load i32* %flags_addr, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %bb19, label %bb23

bb19:                                             ; preds = %bb18
  %55 = load i32* %wc, align 4
  %56 = call i32 @iswcntrl(i32 %55) nounwind readonly
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %bb20, label %bb24

bb20:                                             ; preds = %bb19
  %58 = load i32* %width, align 4
  %59 = icmp eq i32 %58, 2147483647
  br i1 %59, label %overflow, label %bb21

bb21:                                             ; preds = %bb20
  %60 = load i32* %width, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %width, align 4
  br label %bb24

bb23:                                             ; preds = %bb18
  store i32 -1, i32* %0, align 4
  br label %bb39

bb24:                                             ; preds = %bb19, %bb21, %bb17
  %62 = load i8** %p, align 8
  %63 = load i64* %bytes, align 8
  %64 = getelementptr inbounds i8* %62, i64 %63
  store i8* %64, i8** %p, align 8
  %65 = call i32 bitcast (i32 (%struct.__mbstate_t*)* @mbsinit to i32 (%struct.mbstate_t*)*)(%struct.mbstate_t* %mbstate) nounwind readonly
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %bb5, label %bb25

bb25:                                             ; preds = %entry, %bb24, %bb11, %bb7, %bb2
  %67 = load i8** %p, align 8
  %68 = load i8** %plimit, align 8
  %69 = icmp ult i8* %67, %68
  br i1 %69, label %bb1, label %bb26

bb26:                                             ; preds = %bb25
  %70 = load i32* %width, align 4
  store i32 %70, i32* %0, align 4
  br label %bb39

bb28:                                             ; preds = %bb37
  %71 = load i8** %p, align 8
  %72 = load i8* %71, align 1
  store i8 %72, i8* %c, align 1
  %73 = load i8** %p, align 8
  %74 = getelementptr inbounds i8* %73, i64 1
  store i8* %74, i8** %p, align 8
  %75 = call i16** @__ctype_b_loc() nounwind readnone
  %76 = load i16** %75, align 8
  %77 = load i8* %c, align 1
  %78 = zext i8 %77 to i32
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i16* %76, i64 %79
  %81 = load i16* %80, align 1
  %82 = zext i16 %81 to i32
  %83 = and i32 %82, 16384
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %bb29, label %bb31

bb29:                                             ; preds = %bb28
  %85 = load i32* %width, align 4
  %86 = icmp eq i32 %85, 2147483647
  br i1 %86, label %overflow, label %bb30

bb30:                                             ; preds = %bb29
  %87 = load i32* %width, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %width, align 4
  br label %bb37

bb31:                                             ; preds = %bb28
  %89 = load i32* %flags_addr, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %bb32, label %bb36

bb32:                                             ; preds = %bb31
  %92 = call i16** @__ctype_b_loc() nounwind readnone
  %93 = load i16** %92, align 8
  %94 = load i8* %c, align 1
  %95 = zext i8 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i16* %93, i64 %96
  %98 = load i16* %97, align 1
  %99 = zext i16 %98 to i32
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %bb33, label %bb37

bb33:                                             ; preds = %bb32
  %102 = load i32* %width, align 4
  %103 = icmp eq i32 %102, 2147483647
  br i1 %103, label %overflow, label %bb34

bb34:                                             ; preds = %bb33
  %104 = load i32* %width, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %width, align 4
  br label %bb37

bb36:                                             ; preds = %bb31
  store i32 -1, i32* %0, align 4
  br label %bb39

bb37:                                             ; preds = %bb32, %bb34, %entry, %bb30
  %106 = load i8** %p, align 8
  %107 = load i8** %plimit, align 8
  %108 = icmp ult i8* %106, %107
  br i1 %108, label %bb28, label %bb38

bb38:                                             ; preds = %bb37
  %109 = load i32* %width, align 4
  store i32 %109, i32* %0, align 4
  br label %bb39

overflow:                                         ; preds = %bb33, %bb29, %bb20, %bb16
  store i32 2147483647, i32* %0, align 4
  br label %bb39

bb39:                                             ; preds = %overflow, %bb38, %bb36, %bb26, %bb23, %bb12, %bb8
  %110 = load i32* %0, align 4
  store i32 %110, i32* %retval, align 4
  %retval40 = load i32* %retval
  ret i32 %retval40
}

declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) nounwind

define void @set_program_name(i8* %argv0) nounwind {
entry:
  %argv0_addr = alloca i8*, align 8
  %iftmp.2 = alloca i8*
  %slash = alloca i8*
  %base = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %argv0, i8** %argv0_addr
  %0 = load i8** %argv0_addr, align 8
  %1 = icmp eq i8* %0, null
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %2 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %3 = bitcast %struct.FILE* %2 to i8*
  %4 = call i64 bitcast (i64 (i8*, i64, i64, %4*)* @fwrite_unlocked to i64 (i8*, i64, i64, i8*)*)(i8* getelementptr inbounds ([56 x i8]* @.str149, i64 0, i64 0), i64 1, i64 55, i8* %3) nounwind
  call void @abort() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %5 = load i8** %argv0_addr, align 8
  %6 = call i8* @strrchr(i8* %5, i32 47) nounwind readonly
  store i8* %6, i8** %slash, align 8
  %7 = load i8** %slash, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %9 = load i8** %slash, align 8
  %10 = getelementptr inbounds i8* %9, i64 1
  store i8* %10, i8** %iftmp.2, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %11 = load i8** %argv0_addr, align 8
  store i8* %11, i8** %iftmp.2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %12 = load i8** %iftmp.2, align 8
  store i8* %12, i8** %base, align 8
  %13 = load i8** %base, align 8
  %14 = ptrtoint i8* %13 to i64
  %15 = load i8** %argv0_addr, align 8
  %16 = ptrtoint i8* %15 to i64
  %17 = sub nsw i64 %14, %16
  %18 = icmp sgt i64 %17, 6
  br i1 %18, label %bb5, label %bb8

bb5:                                              ; preds = %bb4
  %19 = load i8** %base, align 8
  %20 = getelementptr inbounds i8* %19, i64 -7
  %21 = call i32 @strncmp(i8* %20, i8* getelementptr inbounds ([8 x i8]* @.str1150, i64 0, i64 0), i64 7) nounwind readonly
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %bb6, label %bb8

bb6:                                              ; preds = %bb5
  %23 = load i8** %base, align 8
  store i8* %23, i8** %argv0_addr, align 8
  %24 = load i8** %base, align 8
  %25 = call i32 @strncmp(i8* %24, i8* getelementptr inbounds ([4 x i8]* @.str2151, i64 0, i64 0), i64 3) nounwind readonly
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %27 = load i8** %base, align 8
  %28 = getelementptr inbounds i8* %27, i64 3
  store i8* %28, i8** %argv0_addr, align 8
  %29 = load i8** %argv0_addr, align 8
  store i8* %29, i8** @program_invocation_short_name, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb5, %bb4
  %30 = load i8** %argv0_addr, align 8
  store i8* %30, i8** @program_name, align 8
  %31 = load i8** %argv0_addr, align 8
  store i8* %31, i8** @program_invocation_name, align 8
  ret void
}

define internal zeroext i8 @mbsstr_trimmed_wordbounded(i8* %string, i8* %sub) nounwind {
entry:
  %string_addr = alloca i8*, align 8
  %sub_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.23 = alloca i32
  %iftmp.22 = alloca i32
  %iftmp.21 = alloca i32
  %iftmp.20 = alloca i32
  %iftmp.19 = alloca i32
  %tsub = alloca i8*
  %found = alloca i8
  %tsub_in_string = alloca i8*
  %string_iter = alloca %struct.mbui_iterator_t
  %word_boundary_before = alloca i8
  %word_boundary_after = alloca i8
  %last_char_before_tsub = alloca %struct.mbchar
  %tsub_iter = alloca %struct.mbui_iterator_t
  %first_char_after_tsub = alloca %struct.mbchar
  %word_boundary_before69 = alloca i8
  %p = alloca i8*
  %word_boundary_after70 = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  store i8* %sub, i8** %sub_addr
  %1 = load i8** %sub_addr, align 8
  %2 = call i8* @trim2(i8* %1, i32 2) nounwind
  store i8* %2, i8** %tsub, align 8
  store i8 0, i8* %found, align 1
  br label %bb83

bb:                                               ; preds = %bb83
  %3 = load i8** %string_addr, align 8
  %4 = load i8** %tsub, align 8
  %5 = call i8* @mbsstr(i8* %3, i8* %4) nounwind readonly
  store i8* %5, i8** %tsub_in_string, align 8
  %6 = load i8** %tsub_in_string, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %bb84, label %bb1

bb1:                                              ; preds = %bb
  %8 = call i64 @_stdlib_mb_cur_max() nounwind
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %bb2, label %bb68

bb2:                                              ; preds = %bb1
  %10 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %11 = getelementptr inbounds %struct.mbchar* %10, i32 0, i32 0
  %12 = load i8** %string_addr, align 8
  store i8* %12, i8** %11, align 8
  %13 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 0
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 1
  %15 = bitcast %struct.mbstate_t* %14 to i8*
  %16 = call i8* @memset(i8* %15, i32 0, i64 8)
  %17 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 2
  store i8 0, i8* %17, align 4
  store i8 1, i8* %word_boundary_before, align 1
  %18 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %19 = getelementptr inbounds %struct.mbchar* %18, i32 0, i32 0
  %20 = load i8** %19, align 8
  %21 = load i8** %tsub_in_string, align 8
  %22 = icmp ult i8* %20, %21
  br i1 %22, label %bb3, label %bb18

bb3:                                              ; preds = %bb12, %bb2
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %string_iter) nounwind
  %23 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %24 = getelementptr inbounds %struct.mbchar* %23, i32 0, i32 2
  %25 = load i8* %24, align 8
  %toBool = icmp ne i8 %25, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot4 = zext i1 %toBoolnot to i8
  %toBool6 = icmp ne i8 %toBoolnot4, 0
  br i1 %toBool6, label %bb8, label %bb7

bb7:                                              ; preds = %bb3
  %26 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %27 = getelementptr inbounds %struct.mbchar* %26, i32 0, i32 3
  %28 = load i32* %27, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %bb8, label %bb9

bb8:                                              ; preds = %bb7, %bb3
  store i32 1, i32* %iftmp.19, align 4
  br label %bb10

bb9:                                              ; preds = %bb7
  store i32 0, i32* %iftmp.19, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %30 = load i32* %iftmp.19, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  call void @abort() noreturn nounwind
  unreachable

bb12:                                             ; preds = %bb10
  %32 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %last_char_before_tsub13 = bitcast %struct.mbchar* %last_char_before_tsub to i8*
  %33 = bitcast %struct.mbchar* %32 to i8*
  %34 = call i8* @memcpy(i8* %last_char_before_tsub13, i8* %33, i64 48)
  %35 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %36 = getelementptr inbounds %struct.mbchar* %35, i32 0, i32 0
  %37 = load i8** %36, align 8
  %38 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %39 = getelementptr inbounds %struct.mbchar* %38, i32 0, i32 1
  %40 = load i64* %39, align 8
  %41 = getelementptr inbounds i8* %37, i64 %40
  %42 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %43 = getelementptr inbounds %struct.mbchar* %42, i32 0, i32 0
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 2
  store i8 0, i8* %44, align 4
  %45 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %46 = getelementptr inbounds %struct.mbchar* %45, i32 0, i32 0
  %47 = load i8** %46, align 8
  %48 = load i8** %tsub_in_string, align 8
  %49 = icmp ult i8* %47, %48
  br i1 %49, label %bb3, label %bb14

bb14:                                             ; preds = %bb12
  %50 = getelementptr inbounds %struct.mbchar* %last_char_before_tsub, i32 0, i32 2
  %51 = load i8* %50, align 8
  %toBool15 = icmp ne i8 %51, 0
  br i1 %toBool15, label %bb16, label %bb18

bb16:                                             ; preds = %bb14
  %52 = getelementptr inbounds %struct.mbchar* %last_char_before_tsub, i32 0, i32 3
  %53 = load i32* %52, align 4
  %54 = call i32 @iswalnum(i32 %53) nounwind readonly
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  store i8 0, i8* %word_boundary_before, align 1
  br label %bb18

bb18:                                             ; preds = %bb17, %bb16, %bb14, %bb2
  %56 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %57 = getelementptr inbounds %struct.mbchar* %56, i32 0, i32 0
  %58 = load i8** %tsub_in_string, align 8
  store i8* %58, i8** %57, align 8
  %59 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 0
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 1
  %61 = bitcast %struct.mbstate_t* %60 to i8*
  %62 = call i8* @memset(i8* %61, i32 0, i64 8)
  %63 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 2
  store i8 0, i8* %63, align 4
  %64 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 3
  %65 = getelementptr inbounds %struct.mbchar* %64, i32 0, i32 0
  %66 = load i8** %tsub, align 8
  store i8* %66, i8** %65, align 8
  %67 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 0
  store i8 0, i8* %67, align 8
  %68 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 1
  %69 = bitcast %struct.mbstate_t* %68 to i8*
  %70 = call i8* @memset(i8* %69, i32 0, i64 8)
  %71 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 2
  store i8 0, i8* %71, align 4
  br label %bb30

bb19:                                             ; preds = %bb38
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %string_iter) nounwind
  %72 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %73 = getelementptr inbounds %struct.mbchar* %72, i32 0, i32 2
  %74 = load i8* %73, align 8
  %toBool20 = icmp ne i8 %74, 0
  %toBool20not = xor i1 %toBool20, true
  %toBool20not21 = zext i1 %toBool20not to i8
  %toBool23 = icmp ne i8 %toBool20not21, 0
  br i1 %toBool23, label %bb25, label %bb24

bb24:                                             ; preds = %bb19
  %75 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %76 = getelementptr inbounds %struct.mbchar* %75, i32 0, i32 3
  %77 = load i32* %76, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %bb25, label %bb26

bb25:                                             ; preds = %bb24, %bb19
  store i32 1, i32* %iftmp.20, align 4
  br label %bb27

bb26:                                             ; preds = %bb24
  store i32 0, i32* %iftmp.20, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %bb25
  %79 = load i32* %iftmp.20, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  call void @abort() noreturn nounwind
  unreachable

bb29:                                             ; preds = %bb27
  %81 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %82 = getelementptr inbounds %struct.mbchar* %81, i32 0, i32 0
  %83 = load i8** %82, align 8
  %84 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %85 = getelementptr inbounds %struct.mbchar* %84, i32 0, i32 1
  %86 = load i64* %85, align 8
  %87 = getelementptr inbounds i8* %83, i64 %86
  %88 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %89 = getelementptr inbounds %struct.mbchar* %88, i32 0, i32 0
  store i8* %87, i8** %89, align 8
  %90 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 2
  store i8 0, i8* %90, align 4
  %91 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 3
  %92 = getelementptr inbounds %struct.mbchar* %91, i32 0, i32 0
  %93 = load i8** %92, align 8
  %94 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 3
  %95 = getelementptr inbounds %struct.mbchar* %94, i32 0, i32 1
  %96 = load i64* %95, align 8
  %97 = getelementptr inbounds i8* %93, i64 %96
  %98 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 3
  %99 = getelementptr inbounds %struct.mbchar* %98, i32 0, i32 0
  store i8* %97, i8** %99, align 8
  %100 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 2
  store i8 0, i8* %100, align 4
  br label %bb30

bb30:                                             ; preds = %bb29, %bb18
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %tsub_iter) nounwind
  %101 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 3
  %102 = getelementptr inbounds %struct.mbchar* %101, i32 0, i32 2
  %103 = load i8* %102, align 8
  %toBool31 = icmp ne i8 %103, 0
  %toBool31not = xor i1 %toBool31, true
  %toBool31not32 = zext i1 %toBool31not to i8
  %toBool34 = icmp ne i8 %toBool31not32, 0
  br i1 %toBool34, label %bb36, label %bb35

bb35:                                             ; preds = %bb30
  %104 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 3
  %105 = getelementptr inbounds %struct.mbchar* %104, i32 0, i32 3
  %106 = load i32* %105, align 4
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %bb36, label %bb37

bb36:                                             ; preds = %bb35, %bb30
  store i32 1, i32* %iftmp.21, align 4
  br label %bb38

bb37:                                             ; preds = %bb35
  store i32 0, i32* %iftmp.21, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %bb36
  %108 = load i32* %iftmp.21, align 4
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %bb19, label %bb39

bb39:                                             ; preds = %bb38
  store i8 1, i8* %word_boundary_after, align 1
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %string_iter) nounwind
  %110 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %111 = getelementptr inbounds %struct.mbchar* %110, i32 0, i32 2
  %112 = load i8* %111, align 8
  %toBool40 = icmp ne i8 %112, 0
  %toBool40not = xor i1 %toBool40, true
  %toBool40not41 = zext i1 %toBool40not to i8
  %toBool43 = icmp ne i8 %toBool40not41, 0
  br i1 %toBool43, label %bb45, label %bb44

bb44:                                             ; preds = %bb39
  %113 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %114 = getelementptr inbounds %struct.mbchar* %113, i32 0, i32 3
  %115 = load i32* %114, align 4
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %bb45, label %bb46

bb45:                                             ; preds = %bb44, %bb39
  store i32 1, i32* %iftmp.22, align 4
  br label %bb47

bb46:                                             ; preds = %bb44
  store i32 0, i32* %iftmp.22, align 4
  br label %bb47

bb47:                                             ; preds = %bb46, %bb45
  %117 = load i32* %iftmp.22, align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %bb48, label %bb53

bb48:                                             ; preds = %bb47
  %119 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %first_char_after_tsub49 = bitcast %struct.mbchar* %first_char_after_tsub to i8*
  %120 = bitcast %struct.mbchar* %119 to i8*
  %121 = call i8* @memcpy(i8* %first_char_after_tsub49, i8* %120, i64 48)
  %122 = getelementptr inbounds %struct.mbchar* %first_char_after_tsub, i32 0, i32 2
  %123 = load i8* %122, align 8
  %toBool50 = icmp ne i8 %123, 0
  br i1 %toBool50, label %bb51, label %bb53

bb51:                                             ; preds = %bb48
  %124 = getelementptr inbounds %struct.mbchar* %first_char_after_tsub, i32 0, i32 3
  %125 = load i32* %124, align 4
  %126 = call i32 @iswalnum(i32 %125) nounwind readonly
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %bb52, label %bb53

bb52:                                             ; preds = %bb51
  store i8 0, i8* %word_boundary_after, align 1
  br label %bb53

bb53:                                             ; preds = %bb52, %bb51, %bb48, %bb47
  %128 = load i8* %word_boundary_before, align 1
  %toBool54 = icmp ne i8 %128, 0
  br i1 %toBool54, label %bb55, label %bb58

bb55:                                             ; preds = %bb53
  %129 = load i8* %word_boundary_after, align 1
  %toBool56 = icmp ne i8 %129, 0
  br i1 %toBool56, label %bb57, label %bb58

bb57:                                             ; preds = %bb55
  store i8 1, i8* %found, align 1
  br label %bb84

bb58:                                             ; preds = %bb55, %bb53
  %130 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %131 = getelementptr inbounds %struct.mbchar* %130, i32 0, i32 0
  %132 = load i8** %tsub_in_string, align 8
  store i8* %132, i8** %131, align 8
  %133 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 0
  store i8 0, i8* %133, align 8
  %134 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 1
  %135 = bitcast %struct.mbstate_t* %134 to i8*
  %136 = call i8* @memset(i8* %135, i32 0, i64 8)
  %137 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 2
  store i8 0, i8* %137, align 4
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %string_iter) nounwind
  %138 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %139 = getelementptr inbounds %struct.mbchar* %138, i32 0, i32 2
  %140 = load i8* %139, align 8
  %toBool59 = icmp ne i8 %140, 0
  %toBool59not = xor i1 %toBool59, true
  %toBool59not60 = zext i1 %toBool59not to i8
  %toBool62 = icmp ne i8 %toBool59not60, 0
  br i1 %toBool62, label %bb64, label %bb63

bb63:                                             ; preds = %bb58
  %141 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %142 = getelementptr inbounds %struct.mbchar* %141, i32 0, i32 3
  %143 = load i32* %142, align 4
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %bb64, label %bb65

bb64:                                             ; preds = %bb63, %bb58
  store i32 1, i32* %iftmp.23, align 4
  br label %bb66

bb65:                                             ; preds = %bb63
  store i32 0, i32* %iftmp.23, align 4
  br label %bb66

bb66:                                             ; preds = %bb65, %bb64
  %145 = load i32* %iftmp.23, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %bb84, label %bb67

bb67:                                             ; preds = %bb66
  %147 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %148 = getelementptr inbounds %struct.mbchar* %147, i32 0, i32 1
  %149 = load i64* %148, align 8
  %150 = load i8** %tsub_in_string, align 8
  %151 = getelementptr inbounds i8* %150, i64 %149
  store i8* %151, i8** %string_addr, align 8
  br label %bb83

bb68:                                             ; preds = %bb1
  store i8 1, i8* %word_boundary_before69, align 1
  %152 = load i8** %string_addr, align 8
  %153 = load i8** %tsub_in_string, align 8
  %154 = icmp ult i8* %152, %153
  br i1 %154, label %bb71, label %bb73

bb71:                                             ; preds = %bb68
  %155 = call i16** @__ctype_b_loc() nounwind readnone
  %156 = load i16** %155, align 8
  %157 = load i8** %tsub_in_string, align 8
  %158 = getelementptr inbounds i8* %157, i64 -1
  %159 = load i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i16* %156, i64 %161
  %163 = load i16* %162, align 1
  %164 = zext i16 %163 to i32
  %165 = and i32 %164, 8
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %bb72, label %bb73

bb72:                                             ; preds = %bb71
  store i8 0, i8* %word_boundary_before69, align 1
  br label %bb73

bb73:                                             ; preds = %bb72, %bb71, %bb68
  %167 = load i8** %tsub, align 8
  %168 = call i64 @strlen(i8* %167) nounwind readonly
  %169 = load i8** %tsub_in_string, align 8
  %170 = getelementptr inbounds i8* %169, i64 %168
  store i8* %170, i8** %p, align 8
  store i8 1, i8* %word_boundary_after70, align 1
  %171 = load i8** %p, align 8
  %172 = load i8* %171, align 1
  %173 = icmp ne i8 %172, 0
  br i1 %173, label %bb74, label %bb76

bb74:                                             ; preds = %bb73
  %174 = call i16** @__ctype_b_loc() nounwind readnone
  %175 = load i16** %174, align 8
  %176 = load i8** %p, align 8
  %177 = load i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i16* %175, i64 %179
  %181 = load i16* %180, align 1
  %182 = zext i16 %181 to i32
  %183 = and i32 %182, 8
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %bb75, label %bb76

bb75:                                             ; preds = %bb74
  store i8 0, i8* %word_boundary_after70, align 1
  br label %bb76

bb76:                                             ; preds = %bb75, %bb74, %bb73
  %185 = load i8* %word_boundary_before69, align 1
  %toBool77 = icmp ne i8 %185, 0
  br i1 %toBool77, label %bb78, label %bb81

bb78:                                             ; preds = %bb76
  %186 = load i8* %word_boundary_after70, align 1
  %toBool79 = icmp ne i8 %186, 0
  br i1 %toBool79, label %bb80, label %bb81

bb80:                                             ; preds = %bb78
  store i8 1, i8* %found, align 1
  br label %bb84

bb81:                                             ; preds = %bb78, %bb76
  %187 = load i8** %tsub_in_string, align 8
  %188 = load i8* %187, align 1
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %bb84, label %bb82

bb82:                                             ; preds = %bb81
  %190 = load i8** %tsub_in_string, align 8
  %191 = getelementptr inbounds i8* %190, i64 1
  store i8* %191, i8** %string_addr, align 8
  br label %bb83

bb83:                                             ; preds = %bb82, %bb67, %entry
  %192 = load i8** %string_addr, align 8
  %193 = load i8* %192, align 1
  %194 = icmp ne i8 %193, 0
  br i1 %194, label %bb, label %bb84

bb84:                                             ; preds = %bb83, %bb81, %bb80, %bb66, %bb57, %bb
  %195 = load i8** %tsub, align 8
  call void @free(i8* %195) nounwind
  %196 = load i8* %found, align 1
  %197 = zext i8 %196 to i32
  store i32 %197, i32* %0, align 4
  %198 = load i32* %0, align 4
  store i32 %198, i32* %retval, align 4
  %retval85 = load i32* %retval
  %retval8586 = trunc i32 %retval85 to i8
  ret i8 %retval8586
}

define i8* @proper_name(i8* %name) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %translation = alloca i8*
  %result = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  %1 = load i8** %name_addr, align 8
  %2 = call i8* @gettext(i8* %1) nounwind
  store i8* %2, i8** %translation, align 8
  %3 = load i8** %translation, align 8
  %4 = load i8** %name_addr, align 8
  %5 = icmp ne i8* %3, %4
  br i1 %5, label %bb, label %bb3

bb:                                               ; preds = %entry
  %6 = load i8** %translation, align 8
  %7 = load i8** %name_addr, align 8
  %8 = call zeroext i8 @mbsstr_trimmed_wordbounded(i8* %6, i8* %7) nounwind
  %toBool = icmp ne i8 %8, 0
  %9 = load i8** %translation, align 8
  br i1 %toBool, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  store i8* %9, i8** %0, align 8
  br label %bb4

bb2:                                              ; preds = %bb
  %10 = call i64 @strlen(i8* %9) nounwind readonly
  %11 = load i8** %name_addr, align 8
  %12 = call i64 @strlen(i8* %11) nounwind readonly
  %13 = add i64 %10, %12
  %14 = add i64 %13, 4
  %15 = call noalias i8* @xmalloc(i64 %14) nounwind
  store i8* %15, i8** %result, align 8
  %16 = load i8** %result, align 8
  %17 = load i8** %translation, align 8
  %18 = load i8** %name_addr, align 8
  %19 = call i32 (i8*, i8*, ...)* @sprintf(i8* noalias %16, i8* noalias getelementptr inbounds ([8 x i8]* @.str4157, i64 0, i64 0), i8* %17, i8* %18) nounwind
  %20 = load i8** %result, align 8
  store i8* %20, i8** %0, align 8
  br label %bb4

bb3:                                              ; preds = %entry
  %21 = load i8** %name_addr, align 8
  store i8* %21, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2, %bb1
  %22 = load i8** %0, align 8
  store i8* %22, i8** %retval, align 8
  %retval5 = load i8** %retval
  ret i8* %retval5
}

define i8* @proper_name_utf8(i8* %name_ascii, i8* %name_utf8) nounwind {
entry:
  %name_ascii_addr = alloca i8*, align 8
  %name_utf8_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.26 = alloca i8*
  %iftmp.24 = alloca i8*
  %translation = alloca i8*
  %locale_code = alloca i8*
  %alloc_name_converted = alloca i8*
  %alloc_name_converted_translit = alloca i8*
  %name_converted = alloca i8*
  %name_converted_translit = alloca i8*
  %name = alloca i8*
  %converted_translit = alloca i8*
  %len = alloca i64
  %locale_code_translit = alloca i8*
  %result = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name_ascii, i8** %name_ascii_addr
  store i8* %name_utf8, i8** %name_utf8_addr
  %1 = load i8** %name_ascii_addr, align 8
  %2 = call i8* @gettext(i8* %1) nounwind
  store i8* %2, i8** %translation, align 8
  %3 = call i8* @locale_charset() nounwind
  store i8* %3, i8** %locale_code, align 8
  store i8* null, i8** %alloc_name_converted, align 8
  store i8* null, i8** %alloc_name_converted_translit, align 8
  store i8* null, i8** %name_converted, align 8
  store i8* null, i8** %name_converted_translit, align 8
  %4 = load i8** %locale_code, align 8
  %5 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str5158, i64 0, i64 0)) nounwind readonly
  %6 = icmp ne i32 %5, 0
  %7 = load i8** %name_utf8_addr, align 8
  br i1 %6, label %bb, label %bb5

bb:                                               ; preds = %entry
  %8 = load i8** %locale_code, align 8
  %9 = call i8* @xstr_iconv(i8* %7, i8* getelementptr inbounds ([6 x i8]* @.str5158, i64 0, i64 0), i8* %8) nounwind
  store i8* %9, i8** %alloc_name_converted, align 8
  %10 = load i8** %alloc_name_converted, align 8
  store i8* %10, i8** %name_converted, align 8
  %11 = load i8** %locale_code, align 8
  %12 = call i64 @strlen(i8* %11) nounwind readonly
  store i64 %12, i64* %len, align 8
  %13 = load i64* %len, align 8
  %14 = add i64 %13, 11
  %15 = call noalias i8* @xmalloc(i64 %14) nounwind
  store i8* %15, i8** %locale_code_translit, align 8
  %16 = load i8** %locale_code_translit, align 8
  %17 = load i8** %locale_code, align 8
  %18 = load i64* %len, align 8
  %19 = call i8* @memcpy(i8* %16, i8* %17, i64 %18)
  %20 = load i8** %locale_code_translit, align 8
  %21 = load i64* %len, align 8
  %22 = getelementptr inbounds i8* %20, i64 %21
  %23 = call i8* @memcpy(i8* %22, i8* getelementptr inbounds ([11 x i8]* @.str6159, i64 0, i64 0), i64 11)
  %24 = load i8** %name_utf8_addr, align 8
  %25 = load i8** %locale_code_translit, align 8
  %26 = call i8* @xstr_iconv(i8* %24, i8* getelementptr inbounds ([6 x i8]* @.str5158, i64 0, i64 0), i8* %25) nounwind
  store i8* %26, i8** %converted_translit, align 8
  %27 = load i8** %locale_code_translit, align 8
  call void @free(i8* %27) nounwind
  %28 = load i8** %converted_translit, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %bb1, label %bb6

bb1:                                              ; preds = %bb
  %30 = load i8** %converted_translit, align 8
  %31 = call i8* @strchr(i8* %30, i32 63) nounwind readonly
  %32 = icmp ne i8* %31, null
  %33 = load i8** %converted_translit, align 8
  br i1 %32, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  call void @free(i8* %33) nounwind
  br label %bb6

bb3:                                              ; preds = %bb1
  store i8* %33, i8** %alloc_name_converted_translit, align 8
  %34 = load i8** %alloc_name_converted_translit, align 8
  store i8* %34, i8** %name_converted_translit, align 8
  br label %bb6

bb5:                                              ; preds = %entry
  store i8* %7, i8** %name_converted, align 8
  %35 = load i8** %name_utf8_addr, align 8
  store i8* %35, i8** %name_converted_translit, align 8
  br label %bb6

bb6:                                              ; preds = %bb, %bb2, %bb3, %bb5
  %36 = load i8** %name_converted, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %bb7, label %bb11

bb7:                                              ; preds = %bb6
  %38 = load i8** %name_converted_translit, align 8
  %39 = icmp ne i8* %38, null
  br i1 %39, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %40 = load i8** %name_converted_translit, align 8
  store i8* %40, i8** %iftmp.26, align 8
  br label %bb10

bb9:                                              ; preds = %bb7
  %41 = load i8** %name_ascii_addr, align 8
  store i8* %41, i8** %iftmp.26, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %42 = load i8** %iftmp.26, align 8
  store i8* %42, i8** %iftmp.24, align 8
  br label %bb12

bb11:                                             ; preds = %bb6
  %43 = load i8** %name_converted, align 8
  store i8* %43, i8** %iftmp.24, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %44 = load i8** %iftmp.24, align 8
  store i8* %44, i8** %name, align 8
  %45 = load i8** %translation, align 8
  %46 = load i8** %name_ascii_addr, align 8
  %47 = call i32 @strcmp(i8* %45, i8* %46) nounwind readonly
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %bb13, label %bb30

bb13:                                             ; preds = %bb12
  %49 = load i8** %translation, align 8
  %50 = load i8** %name_ascii_addr, align 8
  %51 = call zeroext i8 @mbsstr_trimmed_wordbounded(i8* %49, i8* %50) nounwind
  %toBool = icmp ne i8 %51, 0
  br i1 %toBool, label %bb20, label %bb14

bb14:                                             ; preds = %bb13
  %52 = load i8** %name_converted, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %bb17, label %bb15

bb15:                                             ; preds = %bb14
  %54 = load i8** %translation, align 8
  %55 = load i8** %name_converted, align 8
  %56 = call zeroext i8 @mbsstr_trimmed_wordbounded(i8* %54, i8* %55) nounwind
  %toBool16 = icmp ne i8 %56, 0
  br i1 %toBool16, label %bb20, label %bb17

bb17:                                             ; preds = %bb15, %bb14
  %57 = load i8** %name_converted_translit, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %bb25, label %bb18

bb18:                                             ; preds = %bb17
  %59 = load i8** %translation, align 8
  %60 = load i8** %name_converted_translit, align 8
  %61 = call zeroext i8 @mbsstr_trimmed_wordbounded(i8* %59, i8* %60) nounwind
  %toBool19 = icmp ne i8 %61, 0
  br i1 %toBool19, label %bb20, label %bb25

bb20:                                             ; preds = %bb18, %bb15, %bb13
  %62 = load i8** %alloc_name_converted, align 8
  %63 = icmp ne i8* %62, null
  br i1 %63, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %64 = load i8** %alloc_name_converted, align 8
  call void @free(i8* %64) nounwind
  br label %bb22

bb22:                                             ; preds = %bb21, %bb20
  %65 = load i8** %alloc_name_converted_translit, align 8
  %66 = icmp ne i8* %65, null
  br i1 %66, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  %67 = load i8** %alloc_name_converted_translit, align 8
  call void @free(i8* %67) nounwind
  br label %bb24

bb24:                                             ; preds = %bb23, %bb22
  %68 = load i8** %translation, align 8
  store i8* %68, i8** %0, align 8
  br label %bb37

bb25:                                             ; preds = %bb18, %bb17
  %69 = load i8** %translation, align 8
  %70 = call i64 @strlen(i8* %69) nounwind readonly
  %71 = load i8** %name, align 8
  %72 = call i64 @strlen(i8* %71) nounwind readonly
  %73 = add i64 %70, %72
  %74 = add i64 %73, 4
  %75 = call noalias i8* @xmalloc(i64 %74) nounwind
  store i8* %75, i8** %result, align 8
  %76 = load i8** %result, align 8
  %77 = load i8** %translation, align 8
  %78 = load i8** %name, align 8
  %79 = call i32 (i8*, i8*, ...)* @sprintf(i8* noalias %76, i8* noalias getelementptr inbounds ([8 x i8]* @.str4157, i64 0, i64 0), i8* %77, i8* %78) nounwind
  %80 = load i8** %alloc_name_converted, align 8
  %81 = icmp ne i8* %80, null
  br i1 %81, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  %82 = load i8** %alloc_name_converted, align 8
  call void @free(i8* %82) nounwind
  br label %bb27

bb27:                                             ; preds = %bb26, %bb25
  %83 = load i8** %alloc_name_converted_translit, align 8
  %84 = icmp ne i8* %83, null
  br i1 %84, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %85 = load i8** %alloc_name_converted_translit, align 8
  call void @free(i8* %85) nounwind
  br label %bb29

bb29:                                             ; preds = %bb28, %bb27
  %86 = load i8** %result, align 8
  store i8* %86, i8** %0, align 8
  br label %bb37

bb30:                                             ; preds = %bb12
  %87 = load i8** %alloc_name_converted, align 8
  %88 = icmp ne i8* %87, null
  br i1 %88, label %bb31, label %bb33

bb31:                                             ; preds = %bb30
  %89 = load i8** %alloc_name_converted, align 8
  %90 = load i8** %name, align 8
  %91 = icmp ne i8* %89, %90
  br i1 %91, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %92 = load i8** %alloc_name_converted, align 8
  call void @free(i8* %92) nounwind
  br label %bb33

bb33:                                             ; preds = %bb32, %bb31, %bb30
  %93 = load i8** %alloc_name_converted_translit, align 8
  %94 = icmp ne i8* %93, null
  br i1 %94, label %bb34, label %bb36

bb34:                                             ; preds = %bb33
  %95 = load i8** %alloc_name_converted_translit, align 8
  %96 = load i8** %name, align 8
  %97 = icmp ne i8* %95, %96
  br i1 %97, label %bb35, label %bb36

bb35:                                             ; preds = %bb34
  %98 = load i8** %alloc_name_converted_translit, align 8
  call void @free(i8* %98) nounwind
  br label %bb36

bb36:                                             ; preds = %bb35, %bb34, %bb33
  %99 = load i8** %name, align 8
  store i8* %99, i8** %0, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb29, %bb24
  %100 = load i8** %0, align 8
  store i8* %100, i8** %retval, align 8
  %retval38 = load i8** %retval
  ret i8* %retval38
}

define %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca %struct.quoting_options*
  %0 = alloca %struct.quoting_options*
  %iftmp.14 = alloca %struct.quoting_options*
  %e = alloca i32
  %p = alloca %struct.quoting_options*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = call i32* @__errno_location() nounwind readnone
  %2 = load i32* %1, align 4
  store i32 %2, i32* %e, align 4
  %3 = load %struct.quoting_options** %o_addr, align 8
  %4 = icmp ne %struct.quoting_options* %3, null
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %5 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %5, %struct.quoting_options** %iftmp.14, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.14, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %6 = load %struct.quoting_options** %iftmp.14, align 8
  %7 = bitcast %struct.quoting_options* %6 to i8*
  %8 = call noalias i8* @xmemdup(i8* %7, i64 56) nounwind
  %9 = bitcast i8* %8 to %struct.quoting_options*
  store %struct.quoting_options* %9, %struct.quoting_options** %p, align 8
  %10 = call i32* @__errno_location() nounwind readnone
  %11 = load i32* %e, align 4
  store i32 %11, i32* %10, align 4
  %12 = load %struct.quoting_options** %p, align 8
  store %struct.quoting_options* %12, %struct.quoting_options** %0, align 8
  %13 = load %struct.quoting_options** %0, align 8
  store %struct.quoting_options* %13, %struct.quoting_options** %retval, align 8
  %retval3 = load %struct.quoting_options** %retval
  ret %struct.quoting_options* %retval3
}

define i32 @get_quoting_style(%struct.quoting_options* %o) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i32
  %iftmp.15 = alloca %struct.quoting_options*
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = load %struct.quoting_options** %o_addr, align 8
  %2 = icmp ne %struct.quoting_options* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %3, %struct.quoting_options** %iftmp.15, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.15, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load %struct.quoting_options** %iftmp.15, align 8
  %5 = getelementptr inbounds %struct.quoting_options* %4, i32 0, i32 0
  %6 = load i32* %5, align 8
  store i32 %6, i32* %0, align 4
  %7 = load i32* %0, align 4
  store i32 %7, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define void @set_quoting_style(%struct.quoting_options* %o, i32 %s) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %s_addr = alloca i32, align 4
  %iftmp.16 = alloca %struct.quoting_options*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  store i32 %s, i32* %s_addr
  %0 = load %struct.quoting_options** %o_addr, align 8
  %1 = icmp ne %struct.quoting_options* %0, null
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %2 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %2, %struct.quoting_options** %iftmp.16, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.16, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %3 = load %struct.quoting_options** %iftmp.16, align 8
  %4 = getelementptr inbounds %struct.quoting_options* %3, i32 0, i32 0
  %5 = load i32* %s_addr, align 4
  store i32 %5, i32* %4, align 8
  ret void
}

define i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %c_addr = alloca i8, align 1
  %i_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.17 = alloca %struct.quoting_options*
  %uc = alloca i8
  %p = alloca i32*
  %shift = alloca i32
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  store i8 %c, i8* %c_addr
  store i32 %i, i32* %i_addr
  %1 = load i8* %c_addr, align 1
  store i8 %1, i8* %uc, align 1
  %2 = load %struct.quoting_options** %o_addr, align 8
  %3 = icmp ne %struct.quoting_options* %2, null
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %4, %struct.quoting_options** %iftmp.17, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.17, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %5 = load %struct.quoting_options** %iftmp.17, align 8
  %6 = getelementptr inbounds %struct.quoting_options* %5, i32 0, i32 2
  %7 = getelementptr inbounds [8 x i32]* %6, i64 0, i64 0
  %8 = load i8* %uc, align 1
  %int_cast_to_i64 = zext i8 32 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %11 = udiv i8 %8, 32
  %12 = zext i8 %11 to i64
  %13 = getelementptr inbounds i32* %7, i64 %12
  store i32* %13, i32** %p, align 8
  %14 = load i8* %uc, align 1
  %15 = zext i8 %14 to i32
  %16 = and i32 %15, 31
  store i32 %16, i32* %shift, align 4
  %17 = load i32** %p, align 8
  %18 = load i32* %17, align 4
  %19 = load i32* %shift, align 4
  %int_cast_to_i641 = zext i32 %19 to i64
  %20 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %20, label %klee_overshift_check.exit, label %bb.i3

bb.i3:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %klee_div_zero_check.exit
  %21 = lshr i32 %18, %19
  %22 = and i32 %21, 1
  store i32 %22, i32* %r, align 4
  %23 = load i32** %p, align 8
  %24 = load i32* %23, align 4
  %25 = load i32* %i_addr, align 4
  %26 = and i32 %25, 1
  %27 = load i32* %r, align 4
  %28 = xor i32 %26, %27
  %29 = load i32* %shift, align 4
  %int_cast_to_i642 = zext i32 %29 to i64
  %30 = icmp ult i64 %int_cast_to_i642, 32
  br i1 %30, label %klee_overshift_check.exit5, label %bb.i4

bb.i4:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit5:                       ; preds = %klee_overshift_check.exit
  %31 = shl i32 %28, %29
  %32 = xor i32 %24, %31
  %33 = load i32** %p, align 8
  store i32 %32, i32* %33, align 4
  %34 = load i32* %r, align 4
  store i32 %34, i32* %0, align 4
  %35 = load i32* %0, align 4
  store i32 %35, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %i_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  store i32 %i, i32* %i_addr
  %1 = load %struct.quoting_options** %o_addr, align 8
  %2 = icmp eq %struct.quoting_options* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %3 = load %struct.quoting_options** %o_addr, align 8
  %4 = getelementptr inbounds %struct.quoting_options* %3, i32 0, i32 1
  %5 = load i32* %4, align 4
  store i32 %5, i32* %r, align 4
  %6 = load %struct.quoting_options** %o_addr, align 8
  %7 = getelementptr inbounds %struct.quoting_options* %6, i32 0, i32 1
  %8 = load i32* %i_addr, align 4
  store i32 %8, i32* %7, align 4
  %9 = load i32* %r, align 4
  store i32 %9, i32* %0, align 4
  %10 = load i32* %0, align 4
  store i32 %10, i32* %retval, align 4
  %retval2 = load i32* %retval
  ret i32 %retval2
}

define void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  %0 = load %struct.quoting_options** %o_addr, align 8
  %1 = icmp eq %struct.quoting_options* %0, null
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %2 = load %struct.quoting_options** %o_addr, align 8
  %3 = getelementptr inbounds %struct.quoting_options* %2, i32 0, i32 0
  store i32 8, i32* %3, align 8
  %4 = load i8** %left_quote_addr, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %6 = load i8** %right_quote_addr, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %bb3, label %bb4

bb3:                                              ; preds = %bb2, %bb1
  call void @abort() noreturn nounwind
  unreachable

bb4:                                              ; preds = %bb2
  %8 = load %struct.quoting_options** %o_addr, align 8
  %9 = getelementptr inbounds %struct.quoting_options* %8, i32 0, i32 3
  %10 = load i8** %left_quote_addr, align 8
  store i8* %10, i8** %9, align 8
  %11 = load %struct.quoting_options** %o_addr, align 8
  %12 = getelementptr inbounds %struct.quoting_options* %11, i32 0, i32 4
  %13 = load i8** %right_quote_addr, align 8
  store i8* %13, i8** %12, align 8
  ret void
}

define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) nounwind {
entry:
  %style_addr = alloca i32, align 4
  %o = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i32 %style, i32* %style_addr
  %o1 = bitcast %struct.quoting_options* %o to i8*
  %0 = call i8* @memset(i8* %o1, i32 0, i64 56)
  %1 = load i32* %style_addr, align 4
  %2 = icmp eq i32 %1, 8
  br i1 %2, label %bb, label %bb2

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb2:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.quoting_options* %o, i32 0, i32 0
  %4 = load i32* %style_addr, align 4
  store i32 %4, i32* %3, align 8
  %agg.result3 = bitcast %struct.quoting_options* %agg.result to i8*
  %o4 = bitcast %struct.quoting_options* %o to i8*
  %5 = call i8* @memcpy(i8* %agg.result3, i8* %o4, i64 56)
  ret void
}

define internal i8* @gettext_quote(i8* %msgid, i32 %s) nounwind {
entry:
  %msgid_addr = alloca i8*, align 8
  %s_addr = alloca i32, align 4
  %retval = alloca i8*
  %iftmp.20 = alloca i8*
  %iftmp.19 = alloca i8*
  %iftmp.18 = alloca i8*
  %0 = alloca i8*
  %translation = alloca i8*
  %locale_code = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %msgid, i8** %msgid_addr
  store i32 %s, i32* %s_addr
  %1 = load i8** %msgid_addr, align 8
  %2 = call i8* @gettext(i8* %1) nounwind
  store i8* %2, i8** %translation, align 8
  %3 = load i8** %translation, align 8
  %4 = load i8** %msgid_addr, align 8
  %5 = icmp ne i8* %3, %4
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = load i8** %translation, align 8
  store i8* %6, i8** %0, align 8
  br label %bb15

bb1:                                              ; preds = %entry
  %7 = call i8* @locale_charset() nounwind
  store i8* %7, i8** %locale_code, align 8
  %8 = load i8** %locale_code, align 8
  %9 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([6 x i8]* @.str8169, i64 0, i64 0)) nounwind readonly
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %bb2, label %bb6

bb2:                                              ; preds = %bb1
  %11 = load i8** %msgid_addr, align 8
  %12 = getelementptr inbounds i8* %11, i64 0
  %13 = load i8* %12, align 1
  %14 = icmp eq i8 %13, 96
  br i1 %14, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i8* getelementptr inbounds ([4 x i8]* @.str9170, i64 0, i64 0), i8** %iftmp.18, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  store i8* getelementptr inbounds ([4 x i8]* @.str10171, i64 0, i64 0), i8** %iftmp.18, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %15 = load i8** %iftmp.18, align 8
  store i8* %15, i8** %0, align 8
  br label %bb15

bb6:                                              ; preds = %bb1
  %16 = load i8** %locale_code, align 8
  %17 = call i32 @c_strcasecmp(i8* %16, i8* getelementptr inbounds ([8 x i8]* @.str11172, i64 0, i64 0)) nounwind readonly
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %bb7, label %bb11

bb7:                                              ; preds = %bb6
  %19 = load i8** %msgid_addr, align 8
  %20 = getelementptr inbounds i8* %19, i64 0
  %21 = load i8* %20, align 1
  %22 = icmp eq i8 %21, 96
  br i1 %22, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  store i8* getelementptr inbounds ([4 x i8]* @.str12173, i64 0, i64 0), i8** %iftmp.19, align 8
  br label %bb10

bb9:                                              ; preds = %bb7
  store i8* getelementptr inbounds ([3 x i8]* @.str13174, i64 0, i64 0), i8** %iftmp.19, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %23 = load i8** %iftmp.19, align 8
  store i8* %23, i8** %0, align 8
  br label %bb15

bb11:                                             ; preds = %bb6
  %24 = load i32* %s_addr, align 4
  %25 = icmp eq i32 %24, 7
  br i1 %25, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  store i8* getelementptr inbounds ([2 x i8]* @.str14175, i64 0, i64 0), i8** %iftmp.20, align 8
  br label %bb14

bb13:                                             ; preds = %bb11
  store i8* getelementptr inbounds ([2 x i8]* @.str15176, i64 0, i64 0), i8** %iftmp.20, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %26 = load i8** %iftmp.20, align 8
  store i8* %26, i8** %0, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb10, %bb5, %bb
  %27 = load i8** %0, align 8
  store i8* %27, i8** %retval, align 8
  %retval16 = load i8** %retval
  ret i8* %retval16
}

define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) nounwind {
entry:
  %buffer_addr = alloca i8*, align 8
  %buffersize_addr = alloca i64, align 8
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %quoting_style_addr = alloca i32, align 4
  %flags_addr = alloca i32, align 4
  %quote_these_too_addr = alloca i32*, align 8
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.27 = alloca i8
  %iftmp.22 = alloca i8
  %iftmp.21 = alloca i64
  %i = alloca i64
  %len = alloca i64
  %quote_string = alloca i8*
  %quote_string_len = alloca i64
  %backslash_escapes = alloca i8
  %unibyte_locale = alloca i8
  %elide_outer_quotes = alloca i8
  %c = alloca i8
  %esc = alloca i8
  %is_right_quote = alloca i8
  %m = alloca i64
  %printable = alloca i8
  %mbstate = alloca %struct.mbstate_t
  %w = alloca i32
  %bytes = alloca i64
  %j = alloca i64
  %ilim = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buffer, i8** %buffer_addr
  store i64 %buffersize, i64* %buffersize_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store i32 %quoting_style, i32* %quoting_style_addr
  store i32 %flags, i32* %flags_addr
  store i32* %quote_these_too, i32** %quote_these_too_addr
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i64 0, i64* %len, align 8
  store i8* null, i8** %quote_string, align 8
  store i64 0, i64* %quote_string_len, align 8
  store i8 0, i8* %backslash_escapes, align 1
  %1 = call i64 @_stdlib_mb_cur_max() nounwind
  %2 = icmp eq i64 %1, 1
  %3 = zext i1 %2 to i8
  store i8 %3, i8* %unibyte_locale, align 1
  %4 = load i32* %flags_addr, align 4
  %5 = and i32 %4, 2
  %6 = icmp ne i32 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %elide_outer_quotes, align 1
  %8 = load i32* %quoting_style_addr, align 4
  switch i32 %8, label %bb34 [
    i32 0, label %bb33
    i32 1, label %bb23
    i32 2, label %bb24
    i32 3, label %bb1
    i32 4, label %bb
    i32 5, label %bb9
    i32 6, label %bb10
    i32 7, label %bb10
    i32 8, label %bb10
  ]

bb:                                               ; preds = %entry
  store i32 3, i32* %quoting_style_addr, align 4
  store i8 1, i8* %elide_outer_quotes, align 1
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %9 = load i8* %elide_outer_quotes, align 1
  %toBool = icmp ne i8 %9, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot2 = zext i1 %toBoolnot to i8
  %toBool4 = icmp ne i8 %toBoolnot2, 0
  br i1 %toBool4, label %bb5, label %bb8

bb5:                                              ; preds = %bb1
  %10 = load i64* %len, align 8
  %11 = load i64* %buffersize_addr, align 8
  %12 = icmp ult i64 %10, %11
  br i1 %12, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %13 = load i8** %buffer_addr, align 8
  %14 = load i64* %len, align 8
  %15 = getelementptr inbounds i8* %13, i64 %14
  store i8 34, i8* %15, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %16 = load i64* %len, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %len, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb1
  store i8 1, i8* %backslash_escapes, align 1
  store i8* getelementptr inbounds ([2 x i8]* @.str14175, i64 0, i64 0), i8** %quote_string, align 8
  store i64 1, i64* %quote_string_len, align 8
  br label %bb35

bb9:                                              ; preds = %entry
  store i8 1, i8* %backslash_escapes, align 1
  store i8 0, i8* %elide_outer_quotes, align 1
  br label %bb35

bb10:                                             ; preds = %entry, %entry, %entry
  %18 = load i32* %quoting_style_addr, align 4
  %19 = icmp ne i32 %18, 8
  br i1 %19, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %20 = load i32* %quoting_style_addr, align 4
  %21 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8]* @.str16177, i64 0, i64 0), i32 %20) nounwind
  store i8* %21, i8** %left_quote_addr, align 8
  %22 = load i32* %quoting_style_addr, align 4
  %23 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8]* @.str15176, i64 0, i64 0), i32 %22) nounwind
  store i8* %23, i8** %right_quote_addr, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %24 = load i8* %elide_outer_quotes, align 1
  %toBool13 = icmp ne i8 %24, 0
  %toBool13not = xor i1 %toBool13, true
  %toBool13not14 = zext i1 %toBool13not to i8
  %toBool16 = icmp ne i8 %toBool13not14, 0
  br i1 %toBool16, label %bb17, label %bb22

bb17:                                             ; preds = %bb12
  %25 = load i8** %left_quote_addr, align 8
  store i8* %25, i8** %quote_string, align 8
  br label %bb21

bb18:                                             ; preds = %bb21
  %26 = load i64* %len, align 8
  %27 = load i64* %buffersize_addr, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  %29 = load i8** %quote_string, align 8
  %30 = load i8* %29, align 1
  %31 = load i8** %buffer_addr, align 8
  %32 = load i64* %len, align 8
  %33 = getelementptr inbounds i8* %31, i64 %32
  store i8 %30, i8* %33, align 1
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18
  %34 = load i64* %len, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %len, align 8
  %36 = load i8** %quote_string, align 8
  %37 = getelementptr inbounds i8* %36, i64 1
  store i8* %37, i8** %quote_string, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %bb17
  %38 = load i8** %quote_string, align 8
  %39 = load i8* %38, align 1
  %40 = icmp ne i8 %39, 0
  br i1 %40, label %bb18, label %bb22

bb22:                                             ; preds = %bb21, %bb12
  store i8 1, i8* %backslash_escapes, align 1
  %41 = load i8** %right_quote_addr, align 8
  store i8* %41, i8** %quote_string, align 8
  %42 = load i8** %quote_string, align 8
  %43 = call i64 @strlen(i8* %42) nounwind readonly
  store i64 %43, i64* %quote_string_len, align 8
  br label %bb35

bb23:                                             ; preds = %entry
  store i32 2, i32* %quoting_style_addr, align 4
  store i8 1, i8* %elide_outer_quotes, align 1
  br label %bb24

bb24:                                             ; preds = %bb23, %entry
  %44 = load i8* %elide_outer_quotes, align 1
  %toBool25 = icmp ne i8 %44, 0
  %toBool25not = xor i1 %toBool25, true
  %toBool25not26 = zext i1 %toBool25not to i8
  %toBool28 = icmp ne i8 %toBool25not26, 0
  br i1 %toBool28, label %bb29, label %bb32

bb29:                                             ; preds = %bb24
  %45 = load i64* %len, align 8
  %46 = load i64* %buffersize_addr, align 8
  %47 = icmp ult i64 %45, %46
  br i1 %47, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  %48 = load i8** %buffer_addr, align 8
  %49 = load i64* %len, align 8
  %50 = getelementptr inbounds i8* %48, i64 %49
  store i8 39, i8* %50, align 1
  br label %bb31

bb31:                                             ; preds = %bb30, %bb29
  %51 = load i64* %len, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %len, align 8
  br label %bb32

bb32:                                             ; preds = %bb31, %bb24
  store i8* getelementptr inbounds ([2 x i8]* @.str15176, i64 0, i64 0), i8** %quote_string, align 8
  store i64 1, i64* %quote_string_len, align 8
  br label %bb35

bb33:                                             ; preds = %entry
  store i8 0, i8* %elide_outer_quotes, align 1
  br label %bb35

bb34:                                             ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb35:                                             ; preds = %bb33, %bb32, %bb22, %bb9, %bb8
  store i64 0, i64* %i, align 8
  br label %bb223

bb36:                                             ; preds = %bb226
  store i8 0, i8* %is_right_quote, align 1
  %53 = load i8* %backslash_escapes, align 1
  %toBool37 = icmp ne i8 %53, 0
  br i1 %toBool37, label %bb38, label %bb48

bb38:                                             ; preds = %bb36
  %54 = load i64* %quote_string_len, align 8
  %55 = icmp ne i64 %54, 0
  br i1 %55, label %bb39, label %bb48

bb39:                                             ; preds = %bb38
  %56 = load i64* %i, align 8
  %57 = load i64* %quote_string_len, align 8
  %58 = add i64 %56, %57
  %59 = load i64* %argsize_addr, align 8
  %60 = icmp ne i64 %59, -1
  br i1 %60, label %bb42, label %bb40

bb40:                                             ; preds = %bb39
  %61 = load i64* %quote_string_len, align 8
  %62 = icmp ule i64 %61, 1
  br i1 %62, label %bb42, label %bb41

bb41:                                             ; preds = %bb40
  %63 = load i8** %arg_addr, align 8
  %64 = call i64 @strlen(i8* %63) nounwind readonly
  store i64 %64, i64* %argsize_addr, align 8
  %65 = load i64* %argsize_addr, align 8
  store i64 %65, i64* %iftmp.21, align 8
  br label %bb43

bb42:                                             ; preds = %bb40, %bb39
  %66 = load i64* %argsize_addr, align 8
  store i64 %66, i64* %iftmp.21, align 8
  br label %bb43

bb43:                                             ; preds = %bb42, %bb41
  %67 = load i64* %iftmp.21, align 8
  %68 = icmp ule i64 %58, %67
  br i1 %68, label %bb44, label %bb48

bb44:                                             ; preds = %bb43
  %69 = load i8** %arg_addr, align 8
  %70 = load i64* %i, align 8
  %71 = getelementptr inbounds i8* %69, i64 %70
  %72 = load i8** %quote_string, align 8
  %73 = load i64* %quote_string_len, align 8
  %74 = call i32 @memcmp(i8* %71, i8* %72, i64 %73) nounwind readonly
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %bb45, label %bb48

bb45:                                             ; preds = %bb44
  %76 = load i8* %elide_outer_quotes, align 1
  %toBool46 = icmp ne i8 %76, 0
  br i1 %toBool46, label %force_outer_quoting_style, label %bb47

bb47:                                             ; preds = %bb45
  store i8 1, i8* %is_right_quote, align 1
  br label %bb48

bb48:                                             ; preds = %bb47, %bb44, %bb43, %bb38, %bb36
  %77 = load i8** %arg_addr, align 8
  %78 = load i64* %i, align 8
  %79 = getelementptr inbounds i8* %77, i64 %78
  %80 = load i8* %79, align 1
  store i8 %80, i8* %c, align 1
  %81 = load i8* %c, align 1
  %82 = zext i8 %81 to i32
  switch i32 %82, label %bb126 [
    i32 0, label %bb49
    i32 7, label %bb87
    i32 8, label %bb88
    i32 9, label %bb92
    i32 10, label %bb90
    i32 11, label %bb93
    i32 12, label %bb89
    i32 13, label %bb91
    i32 32, label %bb110
    i32 33, label %bb110
    i32 34, label %bb110
    i32 35, label %bb109
    i32 36, label %bb110
    i32 37, label %bb196
    i32 38, label %bb110
    i32 39, label %bb114
    i32 40, label %bb110
    i32 41, label %bb110
    i32 42, label %bb110
    i32 43, label %bb196
    i32 44, label %bb196
    i32 45, label %bb196
    i32 46, label %bb196
    i32 47, label %bb196
    i32 48, label %bb196
    i32 49, label %bb196
    i32 50, label %bb196
    i32 51, label %bb196
    i32 52, label %bb196
    i32 53, label %bb196
    i32 54, label %bb196
    i32 55, label %bb196
    i32 56, label %bb196
    i32 57, label %bb196
    i32 58, label %bb196
    i32 59, label %bb110
    i32 60, label %bb110
    i32 61, label %bb110
    i32 62, label %bb110
    i32 63, label %bb67
    i32 65, label %bb196
    i32 66, label %bb196
    i32 67, label %bb196
    i32 68, label %bb196
    i32 69, label %bb196
    i32 70, label %bb196
    i32 71, label %bb196
    i32 72, label %bb196
    i32 73, label %bb196
    i32 74, label %bb196
    i32 75, label %bb196
    i32 76, label %bb196
    i32 77, label %bb196
    i32 78, label %bb196
    i32 79, label %bb196
    i32 80, label %bb196
    i32 81, label %bb196
    i32 82, label %bb196
    i32 83, label %bb196
    i32 84, label %bb196
    i32 85, label %bb196
    i32 86, label %bb196
    i32 87, label %bb196
    i32 88, label %bb196
    i32 89, label %bb196
    i32 90, label %bb196
    i32 91, label %bb110
    i32 92, label %bb94
    i32 93, label %bb196
    i32 94, label %bb110
    i32 95, label %bb196
    i32 96, label %bb110
    i32 97, label %bb196
    i32 98, label %bb196
    i32 99, label %bb196
    i32 100, label %bb196
    i32 101, label %bb196
    i32 102, label %bb196
    i32 103, label %bb196
    i32 104, label %bb196
    i32 105, label %bb196
    i32 106, label %bb196
    i32 107, label %bb196
    i32 108, label %bb196
    i32 109, label %bb196
    i32 110, label %bb196
    i32 111, label %bb196
    i32 112, label %bb196
    i32 113, label %bb196
    i32 114, label %bb196
    i32 115, label %bb196
    i32 116, label %bb196
    i32 117, label %bb196
    i32 118, label %bb196
    i32 119, label %bb196
    i32 120, label %bb196
    i32 121, label %bb196
    i32 122, label %bb196
    i32 123, label %bb104
    i32 124, label %bb110
    i32 125, label %bb104
    i32 126, label %bb109
  ]

bb49:                                             ; preds = %bb48
  %83 = load i8* %backslash_escapes, align 1
  %toBool50 = icmp ne i8 %83, 0
  br i1 %toBool50, label %bb51, label %bb64

bb51:                                             ; preds = %bb49
  %84 = load i8* %elide_outer_quotes, align 1
  %toBool52 = icmp ne i8 %84, 0
  br i1 %toBool52, label %force_outer_quoting_style, label %bb53

bb53:                                             ; preds = %bb51
  %85 = load i64* %len, align 8
  %86 = load i64* %buffersize_addr, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %bb54, label %bb55

bb54:                                             ; preds = %bb53
  %88 = load i8** %buffer_addr, align 8
  %89 = load i64* %len, align 8
  %90 = getelementptr inbounds i8* %88, i64 %89
  store i8 92, i8* %90, align 1
  br label %bb55

bb55:                                             ; preds = %bb54, %bb53
  %91 = load i64* %len, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %len, align 8
  %93 = load i64* %i, align 8
  %94 = add i64 %93, 1
  %95 = load i64* %argsize_addr, align 8
  %96 = icmp ult i64 %94, %95
  br i1 %96, label %bb56, label %bb63

bb56:                                             ; preds = %bb55
  %97 = load i64* %i, align 8
  %98 = add i64 %97, 1
  %99 = load i8** %arg_addr, align 8
  %100 = getelementptr inbounds i8* %99, i64 %98
  %101 = load i8* %100, align 1
  %102 = icmp sgt i8 %101, 47
  br i1 %102, label %bb57, label %bb63

bb57:                                             ; preds = %bb56
  %103 = load i64* %i, align 8
  %104 = add i64 %103, 1
  %105 = load i8** %arg_addr, align 8
  %106 = getelementptr inbounds i8* %105, i64 %104
  %107 = load i8* %106, align 1
  %108 = icmp sle i8 %107, 57
  br i1 %108, label %bb58, label %bb63

bb58:                                             ; preds = %bb57
  %109 = load i64* %len, align 8
  %110 = load i64* %buffersize_addr, align 8
  %111 = icmp ult i64 %109, %110
  br i1 %111, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %112 = load i8** %buffer_addr, align 8
  %113 = load i64* %len, align 8
  %114 = getelementptr inbounds i8* %112, i64 %113
  store i8 48, i8* %114, align 1
  br label %bb60

bb60:                                             ; preds = %bb59, %bb58
  %115 = load i64* %len, align 8
  %116 = add i64 %115, 1
  store i64 %116, i64* %len, align 8
  %117 = load i64* %len, align 8
  %118 = load i64* %buffersize_addr, align 8
  %119 = icmp ult i64 %117, %118
  br i1 %119, label %bb61, label %bb62

bb61:                                             ; preds = %bb60
  %120 = load i8** %buffer_addr, align 8
  %121 = load i64* %len, align 8
  %122 = getelementptr inbounds i8* %120, i64 %121
  store i8 48, i8* %122, align 1
  br label %bb62

bb62:                                             ; preds = %bb61, %bb60
  %123 = load i64* %len, align 8
  %124 = add i64 %123, 1
  store i64 %124, i64* %len, align 8
  br label %bb63

bb63:                                             ; preds = %bb62, %bb57, %bb56, %bb55
  store i8 48, i8* %c, align 1
  br label %bb196

bb64:                                             ; preds = %bb49
  %125 = load i32* %flags_addr, align 4
  %126 = and i32 %125, 1
  %127 = trunc i32 %126 to i8
  %toBool65 = icmp ne i8 %127, 0
  br i1 %toBool65, label %bb222, label %bb196

bb67:                                             ; preds = %bb48
  %128 = load i32* %quoting_style_addr, align 4
  switch i32 %128, label %bb196 [
    i32 2, label %bb68
    i32 3, label %bb71
  ]

bb68:                                             ; preds = %bb67
  %129 = load i8* %elide_outer_quotes, align 1
  %toBool69 = icmp ne i8 %129, 0
  br i1 %toBool69, label %force_outer_quoting_style, label %bb196

bb71:                                             ; preds = %bb67
  %130 = load i32* %flags_addr, align 4
  %131 = and i32 %130, 4
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %bb72, label %bb196

bb72:                                             ; preds = %bb71
  %133 = load i64* %i, align 8
  %134 = add i64 %133, 2
  %135 = load i64* %argsize_addr, align 8
  %136 = icmp ult i64 %134, %135
  br i1 %136, label %bb73, label %bb196

bb73:                                             ; preds = %bb72
  %137 = load i64* %i, align 8
  %138 = add i64 %137, 1
  %139 = load i8** %arg_addr, align 8
  %140 = getelementptr inbounds i8* %139, i64 %138
  %141 = load i8* %140, align 1
  %142 = icmp eq i8 %141, 63
  br i1 %142, label %bb74, label %bb196

bb74:                                             ; preds = %bb73
  %143 = load i64* %i, align 8
  %144 = add i64 %143, 2
  %145 = load i8** %arg_addr, align 8
  %146 = getelementptr inbounds i8* %145, i64 %144
  %147 = load i8* %146, align 1
  %148 = sext i8 %147 to i32
  switch i32 %148, label %bb196 [
    i32 33, label %bb75
    i32 39, label %bb75
    i32 40, label %bb75
    i32 41, label %bb75
    i32 45, label %bb75
    i32 47, label %bb75
    i32 60, label %bb75
    i32 61, label %bb75
    i32 62, label %bb75
  ]

bb75:                                             ; preds = %bb74, %bb74, %bb74, %bb74, %bb74, %bb74, %bb74, %bb74, %bb74
  %149 = load i8* %elide_outer_quotes, align 1
  %toBool76 = icmp ne i8 %149, 0
  br i1 %toBool76, label %force_outer_quoting_style, label %bb77

bb77:                                             ; preds = %bb75
  %150 = load i64* %i, align 8
  %151 = add i64 %150, 2
  %152 = load i8** %arg_addr, align 8
  %153 = getelementptr inbounds i8* %152, i64 %151
  %154 = load i8* %153, align 1
  store i8 %154, i8* %c, align 1
  %155 = load i64* %i, align 8
  %156 = add i64 %155, 2
  store i64 %156, i64* %i, align 8
  %157 = load i64* %len, align 8
  %158 = load i64* %buffersize_addr, align 8
  %159 = icmp ult i64 %157, %158
  br i1 %159, label %bb78, label %bb79

bb78:                                             ; preds = %bb77
  %160 = load i8** %buffer_addr, align 8
  %161 = load i64* %len, align 8
  %162 = getelementptr inbounds i8* %160, i64 %161
  store i8 63, i8* %162, align 1
  br label %bb79

bb79:                                             ; preds = %bb78, %bb77
  %163 = load i64* %len, align 8
  %164 = add i64 %163, 1
  store i64 %164, i64* %len, align 8
  %165 = load i64* %len, align 8
  %166 = load i64* %buffersize_addr, align 8
  %167 = icmp ult i64 %165, %166
  br i1 %167, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %168 = load i8** %buffer_addr, align 8
  %169 = load i64* %len, align 8
  %170 = getelementptr inbounds i8* %168, i64 %169
  store i8 34, i8* %170, align 1
  br label %bb81

bb81:                                             ; preds = %bb80, %bb79
  %171 = load i64* %len, align 8
  %172 = add i64 %171, 1
  store i64 %172, i64* %len, align 8
  %173 = load i64* %len, align 8
  %174 = load i64* %buffersize_addr, align 8
  %175 = icmp ult i64 %173, %174
  br i1 %175, label %bb82, label %bb83

bb82:                                             ; preds = %bb81
  %176 = load i8** %buffer_addr, align 8
  %177 = load i64* %len, align 8
  %178 = getelementptr inbounds i8* %176, i64 %177
  store i8 34, i8* %178, align 1
  br label %bb83

bb83:                                             ; preds = %bb82, %bb81
  %179 = load i64* %len, align 8
  %180 = add i64 %179, 1
  store i64 %180, i64* %len, align 8
  %181 = load i64* %len, align 8
  %182 = load i64* %buffersize_addr, align 8
  %183 = icmp ult i64 %181, %182
  br i1 %183, label %bb84, label %bb85

bb84:                                             ; preds = %bb83
  %184 = load i8** %buffer_addr, align 8
  %185 = load i64* %len, align 8
  %186 = getelementptr inbounds i8* %184, i64 %185
  store i8 63, i8* %186, align 1
  br label %bb85

bb85:                                             ; preds = %bb84, %bb83
  %187 = load i64* %len, align 8
  %188 = add i64 %187, 1
  store i64 %188, i64* %len, align 8
  br label %bb196

bb87:                                             ; preds = %bb48
  store i8 97, i8* %esc, align 1
  br label %c_escape

bb88:                                             ; preds = %bb48
  store i8 98, i8* %esc, align 1
  br label %c_escape

bb89:                                             ; preds = %bb48
  store i8 102, i8* %esc, align 1
  br label %c_escape

bb90:                                             ; preds = %bb48
  store i8 110, i8* %esc, align 1
  br label %c_and_shell_escape

bb91:                                             ; preds = %bb48
  store i8 114, i8* %esc, align 1
  br label %c_and_shell_escape

bb92:                                             ; preds = %bb48
  store i8 116, i8* %esc, align 1
  br label %c_and_shell_escape

bb93:                                             ; preds = %bb48
  store i8 118, i8* %esc, align 1
  br label %c_escape

bb94:                                             ; preds = %bb48
  %189 = load i8* %c, align 1
  store i8 %189, i8* %esc, align 1
  %190 = load i8* %backslash_escapes, align 1
  %toBool95 = icmp ne i8 %190, 0
  br i1 %toBool95, label %bb96, label %c_and_shell_escape

bb96:                                             ; preds = %bb94
  %191 = load i8* %elide_outer_quotes, align 1
  %toBool97 = icmp ne i8 %191, 0
  br i1 %toBool97, label %bb98, label %c_and_shell_escape

bb98:                                             ; preds = %bb96
  %192 = load i64* %quote_string_len, align 8
  %193 = icmp ne i64 %192, 0
  br i1 %193, label %store_c, label %c_and_shell_escape

c_and_shell_escape:                               ; preds = %bb98, %bb96, %bb94, %bb92, %bb91, %bb90
  %194 = load i32* %quoting_style_addr, align 4
  %195 = icmp eq i32 %194, 2
  br i1 %195, label %bb99, label %c_escape

bb99:                                             ; preds = %c_and_shell_escape
  %196 = load i8* %elide_outer_quotes, align 1
  %toBool100 = icmp ne i8 %196, 0
  br i1 %toBool100, label %force_outer_quoting_style, label %c_escape

c_escape:                                         ; preds = %bb99, %c_and_shell_escape, %bb93, %bb89, %bb88, %bb87
  %197 = load i8* %backslash_escapes, align 1
  %toBool101 = icmp ne i8 %197, 0
  br i1 %toBool101, label %bb102, label %bb196

bb102:                                            ; preds = %c_escape
  %198 = load i8* %esc, align 1
  store i8 %198, i8* %c, align 1
  br label %store_escape

bb104:                                            ; preds = %bb48, %bb48
  %199 = load i64* %argsize_addr, align 8
  %200 = icmp eq i64 %199, -1
  br i1 %200, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %201 = load i8** %arg_addr, align 8
  %202 = getelementptr inbounds i8* %201, i64 1
  %203 = load i8* %202, align 1
  %204 = icmp ne i8 %203, 0
  %205 = zext i1 %204 to i8
  store i8 %205, i8* %iftmp.22, align 1
  br label %bb107

bb106:                                            ; preds = %bb104
  %206 = load i64* %argsize_addr, align 8
  %207 = icmp ne i64 %206, 1
  %208 = zext i1 %207 to i8
  store i8 %208, i8* %iftmp.22, align 1
  br label %bb107

bb107:                                            ; preds = %bb106, %bb105
  %209 = load i8* %iftmp.22, align 1
  %toBool108 = icmp ne i8 %209, 0
  br i1 %toBool108, label %bb196, label %bb109

bb109:                                            ; preds = %bb107, %bb48, %bb48
  %210 = load i64* %i, align 8
  %211 = icmp ne i64 %210, 0
  br i1 %211, label %bb196, label %bb110

bb110:                                            ; preds = %bb109, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48
  %212 = load i32* %quoting_style_addr, align 4
  %213 = icmp eq i32 %212, 2
  br i1 %213, label %bb111, label %bb196

bb111:                                            ; preds = %bb110
  %214 = load i8* %elide_outer_quotes, align 1
  %toBool112 = icmp ne i8 %214, 0
  br i1 %toBool112, label %force_outer_quoting_style, label %bb196

bb114:                                            ; preds = %bb48
  %215 = load i32* %quoting_style_addr, align 4
  %216 = icmp eq i32 %215, 2
  br i1 %216, label %bb115, label %bb196

bb115:                                            ; preds = %bb114
  %217 = load i8* %elide_outer_quotes, align 1
  %toBool116 = icmp ne i8 %217, 0
  br i1 %toBool116, label %force_outer_quoting_style, label %bb117

bb117:                                            ; preds = %bb115
  %218 = load i64* %len, align 8
  %219 = load i64* %buffersize_addr, align 8
  %220 = icmp ult i64 %218, %219
  br i1 %220, label %bb118, label %bb119

bb118:                                            ; preds = %bb117
  %221 = load i8** %buffer_addr, align 8
  %222 = load i64* %len, align 8
  %223 = getelementptr inbounds i8* %221, i64 %222
  store i8 39, i8* %223, align 1
  br label %bb119

bb119:                                            ; preds = %bb118, %bb117
  %224 = load i64* %len, align 8
  %225 = add i64 %224, 1
  store i64 %225, i64* %len, align 8
  %226 = load i64* %len, align 8
  %227 = load i64* %buffersize_addr, align 8
  %228 = icmp ult i64 %226, %227
  br i1 %228, label %bb120, label %bb121

bb120:                                            ; preds = %bb119
  %229 = load i8** %buffer_addr, align 8
  %230 = load i64* %len, align 8
  %231 = getelementptr inbounds i8* %229, i64 %230
  store i8 92, i8* %231, align 1
  br label %bb121

bb121:                                            ; preds = %bb120, %bb119
  %232 = load i64* %len, align 8
  %233 = add i64 %232, 1
  store i64 %233, i64* %len, align 8
  %234 = load i64* %len, align 8
  %235 = load i64* %buffersize_addr, align 8
  %236 = icmp ult i64 %234, %235
  br i1 %236, label %bb122, label %bb123

bb122:                                            ; preds = %bb121
  %237 = load i8** %buffer_addr, align 8
  %238 = load i64* %len, align 8
  %239 = getelementptr inbounds i8* %237, i64 %238
  store i8 39, i8* %239, align 1
  br label %bb123

bb123:                                            ; preds = %bb122, %bb121
  %240 = load i64* %len, align 8
  %241 = add i64 %240, 1
  store i64 %241, i64* %len, align 8
  br label %bb196

bb126:                                            ; preds = %bb48
  %242 = load i8* %unibyte_locale, align 1
  %toBool127 = icmp ne i8 %242, 0
  br i1 %toBool127, label %bb128, label %bb129

bb128:                                            ; preds = %bb126
  store i64 1, i64* %m, align 8
  %243 = call i16** @__ctype_b_loc() nounwind readnone
  %244 = load i16** %243, align 8
  %245 = load i8* %c, align 1
  %246 = zext i8 %245 to i32
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds i16* %244, i64 %247
  %249 = load i16* %248, align 1
  %250 = zext i16 %249 to i32
  %251 = and i32 %250, 16384
  %252 = icmp ne i32 %251, 0
  %253 = zext i1 %252 to i8
  store i8 %253, i8* %printable, align 1
  br label %bb152

bb129:                                            ; preds = %bb126
  %mbstate130 = bitcast %struct.mbstate_t* %mbstate to i8*
  %254 = call i8* @memset(i8* %mbstate130, i32 0, i64 8)
  store i64 0, i64* %m, align 8
  store i8 1, i8* %printable, align 1
  %255 = load i64* %argsize_addr, align 8
  %256 = icmp eq i64 %255, -1
  br i1 %256, label %bb131, label %bb132

bb131:                                            ; preds = %bb129
  %257 = load i8** %arg_addr, align 8
  %258 = call i64 @strlen(i8* %257) nounwind readonly
  store i64 %258, i64* %argsize_addr, align 8
  br label %bb132

bb132:                                            ; preds = %bb151, %bb131, %bb129
  %259 = load i64* %i, align 8
  %260 = load i64* %m, align 8
  %261 = add i64 %259, %260
  %262 = load i64* %argsize_addr, align 8
  %263 = sub i64 %262, %261
  %264 = load i64* %i, align 8
  %265 = load i64* %m, align 8
  %266 = add i64 %264, %265
  %267 = load i8** %arg_addr, align 8
  %268 = getelementptr inbounds i8* %267, i64 %266
  %269 = call i64 bitcast (i64 (i32*, i8*, i64, %struct.__mbstate_t*)* @mbrtowc to i64 (i32*, i8*, i64, %struct.mbstate_t*)*)(i32* noalias %w, i8* noalias %268, i64 %263, %struct.mbstate_t* noalias %mbstate) nounwind
  store i64 %269, i64* %bytes, align 8
  %270 = load i64* %bytes, align 8
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %bb152, label %bb133

bb133:                                            ; preds = %bb132
  %272 = load i64* %bytes, align 8
  %273 = icmp eq i64 %272, -1
  br i1 %273, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  store i8 0, i8* %printable, align 1
  br label %bb152

bb135:                                            ; preds = %bb133
  %274 = load i64* %bytes, align 8
  %275 = icmp eq i64 %274, -2
  br i1 %275, label %bb136, label %bb141

bb136:                                            ; preds = %bb135
  store i8 0, i8* %printable, align 1
  br label %bb138

bb137:                                            ; preds = %bb139
  %276 = load i64* %m, align 8
  %277 = add i64 %276, 1
  store i64 %277, i64* %m, align 8
  br label %bb138

bb138:                                            ; preds = %bb137, %bb136
  %278 = load i64* %i, align 8
  %279 = load i64* %m, align 8
  %280 = add i64 %278, %279
  %281 = load i64* %argsize_addr, align 8
  %282 = icmp uge i64 %280, %281
  br i1 %282, label %bb152, label %bb139

bb139:                                            ; preds = %bb138
  %283 = load i64* %i, align 8
  %284 = load i64* %m, align 8
  %285 = add i64 %283, %284
  %286 = load i8** %arg_addr, align 8
  %287 = getelementptr inbounds i8* %286, i64 %285
  %288 = load i8* %287, align 1
  %289 = icmp ne i8 %288, 0
  br i1 %289, label %bb137, label %bb152

bb141:                                            ; preds = %bb135
  %290 = load i8* %elide_outer_quotes, align 1
  %toBool142 = icmp ne i8 %290, 0
  br i1 %toBool142, label %bb143, label %bb149

bb143:                                            ; preds = %bb141
  %291 = load i32* %quoting_style_addr, align 4
  %292 = icmp eq i32 %291, 2
  br i1 %292, label %bb144, label %bb149

bb144:                                            ; preds = %bb143
  store i64 1, i64* %j, align 8
  br label %bb148

bb145:                                            ; preds = %bb148
  %293 = load i64* %i, align 8
  %294 = load i64* %m, align 8
  %295 = add i64 %293, %294
  %296 = load i64* %j, align 8
  %297 = add i64 %295, %296
  %298 = load i8** %arg_addr, align 8
  %299 = getelementptr inbounds i8* %298, i64 %297
  %300 = load i8* %299, align 1
  %301 = sext i8 %300 to i32
  switch i32 %301, label %bb147 [
    i32 91, label %force_outer_quoting_style
    i32 92, label %force_outer_quoting_style
    i32 94, label %force_outer_quoting_style
    i32 96, label %force_outer_quoting_style
    i32 124, label %force_outer_quoting_style
  ]

bb147:                                            ; preds = %bb145
  %302 = load i64* %j, align 8
  %303 = add i64 %302, 1
  store i64 %303, i64* %j, align 8
  br label %bb148

bb148:                                            ; preds = %bb147, %bb144
  %304 = load i64* %j, align 8
  %305 = load i64* %bytes, align 8
  %306 = icmp ult i64 %304, %305
  br i1 %306, label %bb145, label %bb149

bb149:                                            ; preds = %bb148, %bb143, %bb141
  %307 = load i32* %w, align 4
  %308 = call i32 @iswprint(i32 %307) nounwind readonly
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %bb150, label %bb151

bb150:                                            ; preds = %bb149
  store i8 0, i8* %printable, align 1
  br label %bb151

bb151:                                            ; preds = %bb150, %bb149
  %310 = load i64* %m, align 8
  %311 = load i64* %bytes, align 8
  %312 = add i64 %310, %311
  store i64 %312, i64* %m, align 8
  %313 = call i32 bitcast (i32 (%struct.__mbstate_t*)* @mbsinit to i32 (%struct.mbstate_t*)*)(%struct.mbstate_t* %mbstate) nounwind readonly
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %bb132, label %bb152

bb152:                                            ; preds = %bb138, %bb139, %bb151, %bb134, %bb132, %bb128
  %315 = load i64* %m, align 8
  %316 = icmp ugt i64 %315, 1
  br i1 %316, label %bb163, label %bb153

bb153:                                            ; preds = %bb152
  %317 = load i8* %backslash_escapes, align 1
  %toBool154 = icmp ne i8 %317, 0
  %toBool154not = xor i1 %toBool154, true
  %toBool154not155 = zext i1 %toBool154not to i8
  %toBool157 = icmp ne i8 %toBool154not155, 0
  br i1 %toBool157, label %bb196, label %bb158

bb158:                                            ; preds = %bb153
  %318 = load i8* %printable, align 1
  %toBool159 = icmp ne i8 %318, 0
  %toBool159not = xor i1 %toBool159, true
  %toBool159not160 = zext i1 %toBool159not to i8
  %toBool162 = icmp ne i8 %toBool159not160, 0
  br i1 %toBool162, label %bb163, label %bb196

bb163:                                            ; preds = %bb158, %bb152
  %319 = load i64* %i, align 8
  %320 = load i64* %m, align 8
  %321 = add i64 %319, %320
  store i64 %321, i64* %ilim, align 8
  br label %bb164

bb164:                                            ; preds = %bb194, %bb163
  %322 = load i8* %backslash_escapes, align 1
  %toBool165 = icmp ne i8 %322, 0
  %toBool165not = xor i1 %toBool165, true
  %toBool165not166 = zext i1 %toBool165not to i8
  %toBool168 = icmp ne i8 %toBool165not166, 0
  br i1 %toBool168, label %bb186, label %bb169

bb169:                                            ; preds = %bb164
  %323 = load i8* %printable, align 1
  %toBool170 = icmp ne i8 %323, 0
  %toBool170not = xor i1 %toBool170, true
  %toBool170not171 = zext i1 %toBool170not to i8
  %toBool173 = icmp ne i8 %toBool170not171, 0
  %toBool173not = xor i1 %toBool173, true
  %toBool173not174 = zext i1 %toBool173not to i8
  %toBool176 = icmp ne i8 %toBool173not174, 0
  br i1 %toBool176, label %bb186, label %bb177

bb177:                                            ; preds = %bb169
  %324 = load i8* %elide_outer_quotes, align 1
  %toBool178 = icmp ne i8 %324, 0
  br i1 %toBool178, label %force_outer_quoting_style, label %bb179

bb179:                                            ; preds = %bb177
  %325 = load i64* %len, align 8
  %326 = load i64* %buffersize_addr, align 8
  %327 = icmp ult i64 %325, %326
  br i1 %327, label %bb180, label %bb181

bb180:                                            ; preds = %bb179
  %328 = load i8** %buffer_addr, align 8
  %329 = load i64* %len, align 8
  %330 = getelementptr inbounds i8* %328, i64 %329
  store i8 92, i8* %330, align 1
  br label %bb181

bb181:                                            ; preds = %bb180, %bb179
  %331 = load i64* %len, align 8
  %332 = add i64 %331, 1
  store i64 %332, i64* %len, align 8
  %333 = load i64* %len, align 8
  %334 = load i64* %buffersize_addr, align 8
  %335 = icmp ult i64 %333, %334
  br i1 %335, label %bb182, label %bb183

bb182:                                            ; preds = %bb181
  %336 = load i8* %c, align 1
  %int_cast_to_i641 = zext i8 6 to i64
  %337 = icmp ult i64 %int_cast_to_i641, 8
  br i1 %337, label %klee_overshift_check.exit, label %bb.i4

bb.i4:                                            ; preds = %bb182
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb182
  %338 = lshr i8 %336, 6
  %339 = add i8 %338, 48
  %340 = load i8** %buffer_addr, align 8
  %341 = load i64* %len, align 8
  %342 = getelementptr inbounds i8* %340, i64 %341
  store i8 %339, i8* %342, align 1
  br label %bb183

bb183:                                            ; preds = %klee_overshift_check.exit, %bb181
  %343 = load i64* %len, align 8
  %344 = add i64 %343, 1
  store i64 %344, i64* %len, align 8
  %345 = load i64* %len, align 8
  %346 = load i64* %buffersize_addr, align 8
  %347 = icmp ult i64 %345, %346
  br i1 %347, label %bb184, label %bb185

bb184:                                            ; preds = %bb183
  %348 = load i8* %c, align 1
  %int_cast_to_i642 = zext i8 3 to i64
  %349 = icmp ult i64 %int_cast_to_i642, 8
  br i1 %349, label %klee_overshift_check.exit6, label %bb.i5

bb.i5:                                            ; preds = %bb184
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit6:                       ; preds = %bb184
  %350 = lshr i8 %348, 3
  %351 = and i8 %350, 7
  %352 = add i8 %351, 48
  %353 = load i8** %buffer_addr, align 8
  %354 = load i64* %len, align 8
  %355 = getelementptr inbounds i8* %353, i64 %354
  store i8 %352, i8* %355, align 1
  br label %bb185

bb185:                                            ; preds = %klee_overshift_check.exit6, %bb183
  %356 = load i64* %len, align 8
  %357 = add i64 %356, 1
  store i64 %357, i64* %len, align 8
  %358 = load i8* %c, align 1
  %359 = and i8 %358, 7
  %360 = add i8 %359, 48
  store i8 %360, i8* %c, align 1
  br label %bb191

bb186:                                            ; preds = %bb169, %bb164
  %361 = load i8* %is_right_quote, align 1
  %toBool187 = icmp ne i8 %361, 0
  br i1 %toBool187, label %bb188, label %bb191

bb188:                                            ; preds = %bb186
  %362 = load i64* %len, align 8
  %363 = load i64* %buffersize_addr, align 8
  %364 = icmp ult i64 %362, %363
  br i1 %364, label %bb189, label %bb190

bb189:                                            ; preds = %bb188
  %365 = load i8** %buffer_addr, align 8
  %366 = load i64* %len, align 8
  %367 = getelementptr inbounds i8* %365, i64 %366
  store i8 92, i8* %367, align 1
  br label %bb190

bb190:                                            ; preds = %bb189, %bb188
  %368 = load i64* %len, align 8
  %369 = add i64 %368, 1
  store i64 %369, i64* %len, align 8
  store i8 0, i8* %is_right_quote, align 1
  br label %bb191

bb191:                                            ; preds = %bb190, %bb186, %bb185
  %370 = load i64* %i, align 8
  %371 = add i64 %370, 1
  %372 = load i64* %ilim, align 8
  %373 = icmp uge i64 %371, %372
  br i1 %373, label %store_c, label %bb192

bb192:                                            ; preds = %bb191
  %374 = load i64* %len, align 8
  %375 = load i64* %buffersize_addr, align 8
  %376 = icmp ult i64 %374, %375
  br i1 %376, label %bb193, label %bb194

bb193:                                            ; preds = %bb192
  %377 = load i8* %c, align 1
  %378 = load i8** %buffer_addr, align 8
  %379 = load i64* %len, align 8
  %380 = getelementptr inbounds i8* %378, i64 %379
  store i8 %377, i8* %380, align 1
  br label %bb194

bb194:                                            ; preds = %bb193, %bb192
  %381 = load i64* %len, align 8
  %382 = add i64 %381, 1
  store i64 %382, i64* %len, align 8
  %383 = load i64* %i, align 8
  %384 = add i64 %383, 1
  store i64 %384, i64* %i, align 8
  %385 = load i8** %arg_addr, align 8
  %386 = load i64* %i, align 8
  %387 = getelementptr inbounds i8* %385, i64 %386
  %388 = load i8* %387, align 1
  store i8 %388, i8* %c, align 1
  br label %bb164

bb196:                                            ; preds = %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48, %bb48
  %389 = load i8* %backslash_escapes, align 1
  %toBool197 = icmp ne i8 %389, 0
  %toBool197not = xor i1 %toBool197, true
  %toBool197not198 = zext i1 %toBool197not to i8
  %toBool200 = icmp ne i8 %toBool197not198, 0
  %toBool200not = xor i1 %toBool200, true
  %toBool200not201 = zext i1 %toBool200not to i8
  %toBool203 = icmp ne i8 %toBool200not201, 0
  br i1 %toBool203, label %bb209, label %bb204

bb204:                                            ; preds = %bb196
  %390 = load i8* %elide_outer_quotes, align 1
  %toBool205 = icmp ne i8 %390, 0
  %toBool205not = xor i1 %toBool205, true
  %toBool205not206 = zext i1 %toBool205not to i8
  %toBool208 = icmp ne i8 %toBool205not206, 0
  br i1 %toBool208, label %bb211, label %bb209

bb209:                                            ; preds = %bb204, %bb196
  %391 = load i32** %quote_these_too_addr, align 8
  %392 = icmp eq i32* %391, null
  br i1 %392, label %bb211, label %bb210

bb210:                                            ; preds = %bb209
  %393 = load i8* %c, align 1
  %int_cast_to_i64 = zext i8 32 to i64
  %394 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %395 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %395, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb210
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb210
  call void @klee_disable_symbex() nounwind
  %396 = udiv i8 %393, 32
  %397 = zext i8 %396 to i64
  %398 = load i32** %quote_these_too_addr, align 8
  %399 = getelementptr inbounds i32* %398, i64 %397
  %400 = load i32* %399, align 1
  %401 = load i8* %c, align 1
  %402 = zext i8 %401 to i32
  %403 = and i32 %402, 31
  %int_cast_to_i643 = zext i32 %403 to i64
  %404 = icmp ult i64 %int_cast_to_i643, 32
  br i1 %404, label %klee_overshift_check.exit8, label %bb.i7

bb.i7:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit8:                       ; preds = %klee_div_zero_check.exit
  %405 = lshr i32 %400, %403
  %406 = and i32 %405, 1
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %bb211, label %store_escape

bb211:                                            ; preds = %klee_overshift_check.exit8, %bb209, %bb204
  %408 = load i8* %is_right_quote, align 1
  %toBool212 = icmp ne i8 %408, 0
  %toBool212not = xor i1 %toBool212, true
  %toBool212not213 = zext i1 %toBool212not to i8
  %toBool215 = icmp ne i8 %toBool212not213, 0
  br i1 %toBool215, label %store_c, label %store_escape

store_escape:                                     ; preds = %bb211, %klee_overshift_check.exit8, %bb102
  %409 = load i8* %elide_outer_quotes, align 1
  %toBool216 = icmp ne i8 %409, 0
  br i1 %toBool216, label %force_outer_quoting_style, label %bb217

bb217:                                            ; preds = %store_escape
  %410 = load i64* %len, align 8
  %411 = load i64* %buffersize_addr, align 8
  %412 = icmp ult i64 %410, %411
  br i1 %412, label %bb218, label %bb219

bb218:                                            ; preds = %bb217
  %413 = load i8** %buffer_addr, align 8
  %414 = load i64* %len, align 8
  %415 = getelementptr inbounds i8* %413, i64 %414
  store i8 92, i8* %415, align 1
  br label %bb219

bb219:                                            ; preds = %bb218, %bb217
  %416 = load i64* %len, align 8
  %417 = add i64 %416, 1
  store i64 %417, i64* %len, align 8
  br label %store_c

store_c:                                          ; preds = %bb191, %bb219, %bb211, %bb98
  %418 = load i64* %len, align 8
  %419 = load i64* %buffersize_addr, align 8
  %420 = icmp ult i64 %418, %419
  br i1 %420, label %bb220, label %bb221

bb220:                                            ; preds = %store_c
  %421 = load i8* %c, align 1
  %422 = load i8** %buffer_addr, align 8
  %423 = load i64* %len, align 8
  %424 = getelementptr inbounds i8* %422, i64 %423
  store i8 %421, i8* %424, align 1
  br label %bb221

bb221:                                            ; preds = %bb220, %store_c
  %425 = load i64* %len, align 8
  %426 = add i64 %425, 1
  store i64 %426, i64* %len, align 8
  br label %bb222

bb222:                                            ; preds = %bb221, %bb64
  %427 = load i64* %i, align 8
  %428 = add i64 %427, 1
  store i64 %428, i64* %i, align 8
  br label %bb223

bb223:                                            ; preds = %bb222, %bb35
  %429 = load i64* %argsize_addr, align 8
  %430 = icmp eq i64 %429, -1
  br i1 %430, label %bb224, label %bb225

bb224:                                            ; preds = %bb223
  %431 = load i8** %arg_addr, align 8
  %432 = load i64* %i, align 8
  %433 = getelementptr inbounds i8* %431, i64 %432
  %434 = load i8* %433, align 1
  %435 = icmp ne i8 %434, 0
  %436 = zext i1 %435 to i8
  store i8 %436, i8* %iftmp.27, align 1
  br label %bb226

bb225:                                            ; preds = %bb223
  %437 = load i64* %i, align 8
  %438 = load i64* %argsize_addr, align 8
  %439 = icmp ne i64 %437, %438
  %440 = zext i1 %439 to i8
  store i8 %440, i8* %iftmp.27, align 1
  br label %bb226

bb226:                                            ; preds = %bb225, %bb224
  %441 = load i8* %iftmp.27, align 1
  %toBool227 = icmp ne i8 %441, 0
  br i1 %toBool227, label %bb36, label %bb228

bb228:                                            ; preds = %bb226
  %442 = load i64* %len, align 8
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %bb229, label %bb232

bb229:                                            ; preds = %bb228
  %444 = load i32* %quoting_style_addr, align 4
  %445 = icmp eq i32 %444, 2
  br i1 %445, label %bb230, label %bb232

bb230:                                            ; preds = %bb229
  %446 = load i8* %elide_outer_quotes, align 1
  %toBool231 = icmp ne i8 %446, 0
  br i1 %toBool231, label %force_outer_quoting_style, label %bb232

bb232:                                            ; preds = %bb230, %bb229, %bb228
  %447 = load i8** %quote_string, align 8
  %448 = icmp ne i8* %447, null
  br i1 %448, label %bb233, label %bb243

bb233:                                            ; preds = %bb232
  %449 = load i8* %elide_outer_quotes, align 1
  %toBool234 = icmp ne i8 %449, 0
  %toBool234not = xor i1 %toBool234, true
  %toBool234not235 = zext i1 %toBool234not to i8
  %toBool237 = icmp ne i8 %toBool234not235, 0
  br i1 %toBool237, label %bb242, label %bb243

bb239:                                            ; preds = %bb242
  %450 = load i64* %len, align 8
  %451 = load i64* %buffersize_addr, align 8
  %452 = icmp ult i64 %450, %451
  br i1 %452, label %bb240, label %bb241

bb240:                                            ; preds = %bb239
  %453 = load i8** %quote_string, align 8
  %454 = load i8* %453, align 1
  %455 = load i8** %buffer_addr, align 8
  %456 = load i64* %len, align 8
  %457 = getelementptr inbounds i8* %455, i64 %456
  store i8 %454, i8* %457, align 1
  br label %bb241

bb241:                                            ; preds = %bb240, %bb239
  %458 = load i64* %len, align 8
  %459 = add i64 %458, 1
  store i64 %459, i64* %len, align 8
  %460 = load i8** %quote_string, align 8
  %461 = getelementptr inbounds i8* %460, i64 1
  store i8* %461, i8** %quote_string, align 8
  br label %bb242

bb242:                                            ; preds = %bb233, %bb241
  %462 = load i8** %quote_string, align 8
  %463 = load i8* %462, align 1
  %464 = icmp ne i8 %463, 0
  br i1 %464, label %bb239, label %bb243

bb243:                                            ; preds = %bb242, %bb233, %bb232
  %465 = load i64* %len, align 8
  %466 = load i64* %buffersize_addr, align 8
  %467 = icmp ult i64 %465, %466
  br i1 %467, label %bb244, label %bb245

bb244:                                            ; preds = %bb243
  %468 = load i8** %buffer_addr, align 8
  %469 = load i64* %len, align 8
  %470 = getelementptr inbounds i8* %468, i64 %469
  store i8 0, i8* %470, align 1
  br label %bb245

bb245:                                            ; preds = %bb244, %bb243
  %471 = load i64* %len, align 8
  store i64 %471, i64* %0, align 8
  br label %bb246

force_outer_quoting_style:                        ; preds = %bb145, %bb145, %bb145, %bb145, %bb145, %bb230, %store_escape, %bb177, %bb115, %bb111, %bb99, %bb75, %bb68, %bb51, %bb45
  %472 = load i32* %flags_addr, align 4
  %473 = and i32 %472, -3
  %474 = load i8** %buffer_addr, align 8
  %475 = load i64* %buffersize_addr, align 8
  %476 = load i8** %arg_addr, align 8
  %477 = load i64* %argsize_addr, align 8
  %478 = load i32* %quoting_style_addr, align 4
  %479 = load i8** %left_quote_addr, align 8
  %480 = load i8** %right_quote_addr, align 8
  %481 = call i64 @quotearg_buffer_restyled(i8* %474, i64 %475, i8* %476, i64 %477, i32 %478, i32 %473, i32* null, i8* %479, i8* %480) nounwind
  store i64 %481, i64* %0, align 8
  br label %bb246

bb246:                                            ; preds = %force_outer_quoting_style, %bb245
  %482 = load i64* %0, align 8
  store i64 %482, i64* %retval, align 8
  %retval247 = load i64* %retval
  ret i64 %retval247
}

define i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) nounwind {
entry:
  %buffer_addr = alloca i8*, align 8
  %buffersize_addr = alloca i64, align 8
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.28 = alloca %struct.quoting_options*
  %p = alloca %struct.quoting_options*
  %e = alloca i32
  %r = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buffer, i8** %buffer_addr
  store i64 %buffersize, i64* %buffersize_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = load %struct.quoting_options** %o_addr, align 8
  %2 = icmp ne %struct.quoting_options* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %3, %struct.quoting_options** %iftmp.28, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.28, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load %struct.quoting_options** %iftmp.28, align 8
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8
  %5 = call i32* @__errno_location() nounwind readnone
  %6 = load i32* %5, align 4
  store i32 %6, i32* %e, align 4
  %7 = load %struct.quoting_options** %p, align 8
  %8 = getelementptr inbounds %struct.quoting_options* %7, i32 0, i32 4
  %9 = load i8** %8, align 8
  %10 = load %struct.quoting_options** %p, align 8
  %11 = getelementptr inbounds %struct.quoting_options* %10, i32 0, i32 3
  %12 = load i8** %11, align 8
  %13 = load %struct.quoting_options** %p, align 8
  %14 = getelementptr inbounds %struct.quoting_options* %13, i32 0, i32 2
  %15 = getelementptr inbounds [8 x i32]* %14, i64 0, i64 0
  %16 = load %struct.quoting_options** %p, align 8
  %17 = getelementptr inbounds %struct.quoting_options* %16, i32 0, i32 1
  %18 = load i32* %17, align 4
  %19 = load %struct.quoting_options** %p, align 8
  %20 = getelementptr inbounds %struct.quoting_options* %19, i32 0, i32 0
  %21 = load i32* %20, align 8
  %22 = load i8** %buffer_addr, align 8
  %23 = load i64* %buffersize_addr, align 8
  %24 = load i8** %arg_addr, align 8
  %25 = load i64* %argsize_addr, align 8
  %26 = call i64 @quotearg_buffer_restyled(i8* %22, i64 %23, i8* %24, i64 %25, i32 %21, i32 %18, i32* %15, i8* %12, i8* %9) nounwind
  store i64 %26, i64* %r, align 8
  %27 = call i32* @__errno_location() nounwind readnone
  %28 = load i32* %e, align 4
  store i32 %28, i32* %27, align 4
  %29 = load i64* %r, align 8
  store i64 %29, i64* %0, align 8
  %30 = load i64* %0, align 8
  store i64 %30, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i64* %argsize_addr, align 8
  %3 = load %struct.quoting_options** %o_addr, align 8
  %4 = call i8* @quotearg_alloc_mem(i8* %1, i64 %2, i64* null, %struct.quoting_options* %3) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %size_addr = alloca i64*, align 8
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.29 = alloca %struct.quoting_options*
  %p = alloca %struct.quoting_options*
  %e = alloca i32
  %flags = alloca i32
  %bufsize = alloca i64
  %buf = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store i64* %size, i64** %size_addr
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = load %struct.quoting_options** %o_addr, align 8
  %2 = icmp ne %struct.quoting_options* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %3, %struct.quoting_options** %iftmp.29, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.29, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load %struct.quoting_options** %iftmp.29, align 8
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8
  %5 = call i32* @__errno_location() nounwind readnone
  %6 = load i32* %5, align 4
  store i32 %6, i32* %e, align 4
  %7 = load %struct.quoting_options** %p, align 8
  %8 = getelementptr inbounds %struct.quoting_options* %7, i32 0, i32 1
  %9 = load i32* %8, align 4
  %10 = load i64** %size_addr, align 8
  %11 = icmp eq i64* %10, null
  %12 = zext i1 %11 to i32
  %13 = or i32 %9, %12
  store i32 %13, i32* %flags, align 4
  %14 = load %struct.quoting_options** %p, align 8
  %15 = getelementptr inbounds %struct.quoting_options* %14, i32 0, i32 4
  %16 = load i8** %15, align 8
  %17 = load %struct.quoting_options** %p, align 8
  %18 = getelementptr inbounds %struct.quoting_options* %17, i32 0, i32 3
  %19 = load i8** %18, align 8
  %20 = load %struct.quoting_options** %p, align 8
  %21 = getelementptr inbounds %struct.quoting_options* %20, i32 0, i32 2
  %22 = getelementptr inbounds [8 x i32]* %21, i64 0, i64 0
  %23 = load %struct.quoting_options** %p, align 8
  %24 = getelementptr inbounds %struct.quoting_options* %23, i32 0, i32 0
  %25 = load i32* %24, align 8
  %26 = load i8** %arg_addr, align 8
  %27 = load i64* %argsize_addr, align 8
  %28 = load i32* %flags, align 4
  %29 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %26, i64 %27, i32 %25, i32 %28, i32* %22, i8* %19, i8* %16) nounwind
  %30 = add i64 %29, 1
  store i64 %30, i64* %bufsize, align 8
  %31 = load i64* %bufsize, align 8
  %32 = call noalias i8* @xcharalloc(i64 %31) nounwind
  store i8* %32, i8** %buf, align 8
  %33 = load %struct.quoting_options** %p, align 8
  %34 = getelementptr inbounds %struct.quoting_options* %33, i32 0, i32 4
  %35 = load i8** %34, align 8
  %36 = load %struct.quoting_options** %p, align 8
  %37 = getelementptr inbounds %struct.quoting_options* %36, i32 0, i32 3
  %38 = load i8** %37, align 8
  %39 = load %struct.quoting_options** %p, align 8
  %40 = getelementptr inbounds %struct.quoting_options* %39, i32 0, i32 2
  %41 = getelementptr inbounds [8 x i32]* %40, i64 0, i64 0
  %42 = load %struct.quoting_options** %p, align 8
  %43 = getelementptr inbounds %struct.quoting_options* %42, i32 0, i32 0
  %44 = load i32* %43, align 8
  %45 = load i8** %buf, align 8
  %46 = load i64* %bufsize, align 8
  %47 = load i8** %arg_addr, align 8
  %48 = load i64* %argsize_addr, align 8
  %49 = load i32* %flags, align 4
  %50 = call i64 @quotearg_buffer_restyled(i8* %45, i64 %46, i8* %47, i64 %48, i32 %44, i32 %49, i32* %41, i8* %38, i8* %35) nounwind
  %51 = call i32* @__errno_location() nounwind readnone
  %52 = load i32* %e, align 4
  store i32 %52, i32* %51, align 4
  %53 = load i64** %size_addr, align 8
  %54 = icmp ne i64* %53, null
  br i1 %54, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %55 = load i64* %bufsize, align 8
  %56 = sub i64 %55, 1
  %57 = load i64** %size_addr, align 8
  store i64 %56, i64* %57, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %58 = load i8** %buf, align 8
  store i8* %58, i8** %0, align 8
  %59 = load i8** %0, align 8
  store i8* %59, i8** %retval, align 8
  %retval5 = load i8** %retval
  ret i8* %retval5
}

define void @quotearg_free() nounwind {
entry:
  %sv = alloca %struct.slotvec*
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %0 = load %struct.slotvec** @slotvec, align 8
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8
  store i32 1, i32* %i, align 4
  br label %bb1

bb:                                               ; preds = %bb1
  %1 = load i32* %i, align 4
  %2 = zext i32 %1 to i64
  %3 = getelementptr inbounds %struct.slotvec* %11, i64 %2
  %4 = getelementptr inbounds %struct.slotvec* %3, i32 0, i32 1
  %5 = load i8** %4, align 8
  call void @free(i8* %5) nounwind
  %6 = load i32* %i, align 4
  %7 = add i32 %6, 1
  store i32 %7, i32* %i, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %8 = load i32* @nslots, align 4
  %9 = load i32* %i, align 4
  %10 = icmp ult i32 %9, %8
  %11 = load %struct.slotvec** %sv, align 8
  br i1 %10, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.slotvec* %11, i64 0
  %13 = getelementptr inbounds %struct.slotvec* %12, i32 0, i32 1
  %14 = load i8** %13, align 8
  %15 = icmp ne i8* %14, getelementptr inbounds ([256 x i8]* @slot0, i64 0, i64 0)
  br i1 %15, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %16 = load %struct.slotvec** %sv, align 8
  %17 = getelementptr inbounds %struct.slotvec* %16, i64 0
  %18 = getelementptr inbounds %struct.slotvec* %17, i32 0, i32 1
  %19 = load i8** %18, align 8
  call void @free(i8* %19) nounwind
  store i64 256, i64* getelementptr inbounds (%struct.slotvec* @slotvec0, i64 0, i32 0), align 16
  store i8* getelementptr inbounds ([256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec* @slotvec0, i64 0, i32 1), align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %20 = load %struct.slotvec** %sv, align 8
  %21 = icmp ne %struct.slotvec* %20, @slotvec0
  br i1 %21, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %22 = load %struct.slotvec** %sv, align 8
  %23 = bitcast %struct.slotvec* %22 to i8*
  call void @free(i8* %23) nounwind
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  store i32 1, i32* @nslots, align 4
  ret void
}

define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %options_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.32 = alloca i8*
  %e = alloca i32
  %n0 = alloca i32
  %sv = alloca %struct.slotvec*
  %n1 = alloca i64
  %preallocated = alloca i8
  %size = alloca i64
  %val = alloca i8*
  %flags = alloca i32
  %qsize = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store %struct.quoting_options* %options, %struct.quoting_options** %options_addr
  %1 = call i32* @__errno_location() nounwind readnone
  %2 = load i32* %1, align 4
  store i32 %2, i32* %e, align 4
  %3 = load i32* %n_addr, align 4
  store i32 %3, i32* %n0, align 4
  %4 = load %struct.slotvec** @slotvec, align 8
  store %struct.slotvec* %4, %struct.slotvec** %sv, align 8
  %5 = load i32* %n_addr, align 4
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %7 = load i32* @nslots, align 4
  %8 = load i32* %n0, align 4
  %9 = icmp ule i32 %7, %8
  br i1 %9, label %bb2, label %bb11

bb2:                                              ; preds = %bb1
  %10 = load i32* %n0, align 4
  %11 = add i32 %10, 1
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %n1, align 8
  %13 = load %struct.slotvec** %sv, align 8
  %14 = icmp eq %struct.slotvec* %13, @slotvec0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %preallocated, align 1
  %16 = load i64* %n1, align 8
  %17 = icmp ugt i64 %16, 1152921504606846975
  br i1 %17, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  call void @xalloc_die() noreturn nounwind
  unreachable

bb4:                                              ; preds = %bb2
  %18 = load i64* %n1, align 8
  %19 = mul i64 %18, 16
  %20 = load i8* %preallocated, align 1
  %toBool = icmp ne i8 %20, 0
  br i1 %toBool, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  store i8* null, i8** %iftmp.32, align 8
  br label %bb7

bb6:                                              ; preds = %bb4
  %21 = load %struct.slotvec** %sv, align 8
  %22 = bitcast %struct.slotvec* %21 to i8*
  store i8* %22, i8** %iftmp.32, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %23 = load i8** %iftmp.32, align 8
  %24 = call i8* @xrealloc(i8* %23, i64 %19) nounwind
  %25 = bitcast i8* %24 to %struct.slotvec*
  store %struct.slotvec* %25, %struct.slotvec** %sv, align 8
  %26 = load %struct.slotvec** %sv, align 8
  store %struct.slotvec* %26, %struct.slotvec** @slotvec, align 8
  %27 = load i8* %preallocated, align 1
  %toBool8 = icmp ne i8 %27, 0
  br i1 %toBool8, label %bb9, label %bb10

bb9:                                              ; preds = %bb7
  %28 = load %struct.slotvec** %sv, align 8
  %29 = getelementptr inbounds %struct.slotvec* %28, i32 0, i32 0
  %30 = load i64* getelementptr inbounds (%struct.slotvec* @slotvec0, i64 0, i32 0), align 8
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %struct.slotvec* %28, i32 0, i32 1
  %32 = load i8** getelementptr inbounds (%struct.slotvec* @slotvec0, i64 0, i32 1), align 8
  store i8* %32, i8** %31, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %33 = load i32* @nslots, align 4
  %34 = zext i32 %33 to i64
  %35 = load i64* %n1, align 8
  %36 = sub i64 %35, %34
  %37 = mul i64 %36, 16
  %38 = load i32* @nslots, align 4
  %39 = load %struct.slotvec** %sv, align 8
  %40 = zext i32 %38 to i64
  %41 = getelementptr inbounds %struct.slotvec* %39, i64 %40
  %42 = bitcast %struct.slotvec* %41 to i8*
  %43 = call i8* @memset(i8* %42, i32 0, i64 %37)
  %44 = load i64* %n1, align 8
  %45 = trunc i64 %44 to i32
  store i32 %45, i32* @nslots, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %bb1
  %46 = load %struct.slotvec** %sv, align 8
  %47 = load i32* %n_addr, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %struct.slotvec* %46, i64 %48
  %50 = getelementptr inbounds %struct.slotvec* %49, i32 0, i32 0
  %51 = load i64* %50, align 8
  store i64 %51, i64* %size, align 8
  %52 = load %struct.slotvec** %sv, align 8
  %53 = load i32* %n_addr, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.slotvec* %52, i64 %54
  %56 = getelementptr inbounds %struct.slotvec* %55, i32 0, i32 1
  %57 = load i8** %56, align 8
  store i8* %57, i8** %val, align 8
  %58 = load %struct.quoting_options** %options_addr, align 8
  %59 = getelementptr inbounds %struct.quoting_options* %58, i32 0, i32 1
  %60 = load i32* %59, align 4
  %61 = or i32 %60, 1
  store i32 %61, i32* %flags, align 4
  %62 = load %struct.quoting_options** %options_addr, align 8
  %63 = getelementptr inbounds %struct.quoting_options* %62, i32 0, i32 4
  %64 = load i8** %63, align 8
  %65 = load %struct.quoting_options** %options_addr, align 8
  %66 = getelementptr inbounds %struct.quoting_options* %65, i32 0, i32 3
  %67 = load i8** %66, align 8
  %68 = load %struct.quoting_options** %options_addr, align 8
  %69 = getelementptr inbounds %struct.quoting_options* %68, i32 0, i32 2
  %70 = getelementptr inbounds [8 x i32]* %69, i64 0, i64 0
  %71 = load %struct.quoting_options** %options_addr, align 8
  %72 = getelementptr inbounds %struct.quoting_options* %71, i32 0, i32 0
  %73 = load i32* %72, align 8
  %74 = load i8** %val, align 8
  %75 = load i64* %size, align 8
  %76 = load i8** %arg_addr, align 8
  %77 = load i64* %argsize_addr, align 8
  %78 = load i32* %flags, align 4
  %79 = call i64 @quotearg_buffer_restyled(i8* %74, i64 %75, i8* %76, i64 %77, i32 %73, i32 %78, i32* %70, i8* %67, i8* %64) nounwind
  store i64 %79, i64* %qsize, align 8
  %80 = load i64* %size, align 8
  %81 = load i64* %qsize, align 8
  %82 = icmp ule i64 %80, %81
  br i1 %82, label %bb12, label %bb15

bb12:                                             ; preds = %bb11
  %83 = load %struct.slotvec** %sv, align 8
  %84 = load i32* %n_addr, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %struct.slotvec* %83, i64 %85
  %87 = load i64* %qsize, align 8
  %88 = add i64 %87, 1
  store i64 %88, i64* %size, align 8
  %89 = getelementptr inbounds %struct.slotvec* %86, i32 0, i32 0
  %90 = load i64* %size, align 8
  store i64 %90, i64* %89, align 8
  %91 = load i8** %val, align 8
  %92 = icmp ne i8* %91, getelementptr inbounds ([256 x i8]* @slot0, i64 0, i64 0)
  br i1 %92, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %93 = load i8** %val, align 8
  call void @free(i8* %93) nounwind
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %94 = load %struct.slotvec** %sv, align 8
  %95 = load i32* %n_addr, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds %struct.slotvec* %94, i64 %96
  %98 = load i64* %size, align 8
  %99 = call noalias i8* @xcharalloc(i64 %98) nounwind
  store i8* %99, i8** %val, align 8
  %100 = getelementptr inbounds %struct.slotvec* %97, i32 0, i32 1
  %101 = load i8** %val, align 8
  store i8* %101, i8** %100, align 8
  %102 = load %struct.quoting_options** %options_addr, align 8
  %103 = getelementptr inbounds %struct.quoting_options* %102, i32 0, i32 4
  %104 = load i8** %103, align 8
  %105 = load %struct.quoting_options** %options_addr, align 8
  %106 = getelementptr inbounds %struct.quoting_options* %105, i32 0, i32 3
  %107 = load i8** %106, align 8
  %108 = load %struct.quoting_options** %options_addr, align 8
  %109 = getelementptr inbounds %struct.quoting_options* %108, i32 0, i32 2
  %110 = getelementptr inbounds [8 x i32]* %109, i64 0, i64 0
  %111 = load %struct.quoting_options** %options_addr, align 8
  %112 = getelementptr inbounds %struct.quoting_options* %111, i32 0, i32 0
  %113 = load i32* %112, align 8
  %114 = load i8** %val, align 8
  %115 = load i64* %size, align 8
  %116 = load i8** %arg_addr, align 8
  %117 = load i64* %argsize_addr, align 8
  %118 = load i32* %flags, align 4
  %119 = call i64 @quotearg_buffer_restyled(i8* %114, i64 %115, i8* %116, i64 %117, i32 %113, i32 %118, i32* %110, i8* %107, i8* %104) nounwind
  br label %bb15

bb15:                                             ; preds = %bb14, %bb11
  %120 = call i32* @__errno_location() nounwind readnone
  %121 = load i32* %e, align 4
  store i32 %121, i32* %120, align 4
  %122 = load i8** %val, align 8
  store i8* %122, i8** %0, align 8
  %123 = load i8** %0, align 8
  store i8* %123, i8** %retval, align 8
  %retval16 = load i8** %retval
  ret i8* %retval16
}

define i8* @quotearg_n(i32 %n, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* @default_quoting_options) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = load i64* %argsize_addr, align 8
  %4 = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* @default_quoting_options) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg(i8* %arg) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  %1 = load i8** %arg_addr, align 8
  %2 = call i8* @quotearg_n(i32 0, i8* %1) nounwind
  store i8* %2, i8** %0, align 8
  %3 = load i8** %0, align 8
  store i8* %3, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_mem(i8* %arg, i64 %argsize) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i64* %argsize_addr, align 8
  %3 = call i8* @quotearg_n_mem(i32 0, i8* %1, i64 %2) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %o = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %s_addr, align 4
  call void @quoting_options_from_style(%struct.quoting_options* noalias sret %o, i32 %1) nounwind
  %2 = load i32* %n_addr, align 4
  %3 = load i8** %arg_addr, align 8
  %4 = call i8* @quotearg_n_options(i32 %2, i8* %3, i64 -1, %struct.quoting_options* %o) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %o = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i32* %s_addr, align 4
  call void @quoting_options_from_style(%struct.quoting_options* noalias sret %o, i32 %1) nounwind
  %2 = load i32* %n_addr, align 4
  %3 = load i8** %arg_addr, align 8
  %4 = load i64* %argsize_addr, align 8
  %5 = call i8* @quotearg_n_options(i32 %2, i8* %3, i64 %4, %struct.quoting_options* %o) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_style(i32 %s, i8* %arg) nounwind {
entry:
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %s_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = call i8* @quotearg_n_style(i32 0, i32 %1, i8* %2) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) nounwind {
entry:
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i32* %s_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = load i64* %argsize_addr, align 8
  %4 = call i8* @quotearg_n_style_mem(i32 0, i32 %1, i8* %2, i64 %3) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %ch_addr = alloca i8, align 1
  %retval = alloca i8*
  %0 = alloca i8*
  %options = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store i8 %ch, i8* %ch_addr
  %options1 = bitcast %struct.quoting_options* %options to i8*
  %1 = call i8* @memcpy(i8* %options1, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56)
  %2 = load i8* %ch_addr, align 1
  %3 = sext i8 %2 to i32
  %4 = trunc i32 %3 to i8
  %5 = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %4, i32 1) nounwind
  %6 = load i8** %arg_addr, align 8
  %7 = load i64* %argsize_addr, align 8
  %8 = call i8* @quotearg_n_options(i32 0, i8* %6, i64 %7, %struct.quoting_options* %options) nounwind
  store i8* %8, i8** %0, align 8
  %9 = load i8** %0, align 8
  store i8* %9, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i8* @quotearg_char(i8* %arg, i8 signext %ch) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %ch_addr = alloca i8, align 1
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i8 %ch, i8* %ch_addr
  %1 = load i8* %ch_addr, align 1
  %2 = sext i8 %1 to i32
  %3 = load i8** %arg_addr, align 8
  %4 = trunc i32 %2 to i8
  %5 = call i8* @quotearg_char_mem(i8* %3, i64 -1, i8 signext %4) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_colon(i8* %arg) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  %1 = load i8** %arg_addr, align 8
  %2 = call i8* @quotearg_char(i8* %1, i8 signext 58) nounwind
  store i8* %2, i8** %0, align 8
  %3 = load i8** %0, align 8
  store i8* %3, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i64* %argsize_addr, align 8
  %3 = call i8* @quotearg_char_mem(i8* %1, i64 %2, i8 signext 58) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %left_quote_addr, align 8
  %3 = load i8** %right_quote_addr, align 8
  %4 = load i8** %arg_addr, align 8
  %5 = call i8* @quotearg_n_custom_mem(i32 %1, i8* %2, i8* %3, i8* %4, i64 -1) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %o = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %o1 = bitcast %struct.quoting_options* %o to i8*
  %1 = call i8* @memcpy(i8* %o1, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56)
  %2 = load i8** %left_quote_addr, align 8
  %3 = load i8** %right_quote_addr, align 8
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %2, i8* %3) nounwind
  %4 = load i32* %n_addr, align 4
  %5 = load i8** %arg_addr, align 8
  %6 = load i64* %argsize_addr, align 8
  %7 = call i8* @quotearg_n_options(i32 %4, i8* %5, i64 %6, %struct.quoting_options* %o) nounwind
  store i8* %7, i8** %0, align 8
  %8 = load i8** %0, align 8
  store i8* %8, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) nounwind {
entry:
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i8** %left_quote_addr, align 8
  %2 = load i8** %right_quote_addr, align 8
  %3 = load i8** %arg_addr, align 8
  %4 = call i8* @quotearg_n_custom(i32 0, i8* %1, i8* %2, i8* %3) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) nounwind {
entry:
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i8** %left_quote_addr, align 8
  %2 = load i8** %right_quote_addr, align 8
  %3 = load i8** %arg_addr, align 8
  %4 = load i64* %argsize_addr, align 8
  %5 = call i8* @quotearg_n_custom_mem(i32 0, i8* %1, i8* %2, i8* %3, i64 %4) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = load i64* %argsize_addr, align 8
  %4 = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* @quote_quoting_options) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quote_mem(i8* %arg, i64 %argsize) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i64* %argsize_addr, align 8
  %3 = call i8* @quote_n_mem(i32 0, i8* %1, i64 %2) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quote_n(i32 %n, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = call i8* @quote_n_mem(i32 %1, i8* %2, i64 -1) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quote(i8* %arg) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  %1 = load i8** %arg_addr, align 8
  %2 = call i8* @quote_n(i32 0, i8* %1) nounwind
  store i8* %2, i8** %0, align 8
  %3 = load i8** %0, align 8
  store i8* %3, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define zeroext i8 @same_name(i8* %source, i8* %dest) nounwind {
entry:
  %source_addr = alloca i8*, align 8
  %dest_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.1 = alloca i32
  %iftmp.0 = alloca i32
  %source_basename = alloca i8*
  %dest_basename = alloca i8*
  %source_baselen = alloca i64
  %dest_baselen = alloca i64
  %identical_basenames = alloca i8
  %compare_dirs = alloca i8
  %same = alloca i8
  %source_dir_stats = alloca %struct.stat
  %dest_dir_stats = alloca %struct.stat
  %source_dirname = alloca i8*
  %dest_dirname = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %source, i8** %source_addr
  store i8* %dest, i8** %dest_addr
  %1 = load i8** %source_addr, align 8
  %2 = call i8* @last_component(i8* %1) nounwind readonly
  store i8* %2, i8** %source_basename, align 8
  %3 = load i8** %dest_addr, align 8
  %4 = call i8* @last_component(i8* %3) nounwind readonly
  store i8* %4, i8** %dest_basename, align 8
  %5 = load i8** %source_basename, align 8
  %6 = call i64 @base_len(i8* %5) nounwind readonly
  store i64 %6, i64* %source_baselen, align 8
  %7 = load i8** %dest_basename, align 8
  %8 = call i64 @base_len(i8* %7) nounwind readonly
  store i64 %8, i64* %dest_baselen, align 8
  %9 = load i64* %source_baselen, align 8
  %10 = load i64* %dest_baselen, align 8
  %11 = icmp ne i64 %9, %10
  br i1 %11, label %bb2, label %bb

bb:                                               ; preds = %entry
  %12 = load i8** %source_basename, align 8
  %13 = load i8** %dest_basename, align 8
  %14 = load i64* %dest_baselen, align 8
  %15 = call i32 @memcmp(i8* %12, i8* %13, i64 %14) nounwind readonly
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %17 = load i32* %iftmp.0, align 4
  %18 = trunc i32 %17 to i8
  store i8 %18, i8* %identical_basenames, align 1
  %19 = load i8* %identical_basenames, align 1
  store i8 %19, i8* %compare_dirs, align 1
  store i8 0, i8* %same, align 1
  %20 = load i8* %compare_dirs, align 1
  %toBool = icmp ne i8 %20, 0
  br i1 %toBool, label %bb4, label %bb13

bb4:                                              ; preds = %bb3
  %21 = load i8** %source_addr, align 8
  %22 = call i8* @dir_name(i8* %21) nounwind
  store i8* %22, i8** %source_dirname, align 8
  %23 = load i8** %dest_addr, align 8
  %24 = call i8* @dir_name(i8* %23) nounwind
  store i8* %24, i8** %dest_dirname, align 8
  %25 = load i8** %source_dirname, align 8
  %26 = call i32 @stat(i8* noalias %25, %struct.stat* noalias %source_dir_stats) nounwind
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %28 = call i32* @__errno_location() nounwind readnone
  %29 = load i32* %28, align 4
  %30 = load i8** %source_dirname, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 %29, i8* getelementptr inbounds ([3 x i8]* @.str180, i64 0, i64 0), i8* %30) nounwind
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %31 = load i8** %dest_dirname, align 8
  %32 = call i32 @stat(i8* noalias %31, %struct.stat* noalias %dest_dir_stats) nounwind
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %34 = call i32* @__errno_location() nounwind readnone
  %35 = load i32* %34, align 4
  %36 = load i8** %dest_dirname, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 %35, i8* getelementptr inbounds ([3 x i8]* @.str180, i64 0, i64 0), i8* %36) nounwind
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %37 = getelementptr inbounds %struct.stat* %source_dir_stats, i32 0, i32 1
  %38 = load i64* %37, align 8
  %39 = getelementptr inbounds %struct.stat* %dest_dir_stats, i32 0, i32 1
  %40 = load i64* %39, align 8
  %41 = icmp ne i64 %38, %40
  br i1 %41, label %bb11, label %bb9

bb9:                                              ; preds = %bb8
  %42 = getelementptr inbounds %struct.stat* %source_dir_stats, i32 0, i32 0
  %43 = load i64* %42, align 8
  %44 = getelementptr inbounds %struct.stat* %dest_dir_stats, i32 0, i32 0
  %45 = load i64* %44, align 8
  %46 = icmp ne i64 %43, %45
  br i1 %46, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  store i32 1, i32* %iftmp.1, align 4
  br label %bb12

bb11:                                             ; preds = %bb9, %bb8
  store i32 0, i32* %iftmp.1, align 4
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %47 = load i32* %iftmp.1, align 4
  %48 = trunc i32 %47 to i8
  store i8 %48, i8* %same, align 1
  %49 = load i8** %source_dirname, align 8
  call void @free(i8* %49) nounwind
  %50 = load i8** %dest_dirname, align 8
  call void @free(i8* %50) nounwind
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  %51 = load i8* %same, align 1
  %52 = zext i8 %51 to i32
  store i32 %52, i32* %0, align 4
  %53 = load i32* %0, align 4
  store i32 %53, i32* %retval, align 4
  %retval14 = load i32* %retval
  %retval1415 = trunc i32 %retval14 to i8
  ret i8 %retval1415
}

define i32 @save_cwd(%struct.saved_cwd* %cwd) nounwind {
entry:
  %cwd_addr = alloca %struct.saved_cwd*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.saved_cwd* %cwd, %struct.saved_cwd** %cwd_addr
  %1 = load %struct.saved_cwd** %cwd_addr, align 8
  %2 = getelementptr inbounds %struct.saved_cwd* %1, i32 0, i32 1
  store i8* null, i8** %2, align 8
  %3 = call i32 (i8*, i32, ...)* @open_safer(i8* getelementptr inbounds ([2 x i8]* @.str182, i64 0, i64 0), i32 0) nounwind
  %4 = load %struct.saved_cwd** %cwd_addr, align 8
  %5 = getelementptr inbounds %struct.saved_cwd* %4, i32 0, i32 0
  store i32 %3, i32* %5, align 8
  %6 = load %struct.saved_cwd** %cwd_addr, align 8
  %7 = getelementptr inbounds %struct.saved_cwd* %6, i32 0, i32 0
  %8 = load i32* %7, align 8
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %bb, label %bb4

bb:                                               ; preds = %entry
  %10 = call i8* @getcwd(i8* null, i64 0) nounwind
  %11 = load %struct.saved_cwd** %cwd_addr, align 8
  %12 = getelementptr inbounds %struct.saved_cwd* %11, i32 0, i32 1
  store i8* %10, i8** %12, align 8
  %13 = load %struct.saved_cwd** %cwd_addr, align 8
  %14 = getelementptr inbounds %struct.saved_cwd* %13, i32 0, i32 1
  %15 = load i8** %14, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  store i32 0, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %bb
  store i32 -1, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %17 = load i32* %iftmp.0, align 4
  store i32 %17, i32* %0, align 4
  br label %bb5

bb4:                                              ; preds = %entry
  %18 = load %struct.saved_cwd** %cwd_addr, align 8
  %19 = getelementptr inbounds %struct.saved_cwd* %18, i32 0, i32 0
  %20 = load i32* %19, align 8
  %21 = call i32 @set_cloexec_flag(i32 %20, i8 zeroext 1) nounwind
  store i32 0, i32* %0, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %22 = load i32* %0, align 4
  store i32 %22, i32* %retval, align 4
  %retval6 = load i32* %retval
  ret i32 %retval6
}

define i32 @restore_cwd(%struct.saved_cwd* %cwd) nounwind {
entry:
  %cwd_addr = alloca %struct.saved_cwd*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.saved_cwd* %cwd, %struct.saved_cwd** %cwd_addr
  %1 = load %struct.saved_cwd** %cwd_addr, align 8
  %2 = getelementptr inbounds %struct.saved_cwd* %1, i32 0, i32 0
  %3 = load i32* %2, align 8
  %4 = icmp sge i32 %3, 0
  %5 = load %struct.saved_cwd** %cwd_addr, align 8
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = getelementptr inbounds %struct.saved_cwd* %5, i32 0, i32 0
  %7 = load i32* %6, align 8
  %8 = call i32 @fchdir(i32 %7) nounwind
  store i32 %8, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  %9 = getelementptr inbounds %struct.saved_cwd* %5, i32 0, i32 1
  %10 = load i8** %9, align 8
  %11 = call i32 @chdir_long(i8* %10) nounwind
  store i32 %11, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %12 = load i32* %0, align 4
  store i32 %12, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define void @free_cwd(%struct.saved_cwd* %cwd) nounwind {
entry:
  %cwd_addr = alloca %struct.saved_cwd*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.saved_cwd* %cwd, %struct.saved_cwd** %cwd_addr
  %0 = load %struct.saved_cwd** %cwd_addr, align 8
  %1 = getelementptr inbounds %struct.saved_cwd* %0, i32 0, i32 0
  %2 = load i32* %1, align 8
  %3 = icmp sge i32 %2, 0
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = load %struct.saved_cwd** %cwd_addr, align 8
  %5 = getelementptr inbounds %struct.saved_cwd* %4, i32 0, i32 0
  %6 = load i32* %5, align 8
  %7 = call i32 @close(i32 %6) nounwind
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %8 = load %struct.saved_cwd** %cwd_addr, align 8
  %9 = getelementptr inbounds %struct.saved_cwd* %8, i32 0, i32 1
  %10 = load i8** %9, align 8
  call void @free(i8* %10) nounwind
  ret void
}

define i8* @trim2(i8* %s, i32 %how) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %how_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %d = alloca i8*
  %i = alloca %struct.mbi_iterator_t
  %state = alloca i32
  %r = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %how, i32* %how_addr
  %1 = load i8** %s_addr, align 8
  %2 = call noalias i8* @strdup(i8* %1) nounwind
  store i8* %2, i8** %d, align 8
  %3 = load i8** %d, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %5 = call i64 @_stdlib_mb_cur_max() nounwind
  %6 = icmp ugt i64 %5, 1
  %7 = load i32* %how_addr, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %6, label %bb2, label %bb55

bb2:                                              ; preds = %bb1
  br i1 %8, label %bb3, label %bb12

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %10 = getelementptr inbounds %struct.mbchar* %9, i32 0, i32 0
  %11 = load i8** %d, align 8
  store i8* %11, i8** %10, align 8
  %12 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %13 = getelementptr inbounds %struct.mbchar* %12, i32 0, i32 0
  %14 = load i8** %13, align 8
  %15 = load i8** %d, align 8
  %16 = call i64 @strlen(i8* %15) nounwind readonly
  %17 = getelementptr inbounds i8* %14, i64 %16
  %18 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 1
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 2
  %21 = bitcast %struct.mbstate_t* %20 to i8*
  %22 = call i8* @memset(i8* %21, i32 0, i64 8)
  %23 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 3
  store i8 0, i8* %23, align 4
  br label %bb5

bb4:                                              ; preds = %bb10
  %24 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %25 = getelementptr inbounds %struct.mbchar* %24, i32 0, i32 0
  %26 = load i8** %25, align 8
  %27 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %28 = getelementptr inbounds %struct.mbchar* %27, i32 0, i32 1
  %29 = load i64* %28, align 8
  %30 = getelementptr inbounds i8* %26, i64 %29
  %31 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %32 = getelementptr inbounds %struct.mbchar* %31, i32 0, i32 0
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 3
  store i8 0, i8* %33, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %34 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %35 = getelementptr inbounds %struct.mbchar* %34, i32 0, i32 0
  %36 = load i8** %35, align 8
  %37 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 0
  %38 = load i8** %37, align 8
  %39 = icmp uge i8* %36, %38
  br i1 %39, label %bb11, label %bb6

bb6:                                              ; preds = %bb5
  call void @mbiter_multi_next(%struct.mbi_iterator_t* %i) nounwind
  %40 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %41 = getelementptr inbounds %struct.mbchar* %40, i32 0, i32 2
  %42 = load i8* %41, align 8
  %toBool = icmp ne i8 %42, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot7 = zext i1 %toBoolnot to i8
  %toBool9 = icmp ne i8 %toBoolnot7, 0
  br i1 %toBool9, label %bb11, label %bb10

bb10:                                             ; preds = %bb6
  %43 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %44 = getelementptr inbounds %struct.mbchar* %43, i32 0, i32 3
  %45 = load i32* %44, align 4
  %46 = call i32 @iswspace(i32 %45) nounwind readonly
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %bb4, label %bb11

bb11:                                             ; preds = %bb10, %bb6, %bb5
  %48 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %49 = getelementptr inbounds %struct.mbchar* %48, i32 0, i32 0
  %50 = load i8** %49, align 8
  %51 = call i64 @strlen(i8* %50) nounwind readonly
  %52 = add i64 %51, 1
  %53 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %54 = getelementptr inbounds %struct.mbchar* %53, i32 0, i32 0
  %55 = load i8** %54, align 8
  %56 = load i8** %d, align 8
  %57 = call i8* @memmove(i8* %56, i8* %55, i64 %52)
  br label %bb12

bb12:                                             ; preds = %bb11, %bb2
  %58 = load i32* %how_addr, align 4
  %59 = icmp ne i32 %58, 1
  br i1 %59, label %bb13, label %bb66

bb13:                                             ; preds = %bb12
  store i32 0, i32* %state, align 4
  %60 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %61 = getelementptr inbounds %struct.mbchar* %60, i32 0, i32 0
  %62 = load i8** %d, align 8
  store i8* %62, i8** %61, align 8
  %63 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %64 = getelementptr inbounds %struct.mbchar* %63, i32 0, i32 0
  %65 = load i8** %64, align 8
  %66 = load i8** %d, align 8
  %67 = call i64 @strlen(i8* %66) nounwind readonly
  %68 = getelementptr inbounds i8* %65, i64 %67
  %69 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 0
  store i8* %68, i8** %69, align 8
  %70 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 1
  store i8 0, i8* %70, align 8
  %71 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 2
  %72 = bitcast %struct.mbstate_t* %71 to i8*
  %73 = call i8* @memset(i8* %72, i32 0, i64 8)
  %74 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 3
  store i8 0, i8* %74, align 4
  br label %bb50

bb14:                                             ; preds = %bb51
  %75 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %76 = getelementptr inbounds %struct.mbchar* %75, i32 0, i32 2
  %77 = load i8* %76, align 8
  %toBool15 = icmp ne i8 %77, 0
  br i1 %toBool15, label %bb16, label %bb17

bb16:                                             ; preds = %bb14
  %78 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %79 = getelementptr inbounds %struct.mbchar* %78, i32 0, i32 3
  %80 = load i32* %79, align 4
  %81 = call i32 @iswspace(i32 %80) nounwind readonly
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %bb49, label %bb17

bb17:                                             ; preds = %bb51, %bb16, %bb14
  %83 = load i32* %state, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %bb18, label %bb25

bb18:                                             ; preds = %bb17
  %85 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %86 = getelementptr inbounds %struct.mbchar* %85, i32 0, i32 2
  %87 = load i8* %86, align 8
  %toBool19 = icmp ne i8 %87, 0
  %toBool19not = xor i1 %toBool19, true
  %toBool19not20 = zext i1 %toBool19not to i8
  %toBool22 = icmp ne i8 %toBool19not20, 0
  br i1 %toBool22, label %bb24, label %bb23

bb23:                                             ; preds = %bb18
  %88 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %89 = getelementptr inbounds %struct.mbchar* %88, i32 0, i32 3
  %90 = load i32* %89, align 4
  %91 = call i32 @iswspace(i32 %90) nounwind readonly
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %bb24, label %bb25

bb24:                                             ; preds = %bb23, %bb18
  store i32 1, i32* %state, align 4
  br label %bb49

bb25:                                             ; preds = %bb23, %bb17
  %93 = load i32* %state, align 4
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %bb26, label %bb32

bb26:                                             ; preds = %bb25
  %95 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %96 = getelementptr inbounds %struct.mbchar* %95, i32 0, i32 2
  %97 = load i8* %96, align 8
  %toBool27 = icmp ne i8 %97, 0
  %toBool27not = xor i1 %toBool27, true
  %toBool27not28 = zext i1 %toBool27not to i8
  %toBool30 = icmp ne i8 %toBool27not28, 0
  br i1 %toBool30, label %bb49, label %bb31

bb31:                                             ; preds = %bb26
  %98 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %99 = getelementptr inbounds %struct.mbchar* %98, i32 0, i32 3
  %100 = load i32* %99, align 4
  %101 = call i32 @iswspace(i32 %100) nounwind readonly
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %bb49, label %bb32

bb32:                                             ; preds = %bb31, %bb25
  %103 = load i32* %state, align 4
  %104 = icmp ne i32 %103, 1
  br i1 %104, label %bb40, label %bb33

bb33:                                             ; preds = %bb32
  %105 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %106 = getelementptr inbounds %struct.mbchar* %105, i32 0, i32 2
  %107 = load i8* %106, align 8
  %toBool34 = icmp ne i8 %107, 0
  %toBool34not = xor i1 %toBool34, true
  %toBool34not35 = zext i1 %toBool34not to i8
  %toBool37 = icmp ne i8 %toBool34not35, 0
  br i1 %toBool37, label %bb40, label %bb38

bb38:                                             ; preds = %bb33
  %108 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %109 = getelementptr inbounds %struct.mbchar* %108, i32 0, i32 3
  %110 = load i32* %109, align 4
  %111 = call i32 @iswspace(i32 %110) nounwind readonly
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %bb40, label %bb39

bb39:                                             ; preds = %bb38
  store i32 2, i32* %state, align 4
  %113 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %114 = getelementptr inbounds %struct.mbchar* %113, i32 0, i32 0
  %115 = load i8** %114, align 8
  store i8* %115, i8** %r, align 8
  br label %bb49

bb40:                                             ; preds = %bb38, %bb33, %bb32
  %116 = load i32* %state, align 4
  %117 = icmp ne i32 %116, 2
  br i1 %117, label %bb48, label %bb41

bb41:                                             ; preds = %bb40
  %118 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %119 = getelementptr inbounds %struct.mbchar* %118, i32 0, i32 2
  %120 = load i8* %119, align 8
  %toBool42 = icmp ne i8 %120, 0
  %toBool42not = xor i1 %toBool42, true
  %toBool42not43 = zext i1 %toBool42not to i8
  %toBool45 = icmp ne i8 %toBool42not43, 0
  br i1 %toBool45, label %bb48, label %bb46

bb46:                                             ; preds = %bb41
  %121 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %122 = getelementptr inbounds %struct.mbchar* %121, i32 0, i32 3
  %123 = load i32* %122, align 4
  %124 = call i32 @iswspace(i32 %123) nounwind readonly
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %bb48, label %bb49

bb48:                                             ; preds = %bb46, %bb41, %bb40
  store i32 1, i32* %state, align 4
  br label %bb49

bb49:                                             ; preds = %bb46, %bb48, %bb39, %bb31, %bb26, %bb24, %bb16
  %126 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %127 = getelementptr inbounds %struct.mbchar* %126, i32 0, i32 0
  %128 = load i8** %127, align 8
  %129 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %130 = getelementptr inbounds %struct.mbchar* %129, i32 0, i32 1
  %131 = load i64* %130, align 8
  %132 = getelementptr inbounds i8* %128, i64 %131
  %133 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %134 = getelementptr inbounds %struct.mbchar* %133, i32 0, i32 0
  store i8* %132, i8** %134, align 8
  %135 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 3
  store i8 0, i8* %135, align 4
  br label %bb50

bb50:                                             ; preds = %bb49, %bb13
  %136 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %137 = getelementptr inbounds %struct.mbchar* %136, i32 0, i32 0
  %138 = load i8** %137, align 8
  %139 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 0
  %140 = load i8** %139, align 8
  %141 = icmp uge i8* %138, %140
  br i1 %141, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  call void @mbiter_multi_next(%struct.mbi_iterator_t* %i) nounwind
  %142 = load i32* %state, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %bb14, label %bb17

bb52:                                             ; preds = %bb50
  %144 = load i32* %state, align 4
  %145 = icmp eq i32 %144, 2
  br i1 %145, label %bb53, label %bb66

bb53:                                             ; preds = %bb52
  %146 = load i8** %r, align 8
  store i8 0, i8* %146, align 1
  br label %bb66

bb55:                                             ; preds = %bb1
  br i1 %8, label %bb56, label %bb61

bb56:                                             ; preds = %bb55
  %147 = load i8** %d, align 8
  store i8* %147, i8** %p, align 8
  br label %bb58

bb57:                                             ; preds = %bb59
  %148 = load i8** %p, align 8
  %149 = getelementptr inbounds i8* %148, i64 1
  store i8* %149, i8** %p, align 8
  br label %bb58

bb58:                                             ; preds = %bb57, %bb56
  %150 = load i8** %p, align 8
  %151 = load i8* %150, align 1
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %bb60, label %bb59

bb59:                                             ; preds = %bb58
  %153 = call i16** @__ctype_b_loc() nounwind readnone
  %154 = load i16** %153, align 8
  %155 = load i8** %p, align 8
  %156 = load i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i16* %154, i64 %158
  %160 = load i16* %159, align 1
  %161 = zext i16 %160 to i32
  %162 = and i32 %161, 8192
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %bb57, label %bb60

bb60:                                             ; preds = %bb59, %bb58
  %164 = load i8** %p, align 8
  %165 = call i64 @strlen(i8* %164) nounwind readonly
  %166 = add i64 %165, 1
  %167 = load i8** %d, align 8
  %168 = load i8** %p, align 8
  %169 = call i8* @memmove(i8* %167, i8* %168, i64 %166)
  br label %bb61

bb61:                                             ; preds = %bb60, %bb55
  %170 = load i32* %how_addr, align 4
  %171 = icmp ne i32 %170, 1
  br i1 %171, label %bb62, label %bb66

bb62:                                             ; preds = %bb61
  %172 = load i8** %d, align 8
  %173 = call i64 @strlen(i8* %172) nounwind readonly
  %174 = load i8** %d, align 8
  %175 = getelementptr inbounds i8* %174, i64 %173
  %176 = getelementptr inbounds i8* %175, i64 -1
  store i8* %176, i8** %p, align 8
  br label %bb64

bb63:                                             ; preds = %bb65
  %177 = load i8** %p, align 8
  store i8 0, i8* %177, align 1
  %178 = load i8** %p, align 8
  %179 = getelementptr inbounds i8* %178, i64 -1
  store i8* %179, i8** %p, align 8
  br label %bb64

bb64:                                             ; preds = %bb63, %bb62
  %180 = load i8** %p, align 8
  %181 = load i8** %d, align 8
  %182 = icmp ult i8* %180, %181
  br i1 %182, label %bb66, label %bb65

bb65:                                             ; preds = %bb64
  %183 = call i16** @__ctype_b_loc() nounwind readnone
  %184 = load i16** %183, align 8
  %185 = load i8** %p, align 8
  %186 = load i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds i16* %184, i64 %188
  %190 = load i16* %189, align 1
  %191 = zext i16 %190 to i32
  %192 = and i32 %191, 8192
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %bb63, label %bb66

bb66:                                             ; preds = %bb12, %bb52, %bb53, %bb65, %bb64, %bb61
  %194 = load i8** %d, align 8
  store i8* %194, i8** %0, align 8
  %195 = load i8** %0, align 8
  store i8* %195, i8** %retval, align 8
  %retval67 = load i8** %retval
  ret i8* %retval67
}

define void @version_etc_arn(%struct.FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %command_name_addr = alloca i8*, align 8
  %package_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %authors_addr = alloca i8**, align 8
  %n_authors_addr = alloca i64, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  store i8* %command_name, i8** %command_name_addr
  store i8* %package, i8** %package_addr
  store i8* %version, i8** %version_addr
  store i8** %authors, i8*** %authors_addr
  store i64 %n_authors, i64* %n_authors_addr
  %0 = load i8** %command_name_addr, align 8
  %1 = icmp ne i8* %0, null
  %2 = load %struct.FILE** %stream_addr, align 8
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load i8** %command_name_addr, align 8
  %4 = load i8** %package_addr, align 8
  %5 = load i8** %version_addr, align 8
  %6 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %2, i8* noalias getelementptr inbounds ([12 x i8]* @.str192, i64 0, i64 0), i8* %3, i8* %4, i8* %5) nounwind
  br label %bb2

bb1:                                              ; preds = %entry
  %7 = load i8** %package_addr, align 8
  %8 = load i8** %version_addr, align 8
  %9 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %2, i8* noalias getelementptr inbounds ([7 x i8]* @.str1193, i64 0, i64 0), i8* %7, i8* %8) nounwind
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %10 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8]* @.str2194, i64 0, i64 0)) nounwind
  %11 = load %struct.FILE** %stream_addr, align 8
  %12 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %11, i8* noalias getelementptr inbounds ([47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %10, i32 2014) noun
  %13 = call i8* @gettext(i8* getelementptr inbounds ([203 x i8]* @.str3195, i64 0, i64 0)) nounwind
  %14 = load %struct.FILE** %stream_addr, align 8
  %15 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %13, %struct.FILE* noalias %14) nounwind
  %16 = load i64* %n_authors_addr, align 8
  switch i64 %16, label %bb13 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb8
    i64 6, label %bb9
    i64 7, label %bb10
    i64 8, label %bb11
    i64 9, label %bb12
  ]

bb3:                                              ; preds = %bb2
  call void @abort() noreturn nounwind
  unreachable

bb4:                                              ; preds = %bb2
  %17 = load i8*** %authors_addr, align 8
  %18 = getelementptr inbounds i8** %17, i64 0
  %19 = load i8** %18, align 1
  %20 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8]* @.str4196, i64 0, i64 0)) nounwind
  %21 = load %struct.FILE** %stream_addr, align 8
  %22 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %21, i8* noalias %20, i8* %19) nounwind
  br label %return

bb5:                                              ; preds = %bb2
  %23 = load i8*** %authors_addr, align 8
  %24 = getelementptr inbounds i8** %23, i64 1
  %25 = load i8** %24, align 1
  %26 = load i8*** %authors_addr, align 8
  %27 = getelementptr inbounds i8** %26, i64 0
  %28 = load i8** %27, align 1
  %29 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8]* @.str5197, i64 0, i64 0)) nounwind
  %30 = load %struct.FILE** %stream_addr, align 8
  %31 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %30, i8* noalias %29, i8* %28, i8* %25) nounwind
  br label %return

bb6:                                              ; preds = %bb2
  %32 = load i8*** %authors_addr, align 8
  %33 = getelementptr inbounds i8** %32, i64 2
  %34 = load i8** %33, align 1
  %35 = load i8*** %authors_addr, align 8
  %36 = getelementptr inbounds i8** %35, i64 1
  %37 = load i8** %36, align 1
  %38 = load i8*** %authors_addr, align 8
  %39 = getelementptr inbounds i8** %38, i64 0
  %40 = load i8** %39, align 1
  %41 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8]* @.str6198, i64 0, i64 0)) nounwind
  %42 = load %struct.FILE** %stream_addr, align 8
  %43 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %42, i8* noalias %41, i8* %40, i8* %37, i8* %34) nounwind
  br label %return

bb7:                                              ; preds = %bb2
  %44 = load i8*** %authors_addr, align 8
  %45 = getelementptr inbounds i8** %44, i64 3
  %46 = load i8** %45, align 1
  %47 = load i8*** %authors_addr, align 8
  %48 = getelementptr inbounds i8** %47, i64 2
  %49 = load i8** %48, align 1
  %50 = load i8*** %authors_addr, align 8
  %51 = getelementptr inbounds i8** %50, i64 1
  %52 = load i8** %51, align 1
  %53 = load i8*** %authors_addr, align 8
  %54 = getelementptr inbounds i8** %53, i64 0
  %55 = load i8** %54, align 1
  %56 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8]* @.str7199, i64 0, i64 0)) nounwind
  %57 = load %struct.FILE** %stream_addr, align 8
  %58 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %57, i8* noalias %56, i8* %55, i8* %52, i8* %49, i8* %46) nounwind
  br label %return

bb8:                                              ; preds = %bb2
  %59 = load i8*** %authors_addr, align 8
  %60 = getelementptr inbounds i8** %59, i64 4
  %61 = load i8** %60, align 1
  %62 = load i8*** %authors_addr, align 8
  %63 = getelementptr inbounds i8** %62, i64 3
  %64 = load i8** %63, align 1
  %65 = load i8*** %authors_addr, align 8
  %66 = getelementptr inbounds i8** %65, i64 2
  %67 = load i8** %66, align 1
  %68 = load i8*** %authors_addr, align 8
  %69 = getelementptr inbounds i8** %68, i64 1
  %70 = load i8** %69, align 1
  %71 = load i8*** %authors_addr, align 8
  %72 = getelementptr inbounds i8** %71, i64 0
  %73 = load i8** %72, align 1
  %74 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8]* @.str8200, i64 0, i64 0)) nounwind
  %75 = load %struct.FILE** %stream_addr, align 8
  %76 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %75, i8* noalias %74, i8* %73, i8* %70, i8* %67, i8* %64, i8* %61) nounwind
  br label %return

bb9:                                              ; preds = %bb2
  %77 = load i8*** %authors_addr, align 8
  %78 = getelementptr inbounds i8** %77, i64 5
  %79 = load i8** %78, align 1
  %80 = load i8*** %authors_addr, align 8
  %81 = getelementptr inbounds i8** %80, i64 4
  %82 = load i8** %81, align 1
  %83 = load i8*** %authors_addr, align 8
  %84 = getelementptr inbounds i8** %83, i64 3
  %85 = load i8** %84, align 1
  %86 = load i8*** %authors_addr, align 8
  %87 = getelementptr inbounds i8** %86, i64 2
  %88 = load i8** %87, align 1
  %89 = load i8*** %authors_addr, align 8
  %90 = getelementptr inbounds i8** %89, i64 1
  %91 = load i8** %90, align 1
  %92 = load i8*** %authors_addr, align 8
  %93 = getelementptr inbounds i8** %92, i64 0
  %94 = load i8** %93, align 1
  %95 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8]* @.str9201, i64 0, i64 0)) nounwind
  %96 = load %struct.FILE** %stream_addr, align 8
  %97 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %96, i8* noalias %95, i8* %94, i8* %91, i8* %88, i8* %85, i8* %82, i8* %79) nounwind
  br label %return

bb10:                                             ; preds = %bb2
  %98 = load i8*** %authors_addr, align 8
  %99 = getelementptr inbounds i8** %98, i64 6
  %100 = load i8** %99, align 1
  %101 = load i8*** %authors_addr, align 8
  %102 = getelementptr inbounds i8** %101, i64 5
  %103 = load i8** %102, align 1
  %104 = load i8*** %authors_addr, align 8
  %105 = getelementptr inbounds i8** %104, i64 4
  %106 = load i8** %105, align 1
  %107 = load i8*** %authors_addr, align 8
  %108 = getelementptr inbounds i8** %107, i64 3
  %109 = load i8** %108, align 1
  %110 = load i8*** %authors_addr, align 8
  %111 = getelementptr inbounds i8** %110, i64 2
  %112 = load i8** %111, align 1
  %113 = load i8*** %authors_addr, align 8
  %114 = getelementptr inbounds i8** %113, i64 1
  %115 = load i8** %114, align 1
  %116 = load i8*** %authors_addr, align 8
  %117 = getelementptr inbounds i8** %116, i64 0
  %118 = load i8** %117, align 1
  %119 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8]* @.str10202, i64 0, i64 0)) nounwind
  %120 = load %struct.FILE** %stream_addr, align 8
  %121 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %120, i8* noalias %119, i8* %118, i8* %115, i8* %112, i8* %109, i8* %106, i8* %103, i8* %100) nounwind
  br label %return

bb11:                                             ; preds = %bb2
  %122 = load i8*** %authors_addr, align 8
  %123 = getelementptr inbounds i8** %122, i64 7
  %124 = load i8** %123, align 1
  %125 = load i8*** %authors_addr, align 8
  %126 = getelementptr inbounds i8** %125, i64 6
  %127 = load i8** %126, align 1
  %128 = load i8*** %authors_addr, align 8
  %129 = getelementptr inbounds i8** %128, i64 5
  %130 = load i8** %129, align 1
  %131 = load i8*** %authors_addr, align 8
  %132 = getelementptr inbounds i8** %131, i64 4
  %133 = load i8** %132, align 1
  %134 = load i8*** %authors_addr, align 8
  %135 = getelementptr inbounds i8** %134, i64 3
  %136 = load i8** %135, align 1
  %137 = load i8*** %authors_addr, align 8
  %138 = getelementptr inbounds i8** %137, i64 2
  %139 = load i8** %138, align 1
  %140 = load i8*** %authors_addr, align 8
  %141 = getelementptr inbounds i8** %140, i64 1
  %142 = load i8** %141, align 1
  %143 = load i8*** %authors_addr, align 8
  %144 = getelementptr inbounds i8** %143, i64 0
  %145 = load i8** %144, align 1
  %146 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8]* @.str11203, i64 0, i64 0)) nounwind
  %147 = load %struct.FILE** %stream_addr, align 8
  %148 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %147, i8* noalias %146, i8* %145, i8* %142, i8* %139, i8* %136, i8* %133, i8* %130, i8* %127, i8* %124) nounwind
  br label %return

bb12:                                             ; preds = %bb2
  %149 = load i8*** %authors_addr, align 8
  %150 = getelementptr inbounds i8** %149, i64 8
  %151 = load i8** %150, align 1
  %152 = load i8*** %authors_addr, align 8
  %153 = getelementptr inbounds i8** %152, i64 7
  %154 = load i8** %153, align 1
  %155 = load i8*** %authors_addr, align 8
  %156 = getelementptr inbounds i8** %155, i64 6
  %157 = load i8** %156, align 1
  %158 = load i8*** %authors_addr, align 8
  %159 = getelementptr inbounds i8** %158, i64 5
  %160 = load i8** %159, align 1
  %161 = load i8*** %authors_addr, align 8
  %162 = getelementptr inbounds i8** %161, i64 4
  %163 = load i8** %162, align 1
  %164 = load i8*** %authors_addr, align 8
  %165 = getelementptr inbounds i8** %164, i64 3
  %166 = load i8** %165, align 1
  %167 = load i8*** %authors_addr, align 8
  %168 = getelementptr inbounds i8** %167, i64 2
  %169 = load i8** %168, align 1
  %170 = load i8*** %authors_addr, align 8
  %171 = getelementptr inbounds i8** %170, i64 1
  %172 = load i8** %171, align 1
  %173 = load i8*** %authors_addr, align 8
  %174 = getelementptr inbounds i8** %173, i64 0
  %175 = load i8** %174, align 1
  %176 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8]* @.str12204, i64 0, i64 0)) nounwind
  %177 = load %struct.FILE** %stream_addr, align 8
  %178 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %177, i8* noalias %176, i8* %175, i8* %172, i8* %169, i8* %166, i8* %163, i8* %160, i8* %157, i8* %154, i8* %151)
  br label %return

bb13:                                             ; preds = %bb2
  %179 = load i8*** %authors_addr, align 8
  %180 = getelementptr inbounds i8** %179, i64 8
  %181 = load i8** %180, align 1
  %182 = load i8*** %authors_addr, align 8
  %183 = getelementptr inbounds i8** %182, i64 7
  %184 = load i8** %183, align 1
  %185 = load i8*** %authors_addr, align 8
  %186 = getelementptr inbounds i8** %185, i64 6
  %187 = load i8** %186, align 1
  %188 = load i8*** %authors_addr, align 8
  %189 = getelementptr inbounds i8** %188, i64 5
  %190 = load i8** %189, align 1
  %191 = load i8*** %authors_addr, align 8
  %192 = getelementptr inbounds i8** %191, i64 4
  %193 = load i8** %192, align 1
  %194 = load i8*** %authors_addr, align 8
  %195 = getelementptr inbounds i8** %194, i64 3
  %196 = load i8** %195, align 1
  %197 = load i8*** %authors_addr, align 8
  %198 = getelementptr inbounds i8** %197, i64 2
  %199 = load i8** %198, align 1
  %200 = load i8*** %authors_addr, align 8
  %201 = getelementptr inbounds i8** %200, i64 1
  %202 = load i8** %201, align 1
  %203 = load i8*** %authors_addr, align 8
  %204 = getelementptr inbounds i8** %203, i64 0
  %205 = load i8** %204, align 1
  %206 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8]* @.str13205, i64 0, i64 0)) nounwind
  %207 = load %struct.FILE** %stream_addr, align 8
  %208 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %207, i8* noalias %206, i8* %205, i8* %202, i8* %199, i8* %196, i8* %193, i8* %190, i8* %187, i8* %184, i8* %181)
  br label %return

return:                                           ; preds = %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13
  ret void
}

define void @version_etc_ar(%struct.FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %command_name_addr = alloca i8*, align 8
  %package_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %authors_addr = alloca i8**, align 8
  %n_authors = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  store i8* %command_name, i8** %command_name_addr
  store i8* %package, i8** %package_addr
  store i8* %version, i8** %version_addr
  store i8** %authors, i8*** %authors_addr
  store i64 0, i64* %n_authors, align 8
  br label %bb1

bb:                                               ; preds = %bb1
  %0 = load i64* %n_authors, align 8
  %1 = add i64 %0, 1
  store i64 %1, i64* %n_authors, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %2 = load i8*** %authors_addr, align 8
  %3 = load i64* %n_authors, align 8
  %4 = getelementptr inbounds i8** %2, i64 %3
  %5 = load i8** %4, align 1
  %6 = icmp ne i8* %5, null
  br i1 %6, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  %7 = load %struct.FILE** %stream_addr, align 8
  %8 = load i8** %command_name_addr, align 8
  %9 = load i8** %package_addr, align 8
  %10 = load i8** %version_addr, align 8
  %11 = load i8*** %authors_addr, align 8
  %12 = load i64* %n_authors, align 8
  call void @version_etc_arn(%struct.FILE* %7, i8* %8, i8* %9, i8* %10, i8** %11, i64 %12) nounwind
  ret void
}

define void @version_etc_va(%struct.FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %command_name_addr = alloca i8*, align 8
  %package_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %authors_addr = alloca %struct.__va_list_tag*, align 8
  %addr.15 = alloca i8*
  %n_authors = alloca i64
  %authtab = alloca [10 x i8*]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  store i8* %command_name, i8** %command_name_addr
  store i8* %package, i8** %package_addr
  store i8* %version, i8** %version_addr
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors_addr
  store i64 0, i64* %n_authors, align 8
  br label %bb1

bb:                                               ; preds = %bb5
  %0 = load i64* %n_authors, align 8
  %1 = add i64 %0, 1
  store i64 %1, i64* %n_authors, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %2 = load i64* %n_authors, align 8
  %3 = icmp ugt i64 %2, 9
  br i1 %3, label %bb6, label %bb2

bb2:                                              ; preds = %bb1
  %4 = load i64* %n_authors, align 8
  %5 = load %struct.__va_list_tag** %authors_addr, align 8
  %6 = getelementptr inbounds %struct.__va_list_tag* %5, i32 0, i32 0
  %7 = load i32* %6, align 8
  %8 = icmp uge i32 %7, 48
  %9 = load %struct.__va_list_tag** %authors_addr, align 8
  br i1 %8, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %10 = getelementptr inbounds %struct.__va_list_tag* %9, i32 0, i32 3
  %11 = load i8** %10, align 8
  %12 = load %struct.__va_list_tag** %authors_addr, align 8
  %13 = getelementptr inbounds %struct.__va_list_tag* %12, i32 0, i32 0
  %14 = load i32* %13, align 8
  %15 = inttoptr i32 %14 to i8*
  %16 = ptrtoint i8* %11 to i64
  %17 = ptrtoint i8* %15 to i64
  %18 = add i64 %16, %17
  %19 = inttoptr i64 %18 to i8*
  store i8* %19, i8** %addr.15, align 8
  %20 = load %struct.__va_list_tag** %authors_addr, align 8
  %21 = getelementptr inbounds %struct.__va_list_tag* %20, i32 0, i32 0
  %22 = load i32* %21, align 8
  %23 = add i32 %22, 8
  %24 = load %struct.__va_list_tag** %authors_addr, align 8
  %25 = getelementptr inbounds %struct.__va_list_tag* %24, i32 0, i32 0
  store i32 %23, i32* %25, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %26 = getelementptr inbounds %struct.__va_list_tag* %9, i32 0, i32 2
  %27 = load i8** %26, align 8
  store i8* %27, i8** %addr.15, align 8
  %28 = getelementptr inbounds i8* %27, i64 8
  %29 = load %struct.__va_list_tag** %authors_addr, align 8
  %30 = getelementptr inbounds %struct.__va_list_tag* %29, i32 0, i32 2
  store i8* %28, i8** %30, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %31 = load i8** %addr.15, align 8
  %32 = bitcast i8* %31 to i8**
  %33 = load i8** %32, align 8
  %34 = getelementptr inbounds [10 x i8*]* %authtab, i64 0, i64 %4
  store i8* %33, i8** %34, align 8
  %35 = getelementptr inbounds [10 x i8*]* %authtab, i64 0, i64 %4
  %36 = load i8** %35, align 8
  %37 = icmp ne i8* %36, null
  br i1 %37, label %bb, label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %38 = load %struct.FILE** %stream_addr, align 8
  %39 = load i8** %command_name_addr, align 8
  %40 = load i8** %package_addr, align 8
  %41 = load i8** %version_addr, align 8
  %authtab7 = bitcast [10 x i8*]* %authtab to i8**
  %42 = load i64* %n_authors, align 8
  call void @version_etc_arn(%struct.FILE* %38, i8* %39, i8* %40, i8* %41, i8** %authtab7, i64 %42) nounwind
  ret void
}

define void @version_etc(%struct.FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %command_name_addr = alloca i8*, align 8
  %package_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  store i8* %command_name, i8** %command_name_addr
  store i8* %package, i8** %package_addr
  store i8* %version, i8** %version_addr
  %authors1 = bitcast [1 x %struct.__va_list_tag]* %authors to %struct.__va_list_tag*
  %authors12 = bitcast %struct.__va_list_tag* %authors1 to i8*
  call void @llvm.va_start(i8* %authors12)
  %0 = load %struct.FILE** %stream_addr, align 8
  %1 = load i8** %command_name_addr, align 8
  %2 = load i8** %package_addr, align 8
  %3 = load i8** %version_addr, align 8
  %authors3 = bitcast [1 x %struct.__va_list_tag]* %authors to %struct.__va_list_tag*
  call void @version_etc_va(%struct.FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %authors3) nounwind
  %authors4 = bitcast [1 x %struct.__va_list_tag]* %authors to %struct.__va_list_tag*
  %authors45 = bitcast %struct.__va_list_tag* %authors4 to i8*
  call void @llvm.va_end(i8* %authors45)
  ret void
}

declare void @llvm.va_start(i8*) nounwind

declare void @llvm.va_end(i8*) nounwind

define void @emit_bug_reporting_address() nounwind {
entry:
  %0 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8]* @.str14206, i64 0, i64 0)) nounwind
  %1 = call i32 (i8*, ...)* @printf(i8* noalias %0, i8* getelementptr inbounds ([22 x i8]* @.str15207, i64 0, i64 0)) nounwind
  %2 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8]* @.str16208, i64 0, i64 0)) nounwind
  %3 = call i32 (i8*, ...)* @printf(i8* noalias %2, i8* getelementptr inbounds ([14 x i8]* @.str17209, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8]* @.str18210, i64 0, i64 0)) nounwind
  %4 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %5 = call i8* @gettext(i8* getelementptr inbounds ([64 x i8]* @.str19211, i64 0, i64 0)) nounwind
  %6 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %5, %struct.FILE* noalias %4) nounwind
  ret void
}

define noalias i8* @xnmalloc(i64 %n, i64 %s) nounwind inlinehint {
entry:
  %n_addr = alloca i64, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  store i64 %s, i64* %s_addr
  %1 = load i64* %s_addr, align 8
  %int_cast_to_i64 = bitcast i64 %1 to i64
  %2 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %3 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %3, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %4 = udiv i64 -1, %1
  %5 = load i64* %n_addr, align 8
  %6 = icmp ult i64 %4, %5
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %klee_div_zero_check.exit
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %klee_div_zero_check.exit
  %7 = load i64* %n_addr, align 8
  %8 = load i64* %s_addr, align 8
  %9 = mul i64 %7, %8
  %10 = call noalias i8* @xmalloc(i64 %9) nounwind
  store i8* %10, i8** %0, align 8
  %11 = load i8** %0, align 8
  store i8* %11, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i8* @xnrealloc(i8* %p, i64 %n, i64 %s) nounwind inlinehint {
entry:
  %p_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64 %n, i64* %n_addr
  store i64 %s, i64* %s_addr
  %1 = load i64* %s_addr, align 8
  %int_cast_to_i64 = bitcast i64 %1 to i64
  %2 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %3 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %3, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %4 = udiv i64 -1, %1
  %5 = load i64* %n_addr, align 8
  %6 = icmp ult i64 %4, %5
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %klee_div_zero_check.exit
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %klee_div_zero_check.exit
  %7 = load i64* %n_addr, align 8
  %8 = load i64* %s_addr, align 8
  %9 = mul i64 %7, %8
  %10 = load i8** %p_addr, align 8
  %11 = call i8* @xrealloc(i8* %10, i64 %9) nounwind
  store i8* %11, i8** %0, align 8
  %12 = load i8** %0, align 8
  store i8* %12, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) nounwind inlinehint {
entry:
  %p_addr = alloca i8*, align 8
  %pn_addr = alloca i64*, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %n = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64* %pn, i64** %pn_addr
  store i64 %s, i64* %s_addr
  %1 = load i64** %pn_addr, align 8
  %2 = load i64* %1, align 8
  store i64 %2, i64* %n, align 8
  %3 = load i8** %p_addr, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb, label %bb3

bb:                                               ; preds = %entry
  %5 = load i64* %n, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %bb1, label %bb6

bb1:                                              ; preds = %bb
  %7 = load i64* %s_addr, align 8
  %int_cast_to_i64 = bitcast i64 %7 to i64
  %8 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %9 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %9, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb1
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb1
  call void @klee_disable_symbex() nounwind
  %10 = udiv i64 128, %7
  store i64 %10, i64* %n, align 8
  %11 = load i64* %n, align 8
  %12 = icmp eq i64 %11, 0
  %13 = zext i1 %12 to i64
  %14 = load i64* %n, align 8
  %15 = add i64 %13, %14
  store i64 %15, i64* %n, align 8
  br label %bb6

bb3:                                              ; preds = %entry
  %16 = load i64* %s_addr, align 8
  %int_cast_to_i641 = bitcast i64 %16 to i64
  %17 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %18 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %18, label %bb.i3, label %klee_div_zero_check.exit4

bb.i3:                                            ; preds = %bb3
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit4:                        ; preds = %bb3
  call void @klee_disable_symbex() nounwind
  %19 = udiv i64 -6148914691236517206, %16
  %20 = load i64* %n, align 8
  %21 = icmp ule i64 %19, %20
  br i1 %21, label %bb4, label %bb5

bb4:                                              ; preds = %klee_div_zero_check.exit4
  call void @xalloc_die() noreturn nounwind
  unreachable

bb5:                                              ; preds = %klee_div_zero_check.exit4
  %22 = load i64* %n, align 8
  %23 = add i64 %22, 1
  %int_cast_to_i642 = bitcast i64 2 to i64
  %24 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %25 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %25, label %bb.i5, label %klee_div_zero_check.exit6

bb.i5:                                            ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit6:                        ; preds = %bb5
  call void @klee_disable_symbex() nounwind
  %26 = udiv i64 %23, 2
  %27 = load i64* %n, align 8
  %28 = add i64 %26, %27
  store i64 %28, i64* %n, align 8
  br label %bb6

bb6:                                              ; preds = %bb, %klee_div_zero_check.exit, %klee_div_zero_check.exit6
  %29 = load i64** %pn_addr, align 8
  %30 = load i64* %n, align 8
  store i64 %30, i64* %29, align 8
  %31 = load i64* %n, align 8
  %32 = load i64* %s_addr, align 8
  %33 = mul i64 %31, %32
  %34 = load i8** %p_addr, align 8
  %35 = call i8* @xrealloc(i8* %34, i64 %33) nounwind
  store i8* %35, i8** %0, align 8
  %36 = load i8** %0, align 8
  store i8* %36, i8** %retval, align 8
  %retval7 = load i8** %retval
  ret i8* %retval7
}

define noalias i8* @xcharalloc(i64 %n) nounwind inlinehint {
entry:
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  %1 = load i64* %n_addr, align 8
  %2 = call noalias i8* @xmalloc(i64 %1) nounwind
  store i8* %2, i8** %0, align 8
  %3 = load i8** %0, align 8
  store i8* %3, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define noalias i8* @xmalloc(i64 %n) nounwind {
entry:
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  %1 = load i64* %n_addr, align 8
  %2 = call noalias i8* @malloc(i64 %1) nounwind
  store i8* %2, i8** %p, align 8
  %3 = load i8** %p, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb, label %bb2

bb:                                               ; preds = %entry
  %5 = load i64* %n_addr, align 8
  %6 = icmp ne i64 %5, 0
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb, %entry
  %7 = load i8** %p, align 8
  store i8* %7, i8** %0, align 8
  %8 = load i8** %0, align 8
  store i8* %8, i8** %retval, align 8
  %retval3 = load i8** %retval
  ret i8* %retval3
}

define i8* @xrealloc(i8* %p, i64 %n) nounwind {
entry:
  %p_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64 %n, i64* %n_addr
  %1 = load i64* %n_addr, align 8
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %bb, label %bb2

bb:                                               ; preds = %entry
  %3 = load i8** %p_addr, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %5 = load i8** %p_addr, align 8
  call void @free(i8* %5) nounwind
  store i8* null, i8** %0, align 8
  br label %bb6

bb2:                                              ; preds = %bb, %entry
  %6 = load i8** %p_addr, align 8
  %7 = load i64* %n_addr, align 8
  %8 = call i8* @realloc(i8* %6, i64 %7) nounwind
  store i8* %8, i8** %p_addr, align 8
  %9 = load i8** %p_addr, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %bb3, label %bb5

bb3:                                              ; preds = %bb2
  %11 = load i64* %n_addr, align 8
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  call void @xalloc_die() noreturn nounwind
  unreachable

bb5:                                              ; preds = %bb3, %bb2
  %13 = load i8** %p_addr, align 8
  store i8* %13, i8** %0, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %14 = load i8** %0, align 8
  store i8* %14, i8** %retval, align 8
  %retval7 = load i8** %retval
  ret i8* %retval7
}

define i8* @x2realloc(i8* %p, i64* %pn) nounwind {
entry:
  %p_addr = alloca i8*, align 8
  %pn_addr = alloca i64*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64* %pn, i64** %pn_addr
  %1 = load i8** %p_addr, align 8
  %2 = load i64** %pn_addr, align 8
  %3 = call i8* @x2nrealloc(i8* %1, i64* %2, i64 1) nounwind inlinehint
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define noalias i8* @xzalloc(i64 %s) nounwind {
entry:
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %s, i64* %s_addr
  %1 = load i64* %s_addr, align 8
  %2 = call noalias i8* @xmalloc(i64 %1) nounwind
  %3 = load i64* %s_addr, align 8
  %4 = call i8* @memset(i8* %2, i32 0, i64 %3)
  store i8* %2, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define noalias i8* @xcalloc(i64 %n, i64 %s) nounwind {
entry:
  %n_addr = alloca i64, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  store i64 %s, i64* %s_addr
  %1 = load i64* %n_addr, align 8
  %2 = load i64* %s_addr, align 8
  %3 = call noalias i8* @calloc(i64 %1, i64 %2) nounwind
  store i8* %3, i8** %p, align 8
  %4 = load i8** %p, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %6 = load i8** %p, align 8
  store i8* %6, i8** %0, align 8
  %7 = load i8** %0, align 8
  store i8* %7, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define noalias i8* @xmemdup(i8* %p, i64 %s) nounwind {
entry:
  %p_addr = alloca i8*, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64 %s, i64* %s_addr
  %1 = load i64* %s_addr, align 8
  %2 = call noalias i8* @xmalloc(i64 %1) nounwind
  %3 = load i8** %p_addr, align 8
  %4 = load i64* %s_addr, align 8
  %5 = call i8* @memcpy(i8* %2, i8* %3, i64 %4)
  store i8* %2, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define noalias i8* @xstrdup(i8* %string) nounwind {
entry:
  %string_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  %1 = load i8** %string_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  %3 = add i64 %2, 1
  %4 = load i8** %string_addr, align 8
  %5 = call noalias i8* @xmemdup(i8* %4, i64 %3) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define void @xalloc_die() noreturn nounwind {
entry:
  %0 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8]* @.str221, i64 0, i64 0)) nounwind
  %1 = volatile load i32* @exit_failure, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 %1, i32 0, i8* getelementptr inbounds ([3 x i8]* @.str1222, i64 0, i64 0), i8* %0) nounwind
  call void @abort() noreturn nounwind
  unreachable
}

define i8* @xgetcwd() nounwind {
entry:
  %retval = alloca i8*
  %0 = alloca i8*
  %cwd = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  %1 = call i8* @getcwd(i8* null, i64 0) nounwind
  store i8* %1, i8** %cwd, align 8
  %2 = load i8** %cwd, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %bb, label %bb2

bb:                                               ; preds = %entry
  %4 = call i32* @__errno_location() nounwind readnone
  %5 = load i32* %4, align 4
  %6 = icmp eq i32 %5, 12
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb, %entry
  %7 = load i8** %cwd, align 8
  store i8* %7, i8** %0, align 8
  %8 = load i8** %0, align 8
  store i8* %8, i8** %retval, align 8
  %retval3 = load i8** %retval
  ret i8* %retval3
}

define i32 @xmem_cd_iconv(i8* %src, i64 %srclen, i8* %cd, i8** %resultp, i64* %lengthp) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %srclen_addr = alloca i64, align 8
  %cd_addr = alloca i8*, align 8
  %resultp_addr = alloca i8**, align 8
  %lengthp_addr = alloca i64*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %retval1 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i64 %srclen, i64* %srclen_addr
  store i8* %cd, i8** %cd_addr
  store i8** %resultp, i8*** %resultp_addr
  store i64* %lengthp, i64** %lengthp_addr
  %1 = load i8** %src_addr, align 8
  %2 = load i64* %srclen_addr, align 8
  %3 = load i8** %cd_addr, align 8
  %4 = load i8*** %resultp_addr, align 8
  %5 = load i64** %lengthp_addr, align 8
  %6 = call i32 @mem_cd_iconv(i8* %1, i64 %2, i8* %3, i8** %4, i64* %5) nounwind
  store i32 %6, i32* %retval1, align 4
  %7 = load i32* %retval1, align 4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %bb, label %bb3

bb:                                               ; preds = %entry
  %9 = call i32* @__errno_location() nounwind readnone
  %10 = load i32* %9, align 4
  %11 = icmp eq i32 %10, 12
  br i1 %11, label %bb2, label %bb3

bb2:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb3:                                              ; preds = %bb, %entry
  %12 = load i32* %retval1, align 4
  store i32 %12, i32* %0, align 4
  %13 = load i32* %0, align 4
  store i32 %13, i32* %retval, align 4
  %retval4 = load i32* %retval
  ret i32 %retval4
}

define i8* @xstr_cd_iconv(i8* %src, i8* %cd) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %cd_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %result = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i8* %cd, i8** %cd_addr
  %1 = load i8** %src_addr, align 8
  %2 = load i8** %cd_addr, align 8
  %3 = call i8* @str_cd_iconv(i8* %1, i8* %2) nounwind
  store i8* %3, i8** %result, align 8
  %4 = load i8** %result, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %bb, label %bb2

bb:                                               ; preds = %entry
  %6 = call i32* @__errno_location() nounwind readnone
  %7 = load i32* %6, align 4
  %8 = icmp eq i32 %7, 12
  br i1 %8, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb, %entry
  %9 = load i8** %result, align 8
  store i8* %9, i8** %0, align 8
  %10 = load i8** %0, align 8
  store i8* %10, i8** %retval, align 8
  %retval3 = load i8** %retval
  ret i8* %retval3
}

define i8* @xstr_iconv(i8* %src, i8* %from_codeset, i8* %to_codeset) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %from_codeset_addr = alloca i8*, align 8
  %to_codeset_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %result = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i8* %from_codeset, i8** %from_codeset_addr
  store i8* %to_codeset, i8** %to_codeset_addr
  %1 = load i8** %src_addr, align 8
  %2 = load i8** %from_codeset_addr, align 8
  %3 = load i8** %to_codeset_addr, align 8
  %4 = call i8* @str_iconv(i8* %1, i8* %2, i8* %3) nounwind
  store i8* %4, i8** %result, align 8
  %5 = load i8** %result, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %bb, label %bb2

bb:                                               ; preds = %entry
  %7 = call i32* @__errno_location() nounwind readnone
  %8 = load i32* %7, align 4
  %9 = icmp eq i32 %8, 12
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb, %entry
  %10 = load i8** %result, align 8
  store i8* %10, i8** %0, align 8
  %11 = load i8** %0, align 8
  store i8* %11, i8** %retval, align 8
  %retval3 = load i8** %retval
  ret i8* %retval3
}

define internal void @xstrtol_error(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg, i32 %exit_status) nounwind {
entry:
  %err_addr = alloca i32, align 4
  %opt_idx_addr = alloca i32, align 4
  %c_addr = alloca i8, align 1
  %long_options_addr = alloca %struct.option*, align 8
  %arg_addr = alloca i8*, align 8
  %exit_status_addr = alloca i32, align 4
  %hyphens = alloca i8*
  %msgid = alloca i8*
  %option = alloca i8*
  %option_buffer = alloca [2 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i32 %err, i32* %err_addr
  store i32 %opt_idx, i32* %opt_idx_addr
  store i8 %c, i8* %c_addr
  store %struct.option* %long_options, %struct.option** %long_options_addr
  store i8* %arg, i8** %arg_addr
  store i32 %exit_status, i32* %exit_status_addr
  store i8* getelementptr inbounds ([3 x i8]* @.str226, i64 0, i64 0), i8** %hyphens, align 8
  %0 = load i32* %err_addr, align 4
  switch i32 %0, label %bb [
    i32 1, label %bb3
    i32 2, label %bb2
    i32 3, label %bb2
    i32 4, label %bb1
  ]

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  store i8* getelementptr inbounds ([27 x i8]* @.str1227, i64 0, i64 0), i8** %msgid, align 8
  br label %bb4

bb2:                                              ; preds = %entry, %entry
  store i8* getelementptr inbounds ([37 x i8]* @.str2228, i64 0, i64 0), i8** %msgid, align 8
  br label %bb4

bb3:                                              ; preds = %entry
  store i8* getelementptr inbounds ([29 x i8]* @.str3229, i64 0, i64 0), i8** %msgid, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2, %bb1
  %1 = load i32* %opt_idx_addr, align 4
  %2 = icmp slt i32 %1, 0
  br i1 %2, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %3 = load i32* %opt_idx_addr, align 4
  %4 = sext i32 %3 to i64
  %5 = sub nsw i64 0, %4
  %6 = load i8** %hyphens, align 8
  %7 = getelementptr inbounds i8* %6, i64 %5
  store i8* %7, i8** %hyphens, align 8
  %8 = getelementptr inbounds [2 x i8]* %option_buffer, i64 0, i64 0
  %9 = load i8* %c_addr, align 1
  store i8 %9, i8* %8, align 1
  %10 = getelementptr inbounds [2 x i8]* %option_buffer, i64 0, i64 1
  store i8 0, i8* %10, align 1
  %option_buffer6 = bitcast [2 x i8]* %option_buffer to i8*
  store i8* %option_buffer6, i8** %option, align 8
  br label %bb8

bb7:                                              ; preds = %bb4
  %11 = load %struct.option** %long_options_addr, align 8
  %12 = load i32* %opt_idx_addr, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %struct.option* %11, i64 %13
  %15 = getelementptr inbounds %struct.option* %14, i32 0, i32 0
  %16 = load i8** %15, align 8
  store i8* %16, i8** %option, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %17 = load i8** %msgid, align 8
  %18 = call i8* @gettext(i8* %17) nounwind
  %19 = load i32* %exit_status_addr, align 4
  %20 = load i8** %hyphens, align 8
  %21 = load i8** %option, align 8
  %22 = load i8** %arg_addr, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 %19, i32 0, i8* %18, i8* %20, i8* %21, i8* %22) nounwind
  ret void
}

define void @xstrtol_fatal(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg) noreturn nounwind {
entry:
  %err_addr = alloca i32, align 4
  %opt_idx_addr = alloca i32, align 4
  %c_addr = alloca i8, align 1
  %long_options_addr = alloca %struct.option*, align 8
  %arg_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %err, i32* %err_addr
  store i32 %opt_idx, i32* %opt_idx_addr
  store i8 %c, i8* %c_addr
  store %struct.option* %long_options, %struct.option** %long_options_addr
  store i8* %arg, i8** %arg_addr
  %0 = volatile load i32* @exit_failure, align 4
  %1 = load i8* %c_addr, align 1
  %2 = sext i8 %1 to i32
  %3 = load i32* %err_addr, align 4
  %4 = load i32* %opt_idx_addr, align 4
  %5 = trunc i32 %2 to i8
  %6 = load %struct.option** %long_options_addr, align 8
  %7 = load i8** %arg_addr, align 8
  call void @xstrtol_error(i32 %3, i32 %4, i8 signext %5, %struct.option* %6, i8* %7, i32 %0) nounwind
  call void @abort() noreturn nounwind
  unreachable
}

define internal i32 @bkm_scale(i64* %x, i32 %scale_factor) nounwind {
entry:
  %x_addr = alloca i64*, align 8
  %scale_factor_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i64* %x, i64** %x_addr
  store i32 %scale_factor, i32* %scale_factor_addr
  %1 = load i32* %scale_factor_addr, align 4
  %2 = sext i32 %1 to i64
  %int_cast_to_i64 = bitcast i64 %2 to i64
  %3 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %4 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %4, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %5 = udiv i64 -1, %2
  %6 = load i64** %x_addr, align 8
  %7 = load i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  %9 = load i64** %x_addr, align 8
  br i1 %8, label %bb, label %bb1

bb:                                               ; preds = %klee_div_zero_check.exit
  store i64 -1, i64* %9, align 8
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %klee_div_zero_check.exit
  %10 = load i64* %9, align 8
  %11 = load i32* %scale_factor_addr, align 4
  %12 = sext i32 %11 to i64
  %13 = mul i64 %10, %12
  %14 = load i64** %x_addr, align 8
  store i64 %13, i64* %14, align 8
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %15 = load i32* %0, align 4
  store i32 %15, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define internal i32 @bkm_scale_by_power(i64* %x, i32 %base, i32 %power) nounwind {
entry:
  %x_addr = alloca i64*, align 8
  %base_addr = alloca i32, align 4
  %power_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %err = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i64* %x, i64** %x_addr
  store i32 %base, i32* %base_addr
  store i32 %power, i32* %power_addr
  store i32 0, i32* %err, align 4
  br label %bb1

bb:                                               ; preds = %bb1
  %1 = load i64** %x_addr, align 8
  %2 = load i32* %base_addr, align 4
  %3 = call i32 @bkm_scale(i64* %1, i32 %2) nounwind
  %4 = load i32* %err, align 4
  %5 = or i32 %3, %4
  store i32 %5, i32* %err, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %6 = load i32* %power_addr, align 4
  %7 = sub nsw i32 %6, 1
  store i32 %7, i32* %power_addr, align 4
  %8 = load i32* %power_addr, align 4
  %9 = icmp ne i32 %8, -1
  br i1 %9, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  %10 = load i32* %err, align 4
  store i32 %10, i32* %0, align 4
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @xstrtoumax(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %ptr_addr = alloca i8**, align 8
  %strtol_base_addr = alloca i32, align 4
  %val_addr = alloca i64*, align 8
  %valid_suffixes_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.0 = alloca i8**
  %t_ptr = alloca i8*
  %p = alloca i8**
  %tmp = alloca i64
  %err = alloca i32
  %q = alloca i8*
  %ch = alloca i8
  %base = alloca i32
  %suffixes = alloca i32
  %overflow = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i8** %ptr, i8*** %ptr_addr
  store i32 %strtol_base, i32* %strtol_base_addr
  store i64* %val, i64** %val_addr
  store i8* %valid_suffixes, i8** %valid_suffixes_addr
  store i32 0, i32* %err, align 4
  %1 = load i32* %strtol_base_addr, align 4
  %2 = icmp slt i32 %1, 0
  %3 = load i32* %strtol_base_addr, align 4
  %4 = icmp sgt i32 %3, 36
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb2, label %bb1

bb1:                                              ; preds = %entry
  %5 = load i8*** %ptr_addr, align 8
  %6 = icmp eq i8** %5, null
  br i1 %6, label %bb3, label %bb4

bb2:                                              ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8]* @.str231, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1232, i64 0, i64 0), i32 96, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3300, i64 0, i64 0)) noreturn 
  unreachable

bb3:                                              ; preds = %bb1
  store i8** %t_ptr, i8*** %iftmp.0, align 8
  br label %bb5

bb4:                                              ; preds = %bb1
  %7 = load i8*** %ptr_addr, align 8
  store i8** %7, i8*** %iftmp.0, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %8 = load i8*** %iftmp.0, align 8
  store i8** %8, i8*** %p, align 8
  %9 = load i8** %s_addr, align 8
  store i8* %9, i8** %q, align 8
  %10 = load i8** %q, align 8
  %11 = load i8* %10, align 1
  store i8 %11, i8* %ch, align 1
  br label %bb7

bb6:                                              ; preds = %bb7
  %12 = load i8** %q, align 8
  %13 = getelementptr inbounds i8* %12, i64 1
  store i8* %13, i8** %q, align 8
  %14 = load i8** %q, align 8
  %15 = load i8* %14, align 1
  store i8 %15, i8* %ch, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %16 = call i16** @__ctype_b_loc() nounwind readnone
  %17 = load i16** %16, align 8
  %18 = load i8* %ch, align 1
  %19 = zext i8 %18 to i32
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i16* %17, i64 %20
  %22 = load i16* %21, align 1
  %23 = zext i16 %22 to i32
  %24 = and i32 %23, 8192
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %bb6, label %bb8

bb8:                                              ; preds = %bb7
  %26 = load i8* %ch, align 1
  %27 = icmp eq i8 %26, 45
  br i1 %27, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 4, i32* %0, align 4
  br label %bb48

bb10:                                             ; preds = %bb8
  %28 = call i32* @__errno_location() nounwind readnone
  store i32 0, i32* %28, align 4
  %29 = load i8** %s_addr, align 8
  %30 = load i8*** %p, align 8
  %31 = load i32* %strtol_base_addr, align 4
  %32 = call i64 @strtoul(i8* noalias %29, i8** noalias %30, i32 %31) nounwind
  store i64 %32, i64* %tmp, align 8
  %33 = load i8*** %p, align 8
  %34 = load i8** %33, align 8
  %35 = load i8** %s_addr, align 8
  %36 = icmp eq i8* %34, %35
  br i1 %36, label %bb11, label %bb16

bb11:                                             ; preds = %bb10
  %37 = load i8** %valid_suffixes_addr, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %bb15, label %bb12

bb12:                                             ; preds = %bb11
  %39 = load i8*** %p, align 8
  %40 = load i8** %39, align 8
  %41 = load i8* %40, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %bb15, label %bb13

bb13:                                             ; preds = %bb12
  %43 = load i8*** %p, align 8
  %44 = load i8** %43, align 8
  %45 = load i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = load i8** %valid_suffixes_addr, align 8
  %48 = call i8* @strchr(i8* %47, i32 %46) nounwind readonly
  %49 = icmp eq i8* %48, null
  br i1 %49, label %bb15, label %bb14

bb14:                                             ; preds = %bb13
  store i64 1, i64* %tmp, align 8
  br label %bb20

bb15:                                             ; preds = %bb13, %bb12, %bb11
  store i32 4, i32* %0, align 4
  br label %bb48

bb16:                                             ; preds = %bb10
  %50 = call i32* @__errno_location() nounwind readnone
  %51 = load i32* %50, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %bb17, label %bb20

bb17:                                             ; preds = %bb16
  %53 = call i32* @__errno_location() nounwind readnone
  %54 = load i32* %53, align 4
  %55 = icmp ne i32 %54, 34
  br i1 %55, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  store i32 4, i32* %0, align 4
  br label %bb48

bb19:                                             ; preds = %bb17
  store i32 1, i32* %err, align 4
  br label %bb20

bb20:                                             ; preds = %bb19, %bb16, %bb14
  %56 = load i8** %valid_suffixes_addr, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %58 = load i64* %tmp, align 8
  %59 = load i64** %val_addr, align 8
  store i64 %58, i64* %59, align 8
  %60 = load i32* %err, align 4
  store i32 %60, i32* %0, align 4
  br label %bb48

bb22:                                             ; preds = %bb20
  %61 = load i8*** %p, align 8
  %62 = load i8** %61, align 8
  %63 = load i8* %62, align 1
  %64 = icmp ne i8 %63, 0
  br i1 %64, label %bb23, label %bb47

bb23:                                             ; preds = %bb22
  store i32 1024, i32* %base, align 4
  store i32 1, i32* %suffixes, align 4
  %65 = load i8*** %p, align 8
  %66 = load i8** %65, align 8
  %67 = load i8* %66, align 1
  %68 = sext i8 %67 to i32
  %69 = load i8** %valid_suffixes_addr, align 8
  %70 = call i8* @strchr(i8* %69, i32 %68) nounwind readonly
  %71 = icmp eq i8* %70, null
  br i1 %71, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %72 = load i64* %tmp, align 8
  %73 = load i64** %val_addr, align 8
  store i64 %72, i64* %73, align 8
  %74 = load i32* %err, align 4
  %75 = or i32 %74, 2
  store i32 %75, i32* %0, align 4
  br label %bb48

bb25:                                             ; preds = %bb23
  %76 = load i8** %valid_suffixes_addr, align 8
  %77 = call i8* @strchr(i8* %76, i32 48) nounwind readonly
  %78 = icmp ne i8* %77, null
  br i1 %78, label %bb26, label %bb31

bb26:                                             ; preds = %bb25
  %79 = load i8*** %p, align 8
  %80 = getelementptr inbounds i8** %79, i64 0
  %81 = load i8** %80, align 1
  %82 = getelementptr inbounds i8* %81, i64 1
  %83 = load i8* %82, align 1
  %84 = sext i8 %83 to i32
  switch i32 %84, label %bb31 [
    i32 66, label %bb30
    i32 68, label %bb30
    i32 105, label %bb27
  ]

bb27:                                             ; preds = %bb26
  %85 = load i8*** %p, align 8
  %86 = getelementptr inbounds i8** %85, i64 0
  %87 = load i8** %86, align 1
  %88 = getelementptr inbounds i8* %87, i64 2
  %89 = load i8* %88, align 1
  %90 = icmp eq i8 %89, 66
  br i1 %90, label %bb28, label %bb31

bb28:                                             ; preds = %bb27
  %91 = load i32* %suffixes, align 4
  %92 = add nsw i32 %91, 2
  store i32 %92, i32* %suffixes, align 4
  br label %bb31

bb30:                                             ; preds = %bb26, %bb26
  store i32 1000, i32* %base, align 4
  %93 = load i32* %suffixes, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %suffixes, align 4
  br label %bb31

bb31:                                             ; preds = %bb27, %bb28, %bb30, %bb26, %bb25
  %95 = load i8*** %p, align 8
  %96 = load i8** %95, align 8
  %97 = load i8* %96, align 1
  %98 = sext i8 %97 to i32
  switch i32 %98, label %bb44 [
    i32 66, label %bb33
    i32 69, label %bb35
    i32 71, label %bb36
    i32 75, label %bb37
    i32 77, label %bb38
    i32 80, label %bb39
    i32 84, label %bb40
    i32 89, label %bb42
    i32 90, label %bb43
    i32 98, label %bb32
    i32 99, label %bb34
    i32 103, label %bb36
    i32 107, label %bb37
    i32 109, label %bb38
    i32 116, label %bb40
    i32 119, label %bb41
  ]

bb32:                                             ; preds = %bb31
  %99 = call i32 @bkm_scale(i64* %tmp, i32 512) nounwind
  store i32 %99, i32* %overflow, align 4
  br label %bb45

bb33:                                             ; preds = %bb31
  %100 = call i32 @bkm_scale(i64* %tmp, i32 1024) nounwind
  store i32 %100, i32* %overflow, align 4
  br label %bb45

bb34:                                             ; preds = %bb31
  store i32 0, i32* %overflow, align 4
  br label %bb45

bb35:                                             ; preds = %bb31
  %101 = load i32* %base, align 4
  %102 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %101, i32 6) nounwind
  store i32 %102, i32* %overflow, align 4
  br label %bb45

bb36:                                             ; preds = %bb31, %bb31
  %103 = load i32* %base, align 4
  %104 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %103, i32 3) nounwind
  store i32 %104, i32* %overflow, align 4
  br label %bb45

bb37:                                             ; preds = %bb31, %bb31
  %105 = load i32* %base, align 4
  %106 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %105, i32 1) nounwind
  store i32 %106, i32* %overflow, align 4
  br label %bb45

bb38:                                             ; preds = %bb31, %bb31
  %107 = load i32* %base, align 4
  %108 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %107, i32 2) nounwind
  store i32 %108, i32* %overflow, align 4
  br label %bb45

bb39:                                             ; preds = %bb31
  %109 = load i32* %base, align 4
  %110 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %109, i32 5) nounwind
  store i32 %110, i32* %overflow, align 4
  br label %bb45

bb40:                                             ; preds = %bb31, %bb31
  %111 = load i32* %base, align 4
  %112 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %111, i32 4) nounwind
  store i32 %112, i32* %overflow, align 4
  br label %bb45

bb41:                                             ; preds = %bb31
  %113 = call i32 @bkm_scale(i64* %tmp, i32 2) nounwind
  store i32 %113, i32* %overflow, align 4
  br label %bb45

bb42:                                             ; preds = %bb31
  %114 = load i32* %base, align 4
  %115 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %114, i32 8) nounwind
  store i32 %115, i32* %overflow, align 4
  br label %bb45

bb43:                                             ; preds = %bb31
  %116 = load i32* %base, align 4
  %117 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %116, i32 7) nounwind
  store i32 %117, i32* %overflow, align 4
  br label %bb45

bb44:                                             ; preds = %bb31
  %118 = load i64* %tmp, align 8
  %119 = load i64** %val_addr, align 8
  store i64 %118, i64* %119, align 8
  %120 = load i32* %err, align 4
  %121 = or i32 %120, 2
  store i32 %121, i32* %0, align 4
  br label %bb48

bb45:                                             ; preds = %bb43, %bb42, %bb41, %bb40, %bb39, %bb38, %bb37, %bb36, %bb35, %bb34, %bb33, %bb32
  %122 = load i32* %err, align 4
  %123 = load i32* %overflow, align 4
  %124 = or i32 %122, %123
  store i32 %124, i32* %err, align 4
  %125 = load i8*** %p, align 8
  %126 = load i8** %125, align 8
  %127 = load i32* %suffixes, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8* %126, i64 %128
  %130 = load i8*** %p, align 8
  store i8* %129, i8** %130, align 8
  %131 = load i8*** %p, align 8
  %132 = load i8** %131, align 8
  %133 = load i8* %132, align 1
  %134 = icmp ne i8 %133, 0
  br i1 %134, label %bb46, label %bb47

bb46:                                             ; preds = %bb45
  %135 = load i32* %err, align 4
  %136 = or i32 %135, 2
  store i32 %136, i32* %err, align 4
  br label %bb47

bb47:                                             ; preds = %bb46, %bb45, %bb22
  %137 = load i64* %tmp, align 8
  %138 = load i64** %val_addr, align 8
  store i64 %137, i64* %138, align 8
  %139 = load i32* %err, align 4
  store i32 %139, i32* %0, align 4
  br label %bb48

bb48:                                             ; preds = %bb47, %bb44, %bb24, %bb21, %bb18, %bb15, %bb9
  %140 = load i32* %0, align 4
  store i32 %140, i32* %retval, align 4
  %retval49 = load i32* %retval
  ret i32 %retval49
}

define i32 @rpl_asprintf(i8** %resultp, i8* %format, ...) nounwind {
entry:
  %resultp_addr = alloca i8**, align 8
  %format_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %args = alloca [1 x %struct.__va_list_tag]
  %result = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8** %resultp, i8*** %resultp_addr
  store i8* %format, i8** %format_addr
  %args1 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*
  %args12 = bitcast %struct.__va_list_tag* %args1 to i8*
  call void @llvm.va_start(i8* %args12)
  %1 = load i8*** %resultp_addr, align 8
  %2 = load i8** %format_addr, align 8
  %args3 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*
  %3 = call i32 @rpl_vasprintf(i8** %1, i8* %2, %struct.__va_list_tag* %args3) nounwind
  store i32 %3, i32* %result, align 4
  %args4 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*
  %args45 = bitcast %struct.__va_list_tag* %args4 to i8*
  call void @llvm.va_end(i8* %args45)
  %4 = load i32* %result, align 4
  store i32 %4, i32* %0, align 4
  %5 = load i32* %0, align 4
  store i32 %5, i32* %retval, align 4
  %retval6 = load i32* %retval
  ret i32 %retval6
}

define internal void @cdb_init(%struct.cd_buf* %cdb) nounwind {
entry:
  %cdb_addr = alloca %struct.cd_buf*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cd_buf* %cdb, %struct.cd_buf** %cdb_addr
  %0 = load %struct.cd_buf** %cdb_addr, align 8
  %1 = getelementptr inbounds %struct.cd_buf* %0, i32 0, i32 0
  store i32 -100, i32* %1, align 4
  ret void
}

define internal i32 @cdb_fchdir(%struct.cd_buf* %cdb) nounwind {
entry:
  %cdb_addr = alloca %struct.cd_buf*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cd_buf* %cdb, %struct.cd_buf** %cdb_addr
  %1 = load %struct.cd_buf** %cdb_addr, align 8
  %2 = getelementptr inbounds %struct.cd_buf* %1, i32 0, i32 0
  %3 = load i32* %2, align 4
  %4 = call i32 @fchdir(i32 %3) nounwind
  store i32 %4, i32* %0, align 4
  %5 = load i32* %0, align 4
  store i32 %5, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define internal void @cdb_free(%struct.cd_buf* %cdb) nounwind {
entry:
  %cdb_addr = alloca %struct.cd_buf*, align 8
  %close_fail = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cd_buf* %cdb, %struct.cd_buf** %cdb_addr
  %0 = load %struct.cd_buf** %cdb_addr, align 8
  %1 = getelementptr inbounds %struct.cd_buf* %0, i32 0, i32 0
  %2 = load i32* %1, align 4
  %3 = icmp sge i32 %2, 0
  br i1 %3, label %bb, label %return

bb:                                               ; preds = %entry
  %4 = load %struct.cd_buf** %cdb_addr, align 8
  %5 = getelementptr inbounds %struct.cd_buf* %4, i32 0, i32 0
  %6 = load i32* %5, align 4
  %7 = call i32 @close(i32 %6) nounwind
  %8 = icmp ne i32 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %close_fail, align 1
  %10 = load i8* %close_fail, align 1
  %toBool = icmp ne i8 %10, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  %toBool3not = xor i1 %toBool3, true
  %toBool3not4 = zext i1 %toBool3not to i8
  %toBool6 = icmp ne i8 %toBool3not4, 0
  br i1 %toBool6, label %bb7, label %return

bb7:                                              ; preds = %bb
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8]* @.str235, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1236, i64 0, i64 0), i32 63, i8* getelementptr inbounds ([9 x i8]* @__PRETTY_FUNCTION__.3963, i64 0, i64 0)) noreturn n
  unreachable

return:                                           ; preds = %entry, %bb
  ret void
}

define internal i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* %dir) nounwind {
entry:
  %cdb_addr = alloca %struct.cd_buf*, align 8
  %dir_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %new_fd = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cd_buf* %cdb, %struct.cd_buf** %cdb_addr
  store i8* %dir, i8** %dir_addr
  %1 = load %struct.cd_buf** %cdb_addr, align 8
  %2 = getelementptr inbounds %struct.cd_buf* %1, i32 0, i32 0
  %3 = load i32* %2, align 4
  %4 = load i8** %dir_addr, align 8
  %5 = call i32 (i32, i8*, i32, ...)* @openat(i32 %3, i8* %4, i32 67840) nounwind
  store i32 %5, i32* %new_fd, align 4
  %6 = load i32* %new_fd, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 -1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  %8 = load %struct.cd_buf** %cdb_addr, align 8
  call void @cdb_free(%struct.cd_buf* %8) nounwind
  %9 = load %struct.cd_buf** %cdb_addr, align 8
  %10 = getelementptr inbounds %struct.cd_buf* %9, i32 0, i32 0
  %11 = load i32* %new_fd, align 4
  store i32 %11, i32* %10, align 4
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %12 = load i32* %0, align 4
  store i32 %12, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define internal i8* @find_non_slash(i8* %s) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %n_slash = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  %1 = load i8** %s_addr, align 8
  %2 = call i64 @strspn(i8* %1, i8* getelementptr inbounds ([2 x i8]* @.str2237, i64 0, i64 0)) nounwind readonly
  store i64 %2, i64* %n_slash, align 8
  %3 = load i8** %s_addr, align 8
  %4 = load i64* %n_slash, align 8
  %5 = getelementptr inbounds i8* %3, i64 %4
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i32 @chdir_long(i8* %dir) nounwind {
entry:
  %dir_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %e = alloca i32
  %len = alloca i64
  %dir_end = alloca i8*
  %cdb = alloca %struct.cd_buf
  %n_leading_slash = alloca i64
  %err = alloca i32
  %slash = alloca i8*
  %err20 = alloca i32
  %slash21 = alloca i8*
  %saved_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dir, i8** %dir_addr
  %1 = load i8** %dir_addr, align 8
  %2 = call i32 @chdir(i8* %1) nounwind
  store i32 %2, i32* %e, align 4
  %3 = load i32* %e, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %5 = call i32* @__errno_location() nounwind readnone
  %6 = load i32* %5, align 4
  %7 = icmp ne i32 %6, 36
  br i1 %7, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  %8 = load i32* %e, align 4
  store i32 %8, i32* %0, align 4
  br label %bb32

bb2:                                              ; preds = %bb
  %9 = load i8** %dir_addr, align 8
  %10 = call i64 @strlen(i8* %9) nounwind readonly
  store i64 %10, i64* %len, align 8
  %11 = load i8** %dir_addr, align 8
  %12 = load i64* %len, align 8
  %13 = getelementptr inbounds i8* %11, i64 %12
  store i8* %13, i8** %dir_end, align 8
  call void @cdb_init(%struct.cd_buf* %cdb) nounwind
  %14 = load i64* %len, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8]* @.str3238, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1236, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3999, i64 0, i64 0)) noreturn
  unreachable

bb4:                                              ; preds = %bb2
  %16 = load i64* %len, align 8
  %17 = icmp ule i64 %16, 4095
  br i1 %17, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8]* @.str4239, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1236, i64 0, i64 0), i32 126, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3999, i64 0, i64 0)) noretur
  unreachable

bb6:                                              ; preds = %bb4
  %18 = load i8** %dir_addr, align 8
  %19 = call i64 @strspn(i8* %18, i8* getelementptr inbounds ([2 x i8]* @.str2237, i64 0, i64 0)) nounwind readonly
  store i64 %19, i64* %n_leading_slash, align 8
  %20 = load i64* %n_leading_slash, align 8
  %21 = icmp eq i64 %20, 2
  br i1 %21, label %bb7, label %bb11

bb7:                                              ; preds = %bb6
  %22 = load i8** %dir_end, align 8
  %23 = ptrtoint i8* %22 to i64
  %24 = load i8** %dir_addr, align 8
  %25 = getelementptr inbounds i8* %24, i64 3
  %26 = ptrtoint i8* %25 to i64
  %27 = sub nsw i64 %23, %26
  %28 = load i8** %dir_addr, align 8
  %29 = getelementptr inbounds i8* %28, i64 3
  %30 = call i8* @memchr(i8* %29, i32 47, i64 %27) nounwind readonly
  store i8* %30, i8** %slash, align 8
  %31 = load i8** %slash, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %33 = call i32* @__errno_location() nounwind readnone
  store i32 36, i32* %33, align 4
  store i32 -1, i32* %0, align 4
  br label %bb32

bb9:                                              ; preds = %bb7
  %34 = load i8** %slash, align 8
  store i8 0, i8* %34, align 1
  %35 = load i8** %dir_addr, align 8
  %36 = call i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* %35) nounwind
  store i32 %36, i32* %err, align 4
  %37 = load i8** %slash, align 8
  store i8 47, i8* %37, align 1
  %38 = load i32* %err, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %Fail, label %bb10

bb10:                                             ; preds = %bb9
  %40 = load i8** %slash, align 8
  %41 = getelementptr inbounds i8* %40, i64 1
  %42 = call i8* @find_non_slash(i8* %41) nounwind readonly
  store i8* %42, i8** %dir_addr, align 8
  br label %bb14

bb11:                                             ; preds = %bb6
  %43 = load i64* %n_leading_slash, align 8
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %bb12, label %bb14

bb12:                                             ; preds = %bb11
  %45 = call i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* getelementptr inbounds ([2 x i8]* @.str2237, i64 0, i64 0)) nounwind
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %Fail, label %bb13

bb13:                                             ; preds = %bb12
  %47 = load i8** %dir_addr, align 8
  %48 = load i64* %n_leading_slash, align 8
  %49 = getelementptr inbounds i8* %47, i64 %48
  store i8* %49, i8** %dir_addr, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11, %bb10
  %50 = load i8** %dir_addr, align 8
  %51 = load i8* %50, align 1
  %52 = icmp eq i8 %51, 47
  br i1 %52, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8]* @.str5240, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1236, i64 0, i64 0), i32 161, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3999, i64 0, i64 0)) noretur
  unreachable

bb16:                                             ; preds = %bb14
  %53 = load i8** %dir_addr, align 8
  %54 = load i8** %dir_end, align 8
  %55 = icmp ugt i8* %53, %54
  br i1 %55, label %bb17, label %bb27

bb17:                                             ; preds = %bb16
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8]* @.str6241, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1236, i64 0, i64 0), i32 162, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3999, i64 0, i64 0)) noretur
  unreachable

bb19:                                             ; preds = %bb27
  %56 = call i8* @memrchr(i8* %81, i32 47, i64 4096) nounwind readonly
  store i8* %56, i8** %slash21, align 8
  %57 = load i8** %slash21, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %bb22, label %bb23

bb22:                                             ; preds = %bb19
  %59 = call i32* @__errno_location() nounwind readnone
  store i32 36, i32* %59, align 4
  store i32 -1, i32* %0, align 4
  br label %bb32

bb23:                                             ; preds = %bb19
  %60 = load i8** %slash21, align 8
  store i8 0, i8* %60, align 1
  %61 = load i8** %slash21, align 8
  %62 = ptrtoint i8* %61 to i64
  %63 = load i8** %dir_addr, align 8
  %64 = ptrtoint i8* %63 to i64
  %65 = sub nsw i64 %62, %64
  %66 = icmp sgt i64 %65, 4095
  br i1 %66, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8]* @.str7242, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1236, i64 0, i64 0), i32 178, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3999, i64 0, i64 0)) noretur
  unreachable

bb25:                                             ; preds = %bb23
  %67 = load i8** %dir_addr, align 8
  %68 = call i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* %67) nounwind
  store i32 %68, i32* %err20, align 4
  %69 = load i8** %slash21, align 8
  store i8 47, i8* %69, align 1
  %70 = load i32* %err20, align 4
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %Fail, label %bb26

bb26:                                             ; preds = %bb25
  %72 = load i8** %slash21, align 8
  %73 = getelementptr inbounds i8* %72, i64 1
  %74 = call i8* @find_non_slash(i8* %73) nounwind readonly
  store i8* %74, i8** %dir_addr, align 8
  br label %bb27

bb27:                                             ; preds = %bb16, %bb26
  %75 = load i8** %dir_end, align 8
  %76 = ptrtoint i8* %75 to i64
  %77 = load i8** %dir_addr, align 8
  %78 = ptrtoint i8* %77 to i64
  %79 = sub nsw i64 %76, %78
  %80 = icmp sgt i64 %79, 4095
  %81 = load i8** %dir_addr, align 8
  br i1 %80, label %bb19, label %bb28

bb28:                                             ; preds = %bb27
  %82 = load i8** %dir_end, align 8
  %83 = icmp ult i8* %81, %82
  br i1 %83, label %bb29, label %bb30

bb29:                                             ; preds = %bb28
  %84 = load i8** %dir_addr, align 8
  %85 = call i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* %84) nounwind
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %Fail, label %bb30

bb30:                                             ; preds = %bb29, %bb28
  %87 = call i32 @cdb_fchdir(%struct.cd_buf* %cdb) nounwind
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %Fail, label %bb31

bb31:                                             ; preds = %bb30
  call void @cdb_free(%struct.cd_buf* %cdb) nounwind
  store i32 0, i32* %0, align 4
  br label %bb32

Fail:                                             ; preds = %bb30, %bb29, %bb25, %bb12, %bb9
  %89 = call i32* @__errno_location() nounwind readnone
  %90 = load i32* %89, align 4
  store i32 %90, i32* %saved_errno, align 4
  call void @cdb_free(%struct.cd_buf* %cdb) nounwind
  %91 = call i32* @__errno_location() nounwind readnone
  %92 = load i32* %saved_errno, align 4
  store i32 %92, i32* %91, align 4
  store i32 -1, i32* %0, align 4
  br label %bb32

bb32:                                             ; preds = %Fail, %bb31, %bb22, %bb8, %bb1
  %93 = load i32* %0, align 4
  store i32 %93, i32* %retval, align 4
  %retval33 = load i32* %retval
  ret i32 %retval33
}

define internal i32 @statvfs_works() nounwind {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.1 = alloca i32
  %name = alloca %struct.utsname
  %"alloca point" = bitcast i32 0 to i32
  %1 = load i32* @statvfs_works_cache.2085, align 4
  %2 = icmp slt i32 %1, 0
  br i1 %2, label %bb, label %bb5

bb:                                               ; preds = %entry
  %3 = call i32 @uname(%struct.utsname* %name) nounwind
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %bb3, label %bb1

bb1:                                              ; preds = %bb
  %5 = getelementptr inbounds %struct.utsname* %name, i32 0, i32 2
  %6 = getelementptr inbounds [65 x i8]* %5, i64 0, i64 0
  %7 = call i32 @strverscmp(i8* %6, i8* getelementptr inbounds ([7 x i8]* @.str244, i64 0, i64 0)) nounwind readonly
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  store i32 1, i32* %iftmp.1, align 4
  br label %bb4

bb3:                                              ; preds = %bb1, %bb
  store i32 0, i32* %iftmp.1, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %9 = load i32* %iftmp.1, align 4
  store i32 %9, i32* @statvfs_works_cache.2085, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %entry
  %10 = load i32* @statvfs_works_cache.2085, align 4
  store i32 %10, i32* %0, align 4
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval6 = load i32* %retval
  ret i32 %retval6
}

declare i32 @uname(%struct.utsname*) nounwind

define i32 @get_fs_usage(i8* %file, i8* %disk, %struct.fs_usage* %fsp) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %disk_addr = alloca i8*, align 8
  %fsp_addr = alloca %struct.fs_usage*, align 8
  %retval = alloca i32
  %iftmp.2 = alloca i64
  %0 = alloca i32
  %fsd = alloca %struct.statfs
  %vfsd = alloca %struct.statvfs
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i8* %disk, i8** %disk_addr
  store %struct.fs_usage* %fsp, %struct.fs_usage** %fsp_addr
  %1 = call i32 @statvfs_works() nounwind
  %2 = icmp ne i32 %1, 0
  %3 = load i8** %file_addr, align 8
  br i1 %2, label %bb, label %bb6

bb:                                               ; preds = %entry
  %4 = call i32 @statvfs(i8* noalias %3, %struct.statvfs* noalias %vfsd) nounwind
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  store i32 -1, i32* %0, align 4
  br label %bb9

bb2:                                              ; preds = %bb
  %6 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 1
  %7 = load i64* %6, align 8
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 1
  %10 = load i64* %9, align 8
  store i64 %10, i64* %iftmp.2, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %11 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 0
  %12 = load i64* %11, align 8
  store i64 %12, i64* %iftmp.2, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %13 = load %struct.fs_usage** %fsp_addr, align 8
  %14 = getelementptr inbounds %struct.fs_usage* %13, i32 0, i32 0
  %15 = load i64* %iftmp.2, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 2
  %17 = load i64* %16, align 8
  %18 = load %struct.fs_usage** %fsp_addr, align 8
  %19 = getelementptr inbounds %struct.fs_usage* %18, i32 0, i32 1
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 3
  %21 = load i64* %20, align 8
  %22 = load %struct.fs_usage** %fsp_addr, align 8
  %23 = getelementptr inbounds %struct.fs_usage* %22, i32 0, i32 2
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 4
  %25 = load i64* %24, align 8
  %26 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 4
  %27 = load i64* %26, align 8
  %28 = and i64 %27, -9223372036854775808
  %29 = sub i64 0, %28
  %30 = or i64 %25, %29
  %31 = load %struct.fs_usage** %fsp_addr, align 8
  %32 = getelementptr inbounds %struct.fs_usage* %31, i32 0, i32 3
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 4
  %34 = load i64* %33, align 8
  %35 = icmp slt i64 %34, 0
  %36 = zext i1 %35 to i8
  %37 = load %struct.fs_usage** %fsp_addr, align 8
  %38 = getelementptr inbounds %struct.fs_usage* %37, i32 0, i32 4
  store i8 %36, i8* %38, align 8
  %39 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 5
  %40 = load i64* %39, align 8
  %41 = load %struct.fs_usage** %fsp_addr, align 8
  %42 = getelementptr inbounds %struct.fs_usage* %41, i32 0, i32 5
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 6
  %44 = load i64* %43, align 8
  %45 = load %struct.fs_usage** %fsp_addr, align 8
  %46 = getelementptr inbounds %struct.fs_usage* %45, i32 0, i32 6
  store i64 %44, i64* %46, align 8
  store i32 0, i32* %0, align 4
  br label %bb9

bb6:                                              ; preds = %entry
  %47 = call i32 @statfs(i8* %3, %struct.statfs* %fsd) nounwind
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %0, align 4
  br label %bb9

bb8:                                              ; preds = %bb6
  %49 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 9
  %50 = load i64* %49, align 8
  %51 = load %struct.fs_usage** %fsp_addr, align 8
  %52 = getelementptr inbounds %struct.fs_usage* %51, i32 0, i32 0
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 2
  %54 = load i64* %53, align 8
  %55 = load %struct.fs_usage** %fsp_addr, align 8
  %56 = getelementptr inbounds %struct.fs_usage* %55, i32 0, i32 1
  store i64 %54, i64* %56, align 8
  %57 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 3
  %58 = load i64* %57, align 8
  %59 = load %struct.fs_usage** %fsp_addr, align 8
  %60 = getelementptr inbounds %struct.fs_usage* %59, i32 0, i32 2
  store i64 %58, i64* %60, align 8
  %61 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 4
  %62 = load i64* %61, align 8
  %63 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 4
  %64 = load i64* %63, align 8
  %65 = and i64 %64, -9223372036854775808
  %66 = sub i64 0, %65
  %67 = or i64 %62, %66
  %68 = load %struct.fs_usage** %fsp_addr, align 8
  %69 = getelementptr inbounds %struct.fs_usage* %68, i32 0, i32 3
  store i64 %67, i64* %69, align 8
  %70 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 4
  %71 = load i64* %70, align 8
  %72 = icmp slt i64 %71, 0
  %73 = zext i1 %72 to i8
  %74 = load %struct.fs_usage** %fsp_addr, align 8
  %75 = getelementptr inbounds %struct.fs_usage* %74, i32 0, i32 4
  store i8 %73, i8* %75, align 8
  %76 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 5
  %77 = load i64* %76, align 8
  %78 = load %struct.fs_usage** %fsp_addr, align 8
  %79 = getelementptr inbounds %struct.fs_usage* %78, i32 0, i32 5
  store i64 %77, i64* %79, align 8
  %80 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 6
  %81 = load i64* %80, align 8
  %82 = load %struct.fs_usage** %fsp_addr, align 8
  %83 = getelementptr inbounds %struct.fs_usage* %82, i32 0, i32 6
  store i64 %81, i64* %83, align 8
  store i32 0, i32* %0, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7, %bb5, %bb1
  %84 = load i32* %0, align 4
  store i32 %84, i32* %retval, align 4
  %retval10 = load i32* %retval
  ret i32 %retval10
}

define internal i64 @dev_from_mount_options(i8* %mount_options) nounwind {
entry:
  %mount_options_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %mount_options, i8** %mount_options_addr
  store i64 -1, i64* %0, align 8
  %1 = load i64* %0, align 8
  store i64 %1, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define %struct.mount_entry* @read_file_system_list(i8 zeroext %need_fs_type) nounwind {
entry:
  %need_fs_type_addr = alloca i8, align 1
  %retval = alloca %struct.mount_entry*
  %iftmp.1 = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca %struct.mount_entry*
  %mount_list = alloca %struct.mount_entry*
  %me = alloca %struct.mount_entry*
  %mtail = alloca %struct.mount_entry**
  %mnt = alloca %struct.mntent*
  %table = alloca i8*
  %fp = alloca %struct.FILE*
  %saved_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8 %need_fs_type, i8* %need_fs_type_addr
  store %struct.mount_entry** %mount_list, %struct.mount_entry*** %mtail, align 8
  store i8* getelementptr inbounds ([10 x i8]* @.str246, i64 0, i64 0), i8** %table, align 8
  %1 = load i8** %table, align 8
  %2 = call %struct.FILE* bitcast (%4* (i8*, i8*)* @setmntent to %struct.FILE* (i8*, i8*)*)(i8* %1, i8* getelementptr inbounds ([2 x i8]* @.str1247, i64 0, i64 0)) nounwind
  store %struct.FILE* %2, %struct.FILE** %fp, align 8
  %3 = load %struct.FILE** %fp, align 8
  %4 = icmp eq %struct.FILE* %3, null
  br i1 %4, label %bb, label %bb25

bb:                                               ; preds = %entry
  store %struct.mount_entry* null, %struct.mount_entry** %0, align 8
  br label %bb31

bb2:                                              ; preds = %bb25
  %5 = call noalias i8* @xmalloc(i64 48) nounwind
  %6 = bitcast i8* %5 to %struct.mount_entry*
  store %struct.mount_entry* %6, %struct.mount_entry** %me, align 8
  %7 = load %struct.mntent** %mnt, align 8
  %8 = getelementptr inbounds %struct.mntent* %7, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = call noalias i8* @xstrdup(i8* %9) nounwind
  %11 = load %struct.mount_entry** %me, align 8
  %12 = getelementptr inbounds %struct.mount_entry* %11, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = load %struct.mntent** %mnt, align 8
  %14 = getelementptr inbounds %struct.mntent* %13, i32 0, i32 1
  %15 = load i8** %14, align 8
  %16 = call noalias i8* @xstrdup(i8* %15) nounwind
  %17 = load %struct.mount_entry** %me, align 8
  %18 = getelementptr inbounds %struct.mount_entry* %17, i32 0, i32 1
  store i8* %16, i8** %18, align 8
  %19 = load %struct.mntent** %mnt, align 8
  %20 = getelementptr inbounds %struct.mntent* %19, i32 0, i32 2
  %21 = load i8** %20, align 8
  %22 = call noalias i8* @xstrdup(i8* %21) nounwind
  %23 = load %struct.mount_entry** %me, align 8
  %24 = getelementptr inbounds %struct.mount_entry* %23, i32 0, i32 2
  store i8* %22, i8** %24, align 8
  %25 = load %struct.mount_entry** %me, align 8
  %26 = getelementptr inbounds %struct.mount_entry* %25, i32 0, i32 4
  %27 = load i64* %26, align 8
  %28 = and i64 %27, -5
  %29 = or i64 %28, 4
  store i64 %29, i64* %26, align 8
  %30 = load %struct.mount_entry** %me, align 8
  %31 = getelementptr inbounds %struct.mount_entry* %30, i32 0, i32 2
  %32 = load i8** %31, align 8
  %33 = call i32 @strcmp(i8* %32, i8* getelementptr inbounds ([7 x i8]* @.str2248, i64 0, i64 0)) nounwind readonly
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %bb15, label %bb3

bb3:                                              ; preds = %bb2
  %35 = load %struct.mount_entry** %me, align 8
  %36 = getelementptr inbounds %struct.mount_entry* %35, i32 0, i32 2
  %37 = load i8** %36, align 8
  %38 = call i32 @strcmp(i8* %37, i8* getelementptr inbounds ([5 x i8]* @.str3249, i64 0, i64 0)) nounwind readonly
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %bb15, label %bb4

bb4:                                              ; preds = %bb3
  %40 = load %struct.mount_entry** %me, align 8
  %41 = getelementptr inbounds %struct.mount_entry* %40, i32 0, i32 2
  %42 = load i8** %41, align 8
  %43 = call i32 @strcmp(i8* %42, i8* getelementptr inbounds ([6 x i8]* @.str4250, i64 0, i64 0)) nounwind readonly
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %bb15, label %bb5

bb5:                                              ; preds = %bb4
  %45 = load %struct.mount_entry** %me, align 8
  %46 = getelementptr inbounds %struct.mount_entry* %45, i32 0, i32 2
  %47 = load i8** %46, align 8
  %48 = call i32 @strcmp(i8* %47, i8* getelementptr inbounds ([8 x i8]* @.str5251, i64 0, i64 0)) nounwind readonly
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %bb15, label %bb6

bb6:                                              ; preds = %bb5
  %50 = load %struct.mount_entry** %me, align 8
  %51 = getelementptr inbounds %struct.mount_entry* %50, i32 0, i32 2
  %52 = load i8** %51, align 8
  %53 = call i32 @strcmp(i8* %52, i8* getelementptr inbounds ([7 x i8]* @.str6252, i64 0, i64 0)) nounwind readonly
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %bb15, label %bb7

bb7:                                              ; preds = %bb6
  %55 = load %struct.mount_entry** %me, align 8
  %56 = getelementptr inbounds %struct.mount_entry* %55, i32 0, i32 2
  %57 = load i8** %56, align 8
  %58 = call i32 @strcmp(i8* %57, i8* getelementptr inbounds ([8 x i8]* @.str7253, i64 0, i64 0)) nounwind readonly
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %bb15, label %bb8

bb8:                                              ; preds = %bb7
  %60 = load %struct.mount_entry** %me, align 8
  %61 = getelementptr inbounds %struct.mount_entry* %60, i32 0, i32 2
  %62 = load i8** %61, align 8
  %63 = call i32 @strcmp(i8* %62, i8* getelementptr inbounds ([7 x i8]* @.str8254, i64 0, i64 0)) nounwind readonly
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %bb15, label %bb9

bb9:                                              ; preds = %bb8
  %65 = load %struct.mount_entry** %me, align 8
  %66 = getelementptr inbounds %struct.mount_entry* %65, i32 0, i32 2
  %67 = load i8** %66, align 8
  %68 = call i32 @strcmp(i8* %67, i8* getelementptr inbounds ([11 x i8]* @.str9255, i64 0, i64 0)) nounwind readonly
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %bb15, label %bb10

bb10:                                             ; preds = %bb9
  %70 = load %struct.mount_entry** %me, align 8
  %71 = getelementptr inbounds %struct.mount_entry* %70, i32 0, i32 2
  %72 = load i8** %71, align 8
  %73 = call i32 @strcmp(i8* %72, i8* getelementptr inbounds ([6 x i8]* @.str10256, i64 0, i64 0)) nounwind readonly
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %bb15, label %bb11

bb11:                                             ; preds = %bb10
  %75 = load %struct.mount_entry** %me, align 8
  %76 = getelementptr inbounds %struct.mount_entry* %75, i32 0, i32 2
  %77 = load i8** %76, align 8
  %78 = call i32 @strcmp(i8* %77, i8* getelementptr inbounds ([6 x i8]* @.str11257, i64 0, i64 0)) nounwind readonly
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %bb15, label %bb12

bb12:                                             ; preds = %bb11
  %80 = load %struct.mount_entry** %me, align 8
  %81 = getelementptr inbounds %struct.mount_entry* %80, i32 0, i32 2
  %82 = load i8** %81, align 8
  %83 = call i32 @strcmp(i8* %82, i8* getelementptr inbounds ([7 x i8]* @.str12258, i64 0, i64 0)) nounwind readonly
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %bb15, label %bb13

bb13:                                             ; preds = %bb12
  %85 = load %struct.mount_entry** %me, align 8
  %86 = getelementptr inbounds %struct.mount_entry* %85, i32 0, i32 2
  %87 = load i8** %86, align 8
  %88 = call i32 @strcmp(i8* %87, i8* getelementptr inbounds ([7 x i8]* @.str13259, i64 0, i64 0)) nounwind readonly
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %bb15, label %bb14

bb14:                                             ; preds = %bb13
  %90 = load %struct.mount_entry** %me, align 8
  %91 = getelementptr inbounds %struct.mount_entry* %90, i32 0, i32 2
  %92 = load i8** %91, align 8
  %93 = call i32 @strcmp(i8* %92, i8* getelementptr inbounds ([5 x i8]* @.str14260, i64 0, i64 0)) nounwind readonly
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %bb15, label %bb16

bb15:                                             ; preds = %bb14, %bb13, %bb12, %bb11, %bb10, %bb9, %bb8, %bb7, %bb6, %bb5, %bb4, %bb3, %bb2
  store i32 1, i32* %iftmp.0, align 4
  br label %bb17

bb16:                                             ; preds = %bb14
  store i32 0, i32* %iftmp.0, align 4
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %95 = load i32* %iftmp.0, align 4
  %96 = trunc i32 %95 to i8
  %97 = trunc i8 %96 to i1
  %98 = load %struct.mount_entry** %me, align 8
  %99 = getelementptr inbounds %struct.mount_entry* %98, i32 0, i32 4
  %100 = zext i1 %97 to i64
  %101 = load i64* %99, align 8
  %102 = and i64 %100, 1
  %103 = and i64 %101, -2
  %104 = or i64 %103, %102
  store i64 %104, i64* %99, align 8
  %105 = load %struct.mount_entry** %me, align 8
  %106 = getelementptr inbounds %struct.mount_entry* %105, i32 0, i32 0
  %107 = load i8** %106, align 8
  %108 = call i8* @strchr(i8* %107, i32 58) nounwind readonly
  %109 = icmp ne i8* %108, null
  br i1 %109, label %bb22, label %bb18

bb18:                                             ; preds = %bb17
  %110 = load %struct.mount_entry** %me, align 8
  %111 = getelementptr inbounds %struct.mount_entry* %110, i32 0, i32 0
  %112 = load i8** %111, align 8
  %113 = getelementptr inbounds i8* %112, i64 0
  %114 = load i8* %113, align 1
  %115 = icmp ne i8 %114, 47
  br i1 %115, label %bb23, label %bb19

bb19:                                             ; preds = %bb18
  %116 = load %struct.mount_entry** %me, align 8
  %117 = getelementptr inbounds %struct.mount_entry* %116, i32 0, i32 0
  %118 = load i8** %117, align 8
  %119 = getelementptr inbounds i8* %118, i64 1
  %120 = load i8* %119, align 1
  %121 = icmp ne i8 %120, 47
  br i1 %121, label %bb23, label %bb20

bb20:                                             ; preds = %bb19
  %122 = load %struct.mount_entry** %me, align 8
  %123 = getelementptr inbounds %struct.mount_entry* %122, i32 0, i32 2
  %124 = load i8** %123, align 8
  %125 = call i32 @strcmp(i8* %124, i8* getelementptr inbounds ([6 x i8]* @.str15261, i64 0, i64 0)) nounwind readonly
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %bb22, label %bb21

bb21:                                             ; preds = %bb20
  %127 = load %struct.mount_entry** %me, align 8
  %128 = getelementptr inbounds %struct.mount_entry* %127, i32 0, i32 2
  %129 = load i8** %128, align 8
  %130 = call i32 @strcmp(i8* %129, i8* getelementptr inbounds ([5 x i8]* @.str16262, i64 0, i64 0)) nounwind readonly
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %bb22, label %bb23

bb22:                                             ; preds = %bb21, %bb20, %bb17
  store i32 1, i32* %iftmp.1, align 4
  br label %bb24

bb23:                                             ; preds = %bb21, %bb19, %bb18
  store i32 0, i32* %iftmp.1, align 4
  br label %bb24

bb24:                                             ; preds = %bb23, %bb22
  %132 = load i32* %iftmp.1, align 4
  %133 = trunc i32 %132 to i8
  %134 = trunc i8 %133 to i1
  %135 = load %struct.mount_entry** %me, align 8
  %136 = getelementptr inbounds %struct.mount_entry* %135, i32 0, i32 4
  %137 = zext i1 %134 to i64
  %138 = load i64* %136, align 8
  %int_cast_to_i64 = bitcast i64 1 to i64
  %139 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %139, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb24
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb24
  %140 = shl i64 %137, 1
  %141 = and i64 %140, 2
  %142 = and i64 %138, -3
  %143 = or i64 %142, %141
  store i64 %143, i64* %136, align 8
  %144 = load %struct.mntent** %mnt, align 8
  %145 = getelementptr inbounds %struct.mntent* %144, i32 0, i32 3
  %146 = load i8** %145, align 8
  %147 = call i64 @dev_from_mount_options(i8* %146) nounwind
  %148 = load %struct.mount_entry** %me, align 8
  %149 = getelementptr inbounds %struct.mount_entry* %148, i32 0, i32 3
  store i64 %147, i64* %149, align 8
  %150 = load %struct.mount_entry*** %mtail, align 8
  %151 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %151, %struct.mount_entry** %150, align 8
  %152 = load %struct.mount_entry** %me, align 8
  %153 = getelementptr inbounds %struct.mount_entry* %152, i32 0, i32 5
  store %struct.mount_entry** %153, %struct.mount_entry*** %mtail, align 8
  br label %bb25

bb25:                                             ; preds = %entry, %klee_overshift_check.exit
  %154 = load %struct.FILE** %fp, align 8
  %155 = call %struct.mntent* bitcast (%struct.mntent* (%4*)* @getmntent to %struct.mntent* (%struct.FILE*)*)(%struct.FILE* %154) nounwind
  store %struct.mntent* %155, %struct.mntent** %mnt, align 8
  %156 = load %struct.mntent** %mnt, align 8
  %157 = icmp ne %struct.mntent* %156, null
  br i1 %157, label %bb2, label %bb26

bb26:                                             ; preds = %bb25
  %158 = load %struct.FILE** %fp, align 8
  %159 = call i32 bitcast (i32 (%4*)* @endmntent to i32 (%struct.FILE*)*)(%struct.FILE* %158) nounwind
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %free_then_fail, label %bb27

bb27:                                             ; preds = %bb26
  %161 = load %struct.mount_entry*** %mtail, align 8
  store %struct.mount_entry* null, %struct.mount_entry** %161, align 8
  %162 = load %struct.mount_entry** %mount_list, align 8
  store %struct.mount_entry* %162, %struct.mount_entry** %0, align 8
  br label %bb31

free_then_fail:                                   ; preds = %bb26
  %163 = call i32* @__errno_location() nounwind readnone
  %164 = load i32* %163, align 4
  store i32 %164, i32* %saved_errno, align 4
  %165 = load %struct.mount_entry*** %mtail, align 8
  store %struct.mount_entry* null, %struct.mount_entry** %165, align 8
  br label %bb29

bb28:                                             ; preds = %bb29
  %166 = load %struct.mount_entry** %mount_list, align 8
  %167 = getelementptr inbounds %struct.mount_entry* %166, i32 0, i32 5
  %168 = load %struct.mount_entry** %167, align 8
  store %struct.mount_entry* %168, %struct.mount_entry** %me, align 8
  %169 = load %struct.mount_entry** %mount_list, align 8
  call void @free_mount_entry(%struct.mount_entry* %169) nounwind
  %170 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %170, %struct.mount_entry** %mount_list, align 8
  br label %bb29

bb29:                                             ; preds = %bb28, %free_then_fail
  %171 = load %struct.mount_entry** %mount_list, align 8
  %172 = icmp ne %struct.mount_entry* %171, null
  br i1 %172, label %bb28, label %bb30

bb30:                                             ; preds = %bb29
  %173 = call i32* @__errno_location() nounwind readnone
  %174 = load i32* %saved_errno, align 4
  store i32 %174, i32* %173, align 4
  store %struct.mount_entry* null, %struct.mount_entry** %0, align 8
  br label %bb31

bb31:                                             ; preds = %bb30, %bb27, %bb
  %175 = load %struct.mount_entry** %0, align 8
  store %struct.mount_entry* %175, %struct.mount_entry** %retval, align 8
  %retval32 = load %struct.mount_entry** %retval
  ret %struct.mount_entry* %retval32
}

define void @free_mount_entry(%struct.mount_entry* %me) nounwind {
entry:
  %me_addr = alloca %struct.mount_entry*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mount_entry* %me, %struct.mount_entry** %me_addr
  %0 = load %struct.mount_entry** %me_addr, align 8
  %1 = getelementptr inbounds %struct.mount_entry* %0, i32 0, i32 0
  %2 = load i8** %1, align 8
  call void @free(i8* %2) nounwind
  %3 = load %struct.mount_entry** %me_addr, align 8
  %4 = getelementptr inbounds %struct.mount_entry* %3, i32 0, i32 1
  %5 = load i8** %4, align 8
  call void @free(i8* %5) nounwind
  %6 = load %struct.mount_entry** %me_addr, align 8
  %7 = getelementptr inbounds %struct.mount_entry* %6, i32 0, i32 4
  %8 = load i64* %7, align 8
  %int_cast_to_i64 = bitcast i64 61 to i64
  %9 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %9, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %10 = shl i64 %8, 61
  %int_cast_to_i641 = bitcast i64 63 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = lshr i64 %10, 63
  %13 = trunc i64 %12 to i1
  %14 = icmp ne i1 %13, false
  br i1 %14, label %bb, label %bb1

bb:                                               ; preds = %klee_overshift_check.exit3
  %15 = load %struct.mount_entry** %me_addr, align 8
  %16 = getelementptr inbounds %struct.mount_entry* %15, i32 0, i32 2
  %17 = load i8** %16, align 8
  call void @free(i8* %17) nounwind
  br label %bb1

bb1:                                              ; preds = %bb, %klee_overshift_check.exit3
  %18 = load %struct.mount_entry** %me_addr, align 8
  %19 = bitcast %struct.mount_entry* %18 to i8*
  call void @free(i8* %19) nounwind
  ret void
}

define i32 @rpl_vasprintf(i8** %resultp, i8* %format, %struct.__va_list_tag* %args) nounwind {
entry:
  %resultp_addr = alloca i8**, align 8
  %format_addr = alloca i8*, align 8
  %args_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %length = alloca i64
  %result = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8** %resultp, i8*** %resultp_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args_addr
  %1 = load i8** %format_addr, align 8
  %2 = load %struct.__va_list_tag** %args_addr, align 8
  %3 = call i8* @vasnprintf(i8* null, i64* %length, i8* %1, %struct.__va_list_tag* %2) nounwind
  store i8* %3, i8** %result, align 8
  %4 = load i8** %result, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 -1, i32* %0, align 4
  br label %bb4

bb1:                                              ; preds = %entry
  %6 = load i64* %length, align 8
  %7 = icmp ugt i64 %6, 2147483647
  br i1 %7, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %8 = load i8** %result, align 8
  call void @free(i8* %8) nounwind
  %9 = call i32* @__errno_location() nounwind readnone
  store i32 75, i32* %9, align 4
  store i32 -1, i32* %0, align 4
  br label %bb4

bb3:                                              ; preds = %bb1
  %10 = load i8*** %resultp_addr, align 8
  %11 = load i8** %result, align 8
  store i8* %11, i8** %10, align 8
  %12 = load i64* %length, align 8
  %13 = trunc i64 %12 to i32
  store i32 %13, i32* %0, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2, %bb
  %14 = load i32* %0, align 4
  store i32 %14, i32* %retval, align 4
  %retval5 = load i32* %retval
  ret i32 %retval5
}

define i8* @areadlink_with_size(i8* %file, i64 %size) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %size_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.1 = alloca i64
  %iftmp.0 = alloca i64
  %symlink_max = alloca i64
  %INITIAL_LIMIT_BOUND = alloca i64
  %initial_limit = alloca i64
  %buf_size = alloca i64
  %r = alloca i64
  %link_length = alloca i64
  %buffer = alloca i8*
  %saved_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i64 %size, i64* %size_addr
  store i64 1024, i64* %symlink_max, align 8
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8
  %1 = load i64* %symlink_max, align 8
  %2 = load i64* %INITIAL_LIMIT_BOUND, align 8
  %3 = icmp ult i64 %1, %2
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = load i64* %symlink_max, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %iftmp.0, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %6 = load i64* %INITIAL_LIMIT_BOUND, align 8
  store i64 %6, i64* %iftmp.0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %7 = load i64* %iftmp.0, align 8
  store i64 %7, i64* %initial_limit, align 8
  %8 = load i64* %size_addr, align 8
  %9 = load i64* %initial_limit, align 8
  %10 = icmp ult i64 %8, %9
  br i1 %10, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %11 = load i64* %size_addr, align 8
  %12 = add i64 %11, 1
  store i64 %12, i64* %iftmp.1, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %13 = load i64* %initial_limit, align 8
  store i64 %13, i64* %iftmp.1, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %14 = load i64* %iftmp.1, align 8
  store i64 %14, i64* %buf_size, align 8
  br label %bb6

bb6:                                              ; preds = %bb14, %bb16, %bb5
  %15 = load i64* %buf_size, align 8
  %16 = call noalias i8* @malloc(i64 %15) nounwind
  store i8* %16, i8** %buffer, align 8
  %17 = load i8** %buffer, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store i8* null, i8** %0, align 8
  br label %bb19

bb8:                                              ; preds = %bb6
  %19 = load i8** %file_addr, align 8
  %20 = load i8** %buffer, align 8
  %21 = load i64* %buf_size, align 8
  %22 = call i64 @readlink(i8* noalias %19, i8* noalias %20, i64 %21) nounwind
  store i64 %22, i64* %r, align 8
  %23 = load i64* %r, align 8
  store i64 %23, i64* %link_length, align 8
  %24 = load i64* %r, align 8
  %25 = icmp slt i64 %24, 0
  br i1 %25, label %bb9, label %bb11

bb9:                                              ; preds = %bb8
  %26 = call i32* @__errno_location() nounwind readnone
  %27 = load i32* %26, align 4
  %28 = icmp ne i32 %27, 34
  br i1 %28, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %29 = call i32* @__errno_location() nounwind readnone
  %30 = load i32* %29, align 4
  store i32 %30, i32* %saved_errno, align 4
  %31 = load i8** %buffer, align 8
  call void @free(i8* %31) nounwind
  %32 = call i32* @__errno_location() nounwind readnone
  %33 = load i32* %saved_errno, align 4
  store i32 %33, i32* %32, align 4
  store i8* null, i8** %0, align 8
  br label %bb19

bb11:                                             ; preds = %bb9, %bb8
  %34 = load i64* %link_length, align 8
  %35 = load i64* %buf_size, align 8
  %36 = icmp ult i64 %34, %35
  %37 = load i8** %buffer, align 8
  br i1 %36, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  %38 = load i64* %link_length, align 8
  %39 = getelementptr inbounds i8* %37, i64 %38
  store i8 0, i8* %39, align 1
  %40 = load i8** %buffer, align 8
  store i8* %40, i8** %0, align 8
  br label %bb19

bb13:                                             ; preds = %bb11
  call void @free(i8* %37) nounwind
  %41 = load i64* %buf_size, align 8
  %42 = icmp ule i64 %41, 4611686018427387903
  %43 = load i64* %buf_size, align 8
  br i1 %42, label %bb14, label %bb15

bb14:                                             ; preds = %bb13
  %44 = mul i64 %43, 2
  store i64 %44, i64* %buf_size, align 8
  br label %bb6

bb15:                                             ; preds = %bb13
  %45 = icmp ule i64 %43, 9223372036854775806
  br i1 %45, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  store i64 9223372036854775807, i64* %buf_size, align 8
  br label %bb6

bb17:                                             ; preds = %bb15
  %46 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %46, align 4
  store i8* null, i8** %0, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %bb12, %bb10, %bb7
  %47 = load i8** %0, align 8
  store i8* %47, i8** %retval, align 8
  %retval20 = load i8** %retval
  ret i8* %retval20
}

define internal void @__argmatch_die() nounwind {
entry:
  call void @usage(i32 1) nounwind
  unreachable
}

define i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) nounwind readonly {
entry:
  %arg_addr = alloca i8*, align 8
  %arglist_addr = alloca i8**, align 8
  %vallist_addr = alloca i8*, align 8
  %valsize_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %i = alloca i64
  %arglen = alloca i64
  %matchind = alloca i64
  %ambiguous = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i8** %arglist, i8*** %arglist_addr
  store i8* %vallist, i8** %vallist_addr
  store i64 %valsize, i64* %valsize_addr
  store i64 -1, i64* %matchind, align 8
  store i8 0, i8* %ambiguous, align 1
  %1 = load i8** %arg_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  store i64 %2, i64* %arglen, align 8
  store i64 0, i64* %i, align 8
  br label %bb9

bb:                                               ; preds = %bb9
  %3 = load i8*** %arglist_addr, align 8
  %4 = load i64* %i, align 8
  %5 = getelementptr inbounds i8** %3, i64 %4
  %6 = load i8** %5, align 1
  %7 = load i8** %arg_addr, align 8
  %8 = load i64* %arglen, align 8
  %9 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) nounwind readonly
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %bb1, label %bb8

bb1:                                              ; preds = %bb
  %11 = load i8*** %arglist_addr, align 8
  %12 = load i64* %i, align 8
  %13 = getelementptr inbounds i8** %11, i64 %12
  %14 = load i8** %13, align 1
  %15 = call i64 @strlen(i8* %14) nounwind readonly
  %16 = load i64* %arglen, align 8
  %17 = icmp eq i64 %15, %16
  br i1 %17, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %18 = load i64* %i, align 8
  store i64 %18, i64* %0, align 8
  br label %bb13

bb3:                                              ; preds = %bb1
  %19 = load i64* %matchind, align 8
  %20 = icmp eq i64 %19, -1
  br i1 %20, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %21 = load i64* %i, align 8
  store i64 %21, i64* %matchind, align 8
  br label %bb8

bb5:                                              ; preds = %bb3
  %22 = load i8** %vallist_addr, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %bb7, label %bb6

bb6:                                              ; preds = %bb5
  %24 = load i64* %valsize_addr, align 8
  %25 = load i64* %i, align 8
  %26 = mul i64 %24, %25
  %27 = load i8** %vallist_addr, align 8
  %28 = getelementptr inbounds i8* %27, i64 %26
  %29 = load i64* %matchind, align 8
  %30 = load i64* %valsize_addr, align 8
  %31 = mul i64 %30, %29
  %32 = load i8** %vallist_addr, align 8
  %33 = getelementptr inbounds i8* %32, i64 %31
  %34 = load i64* %valsize_addr, align 8
  %35 = call i32 @memcmp(i8* %33, i8* %28, i64 %34) nounwind readonly
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %bb7, label %bb8

bb7:                                              ; preds = %bb6, %bb5
  store i8 1, i8* %ambiguous, align 1
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb4, %bb
  %37 = load i64* %i, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %i, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %entry
  %39 = load i8*** %arglist_addr, align 8
  %40 = load i64* %i, align 8
  %41 = getelementptr inbounds i8** %39, i64 %40
  %42 = load i8** %41, align 1
  %43 = icmp ne i8* %42, null
  br i1 %43, label %bb, label %bb10

bb10:                                             ; preds = %bb9
  %44 = load i8* %ambiguous, align 1
  %toBool = icmp ne i8 %44, 0
  br i1 %toBool, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  store i64 -2, i64* %0, align 8
  br label %bb13

bb12:                                             ; preds = %bb10
  %45 = load i64* %matchind, align 8
  store i64 %45, i64* %0, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11, %bb2
  %46 = load i64* %0, align 8
  store i64 %46, i64* %retval, align 8
  %retval14 = load i64* %retval
  ret i64 %retval14
}

define void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) nounwind {
entry:
  %context_addr = alloca i8*, align 8
  %value_addr = alloca i8*, align 8
  %problem_addr = alloca i64, align 8
  %iftmp.16 = alloca i8*
  %format = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %context, i8** %context_addr
  store i8* %value, i8** %value_addr
  store i64 %problem, i64* %problem_addr
  %0 = load i64* %problem_addr, align 8
  %1 = icmp eq i64 %0, -1
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %2 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8]* @.str267, i64 0, i64 0)) nounwind
  store i8* %2, i8** %iftmp.16, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %3 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8]* @.str1268, i64 0, i64 0)) nounwind
  store i8* %3, i8** %iftmp.16, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load i8** %iftmp.16, align 8
  store i8* %4, i8** %format, align 8
  %5 = load i8** %context_addr, align 8
  %6 = call i8* @quote_n(i32 1, i8* %5) nounwind
  %7 = load i8** %value_addr, align 8
  %8 = call i8* @quotearg_n_style(i32 0, i32 6, i8* %7) nounwind
  %9 = load i8** %format, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %9, i8* %8, i8* %6) nounwind
  ret void
}

define void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) nounwind {
entry:
  %arglist_addr = alloca i8**, align 8
  %vallist_addr = alloca i8*, align 8
  %valsize_addr = alloca i64, align 8
  %i = alloca i64
  %last_val = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8** %arglist, i8*** %arglist_addr
  store i8* %vallist, i8** %vallist_addr
  store i64 %valsize, i64* %valsize_addr
  store i8* null, i8** %last_val, align 8
  %0 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %1 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8]* @.str2269, i64 0, i64 0)) nounwind
  %2 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %1, %struct.FILE* noalias %0) nounwind
  store i64 0, i64* %i, align 8
  br label %bb5

bb:                                               ; preds = %bb5
  %3 = load i64* %i, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  %5 = load i64* %valsize_addr, align 8
  %6 = load i64* %i, align 8
  %7 = mul i64 %5, %6
  %8 = load i8** %vallist_addr, align 8
  %9 = getelementptr inbounds i8* %8, i64 %7
  %10 = load i8** %last_val, align 8
  %11 = load i64* %valsize_addr, align 8
  %12 = call i32 @memcmp(i8* %10, i8* %9, i64 %11) nounwind readonly
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %bb
  %14 = load i8*** %arglist_addr, align 8
  %15 = load i64* %i, align 8
  %16 = getelementptr inbounds i8** %14, i64 %15
  %17 = load i8** %16, align 1
  %18 = call i8* @quote(i8* %17) nounwind
  %19 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %20 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %19, i8* noalias getelementptr inbounds ([8 x i8]* @.str3270, i64 0, i64 0), i8* %18) nounwind
  %21 = load i64* %valsize_addr, align 8
  %22 = load i64* %i, align 8
  %23 = mul i64 %21, %22
  %24 = load i8** %vallist_addr, align 8
  %25 = getelementptr inbounds i8* %24, i64 %23
  store i8* %25, i8** %last_val, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %26 = load i8*** %arglist_addr, align 8
  %27 = load i64* %i, align 8
  %28 = getelementptr inbounds i8** %26, i64 %27
  %29 = load i8** %28, align 1
  %30 = call i8* @quote(i8* %29) nounwind
  %31 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %32 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %31, i8* noalias getelementptr inbounds ([5 x i8]* @.str4271, i64 0, i64 0), i8* %30) nounwind
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %33 = load i64* %i, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %i, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %entry
  %35 = load i8*** %arglist_addr, align 8
  %36 = load i64* %i, align 8
  %37 = getelementptr inbounds i8** %35, i64 %36
  %38 = load i8** %37, align 1
  %39 = icmp ne i8* %38, null
  br i1 %39, label %bb, label %bb6

bb6:                                              ; preds = %bb5
  %40 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %41 = call i32 bitcast (i32 (i32, %4*)* @__fputc_unlocked to i32 (i32, %struct.FILE*)*)(i32 10, %struct.FILE* %40) nounwind
  ret void
}

define i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) nounwind {
entry:
  %context_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %arglist_addr = alloca i8**, align 8
  %vallist_addr = alloca i8*, align 8
  %valsize_addr = alloca i64, align 8
  %exit_fn_addr = alloca void ()*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %res = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %context, i8** %context_addr
  store i8* %arg, i8** %arg_addr
  store i8** %arglist, i8*** %arglist_addr
  store i8* %vallist, i8** %vallist_addr
  store i64 %valsize, i64* %valsize_addr
  store void ()* %exit_fn, void ()** %exit_fn_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i8*** %arglist_addr, align 8
  %3 = load i8** %vallist_addr, align 8
  %4 = load i64* %valsize_addr, align 8
  %5 = call i64 @argmatch(i8* %1, i8** %2, i8* %3, i64 %4) nounwind readonly
  store i64 %5, i64* %res, align 8
  %6 = load i64* %res, align 8
  %7 = icmp sge i64 %6, 0
  br i1 %7, label %bb, label %bb1

bb:                                               ; preds = %entry
  %8 = load i64* %res, align 8
  store i64 %8, i64* %0, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %9 = load i8** %context_addr, align 8
  %10 = load i8** %arg_addr, align 8
  %11 = load i64* %res, align 8
  call void @argmatch_invalid(i8* %9, i8* %10, i64 %11) nounwind
  %12 = load i8*** %arglist_addr, align 8
  %13 = load i8** %vallist_addr, align 8
  %14 = load i64* %valsize_addr, align 8
  call void @argmatch_valid(i8** %12, i8* %13, i64 %14) nounwind
  %15 = load void ()** %exit_fn_addr, align 8
  call void %15() nounwind
  store i64 -1, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %16 = load i64* %0, align 8
  store i64 %16, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) nounwind readonly {
entry:
  %value_addr = alloca i8*, align 8
  %arglist_addr = alloca i8**, align 8
  %vallist_addr = alloca i8*, align 8
  %valsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %i = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %value, i8** %value_addr
  store i8** %arglist, i8*** %arglist_addr
  store i8* %vallist, i8** %vallist_addr
  store i64 %valsize, i64* %valsize_addr
  store i64 0, i64* %i, align 8
  br label %bb3

bb:                                               ; preds = %bb3
  %1 = load i64* %valsize_addr, align 8
  %2 = load i64* %i, align 8
  %3 = mul i64 %1, %2
  %4 = load i8** %vallist_addr, align 8
  %5 = getelementptr inbounds i8* %4, i64 %3
  %6 = load i8** %value_addr, align 8
  %7 = load i64* %valsize_addr, align 8
  %8 = call i32 @memcmp(i8* %6, i8* %5, i64 %7) nounwind readonly
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %10 = load i8*** %arglist_addr, align 8
  %11 = load i64* %i, align 8
  %12 = getelementptr inbounds i8** %10, i64 %11
  %13 = load i8** %12, align 1
  store i8* %13, i8** %0, align 8
  br label %bb5

bb2:                                              ; preds = %bb
  %14 = load i64* %i, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %i, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %entry
  %16 = load i8*** %arglist_addr, align 8
  %17 = load i64* %i, align 8
  %18 = getelementptr inbounds i8** %16, i64 %17
  %19 = load i8** %18, align 1
  %20 = icmp ne i8* %19, null
  br i1 %20, label %bb, label %bb4

bb4:                                              ; preds = %bb3
  store i8* null, i8** %0, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb1
  %21 = load i8** %0, align 8
  store i8* %21, i8** %retval, align 8
  %retval6 = load i8** %retval
  ret i8* %retval6
}

define i64 @rotl64(i64 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i64, align 8
  %n_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %x, i64* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i64* %x_addr, align 8
  %2 = load i32* %n_addr, align 4
  %.cast = zext i32 %2 to i64
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = shl i64 %1, %.cast
  %5 = sub i64 64, %.cast
  %int_cast_to_i641 = bitcast i64 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = lshr i64 %1, %5
  %8 = or i64 %4, %7
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @rotr64(i64 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i64, align 8
  %n_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %x, i64* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i64* %x_addr, align 8
  %2 = load i32* %n_addr, align 4
  %.cast = zext i32 %2 to i64
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = lshr i64 %1, %.cast
  %5 = sub i64 64, %.cast
  %int_cast_to_i641 = bitcast i64 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = shl i64 %1, %5
  %8 = or i64 %4, %7
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i32 @rotl32(i32 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i32, align 4
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %x, i32* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i32* %x_addr, align 4
  %2 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %2 to i64
  %3 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = shl i32 %1, %2
  %5 = sub i32 32, %2
  %int_cast_to_i641 = zext i32 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = lshr i32 %1, %5
  %8 = or i32 %4, %7
  store i32 %8, i32* %0, align 4
  %9 = load i32* %0, align 4
  store i32 %9, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @rotr32(i32 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i32, align 4
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %x, i32* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i32* %x_addr, align 4
  %2 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %2 to i64
  %3 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = lshr i32 %1, %2
  %5 = sub i32 32, %2
  %int_cast_to_i641 = zext i32 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = shl i32 %1, %5
  %8 = or i32 %4, %7
  store i32 %8, i32* %0, align 4
  %9 = load i32* %0, align 4
  store i32 %9, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i64 @rotl_sz(i64 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i64, align 8
  %n_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %x, i64* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i64* %x_addr, align 8
  %2 = load i32* %n_addr, align 4
  %.cast = zext i32 %2 to i64
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = shl i64 %1, %.cast
  %5 = sub i64 64, %.cast
  %int_cast_to_i641 = bitcast i64 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = lshr i64 %1, %5
  %8 = or i64 %4, %7
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @rotr_sz(i64 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i64, align 8
  %n_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %x, i64* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i64* %x_addr, align 8
  %2 = load i32* %n_addr, align 4
  %.cast = zext i32 %2 to i64
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = lshr i64 %1, %.cast
  %5 = sub i64 64, %.cast
  %int_cast_to_i641 = bitcast i64 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = shl i64 %1, %5
  %8 = or i64 %4, %7
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define zeroext i16 @rotl16(i16 zeroext %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i16, align 2
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i16 %x, i16* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i16* %x_addr, align 2
  %2 = zext i16 %1 to i32
  %3 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %3 to i64
  %4 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %4, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i32 %2, %3
  %6 = trunc i32 %5 to i16
  %7 = load i16* %x_addr, align 2
  %8 = zext i16 %7 to i32
  %9 = load i32* %n_addr, align 4
  %10 = sub nsw i32 16, %9
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = ashr i32 %8, %10
  %13 = trunc i32 %12 to i16
  %14 = or i16 %6, %13
  %15 = zext i16 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i16
  ret i16 %retval12
}

define zeroext i16 @rotr16(i16 zeroext %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i16, align 2
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i16 %x, i16* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i16* %x_addr, align 2
  %2 = zext i16 %1 to i32
  %3 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %3 to i64
  %4 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %4, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = ashr i32 %2, %3
  %6 = trunc i32 %5 to i16
  %7 = load i16* %x_addr, align 2
  %8 = zext i16 %7 to i32
  %9 = load i32* %n_addr, align 4
  %10 = sub nsw i32 16, %9
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = shl i32 %8, %10
  %13 = trunc i32 %12 to i16
  %14 = or i16 %6, %13
  %15 = zext i16 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i16
  ret i16 %retval12
}

define zeroext i8 @rotl8(i8 zeroext %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i8, align 1
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8 %x, i8* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i8* %x_addr, align 1
  %2 = zext i8 %1 to i32
  %3 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %3 to i64
  %4 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %4, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i32 %2, %3
  %6 = trunc i32 %5 to i8
  %7 = load i8* %x_addr, align 1
  %8 = zext i8 %7 to i32
  %9 = load i32* %n_addr, align 4
  %10 = sub nsw i32 8, %9
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = ashr i32 %8, %10
  %13 = trunc i32 %12 to i8
  %14 = or i8 %6, %13
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define zeroext i8 @rotr8(i8 zeroext %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i8, align 1
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8 %x, i8* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i8* %x_addr, align 1
  %2 = zext i8 %1 to i32
  %3 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %3 to i64
  %4 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %4, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = ashr i32 %2, %3
  %6 = trunc i32 %5 to i8
  %7 = load i8* %x_addr, align 1
  %8 = zext i8 %7 to i32
  %9 = load i32* %n_addr, align 4
  %10 = sub nsw i32 8, %9
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = shl i32 %8, %10
  %13 = trunc i32 %12 to i8
  %14 = or i8 %6, %13
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define i32 @c_strcasecmp(i8* %s1, i8* %s2) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.1 = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %p1 = alloca i8*
  %p2 = alloca i8*
  %c1 = alloca i8
  %c2 = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8** %s1_addr, align 8
  store i8* %1, i8** %p1, align 8
  %2 = load i8** %s2_addr, align 8
  store i8* %2, i8** %p2, align 8
  %3 = load i8** %p1, align 8
  %4 = load i8** %p2, align 8
  %5 = icmp eq i8* %3, %4
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb4

bb1:                                              ; preds = %bb2, %entry
  %6 = load i8** %p1, align 8
  %7 = load i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = call i32 @c_tolower(i32 %8) nounwind readnone
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %c1, align 1
  %11 = load i8** %p2, align 8
  %12 = load i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = call i32 @c_tolower(i32 %13) nounwind readnone
  %15 = trunc i32 %14 to i8
  store i8 %15, i8* %c2, align 1
  %16 = load i8* %c1, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %18 = load i8** %p1, align 8
  %19 = getelementptr inbounds i8* %18, i64 1
  store i8* %19, i8** %p1, align 8
  %20 = load i8** %p2, align 8
  %21 = getelementptr inbounds i8* %20, i64 1
  store i8* %21, i8** %p2, align 8
  %22 = load i8* %c1, align 1
  %23 = load i8* %c2, align 1
  %24 = icmp eq i8 %22, %23
  br i1 %24, label %bb1, label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %25 = load i8* %c1, align 1
  %26 = zext i8 %25 to i32
  %27 = load i8* %c2, align 1
  %28 = zext i8 %27 to i32
  %29 = sub nsw i32 %26, %28
  store i32 %29, i32* %0, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb
  %30 = load i32* %0, align 4
  store i32 %30, i32* %retval, align 4
  %retval5 = load i32* %retval
  ret i32 %retval5
}

define i32 @set_cloexec_flag(i32 %desc, i8 zeroext %value) nounwind {
entry:
  %desc_addr = alloca i32, align 4
  %value_addr = alloca i8, align 1
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.0 = alloca i32
  %flags = alloca i32
  %newflags = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %desc, i32* %desc_addr
  store i8 %value, i8* %value_addr
  %1 = load i32* %desc_addr, align 4
  %2 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %1, i32 1, i32 0) nounwind
  store i32 %2, i32* %flags, align 4
  %3 = load i32* %flags, align 4
  %4 = icmp sge i32 %3, 0
  br i1 %4, label %bb, label %bb6

bb:                                               ; preds = %entry
  %5 = load i8* %value_addr, align 1
  %toBool = icmp ne i8 %5, 0
  %6 = load i32* %flags, align 4
  br i1 %toBool, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %7 = or i32 %6, 1
  store i32 %7, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %bb
  %8 = and i32 %6, -2
  store i32 %8, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %9 = load i32* %iftmp.0, align 4
  store i32 %9, i32* %newflags, align 4
  %10 = load i32* %flags, align 4
  %11 = load i32* %newflags, align 4
  %12 = icmp eq i32 %10, %11
  br i1 %12, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %13 = load i32* %desc_addr, align 4
  %14 = load i32* %newflags, align 4
  %15 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %13, i32 2, i32 %14) nounwind
  %16 = icmp ne i32 %15, -1
  br i1 %16, label %bb5, label %bb6

bb5:                                              ; preds = %bb4, %bb3
  store i32 0, i32* %0, align 4
  br label %bb7

bb6:                                              ; preds = %bb4, %entry
  store i32 -1, i32* %0, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %17 = load i32* %0, align 4
  store i32 %17, i32* %retval, align 4
  %retval8 = load i32* %retval
  ret i32 %retval8
}

define i32 @dup_cloexec(i32 %fd) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  %1 = load i32* %fd_addr, align 4
  %2 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %1, i32 1030, i32 0) nounwind
  store i32 %2, i32* %0, align 4
  %3 = load i32* %0, align 4
  store i32 %3, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @close_stream(%struct.FILE* %stream) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %some_pending = alloca i8
  %prev_fail = alloca i8
  %fclose_fail = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  %1 = load %struct.FILE** %stream_addr, align 8
  %2 = call i64 bitcast (i64 (%4*)* @__fpending to i64 (%struct.FILE*)*)(%struct.FILE* %1) nounwind
  %3 = icmp ne i64 %2, 0
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %some_pending, align 1
  %5 = load %struct.FILE** %stream_addr, align 8
  %6 = call i32 bitcast (i32 (%4*)* @ferror_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %5) nounwind
  %7 = icmp ne i32 %6, 0
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %prev_fail, align 1
  %9 = load %struct.FILE** %stream_addr, align 8
  %10 = call i32 @rpl_fclose(%struct.FILE* %9) nounwind
  %11 = icmp ne i32 %10, 0
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %fclose_fail, align 1
  %13 = load i8* %prev_fail, align 1
  %toBool = icmp ne i8 %13, 0
  br i1 %toBool, label %bb8, label %bb

bb:                                               ; preds = %entry
  %14 = load i8* %fclose_fail, align 1
  %toBool1 = icmp ne i8 %14, 0
  %toBool1not = xor i1 %toBool1, true
  %toBool1not2 = zext i1 %toBool1not to i8
  %toBool4 = icmp ne i8 %toBool1not2, 0
  br i1 %toBool4, label %bb15, label %bb5

bb5:                                              ; preds = %bb
  %15 = load i8* %some_pending, align 1
  %toBool6 = icmp ne i8 %15, 0
  br i1 %toBool6, label %bb8, label %bb7

bb7:                                              ; preds = %bb5
  %16 = call i32* @__errno_location() nounwind readnone
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %17, 9
  br i1 %18, label %bb8, label %bb15

bb8:                                              ; preds = %bb7, %bb5, %entry
  %19 = load i8* %fclose_fail, align 1
  %toBool9 = icmp ne i8 %19, 0
  %toBool9not = xor i1 %toBool9, true
  %toBool9not10 = zext i1 %toBool9not to i8
  %toBool12 = icmp ne i8 %toBool9not10, 0
  br i1 %toBool12, label %bb13, label %bb14

bb13:                                             ; preds = %bb8
  %20 = call i32* @__errno_location() nounwind readnone
  store i32 0, i32* %20, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %bb8
  store i32 -1, i32* %0, align 4
  br label %bb16

bb15:                                             ; preds = %bb7, %bb
  store i32 0, i32* %0, align 4
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %21 = load i32* %0, align 4
  store i32 %21, i32* %retval, align 4
  %retval17 = load i32* %retval
  ret i32 %retval17
}

define i32 @open_safer(i8* %file, i32 %flags, ...) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %flags_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %addr.0 = alloca i8*
  %mode = alloca i32
  %ap = alloca [1 x %struct.__va_list_tag]
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i32 %flags, i32* %flags_addr
  store i32 0, i32* %mode, align 4
  %1 = load i32* %flags_addr, align 4
  %2 = and i32 %1, 64
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %bb, label %bb8

bb:                                               ; preds = %entry
  %ap1 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  %ap12 = bitcast %struct.__va_list_tag* %ap1 to i8*
  call void @llvm.va_start(i8* %ap12)
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %5 = getelementptr inbounds %struct.__va_list_tag* %4, i32 0, i32 0
  %6 = load i32* %5, align 8
  %7 = icmp uge i32 %6, 48
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  br i1 %7, label %bb4, label %bb3

bb3:                                              ; preds = %bb
  %9 = getelementptr inbounds %struct.__va_list_tag* %8, i32 0, i32 3
  %10 = load i8** %9, align 8
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %12 = getelementptr inbounds %struct.__va_list_tag* %11, i32 0, i32 0
  %13 = load i32* %12, align 8
  %14 = inttoptr i32 %13 to i8*
  %15 = ptrtoint i8* %10 to i64
  %16 = ptrtoint i8* %14 to i64
  %17 = add i64 %15, %16
  %18 = inttoptr i64 %17 to i8*
  store i8* %18, i8** %addr.0, align 8
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %20 = getelementptr inbounds %struct.__va_list_tag* %19, i32 0, i32 0
  %21 = load i32* %20, align 8
  %22 = add i32 %21, 8
  %23 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %24 = getelementptr inbounds %struct.__va_list_tag* %23, i32 0, i32 0
  store i32 %22, i32* %24, align 8
  br label %bb5

bb4:                                              ; preds = %bb
  %25 = getelementptr inbounds %struct.__va_list_tag* %8, i32 0, i32 2
  %26 = load i8** %25, align 8
  store i8* %26, i8** %addr.0, align 8
  %27 = getelementptr inbounds i8* %26, i64 8
  %28 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %29 = getelementptr inbounds %struct.__va_list_tag* %28, i32 0, i32 2
  store i8* %27, i8** %29, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %30 = load i8** %addr.0, align 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32* %31, align 4
  store i32 %32, i32* %mode, align 4
  %ap6 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  %ap67 = bitcast %struct.__va_list_tag* %ap6 to i8*
  call void @llvm.va_end(i8* %ap67)
  br label %bb8

bb8:                                              ; preds = %bb5, %entry
  %33 = load i8** %file_addr, align 8
  %34 = load i32* %flags_addr, align 4
  %35 = load i32* %mode, align 4
  %36 = call i32 (i8*, i32, ...)* @open(i8* %33, i32 %34, i32 %35) nounwind
  %37 = call i32 @fd_safer(i32 %36) nounwind
  store i32 %37, i32* %0, align 4
  %38 = load i32* %0, align 4
  store i32 %38, i32* %retval, align 4
  %retval9 = load i32* %retval
  ret i32 %retval9
}

define i64 @hash_pjw(i8* %x, i64 %tablesize) nounwind readonly {
entry:
  %x_addr = alloca i8*, align 8
  %tablesize_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %s = alloca i8*
  %h = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i64 %tablesize, i64* %tablesize_addr
  store i64 0, i64* %h, align 8
  %1 = load i8** %x_addr, align 8
  store i8* %1, i8** %s, align 8
  br label %bb1

bb:                                               ; preds = %bb1
  %2 = load i8** %s, align 8
  %3 = load i8* %2, align 1
  %4 = sext i8 %3 to i64
  %5 = load i64* %h, align 8
  %int_cast_to_i641 = bitcast i64 55 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit, label %bb.i3

bb.i3:                                            ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb
  %7 = lshr i64 %5, 55
  %int_cast_to_i642 = bitcast i64 9 to i64
  %8 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %8, label %klee_overshift_check.exit5, label %bb.i4

bb.i4:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit5:                       ; preds = %klee_overshift_check.exit
  %9 = shl i64 %5, 9
  %10 = or i64 %7, %9
  %11 = add i64 %4, %10
  store i64 %11, i64* %h, align 8
  %12 = load i8** %s, align 8
  %13 = getelementptr inbounds i8* %12, i64 1
  store i8* %13, i8** %s, align 8
  br label %bb1

bb1:                                              ; preds = %klee_overshift_check.exit5, %entry
  %14 = load i8** %s, align 8
  %15 = load i8* %14, align 1
  %16 = icmp ne i8 %15, 0
  br i1 %16, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  %17 = load i64* %h, align 8
  %18 = load i64* %tablesize_addr, align 8
  %int_cast_to_i64 = bitcast i64 %18 to i64
  %19 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %20 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %20, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %21 = urem i64 %17, %18
  store i64 %21, i64* %0, align 8
  %22 = load i64* %0, align 8
  store i64 %22, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define internal i8* @get_charset_aliases() nounwind {
entry:
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.2 = alloca i32
  %cp = alloca i8*
  %dir = alloca i8*
  %base = alloca i8*
  %file_name = alloca i8*
  %dir_len = alloca i64
  %base_len = alloca i64
  %add_slash = alloca i32
  %fd = alloca i32
  %fp = alloca %struct.FILE*
  %res_ptr = alloca i8*
  %res_size = alloca i64
  %c = alloca i32
  %buf1 = alloca [51 x i8]
  %buf2 = alloca [51 x i8]
  %l1 = alloca i64
  %l2 = alloca i64
  %old_res_ptr = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  %1 = volatile load i8** @charset_aliases, align 8
  store i8* %1, i8** %cp, align 8
  %2 = load i8** %cp, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %bb, label %bb46

bb:                                               ; preds = %entry
  store i8* getelementptr inbounds ([14 x i8]* @.str279, i64 0, i64 0), i8** %base, align 8
  %4 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8]* @.str1280, i64 0, i64 0)) nounwind
  store i8* %4, i8** %dir, align 8
  %5 = load i8** %dir, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  %7 = load i8** %dir, align 8
  %8 = getelementptr inbounds i8* %7, i64 0
  %9 = load i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %bb
  store i8* getelementptr inbounds ([15 x i8]* @.str2281, i64 0, i64 0), i8** %dir, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i8** %dir, align 8
  %12 = call i64 @strlen(i8* %11) nounwind readonly
  store i64 %12, i64* %dir_len, align 8
  %13 = load i8** %base, align 8
  %14 = call i64 @strlen(i8* %13) nounwind readonly
  store i64 %14, i64* %base_len, align 8
  %15 = load i64* %dir_len, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %bb6, label %bb4

bb4:                                              ; preds = %bb3
  %17 = load i64* %dir_len, align 8
  %18 = sub i64 %17, 1
  %19 = load i8** %dir, align 8
  %20 = getelementptr inbounds i8* %19, i64 %18
  %21 = load i8* %20, align 1
  %22 = icmp eq i8 %21, 47
  br i1 %22, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  store i32 1, i32* %iftmp.2, align 4
  br label %bb7

bb6:                                              ; preds = %bb4, %bb3
  store i32 0, i32* %iftmp.2, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %23 = load i32* %iftmp.2, align 4
  store i32 %23, i32* %add_slash, align 4
  %24 = load i32* %add_slash, align 4
  %25 = sext i32 %24 to i64
  %26 = load i64* %dir_len, align 8
  %27 = add i64 %25, %26
  %28 = load i64* %base_len, align 8
  %29 = add i64 %27, %28
  %30 = add i64 %29, 1
  %31 = call noalias i8* @malloc(i64 %30) nounwind
  store i8* %31, i8** %file_name, align 8
  %32 = load i8** %file_name, align 8
  %33 = icmp ne i8* %32, null
  br i1 %33, label %bb8, label %bb11

bb8:                                              ; preds = %bb7
  %34 = load i8** %file_name, align 8
  %35 = load i8** %dir, align 8
  %36 = load i64* %dir_len, align 8
  %37 = call i8* @memcpy(i8* %34, i8* %35, i64 %36)
  %38 = load i32* %add_slash, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %40 = load i8** %file_name, align 8
  %41 = load i64* %dir_len, align 8
  %42 = getelementptr inbounds i8* %40, i64 %41
  store i8 47, i8* %42, align 1
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %43 = load i64* %base_len, align 8
  %44 = add i64 %43, 1
  %45 = load i8** %file_name, align 8
  %46 = load i64* %dir_len, align 8
  %47 = getelementptr inbounds i8* %45, i64 %46
  %48 = load i32* %add_slash, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8* %47, i64 %49
  %51 = load i8** %base, align 8
  %52 = call i8* @memcpy(i8* %50, i8* %51, i64 %44)
  br label %bb11

bb11:                                             ; preds = %bb10, %bb7
  %53 = load i8** %file_name, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  store i8* getelementptr inbounds ([1 x i8]* @.str3282, i64 0, i64 0), i8** %cp, align 8
  br label %bb45

bb13:                                             ; preds = %bb11
  %55 = load i8** %file_name, align 8
  %56 = call i32 (i8*, i32, ...)* @open(i8* %55, i32 131072) nounwind
  store i32 %56, i32* %fd, align 4
  %57 = load i32* %fd, align 4
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %bb14, label %bb15

bb14:                                             ; preds = %bb13
  store i8* getelementptr inbounds ([1 x i8]* @.str3282, i64 0, i64 0), i8** %cp, align 8
  br label %bb44

bb15:                                             ; preds = %bb13
  %59 = load i32* %fd, align 4
  %60 = call %struct.FILE* bitcast (%4* (i32, i8*)* @fdopen to %struct.FILE* (i32, i8*)*)(i32 %59, i8* getelementptr inbounds ([2 x i8]* @.str4283, i64 0, i64 0)) nounwind
  store %struct.FILE* %60, %struct.FILE** %fp, align 8
  %61 = load %struct.FILE** %fp, align 8
  %62 = icmp eq %struct.FILE* %61, null
  br i1 %62, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  %63 = load i32* %fd, align 4
  %64 = call i32 @close(i32 %63) nounwind
  store i8* getelementptr inbounds ([1 x i8]* @.str3282, i64 0, i64 0), i8** %cp, align 8
  br label %bb44

bb17:                                             ; preds = %bb15
  store i8* null, i8** %res_ptr, align 8
  store i64 0, i64* %res_size, align 8
  br label %bb18

bb18:                                             ; preds = %bb19, %bb37, %bb25, %bb17
  %65 = load %struct.FILE** %fp, align 8
  %66 = call i32 bitcast (i32 (%4*)* @__fgetc_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %65) nounwind
  store i32 %66, i32* %c, align 4
  %67 = load i32* %c, align 4
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %bb41, label %bb19

bb19:                                             ; preds = %bb18
  %69 = load i32* %c, align 4
  %70 = icmp eq i32 %69, 10
  %71 = load i32* %c, align 4
  %72 = icmp eq i32 %71, 32
  %or.cond = or i1 %70, %72
  %73 = load i32* %c, align 4
  %74 = icmp eq i32 %73, 9
  %or.cond3 = or i1 %or.cond, %74
  br i1 %or.cond3, label %bb18, label %bb22

bb22:                                             ; preds = %bb19
  %75 = load i32* %c, align 4
  %76 = icmp eq i32 %75, 35
  br i1 %76, label %bb23, label %bb27

bb23:                                             ; preds = %bb23, %bb22
  %77 = load %struct.FILE** %fp, align 8
  %78 = call i32 bitcast (i32 (%4*)* @__fgetc_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %77) nounwind
  store i32 %78, i32* %c, align 4
  %79 = load i32* %c, align 4
  %80 = icmp ne i32 %79, -1
  %81 = load i32* %c, align 4
  %82 = icmp ne i32 %81, 10
  %or.cond5 = and i1 %80, %82
  br i1 %or.cond5, label %bb23, label %bb25

bb25:                                             ; preds = %bb23
  %83 = load i32* %c, align 4
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %bb41, label %bb18

bb27:                                             ; preds = %bb22
  %85 = load i32* %c, align 4
  %86 = load %struct.FILE** %fp, align 8
  %87 = call i32 bitcast (i32 (i32, %4*)* @ungetc to i32 (i32, %struct.FILE*)*)(i32 %85, %struct.FILE* %86) nounwind
  %88 = load %struct.FILE** %fp, align 8
  %buf128 = bitcast [51 x i8]* %buf1 to i8*
  %buf229 = bitcast [51 x i8]* %buf2 to i8*
  %89 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fscanf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %88, i8* noalias getelementptr inbounds ([10 x i8]* @.str5284, i64 0, i64 0), i8* %buf128, i8* %buf229) nounwind
  %90 = icmp sle i32 %89, 1
  br i1 %90, label %bb41, label %bb30

bb30:                                             ; preds = %bb27
  %buf131 = bitcast [51 x i8]* %buf1 to i8*
  %91 = call i64 @strlen(i8* %buf131) nounwind readonly
  store i64 %91, i64* %l1, align 8
  %buf232 = bitcast [51 x i8]* %buf2 to i8*
  %92 = call i64 @strlen(i8* %buf232) nounwind readonly
  store i64 %92, i64* %l2, align 8
  %93 = load i8** %res_ptr, align 8
  store i8* %93, i8** %old_res_ptr, align 8
  %94 = load i64* %res_size, align 8
  %95 = icmp eq i64 %94, 0
  %96 = load i64* %l1, align 8
  %97 = load i64* %l2, align 8
  %98 = add i64 %96, %97
  br i1 %95, label %bb33, label %bb34

bb33:                                             ; preds = %bb30
  %99 = add i64 %98, 2
  store i64 %99, i64* %res_size, align 8
  %100 = load i64* %res_size, align 8
  %101 = add i64 %100, 1
  %102 = call noalias i8* @malloc(i64 %101) nounwind
  store i8* %102, i8** %res_ptr, align 8
  br label %bb35

bb34:                                             ; preds = %bb30
  %103 = load i64* %res_size, align 8
  %104 = add i64 %98, %103
  %105 = add i64 %104, 2
  store i64 %105, i64* %res_size, align 8
  %106 = load i64* %res_size, align 8
  %107 = add i64 %106, 1
  %108 = load i8** %res_ptr, align 8
  %109 = call i8* @realloc(i8* %108, i64 %107) nounwind
  store i8* %109, i8** %res_ptr, align 8
  br label %bb35

bb35:                                             ; preds = %bb34, %bb33
  %110 = load i8** %res_ptr, align 8
  %111 = icmp eq i8* %110, null
  br i1 %111, label %bb36, label %bb37

bb36:                                             ; preds = %bb35
  store i64 0, i64* %res_size, align 8
  %112 = load i8** %old_res_ptr, align 8
  call void @free(i8* %112) nounwind
  br label %bb41

bb37:                                             ; preds = %bb35
  %113 = load i8** %res_ptr, align 8
  %114 = load i64* %res_size, align 8
  %115 = getelementptr inbounds i8* %113, i64 %114
  %116 = load i64* %l2, align 8
  %117 = add i64 %116, 1
  %118 = sub nsw i64 0, %117
  %119 = getelementptr inbounds i8* %115, i64 %118
  %120 = load i64* %l1, align 8
  %121 = add i64 %120, 1
  %122 = sub nsw i64 0, %121
  %123 = getelementptr inbounds i8* %119, i64 %122
  %buf138 = bitcast [51 x i8]* %buf1 to i8*
  %124 = call i8* @strcpy(i8* noalias %123, i8* noalias %buf138) nounwind
  %125 = load i8** %res_ptr, align 8
  %126 = load i64* %res_size, align 8
  %127 = getelementptr inbounds i8* %125, i64 %126
  %128 = load i64* %l2, align 8
  %129 = add i64 %128, 1
  %130 = sub nsw i64 0, %129
  %131 = getelementptr inbounds i8* %127, i64 %130
  %buf239 = bitcast [51 x i8]* %buf2 to i8*
  %132 = call i8* @strcpy(i8* noalias %131, i8* noalias %buf239) nounwind
  br label %bb18

bb41:                                             ; preds = %bb36, %bb27, %bb25, %bb18
  %133 = load %struct.FILE** %fp, align 8
  %134 = call i32 @rpl_fclose(%struct.FILE* %133) nounwind
  %135 = load i64* %res_size, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %bb42, label %bb43

bb42:                                             ; preds = %bb41
  store i8* getelementptr inbounds ([1 x i8]* @.str3282, i64 0, i64 0), i8** %cp, align 8
  br label %bb44

bb43:                                             ; preds = %bb41
  %137 = load i8** %res_ptr, align 8
  %138 = load i64* %res_size, align 8
  %139 = getelementptr inbounds i8* %137, i64 %138
  store i8 0, i8* %139, align 1
  %140 = load i8** %res_ptr, align 8
  store i8* %140, i8** %cp, align 8
  br label %bb44

bb44:                                             ; preds = %bb43, %bb42, %bb16, %bb14
  %141 = load i8** %file_name, align 8
  call void @free(i8* %141) nounwind
  br label %bb45

bb45:                                             ; preds = %bb44, %bb12
  %142 = load i8** %cp, align 8
  volatile store i8* %142, i8** @charset_aliases, align 8
  br label %bb46

bb46:                                             ; preds = %bb45, %entry
  %143 = load i8** %cp, align 8
  store i8* %143, i8** %0, align 8
  %144 = load i8** %0, align 8
  store i8* %144, i8** %retval, align 8
  %retval47 = load i8** %retval
  ret i8* %retval47
}

define i8* @locale_charset() nounwind {
entry:
  %retval = alloca i8*
  %0 = alloca i8*
  %codeset = alloca i8*
  %aliases = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  %1 = call i8* @nl_langinfo(i32 14) nounwind
  store i8* %1, i8** %codeset, align 8
  %2 = load i8** %codeset, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8]* @.str3282, i64 0, i64 0), i8** %codeset, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %4 = call i8* @get_charset_aliases() nounwind
  store i8* %4, i8** %aliases, align 8
  br label %bb7

bb2:                                              ; preds = %bb7
  %5 = load i8** %codeset, align 8
  %6 = load i8** %aliases, align 8
  %7 = call i32 @strcmp(i8* %5, i8* %6) nounwind readonly
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %bb5, label %bb3

bb3:                                              ; preds = %bb2
  %9 = load i8** %aliases, align 8
  %10 = getelementptr inbounds i8* %9, i64 0
  %11 = load i8* %10, align 1
  %12 = icmp ne i8 %11, 42
  br i1 %12, label %bb6, label %bb4

bb4:                                              ; preds = %bb3
  %13 = load i8** %aliases, align 8
  %14 = getelementptr inbounds i8* %13, i64 1
  %15 = load i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %bb5, label %bb6

bb5:                                              ; preds = %bb4, %bb2
  %17 = load i8** %aliases, align 8
  %18 = call i64 @strlen(i8* %17) nounwind readonly
  %19 = load i8** %aliases, align 8
  %20 = getelementptr inbounds i8* %19, i64 %18
  %21 = getelementptr inbounds i8* %20, i64 1
  store i8* %21, i8** %codeset, align 8
  br label %bb8

bb6:                                              ; preds = %bb4, %bb3
  %22 = load i8** %aliases, align 8
  %23 = call i64 @strlen(i8* %22) nounwind readonly
  %24 = add i64 %23, 1
  %25 = load i8** %aliases, align 8
  %26 = getelementptr inbounds i8* %25, i64 %24
  store i8* %26, i8** %aliases, align 8
  %27 = load i8** %aliases, align 8
  %28 = call i64 @strlen(i8* %27) nounwind readonly
  %29 = add i64 %28, 1
  %30 = load i8** %aliases, align 8
  %31 = getelementptr inbounds i8* %30, i64 %29
  store i8* %31, i8** %aliases, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb1
  %32 = load i8** %aliases, align 8
  %33 = load i8* %32, align 1
  %34 = icmp ne i8 %33, 0
  br i1 %34, label %bb2, label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %35 = load i8** %codeset, align 8
  %36 = getelementptr inbounds i8* %35, i64 0
  %37 = load i8* %36, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i8* getelementptr inbounds ([6 x i8]* @.str6285, i64 0, i64 0), i8** %codeset, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %39 = load i8** %codeset, align 8
  store i8* %39, i8** %0, align 8
  %40 = load i8** %0, align 8
  store i8* %40, i8** %retval, align 8
  %retval11 = load i8** %retval
  ret i8* %retval11
}

define void @mbiter_multi_next(%struct.mbi_iterator_t* %iter) nounwind inlinehint {
entry:
  %iter_addr = alloca %struct.mbi_iterator_t*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbi_iterator_t* %iter, %struct.mbi_iterator_t** %iter_addr
  %0 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %1 = getelementptr inbounds %struct.mbi_iterator_t* %0, i32 0, i32 3
  %2 = load i8* %1, align 4
  %toBool = icmp ne i8 %2, 0
  br i1 %toBool, label %return, label %bb

bb:                                               ; preds = %entry
  %3 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %4 = getelementptr inbounds %struct.mbi_iterator_t* %3, i32 0, i32 1
  %5 = load i8* %4, align 8
  %toBool1 = icmp ne i8 %5, 0
  br i1 %toBool1, label %with_shift, label %bb2

bb2:                                              ; preds = %bb
  %6 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %7 = getelementptr inbounds %struct.mbi_iterator_t* %6, i32 0, i32 4
  %8 = getelementptr inbounds %struct.mbchar* %7, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = load i8* %9, align 1
  %11 = sext i8 %10 to i32
  %12 = trunc i32 %11 to i8
  %13 = call zeroext i8 @is_basic(i8 signext %12) nounwind
  %toBool3 = icmp ne i8 %13, 0
  %14 = load %struct.mbi_iterator_t** %iter_addr, align 8
  br i1 %toBool3, label %bb4, label %bb5

bb4:                                              ; preds = %bb2
  %15 = getelementptr inbounds %struct.mbi_iterator_t* %14, i32 0, i32 4
  %16 = getelementptr inbounds %struct.mbchar* %15, i32 0, i32 1
  store i64 1, i64* %16, align 8
  %17 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %18 = getelementptr inbounds %struct.mbi_iterator_t* %17, i32 0, i32 4
  %19 = getelementptr inbounds %struct.mbchar* %18, i32 0, i32 0
  %20 = load i8** %19, align 8
  %21 = load i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %24 = getelementptr inbounds %struct.mbi_iterator_t* %23, i32 0, i32 4
  %25 = getelementptr inbounds %struct.mbchar* %24, i32 0, i32 3
  store i32 %22, i32* %25, align 4
  %26 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %27 = getelementptr inbounds %struct.mbi_iterator_t* %26, i32 0, i32 4
  %28 = getelementptr inbounds %struct.mbchar* %27, i32 0, i32 2
  store i8 1, i8* %28, align 8
  br label %bb18

bb5:                                              ; preds = %bb2
  %29 = getelementptr inbounds %struct.mbi_iterator_t* %14, i32 0, i32 2
  %30 = call i32 bitcast (i32 (%struct.__mbstate_t*)* @mbsinit to i32 (%struct.mbstate_t*)*)(%struct.mbstate_t* %29) nounwind readonly
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8]* @.str287, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str1288, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.3289, i64 0, i64 0)) noreturn
  unreachable

bb7:                                              ; preds = %bb5
  %32 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %33 = getelementptr inbounds %struct.mbi_iterator_t* %32, i32 0, i32 1
  store i8 1, i8* %33, align 8
  br label %with_shift

with_shift:                                       ; preds = %bb7, %bb
  %34 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %35 = getelementptr inbounds %struct.mbi_iterator_t* %34, i32 0, i32 2
  %36 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %37 = getelementptr inbounds %struct.mbi_iterator_t* %36, i32 0, i32 0
  %38 = load i8** %37, align 8
  %39 = ptrtoint i8* %38 to i64
  %40 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %41 = getelementptr inbounds %struct.mbi_iterator_t* %40, i32 0, i32 4
  %42 = getelementptr inbounds %struct.mbchar* %41, i32 0, i32 0
  %43 = load i8** %42, align 8
  %44 = ptrtoint i8* %43 to i64
  %45 = sub nsw i64 %39, %44
  %46 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %47 = getelementptr inbounds %struct.mbi_iterator_t* %46, i32 0, i32 4
  %48 = getelementptr inbounds %struct.mbchar* %47, i32 0, i32 0
  %49 = load i8** %48, align 8
  %50 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %51 = getelementptr inbounds %struct.mbi_iterator_t* %50, i32 0, i32 4
  %52 = getelementptr inbounds %struct.mbchar* %51, i32 0, i32 3
  %53 = call i64 bitcast (i64 (i32*, i8*, i64, %struct.__mbstate_t*)* @mbrtowc to i64 (i32*, i8*, i64, %struct.mbstate_t*)*)(i32* noalias %52, i8* noalias %49, i64 %45, %struct.mbstate_t* noalias %35) nounwind
  %54 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %55 = getelementptr inbounds %struct.mbi_iterator_t* %54, i32 0, i32 4
  %56 = getelementptr inbounds %struct.mbchar* %55, i32 0, i32 1
  store i64 %53, i64* %56, align 8
  %57 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %58 = getelementptr inbounds %struct.mbi_iterator_t* %57, i32 0, i32 4
  %59 = getelementptr inbounds %struct.mbchar* %58, i32 0, i32 1
  %60 = load i64* %59, align 8
  %61 = icmp eq i64 %60, -1
  %62 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %63 = getelementptr inbounds %struct.mbi_iterator_t* %62, i32 0, i32 4
  %64 = getelementptr inbounds %struct.mbchar* %63, i32 0, i32 1
  br i1 %61, label %bb8, label %bb9

bb8:                                              ; preds = %with_shift
  store i64 1, i64* %64, align 8
  %65 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %66 = getelementptr inbounds %struct.mbi_iterator_t* %65, i32 0, i32 4
  %67 = getelementptr inbounds %struct.mbchar* %66, i32 0, i32 2
  store i8 0, i8* %67, align 8
  br label %bb18

bb9:                                              ; preds = %with_shift
  %68 = load i64* %64, align 8
  %69 = icmp eq i64 %68, -2
  %70 = load %struct.mbi_iterator_t** %iter_addr, align 8
  br i1 %69, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %71 = getelementptr inbounds %struct.mbi_iterator_t* %70, i32 0, i32 0
  %72 = load i8** %71, align 8
  %73 = ptrtoint i8* %72 to i64
  %74 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %75 = getelementptr inbounds %struct.mbi_iterator_t* %74, i32 0, i32 4
  %76 = getelementptr inbounds %struct.mbchar* %75, i32 0, i32 0
  %77 = load i8** %76, align 8
  %78 = ptrtoint i8* %77 to i64
  %79 = sub nsw i64 %73, %78
  %80 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %81 = getelementptr inbounds %struct.mbi_iterator_t* %80, i32 0, i32 4
  %82 = getelementptr inbounds %struct.mbchar* %81, i32 0, i32 1
  store i64 %79, i64* %82, align 8
  %83 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %84 = getelementptr inbounds %struct.mbi_iterator_t* %83, i32 0, i32 4
  %85 = getelementptr inbounds %struct.mbchar* %84, i32 0, i32 2
  store i8 0, i8* %85, align 8
  br label %bb18

bb11:                                             ; preds = %bb9
  %86 = getelementptr inbounds %struct.mbi_iterator_t* %70, i32 0, i32 4
  %87 = getelementptr inbounds %struct.mbchar* %86, i32 0, i32 1
  %88 = load i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %bb12, label %bb16

bb12:                                             ; preds = %bb11
  %90 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %91 = getelementptr inbounds %struct.mbi_iterator_t* %90, i32 0, i32 4
  %92 = getelementptr inbounds %struct.mbchar* %91, i32 0, i32 1
  store i64 1, i64* %92, align 8
  %93 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %94 = getelementptr inbounds %struct.mbi_iterator_t* %93, i32 0, i32 4
  %95 = getelementptr inbounds %struct.mbchar* %94, i32 0, i32 0
  %96 = load i8** %95, align 8
  %97 = load i8* %96, align 1
  %98 = icmp ne i8 %97, 0
  br i1 %98, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8]* @.str2289, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str1288, i64 0, i64 0), i32 169, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.3289, i64 0, i64 0)) noretur
  unreachable

bb14:                                             ; preds = %bb12
  %99 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %100 = getelementptr inbounds %struct.mbi_iterator_t* %99, i32 0, i32 4
  %101 = getelementptr inbounds %struct.mbchar* %100, i32 0, i32 3
  %102 = load i32* %101, align 4
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8]* @.str3290, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str1288, i64 0, i64 0), i32 170, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.3289, i64 0, i64 0)) noretur
  unreachable

bb16:                                             ; preds = %bb14, %bb11
  %104 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %105 = getelementptr inbounds %struct.mbi_iterator_t* %104, i32 0, i32 4
  %106 = getelementptr inbounds %struct.mbchar* %105, i32 0, i32 2
  store i8 1, i8* %106, align 8
  %107 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %108 = getelementptr inbounds %struct.mbi_iterator_t* %107, i32 0, i32 2
  %109 = call i32 bitcast (i32 (%struct.__mbstate_t*)* @mbsinit to i32 (%struct.mbstate_t*)*)(%struct.mbstate_t* %108) nounwind readonly
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %111 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %112 = getelementptr inbounds %struct.mbi_iterator_t* %111, i32 0, i32 1
  store i8 0, i8* %112, align 8
  br label %bb18

bb18:                                             ; preds = %bb17, %bb16, %bb10, %bb8, %bb4
  %113 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %114 = getelementptr inbounds %struct.mbi_iterator_t* %113, i32 0, i32 3
  store i8 1, i8* %114, align 4
  br label %return

return:                                           ; preds = %entry, %bb18
  ret void
}

define void @mbiter_multi_reloc(%struct.mbi_iterator_t* %iter, i64 %ptrdiff) nounwind inlinehint {
entry:
  %iter_addr = alloca %struct.mbi_iterator_t*, align 8
  %ptrdiff_addr = alloca i64, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbi_iterator_t* %iter, %struct.mbi_iterator_t** %iter_addr
  store i64 %ptrdiff, i64* %ptrdiff_addr
  %0 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %1 = getelementptr inbounds %struct.mbi_iterator_t* %0, i32 0, i32 4
  %2 = getelementptr inbounds %struct.mbchar* %1, i32 0, i32 0
  %3 = load i8** %2, align 8
  %4 = load i64* %ptrdiff_addr, align 8
  %5 = getelementptr inbounds i8* %3, i64 %4
  %6 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %7 = getelementptr inbounds %struct.mbi_iterator_t* %6, i32 0, i32 4
  %8 = getelementptr inbounds %struct.mbchar* %7, i32 0, i32 0
  store i8* %5, i8** %8, align 8
  %9 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %10 = getelementptr inbounds %struct.mbi_iterator_t* %9, i32 0, i32 0
  %11 = load i8** %10, align 8
  %12 = load i64* %ptrdiff_addr, align 8
  %13 = getelementptr inbounds i8* %11, i64 %12
  %14 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %15 = getelementptr inbounds %struct.mbi_iterator_t* %14, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  ret void
}

define void @mbiter_multi_copy(%struct.mbi_iterator_t* %new_iter, %struct.mbi_iterator_t* %old_iter) nounwind inlinehint {
entry:
  %new_iter_addr = alloca %struct.mbi_iterator_t*, align 8
  %old_iter_addr = alloca %struct.mbi_iterator_t*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbi_iterator_t* %new_iter, %struct.mbi_iterator_t** %new_iter_addr
  store %struct.mbi_iterator_t* %old_iter, %struct.mbi_iterator_t** %old_iter_addr
  %0 = load %struct.mbi_iterator_t** %old_iter_addr, align 8
  %1 = getelementptr inbounds %struct.mbi_iterator_t* %0, i32 0, i32 0
  %2 = load i8** %1, align 8
  %3 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %4 = getelementptr inbounds %struct.mbi_iterator_t* %3, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = load %struct.mbi_iterator_t** %old_iter_addr, align 8
  %6 = getelementptr inbounds %struct.mbi_iterator_t* %5, i32 0, i32 1
  %7 = load i8* %6, align 8
  %8 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %9 = getelementptr inbounds %struct.mbi_iterator_t* %8, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %11 = getelementptr inbounds %struct.mbi_iterator_t* %10, i32 0, i32 1
  %12 = load i8* %11, align 8
  %toBool = icmp ne i8 %12, 0
  br i1 %toBool, label %bb, label %bb1

bb:                                               ; preds = %entry
  %13 = load %struct.mbi_iterator_t** %old_iter_addr, align 8
  %14 = getelementptr inbounds %struct.mbi_iterator_t* %13, i32 0, i32 2
  %15 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %16 = getelementptr inbounds %struct.mbi_iterator_t* %15, i32 0, i32 2
  %17 = bitcast %struct.mbstate_t* %16 to i8*
  %18 = bitcast %struct.mbstate_t* %14 to i8*
  %19 = call i8* @memcpy(i8* %17, i8* %18, i64 8)
  br label %bb2

bb1:                                              ; preds = %entry
  %20 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %21 = getelementptr inbounds %struct.mbi_iterator_t* %20, i32 0, i32 2
  %22 = bitcast %struct.mbstate_t* %21 to i8*
  %23 = call i8* @memset(i8* %22, i32 0, i64 8)
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %24 = load %struct.mbi_iterator_t** %old_iter_addr, align 8
  %25 = getelementptr inbounds %struct.mbi_iterator_t* %24, i32 0, i32 3
  %26 = load i8* %25, align 4
  %27 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %28 = getelementptr inbounds %struct.mbi_iterator_t* %27, i32 0, i32 3
  store i8 %26, i8* %28, align 4
  %29 = load %struct.mbi_iterator_t** %old_iter_addr, align 8
  %30 = getelementptr inbounds %struct.mbi_iterator_t* %29, i32 0, i32 4
  %31 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %32 = getelementptr inbounds %struct.mbi_iterator_t* %31, i32 0, i32 4
  call void @mb_copy(%struct.mbchar* %32, %struct.mbchar* %30) nounwind
  ret void
}

define internal zeroext i8 @knuth_morris_pratt(i8* %haystack, i8* %needle, i64 %needle_len, i8** %resultp) nounwind {
entry:
  %haystack_addr = alloca i8*, align 8
  %needle_addr = alloca i8*, align 8
  %needle_len_addr = alloca i64, align 8
  %resultp_addr = alloca i8**, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.5 = alloca i64*
  %iftmp.4 = alloca i64*
  %m = alloca i64
  %table = alloca i64*
  %i = alloca i64
  %j = alloca i64
  %b = alloca i8
  %j17 = alloca i64
  %rhaystack = alloca i8*
  %phaystack = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %haystack, i8** %haystack_addr
  store i8* %needle, i8** %needle_addr
  store i64 %needle_len, i64* %needle_len_addr
  store i8** %resultp, i8*** %resultp_addr
  %1 = load i64* %needle_len_addr, align 8
  store i64 %1, i64* %m, align 8
  %2 = load i64* %m, align 8
  %3 = icmp ule i64 %2, 2305843009213693951
  br i1 %3, label %bb, label %bb4

bb:                                               ; preds = %entry
  %4 = load i64* %m, align 8
  %5 = mul i64 %4, 8
  %6 = icmp ule i64 %5, 4015
  %7 = load i64* %m, align 8
  %8 = mul i64 %7, 8
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %9 = add i64 %8, 16
  %10 = alloca i8, i64 %9, align 1
  %11 = getelementptr inbounds i8* %10, i64 16
  %12 = bitcast i8* %11 to i64*
  store i64* %12, i64** %iftmp.5, align 8
  br label %bb3

bb2:                                              ; preds = %bb
  %13 = call i8* @mmalloca(i64 %8) nounwind
  %14 = bitcast i8* %13 to i64*
  store i64* %14, i64** %iftmp.5, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %15 = load i64** %iftmp.5, align 8
  store i64* %15, i64** %iftmp.4, align 8
  br label %bb5

bb4:                                              ; preds = %entry
  store i64* null, i64** %iftmp.4, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %16 = load i64** %iftmp.4, align 8
  store i64* %16, i64** %table, align 8
  %17 = load i64** %table, align 8
  %18 = icmp eq i64* %17, null
  br i1 %18, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  store i32 0, i32* %0, align 4
  br label %bb27

bb7:                                              ; preds = %bb5
  %19 = load i64** %table, align 8
  %20 = getelementptr inbounds i64* %19, i64 1
  store i64 1, i64* %20, align 1
  store i64 0, i64* %j, align 8
  store i64 2, i64* %i, align 8
  br label %bb15

bb8:                                              ; preds = %bb15
  %21 = load i64* %i, align 8
  %22 = sub i64 %21, 1
  %23 = load i8** %needle_addr, align 8
  %24 = getelementptr inbounds i8* %23, i64 %22
  %25 = load i8* %24, align 1
  store i8 %25, i8* %b, align 1
  br label %bb9

bb9:                                              ; preds = %bb13, %bb8
  %26 = load i8** %needle_addr, align 8
  %27 = load i64* %j, align 8
  %28 = getelementptr inbounds i8* %26, i64 %27
  %29 = load i8* %28, align 1
  %30 = load i8* %b, align 1
  %31 = icmp eq i8 %29, %30
  %32 = load i64* %j, align 8
  br i1 %31, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %33 = add i64 %32, 1
  store i64 %33, i64* %j, align 8
  %34 = load i64* %i, align 8
  %35 = load i64* %j, align 8
  %36 = sub i64 %34, %35
  %37 = load i64** %table, align 8
  %38 = load i64* %i, align 8
  %39 = getelementptr inbounds i64* %37, i64 %38
  store i64 %36, i64* %39, align 1
  br label %bb14

bb11:                                             ; preds = %bb9
  %40 = icmp eq i64 %32, 0
  %41 = load i64** %table, align 8
  br i1 %40, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  %42 = load i64* %i, align 8
  %43 = getelementptr inbounds i64* %41, i64 %42
  %44 = load i64* %i, align 8
  store i64 %44, i64* %43, align 1
  br label %bb14

bb13:                                             ; preds = %bb11
  %45 = load i64* %j, align 8
  %46 = getelementptr inbounds i64* %41, i64 %45
  %47 = load i64* %46, align 1
  %48 = load i64* %j, align 8
  %49 = sub i64 %48, %47
  store i64 %49, i64* %j, align 8
  br label %bb9

bb14:                                             ; preds = %bb12, %bb10
  %50 = load i64* %i, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %i, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb7
  %52 = load i64* %i, align 8
  %53 = load i64* %m, align 8
  %54 = icmp ult i64 %52, %53
  br i1 %54, label %bb8, label %bb16

bb16:                                             ; preds = %bb15
  %55 = load i8*** %resultp_addr, align 8
  store i8* null, i8** %55, align 8
  store i64 0, i64* %j17, align 8
  %56 = load i8** %haystack_addr, align 8
  store i8* %56, i8** %rhaystack, align 8
  %57 = load i8** %haystack_addr, align 8
  store i8* %57, i8** %phaystack, align 8
  br label %bb25

bb18:                                             ; preds = %bb25
  %58 = load i8** %needle_addr, align 8
  %59 = load i64* %j17, align 8
  %60 = getelementptr inbounds i8* %58, i64 %59
  %61 = load i8* %60, align 1
  %62 = load i8** %phaystack, align 8
  %63 = load i8* %62, align 1
  %64 = icmp eq i8 %61, %63
  %65 = load i64* %j17, align 8
  br i1 %64, label %bb19, label %bb22

bb19:                                             ; preds = %bb18
  %66 = add i64 %65, 1
  store i64 %66, i64* %j17, align 8
  %67 = load i8** %phaystack, align 8
  %68 = getelementptr inbounds i8* %67, i64 1
  store i8* %68, i8** %phaystack, align 8
  %69 = load i64* %j17, align 8
  %70 = load i64* %m, align 8
  %71 = icmp eq i64 %69, %70
  br i1 %71, label %bb20, label %bb25

bb20:                                             ; preds = %bb19
  %72 = load i8*** %resultp_addr, align 8
  %73 = load i8** %rhaystack, align 8
  store i8* %73, i8** %72, align 8
  br label %bb26

bb22:                                             ; preds = %bb18
  %74 = icmp ne i64 %65, 0
  br i1 %74, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  %75 = load i64** %table, align 8
  %76 = load i64* %j17, align 8
  %77 = getelementptr inbounds i64* %75, i64 %76
  %78 = load i64* %77, align 1
  %79 = load i8** %rhaystack, align 8
  %80 = getelementptr inbounds i8* %79, i64 %78
  store i8* %80, i8** %rhaystack, align 8
  %81 = load i64** %table, align 8
  %82 = load i64* %j17, align 8
  %83 = getelementptr inbounds i64* %81, i64 %82
  %84 = load i64* %83, align 1
  %85 = load i64* %j17, align 8
  %86 = sub i64 %85, %84
  store i64 %86, i64* %j17, align 8
  br label %bb25

bb24:                                             ; preds = %bb22
  %87 = load i8** %rhaystack, align 8
  %88 = getelementptr inbounds i8* %87, i64 1
  store i8* %88, i8** %rhaystack, align 8
  %89 = load i8** %phaystack, align 8
  %90 = getelementptr inbounds i8* %89, i64 1
  store i8* %90, i8** %phaystack, align 8
  br label %bb25

bb25:                                             ; preds = %bb19, %bb24, %bb23, %bb16
  %91 = load i8** %phaystack, align 8
  %92 = load i8* %91, align 1
  %93 = icmp ne i8 %92, 0
  br i1 %93, label %bb18, label %bb26

bb26:                                             ; preds = %bb25, %bb20
  %94 = load i64** %table, align 8
  %95 = bitcast i64* %94 to i8*
  call void @freea(i8* %95) nounwind
  store i32 1, i32* %0, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %bb6
  %96 = load i32* %0, align 4
  store i32 %96, i32* %retval, align 4
  %retval28 = load i32* %retval
  %retval2829 = trunc i32 %retval28 to i8
  ret i8 %retval2829
}

define internal zeroext i8 @knuth_morris_pratt_multibyte(i8* %haystack, i8* %needle, i8** %resultp) nounwind {
entry:
  %haystack_addr = alloca i8*, align 8
  %needle_addr = alloca i8*, align 8
  %resultp_addr = alloca i8**, align 8
  %retval = alloca i32
  %iftmp.15 = alloca i32
  %iftmp.14 = alloca i32
  %iftmp.13 = alloca i32
  %iftmp.12 = alloca i32
  %iftmp.11 = alloca i8
  %iftmp.10 = alloca i32
  %iftmp.9 = alloca i8
  %iftmp.8 = alloca i32
  %0 = alloca i32
  %iftmp.7 = alloca i8*
  %iftmp.6 = alloca i8*
  %m = alloca i64
  %needle_mbchars = alloca %struct.mbchar*
  %table = alloca i64*
  %memory = alloca i8*
  %table_memory = alloca i8*
  %iter = alloca %struct.mbui_iterator_t
  %j = alloca i64
  %i = alloca i64
  %j18 = alloca i64
  %b = alloca %struct.mbchar*
  %j45 = alloca i64
  %rhaystack = alloca %struct.mbui_iterator_t
  %phaystack = alloca %struct.mbui_iterator_t
  %count = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %haystack, i8** %haystack_addr
  store i8* %needle, i8** %needle_addr
  store i8** %resultp, i8*** %resultp_addr
  %1 = load i8** %needle_addr, align 8
  %2 = call i64 @mbslen(i8* %1) nounwind readonly
  store i64 %2, i64* %m, align 8
  %3 = load i64* %m, align 8
  %4 = icmp ule i64 %3, 329406144173384850
  br i1 %4, label %bb, label %bb4

bb:                                               ; preds = %entry
  %5 = load i64* %m, align 8
  %6 = mul i64 %5, 56
  %7 = icmp ule i64 %6, 4015
  %8 = load i64* %m, align 8
  %9 = mul i64 %8, 56
  br i1 %7, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %10 = add i64 %9, 16
  %11 = alloca i8, i64 %10, align 1
  %12 = getelementptr inbounds i8* %11, i64 16
  store i8* %12, i8** %iftmp.7, align 8
  br label %bb3

bb2:                                              ; preds = %bb
  %13 = call i8* @mmalloca(i64 %9) nounwind
  store i8* %13, i8** %iftmp.7, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %14 = load i8** %iftmp.7, align 8
  store i8* %14, i8** %iftmp.6, align 8
  br label %bb5

bb4:                                              ; preds = %entry
  store i8* null, i8** %iftmp.6, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %15 = load i8** %iftmp.6, align 8
  store i8* %15, i8** %memory, align 8
  %16 = load i8** %memory, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  store i32 0, i32* %0, align 4
  br label %bb103

bb7:                                              ; preds = %bb5
  %18 = load i8** %memory, align 8
  %19 = bitcast i8* %18 to %struct.mbchar*
  store %struct.mbchar* %19, %struct.mbchar** %needle_mbchars, align 8
  %20 = load %struct.mbchar** %needle_mbchars, align 8
  %21 = load i64* %m, align 8
  %22 = getelementptr inbounds %struct.mbchar* %20, i64 %21
  %23 = bitcast %struct.mbchar* %22 to i8*
  store i8* %23, i8** %table_memory, align 8
  %24 = load i8** %table_memory, align 8
  %25 = bitcast i8* %24 to i64*
  store i64* %25, i64** %table, align 8
  store i64 0, i64* %j, align 8
  %26 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %27 = getelementptr inbounds %struct.mbchar* %26, i32 0, i32 0
  %28 = load i8** %needle_addr, align 8
  store i8* %28, i8** %27, align 8
  %29 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 0
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 1
  %31 = bitcast %struct.mbstate_t* %30 to i8*
  %32 = call i8* @memset(i8* %31, i32 0, i64 8)
  %33 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 2
  store i8 0, i8* %33, align 4
  br label %bb9

bb8:                                              ; preds = %bb16
  %34 = load %struct.mbchar** %needle_mbchars, align 8
  %35 = load i64* %j, align 8
  %36 = getelementptr inbounds %struct.mbchar* %34, i64 %35
  %37 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  call void @mb_copy(%struct.mbchar* %36, %struct.mbchar* %37) nounwind
  %38 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %39 = getelementptr inbounds %struct.mbchar* %38, i32 0, i32 0
  %40 = load i8** %39, align 8
  %41 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %42 = getelementptr inbounds %struct.mbchar* %41, i32 0, i32 1
  %43 = load i64* %42, align 8
  %44 = getelementptr inbounds i8* %40, i64 %43
  %45 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %46 = getelementptr inbounds %struct.mbchar* %45, i32 0, i32 0
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 2
  store i8 0, i8* %47, align 4
  %48 = load i64* %j, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %j, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter) nounwind
  %50 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %51 = getelementptr inbounds %struct.mbchar* %50, i32 0, i32 2
  %52 = load i8* %51, align 8
  %toBool = icmp ne i8 %52, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot10 = zext i1 %toBoolnot to i8
  %toBool12 = icmp ne i8 %toBoolnot10, 0
  br i1 %toBool12, label %bb14, label %bb13

bb13:                                             ; preds = %bb9
  %53 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %54 = getelementptr inbounds %struct.mbchar* %53, i32 0, i32 3
  %55 = load i32* %54, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %bb14, label %bb15

bb14:                                             ; preds = %bb13, %bb9
  store i32 1, i32* %iftmp.8, align 4
  br label %bb16

bb15:                                             ; preds = %bb13
  store i32 0, i32* %iftmp.8, align 4
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %57 = load i32* %iftmp.8, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %bb8, label %bb17

bb17:                                             ; preds = %bb16
  %59 = load i64** %table, align 8
  %60 = getelementptr inbounds i64* %59, i64 1
  store i64 1, i64* %60, align 1
  store i64 0, i64* %j18, align 8
  store i64 2, i64* %i, align 8
  br label %bb43

bb19:                                             ; preds = %bb43
  %61 = load i64* %i, align 8
  %62 = sub i64 %61, 1
  %63 = load %struct.mbchar** %needle_mbchars, align 8
  %64 = getelementptr inbounds %struct.mbchar* %63, i64 %62
  store %struct.mbchar* %64, %struct.mbchar** %b, align 8
  br label %bb20

bb20:                                             ; preds = %bb41, %bb19
  %65 = load %struct.mbchar** %b, align 8
  %66 = getelementptr inbounds %struct.mbchar* %65, i32 0, i32 2
  %67 = load i8* %66, align 8
  %toBool21 = icmp ne i8 %67, 0
  %toBool21not = xor i1 %toBool21, true
  %toBool21not22 = zext i1 %toBool21not to i8
  %toBool24 = icmp ne i8 %toBool21not22, 0
  br i1 %toBool24, label %bb31, label %bb25

bb25:                                             ; preds = %bb20
  %68 = load %struct.mbchar** %needle_mbchars, align 8
  %69 = load i64* %j18, align 8
  %70 = getelementptr inbounds %struct.mbchar* %68, i64 %69
  %71 = getelementptr inbounds %struct.mbchar* %70, i32 0, i32 2
  %72 = load i8* %71, align 8
  %toBool26 = icmp ne i8 %72, 0
  %toBool26not = xor i1 %toBool26, true
  %toBool26not27 = zext i1 %toBool26not to i8
  %toBool29 = icmp ne i8 %toBool26not27, 0
  br i1 %toBool29, label %bb31, label %bb30

bb30:                                             ; preds = %bb25
  %73 = load %struct.mbchar** %b, align 8
  %74 = getelementptr inbounds %struct.mbchar* %73, i32 0, i32 3
  %75 = load i32* %74, align 4
  %76 = load %struct.mbchar** %needle_mbchars, align 8
  %77 = load i64* %j18, align 8
  %78 = getelementptr inbounds %struct.mbchar* %76, i64 %77
  %79 = getelementptr inbounds %struct.mbchar* %78, i32 0, i32 3
  %80 = load i32* %79, align 4
  %81 = icmp eq i32 %75, %80
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %iftmp.9, align 1
  br label %bb36

bb31:                                             ; preds = %bb25, %bb20
  %83 = load %struct.mbchar** %b, align 8
  %84 = getelementptr inbounds %struct.mbchar* %83, i32 0, i32 1
  %85 = load i64* %84, align 8
  %86 = load %struct.mbchar** %needle_mbchars, align 8
  %87 = load i64* %j18, align 8
  %88 = getelementptr inbounds %struct.mbchar* %86, i64 %87
  %89 = getelementptr inbounds %struct.mbchar* %88, i32 0, i32 1
  %90 = load i64* %89, align 8
  %91 = icmp ne i64 %85, %90
  br i1 %91, label %bb34, label %bb32

bb32:                                             ; preds = %bb31
  %92 = load %struct.mbchar** %b, align 8
  %93 = getelementptr inbounds %struct.mbchar* %92, i32 0, i32 1
  %94 = load i64* %93, align 8
  %95 = load %struct.mbchar** %needle_mbchars, align 8
  %96 = load i64* %j18, align 8
  %97 = getelementptr inbounds %struct.mbchar* %95, i64 %96
  %98 = getelementptr inbounds %struct.mbchar* %97, i32 0, i32 0
  %99 = load i8** %98, align 8
  %100 = load %struct.mbchar** %b, align 8
  %101 = getelementptr inbounds %struct.mbchar* %100, i32 0, i32 0
  %102 = load i8** %101, align 8
  %103 = call i32 @memcmp(i8* %102, i8* %99, i64 %94) nounwind readonly
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  store i32 1, i32* %iftmp.10, align 4
  br label %bb35

bb34:                                             ; preds = %bb32, %bb31
  store i32 0, i32* %iftmp.10, align 4
  br label %bb35

bb35:                                             ; preds = %bb34, %bb33
  %105 = load i32* %iftmp.10, align 4
  %106 = trunc i32 %105 to i8
  store i8 %106, i8* %iftmp.9, align 1
  br label %bb36

bb36:                                             ; preds = %bb35, %bb30
  %107 = load i8* %iftmp.9, align 1
  %toBool37 = icmp ne i8 %107, 0
  %108 = load i64* %j18, align 8
  br i1 %toBool37, label %bb38, label %bb39

bb38:                                             ; preds = %bb36
  %109 = add i64 %108, 1
  store i64 %109, i64* %j18, align 8
  %110 = load i64* %i, align 8
  %111 = load i64* %j18, align 8
  %112 = sub i64 %110, %111
  %113 = load i64** %table, align 8
  %114 = load i64* %i, align 8
  %115 = getelementptr inbounds i64* %113, i64 %114
  store i64 %112, i64* %115, align 1
  br label %bb42

bb39:                                             ; preds = %bb36
  %116 = icmp eq i64 %108, 0
  %117 = load i64** %table, align 8
  br i1 %116, label %bb40, label %bb41

bb40:                                             ; preds = %bb39
  %118 = load i64* %i, align 8
  %119 = getelementptr inbounds i64* %117, i64 %118
  %120 = load i64* %i, align 8
  store i64 %120, i64* %119, align 1
  br label %bb42

bb41:                                             ; preds = %bb39
  %121 = load i64* %j18, align 8
  %122 = getelementptr inbounds i64* %117, i64 %121
  %123 = load i64* %122, align 1
  %124 = load i64* %j18, align 8
  %125 = sub i64 %124, %123
  store i64 %125, i64* %j18, align 8
  br label %bb20

bb42:                                             ; preds = %bb40, %bb38
  %126 = load i64* %i, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %i, align 8
  br label %bb43

bb43:                                             ; preds = %bb42, %bb17
  %128 = load i64* %i, align 8
  %129 = load i64* %m, align 8
  %130 = icmp ult i64 %128, %129
  br i1 %130, label %bb19, label %bb44

bb44:                                             ; preds = %bb43
  %131 = load i8*** %resultp_addr, align 8
  store i8* null, i8** %131, align 8
  store i64 0, i64* %j45, align 8
  %132 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %133 = getelementptr inbounds %struct.mbchar* %132, i32 0, i32 0
  %134 = load i8** %haystack_addr, align 8
  store i8* %134, i8** %133, align 8
  %135 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 0
  store i8 0, i8* %135, align 8
  %136 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 1
  %137 = bitcast %struct.mbstate_t* %136 to i8*
  %138 = call i8* @memset(i8* %137, i32 0, i64 8)
  %139 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 2
  store i8 0, i8* %139, align 4
  %140 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %141 = getelementptr inbounds %struct.mbchar* %140, i32 0, i32 0
  %142 = load i8** %haystack_addr, align 8
  store i8* %142, i8** %141, align 8
  %143 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 0
  store i8 0, i8* %143, align 8
  %144 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 1
  %145 = bitcast %struct.mbstate_t* %144 to i8*
  %146 = call i8* @memset(i8* %145, i32 0, i64 8)
  %147 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 2
  store i8 0, i8* %147, align 4
  br label %bb93

bb46:                                             ; preds = %bb101
  %148 = load %struct.mbchar** %needle_mbchars, align 8
  %149 = load i64* %j45, align 8
  %150 = getelementptr inbounds %struct.mbchar* %148, i64 %149
  %151 = getelementptr inbounds %struct.mbchar* %150, i32 0, i32 2
  %152 = load i8* %151, align 8
  %toBool47 = icmp ne i8 %152, 0
  %toBool47not = xor i1 %toBool47, true
  %toBool47not48 = zext i1 %toBool47not to i8
  %toBool50 = icmp ne i8 %toBool47not48, 0
  br i1 %toBool50, label %bb57, label %bb51

bb51:                                             ; preds = %bb46
  %153 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %154 = getelementptr inbounds %struct.mbchar* %153, i32 0, i32 2
  %155 = load i8* %154, align 8
  %toBool52 = icmp ne i8 %155, 0
  %toBool52not = xor i1 %toBool52, true
  %toBool52not53 = zext i1 %toBool52not to i8
  %toBool55 = icmp ne i8 %toBool52not53, 0
  br i1 %toBool55, label %bb57, label %bb56

bb56:                                             ; preds = %bb51
  %156 = load %struct.mbchar** %needle_mbchars, align 8
  %157 = load i64* %j45, align 8
  %158 = getelementptr inbounds %struct.mbchar* %156, i64 %157
  %159 = getelementptr inbounds %struct.mbchar* %158, i32 0, i32 3
  %160 = load i32* %159, align 4
  %161 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %162 = getelementptr inbounds %struct.mbchar* %161, i32 0, i32 3
  %163 = load i32* %162, align 4
  %164 = icmp eq i32 %160, %163
  %165 = zext i1 %164 to i8
  store i8 %165, i8* %iftmp.11, align 1
  br label %bb62

bb57:                                             ; preds = %bb51, %bb46
  %166 = load %struct.mbchar** %needle_mbchars, align 8
  %167 = load i64* %j45, align 8
  %168 = getelementptr inbounds %struct.mbchar* %166, i64 %167
  %169 = getelementptr inbounds %struct.mbchar* %168, i32 0, i32 1
  %170 = load i64* %169, align 8
  %171 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %172 = getelementptr inbounds %struct.mbchar* %171, i32 0, i32 1
  %173 = load i64* %172, align 8
  %174 = icmp ne i64 %170, %173
  br i1 %174, label %bb60, label %bb58

bb58:                                             ; preds = %bb57
  %175 = load %struct.mbchar** %needle_mbchars, align 8
  %176 = load i64* %j45, align 8
  %177 = getelementptr inbounds %struct.mbchar* %175, i64 %176
  %178 = getelementptr inbounds %struct.mbchar* %177, i32 0, i32 1
  %179 = load i64* %178, align 8
  %180 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %181 = getelementptr inbounds %struct.mbchar* %180, i32 0, i32 0
  %182 = load i8** %181, align 8
  %183 = load %struct.mbchar** %needle_mbchars, align 8
  %184 = load i64* %j45, align 8
  %185 = getelementptr inbounds %struct.mbchar* %183, i64 %184
  %186 = getelementptr inbounds %struct.mbchar* %185, i32 0, i32 0
  %187 = load i8** %186, align 8
  %188 = call i32 @memcmp(i8* %187, i8* %182, i64 %179) nounwind readonly
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %bb60, label %bb59

bb59:                                             ; preds = %bb58
  store i32 1, i32* %iftmp.12, align 4
  br label %bb61

bb60:                                             ; preds = %bb58, %bb57
  store i32 0, i32* %iftmp.12, align 4
  br label %bb61

bb61:                                             ; preds = %bb60, %bb59
  %190 = load i32* %iftmp.12, align 4
  %191 = trunc i32 %190 to i8
  store i8 %191, i8* %iftmp.11, align 1
  br label %bb62

bb62:                                             ; preds = %bb61, %bb56
  %192 = load i8* %iftmp.11, align 1
  %toBool63 = icmp ne i8 %192, 0
  %193 = load i64* %j45, align 8
  br i1 %toBool63, label %bb64, label %bb67

bb64:                                             ; preds = %bb62
  %194 = add i64 %193, 1
  store i64 %194, i64* %j45, align 8
  %195 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %196 = getelementptr inbounds %struct.mbchar* %195, i32 0, i32 0
  %197 = load i8** %196, align 8
  %198 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %199 = getelementptr inbounds %struct.mbchar* %198, i32 0, i32 1
  %200 = load i64* %199, align 8
  %201 = getelementptr inbounds i8* %197, i64 %200
  %202 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %203 = getelementptr inbounds %struct.mbchar* %202, i32 0, i32 0
  store i8* %201, i8** %203, align 8
  %204 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 2
  store i8 0, i8* %204, align 4
  %205 = load i64* %j45, align 8
  %206 = load i64* %m, align 8
  %207 = icmp eq i64 %205, %206
  br i1 %207, label %bb65, label %bb93

bb65:                                             ; preds = %bb64
  %208 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %209 = getelementptr inbounds %struct.mbchar* %208, i32 0, i32 0
  %210 = load i8** %209, align 8
  %211 = load i8*** %resultp_addr, align 8
  store i8* %210, i8** %211, align 8
  br label %bb102

bb67:                                             ; preds = %bb62
  %212 = icmp ne i64 %193, 0
  br i1 %212, label %bb68, label %bb82

bb68:                                             ; preds = %bb67
  %213 = load i64** %table, align 8
  %214 = load i64* %j45, align 8
  %215 = getelementptr inbounds i64* %213, i64 %214
  %216 = load i64* %215, align 1
  store i64 %216, i64* %count, align 8
  %217 = load i64* %j45, align 8
  %218 = load i64* %count, align 8
  %219 = sub i64 %217, %218
  store i64 %219, i64* %j45, align 8
  br label %bb80

bb69:                                             ; preds = %bb80
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %rhaystack) nounwind
  %220 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %221 = getelementptr inbounds %struct.mbchar* %220, i32 0, i32 2
  %222 = load i8* %221, align 8
  %toBool70 = icmp ne i8 %222, 0
  %toBool70not = xor i1 %toBool70, true
  %toBool70not71 = zext i1 %toBool70not to i8
  %toBool73 = icmp ne i8 %toBool70not71, 0
  br i1 %toBool73, label %bb75, label %bb74

bb74:                                             ; preds = %bb69
  %223 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %224 = getelementptr inbounds %struct.mbchar* %223, i32 0, i32 3
  %225 = load i32* %224, align 4
  %226 = icmp ne i32 %225, 0
  br i1 %226, label %bb75, label %bb76

bb75:                                             ; preds = %bb74, %bb69
  store i32 1, i32* %iftmp.13, align 4
  br label %bb77

bb76:                                             ; preds = %bb74
  store i32 0, i32* %iftmp.13, align 4
  br label %bb77

bb77:                                             ; preds = %bb76, %bb75
  %227 = load i32* %iftmp.13, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %bb78, label %bb79

bb78:                                             ; preds = %bb77
  call void @abort() noreturn nounwind
  unreachable

bb79:                                             ; preds = %bb77
  %229 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %230 = getelementptr inbounds %struct.mbchar* %229, i32 0, i32 0
  %231 = load i8** %230, align 8
  %232 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %233 = getelementptr inbounds %struct.mbchar* %232, i32 0, i32 1
  %234 = load i64* %233, align 8
  %235 = getelementptr inbounds i8* %231, i64 %234
  %236 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %237 = getelementptr inbounds %struct.mbchar* %236, i32 0, i32 0
  store i8* %235, i8** %237, align 8
  %238 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 2
  store i8 0, i8* %238, align 4
  %239 = load i64* %count, align 8
  %240 = sub i64 %239, 1
  store i64 %240, i64* %count, align 8
  br label %bb80

bb80:                                             ; preds = %bb79, %bb68
  %241 = load i64* %count, align 8
  %242 = icmp ne i64 %241, 0
  br i1 %242, label %bb69, label %bb93

bb82:                                             ; preds = %bb67
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %rhaystack) nounwind
  %243 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %244 = getelementptr inbounds %struct.mbchar* %243, i32 0, i32 2
  %245 = load i8* %244, align 8
  %toBool83 = icmp ne i8 %245, 0
  %toBool83not = xor i1 %toBool83, true
  %toBool83not84 = zext i1 %toBool83not to i8
  %toBool86 = icmp ne i8 %toBool83not84, 0
  br i1 %toBool86, label %bb88, label %bb87

bb87:                                             ; preds = %bb82
  %246 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %247 = getelementptr inbounds %struct.mbchar* %246, i32 0, i32 3
  %248 = load i32* %247, align 4
  %249 = icmp ne i32 %248, 0
  br i1 %249, label %bb88, label %bb89

bb88:                                             ; preds = %bb87, %bb82
  store i32 1, i32* %iftmp.14, align 4
  br label %bb90

bb89:                                             ; preds = %bb87
  store i32 0, i32* %iftmp.14, align 4
  br label %bb90

bb90:                                             ; preds = %bb89, %bb88
  %250 = load i32* %iftmp.14, align 4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %bb91, label %bb92

bb91:                                             ; preds = %bb90
  call void @abort() noreturn nounwind
  unreachable

bb92:                                             ; preds = %bb90
  %252 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %253 = getelementptr inbounds %struct.mbchar* %252, i32 0, i32 0
  %254 = load i8** %253, align 8
  %255 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %256 = getelementptr inbounds %struct.mbchar* %255, i32 0, i32 1
  %257 = load i64* %256, align 8
  %258 = getelementptr inbounds i8* %254, i64 %257
  %259 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %260 = getelementptr inbounds %struct.mbchar* %259, i32 0, i32 0
  store i8* %258, i8** %260, align 8
  %261 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 2
  store i8 0, i8* %261, align 4
  %262 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %263 = getelementptr inbounds %struct.mbchar* %262, i32 0, i32 0
  %264 = load i8** %263, align 8
  %265 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %266 = getelementptr inbounds %struct.mbchar* %265, i32 0, i32 1
  %267 = load i64* %266, align 8
  %268 = getelementptr inbounds i8* %264, i64 %267
  %269 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %270 = getelementptr inbounds %struct.mbchar* %269, i32 0, i32 0
  store i8* %268, i8** %270, align 8
  %271 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 2
  store i8 0, i8* %271, align 4
  br label %bb93

bb93:                                             ; preds = %bb80, %bb64, %bb92, %bb44
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %phaystack) nounwind
  %272 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %273 = getelementptr inbounds %struct.mbchar* %272, i32 0, i32 2
  %274 = load i8* %273, align 8
  %toBool94 = icmp ne i8 %274, 0
  %toBool94not = xor i1 %toBool94, true
  %toBool94not95 = zext i1 %toBool94not to i8
  %toBool97 = icmp ne i8 %toBool94not95, 0
  br i1 %toBool97, label %bb99, label %bb98

bb98:                                             ; preds = %bb93
  %275 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %276 = getelementptr inbounds %struct.mbchar* %275, i32 0, i32 3
  %277 = load i32* %276, align 4
  %278 = icmp ne i32 %277, 0
  br i1 %278, label %bb99, label %bb100

bb99:                                             ; preds = %bb98, %bb93
  store i32 1, i32* %iftmp.15, align 4
  br label %bb101

bb100:                                            ; preds = %bb98
  store i32 0, i32* %iftmp.15, align 4
  br label %bb101

bb101:                                            ; preds = %bb100, %bb99
  %279 = load i32* %iftmp.15, align 4
  %280 = icmp ne i32 %279, 0
  br i1 %280, label %bb46, label %bb102

bb102:                                            ; preds = %bb101, %bb65
  %281 = load i8** %memory, align 8
  call void @freea(i8* %281) nounwind
  store i32 1, i32* %0, align 4
  br label %bb103

bb103:                                            ; preds = %bb102, %bb6
  %282 = load i32* %0, align 4
  store i32 %282, i32* %retval, align 4
  %retval104 = load i32* %retval
  %retval104105 = trunc i32 %retval104 to i8
  ret i8 %retval104105
}

define i8* @mbsstr(i8* %haystack, i8* %needle) nounwind readonly {
entry:
  %haystack_addr = alloca i8*, align 8
  %needle_addr = alloca i8*, align 8
  %retval = alloca i8*
  %iftmp.27 = alloca i32
  %iftmp.26 = alloca i8
  %iftmp.25 = alloca i32
  %iftmp.24 = alloca i32
  %iftmp.23 = alloca i32
  %iftmp.22 = alloca i32
  %iftmp.21 = alloca i8
  %iftmp.19 = alloca i32
  %iftmp.18 = alloca i32
  %0 = alloca i8*
  %iftmp.17 = alloca i32
  %iftmp.16 = alloca i32
  %iter_needle = alloca %struct.mbui_iterator_t
  %try_kmp = alloca i8
  %outer_loop_count = alloca i64
  %comparison_count = alloca i64
  %last_ccount = alloca i64
  %iter_needle_last_ccount = alloca %struct.mbui_iterator_t
  %iter_haystack = alloca %struct.mbui_iterator_t
  %count = alloca i64
  %result = alloca i8*
  %success = alloca i8
  %rhaystack = alloca %struct.mbui_iterator_t
  %rneedle = alloca %struct.mbui_iterator_t
  %try_kmp122 = alloca i8
  %outer_loop_count123 = alloca i64
  %comparison_count124 = alloca i64
  %last_ccount125 = alloca i64
  %needle_last_ccount = alloca i8*
  %b = alloca i8
  %result138 = alloca i8*
  %success139 = alloca i8
  %rhaystack145 = alloca i8*
  %rneedle146 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %haystack, i8** %haystack_addr
  store i8* %needle, i8** %needle_addr
  %1 = call i64 @_stdlib_mb_cur_max() nounwind
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %bb, label %bb120

bb:                                               ; preds = %entry
  %3 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %4 = getelementptr inbounds %struct.mbchar* %3, i32 0, i32 0
  %5 = load i8** %needle_addr, align 8
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 1
  %8 = bitcast %struct.mbstate_t* %7 to i8*
  %9 = call i8* @memset(i8* %8, i32 0, i64 8)
  %10 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 2
  store i8 0, i8* %10, align 4
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter_needle) nounwind inlinehint
  %11 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %12 = getelementptr inbounds %struct.mbchar* %11, i32 0, i32 2
  %13 = load i8* %12, align 8
  %toBool = icmp ne i8 %13, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb5, label %bb4

bb4:                                              ; preds = %bb
  %14 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %15 = getelementptr inbounds %struct.mbchar* %14, i32 0, i32 3
  %16 = load i32* %15, align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %bb5, label %bb6

bb5:                                              ; preds = %bb4, %bb
  store i32 1, i32* %iftmp.16, align 4
  br label %bb7

bb6:                                              ; preds = %bb4
  store i32 0, i32* %iftmp.16, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %18 = load i32* %iftmp.16, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %bb8, label %bb119

bb8:                                              ; preds = %bb7
  store i8 1, i8* %try_kmp, align 1
  store i64 0, i64* %outer_loop_count, align 8
  store i64 0, i64* %comparison_count, align 8
  store i64 0, i64* %last_ccount, align 8
  %20 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %21 = getelementptr inbounds %struct.mbchar* %20, i32 0, i32 0
  %22 = load i8** %needle_addr, align 8
  store i8* %22, i8** %21, align 8
  %23 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 0
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 1
  %25 = bitcast %struct.mbstate_t* %24 to i8*
  %26 = call i8* @memset(i8* %25, i32 0, i64 8)
  %27 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 2
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %29 = getelementptr inbounds %struct.mbchar* %28, i32 0, i32 0
  %30 = load i8** %haystack_addr, align 8
  store i8* %30, i8** %29, align 8
  %31 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 0
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 1
  %33 = bitcast %struct.mbstate_t* %32 to i8*
  %34 = call i8* @memset(i8* %33, i32 0, i64 8)
  %35 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 2
  store i8 0, i8* %35, align 4
  br label %bb9

bb9:                                              ; preds = %bb118, %bb8
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter_haystack) nounwind inlinehint
  %36 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %37 = getelementptr inbounds %struct.mbchar* %36, i32 0, i32 2
  %38 = load i8* %37, align 8
  %toBool10 = icmp ne i8 %38, 0
  %toBool10not = xor i1 %toBool10, true
  %toBool10not11 = zext i1 %toBool10not to i8
  %toBool13 = icmp ne i8 %toBool10not11, 0
  br i1 %toBool13, label %bb15, label %bb14

bb14:                                             ; preds = %bb9
  %39 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %40 = getelementptr inbounds %struct.mbchar* %39, i32 0, i32 3
  %41 = load i32* %40, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %bb15, label %bb16

bb15:                                             ; preds = %bb14, %bb9
  store i32 1, i32* %iftmp.17, align 4
  br label %bb17

bb16:                                             ; preds = %bb14
  store i32 0, i32* %iftmp.17, align 4
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %43 = load i32* %iftmp.17, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  store i8* null, i8** %0, align 8
  br label %bb155

bb19:                                             ; preds = %bb17
  %45 = load i8* %try_kmp, align 1
  %toBool20 = icmp ne i8 %45, 0
  br i1 %toBool20, label %bb21, label %bb48

bb21:                                             ; preds = %bb19
  %46 = load i64* %outer_loop_count, align 8
  %47 = icmp ugt i64 %46, 9
  br i1 %47, label %bb22, label %bb48

bb22:                                             ; preds = %bb21
  %48 = load i64* %outer_loop_count, align 8
  %49 = mul i64 %48, 5
  %50 = load i64* %comparison_count, align 8
  %51 = icmp ule i64 %49, %50
  br i1 %51, label %bb23, label %bb48

bb23:                                             ; preds = %bb22
  %52 = load i64* %comparison_count, align 8
  %53 = load i64* %last_ccount, align 8
  %54 = sub i64 %52, %53
  store i64 %54, i64* %count, align 8
  br label %bb25

bb24:                                             ; preds = %bb34
  %55 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %56 = getelementptr inbounds %struct.mbchar* %55, i32 0, i32 0
  %57 = load i8** %56, align 8
  %58 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %59 = getelementptr inbounds %struct.mbchar* %58, i32 0, i32 1
  %60 = load i64* %59, align 8
  %61 = getelementptr inbounds i8* %57, i64 %60
  %62 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %63 = getelementptr inbounds %struct.mbchar* %62, i32 0, i32 0
  store i8* %61, i8** %63, align 8
  %64 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 2
  store i8 0, i8* %64, align 4
  %65 = load i64* %count, align 8
  %66 = sub i64 %65, 1
  store i64 %66, i64* %count, align 8
  br label %bb25

bb25:                                             ; preds = %bb24, %bb23
  %67 = load i64* %count, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %bb35, label %bb26

bb26:                                             ; preds = %bb25
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter_needle_last_ccount) nounwind inlinehint
  %69 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %70 = getelementptr inbounds %struct.mbchar* %69, i32 0, i32 2
  %71 = load i8* %70, align 8
  %toBool27 = icmp ne i8 %71, 0
  %toBool27not = xor i1 %toBool27, true
  %toBool27not28 = zext i1 %toBool27not to i8
  %toBool30 = icmp ne i8 %toBool27not28, 0
  br i1 %toBool30, label %bb32, label %bb31

bb31:                                             ; preds = %bb26
  %72 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %73 = getelementptr inbounds %struct.mbchar* %72, i32 0, i32 3
  %74 = load i32* %73, align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %bb32, label %bb33

bb32:                                             ; preds = %bb31, %bb26
  store i32 1, i32* %iftmp.18, align 4
  br label %bb34

bb33:                                             ; preds = %bb31
  store i32 0, i32* %iftmp.18, align 4
  br label %bb34

bb34:                                             ; preds = %bb33, %bb32
  %76 = load i32* %iftmp.18, align 4
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %bb24, label %bb35

bb35:                                             ; preds = %bb34, %bb25
  %78 = load i64* %comparison_count, align 8
  store i64 %78, i64* %last_ccount, align 8
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter_needle_last_ccount) nounwind inlinehint
  %79 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %80 = getelementptr inbounds %struct.mbchar* %79, i32 0, i32 2
  %81 = load i8* %80, align 8
  %toBool36 = icmp ne i8 %81, 0
  %toBool36not = xor i1 %toBool36, true
  %toBool36not37 = zext i1 %toBool36not to i8
  %toBool39 = icmp ne i8 %toBool36not37, 0
  br i1 %toBool39, label %bb41, label %bb40

bb40:                                             ; preds = %bb35
  %82 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %83 = getelementptr inbounds %struct.mbchar* %82, i32 0, i32 3
  %84 = load i32* %83, align 4
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %bb41, label %bb42

bb41:                                             ; preds = %bb40, %bb35
  store i32 1, i32* %iftmp.19, align 4
  br label %bb43

bb42:                                             ; preds = %bb40
  store i32 0, i32* %iftmp.19, align 4
  br label %bb43

bb43:                                             ; preds = %bb42, %bb41
  %86 = load i32* %iftmp.19, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %bb44, label %bb48

bb44:                                             ; preds = %bb43
  %88 = load i8** %haystack_addr, align 8
  %89 = load i8** %needle_addr, align 8
  %90 = call zeroext i8 @knuth_morris_pratt_multibyte(i8* %88, i8* %89, i8** %result) nounwind
  store i8 %90, i8* %success, align 1
  %91 = load i8* %success, align 1
  %toBool45 = icmp ne i8 %91, 0
  br i1 %toBool45, label %bb46, label %bb47

bb46:                                             ; preds = %bb44
  %92 = load i8** %result, align 8
  store i8* %92, i8** %0, align 8
  br label %bb155

bb47:                                             ; preds = %bb44
  store i8 0, i8* %try_kmp, align 1
  br label %bb48

bb48:                                             ; preds = %bb47, %bb43, %bb22, %bb21, %bb19
  %93 = load i64* %outer_loop_count, align 8
  %94 = add i64 %93, 1
  store i64 %94, i64* %outer_loop_count, align 8
  %95 = load i64* %comparison_count, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %comparison_count, align 8
  %97 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %98 = getelementptr inbounds %struct.mbchar* %97, i32 0, i32 2
  %99 = load i8* %98, align 8
  %toBool49 = icmp ne i8 %99, 0
  %toBool49not = xor i1 %toBool49, true
  %toBool49not50 = zext i1 %toBool49not to i8
  %toBool52 = icmp ne i8 %toBool49not50, 0
  br i1 %toBool52, label %bb59, label %bb53

bb53:                                             ; preds = %bb48
  %100 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %101 = getelementptr inbounds %struct.mbchar* %100, i32 0, i32 2
  %102 = load i8* %101, align 8
  %toBool54 = icmp ne i8 %102, 0
  %toBool54not = xor i1 %toBool54, true
  %toBool54not55 = zext i1 %toBool54not to i8
  %toBool57 = icmp ne i8 %toBool54not55, 0
  br i1 %toBool57, label %bb59, label %bb58

bb58:                                             ; preds = %bb53
  %103 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %104 = getelementptr inbounds %struct.mbchar* %103, i32 0, i32 3
  %105 = load i32* %104, align 4
  %106 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %107 = getelementptr inbounds %struct.mbchar* %106, i32 0, i32 3
  %108 = load i32* %107, align 4
  %109 = icmp eq i32 %105, %108
  %110 = zext i1 %109 to i8
  store i8 %110, i8* %iftmp.21, align 1
  br label %bb64

bb59:                                             ; preds = %bb53, %bb48
  %111 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %112 = getelementptr inbounds %struct.mbchar* %111, i32 0, i32 1
  %113 = load i64* %112, align 8
  %114 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %115 = getelementptr inbounds %struct.mbchar* %114, i32 0, i32 1
  %116 = load i64* %115, align 8
  %117 = icmp ne i64 %113, %116
  br i1 %117, label %bb62, label %bb60

bb60:                                             ; preds = %bb59
  %118 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %119 = getelementptr inbounds %struct.mbchar* %118, i32 0, i32 1
  %120 = load i64* %119, align 8
  %121 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %122 = getelementptr inbounds %struct.mbchar* %121, i32 0, i32 0
  %123 = load i8** %122, align 8
  %124 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %125 = getelementptr inbounds %struct.mbchar* %124, i32 0, i32 0
  %126 = load i8** %125, align 8
  %127 = call i32 @memcmp(i8* %126, i8* %123, i64 %120) nounwind readonly
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %bb62, label %bb61

bb61:                                             ; preds = %bb60
  store i32 1, i32* %iftmp.22, align 4
  br label %bb63

bb62:                                             ; preds = %bb60, %bb59
  store i32 0, i32* %iftmp.22, align 4
  br label %bb63

bb63:                                             ; preds = %bb62, %bb61
  %129 = load i32* %iftmp.22, align 4
  %130 = trunc i32 %129 to i8
  store i8 %130, i8* %iftmp.21, align 1
  br label %bb64

bb64:                                             ; preds = %bb63, %bb58
  %131 = load i8* %iftmp.21, align 1
  %toBool65 = icmp ne i8 %131, 0
  br i1 %toBool65, label %bb66, label %bb118

bb66:                                             ; preds = %bb64
  %rhaystack67 = bitcast %struct.mbui_iterator_t* %rhaystack to i8*
  %iter_haystack68 = bitcast %struct.mbui_iterator_t* %iter_haystack to i8*
  %132 = call i8* @memcpy(i8* %rhaystack67, i8* %iter_haystack68, i64 64)
  %133 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %134 = getelementptr inbounds %struct.mbchar* %133, i32 0, i32 0
  %135 = load i8** %134, align 8
  %136 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %137 = getelementptr inbounds %struct.mbchar* %136, i32 0, i32 1
  %138 = load i64* %137, align 8
  %139 = getelementptr inbounds i8* %135, i64 %138
  %140 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %141 = getelementptr inbounds %struct.mbchar* %140, i32 0, i32 0
  store i8* %139, i8** %141, align 8
  %142 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 2
  store i8 0, i8* %142, align 4
  %143 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %144 = getelementptr inbounds %struct.mbchar* %143, i32 0, i32 0
  %145 = load i8** %needle_addr, align 8
  store i8* %145, i8** %144, align 8
  %146 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 0
  store i8 0, i8* %146, align 8
  %147 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 1
  %148 = bitcast %struct.mbstate_t* %147 to i8*
  %149 = call i8* @memset(i8* %148, i32 0, i64 8)
  %150 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 2
  store i8 0, i8* %150, align 4
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %rneedle) nounwind inlinehint
  %151 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %152 = getelementptr inbounds %struct.mbchar* %151, i32 0, i32 2
  %153 = load i8* %152, align 8
  %toBool69 = icmp ne i8 %153, 0
  %toBool69not = xor i1 %toBool69, true
  %toBool69not70 = zext i1 %toBool69not to i8
  %toBool72 = icmp ne i8 %toBool69not70, 0
  br i1 %toBool72, label %bb74, label %bb73

bb73:                                             ; preds = %bb66
  %154 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %155 = getelementptr inbounds %struct.mbchar* %154, i32 0, i32 3
  %156 = load i32* %155, align 4
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %bb74, label %bb75

bb74:                                             ; preds = %bb73, %bb66
  store i32 1, i32* %iftmp.23, align 4
  br label %bb76

bb75:                                             ; preds = %bb73
  store i32 0, i32* %iftmp.23, align 4
  br label %bb76

bb76:                                             ; preds = %bb75, %bb74
  %158 = load i32* %iftmp.23, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %bb77, label %bb78

bb77:                                             ; preds = %bb76
  call void @abort() noreturn nounwind
  unreachable

bb78:                                             ; preds = %bb76
  %160 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %161 = getelementptr inbounds %struct.mbchar* %160, i32 0, i32 0
  %162 = load i8** %161, align 8
  %163 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %164 = getelementptr inbounds %struct.mbchar* %163, i32 0, i32 1
  %165 = load i64* %164, align 8
  %166 = getelementptr inbounds i8* %162, i64 %165
  %167 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %168 = getelementptr inbounds %struct.mbchar* %167, i32 0, i32 0
  store i8* %166, i8** %168, align 8
  %169 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 2
  store i8 0, i8* %169, align 4
  br label %bb79

bb79:                                             ; preds = %bb117, %bb78
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %rneedle) nounwind inlinehint
  %170 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %171 = getelementptr inbounds %struct.mbchar* %170, i32 0, i32 2
  %172 = load i8* %171, align 8
  %toBool80 = icmp ne i8 %172, 0
  %toBool80not = xor i1 %toBool80, true
  %toBool80not81 = zext i1 %toBool80not to i8
  %toBool83 = icmp ne i8 %toBool80not81, 0
  br i1 %toBool83, label %bb85, label %bb84

bb84:                                             ; preds = %bb79
  %173 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %174 = getelementptr inbounds %struct.mbchar* %173, i32 0, i32 3
  %175 = load i32* %174, align 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %bb85, label %bb86

bb85:                                             ; preds = %bb84, %bb79
  store i32 1, i32* %iftmp.24, align 4
  br label %bb87

bb86:                                             ; preds = %bb84
  store i32 0, i32* %iftmp.24, align 4
  br label %bb87

bb87:                                             ; preds = %bb86, %bb85
  %177 = load i32* %iftmp.24, align 4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %bb88, label %bb89

bb88:                                             ; preds = %bb87
  %179 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %180 = getelementptr inbounds %struct.mbchar* %179, i32 0, i32 0
  %181 = load i8** %180, align 8
  store i8* %181, i8** %0, align 8
  br label %bb155

bb89:                                             ; preds = %bb87
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %rhaystack) nounwind inlinehint
  %182 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %183 = getelementptr inbounds %struct.mbchar* %182, i32 0, i32 2
  %184 = load i8* %183, align 8
  %toBool90 = icmp ne i8 %184, 0
  %toBool90not = xor i1 %toBool90, true
  %toBool90not91 = zext i1 %toBool90not to i8
  %toBool93 = icmp ne i8 %toBool90not91, 0
  br i1 %toBool93, label %bb95, label %bb94

bb94:                                             ; preds = %bb89
  %185 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %186 = getelementptr inbounds %struct.mbchar* %185, i32 0, i32 3
  %187 = load i32* %186, align 4
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %bb95, label %bb96

bb95:                                             ; preds = %bb94, %bb89
  store i32 1, i32* %iftmp.25, align 4
  br label %bb97

bb96:                                             ; preds = %bb94
  store i32 0, i32* %iftmp.25, align 4
  br label %bb97

bb97:                                             ; preds = %bb96, %bb95
  %189 = load i32* %iftmp.25, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %bb98, label %bb99

bb98:                                             ; preds = %bb97
  store i8* null, i8** %0, align 8
  br label %bb155

bb99:                                             ; preds = %bb97
  %191 = load i64* %comparison_count, align 8
  %192 = add i64 %191, 1
  store i64 %192, i64* %comparison_count, align 8
  %193 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %194 = getelementptr inbounds %struct.mbchar* %193, i32 0, i32 2
  %195 = load i8* %194, align 8
  %toBool100 = icmp ne i8 %195, 0
  %toBool100not = xor i1 %toBool100, true
  %toBool100not101 = zext i1 %toBool100not to i8
  %toBool103 = icmp ne i8 %toBool100not101, 0
  br i1 %toBool103, label %bb110, label %bb104

bb104:                                            ; preds = %bb99
  %196 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %197 = getelementptr inbounds %struct.mbchar* %196, i32 0, i32 2
  %198 = load i8* %197, align 8
  %toBool105 = icmp ne i8 %198, 0
  %toBool105not = xor i1 %toBool105, true
  %toBool105not106 = zext i1 %toBool105not to i8
  %toBool108 = icmp ne i8 %toBool105not106, 0
  br i1 %toBool108, label %bb110, label %bb109

bb109:                                            ; preds = %bb104
  %199 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %200 = getelementptr inbounds %struct.mbchar* %199, i32 0, i32 3
  %201 = load i32* %200, align 4
  %202 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %203 = getelementptr inbounds %struct.mbchar* %202, i32 0, i32 3
  %204 = load i32* %203, align 4
  %205 = icmp ne i32 %201, %204
  %206 = zext i1 %205 to i8
  store i8 %206, i8* %iftmp.26, align 1
  br label %bb115

bb110:                                            ; preds = %bb104, %bb99
  %207 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %208 = getelementptr inbounds %struct.mbchar* %207, i32 0, i32 1
  %209 = load i64* %208, align 8
  %210 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %211 = getelementptr inbounds %struct.mbchar* %210, i32 0, i32 1
  %212 = load i64* %211, align 8
  %213 = icmp ne i64 %209, %212
  br i1 %213, label %bb112, label %bb111

bb111:                                            ; preds = %bb110
  %214 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %215 = getelementptr inbounds %struct.mbchar* %214, i32 0, i32 1
  %216 = load i64* %215, align 8
  %217 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %218 = getelementptr inbounds %struct.mbchar* %217, i32 0, i32 0
  %219 = load i8** %218, align 8
  %220 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %221 = getelementptr inbounds %struct.mbchar* %220, i32 0, i32 0
  %222 = load i8** %221, align 8
  %223 = call i32 @memcmp(i8* %222, i8* %219, i64 %216) nounwind readonly
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %bb112, label %bb113

bb112:                                            ; preds = %bb111, %bb110
  store i32 1, i32* %iftmp.27, align 4
  br label %bb114

bb113:                                            ; preds = %bb111
  store i32 0, i32* %iftmp.27, align 4
  br label %bb114

bb114:                                            ; preds = %bb113, %bb112
  %225 = load i32* %iftmp.27, align 4
  %226 = trunc i32 %225 to i8
  store i8 %226, i8* %iftmp.26, align 1
  br label %bb115

bb115:                                            ; preds = %bb114, %bb109
  %227 = load i8* %iftmp.26, align 1
  %toBool116 = icmp ne i8 %227, 0
  br i1 %toBool116, label %bb118, label %bb117

bb117:                                            ; preds = %bb115
  %228 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %229 = getelementptr inbounds %struct.mbchar* %228, i32 0, i32 0
  %230 = load i8** %229, align 8
  %231 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %232 = getelementptr inbounds %struct.mbchar* %231, i32 0, i32 1
  %233 = load i64* %232, align 8
  %234 = getelementptr inbounds i8* %230, i64 %233
  %235 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %236 = getelementptr inbounds %struct.mbchar* %235, i32 0, i32 0
  store i8* %234, i8** %236, align 8
  %237 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 2
  store i8 0, i8* %237, align 4
  %238 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %239 = getelementptr inbounds %struct.mbchar* %238, i32 0, i32 0
  %240 = load i8** %239, align 8
  %241 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %242 = getelementptr inbounds %struct.mbchar* %241, i32 0, i32 1
  %243 = load i64* %242, align 8
  %244 = getelementptr inbounds i8* %240, i64 %243
  %245 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %246 = getelementptr inbounds %struct.mbchar* %245, i32 0, i32 0
  store i8* %244, i8** %246, align 8
  %247 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 2
  store i8 0, i8* %247, align 4
  br label %bb79

bb118:                                            ; preds = %bb115, %bb64
  %248 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %249 = getelementptr inbounds %struct.mbchar* %248, i32 0, i32 0
  %250 = load i8** %249, align 8
  %251 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %252 = getelementptr inbounds %struct.mbchar* %251, i32 0, i32 1
  %253 = load i64* %252, align 8
  %254 = getelementptr inbounds i8* %250, i64 %253
  %255 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %256 = getelementptr inbounds %struct.mbchar* %255, i32 0, i32 0
  store i8* %254, i8** %256, align 8
  %257 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 2
  store i8 0, i8* %257, align 4
  br label %bb9

bb119:                                            ; preds = %bb7
  %258 = load i8** %haystack_addr, align 8
  store i8* %258, i8** %0, align 8
  br label %bb155

bb120:                                            ; preds = %entry
  %259 = load i8** %needle_addr, align 8
  %260 = load i8* %259, align 1
  %261 = icmp ne i8 %260, 0
  br i1 %261, label %bb121, label %bb154

bb121:                                            ; preds = %bb120
  store i8 1, i8* %try_kmp122, align 1
  store i64 0, i64* %outer_loop_count123, align 8
  store i64 0, i64* %comparison_count124, align 8
  store i64 0, i64* %last_ccount125, align 8
  %262 = load i8** %needle_addr, align 8
  store i8* %262, i8** %needle_last_ccount, align 8
  %263 = load i8** %needle_addr, align 8
  %264 = load i8* %263, align 1
  store i8 %264, i8* %b, align 1
  %265 = load i8** %needle_addr, align 8
  %266 = getelementptr inbounds i8* %265, i64 1
  store i8* %266, i8** %needle_addr, align 8
  br label %bb126

bb126:                                            ; preds = %bb153, %bb121
  %267 = load i8** %haystack_addr, align 8
  %268 = load i8* %267, align 1
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %bb127, label %bb128

bb127:                                            ; preds = %bb126
  store i8* null, i8** %0, align 8
  br label %bb155

bb128:                                            ; preds = %bb126
  %270 = load i8* %try_kmp122, align 1
  %toBool129 = icmp ne i8 %270, 0
  br i1 %toBool129, label %bb130, label %bb143

bb130:                                            ; preds = %bb128
  %271 = load i64* %outer_loop_count123, align 8
  %272 = icmp ugt i64 %271, 9
  br i1 %272, label %bb131, label %bb143

bb131:                                            ; preds = %bb130
  %273 = load i64* %outer_loop_count123, align 8
  %274 = mul i64 %273, 5
  %275 = load i64* %comparison_count124, align 8
  %276 = icmp ule i64 %274, %275
  br i1 %276, label %bb132, label %bb143

bb132:                                            ; preds = %bb131
  %277 = load i8** %needle_last_ccount, align 8
  %278 = icmp ne i8* %277, null
  br i1 %278, label %bb133, label %bb136

bb133:                                            ; preds = %bb132
  %279 = load i64* %comparison_count124, align 8
  %280 = load i64* %last_ccount125, align 8
  %281 = sub i64 %279, %280
  %282 = load i8** %needle_last_ccount, align 8
  %283 = call i64 @strnlen(i8* %282, i64 %281) nounwind readonly
  %284 = load i8** %needle_last_ccount, align 8
  %285 = getelementptr inbounds i8* %284, i64 %283
  store i8* %285, i8** %needle_last_ccount, align 8
  %286 = load i8** %needle_last_ccount, align 8
  %287 = load i8* %286, align 1
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  store i8* null, i8** %needle_last_ccount, align 8
  br label %bb135

bb135:                                            ; preds = %bb134, %bb133
  %289 = load i64* %comparison_count124, align 8
  store i64 %289, i64* %last_ccount125, align 8
  br label %bb136

bb136:                                            ; preds = %bb135, %bb132
  %290 = load i8** %needle_last_ccount, align 8
  %291 = icmp eq i8* %290, null
  br i1 %291, label %bb137, label %bb143

bb137:                                            ; preds = %bb136
  %292 = load i8** %needle_addr, align 8
  %293 = getelementptr inbounds i8* %292, i64 -1
  %294 = call i64 @strlen(i8* %293) nounwind readonly
  %295 = load i8** %needle_addr, align 8
  %296 = getelementptr inbounds i8* %295, i64 -1
  %297 = load i8** %haystack_addr, align 8
  %298 = call zeroext i8 @knuth_morris_pratt(i8* %297, i8* %296, i64 %294, i8** %result138) nounwind
  store i8 %298, i8* %success139, align 1
  %299 = load i8* %success139, align 1
  %toBool140 = icmp ne i8 %299, 0
  br i1 %toBool140, label %bb141, label %bb142

bb141:                                            ; preds = %bb137
  %300 = load i8** %result138, align 8
  store i8* %300, i8** %0, align 8
  br label %bb155

bb142:                                            ; preds = %bb137
  store i8 0, i8* %try_kmp122, align 1
  br label %bb143

bb143:                                            ; preds = %bb142, %bb136, %bb131, %bb130, %bb128
  %301 = load i64* %outer_loop_count123, align 8
  %302 = add i64 %301, 1
  store i64 %302, i64* %outer_loop_count123, align 8
  %303 = load i64* %comparison_count124, align 8
  %304 = add i64 %303, 1
  store i64 %304, i64* %comparison_count124, align 8
  %305 = load i8** %haystack_addr, align 8
  %306 = load i8* %305, align 1
  %307 = load i8* %b, align 1
  %308 = icmp eq i8 %306, %307
  br i1 %308, label %bb144, label %bb153

bb144:                                            ; preds = %bb143
  %309 = load i8** %haystack_addr, align 8
  %310 = getelementptr inbounds i8* %309, i64 1
  store i8* %310, i8** %rhaystack145, align 8
  %311 = load i8** %needle_addr, align 8
  store i8* %311, i8** %rneedle146, align 8
  br label %bb147

bb147:                                            ; preds = %bb152, %bb144
  %312 = load i8** %rneedle146, align 8
  %313 = load i8* %312, align 1
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %bb148, label %bb149

bb148:                                            ; preds = %bb147
  %315 = load i8** %haystack_addr, align 8
  store i8* %315, i8** %0, align 8
  br label %bb155

bb149:                                            ; preds = %bb147
  %316 = load i8** %rhaystack145, align 8
  %317 = load i8* %316, align 1
  %318 = icmp eq i8 %317, 0
  br i1 %318, label %bb150, label %bb151

bb150:                                            ; preds = %bb149
  store i8* null, i8** %0, align 8
  br label %bb155

bb151:                                            ; preds = %bb149
  %319 = load i64* %comparison_count124, align 8
  %320 = add i64 %319, 1
  store i64 %320, i64* %comparison_count124, align 8
  %321 = load i8** %rhaystack145, align 8
  %322 = load i8* %321, align 1
  %323 = load i8** %rneedle146, align 8
  %324 = load i8* %323, align 1
  %325 = icmp ne i8 %322, %324
  br i1 %325, label %bb153, label %bb152

bb152:                                            ; preds = %bb151
  %326 = load i8** %rhaystack145, align 8
  %327 = getelementptr inbounds i8* %326, i64 1
  store i8* %327, i8** %rhaystack145, align 8
  %328 = load i8** %rneedle146, align 8
  %329 = getelementptr inbounds i8* %328, i64 1
  store i8* %329, i8** %rneedle146, align 8
  br label %bb147

bb153:                                            ; preds = %bb151, %bb143
  %330 = load i8** %haystack_addr, align 8
  %331 = getelementptr inbounds i8* %330, i64 1
  store i8* %331, i8** %haystack_addr, align 8
  br label %bb126

bb154:                                            ; preds = %bb120
  %332 = load i8** %haystack_addr, align 8
  store i8* %332, i8** %0, align 8
  br label %bb155

bb155:                                            ; preds = %bb154, %bb150, %bb148, %bb141, %bb127, %bb119, %bb98, %bb88, %bb46, %bb18
  %333 = load i8** %0, align 8
  store i8* %333, i8** %retval, align 8
  %retval156 = load i8** %retval
  ret i8* %retval156
}

define void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter) nounwind inlinehint {
entry:
  %iter_addr = alloca %struct.mbui_iterator_t*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbui_iterator_t* %iter, %struct.mbui_iterator_t** %iter_addr
  %0 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %1 = getelementptr inbounds %struct.mbui_iterator_t* %0, i32 0, i32 2
  %2 = load i8* %1, align 4
  %toBool = icmp ne i8 %2, 0
  br i1 %toBool, label %return, label %bb

bb:                                               ; preds = %entry
  %3 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %4 = getelementptr inbounds %struct.mbui_iterator_t* %3, i32 0, i32 0
  %5 = load i8* %4, align 8
  %toBool1 = icmp ne i8 %5, 0
  br i1 %toBool1, label %with_shift, label %bb2

bb2:                                              ; preds = %bb
  %6 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %7 = getelementptr inbounds %struct.mbui_iterator_t* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.mbchar* %7, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = load i8* %9, align 1
  %11 = sext i8 %10 to i32
  %12 = trunc i32 %11 to i8
  %13 = call zeroext i8 @is_basic(i8 signext %12) nounwind
  %toBool3 = icmp ne i8 %13, 0
  %14 = load %struct.mbui_iterator_t** %iter_addr, align 8
  br i1 %toBool3, label %bb4, label %bb5

bb4:                                              ; preds = %bb2
  %15 = getelementptr inbounds %struct.mbui_iterator_t* %14, i32 0, i32 3
  %16 = getelementptr inbounds %struct.mbchar* %15, i32 0, i32 1
  store i64 1, i64* %16, align 8
  %17 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %18 = getelementptr inbounds %struct.mbui_iterator_t* %17, i32 0, i32 3
  %19 = getelementptr inbounds %struct.mbchar* %18, i32 0, i32 0
  %20 = load i8** %19, align 8
  %21 = load i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %24 = getelementptr inbounds %struct.mbui_iterator_t* %23, i32 0, i32 3
  %25 = getelementptr inbounds %struct.mbchar* %24, i32 0, i32 3
  store i32 %22, i32* %25, align 4
  %26 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %27 = getelementptr inbounds %struct.mbui_iterator_t* %26, i32 0, i32 3
  %28 = getelementptr inbounds %struct.mbchar* %27, i32 0, i32 2
  store i8 1, i8* %28, align 8
  br label %bb18

bb5:                                              ; preds = %bb2
  %29 = getelementptr inbounds %struct.mbui_iterator_t* %14, i32 0, i32 1
  %30 = call i32 bitcast (i32 (%struct.__mbstate_t*)* @mbsinit to i32 (%struct.mbstate_t*)*)(%struct.mbstate_t* %29) nounwind readonly
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8]* @.str301, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1302, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.3802, i64 0, i64 0)) noreturn
  unreachable

bb7:                                              ; preds = %bb5
  %32 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %33 = getelementptr inbounds %struct.mbui_iterator_t* %32, i32 0, i32 0
  store i8 1, i8* %33, align 8
  br label %with_shift

with_shift:                                       ; preds = %bb7, %bb
  %34 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %35 = getelementptr inbounds %struct.mbui_iterator_t* %34, i32 0, i32 1
  %36 = call i64 @_stdlib_mb_cur_max() nounwind
  %37 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %38 = getelementptr inbounds %struct.mbui_iterator_t* %37, i32 0, i32 3
  %39 = getelementptr inbounds %struct.mbchar* %38, i32 0, i32 0
  %40 = load i8** %39, align 8
  %41 = call i64 @strnlen1(i8* %40, i64 %36) nounwind readonly
  %42 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %43 = getelementptr inbounds %struct.mbui_iterator_t* %42, i32 0, i32 3
  %44 = getelementptr inbounds %struct.mbchar* %43, i32 0, i32 0
  %45 = load i8** %44, align 8
  %46 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %47 = getelementptr inbounds %struct.mbui_iterator_t* %46, i32 0, i32 3
  %48 = getelementptr inbounds %struct.mbchar* %47, i32 0, i32 3
  %49 = call i64 bitcast (i64 (i32*, i8*, i64, %struct.__mbstate_t*)* @mbrtowc to i64 (i32*, i8*, i64, %struct.mbstate_t*)*)(i32* noalias %48, i8* noalias %45, i64 %41, %struct.mbstate_t* noalias %35) nounwind
  %50 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %51 = getelementptr inbounds %struct.mbui_iterator_t* %50, i32 0, i32 3
  %52 = getelementptr inbounds %struct.mbchar* %51, i32 0, i32 1
  store i64 %49, i64* %52, align 8
  %53 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %54 = getelementptr inbounds %struct.mbui_iterator_t* %53, i32 0, i32 3
  %55 = getelementptr inbounds %struct.mbchar* %54, i32 0, i32 1
  %56 = load i64* %55, align 8
  %57 = icmp eq i64 %56, -1
  %58 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %59 = getelementptr inbounds %struct.mbui_iterator_t* %58, i32 0, i32 3
  %60 = getelementptr inbounds %struct.mbchar* %59, i32 0, i32 1
  br i1 %57, label %bb8, label %bb9

bb8:                                              ; preds = %with_shift
  store i64 1, i64* %60, align 8
  %61 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %62 = getelementptr inbounds %struct.mbui_iterator_t* %61, i32 0, i32 3
  %63 = getelementptr inbounds %struct.mbchar* %62, i32 0, i32 2
  store i8 0, i8* %63, align 8
  br label %bb18

bb9:                                              ; preds = %with_shift
  %64 = load i64* %60, align 8
  %65 = icmp eq i64 %64, -2
  %66 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %67 = getelementptr inbounds %struct.mbui_iterator_t* %66, i32 0, i32 3
  br i1 %65, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %68 = getelementptr inbounds %struct.mbchar* %67, i32 0, i32 0
  %69 = load i8** %68, align 8
  %70 = call i64 @strlen(i8* %69) nounwind readonly
  %71 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %72 = getelementptr inbounds %struct.mbui_iterator_t* %71, i32 0, i32 3
  %73 = getelementptr inbounds %struct.mbchar* %72, i32 0, i32 1
  store i64 %70, i64* %73, align 8
  %74 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %75 = getelementptr inbounds %struct.mbui_iterator_t* %74, i32 0, i32 3
  %76 = getelementptr inbounds %struct.mbchar* %75, i32 0, i32 2
  store i8 0, i8* %76, align 8
  br label %bb18

bb11:                                             ; preds = %bb9
  %77 = getelementptr inbounds %struct.mbchar* %67, i32 0, i32 1
  %78 = load i64* %77, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %bb12, label %bb16

bb12:                                             ; preds = %bb11
  %80 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %81 = getelementptr inbounds %struct.mbui_iterator_t* %80, i32 0, i32 3
  %82 = getelementptr inbounds %struct.mbchar* %81, i32 0, i32 1
  store i64 1, i64* %82, align 8
  %83 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %84 = getelementptr inbounds %struct.mbui_iterator_t* %83, i32 0, i32 3
  %85 = getelementptr inbounds %struct.mbchar* %84, i32 0, i32 0
  %86 = load i8** %85, align 8
  %87 = load i8* %86, align 1
  %88 = icmp ne i8 %87, 0
  br i1 %88, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8]* @.str2303, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1302, i64 0, i64 0), i32 178, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.3802, i64 0, i64 0)) noretur
  unreachable

bb14:                                             ; preds = %bb12
  %89 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %90 = getelementptr inbounds %struct.mbui_iterator_t* %89, i32 0, i32 3
  %91 = getelementptr inbounds %struct.mbchar* %90, i32 0, i32 3
  %92 = load i32* %91, align 4
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8]* @.str3304, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1302, i64 0, i64 0), i32 179, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.3802, i64 0, i64 0)) noretur
  unreachable

bb16:                                             ; preds = %bb14, %bb11
  %94 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %95 = getelementptr inbounds %struct.mbui_iterator_t* %94, i32 0, i32 3
  %96 = getelementptr inbounds %struct.mbchar* %95, i32 0, i32 2
  store i8 1, i8* %96, align 8
  %97 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %98 = getelementptr inbounds %struct.mbui_iterator_t* %97, i32 0, i32 1
  %99 = call i32 bitcast (i32 (%struct.__mbstate_t*)* @mbsinit to i32 (%struct.mbstate_t*)*)(%struct.mbstate_t* %98) nounwind readonly
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %101 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %102 = getelementptr inbounds %struct.mbui_iterator_t* %101, i32 0, i32 0
  store i8 0, i8* %102, align 8
  br label %bb18

bb18:                                             ; preds = %bb17, %bb16, %bb10, %bb8, %bb4
  %103 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %104 = getelementptr inbounds %struct.mbui_iterator_t* %103, i32 0, i32 2
  store i8 1, i8* %104, align 4
  br label %return

return:                                           ; preds = %entry, %bb18
  ret void
}

define void @mbuiter_multi_reloc(%struct.mbui_iterator_t* %iter, i64 %ptrdiff) nounwind inlinehint {
entry:
  %iter_addr = alloca %struct.mbui_iterator_t*, align 8
  %ptrdiff_addr = alloca i64, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbui_iterator_t* %iter, %struct.mbui_iterator_t** %iter_addr
  store i64 %ptrdiff, i64* %ptrdiff_addr
  %0 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %1 = getelementptr inbounds %struct.mbui_iterator_t* %0, i32 0, i32 3
  %2 = getelementptr inbounds %struct.mbchar* %1, i32 0, i32 0
  %3 = load i8** %2, align 8
  %4 = load i64* %ptrdiff_addr, align 8
  %5 = getelementptr inbounds i8* %3, i64 %4
  %6 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %7 = getelementptr inbounds %struct.mbui_iterator_t* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.mbchar* %7, i32 0, i32 0
  store i8* %5, i8** %8, align 8
  ret void
}

define void @mbuiter_multi_copy(%struct.mbui_iterator_t* %new_iter, %struct.mbui_iterator_t* %old_iter) nounwind inlinehint {
entry:
  %new_iter_addr = alloca %struct.mbui_iterator_t*, align 8
  %old_iter_addr = alloca %struct.mbui_iterator_t*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbui_iterator_t* %new_iter, %struct.mbui_iterator_t** %new_iter_addr
  store %struct.mbui_iterator_t* %old_iter, %struct.mbui_iterator_t** %old_iter_addr
  %0 = load %struct.mbui_iterator_t** %old_iter_addr, align 8
  %1 = getelementptr inbounds %struct.mbui_iterator_t* %0, i32 0, i32 0
  %2 = load i8* %1, align 8
  %3 = load %struct.mbui_iterator_t** %new_iter_addr, align 8
  %4 = getelementptr inbounds %struct.mbui_iterator_t* %3, i32 0, i32 0
  store i8 %2, i8* %4, align 8
  %5 = load %struct.mbui_iterator_t** %new_iter_addr, align 8
  %6 = getelementptr inbounds %struct.mbui_iterator_t* %5, i32 0, i32 0
  %7 = load i8* %6, align 8
  %toBool = icmp ne i8 %7, 0
  br i1 %toBool, label %bb, label %bb1

bb:                                               ; preds = %entry
  %8 = load %struct.mbui_iterator_t** %old_iter_addr, align 8
  %9 = getelementptr inbounds %struct.mbui_iterator_t* %8, i32 0, i32 1
  %10 = load %struct.mbui_iterator_t** %new_iter_addr, align 8
  %11 = getelementptr inbounds %struct.mbui_iterator_t* %10, i32 0, i32 1
  %12 = bitcast %struct.mbstate_t* %11 to i8*
  %13 = bitcast %struct.mbstate_t* %9 to i8*
  %14 = call i8* @memcpy(i8* %12, i8* %13, i64 8)
  br label %bb2

bb1:                                              ; preds = %entry
  %15 = load %struct.mbui_iterator_t** %new_iter_addr, align 8
  %16 = getelementptr inbounds %struct.mbui_iterator_t* %15, i32 0, i32 1
  %17 = bitcast %struct.mbstate_t* %16 to i8*
  %18 = call i8* @memset(i8* %17, i32 0, i64 8)
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %19 = load %struct.mbui_iterator_t** %old_iter_addr, align 8
  %20 = getelementptr inbounds %struct.mbui_iterator_t* %19, i32 0, i32 2
  %21 = load i8* %20, align 4
  %22 = load %struct.mbui_iterator_t** %new_iter_addr, align 8
  %23 = getelementptr inbounds %struct.mbui_iterator_t* %22, i32 0, i32 2
  store i8 %21, i8* %23, align 4
  %24 = load %struct.mbui_iterator_t** %old_iter_addr, align 8
  %25 = getelementptr inbounds %struct.mbui_iterator_t* %24, i32 0, i32 3
  %26 = load %struct.mbui_iterator_t** %new_iter_addr, align 8
  %27 = getelementptr inbounds %struct.mbui_iterator_t* %26, i32 0, i32 3
  call void @mb_copy(%struct.mbchar* %27, %struct.mbchar* %25) nounwind
  ret void
}

define i32 @mem_cd_iconv(i8* %src, i64 %srclen, i8* %cd, i8** %resultp, i64* %lengthp) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %srclen_addr = alloca i64, align 8
  %cd_addr = alloca i8*, align 8
  %resultp_addr = alloca i8**, align 8
  %lengthp_addr = alloca i64*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %length = alloca i64
  %result = alloca i8*
  %count = alloca i64
  %tmp = alloca %union..0anon
  %inptr = alloca i8*
  %insize = alloca i64
  %outptr = alloca i8*
  %outsize = alloca i64
  %res = alloca i64
  %outptr8 = alloca i8*
  %outsize9 = alloca i64
  %res10 = alloca i64
  %inptr20 = alloca i8*
  %insize21 = alloca i64
  %outptr22 = alloca i8*
  %outsize23 = alloca i64
  %res25 = alloca i64
  %res30 = alloca i64
  %saved_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i64 %srclen, i64* %srclen_addr
  store i8* %cd, i8** %cd_addr
  store i8** %resultp, i8*** %resultp_addr
  store i64* %lengthp, i64** %lengthp_addr
  %1 = load i8** %cd_addr, align 8
  %2 = call i64 @iconv(i8* %1, i8** noalias null, i64* noalias null, i8** noalias null, i64* noalias null) nounwind
  store i64 0, i64* %count, align 8
  %3 = load i8** %src_addr, align 8
  store i8* %3, i8** %inptr, align 8
  %4 = load i64* %srclen_addr, align 8
  store i64 %4, i64* %insize, align 8
  br label %bb6

bb:                                               ; preds = %bb6
  %5 = getelementptr inbounds %union..0anon* %tmp, i32 0, i32 0
  %6 = bitcast i32* %5 to [4096 x i8]*
  %7 = getelementptr inbounds [4096 x i8]* %6, i64 0, i64 0
  store i8* %7, i8** %outptr, align 8
  store i64 4096, i64* %outsize, align 8
  %8 = load i8** %cd_addr, align 8
  %9 = call i64 @iconv(i8* %8, i8** noalias %inptr, i64* noalias %insize, i8** noalias %outptr, i64* noalias %outsize) nounwind
  store i64 %9, i64* %res, align 8
  %10 = load i64* %res, align 8
  %11 = icmp eq i64 %10, -1
  br i1 %11, label %bb2, label %bb5

bb2:                                              ; preds = %bb
  %12 = call i32* @__errno_location() nounwind readnone
  %13 = load i32* %12, align 4
  %14 = icmp ne i32 %13, 7
  br i1 %14, label %bb3, label %bb5

bb3:                                              ; preds = %bb2
  %15 = call i32* @__errno_location() nounwind readnone
  %16 = load i32* %15, align 4
  %17 = icmp eq i32 %16, 22
  br i1 %17, label %bb7, label %bb4

bb4:                                              ; preds = %bb3
  store i32 -1, i32* %0, align 4
  br label %bb36

bb5:                                              ; preds = %bb2, %bb
  %18 = load i8** %outptr, align 8
  %19 = ptrtoint i8* %18 to i64
  %20 = getelementptr inbounds %union..0anon* %tmp, i32 0, i32 0
  %21 = bitcast i32* %20 to [4096 x i8]*
  %22 = ptrtoint [4096 x i8]* %21 to i64
  %23 = sub nsw i64 %19, %22
  %24 = load i64* %count, align 8
  %25 = add i64 %23, %24
  store i64 %25, i64* %count, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %entry
  %26 = load i64* %insize, align 8
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %bb, label %bb7

bb7:                                              ; preds = %bb6, %bb3
  %28 = getelementptr inbounds %union..0anon* %tmp, i32 0, i32 0
  %29 = bitcast i32* %28 to [4096 x i8]*
  %30 = getelementptr inbounds [4096 x i8]* %29, i64 0, i64 0
  store i8* %30, i8** %outptr8, align 8
  store i64 4096, i64* %outsize9, align 8
  %31 = load i8** %cd_addr, align 8
  %32 = call i64 @iconv(i8* %31, i8** noalias null, i64* noalias null, i8** noalias %outptr8, i64* noalias %outsize9) nounwind
  store i64 %32, i64* %res10, align 8
  %33 = load i64* %res10, align 8
  %34 = icmp eq i64 %33, -1
  br i1 %34, label %bb11, label %bb12

bb11:                                             ; preds = %bb7
  store i32 -1, i32* %0, align 4
  br label %bb36

bb12:                                             ; preds = %bb7
  %35 = load i8** %outptr8, align 8
  %36 = ptrtoint i8* %35 to i64
  %37 = getelementptr inbounds %union..0anon* %tmp, i32 0, i32 0
  %38 = bitcast i32* %37 to [4096 x i8]*
  %39 = ptrtoint [4096 x i8]* %38 to i64
  %40 = sub nsw i64 %36, %39
  %41 = load i64* %count, align 8
  %42 = add i64 %40, %41
  store i64 %42, i64* %count, align 8
  %43 = load i64* %count, align 8
  store i64 %43, i64* %length, align 8
  %44 = load i64* %length, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %46 = load i64** %lengthp_addr, align 8
  store i64 0, i64* %46, align 8
  store i32 0, i32* %0, align 4
  br label %bb36

bb14:                                             ; preds = %bb12
  %47 = load i8*** %resultp_addr, align 8
  %48 = load i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %bb17, label %bb15

bb15:                                             ; preds = %bb14
  %50 = load i64** %lengthp_addr, align 8
  %51 = load i64* %50, align 8
  %52 = load i64* %length, align 8
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %bb17, label %bb16

bb16:                                             ; preds = %bb15
  %54 = load i8*** %resultp_addr, align 8
  %55 = load i8** %54, align 8
  store i8* %55, i8** %result, align 8
  br label %bb19

bb17:                                             ; preds = %bb15, %bb14
  %56 = load i64* %length, align 8
  %57 = call noalias i8* @malloc(i64 %56) nounwind
  store i8* %57, i8** %result, align 8
  %58 = load i8** %result, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  %60 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %60, align 4
  store i32 -1, i32* %0, align 4
  br label %bb36

bb19:                                             ; preds = %bb17, %bb16
  %61 = load i8** %cd_addr, align 8
  %62 = call i64 @iconv(i8* %61, i8** noalias null, i64* noalias null, i8** noalias null, i64* noalias null) nounwind
  %63 = load i8** %src_addr, align 8
  store i8* %63, i8** %inptr20, align 8
  %64 = load i64* %srclen_addr, align 8
  store i64 %64, i64* %insize21, align 8
  %65 = load i8** %result, align 8
  store i8* %65, i8** %outptr22, align 8
  %66 = load i64* %length, align 8
  store i64 %66, i64* %outsize23, align 8
  br label %bb28

bb24:                                             ; preds = %bb28
  %67 = load i8** %cd_addr, align 8
  %68 = call i64 @iconv(i8* %67, i8** noalias %inptr20, i64* noalias %insize21, i8** noalias %outptr22, i64* noalias %outsize23) nounwind
  store i64 %68, i64* %res25, align 8
  %69 = load i64* %res25, align 8
  %70 = icmp eq i64 %69, -1
  br i1 %70, label %bb27, label %bb28

bb27:                                             ; preds = %bb24
  %71 = call i32* @__errno_location() nounwind readnone
  %72 = load i32* %71, align 4
  %73 = icmp eq i32 %72, 22
  br i1 %73, label %bb29, label %fail

bb28:                                             ; preds = %bb24, %bb19
  %74 = load i64* %insize21, align 8
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %bb24, label %bb29

bb29:                                             ; preds = %bb28, %bb27
  %76 = load i8** %cd_addr, align 8
  %77 = call i64 @iconv(i8* %76, i8** noalias null, i64* noalias null, i8** noalias %outptr22, i64* noalias %outsize23) nounwind
  store i64 %77, i64* %res30, align 8
  %78 = load i64* %res30, align 8
  %79 = icmp eq i64 %78, -1
  br i1 %79, label %fail, label %bb31

bb31:                                             ; preds = %bb29
  %80 = load i64* %outsize23, align 8
  %81 = icmp ne i64 %80, 0
  br i1 %81, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  call void @abort() noreturn nounwind
  unreachable

bb33:                                             ; preds = %bb31
  %82 = load i8*** %resultp_addr, align 8
  %83 = load i8** %result, align 8
  store i8* %83, i8** %82, align 8
  %84 = load i64** %lengthp_addr, align 8
  %85 = load i64* %length, align 8
  store i64 %85, i64* %84, align 8
  store i32 0, i32* %0, align 4
  br label %bb36

fail:                                             ; preds = %bb29, %bb27
  %86 = load i8*** %resultp_addr, align 8
  %87 = load i8** %86, align 8
  %88 = load i8** %result, align 8
  %89 = icmp ne i8* %87, %88
  br i1 %89, label %bb34, label %bb35

bb34:                                             ; preds = %fail
  %90 = call i32* @__errno_location() nounwind readnone
  %91 = load i32* %90, align 4
  store i32 %91, i32* %saved_errno, align 4
  %92 = load i8** %result, align 8
  call void @free(i8* %92) nounwind
  %93 = call i32* @__errno_location() nounwind readnone
  %94 = load i32* %saved_errno, align 4
  store i32 %94, i32* %93, align 4
  br label %bb35

bb35:                                             ; preds = %bb34, %fail
  store i32 -1, i32* %0, align 4
  br label %bb36

bb36:                                             ; preds = %bb35, %bb33, %bb18, %bb13, %bb11, %bb4
  %95 = load i32* %0, align 4
  store i32 %95, i32* %retval, align 4
  %retval37 = load i32* %retval
  ret i32 %retval37
}

declare i64 @iconv(i8*, i8** noalias, i64* noalias, i8** noalias, i64* noalias)

define i8* @str_cd_iconv(i8* %src, i8* %cd) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %cd_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %result = alloca i8*
  %result_size = alloca i64
  %length = alloca i64
  %inptr = alloca i8*
  %inbytes_remaining = alloca i64
  %approx_sqrt_SIZE_MAX = alloca i64
  %outptr = alloca i8*
  %outbytes_remaining = alloca i64
  %res = alloca i64
  %used = alloca i64
  %newsize = alloca i64
  %newresult = alloca i8*
  %res14 = alloca i64
  %used17 = alloca i64
  %newsize18 = alloca i64
  %newresult19 = alloca i8*
  %smaller_result = alloca i8*
  %saved_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i8* %cd, i8** %cd_addr
  %1 = load i8** %src_addr, align 8
  store i8* %1, i8** %inptr, align 8
  %2 = load i8** %src_addr, align 8
  %3 = call i64 @strlen(i8* %2) nounwind readonly
  store i64 %3, i64* %inbytes_remaining, align 8
  %4 = load i64* %inbytes_remaining, align 8
  store i64 %4, i64* %result_size, align 8
  store i64 4294967295, i64* %approx_sqrt_SIZE_MAX, align 8
  %5 = load i64* %approx_sqrt_SIZE_MAX, align 8
  %int_cast_to_i64 = bitcast i64 16 to i64
  %6 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %7 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %7, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %8 = udiv i64 %5, 16
  %9 = load i64* %result_size, align 8
  %10 = icmp uge i64 %8, %9
  br i1 %10, label %bb, label %bb1

bb:                                               ; preds = %klee_div_zero_check.exit
  %11 = load i64* %result_size, align 8
  %12 = mul i64 %11, 16
  store i64 %12, i64* %result_size, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %klee_div_zero_check.exit
  %13 = load i64* %result_size, align 8
  %14 = add i64 %13, 1
  store i64 %14, i64* %result_size, align 8
  %15 = load i64* %result_size, align 8
  %16 = call noalias i8* @malloc(i64 %15) nounwind
  store i8* %16, i8** %result, align 8
  %17 = load i8** %result, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %19 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %19, align 4
  store i8* null, i8** %0, align 8
  br label %bb28

bb3:                                              ; preds = %bb1
  %20 = load i8** %cd_addr, align 8
  %21 = call i64 @iconv(i8* %20, i8** noalias null, i64* noalias null, i8** noalias null, i64* noalias null) nounwind
  %22 = load i8** %result, align 8
  store i8* %22, i8** %outptr, align 8
  %23 = load i64* %result_size, align 8
  %24 = sub i64 %23, 1
  store i64 %24, i64* %outbytes_remaining, align 8
  br label %bb4

bb4:                                              ; preds = %bb12, %bb3
  %25 = load i8** %cd_addr, align 8
  %26 = call i64 @iconv(i8* %25, i8** noalias %inptr, i64* noalias %inbytes_remaining, i8** noalias %outptr, i64* noalias %outbytes_remaining) nounwind
  store i64 %26, i64* %res, align 8
  %27 = load i64* %res, align 8
  %28 = icmp eq i64 %27, -1
  br i1 %28, label %bb6, label %bb13

bb6:                                              ; preds = %bb4
  %29 = call i32* @__errno_location() nounwind readnone
  %30 = load i32* %29, align 4
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %bb13, label %bb7

bb7:                                              ; preds = %bb6
  %32 = call i32* @__errno_location() nounwind readnone
  %33 = load i32* %32, align 4
  %34 = icmp eq i32 %33, 7
  br i1 %34, label %bb8, label %failed

bb8:                                              ; preds = %bb7
  %35 = load i8** %outptr, align 8
  %36 = ptrtoint i8* %35 to i64
  %37 = load i8** %result, align 8
  %38 = ptrtoint i8* %37 to i64
  %39 = sub nsw i64 %36, %38
  store i64 %39, i64* %used, align 8
  %40 = load i64* %result_size, align 8
  %41 = mul i64 %40, 2
  store i64 %41, i64* %newsize, align 8
  %42 = load i64* %newsize, align 8
  %43 = load i64* %result_size, align 8
  %44 = icmp ule i64 %42, %43
  br i1 %44, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %45 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %45, align 4
  br label %failed

bb10:                                             ; preds = %bb8
  %46 = load i8** %result, align 8
  %47 = load i64* %newsize, align 8
  %48 = call i8* @realloc(i8* %46, i64 %47) nounwind
  store i8* %48, i8** %newresult, align 8
  %49 = load i8** %newresult, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %51 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %51, align 4
  br label %failed

bb12:                                             ; preds = %bb10
  %52 = load i8** %newresult, align 8
  store i8* %52, i8** %result, align 8
  %53 = load i64* %newsize, align 8
  store i64 %53, i64* %result_size, align 8
  %54 = load i8** %result, align 8
  %55 = load i64* %used, align 8
  %56 = getelementptr inbounds i8* %54, i64 %55
  store i8* %56, i8** %outptr, align 8
  %57 = load i64* %result_size, align 8
  %58 = load i64* %used, align 8
  %59 = sub i64 %57, %58
  %60 = sub i64 %59, 1
  store i64 %60, i64* %outbytes_remaining, align 8
  br label %bb4

bb13:                                             ; preds = %bb23, %bb6, %bb4
  %61 = load i8** %cd_addr, align 8
  %62 = call i64 @iconv(i8* %61, i8** noalias null, i64* noalias null, i8** noalias %outptr, i64* noalias %outbytes_remaining) nounwind
  store i64 %62, i64* %res14, align 8
  %63 = load i64* %res14, align 8
  %64 = icmp eq i64 %63, -1
  br i1 %64, label %bb15, label %bb24

bb15:                                             ; preds = %bb13
  %65 = call i32* @__errno_location() nounwind readnone
  %66 = load i32* %65, align 4
  %67 = icmp eq i32 %66, 7
  br i1 %67, label %bb16, label %failed

bb16:                                             ; preds = %bb15
  %68 = load i8** %outptr, align 8
  %69 = ptrtoint i8* %68 to i64
  %70 = load i8** %result, align 8
  %71 = ptrtoint i8* %70 to i64
  %72 = sub nsw i64 %69, %71
  store i64 %72, i64* %used17, align 8
  %73 = load i64* %result_size, align 8
  %74 = mul i64 %73, 2
  store i64 %74, i64* %newsize18, align 8
  %75 = load i64* %newsize18, align 8
  %76 = load i64* %result_size, align 8
  %77 = icmp ule i64 %75, %76
  br i1 %77, label %bb20, label %bb21

bb20:                                             ; preds = %bb16
  %78 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %78, align 4
  br label %failed

bb21:                                             ; preds = %bb16
  %79 = load i8** %result, align 8
  %80 = load i64* %newsize18, align 8
  %81 = call i8* @realloc(i8* %79, i64 %80) nounwind
  store i8* %81, i8** %newresult19, align 8
  %82 = load i8** %newresult19, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  %84 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %84, align 4
  br label %failed

bb23:                                             ; preds = %bb21
  %85 = load i8** %newresult19, align 8
  store i8* %85, i8** %result, align 8
  %86 = load i64* %newsize18, align 8
  store i64 %86, i64* %result_size, align 8
  %87 = load i8** %result, align 8
  %88 = load i64* %used17, align 8
  %89 = getelementptr inbounds i8* %87, i64 %88
  store i8* %89, i8** %outptr, align 8
  %90 = load i64* %result_size, align 8
  %91 = load i64* %used17, align 8
  %92 = sub i64 %90, %91
  %93 = sub i64 %92, 1
  store i64 %93, i64* %outbytes_remaining, align 8
  br label %bb13

bb24:                                             ; preds = %bb13
  %94 = load i8** %outptr, align 8
  store i8 0, i8* %94, align 1
  %95 = getelementptr inbounds i8* %94, i64 1
  store i8* %95, i8** %outptr, align 8
  %96 = load i8** %outptr, align 8
  %97 = ptrtoint i8* %96 to i64
  %98 = load i8** %result, align 8
  %99 = ptrtoint i8* %98 to i64
  %100 = sub nsw i64 %97, %99
  store i64 %100, i64* %length, align 8
  %101 = load i64* %length, align 8
  %102 = load i64* %result_size, align 8
  %103 = icmp ult i64 %101, %102
  br i1 %103, label %bb25, label %bb27

bb25:                                             ; preds = %bb24
  %104 = load i8** %result, align 8
  %105 = load i64* %length, align 8
  %106 = call i8* @realloc(i8* %104, i64 %105) nounwind
  store i8* %106, i8** %smaller_result, align 8
  %107 = load i8** %smaller_result, align 8
  %108 = icmp ne i8* %107, null
  br i1 %108, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  %109 = load i8** %smaller_result, align 8
  store i8* %109, i8** %result, align 8
  br label %bb27

bb27:                                             ; preds = %bb26, %bb25, %bb24
  %110 = load i8** %result, align 8
  store i8* %110, i8** %0, align 8
  br label %bb28

failed:                                           ; preds = %bb22, %bb20, %bb15, %bb11, %bb9, %bb7
  %111 = call i32* @__errno_location() nounwind readnone
  %112 = load i32* %111, align 4
  store i32 %112, i32* %saved_errno, align 4
  %113 = load i8** %result, align 8
  call void @free(i8* %113) nounwind
  %114 = call i32* @__errno_location() nounwind readnone
  %115 = load i32* %saved_errno, align 4
  store i32 %115, i32* %114, align 4
  store i8* null, i8** %0, align 8
  br label %bb28

bb28:                                             ; preds = %failed, %bb27, %bb2
  %116 = load i8** %0, align 8
  store i8* %116, i8** %retval, align 8
  %retval29 = load i8** %retval
  ret i8* %retval29
}

define i8* @str_iconv(i8* %src, i8* %from_codeset, i8* %to_codeset) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %from_codeset_addr = alloca i8*, align 8
  %to_codeset_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %result = alloca i8*
  %cd = alloca i8*
  %result5 = alloca i8*
  %saved_errno = alloca i32
  %saved_errno11 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i8* %from_codeset, i8** %from_codeset_addr
  store i8* %to_codeset, i8** %to_codeset_addr
  %1 = load i8** %src_addr, align 8
  %2 = load i8* %1, align 1
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %bb1, label %bb

bb:                                               ; preds = %entry
  %4 = load i8** %from_codeset_addr, align 8
  %5 = load i8** %to_codeset_addr, align 8
  %6 = call i32 @c_strcasecmp(i8* %4, i8* %5) nounwind readonly
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %bb1, label %bb4

bb1:                                              ; preds = %bb, %entry
  %8 = load i8** %src_addr, align 8
  %9 = call noalias i8* @strdup(i8* %8) nounwind
  store i8* %9, i8** %result, align 8
  %10 = load i8** %result, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %12 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %12, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %13 = load i8** %result, align 8
  store i8* %13, i8** %0, align 8
  br label %bb13

bb4:                                              ; preds = %bb
  %14 = load i8** %to_codeset_addr, align 8
  %15 = load i8** %from_codeset_addr, align 8
  %16 = call i8* @iconv_open(i8* %14, i8* %15) nounwind
  store i8* %16, i8** %cd, align 8
  %17 = load i8** %cd, align 8
  %18 = icmp eq i8* %17, inttoptr (i64 -1 to i8*)
  br i1 %18, label %bb6, label %bb7

bb6:                                              ; preds = %bb4
  store i8* null, i8** %0, align 8
  br label %bb13

bb7:                                              ; preds = %bb4
  %19 = load i8** %src_addr, align 8
  %20 = load i8** %cd, align 8
  %21 = call i8* @str_cd_iconv(i8* %19, i8* %20) nounwind
  store i8* %21, i8** %result5, align 8
  %22 = load i8** %result5, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %24 = call i32* @__errno_location() nounwind readnone
  %25 = load i32* %24, align 4
  store i32 %25, i32* %saved_errno, align 4
  %26 = load i8** %cd, align 8
  %27 = call i32 @iconv_close(i8* %26) nounwind
  %28 = call i32* @__errno_location() nounwind readnone
  %29 = load i32* %saved_errno, align 4
  store i32 %29, i32* %28, align 4
  br label %bb12

bb9:                                              ; preds = %bb7
  %30 = load i8** %cd, align 8
  %31 = call i32 @iconv_close(i8* %30) nounwind
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %bb10, label %bb12

bb10:                                             ; preds = %bb9
  %33 = call i32* @__errno_location() nounwind readnone
  %34 = load i32* %33, align 4
  store i32 %34, i32* %saved_errno11, align 4
  %35 = load i8** %result5, align 8
  call void @free(i8* %35) nounwind
  %36 = call i32* @__errno_location() nounwind readnone
  %37 = load i32* %saved_errno11, align 4
  store i32 %37, i32* %36, align 4
  store i8* null, i8** %0, align 8
  br label %bb13

bb12:                                             ; preds = %bb9, %bb8
  %38 = load i8** %result5, align 8
  store i8* %38, i8** %0, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb10, %bb6, %bb3
  %39 = load i8** %0, align 8
  store i8* %39, i8** %retval, align 8
  %retval14 = load i8** %retval
  ret i8* %retval14
}

declare i8* @iconv_open(i8*, i8*)

declare i32 @iconv_close(i8*)

define i64 @strnlen1(i8* %string, i64 %maxlen) nounwind readonly {
entry:
  %string_addr = alloca i8*, align 8
  %maxlen_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %end = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  store i64 %maxlen, i64* %maxlen_addr
  %1 = load i8** %string_addr, align 8
  %2 = load i64* %maxlen_addr, align 8
  %3 = call i8* @memchr(i8* %1, i32 0, i64 %2) nounwind readonly
  store i8* %3, i8** %end, align 8
  %4 = load i8** %end, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = load i8** %end, align 8
  %7 = ptrtoint i8* %6 to i64
  %8 = load i8** %string_addr, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = sub nsw i64 %7, %9
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %0, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %12 = load i64* %maxlen_addr, align 8
  store i64 %12, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %13 = load i64* %0, align 8
  store i64 %13, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define i32 @fd_safer(i32 %fd) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %f = alloca i32
  %e = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  %1 = load i32* %fd_addr, align 4
  %2 = icmp sge i32 %1, 0
  %3 = load i32* %fd_addr, align 4
  %4 = icmp sle i32 %3, 2
  %or.cond = and i1 %2, %4
  br i1 %or.cond, label %bb1, label %bb2

bb1:                                              ; preds = %entry
  %5 = load i32* %fd_addr, align 4
  %6 = call i32 @dup_safer(i32 %5) nounwind
  store i32 %6, i32* %f, align 4
  %7 = call i32* @__errno_location() nounwind readnone
  %8 = load i32* %7, align 4
  store i32 %8, i32* %e, align 4
  %9 = load i32* %fd_addr, align 4
  %10 = call i32 @close(i32 %9) nounwind
  %11 = call i32* @__errno_location() nounwind readnone
  %12 = load i32* %e, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32* %f, align 4
  store i32 %13, i32* %fd_addr, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %entry
  %14 = load i32* %fd_addr, align 4
  store i32 %14, i32* %0, align 4
  %15 = load i32* %0, align 4
  store i32 %15, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @rpl_fclose(%struct.FILE* %fp) nounwind {
entry:
  %fp_addr = alloca %struct.FILE*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %saved_errno = alloca i32
  %fd = alloca i32
  %result = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %fp, %struct.FILE** %fp_addr
  store i32 0, i32* %saved_errno, align 4
  store i32 0, i32* %result, align 4
  %1 = load %struct.FILE** %fp_addr, align 8
  %2 = call i32 bitcast (i32 (%4*)* @fileno_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %1) nounwind
  store i32 %2, i32* %fd, align 4
  %3 = load i32* %fd, align 4
  %4 = icmp slt i32 %3, 0
  %5 = load %struct.FILE** %fp_addr, align 8
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = call i32 bitcast (i32 (%4*)* @fclose to i32 (%struct.FILE*)*)(%struct.FILE* %5) nounwind
  store i32 %6, i32* %0, align 4
  br label %bb8

bb1:                                              ; preds = %entry
  %7 = call i32 bitcast (i32 (%4*)* @__freading to i32 (%struct.FILE*)*)(%struct.FILE* %5) nounwind
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %9 = load %struct.FILE** %fp_addr, align 8
  %10 = call i32 bitcast (i32 (%4*)* @fileno_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %9) nounwind
  %11 = call i64 @lseek(i32 %10, i64 0, i32 1) nounwind
  %12 = icmp ne i64 %11, -1
  br i1 %12, label %bb3, label %bb5

bb3:                                              ; preds = %bb2, %bb1
  %13 = load %struct.FILE** %fp_addr, align 8
  %14 = call i32 @rpl_fflush(%struct.FILE* %13) nounwind
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %16 = call i32* @__errno_location() nounwind readnone
  %17 = load i32* %16, align 4
  store i32 %17, i32* %saved_errno, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3, %bb2
  %18 = load %struct.FILE** %fp_addr, align 8
  %19 = call i32 bitcast (i32 (%4*)* @fclose to i32 (%struct.FILE*)*)(%struct.FILE* %18) nounwind
  store i32 %19, i32* %result, align 4
  %20 = load i32* %saved_errno, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %22 = call i32* @__errno_location() nounwind readnone
  %23 = load i32* %saved_errno, align 4
  store i32 %23, i32* %22, align 4
  store i32 -1, i32* %result, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %24 = load i32* %result, align 4
  store i32 %24, i32* %0, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb
  %25 = load i32* %0, align 4
  store i32 %25, i32* %retval, align 4
  %retval9 = load i32* %retval
  ret i32 %retval9
}

define i32 @rpl_fcntl(i32 %fd, i32 %action, ...) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %action_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %addr.4 = alloca i8*
  %addr.0 = alloca i8*
  %arg = alloca [1 x %struct.__va_list_tag]
  %result = alloca i32
  %target = alloca i32
  %flags = alloca i32
  %saved_errno = alloca i32
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i32 %action, i32* %action_addr
  store i32 -1, i32* %result, align 4
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*
  call void @llvm.va_start(i8* %arg12)
  %1 = load i32* %action_addr, align 4
  %cond = icmp eq i32 %1, 1030
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %3 = getelementptr inbounds %struct.__va_list_tag* %2, i32 0, i32 0
  %4 = load i32* %3, align 8
  %5 = icmp uge i32 %4, 48
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  br i1 %cond, label %bb, label %bb19

bb:                                               ; preds = %entry
  br i1 %5, label %bb4, label %bb3

bb3:                                              ; preds = %bb
  %7 = getelementptr inbounds %struct.__va_list_tag* %6, i32 0, i32 3
  %8 = load i8** %7, align 8
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %10 = getelementptr inbounds %struct.__va_list_tag* %9, i32 0, i32 0
  %11 = load i32* %10, align 8
  %12 = inttoptr i32 %11 to i8*
  %13 = ptrtoint i8* %8 to i64
  %14 = ptrtoint i8* %12 to i64
  %15 = add i64 %13, %14
  %16 = inttoptr i64 %15 to i8*
  store i8* %16, i8** %addr.0, align 8
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %18 = getelementptr inbounds %struct.__va_list_tag* %17, i32 0, i32 0
  %19 = load i32* %18, align 8
  %20 = add i32 %19, 8
  %21 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %22 = getelementptr inbounds %struct.__va_list_tag* %21, i32 0, i32 0
  store i32 %20, i32* %22, align 8
  br label %bb5

bb4:                                              ; preds = %bb
  %23 = getelementptr inbounds %struct.__va_list_tag* %6, i32 0, i32 2
  %24 = load i8** %23, align 8
  store i8* %24, i8** %addr.0, align 8
  %25 = getelementptr inbounds i8* %24, i64 8
  %26 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %27 = getelementptr inbounds %struct.__va_list_tag* %26, i32 0, i32 2
  store i8* %25, i8** %27, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %28 = load i8** %addr.0, align 8
  %29 = bitcast i8* %28 to i32*
  %30 = load i32* %29, align 4
  store i32 %30, i32* %target, align 4
  %31 = load i32* @have_dupfd_cloexec.2627, align 4
  %32 = icmp sge i32 %31, 0
  %33 = load i32* %fd_addr, align 4
  br i1 %32, label %bb6, label %bb12

bb6:                                              ; preds = %bb5
  %34 = load i32* %action_addr, align 4
  %35 = load i32* %target, align 4
  %36 = call i32 (i32, i32, ...)* @fcntl(i32 %33, i32 %34, i32 %35) nounwind
  store i32 %36, i32* %result, align 4
  %37 = load i32* %result, align 4
  %38 = icmp sge i32 %37, 0
  br i1 %38, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  %39 = call i32* @__errno_location() nounwind readnone
  %40 = load i32* %39, align 4
  %41 = icmp ne i32 %40, 22
  br i1 %41, label %bb8, label %bb9

bb8:                                              ; preds = %bb7, %bb6
  store i32 1, i32* @have_dupfd_cloexec.2627, align 4
  br label %bb13

bb9:                                              ; preds = %bb7
  %42 = load i32* %fd_addr, align 4
  %43 = load i32* %target, align 4
  %44 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %42, i32 0, i32 %43) nounwind
  store i32 %44, i32* %result, align 4
  %45 = load i32* %result, align 4
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %bb23, label %bb10

bb10:                                             ; preds = %bb9
  store i32 -1, i32* @have_dupfd_cloexec.2627, align 4
  br label %bb13

bb12:                                             ; preds = %bb5
  %47 = load i32* %target, align 4
  %48 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %33, i32 0, i32 %47) nounwind
  store i32 %48, i32* %result, align 4
  br label %bb13

bb13:                                             ; preds = %bb8, %bb10, %bb12
  %49 = load i32* %result, align 4
  %50 = icmp sge i32 %49, 0
  %51 = load i32* @have_dupfd_cloexec.2627, align 4
  %52 = icmp eq i32 %51, -1
  %or.cond = and i1 %50, %52
  br i1 %or.cond, label %bb15, label %bb23

bb15:                                             ; preds = %bb13
  %53 = load i32* %result, align 4
  %54 = call i32 (i32, i32, ...)* @fcntl(i32 %53, i32 1) nounwind
  store i32 %54, i32* %flags, align 4
  %55 = load i32* %flags, align 4
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %bb17, label %bb16

bb16:                                             ; preds = %bb15
  %57 = load i32* %flags, align 4
  %58 = or i32 %57, 1
  %59 = load i32* %result, align 4
  %60 = call i32 (i32, i32, ...)* @fcntl(i32 %59, i32 2, i32 %58) nounwind
  %61 = icmp eq i32 %60, -1
  br i1 %61, label %bb17, label %bb23

bb17:                                             ; preds = %bb16, %bb15
  %62 = call i32* @__errno_location() nounwind readnone
  %63 = load i32* %62, align 4
  store i32 %63, i32* %saved_errno, align 4
  %64 = load i32* %result, align 4
  %65 = call i32 @close(i32 %64) nounwind
  %66 = call i32* @__errno_location() nounwind readnone
  %67 = load i32* %saved_errno, align 4
  store i32 %67, i32* %66, align 4
  store i32 -1, i32* %result, align 4
  br label %bb23

bb19:                                             ; preds = %entry
  br i1 %5, label %bb21, label %bb20

bb20:                                             ; preds = %bb19
  %68 = getelementptr inbounds %struct.__va_list_tag* %6, i32 0, i32 3
  %69 = load i8** %68, align 8
  %70 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %71 = getelementptr inbounds %struct.__va_list_tag* %70, i32 0, i32 0
  %72 = load i32* %71, align 8
  %73 = inttoptr i32 %72 to i8*
  %74 = ptrtoint i8* %69 to i64
  %75 = ptrtoint i8* %73 to i64
  %76 = add i64 %74, %75
  %77 = inttoptr i64 %76 to i8*
  store i8* %77, i8** %addr.4, align 8
  %78 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %79 = getelementptr inbounds %struct.__va_list_tag* %78, i32 0, i32 0
  %80 = load i32* %79, align 8
  %81 = add i32 %80, 8
  %82 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %83 = getelementptr inbounds %struct.__va_list_tag* %82, i32 0, i32 0
  store i32 %81, i32* %83, align 8
  br label %bb22

bb21:                                             ; preds = %bb19
  %84 = getelementptr inbounds %struct.__va_list_tag* %6, i32 0, i32 2
  %85 = load i8** %84, align 8
  store i8* %85, i8** %addr.4, align 8
  %86 = getelementptr inbounds i8* %85, i64 8
  %87 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %88 = getelementptr inbounds %struct.__va_list_tag* %87, i32 0, i32 2
  store i8* %86, i8** %88, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb20
  %89 = load i8** %addr.4, align 8
  %90 = bitcast i8* %89 to i8**
  %91 = load i8** %90, align 8
  store i8* %91, i8** %p, align 8
  %92 = load i32* %fd_addr, align 4
  %93 = load i32* %action_addr, align 4
  %94 = load i8** %p, align 8
  %95 = call i32 (i32, i32, ...)* @fcntl(i32 %92, i32 %93, i8* %94) nounwind
  store i32 %95, i32* %result, align 4
  br label %bb23

bb23:                                             ; preds = %bb13, %bb16, %bb17, %bb22, %bb9
  %arg24 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*
  %arg2425 = bitcast %struct.__va_list_tag* %arg24 to i8*
  call void @llvm.va_end(i8* %arg2425)
  %96 = load i32* %result, align 4
  store i32 %96, i32* %0, align 4
  %97 = load i32* %0, align 4
  store i32 %97, i32* %retval, align 4
  %retval26 = load i32* %retval
  ret i32 %retval26
}

define internal void @clear_ungetc_buffer_preserving_position(%struct.FILE* %fp) nounwind {
entry:
  %fp_addr = alloca %struct.FILE*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %fp, %struct.FILE** %fp_addr
  %0 = load %struct.FILE** %fp_addr, align 8
  %1 = getelementptr inbounds %struct.FILE* %0, i32 0, i32 0
  %2 = load i32* %1, align 8
  %3 = and i32 %2, 256
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %bb, label %return

bb:                                               ; preds = %entry
  %5 = load %struct.FILE** %fp_addr, align 8
  %6 = call i32 @rpl_fseeko(%struct.FILE* %5, i64 0, i32 1) nounwind
  br label %return

return:                                           ; preds = %entry, %bb
  ret void
}

define i32 @rpl_fflush(%struct.FILE* %stream) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  %1 = load %struct.FILE** %stream_addr, align 8
  %2 = icmp eq %struct.FILE* %1, null
  br i1 %2, label %bb1, label %bb

bb:                                               ; preds = %entry
  %3 = load %struct.FILE** %stream_addr, align 8
  %4 = call i32 bitcast (i32 (%4*)* @__freading to i32 (%struct.FILE*)*)(%struct.FILE* %3) nounwind
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  %6 = load %struct.FILE** %stream_addr, align 8
  %7 = call i32 bitcast (i32 (%4*)* @fflush_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %6) nounwind
  store i32 %7, i32* %0, align 4
  br label %bb3

bb2:                                              ; preds = %bb
  %8 = load %struct.FILE** %stream_addr, align 8
  call void @clear_ungetc_buffer_preserving_position(%struct.FILE* %8) nounwind
  %9 = load %struct.FILE** %stream_addr, align 8
  %10 = call i32 bitcast (i32 (%4*)* @fflush_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %9) nounwind
  store i32 %10, i32* %0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval4 = load i32* %retval
  ret i32 %retval4
}

define i32 @rpl_fseeko(%struct.FILE* %fp, i64 %offset, i32 %whence) nounwind {
entry:
  %fp_addr = alloca %struct.FILE*, align 8
  %offset_addr = alloca i64, align 8
  %whence_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %pos = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %fp, %struct.FILE** %fp_addr
  store i64 %offset, i64* %offset_addr
  store i32 %whence, i32* %whence_addr
  %1 = load %struct.FILE** %fp_addr, align 8
  %2 = getelementptr inbounds %struct.FILE* %1, i32 0, i32 2
  %3 = load i8** %2, align 8
  %4 = load %struct.FILE** %fp_addr, align 8
  %5 = getelementptr inbounds %struct.FILE* %4, i32 0, i32 1
  %6 = load i8** %5, align 8
  %7 = icmp eq i8* %3, %6
  br i1 %7, label %bb, label %bb5

bb:                                               ; preds = %entry
  %8 = load %struct.FILE** %fp_addr, align 8
  %9 = getelementptr inbounds %struct.FILE* %8, i32 0, i32 5
  %10 = load i8** %9, align 8
  %11 = load %struct.FILE** %fp_addr, align 8
  %12 = getelementptr inbounds %struct.FILE* %11, i32 0, i32 4
  %13 = load i8** %12, align 8
  %14 = icmp eq i8* %10, %13
  br i1 %14, label %bb1, label %bb5

bb1:                                              ; preds = %bb
  %15 = load %struct.FILE** %fp_addr, align 8
  %16 = getelementptr inbounds %struct.FILE* %15, i32 0, i32 9
  %17 = load i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %bb2, label %bb5

bb2:                                              ; preds = %bb1
  %19 = load %struct.FILE** %fp_addr, align 8
  %20 = call i32 bitcast (i32 (%4*)* @fileno_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %19) nounwind
  %21 = load i64* %offset_addr, align 8
  %22 = load i32* %whence_addr, align 4
  %23 = call i64 @lseek(i32 %20, i64 %21, i32 %22) nounwind
  store i64 %23, i64* %pos, align 8
  %24 = load i64* %pos, align 8
  %25 = icmp eq i64 %24, -1
  br i1 %25, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i32 -1, i32* %0, align 4
  br label %bb6

bb4:                                              ; preds = %bb2
  %26 = load %struct.FILE** %fp_addr, align 8
  %27 = getelementptr inbounds %struct.FILE* %26, i32 0, i32 0
  %28 = load i32* %27, align 8
  %29 = and i32 %28, -17
  %30 = load %struct.FILE** %fp_addr, align 8
  %31 = getelementptr inbounds %struct.FILE* %30, i32 0, i32 0
  store i32 %29, i32* %31, align 8
  %32 = load %struct.FILE** %fp_addr, align 8
  %33 = getelementptr inbounds %struct.FILE* %32, i32 0, i32 21
  %34 = load i64* %pos, align 8
  store i64 %34, i64* %33, align 8
  store i32 0, i32* %0, align 4
  br label %bb6

bb5:                                              ; preds = %bb1, %bb, %entry
  %35 = load %struct.FILE** %fp_addr, align 8
  %36 = load i64* %offset_addr, align 8
  %37 = load i32* %whence_addr, align 4
  %38 = call i32 bitcast (i32 (%4*, i64, i32)* @fseek to i32 (%struct.FILE*, i64, i32)*)(%struct.FILE* %35, i64 %36, i32 %37) nounwind
  store i32 %38, i32* %0, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4, %bb3
  %39 = load i32* %0, align 4
  store i32 %39, i32* %retval, align 4
  %retval7 = load i32* %retval
  ret i32 %retval7
}

define internal signext i8 @decimal_point_char() nounwind {
entry:
  %retval = alloca i32
  %iftmp.1 = alloca i32
  %0 = alloca i32
  %point = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  %1 = call i8* @nl_langinfo(i32 65536) nounwind
  store i8* %1, i8** %point, align 8
  %2 = load i8** %point, align 8
  %3 = getelementptr inbounds i8* %2, i64 0
  %4 = load i8* %3, align 1
  %5 = icmp ne i8 %4, 0
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = load i8** %point, align 8
  %7 = getelementptr inbounds i8* %6, i64 0
  %8 = load i8* %7, align 1
  %9 = sext i8 %8 to i32
  store i32 %9, i32* %iftmp.1, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 46, i32* %iftmp.1, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %10 = load i32* %iftmp.1, align 4
  store i32 %10, i32* %0, align 4
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define internal i32 @is_infinite_or_zerol(x86_fp80 %x) nounwind {
entry:
  %x_addr = alloca x86_fp80, align 16
  %retval = alloca i32
  %iftmp.2 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store x86_fp80 %x, x86_fp80* %x_addr
  %1 = load x86_fp80* %x_addr, align 16
  %2 = call i32 @rpl_isnanl(x86_fp80 %1) nounwind
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %bb1, label %bb

bb:                                               ; preds = %entry
  %4 = load x86_fp80* %x_addr, align 16
  %5 = fmul x86_fp80 %4, 0xK40008000000000000000
  %6 = load x86_fp80* %x_addr, align 16
  %7 = fcmp oeq x86_fp80 %5, %6
  br i1 %7, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  store i32 1, i32* %iftmp.2, align 4
  br label %bb3

bb2:                                              ; preds = %bb
  store i32 0, i32* %iftmp.2, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %8 = load i32* %iftmp.2, align 4
  store i32 %8, i32* %0, align 4
  %9 = load i32* %0, align 4
  store i32 %9, i32* %retval, align 4
  %retval4 = load i32* %retval
  ret i32 %retval4
}

define i8* @vasnprintf(i8* %resultbuf, i64* %lengthp, i8* %format, %struct.__va_list_tag* %args) nounwind {
entry:
  %resultbuf_addr = alloca i8*, align 8
  %lengthp_addr = alloca i64*, align 8
  %format_addr = alloca i8*, align 8
  %args_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i8*
  %iftmp.48 = alloca i64
  %iftmp.47 = alloca i64
  %iftmp.44 = alloca i64
  %iftmp.43 = alloca i64
  %iftmp.39 = alloca i64
  %iftmp.36 = alloca i32
  %iftmp.35 = alloca i32
  %iftmp.28 = alloca i64
  %iftmp.27 = alloca i64
  %iftmp.23 = alloca i64
  %iftmp.22 = alloca i64
  %iftmp.15 = alloca i64
  %0 = alloca i32
  %1 = alloca i16
  %iftmp.13 = alloca i64
  %iftmp.12 = alloca i64
  %iftmp.8 = alloca i64
  %iftmp.7 = alloca i64
  %iftmp.5 = alloca i64
  %iftmp.4 = alloca i64
  %2 = alloca i8*
  %d = alloca %struct.char_directives
  %a = alloca %struct.arguments
  %buf_neededlength = alloca i64
  %buf = alloca i8*
  %buf_malloced = alloca i8*
  %cp = alloca i8*
  %i = alloca i64
  %dp = alloca %struct.char_directive*
  %result = alloca i8*
  %allocated = alloca i64
  %length = alloca i64
  %buf_memsize = alloca i64
  %n = alloca i64
  %augmented_length = alloca i64
  %memory_size = alloca i64
  %memory = alloca i8*
  %augmented_length40 = alloca i64
  %memory_size44 = alloca i64
  %memory45 = alloca i8*
  %flags = alloca i32
  %has_width = alloca i32
  %width = alloca i64
  %has_precision = alloca i32
  %precision = alloca i64
  %tmp_length = alloca i64
  %tmpbuf = alloca [700 x i8]
  %tmp = alloca i8*
  %pad_ptr = alloca i8*
  %p = alloca i8*
  %arg = alloca i32
  %digitp = alloca i8*
  %arg102 = alloca i32
  %digitp108 = alloca i8*
  %tmp_memsize = alloca i64
  %arg129 = alloca x86_fp80
  %sign = alloca i32
  %oldcw = alloca i16
  %_cw = alloca i16
  %_ncw = alloca i16
  %_m = alloca %union.argvalue_t
  %ndigits = alloca i64
  %_ncw188 = alloca i16
  %pad = alloca i64
  %end = alloca i8*
  %q = alloca i8*
  %q206 = alloca i8*
  %count = alloca i64
  %n217 = alloca i64
  %memory_size219 = alloca i64
  %memory220 = alloca i8*
  %type = alloca i32
  %flags243 = alloca i32
  %fbp = alloca i8*
  %prefix_count = alloca i32
  %prefixes = alloca [2 x i32]
  %orig_errno = alloca i32
  %n259 = alloca i64
  %n262 = alloca i64
  %memory_size277 = alloca i64
  %memory278 = alloca i8*
  %count298 = alloca i32
  %retcount = alloca i32
  %maxlen = alloca i64
  %arg302 = alloca i32
  %arg309 = alloca i32
  %arg316 = alloca i32
  %arg323 = alloca i32
  %arg330 = alloca i32
  %arg337 = alloca i32
  %arg344 = alloca i64
  %arg351 = alloca i64
  %arg358 = alloca i64
  %arg365 = alloca i64
  %arg372 = alloca double
  %arg379 = alloca x86_fp80
  %arg386 = alloca i32
  %arg393 = alloca i32
  %arg400 = alloca i8*
  %arg407 = alloca i32*
  %arg414 = alloca i8*
  %saved_errno = alloca i32
  %n453 = alloca i64
  %memory_size458 = alloca i64
  %memory459 = alloca i8*
  %memory_size483 = alloca i64
  %memory484 = alloca i8*
  %memory505 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %resultbuf, i8** %resultbuf_addr
  store i64* %lengthp, i64** %lengthp_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args_addr
  %3 = load i8** %format_addr, align 8
  %4 = call i32 @printf_parse(i8* %3, %struct.char_directives* %d, %struct.arguments* %a) nounwind
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8* null, i8** %2, align 8
  br label %bb531

bb1:                                              ; preds = %entry
  %6 = load %struct.__va_list_tag** %args_addr, align 8
  %7 = call i32 @printf_fetchargs(%struct.__va_list_tag* %6, %struct.arguments* %a) nounwind
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %bb2, label %bb7

bb2:                                              ; preds = %bb1
  %9 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 1
  %10 = load %struct.char_directive** %9, align 8
  %11 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 4
  %12 = getelementptr inbounds [7 x %struct.char_directive]* %11, i64 0, i64 0
  %13 = icmp ne %struct.char_directive* %10, %12
  br i1 %13, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 1
  %15 = load %struct.char_directive** %14, align 8
  %16 = bitcast %struct.char_directive* %15 to i8*
  call void @free(i8* %16) nounwind
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %17 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %18 = load %struct.argument** %17, align 8
  %19 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 2
  %20 = getelementptr inbounds [7 x %struct.argument]* %19, i64 0, i64 0
  %21 = icmp ne %struct.argument* %18, %20
  br i1 %21, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %22 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %23 = load %struct.argument** %22, align 8
  %24 = bitcast %struct.argument* %23 to i8*
  call void @free(i8* %24) nounwind
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %25 = call i32* @__errno_location() nounwind readnone
  store i32 22, i32* %25, align 4
  store i8* null, i8** %2, align 8
  br label %bb531

bb7:                                              ; preds = %bb1
  %26 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 3
  %27 = load i64* %26, align 8
  %28 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 2
  %29 = load i64* %28, align 8
  %30 = call i64 @xsum4(i64 7, i64 %29, i64 %27, i64 6) nounwind readonly
  store i64 %30, i64* %buf_neededlength, align 8
  %31 = load i64* %buf_neededlength, align 8
  %32 = icmp ule i64 %31, 3999
  %33 = load i64* %buf_neededlength, align 8
  br i1 %32, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %34 = alloca i8, i64 %33, align 1
  store i8* %34, i8** %buf, align 8
  store i8* null, i8** %buf_malloced, align 8
  br label %bb12

bb9:                                              ; preds = %bb7
  store i64 %33, i64* %buf_memsize, align 8
  %35 = load i64* %buf_memsize, align 8
  %36 = icmp eq i64 %35, -1
  br i1 %36, label %out_of_memory_1, label %bb10

bb10:                                             ; preds = %bb9
  %37 = load i64* %buf_memsize, align 8
  %38 = call noalias i8* @malloc(i64 %37) nounwind
  store i8* %38, i8** %buf, align 8
  %39 = load i8** %buf, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %out_of_memory_1, label %bb11

bb11:                                             ; preds = %bb10
  %41 = load i8** %buf, align 8
  store i8* %41, i8** %buf_malloced, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb8
  %42 = load i8** %resultbuf_addr, align 8
  %43 = icmp ne i8* %42, null
  br i1 %43, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %44 = load i8** %resultbuf_addr, align 8
  store i8* %44, i8** %result, align 8
  %45 = load i64** %lengthp_addr, align 8
  %46 = load i64* %45, align 8
  store i64 %46, i64* %allocated, align 8
  br label %bb15

bb14:                                             ; preds = %bb12
  store i8* null, i8** %result, align 8
  store i64 0, i64* %allocated, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  store i64 0, i64* %length, align 8
  %47 = load i8** %format_addr, align 8
  store i8* %47, i8** %cp, align 8
  store i64 0, i64* %i, align 8
  %48 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 1
  %49 = load %struct.char_directive** %48, align 8
  %50 = getelementptr inbounds %struct.char_directive* %49, i64 0
  store %struct.char_directive* %50, %struct.char_directive** %dp, align 8
  br label %bb16

bb16:                                             ; preds = %bb480, %bb15
  %51 = load %struct.char_directive** %dp, align 8
  %52 = getelementptr inbounds %struct.char_directive* %51, i32 0, i32 0
  %53 = load i8** %52, align 8
  %54 = load i8** %cp, align 8
  %55 = icmp ne i8* %53, %54
  br i1 %55, label %bb17, label %bb37

bb17:                                             ; preds = %bb16
  %56 = load %struct.char_directive** %dp, align 8
  %57 = getelementptr inbounds %struct.char_directive* %56, i32 0, i32 0
  %58 = load i8** %57, align 8
  %59 = ptrtoint i8* %58 to i64
  %60 = load i8** %cp, align 8
  %61 = ptrtoint i8* %60 to i64
  %62 = sub nsw i64 %59, %61
  store i64 %62, i64* %n, align 8
  %63 = load i64* %length, align 8
  %64 = load i64* %n, align 8
  %65 = call i64 @xsum(i64 %63, i64 %64) nounwind readonly
  store i64 %65, i64* %augmented_length, align 8
  %66 = load i64* %augmented_length, align 8
  %67 = load i64* %allocated, align 8
  %68 = icmp ugt i64 %66, %67
  br i1 %68, label %bb18, label %bb36

bb18:                                             ; preds = %bb17
  %69 = load i64* %allocated, align 8
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %bb19, label %bb23

bb19:                                             ; preds = %bb18
  %71 = load i64* %allocated, align 8
  %72 = icmp sge i64 %71, 0
  br i1 %72, label %bb20, label %bb21

bb20:                                             ; preds = %bb19
  %73 = load i64* %allocated, align 8
  %74 = mul i64 %73, 2
  store i64 %74, i64* %iftmp.5, align 8
  br label %bb22

bb21:                                             ; preds = %bb19
  store i64 -1, i64* %iftmp.5, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb20
  %75 = load i64* %iftmp.5, align 8
  store i64 %75, i64* %iftmp.4, align 8
  br label %bb24

bb23:                                             ; preds = %bb18
  store i64 12, i64* %iftmp.4, align 8
  br label %bb24

bb24:                                             ; preds = %bb23, %bb22
  %76 = load i64* %iftmp.4, align 8
  store i64 %76, i64* %allocated, align 8
  %77 = load i64* %augmented_length, align 8
  %78 = load i64* %allocated, align 8
  %79 = icmp ugt i64 %77, %78
  br i1 %79, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  %80 = load i64* %augmented_length, align 8
  store i64 %80, i64* %allocated, align 8
  br label %bb26

bb26:                                             ; preds = %bb25, %bb24
  %81 = load i64* %allocated, align 8
  store i64 %81, i64* %memory_size, align 8
  %82 = load i64* %memory_size, align 8
  %83 = icmp eq i64 %82, -1
  br i1 %83, label %out_of_memory, label %bb27

bb27:                                             ; preds = %bb26
  %84 = load i8** %result, align 8
  %85 = load i8** %resultbuf_addr, align 8
  %86 = icmp eq i8* %84, %85
  %87 = load i8** %result, align 8
  %88 = icmp eq i8* %87, null
  %or.cond = or i1 %86, %88
  br i1 %or.cond, label %bb29, label %bb30

bb29:                                             ; preds = %bb27
  %89 = load i64* %memory_size, align 8
  %90 = call noalias i8* @malloc(i64 %89) nounwind
  store i8* %90, i8** %memory, align 8
  br label %bb31

bb30:                                             ; preds = %bb27
  %91 = load i8** %result, align 8
  %92 = load i64* %memory_size, align 8
  %93 = call i8* @realloc(i8* %91, i64 %92) nounwind
  store i8* %93, i8** %memory, align 8
  br label %bb31

bb31:                                             ; preds = %bb30, %bb29
  %94 = load i8** %memory, align 8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %out_of_memory, label %bb32

bb32:                                             ; preds = %bb31
  %96 = load i8** %result, align 8
  %97 = load i8** %resultbuf_addr, align 8
  %98 = icmp eq i8* %96, %97
  br i1 %98, label %bb33, label %bb35

bb33:                                             ; preds = %bb32
  %99 = load i64* %length, align 8
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %bb34, label %bb35

bb34:                                             ; preds = %bb33
  %101 = load i8** %memory, align 8
  %102 = load i8** %result, align 8
  %103 = load i64* %length, align 8
  %104 = call i8* @memcpy(i8* %101, i8* %102, i64 %103)
  br label %bb35

bb35:                                             ; preds = %bb34, %bb33, %bb32
  %105 = load i8** %memory, align 8
  store i8* %105, i8** %result, align 8
  br label %bb36

bb36:                                             ; preds = %bb35, %bb17
  %106 = load i8** %result, align 8
  %107 = load i64* %length, align 8
  %108 = getelementptr inbounds i8* %106, i64 %107
  %109 = load i8** %cp, align 8
  %110 = load i64* %n, align 8
  %111 = call i8* @memcpy(i8* %108, i8* %109, i64 %110)
  %112 = load i64* %augmented_length, align 8
  store i64 %112, i64* %length, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb16
  %113 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 0
  %114 = load i64* %113, align 8
  %115 = load i64* %i, align 8
  %116 = icmp eq i64 %114, %115
  br i1 %116, label %bb481, label %bb38

bb38:                                             ; preds = %bb37
  %117 = load %struct.char_directive** %dp, align 8
  %118 = getelementptr inbounds %struct.char_directive* %117, i32 0, i32 9
  %119 = load i8* %118, align 8
  %120 = icmp eq i8 %119, 37
  %121 = load %struct.char_directive** %dp, align 8
  %122 = getelementptr inbounds %struct.char_directive* %121, i32 0, i32 10
  %123 = load i64* %122, align 8
  br i1 %120, label %bb39, label %bb64

bb39:                                             ; preds = %bb38
  %124 = icmp ne i64 %123, -1
  br i1 %124, label %bb41, label %bb42

bb41:                                             ; preds = %bb39
  call void @abort() noreturn nounwind
  unreachable

bb42:                                             ; preds = %bb39
  %125 = load i64* %length, align 8
  %126 = call i64 @xsum(i64 %125, i64 1) nounwind readonly
  store i64 %126, i64* %augmented_length40, align 8
  %127 = load i64* %augmented_length40, align 8
  %128 = load i64* %allocated, align 8
  %129 = icmp ugt i64 %127, %128
  br i1 %129, label %bb43, label %bb63

bb43:                                             ; preds = %bb42
  %130 = load i64* %allocated, align 8
  %131 = icmp ne i64 %130, 0
  br i1 %131, label %bb46, label %bb50

bb46:                                             ; preds = %bb43
  %132 = load i64* %allocated, align 8
  %133 = icmp sge i64 %132, 0
  br i1 %133, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  %134 = load i64* %allocated, align 8
  %135 = mul i64 %134, 2
  store i64 %135, i64* %iftmp.8, align 8
  br label %bb49

bb48:                                             ; preds = %bb46
  store i64 -1, i64* %iftmp.8, align 8
  br label %bb49

bb49:                                             ; preds = %bb48, %bb47
  %136 = load i64* %iftmp.8, align 8
  store i64 %136, i64* %iftmp.7, align 8
  br label %bb51

bb50:                                             ; preds = %bb43
  store i64 12, i64* %iftmp.7, align 8
  br label %bb51

bb51:                                             ; preds = %bb50, %bb49
  %137 = load i64* %iftmp.7, align 8
  store i64 %137, i64* %allocated, align 8
  %138 = load i64* %augmented_length40, align 8
  %139 = load i64* %allocated, align 8
  %140 = icmp ugt i64 %138, %139
  br i1 %140, label %bb52, label %bb53

bb52:                                             ; preds = %bb51
  %141 = load i64* %augmented_length40, align 8
  store i64 %141, i64* %allocated, align 8
  br label %bb53

bb53:                                             ; preds = %bb52, %bb51
  %142 = load i64* %allocated, align 8
  store i64 %142, i64* %memory_size44, align 8
  %143 = load i64* %memory_size44, align 8
  %144 = icmp eq i64 %143, -1
  br i1 %144, label %out_of_memory, label %bb54

bb54:                                             ; preds = %bb53
  %145 = load i8** %result, align 8
  %146 = load i8** %resultbuf_addr, align 8
  %147 = icmp eq i8* %145, %146
  %148 = load i8** %result, align 8
  %149 = icmp eq i8* %148, null
  %or.cond3 = or i1 %147, %149
  br i1 %or.cond3, label %bb56, label %bb57

bb56:                                             ; preds = %bb54
  %150 = load i64* %memory_size44, align 8
  %151 = call noalias i8* @malloc(i64 %150) nounwind
  store i8* %151, i8** %memory45, align 8
  br label %bb58

bb57:                                             ; preds = %bb54
  %152 = load i8** %result, align 8
  %153 = load i64* %memory_size44, align 8
  %154 = call i8* @realloc(i8* %152, i64 %153) nounwind
  store i8* %154, i8** %memory45, align 8
  br label %bb58

bb58:                                             ; preds = %bb57, %bb56
  %155 = load i8** %memory45, align 8
  %156 = icmp eq i8* %155, null
  br i1 %156, label %out_of_memory, label %bb59

bb59:                                             ; preds = %bb58
  %157 = load i8** %result, align 8
  %158 = load i8** %resultbuf_addr, align 8
  %159 = icmp eq i8* %157, %158
  br i1 %159, label %bb60, label %bb62

bb60:                                             ; preds = %bb59
  %160 = load i64* %length, align 8
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %bb61, label %bb62

bb61:                                             ; preds = %bb60
  %162 = load i8** %memory45, align 8
  %163 = load i8** %result, align 8
  %164 = load i64* %length, align 8
  %165 = call i8* @memcpy(i8* %162, i8* %163, i64 %164)
  br label %bb62

bb62:                                             ; preds = %bb61, %bb60, %bb59
  %166 = load i8** %memory45, align 8
  store i8* %166, i8** %result, align 8
  br label %bb63

bb63:                                             ; preds = %bb62, %bb42
  %167 = load i8** %result, align 8
  %168 = load i64* %length, align 8
  %169 = getelementptr inbounds i8* %167, i64 %168
  store i8 37, i8* %169, align 1
  %170 = load i64* %augmented_length40, align 8
  store i64 %170, i64* %length, align 8
  br label %bb480

bb64:                                             ; preds = %bb38
  %171 = icmp eq i64 %123, -1
  br i1 %171, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  call void @abort() noreturn nounwind
  unreachable

bb66:                                             ; preds = %bb64
  %172 = load %struct.char_directive** %dp, align 8
  %173 = getelementptr inbounds %struct.char_directive* %172, i32 0, i32 9
  %174 = load i8* %173, align 8
  %175 = icmp eq i8 %174, 110
  br i1 %175, label %bb67, label %bb75

bb67:                                             ; preds = %bb66
  %176 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %177 = load %struct.argument** %176, align 8
  %178 = load %struct.char_directive** %dp, align 8
  %179 = getelementptr inbounds %struct.char_directive* %178, i32 0, i32 10
  %180 = load i64* %179, align 8
  %181 = getelementptr inbounds %struct.argument* %177, i64 %180
  %182 = getelementptr inbounds %struct.argument* %181, i32 0, i32 0
  %183 = load i32* %182, align 16
  switch i32 %183, label %bb73 [
    i32 18, label %bb68
    i32 19, label %bb69
    i32 20, label %bb70
    i32 21, label %bb71
    i32 22, label %bb72
  ]

bb68:                                             ; preds = %bb67
  %184 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %185 = load %struct.argument** %184, align 8
  %186 = load %struct.char_directive** %dp, align 8
  %187 = getelementptr inbounds %struct.char_directive* %186, i32 0, i32 10
  %188 = load i64* %187, align 8
  %189 = getelementptr inbounds %struct.argument* %185, i64 %188
  %190 = getelementptr inbounds %struct.argument* %189, i32 0, i32 1
  %191 = getelementptr inbounds %union.argvalue_t* %190, i32 0, i32 0
  %192 = bitcast x86_fp80* %191 to i8**
  %193 = load i8** %192, align 16
  %194 = load i64* %length, align 8
  %195 = trunc i64 %194 to i8
  store i8 %195, i8* %193, align 1
  br label %bb480

bb69:                                             ; preds = %bb67
  %196 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %197 = load %struct.argument** %196, align 8
  %198 = load %struct.char_directive** %dp, align 8
  %199 = getelementptr inbounds %struct.char_directive* %198, i32 0, i32 10
  %200 = load i64* %199, align 8
  %201 = getelementptr inbounds %struct.argument* %197, i64 %200
  %202 = getelementptr inbounds %struct.argument* %201, i32 0, i32 1
  %203 = getelementptr inbounds %union.argvalue_t* %202, i32 0, i32 0
  %204 = bitcast x86_fp80* %203 to i16**
  %205 = load i16** %204, align 16
  %206 = load i64* %length, align 8
  %207 = trunc i64 %206 to i16
  store i16 %207, i16* %205, align 2
  br label %bb480

bb70:                                             ; preds = %bb67
  %208 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %209 = load %struct.argument** %208, align 8
  %210 = load %struct.char_directive** %dp, align 8
  %211 = getelementptr inbounds %struct.char_directive* %210, i32 0, i32 10
  %212 = load i64* %211, align 8
  %213 = getelementptr inbounds %struct.argument* %209, i64 %212
  %214 = getelementptr inbounds %struct.argument* %213, i32 0, i32 1
  %215 = getelementptr inbounds %union.argvalue_t* %214, i32 0, i32 0
  %216 = bitcast x86_fp80* %215 to i32**
  %217 = load i32** %216, align 16
  %218 = load i64* %length, align 8
  %219 = trunc i64 %218 to i32
  store i32 %219, i32* %217, align 4
  br label %bb480

bb71:                                             ; preds = %bb67
  %220 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %221 = load %struct.argument** %220, align 8
  %222 = load %struct.char_directive** %dp, align 8
  %223 = getelementptr inbounds %struct.char_directive* %222, i32 0, i32 10
  %224 = load i64* %223, align 8
  %225 = getelementptr inbounds %struct.argument* %221, i64 %224
  %226 = getelementptr inbounds %struct.argument* %225, i32 0, i32 1
  %227 = getelementptr inbounds %union.argvalue_t* %226, i32 0, i32 0
  %228 = bitcast x86_fp80* %227 to i64**
  %229 = load i64** %228, align 16
  %230 = load i64* %length, align 8
  store i64 %230, i64* %229, align 8
  br label %bb480

bb72:                                             ; preds = %bb67
  %231 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %232 = load %struct.argument** %231, align 8
  %233 = load %struct.char_directive** %dp, align 8
  %234 = getelementptr inbounds %struct.char_directive* %233, i32 0, i32 10
  %235 = load i64* %234, align 8
  %236 = getelementptr inbounds %struct.argument* %232, i64 %235
  %237 = getelementptr inbounds %struct.argument* %236, i32 0, i32 1
  %238 = getelementptr inbounds %union.argvalue_t* %237, i32 0, i32 0
  %239 = bitcast x86_fp80* %238 to i64**
  %240 = load i64** %239, align 16
  %241 = load i64* %length, align 8
  store i64 %241, i64* %240, align 8
  br label %bb480

bb73:                                             ; preds = %bb67
  call void @abort() noreturn nounwind
  unreachable

bb75:                                             ; preds = %bb66
  %242 = load %struct.char_directive** %dp, align 8
  %243 = getelementptr inbounds %struct.char_directive* %242, i32 0, i32 9
  %244 = load i8* %243, align 8
  %245 = icmp eq i8 %244, 102
  br i1 %245, label %bb83, label %bb76

bb76:                                             ; preds = %bb75
  %246 = load %struct.char_directive** %dp, align 8
  %247 = getelementptr inbounds %struct.char_directive* %246, i32 0, i32 9
  %248 = load i8* %247, align 8
  %249 = icmp eq i8 %248, 70
  br i1 %249, label %bb83, label %bb77

bb77:                                             ; preds = %bb76
  %250 = load %struct.char_directive** %dp, align 8
  %251 = getelementptr inbounds %struct.char_directive* %250, i32 0, i32 9
  %252 = load i8* %251, align 8
  %253 = icmp eq i8 %252, 101
  br i1 %253, label %bb83, label %bb78

bb78:                                             ; preds = %bb77
  %254 = load %struct.char_directive** %dp, align 8
  %255 = getelementptr inbounds %struct.char_directive* %254, i32 0, i32 9
  %256 = load i8* %255, align 8
  %257 = icmp eq i8 %256, 69
  br i1 %257, label %bb83, label %bb79

bb79:                                             ; preds = %bb78
  %258 = load %struct.char_directive** %dp, align 8
  %259 = getelementptr inbounds %struct.char_directive* %258, i32 0, i32 9
  %260 = load i8* %259, align 8
  %261 = icmp eq i8 %260, 103
  br i1 %261, label %bb83, label %bb80

bb80:                                             ; preds = %bb79
  %262 = load %struct.char_directive** %dp, align 8
  %263 = getelementptr inbounds %struct.char_directive* %262, i32 0, i32 9
  %264 = load i8* %263, align 8
  %265 = icmp eq i8 %264, 71
  br i1 %265, label %bb83, label %bb81

bb81:                                             ; preds = %bb80
  %266 = load %struct.char_directive** %dp, align 8
  %267 = getelementptr inbounds %struct.char_directive* %266, i32 0, i32 9
  %268 = load i8* %267, align 8
  %269 = icmp eq i8 %268, 97
  br i1 %269, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %270 = load %struct.char_directive** %dp, align 8
  %271 = getelementptr inbounds %struct.char_directive* %270, i32 0, i32 9
  %272 = load i8* %271, align 8
  %273 = icmp eq i8 %272, 65
  br i1 %273, label %bb83, label %bb242

bb83:                                             ; preds = %bb82, %bb81, %bb80, %bb79, %bb78, %bb77, %bb76, %bb75
  %274 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %275 = load %struct.argument** %274, align 8
  %276 = load %struct.char_directive** %dp, align 8
  %277 = getelementptr inbounds %struct.char_directive* %276, i32 0, i32 10
  %278 = load i64* %277, align 8
  %279 = getelementptr inbounds %struct.argument* %275, i64 %278
  %280 = getelementptr inbounds %struct.argument* %279, i32 0, i32 0
  %281 = load i32* %280, align 16
  %282 = icmp ne i32 %281, 12
  br i1 %282, label %bb242, label %bb84

bb84:                                             ; preds = %bb83
  %283 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %284 = load %struct.argument** %283, align 8
  %285 = load %struct.char_directive** %dp, align 8
  %286 = getelementptr inbounds %struct.char_directive* %285, i32 0, i32 10
  %287 = load i64* %286, align 8
  %288 = getelementptr inbounds %struct.argument* %284, i64 %287
  %289 = getelementptr inbounds %struct.argument* %288, i32 0, i32 1
  %290 = getelementptr inbounds %union.argvalue_t* %289, i32 0, i32 0
  %291 = load x86_fp80* %290, align 16
  %292 = call i32 @is_infinite_or_zerol(x86_fp80 %291) nounwind
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %bb242, label %bb85

bb85:                                             ; preds = %bb84
  %294 = load %struct.char_directive** %dp, align 8
  %295 = getelementptr inbounds %struct.char_directive* %294, i32 0, i32 2
  %296 = load i32* %295, align 8
  store i32 %296, i32* %flags, align 4
  store i32 0, i32* %has_width, align 4
  store i64 0, i64* %width, align 8
  %297 = load %struct.char_directive** %dp, align 8
  %298 = getelementptr inbounds %struct.char_directive* %297, i32 0, i32 3
  %299 = load i8** %298, align 8
  %300 = load %struct.char_directive** %dp, align 8
  %301 = getelementptr inbounds %struct.char_directive* %300, i32 0, i32 4
  %302 = load i8** %301, align 8
  %303 = icmp ne i8* %299, %302
  br i1 %303, label %bb86, label %bb99

bb86:                                             ; preds = %bb85
  %304 = load %struct.char_directive** %dp, align 8
  %305 = getelementptr inbounds %struct.char_directive* %304, i32 0, i32 5
  %306 = load i64* %305, align 8
  %307 = icmp ne i64 %306, -1
  br i1 %307, label %bb87, label %bb93

bb87:                                             ; preds = %bb86
  %308 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %309 = load %struct.argument** %308, align 8
  %310 = load %struct.char_directive** %dp, align 8
  %311 = getelementptr inbounds %struct.char_directive* %310, i32 0, i32 5
  %312 = load i64* %311, align 8
  %313 = getelementptr inbounds %struct.argument* %309, i64 %312
  %314 = getelementptr inbounds %struct.argument* %313, i32 0, i32 0
  %315 = load i32* %314, align 16
  %316 = icmp ne i32 %315, 5
  br i1 %316, label %bb88, label %bb89

bb88:                                             ; preds = %bb87
  call void @abort() noreturn nounwind
  unreachable

bb89:                                             ; preds = %bb87
  %317 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %318 = load %struct.argument** %317, align 8
  %319 = load %struct.char_directive** %dp, align 8
  %320 = getelementptr inbounds %struct.char_directive* %319, i32 0, i32 5
  %321 = load i64* %320, align 8
  %322 = getelementptr inbounds %struct.argument* %318, i64 %321
  %323 = getelementptr inbounds %struct.argument* %322, i32 0, i32 1
  %324 = getelementptr inbounds %union.argvalue_t* %323, i32 0, i32 0
  %325 = bitcast x86_fp80* %324 to i32*
  %326 = load i32* %325, align 16
  store i32 %326, i32* %arg, align 4
  %327 = load i32* %arg, align 4
  %328 = icmp slt i32 %327, 0
  br i1 %328, label %bb90, label %bb91

bb90:                                             ; preds = %bb89
  %329 = load i32* %flags, align 4
  %330 = or i32 %329, 2
  store i32 %330, i32* %flags, align 4
  %331 = load i32* %arg, align 4
  %332 = sub nsw i32 0, %331
  %333 = zext i32 %332 to i64
  store i64 %333, i64* %width, align 8
  br label %bb98

bb91:                                             ; preds = %bb89
  %334 = load i32* %arg, align 4
  %335 = sext i32 %334 to i64
  store i64 %335, i64* %width, align 8
  br label %bb98

bb93:                                             ; preds = %bb86
  %336 = load %struct.char_directive** %dp, align 8
  %337 = getelementptr inbounds %struct.char_directive* %336, i32 0, i32 3
  %338 = load i8** %337, align 8
  store i8* %338, i8** %digitp, align 8
  br label %bb94

bb94:                                             ; preds = %bb97, %bb93
  %339 = load i8** %digitp, align 8
  %340 = load i8* %339, align 1
  %341 = sext i8 %340 to i32
  %342 = sub nsw i32 %341, 48
  %343 = sext i32 %342 to i64
  %344 = load i8** %digitp, align 8
  %345 = getelementptr inbounds i8* %344, i64 1
  store i8* %345, i8** %digitp, align 8
  %346 = load i64* %width, align 8
  %347 = icmp ule i64 %346, 1844674407370955161
  br i1 %347, label %bb95, label %bb96

bb95:                                             ; preds = %bb94
  %348 = load i64* %width, align 8
  %349 = mul i64 %348, 10
  store i64 %349, i64* %iftmp.12, align 8
  br label %bb97

bb96:                                             ; preds = %bb94
  store i64 -1, i64* %iftmp.12, align 8
  br label %bb97

bb97:                                             ; preds = %bb96, %bb95
  %350 = load i64* %iftmp.12, align 8
  %351 = call i64 @xsum(i64 %350, i64 %343) nounwind readonly
  store i64 %351, i64* %width, align 8
  %352 = load %struct.char_directive** %dp, align 8
  %353 = getelementptr inbounds %struct.char_directive* %352, i32 0, i32 4
  %354 = load i8** %353, align 8
  %355 = load i8** %digitp, align 8
  %356 = icmp ne i8* %354, %355
  br i1 %356, label %bb94, label %bb98

bb98:                                             ; preds = %bb90, %bb91, %bb97
  store i32 1, i32* %has_width, align 4
  br label %bb99

bb99:                                             ; preds = %bb98, %bb85
  store i32 0, i32* %has_precision, align 4
  store i64 0, i64* %precision, align 8
  %357 = load %struct.char_directive** %dp, align 8
  %358 = getelementptr inbounds %struct.char_directive* %357, i32 0, i32 6
  %359 = load i8** %358, align 8
  %360 = load %struct.char_directive** %dp, align 8
  %361 = getelementptr inbounds %struct.char_directive* %360, i32 0, i32 7
  %362 = load i8** %361, align 8
  %363 = icmp ne i8* %359, %362
  br i1 %363, label %bb100, label %bb115

bb100:                                            ; preds = %bb99
  %364 = load %struct.char_directive** %dp, align 8
  %365 = getelementptr inbounds %struct.char_directive* %364, i32 0, i32 8
  %366 = load i64* %365, align 8
  %367 = icmp ne i64 %366, -1
  br i1 %367, label %bb101, label %bb107

bb101:                                            ; preds = %bb100
  %368 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %369 = load %struct.argument** %368, align 8
  %370 = load %struct.char_directive** %dp, align 8
  %371 = getelementptr inbounds %struct.char_directive* %370, i32 0, i32 8
  %372 = load i64* %371, align 8
  %373 = getelementptr inbounds %struct.argument* %369, i64 %372
  %374 = getelementptr inbounds %struct.argument* %373, i32 0, i32 0
  %375 = load i32* %374, align 16
  %376 = icmp ne i32 %375, 5
  br i1 %376, label %bb103, label %bb104

bb103:                                            ; preds = %bb101
  call void @abort() noreturn nounwind
  unreachable

bb104:                                            ; preds = %bb101
  %377 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %378 = load %struct.argument** %377, align 8
  %379 = load %struct.char_directive** %dp, align 8
  %380 = getelementptr inbounds %struct.char_directive* %379, i32 0, i32 8
  %381 = load i64* %380, align 8
  %382 = getelementptr inbounds %struct.argument* %378, i64 %381
  %383 = getelementptr inbounds %struct.argument* %382, i32 0, i32 1
  %384 = getelementptr inbounds %union.argvalue_t* %383, i32 0, i32 0
  %385 = bitcast x86_fp80* %384 to i32*
  %386 = load i32* %385, align 16
  store i32 %386, i32* %arg102, align 4
  %387 = load i32* %arg102, align 4
  %388 = icmp sge i32 %387, 0
  br i1 %388, label %bb105, label %bb115

bb105:                                            ; preds = %bb104
  %389 = load i32* %arg102, align 4
  %390 = sext i32 %389 to i64
  store i64 %390, i64* %precision, align 8
  store i32 1, i32* %has_precision, align 4
  br label %bb115

bb107:                                            ; preds = %bb100
  %391 = load %struct.char_directive** %dp, align 8
  %392 = getelementptr inbounds %struct.char_directive* %391, i32 0, i32 6
  %393 = load i8** %392, align 8
  %394 = getelementptr inbounds i8* %393, i64 1
  store i8* %394, i8** %digitp108, align 8
  store i64 0, i64* %precision, align 8
  br label %bb113

bb109:                                            ; preds = %bb113
  %395 = load i8** %digitp108, align 8
  %396 = load i8* %395, align 1
  %397 = sext i8 %396 to i32
  %398 = sub nsw i32 %397, 48
  %399 = sext i32 %398 to i64
  %400 = load i8** %digitp108, align 8
  %401 = getelementptr inbounds i8* %400, i64 1
  store i8* %401, i8** %digitp108, align 8
  %402 = load i64* %precision, align 8
  %403 = icmp ule i64 %402, 1844674407370955161
  br i1 %403, label %bb110, label %bb111

bb110:                                            ; preds = %bb109
  %404 = load i64* %precision, align 8
  %405 = mul i64 %404, 10
  store i64 %405, i64* %iftmp.13, align 8
  br label %bb112

bb111:                                            ; preds = %bb109
  store i64 -1, i64* %iftmp.13, align 8
  br label %bb112

bb112:                                            ; preds = %bb111, %bb110
  %406 = load i64* %iftmp.13, align 8
  %407 = call i64 @xsum(i64 %406, i64 %399) nounwind readonly
  store i64 %407, i64* %precision, align 8
  br label %bb113

bb113:                                            ; preds = %bb112, %bb107
  %408 = load %struct.char_directive** %dp, align 8
  %409 = getelementptr inbounds %struct.char_directive* %408, i32 0, i32 7
  %410 = load i8** %409, align 8
  %411 = load i8** %digitp108, align 8
  %412 = icmp ne i8* %410, %411
  br i1 %412, label %bb109, label %bb114

bb114:                                            ; preds = %bb113
  store i32 1, i32* %has_precision, align 4
  br label %bb115

bb115:                                            ; preds = %bb104, %bb105, %bb114, %bb99
  %413 = load i32* %has_precision, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %bb116, label %bb119

bb116:                                            ; preds = %bb115
  %415 = load %struct.char_directive** %dp, align 8
  %416 = getelementptr inbounds %struct.char_directive* %415, i32 0, i32 9
  %417 = load i8* %416, align 8
  %418 = icmp ne i8 %417, 97
  br i1 %418, label %bb117, label %bb119

bb117:                                            ; preds = %bb116
  %419 = load %struct.char_directive** %dp, align 8
  %420 = getelementptr inbounds %struct.char_directive* %419, i32 0, i32 9
  %421 = load i8* %420, align 8
  %422 = icmp ne i8 %421, 65
  br i1 %422, label %bb118, label %bb119

bb118:                                            ; preds = %bb117
  store i64 6, i64* %precision, align 8
  br label %bb119

bb119:                                            ; preds = %bb118, %bb117, %bb116, %bb115
  store i64 0, i64* %tmp_length, align 8
  %423 = load i64* %tmp_length, align 8
  %424 = load i64* %precision, align 8
  %425 = icmp ult i64 %423, %424
  br i1 %425, label %bb120, label %bb121

bb120:                                            ; preds = %bb119
  %426 = load i64* %precision, align 8
  store i64 %426, i64* %tmp_length, align 8
  br label %bb121

bb121:                                            ; preds = %bb120, %bb119
  %427 = load i64* %tmp_length, align 8
  %428 = call i64 @xsum(i64 %427, i64 12) nounwind readonly
  store i64 %428, i64* %tmp_length, align 8
  %429 = load i64* %tmp_length, align 8
  %430 = load i64* %width, align 8
  %431 = icmp ult i64 %429, %430
  br i1 %431, label %bb122, label %bb123

bb122:                                            ; preds = %bb121
  %432 = load i64* %width, align 8
  store i64 %432, i64* %tmp_length, align 8
  br label %bb123

bb123:                                            ; preds = %bb122, %bb121
  %433 = load i64* %tmp_length, align 8
  %434 = call i64 @xsum(i64 %433, i64 1) nounwind readonly
  store i64 %434, i64* %tmp_length, align 8
  %435 = load i64* %tmp_length, align 8
  %436 = icmp ule i64 %435, 700
  br i1 %436, label %bb124, label %bb126

bb124:                                            ; preds = %bb123
  %tmpbuf125 = bitcast [700 x i8]* %tmpbuf to i8*
  store i8* %tmpbuf125, i8** %tmp, align 8
  br label %bb128

bb126:                                            ; preds = %bb123
  %437 = load i64* %tmp_length, align 8
  store i64 %437, i64* %tmp_memsize, align 8
  %438 = load i64* %tmp_memsize, align 8
  %439 = icmp eq i64 %438, -1
  br i1 %439, label %out_of_memory, label %bb127

bb127:                                            ; preds = %bb126
  %440 = load i64* %tmp_memsize, align 8
  %441 = call noalias i8* @malloc(i64 %440) nounwind
  store i8* %441, i8** %tmp, align 8
  %442 = load i8** %tmp, align 8
  %443 = icmp eq i8* %442, null
  br i1 %443, label %out_of_memory, label %bb128

bb128:                                            ; preds = %bb127, %bb124
  store i8* null, i8** %pad_ptr, align 8
  %444 = load i8** %tmp, align 8
  store i8* %444, i8** %p, align 8
  %445 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %446 = load %struct.argument** %445, align 8
  %447 = load %struct.char_directive** %dp, align 8
  %448 = getelementptr inbounds %struct.char_directive* %447, i32 0, i32 10
  %449 = load i64* %448, align 8
  %450 = getelementptr inbounds %struct.argument* %446, i64 %449
  %451 = getelementptr inbounds %struct.argument* %450, i32 0, i32 1
  %452 = getelementptr inbounds %union.argvalue_t* %451, i32 0, i32 0
  %453 = load x86_fp80* %452, align 16
  store x86_fp80 %453, x86_fp80* %arg129, align 16
  %454 = load x86_fp80* %arg129, align 16
  %455 = call i32 @rpl_isnanl(x86_fp80 %454) nounwind
  %456 = icmp ne i32 %455, 0
  br i1 %456, label %bb130, label %bb135

bb130:                                            ; preds = %bb128
  %457 = load %struct.char_directive** %dp, align 8
  %458 = getelementptr inbounds %struct.char_directive* %457, i32 0, i32 9
  %459 = load i8* %458, align 8
  %460 = icmp sle i8 %459, 64
  br i1 %460, label %bb133, label %bb131

bb131:                                            ; preds = %bb130
  %461 = load %struct.char_directive** %dp, align 8
  %462 = getelementptr inbounds %struct.char_directive* %461, i32 0, i32 9
  %463 = load i8* %462, align 8
  %464 = icmp sgt i8 %463, 90
  br i1 %464, label %bb133, label %bb132

bb132:                                            ; preds = %bb131
  %465 = load i8** %p, align 8
  store i8 78, i8* %465, align 1
  %466 = load i8** %p, align 8
  %467 = getelementptr inbounds i8* %466, i64 1
  store i8* %467, i8** %p, align 8
  %468 = load i8** %p, align 8
  store i8 65, i8* %468, align 1
  %469 = load i8** %p, align 8
  %470 = getelementptr inbounds i8* %469, i64 1
  store i8* %470, i8** %p, align 8
  %471 = load i8** %p, align 8
  store i8 78, i8* %471, align 1
  %472 = load i8** %p, align 8
  %473 = getelementptr inbounds i8* %472, i64 1
  store i8* %473, i8** %p, align 8
  br label %bb189

bb133:                                            ; preds = %bb131, %bb130
  %474 = load i8** %p, align 8
  store i8 110, i8* %474, align 1
  %475 = load i8** %p, align 8
  %476 = getelementptr inbounds i8* %475, i64 1
  store i8* %476, i8** %p, align 8
  %477 = load i8** %p, align 8
  store i8 97, i8* %477, align 1
  %478 = load i8** %p, align 8
  %479 = getelementptr inbounds i8* %478, i64 1
  store i8* %479, i8** %p, align 8
  %480 = load i8** %p, align 8
  store i8 110, i8* %480, align 1
  %481 = load i8** %p, align 8
  %482 = getelementptr inbounds i8* %481, i64 1
  store i8* %482, i8** %p, align 8
  br label %bb189

bb135:                                            ; preds = %bb128
  store i32 0, i32* %sign, align 4
  call void asm sideeffect "fnstcw $0", "=*m,~{dirflag},~{fpsr},~{flags}"(i16* %_cw) nounwind
  %483 = load i16* %_cw, align 2
  store i16 %483, i16* %1, align 2
  %484 = load i16* %1, align 2
  store i16 %484, i16* %oldcw, align 2
  %485 = load i16* %oldcw, align 2
  %486 = or i16 %485, 768
  store i16 %486, i16* %_ncw, align 2
  call void asm sideeffect "fldcw $0", "*m,~{dirflag},~{fpsr},~{flags}"(i16* %_ncw) nounwind
  %487 = getelementptr inbounds %union.argvalue_t* %_m, i32 0, i32 0
  %488 = load x86_fp80* %arg129, align 16
  store x86_fp80 %488, x86_fp80* %487, align 16
  %489 = getelementptr inbounds %union.argvalue_t* %_m, i32 0, i32 0
  %490 = bitcast x86_fp80* %489 to [4 x i32]*
  %491 = getelementptr inbounds [4 x i32]* %490, i64 0, i64 2
  %492 = load i32* %491, align 4
  %int_cast_to_i64 = zext i32 15 to i64
  %493 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %493, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb135
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb135
  %494 = lshr i32 %492, 15
  %495 = and i32 %494, 1
  store i32 %495, i32* %0, align 4
  %496 = load i32* %0, align 4
  %497 = icmp ne i32 %496, 0
  br i1 %497, label %bb136, label %bb137

bb136:                                            ; preds = %klee_overshift_check.exit
  store i32 -1, i32* %sign, align 4
  %498 = load x86_fp80* %arg129, align 16
  %499 = fsub x86_fp80 0xK80000000000000000000, %498
  store x86_fp80 %499, x86_fp80* %arg129, align 16
  br label %bb137

bb137:                                            ; preds = %bb136, %klee_overshift_check.exit
  %500 = load i32* %sign, align 4
  %501 = icmp slt i32 %500, 0
  br i1 %501, label %bb138, label %bb139

bb138:                                            ; preds = %bb137
  %502 = load i8** %p, align 8
  store i8 45, i8* %502, align 1
  %503 = load i8** %p, align 8
  %504 = getelementptr inbounds i8* %503, i64 1
  store i8* %504, i8** %p, align 8
  br label %bb143

bb139:                                            ; preds = %bb137
  %505 = load i32* %flags, align 4
  %506 = and i32 %505, 4
  %507 = icmp ne i32 %506, 0
  br i1 %507, label %bb140, label %bb141

bb140:                                            ; preds = %bb139
  %508 = load i8** %p, align 8
  store i8 43, i8* %508, align 1
  %509 = load i8** %p, align 8
  %510 = getelementptr inbounds i8* %509, i64 1
  store i8* %510, i8** %p, align 8
  br label %bb143

bb141:                                            ; preds = %bb139
  %511 = load i32* %flags, align 4
  %512 = and i32 %511, 8
  %513 = icmp ne i32 %512, 0
  br i1 %513, label %bb142, label %bb143

bb142:                                            ; preds = %bb141
  %514 = load i8** %p, align 8
  store i8 32, i8* %514, align 1
  %515 = load i8** %p, align 8
  %516 = getelementptr inbounds i8* %515, i64 1
  store i8* %516, i8** %p, align 8
  br label %bb143

bb143:                                            ; preds = %bb142, %bb141, %bb140, %bb138
  %517 = load x86_fp80* %arg129, align 16
  %518 = fcmp ule x86_fp80 %517, 0xK00000000000000000000
  br i1 %518, label %bb150, label %bb144

bb144:                                            ; preds = %bb143
  %519 = load x86_fp80* %arg129, align 16
  %520 = fmul x86_fp80 %519, 0xK40008000000000000000
  %521 = load x86_fp80* %arg129, align 16
  %522 = fcmp une x86_fp80 %520, %521
  br i1 %522, label %bb150, label %bb145

bb145:                                            ; preds = %bb144
  %523 = load %struct.char_directive** %dp, align 8
  %524 = getelementptr inbounds %struct.char_directive* %523, i32 0, i32 9
  %525 = load i8* %524, align 8
  %526 = icmp sle i8 %525, 64
  br i1 %526, label %bb148, label %bb146

bb146:                                            ; preds = %bb145
  %527 = load %struct.char_directive** %dp, align 8
  %528 = getelementptr inbounds %struct.char_directive* %527, i32 0, i32 9
  %529 = load i8* %528, align 8
  %530 = icmp sgt i8 %529, 90
  br i1 %530, label %bb148, label %bb147

bb147:                                            ; preds = %bb146
  %531 = load i8** %p, align 8
  store i8 73, i8* %531, align 1
  %532 = load i8** %p, align 8
  %533 = getelementptr inbounds i8* %532, i64 1
  store i8* %533, i8** %p, align 8
  %534 = load i8** %p, align 8
  store i8 78, i8* %534, align 1
  %535 = load i8** %p, align 8
  %536 = getelementptr inbounds i8* %535, i64 1
  store i8* %536, i8** %p, align 8
  %537 = load i8** %p, align 8
  store i8 70, i8* %537, align 1
  %538 = load i8** %p, align 8
  %539 = getelementptr inbounds i8* %538, i64 1
  store i8* %539, i8** %p, align 8
  br label %bb187

bb148:                                            ; preds = %bb146, %bb145
  %540 = load i8** %p, align 8
  store i8 105, i8* %540, align 1
  %541 = load i8** %p, align 8
  %542 = getelementptr inbounds i8* %541, i64 1
  store i8* %542, i8** %p, align 8
  %543 = load i8** %p, align 8
  store i8 110, i8* %543, align 1
  %544 = load i8** %p, align 8
  %545 = getelementptr inbounds i8* %544, i64 1
  store i8* %545, i8** %p, align 8
  %546 = load i8** %p, align 8
  store i8 102, i8* %546, align 1
  %547 = load i8** %p, align 8
  %548 = getelementptr inbounds i8* %547, i64 1
  store i8* %548, i8** %p, align 8
  br label %bb187

bb150:                                            ; preds = %bb144, %bb143
  %549 = load x86_fp80* %arg129, align 16
  %550 = fcmp une x86_fp80 %549, 0xK00000000000000000000
  br i1 %550, label %bb151, label %bb152

bb151:                                            ; preds = %bb150
  call void @abort() noreturn nounwind
  unreachable

bb152:                                            ; preds = %bb150
  %551 = load i8** %p, align 8
  store i8* %551, i8** %pad_ptr, align 8
  %552 = load %struct.char_directive** %dp, align 8
  %553 = getelementptr inbounds %struct.char_directive* %552, i32 0, i32 9
  %554 = load i8* %553, align 8
  %555 = icmp eq i8 %554, 102
  br i1 %555, label %bb154, label %bb153

bb153:                                            ; preds = %bb152
  %556 = load %struct.char_directive** %dp, align 8
  %557 = getelementptr inbounds %struct.char_directive* %556, i32 0, i32 9
  %558 = load i8* %557, align 8
  %559 = icmp eq i8 %558, 70
  br i1 %559, label %bb154, label %bb160

bb154:                                            ; preds = %bb153, %bb152
  %560 = load i8** %p, align 8
  store i8 48, i8* %560, align 1
  %561 = load i8** %p, align 8
  %562 = getelementptr inbounds i8* %561, i64 1
  store i8* %562, i8** %p, align 8
  %563 = load i32* %flags, align 4
  %564 = and i32 %563, 16
  %565 = icmp ne i32 %564, 0
  br i1 %565, label %bb156, label %bb155

bb155:                                            ; preds = %bb154
  %566 = load i64* %precision, align 8
  %567 = icmp ne i64 %566, 0
  br i1 %567, label %bb156, label %bb187

bb156:                                            ; preds = %bb155, %bb154
  %568 = call signext i8 @decimal_point_char() nounwind
  %569 = load i8** %p, align 8
  store i8 %568, i8* %569, align 1
  %570 = load i8** %p, align 8
  %571 = getelementptr inbounds i8* %570, i64 1
  store i8* %571, i8** %p, align 8
  br label %bb158

bb157:                                            ; preds = %bb158
  %572 = load i8** %p, align 8
  store i8 48, i8* %572, align 1
  %573 = load i8** %p, align 8
  %574 = getelementptr inbounds i8* %573, i64 1
  store i8* %574, i8** %p, align 8
  %575 = load i64* %precision, align 8
  %576 = sub i64 %575, 1
  store i64 %576, i64* %precision, align 8
  br label %bb158

bb158:                                            ; preds = %bb157, %bb156
  %577 = load i64* %precision, align 8
  %578 = icmp ne i64 %577, 0
  br i1 %578, label %bb157, label %bb187

bb160:                                            ; preds = %bb153
  %579 = load %struct.char_directive** %dp, align 8
  %580 = getelementptr inbounds %struct.char_directive* %579, i32 0, i32 9
  %581 = load i8* %580, align 8
  %582 = icmp eq i8 %581, 101
  br i1 %582, label %bb162, label %bb161

bb161:                                            ; preds = %bb160
  %583 = load %struct.char_directive** %dp, align 8
  %584 = getelementptr inbounds %struct.char_directive* %583, i32 0, i32 9
  %585 = load i8* %584, align 8
  %586 = icmp eq i8 %585, 69
  br i1 %586, label %bb162, label %bb168

bb162:                                            ; preds = %bb161, %bb160
  %587 = load i8** %p, align 8
  store i8 48, i8* %587, align 1
  %588 = load i8** %p, align 8
  %589 = getelementptr inbounds i8* %588, i64 1
  store i8* %589, i8** %p, align 8
  %590 = load i32* %flags, align 4
  %591 = and i32 %590, 16
  %592 = icmp ne i32 %591, 0
  br i1 %592, label %bb164, label %bb163

bb163:                                            ; preds = %bb162
  %593 = load i64* %precision, align 8
  %594 = icmp ne i64 %593, 0
  br i1 %594, label %bb164, label %bb167

bb164:                                            ; preds = %bb163, %bb162
  %595 = call signext i8 @decimal_point_char() nounwind
  %596 = load i8** %p, align 8
  store i8 %595, i8* %596, align 1
  %597 = load i8** %p, align 8
  %598 = getelementptr inbounds i8* %597, i64 1
  store i8* %598, i8** %p, align 8
  br label %bb166

bb165:                                            ; preds = %bb166
  %599 = load i8** %p, align 8
  store i8 48, i8* %599, align 1
  %600 = load i8** %p, align 8
  %601 = getelementptr inbounds i8* %600, i64 1
  store i8* %601, i8** %p, align 8
  %602 = load i64* %precision, align 8
  %603 = sub i64 %602, 1
  store i64 %603, i64* %precision, align 8
  br label %bb166

bb166:                                            ; preds = %bb165, %bb164
  %604 = load i64* %precision, align 8
  %605 = icmp ne i64 %604, 0
  br i1 %605, label %bb165, label %bb167

bb167:                                            ; preds = %bb166, %bb163
  %606 = load %struct.char_directive** %dp, align 8
  %607 = getelementptr inbounds %struct.char_directive* %606, i32 0, i32 9
  %608 = load i8* %607, align 8
  %609 = load i8** %p, align 8
  store i8 %608, i8* %609, align 1
  %610 = load i8** %p, align 8
  %611 = getelementptr inbounds i8* %610, i64 1
  store i8* %611, i8** %p, align 8
  %612 = load i8** %p, align 8
  store i8 43, i8* %612, align 1
  %613 = load i8** %p, align 8
  %614 = getelementptr inbounds i8* %613, i64 1
  store i8* %614, i8** %p, align 8
  %615 = load i8** %p, align 8
  store i8 48, i8* %615, align 1
  %616 = load i8** %p, align 8
  %617 = getelementptr inbounds i8* %616, i64 1
  store i8* %617, i8** %p, align 8
  %618 = load i8** %p, align 8
  store i8 48, i8* %618, align 1
  %619 = load i8** %p, align 8
  %620 = getelementptr inbounds i8* %619, i64 1
  store i8* %620, i8** %p, align 8
  br label %bb187

bb168:                                            ; preds = %bb161
  %621 = load %struct.char_directive** %dp, align 8
  %622 = getelementptr inbounds %struct.char_directive* %621, i32 0, i32 9
  %623 = load i8* %622, align 8
  %624 = icmp eq i8 %623, 103
  br i1 %624, label %bb170, label %bb169

bb169:                                            ; preds = %bb168
  %625 = load %struct.char_directive** %dp, align 8
  %626 = getelementptr inbounds %struct.char_directive* %625, i32 0, i32 9
  %627 = load i8* %626, align 8
  %628 = icmp eq i8 %627, 71
  br i1 %628, label %bb170, label %bb178

bb170:                                            ; preds = %bb169, %bb168
  %629 = load i8** %p, align 8
  store i8 48, i8* %629, align 1
  %630 = load i8** %p, align 8
  %631 = getelementptr inbounds i8* %630, i64 1
  store i8* %631, i8** %p, align 8
  %632 = load i32* %flags, align 4
  %633 = and i32 %632, 16
  %634 = icmp ne i32 %633, 0
  br i1 %634, label %bb171, label %bb187

bb171:                                            ; preds = %bb170
  %635 = load i64* %precision, align 8
  %636 = icmp ne i64 %635, 0
  br i1 %636, label %bb172, label %bb173

bb172:                                            ; preds = %bb171
  %637 = load i64* %precision, align 8
  %638 = sub i64 %637, 1
  store i64 %638, i64* %iftmp.15, align 8
  br label %bb174

bb173:                                            ; preds = %bb171
  store i64 0, i64* %iftmp.15, align 8
  br label %bb174

bb174:                                            ; preds = %bb173, %bb172
  %639 = load i64* %iftmp.15, align 8
  store i64 %639, i64* %ndigits, align 8
  %640 = call signext i8 @decimal_point_char() nounwind
  %641 = load i8** %p, align 8
  store i8 %640, i8* %641, align 1
  %642 = load i8** %p, align 8
  %643 = getelementptr inbounds i8* %642, i64 1
  store i8* %643, i8** %p, align 8
  br label %bb176

bb175:                                            ; preds = %bb176
  %644 = load i8** %p, align 8
  store i8 48, i8* %644, align 1
  %645 = load i8** %p, align 8
  %646 = getelementptr inbounds i8* %645, i64 1
  store i8* %646, i8** %p, align 8
  %647 = load i64* %ndigits, align 8
  %648 = sub i64 %647, 1
  store i64 %648, i64* %ndigits, align 8
  br label %bb176

bb176:                                            ; preds = %bb175, %bb174
  %649 = load i64* %ndigits, align 8
  %650 = icmp ne i64 %649, 0
  br i1 %650, label %bb175, label %bb187

bb178:                                            ; preds = %bb169
  %651 = load %struct.char_directive** %dp, align 8
  %652 = getelementptr inbounds %struct.char_directive* %651, i32 0, i32 9
  %653 = load i8* %652, align 8
  %654 = icmp eq i8 %653, 97
  br i1 %654, label %bb180, label %bb179

bb179:                                            ; preds = %bb178
  %655 = load %struct.char_directive** %dp, align 8
  %656 = getelementptr inbounds %struct.char_directive* %655, i32 0, i32 9
  %657 = load i8* %656, align 8
  %658 = icmp eq i8 %657, 65
  br i1 %658, label %bb180, label %bb186

bb180:                                            ; preds = %bb179, %bb178
  %659 = load i8** %p, align 8
  store i8 48, i8* %659, align 1
  %660 = load i8** %p, align 8
  %661 = getelementptr inbounds i8* %660, i64 1
  store i8* %661, i8** %p, align 8
  %662 = load %struct.char_directive** %dp, align 8
  %663 = getelementptr inbounds %struct.char_directive* %662, i32 0, i32 9
  %664 = load i8* %663, align 8
  %665 = add i8 %664, 23
  %666 = load i8** %p, align 8
  store i8 %665, i8* %666, align 1
  %667 = load i8** %p, align 8
  %668 = getelementptr inbounds i8* %667, i64 1
  store i8* %668, i8** %p, align 8
  %669 = load i8** %p, align 8
  store i8* %669, i8** %pad_ptr, align 8
  %670 = load i8** %p, align 8
  store i8 48, i8* %670, align 1
  %671 = load i8** %p, align 8
  %672 = getelementptr inbounds i8* %671, i64 1
  store i8* %672, i8** %p, align 8
  %673 = load i32* %flags, align 4
  %674 = and i32 %673, 16
  %675 = icmp ne i32 %674, 0
  br i1 %675, label %bb182, label %bb181

bb181:                                            ; preds = %bb180
  %676 = load i64* %precision, align 8
  %677 = icmp ne i64 %676, 0
  br i1 %677, label %bb182, label %bb185

bb182:                                            ; preds = %bb181, %bb180
  %678 = call signext i8 @decimal_point_char() nounwind
  %679 = load i8** %p, align 8
  store i8 %678, i8* %679, align 1
  %680 = load i8** %p, align 8
  %681 = getelementptr inbounds i8* %680, i64 1
  store i8* %681, i8** %p, align 8
  br label %bb184

bb183:                                            ; preds = %bb184
  %682 = load i8** %p, align 8
  store i8 48, i8* %682, align 1
  %683 = load i8** %p, align 8
  %684 = getelementptr inbounds i8* %683, i64 1
  store i8* %684, i8** %p, align 8
  %685 = load i64* %precision, align 8
  %686 = sub i64 %685, 1
  store i64 %686, i64* %precision, align 8
  br label %bb184

bb184:                                            ; preds = %bb183, %bb182
  %687 = load i64* %precision, align 8
  %688 = icmp ne i64 %687, 0
  br i1 %688, label %bb183, label %bb185

bb185:                                            ; preds = %bb184, %bb181
  %689 = load %struct.char_directive** %dp, align 8
  %690 = getelementptr inbounds %struct.char_directive* %689, i32 0, i32 9
  %691 = load i8* %690, align 8
  %692 = add i8 %691, 15
  %693 = load i8** %p, align 8
  store i8 %692, i8* %693, align 1
  %694 = load i8** %p, align 8
  %695 = getelementptr inbounds i8* %694, i64 1
  store i8* %695, i8** %p, align 8
  %696 = load i8** %p, align 8
  store i8 43, i8* %696, align 1
  %697 = load i8** %p, align 8
  %698 = getelementptr inbounds i8* %697, i64 1
  store i8* %698, i8** %p, align 8
  %699 = load i8** %p, align 8
  store i8 48, i8* %699, align 1
  %700 = load i8** %p, align 8
  %701 = getelementptr inbounds i8* %700, i64 1
  store i8* %701, i8** %p, align 8
  br label %bb187

bb186:                                            ; preds = %bb179
  call void @abort() noreturn nounwind
  unreachable

bb187:                                            ; preds = %bb170, %bb176, %bb155, %bb158, %bb147, %bb148, %bb185, %bb167
  %702 = load i16* %oldcw, align 2
  store i16 %702, i16* %_ncw188, align 2
  call void asm sideeffect "fldcw $0", "*m,~{dirflag},~{fpsr},~{flags}"(i16* %_ncw188) nounwind
  br label %bb189

bb189:                                            ; preds = %bb132, %bb133, %bb187
  %703 = load i32* %has_width, align 4
  %704 = icmp ne i32 %703, 0
  br i1 %704, label %bb190, label %bb213

bb190:                                            ; preds = %bb189
  %705 = load i8** %p, align 8
  %706 = ptrtoint i8* %705 to i64
  %707 = load i8** %tmp, align 8
  %708 = ptrtoint i8* %707 to i64
  %709 = sub nsw i64 %706, %708
  %710 = load i64* %width, align 8
  %711 = icmp ult i64 %709, %710
  br i1 %711, label %bb191, label %bb213

bb191:                                            ; preds = %bb190
  %712 = load i8** %p, align 8
  %713 = ptrtoint i8* %712 to i64
  %714 = load i8** %tmp, align 8
  %715 = ptrtoint i8* %714 to i64
  %716 = sub nsw i64 %713, %715
  %717 = load i64* %width, align 8
  %718 = sub i64 %717, %716
  store i64 %718, i64* %pad, align 8
  %719 = load i8** %p, align 8
  %720 = load i64* %pad, align 8
  %721 = getelementptr inbounds i8* %719, i64 %720
  store i8* %721, i8** %end, align 8
  %722 = load i32* %flags, align 4
  %723 = and i32 %722, 2
  %724 = icmp ne i32 %723, 0
  br i1 %724, label %bb194, label %bb196

bb193:                                            ; preds = %bb194
  %725 = load i8** %p, align 8
  store i8 32, i8* %725, align 1
  %726 = load i8** %p, align 8
  %727 = getelementptr inbounds i8* %726, i64 1
  store i8* %727, i8** %p, align 8
  %728 = load i64* %pad, align 8
  %729 = sub i64 %728, 1
  store i64 %729, i64* %pad, align 8
  br label %bb194

bb194:                                            ; preds = %bb191, %bb193
  %730 = load i64* %pad, align 8
  %731 = icmp ne i64 %730, 0
  br i1 %731, label %bb193, label %bb212

bb196:                                            ; preds = %bb191
  %732 = load i32* %flags, align 4
  %733 = and i32 %732, 32
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %bb205, label %bb197

bb197:                                            ; preds = %bb196
  %735 = load i8** %pad_ptr, align 8
  %736 = icmp eq i8* %735, null
  br i1 %736, label %bb205, label %bb198

bb198:                                            ; preds = %bb197
  %737 = load i8** %end, align 8
  store i8* %737, i8** %q, align 8
  br label %bb200

bb199:                                            ; preds = %bb200
  %738 = load i8** %q, align 8
  %739 = getelementptr inbounds i8* %738, i64 -1
  store i8* %739, i8** %q, align 8
  %740 = load i8** %p, align 8
  %741 = getelementptr inbounds i8* %740, i64 -1
  store i8* %741, i8** %p, align 8
  %742 = load i8** %p, align 8
  %743 = load i8* %742, align 1
  %744 = load i8** %q, align 8
  store i8 %743, i8* %744, align 1
  br label %bb200

bb200:                                            ; preds = %bb199, %bb198
  %745 = load i8** %p, align 8
  %746 = load i8** %pad_ptr, align 8
  %747 = icmp ugt i8* %745, %746
  br i1 %747, label %bb199, label %bb203

bb202:                                            ; preds = %bb203
  %748 = load i8** %p, align 8
  store i8 48, i8* %748, align 1
  %749 = load i8** %p, align 8
  %750 = getelementptr inbounds i8* %749, i64 1
  store i8* %750, i8** %p, align 8
  %751 = load i64* %pad, align 8
  %752 = sub i64 %751, 1
  store i64 %752, i64* %pad, align 8
  br label %bb203

bb203:                                            ; preds = %bb200, %bb202
  %753 = load i64* %pad, align 8
  %754 = icmp ne i64 %753, 0
  br i1 %754, label %bb202, label %bb212

bb205:                                            ; preds = %bb197, %bb196
  %755 = load i8** %end, align 8
  store i8* %755, i8** %q206, align 8
  br label %bb208

bb207:                                            ; preds = %bb208
  %756 = load i8** %q206, align 8
  %757 = getelementptr inbounds i8* %756, i64 -1
  store i8* %757, i8** %q206, align 8
  %758 = load i8** %p, align 8
  %759 = getelementptr inbounds i8* %758, i64 -1
  store i8* %759, i8** %p, align 8
  %760 = load i8** %p, align 8
  %761 = load i8* %760, align 1
  %762 = load i8** %q206, align 8
  store i8 %761, i8* %762, align 1
  br label %bb208

bb208:                                            ; preds = %bb207, %bb205
  %763 = load i8** %p, align 8
  %764 = load i8** %tmp, align 8
  %765 = icmp ugt i8* %763, %764
  br i1 %765, label %bb207, label %bb211

bb210:                                            ; preds = %bb211
  %766 = load i8** %p, align 8
  store i8 32, i8* %766, align 1
  %767 = load i8** %p, align 8
  %768 = getelementptr inbounds i8* %767, i64 1
  store i8* %768, i8** %p, align 8
  %769 = load i64* %pad, align 8
  %770 = sub i64 %769, 1
  store i64 %770, i64* %pad, align 8
  br label %bb211

bb211:                                            ; preds = %bb208, %bb210
  %771 = load i64* %pad, align 8
  %772 = icmp ne i64 %771, 0
  br i1 %772, label %bb210, label %bb212

bb212:                                            ; preds = %bb203, %bb194, %bb211
  %773 = load i8** %end, align 8
  store i8* %773, i8** %p, align 8
  br label %bb213

bb213:                                            ; preds = %bb212, %bb190, %bb189
  %774 = load i8** %p, align 8
  %775 = ptrtoint i8* %774 to i64
  %776 = load i8** %tmp, align 8
  %777 = ptrtoint i8* %776 to i64
  %778 = sub nsw i64 %775, %777
  store i64 %778, i64* %count, align 8
  %779 = load i64* %count, align 8
  %780 = load i64* %tmp_length, align 8
  %781 = icmp uge i64 %779, %780
  br i1 %781, label %bb214, label %bb215

bb214:                                            ; preds = %bb213
  call void @abort() noreturn nounwind
  unreachable

bb215:                                            ; preds = %bb213
  %782 = load i64* %allocated, align 8
  %783 = load i64* %length, align 8
  %784 = sub i64 %782, %783
  %785 = load i64* %count, align 8
  %786 = icmp ule i64 %784, %785
  br i1 %786, label %bb216, label %bb238

bb216:                                            ; preds = %bb215
  %787 = load i64* %length, align 8
  %788 = load i64* %count, align 8
  %789 = call i64 @xsum(i64 %787, i64 %788) nounwind readonly
  store i64 %789, i64* %n217, align 8
  %790 = load i64* %n217, align 8
  %791 = load i64* %allocated, align 8
  %792 = icmp ugt i64 %790, %791
  br i1 %792, label %bb218, label %bb238

bb218:                                            ; preds = %bb216
  %793 = load i64* %allocated, align 8
  %794 = icmp ne i64 %793, 0
  br i1 %794, label %bb221, label %bb225

bb221:                                            ; preds = %bb218
  %795 = load i64* %allocated, align 8
  %796 = icmp sge i64 %795, 0
  br i1 %796, label %bb222, label %bb223

bb222:                                            ; preds = %bb221
  %797 = load i64* %allocated, align 8
  %798 = mul i64 %797, 2
  store i64 %798, i64* %iftmp.23, align 8
  br label %bb224

bb223:                                            ; preds = %bb221
  store i64 -1, i64* %iftmp.23, align 8
  br label %bb224

bb224:                                            ; preds = %bb223, %bb222
  %799 = load i64* %iftmp.23, align 8
  store i64 %799, i64* %iftmp.22, align 8
  br label %bb226

bb225:                                            ; preds = %bb218
  store i64 12, i64* %iftmp.22, align 8
  br label %bb226

bb226:                                            ; preds = %bb225, %bb224
  %800 = load i64* %iftmp.22, align 8
  store i64 %800, i64* %allocated, align 8
  %801 = load i64* %n217, align 8
  %802 = load i64* %allocated, align 8
  %803 = icmp ugt i64 %801, %802
  br i1 %803, label %bb227, label %bb228

bb227:                                            ; preds = %bb226
  %804 = load i64* %n217, align 8
  store i64 %804, i64* %allocated, align 8
  br label %bb228

bb228:                                            ; preds = %bb227, %bb226
  %805 = load i64* %allocated, align 8
  store i64 %805, i64* %memory_size219, align 8
  %806 = load i64* %memory_size219, align 8
  %807 = icmp eq i64 %806, -1
  br i1 %807, label %out_of_memory, label %bb229

bb229:                                            ; preds = %bb228
  %808 = load i8** %result, align 8
  %809 = load i8** %resultbuf_addr, align 8
  %810 = icmp eq i8* %808, %809
  %811 = load i8** %result, align 8
  %812 = icmp eq i8* %811, null
  %or.cond5 = or i1 %810, %812
  br i1 %or.cond5, label %bb231, label %bb232

bb231:                                            ; preds = %bb229
  %813 = load i64* %memory_size219, align 8
  %814 = call noalias i8* @malloc(i64 %813) nounwind
  store i8* %814, i8** %memory220, align 8
  br label %bb233

bb232:                                            ; preds = %bb229
  %815 = load i8** %result, align 8
  %816 = load i64* %memory_size219, align 8
  %817 = call i8* @realloc(i8* %815, i64 %816) nounwind
  store i8* %817, i8** %memory220, align 8
  br label %bb233

bb233:                                            ; preds = %bb232, %bb231
  %818 = load i8** %memory220, align 8
  %819 = icmp eq i8* %818, null
  br i1 %819, label %out_of_memory, label %bb234

bb234:                                            ; preds = %bb233
  %820 = load i8** %result, align 8
  %821 = load i8** %resultbuf_addr, align 8
  %822 = icmp eq i8* %820, %821
  br i1 %822, label %bb235, label %bb237

bb235:                                            ; preds = %bb234
  %823 = load i64* %length, align 8
  %824 = icmp ne i64 %823, 0
  br i1 %824, label %bb236, label %bb237

bb236:                                            ; preds = %bb235
  %825 = load i8** %memory220, align 8
  %826 = load i8** %result, align 8
  %827 = load i64* %length, align 8
  %828 = call i8* @memcpy(i8* %825, i8* %826, i64 %827)
  br label %bb237

bb237:                                            ; preds = %bb236, %bb235, %bb234
  %829 = load i8** %memory220, align 8
  store i8* %829, i8** %result, align 8
  br label %bb238

bb238:                                            ; preds = %bb237, %bb216, %bb215
  %830 = load i8** %result, align 8
  %831 = load i64* %length, align 8
  %832 = getelementptr inbounds i8* %830, i64 %831
  %833 = load i8** %tmp, align 8
  %834 = load i64* %count, align 8
  %835 = call i8* @memcpy(i8* %832, i8* %833, i64 %834)
  %tmpbuf239 = bitcast [700 x i8]* %tmpbuf to i8*
  %836 = load i8** %tmp, align 8
  %837 = icmp ne i8* %tmpbuf239, %836
  br i1 %837, label %bb240, label %bb241

bb240:                                            ; preds = %bb238
  %838 = load i8** %tmp, align 8
  call void @free(i8* %838) nounwind
  br label %bb241

bb241:                                            ; preds = %bb240, %bb238
  %839 = load i64* %length, align 8
  %840 = load i64* %count, align 8
  %841 = add i64 %839, %840
  store i64 %841, i64* %length, align 8
  br label %bb480

bb242:                                            ; preds = %bb84, %bb83, %bb82
  %842 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %843 = load %struct.argument** %842, align 8
  %844 = load %struct.char_directive** %dp, align 8
  %845 = getelementptr inbounds %struct.char_directive* %844, i32 0, i32 10
  %846 = load i64* %845, align 8
  %847 = getelementptr inbounds %struct.argument* %843, i64 %846
  %848 = getelementptr inbounds %struct.argument* %847, i32 0, i32 0
  %849 = load i32* %848, align 16
  store i32 %849, i32* %type, align 4
  %850 = load %struct.char_directive** %dp, align 8
  %851 = getelementptr inbounds %struct.char_directive* %850, i32 0, i32 2
  %852 = load i32* %851, align 8
  store i32 %852, i32* %flags243, align 4
  %853 = load i8** %buf, align 8
  store i8* %853, i8** %fbp, align 8
  %854 = load i8** %fbp, align 8
  store i8 37, i8* %854, align 1
  %855 = load i8** %fbp, align 8
  %856 = getelementptr inbounds i8* %855, i64 1
  store i8* %856, i8** %fbp, align 8
  %857 = load i32* %flags243, align 4
  %858 = and i32 %857, 1
  %859 = trunc i32 %858 to i8
  %toBool = icmp ne i8 %859, 0
  br i1 %toBool, label %bb244, label %bb245

bb244:                                            ; preds = %bb242
  %860 = load i8** %fbp, align 8
  store i8 39, i8* %860, align 1
  %861 = load i8** %fbp, align 8
  %862 = getelementptr inbounds i8* %861, i64 1
  store i8* %862, i8** %fbp, align 8
  br label %bb245

bb245:                                            ; preds = %bb244, %bb242
  %863 = load i32* %flags243, align 4
  %864 = and i32 %863, 2
  %865 = icmp ne i32 %864, 0
  br i1 %865, label %bb246, label %bb247

bb246:                                            ; preds = %bb245
  %866 = load i8** %fbp, align 8
  store i8 45, i8* %866, align 1
  %867 = load i8** %fbp, align 8
  %868 = getelementptr inbounds i8* %867, i64 1
  store i8* %868, i8** %fbp, align 8
  br label %bb247

bb247:                                            ; preds = %bb246, %bb245
  %869 = load i32* %flags243, align 4
  %870 = and i32 %869, 4
  %871 = icmp ne i32 %870, 0
  br i1 %871, label %bb248, label %bb249

bb248:                                            ; preds = %bb247
  %872 = load i8** %fbp, align 8
  store i8 43, i8* %872, align 1
  %873 = load i8** %fbp, align 8
  %874 = getelementptr inbounds i8* %873, i64 1
  store i8* %874, i8** %fbp, align 8
  br label %bb249

bb249:                                            ; preds = %bb248, %bb247
  %875 = load i32* %flags243, align 4
  %876 = and i32 %875, 8
  %877 = icmp ne i32 %876, 0
  br i1 %877, label %bb250, label %bb251

bb250:                                            ; preds = %bb249
  %878 = load i8** %fbp, align 8
  store i8 32, i8* %878, align 1
  %879 = load i8** %fbp, align 8
  %880 = getelementptr inbounds i8* %879, i64 1
  store i8* %880, i8** %fbp, align 8
  br label %bb251

bb251:                                            ; preds = %bb250, %bb249
  %881 = load i32* %flags243, align 4
  %882 = and i32 %881, 16
  %883 = icmp ne i32 %882, 0
  br i1 %883, label %bb252, label %bb253

bb252:                                            ; preds = %bb251
  %884 = load i8** %fbp, align 8
  store i8 35, i8* %884, align 1
  %885 = load i8** %fbp, align 8
  %886 = getelementptr inbounds i8* %885, i64 1
  store i8* %886, i8** %fbp, align 8
  br label %bb253

bb253:                                            ; preds = %bb252, %bb251
  %887 = load i32* %flags243, align 4
  %888 = and i32 %887, 64
  %889 = icmp ne i32 %888, 0
  br i1 %889, label %bb254, label %bb255

bb254:                                            ; preds = %bb253
  %890 = load i8** %fbp, align 8
  store i8 73, i8* %890, align 1
  %891 = load i8** %fbp, align 8
  %892 = getelementptr inbounds i8* %891, i64 1
  store i8* %892, i8** %fbp, align 8
  br label %bb255

bb255:                                            ; preds = %bb254, %bb253
  %893 = load i32* %flags243, align 4
  %894 = and i32 %893, 32
  %895 = icmp ne i32 %894, 0
  br i1 %895, label %bb256, label %bb257

bb256:                                            ; preds = %bb255
  %896 = load i8** %fbp, align 8
  store i8 48, i8* %896, align 1
  %897 = load i8** %fbp, align 8
  %898 = getelementptr inbounds i8* %897, i64 1
  store i8* %898, i8** %fbp, align 8
  br label %bb257

bb257:                                            ; preds = %bb256, %bb255
  %899 = load %struct.char_directive** %dp, align 8
  %900 = getelementptr inbounds %struct.char_directive* %899, i32 0, i32 3
  %901 = load i8** %900, align 8
  %902 = load %struct.char_directive** %dp, align 8
  %903 = getelementptr inbounds %struct.char_directive* %902, i32 0, i32 4
  %904 = load i8** %903, align 8
  %905 = icmp ne i8* %901, %904
  br i1 %905, label %bb258, label %bb260

bb258:                                            ; preds = %bb257
  %906 = load %struct.char_directive** %dp, align 8
  %907 = getelementptr inbounds %struct.char_directive* %906, i32 0, i32 4
  %908 = load i8** %907, align 8
  %909 = ptrtoint i8* %908 to i64
  %910 = load %struct.char_directive** %dp, align 8
  %911 = getelementptr inbounds %struct.char_directive* %910, i32 0, i32 3
  %912 = load i8** %911, align 8
  %913 = ptrtoint i8* %912 to i64
  %914 = sub nsw i64 %909, %913
  store i64 %914, i64* %n259, align 8
  %915 = load %struct.char_directive** %dp, align 8
  %916 = getelementptr inbounds %struct.char_directive* %915, i32 0, i32 3
  %917 = load i8** %916, align 8
  %918 = load i8** %fbp, align 8
  %919 = load i64* %n259, align 8
  %920 = call i8* @memcpy(i8* %918, i8* %917, i64 %919)
  %921 = load i8** %fbp, align 8
  %922 = load i64* %n259, align 8
  %923 = getelementptr inbounds i8* %921, i64 %922
  store i8* %923, i8** %fbp, align 8
  br label %bb260

bb260:                                            ; preds = %bb258, %bb257
  %924 = load %struct.char_directive** %dp, align 8
  %925 = getelementptr inbounds %struct.char_directive* %924, i32 0, i32 6
  %926 = load i8** %925, align 8
  %927 = load %struct.char_directive** %dp, align 8
  %928 = getelementptr inbounds %struct.char_directive* %927, i32 0, i32 7
  %929 = load i8** %928, align 8
  %930 = icmp ne i8* %926, %929
  br i1 %930, label %bb261, label %bb263

bb261:                                            ; preds = %bb260
  %931 = load %struct.char_directive** %dp, align 8
  %932 = getelementptr inbounds %struct.char_directive* %931, i32 0, i32 7
  %933 = load i8** %932, align 8
  %934 = ptrtoint i8* %933 to i64
  %935 = load %struct.char_directive** %dp, align 8
  %936 = getelementptr inbounds %struct.char_directive* %935, i32 0, i32 6
  %937 = load i8** %936, align 8
  %938 = ptrtoint i8* %937 to i64
  %939 = sub nsw i64 %934, %938
  store i64 %939, i64* %n262, align 8
  %940 = load %struct.char_directive** %dp, align 8
  %941 = getelementptr inbounds %struct.char_directive* %940, i32 0, i32 6
  %942 = load i8** %941, align 8
  %943 = load i8** %fbp, align 8
  %944 = load i64* %n262, align 8
  %945 = call i8* @memcpy(i8* %943, i8* %942, i64 %944)
  %946 = load i8** %fbp, align 8
  %947 = load i64* %n262, align 8
  %948 = getelementptr inbounds i8* %946, i64 %947
  store i8* %948, i8** %fbp, align 8
  br label %bb263

bb263:                                            ; preds = %bb261, %bb260
  %949 = load i32* %type, align 4
  switch i32 %949, label %bb267 [
    i32 7, label %bb265
    i32 8, label %bb265
    i32 9, label %bb264
    i32 10, label %bb264
    i32 12, label %bb266
    i32 14, label %bb265
    i32 16, label %bb265
  ]

bb264:                                            ; preds = %bb263, %bb263
  %950 = load i8** %fbp, align 8
  store i8 108, i8* %950, align 1
  %951 = load i8** %fbp, align 8
  %952 = getelementptr inbounds i8* %951, i64 1
  store i8* %952, i8** %fbp, align 8
  br label %bb265

bb265:                                            ; preds = %bb264, %bb263, %bb263, %bb263, %bb263
  %953 = load i8** %fbp, align 8
  store i8 108, i8* %953, align 1
  %954 = load i8** %fbp, align 8
  %955 = getelementptr inbounds i8* %954, i64 1
  store i8* %955, i8** %fbp, align 8
  br label %bb267

bb266:                                            ; preds = %bb263
  %956 = load i8** %fbp, align 8
  store i8 76, i8* %956, align 1
  %957 = load i8** %fbp, align 8
  %958 = getelementptr inbounds i8* %957, i64 1
  store i8* %958, i8** %fbp, align 8
  br label %bb267

bb267:                                            ; preds = %bb266, %bb265, %bb263
  %959 = load %struct.char_directive** %dp, align 8
  %960 = getelementptr inbounds %struct.char_directive* %959, i32 0, i32 9
  %961 = load i8* %960, align 8
  %962 = load i8** %fbp, align 8
  store i8 %961, i8* %962, align 1
  %963 = load i8** %fbp, align 8
  %964 = getelementptr inbounds i8* %963, i64 1
  store i8 0, i8* %964, align 1
  store i32 0, i32* %prefix_count, align 4
  %965 = load %struct.char_directive** %dp, align 8
  %966 = getelementptr inbounds %struct.char_directive* %965, i32 0, i32 5
  %967 = load i64* %966, align 8
  %968 = icmp ne i64 %967, -1
  br i1 %968, label %bb268, label %bb271

bb268:                                            ; preds = %bb267
  %969 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %970 = load %struct.argument** %969, align 8
  %971 = load %struct.char_directive** %dp, align 8
  %972 = getelementptr inbounds %struct.char_directive* %971, i32 0, i32 5
  %973 = load i64* %972, align 8
  %974 = getelementptr inbounds %struct.argument* %970, i64 %973
  %975 = getelementptr inbounds %struct.argument* %974, i32 0, i32 0
  %976 = load i32* %975, align 16
  %977 = icmp ne i32 %976, 5
  br i1 %977, label %bb269, label %bb270

bb269:                                            ; preds = %bb268
  call void @abort() noreturn nounwind
  unreachable

bb270:                                            ; preds = %bb268
  %978 = load i32* %prefix_count, align 4
  %979 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %980 = load %struct.argument** %979, align 8
  %981 = load %struct.char_directive** %dp, align 8
  %982 = getelementptr inbounds %struct.char_directive* %981, i32 0, i32 5
  %983 = load i64* %982, align 8
  %984 = getelementptr inbounds %struct.argument* %980, i64 %983
  %985 = getelementptr inbounds %struct.argument* %984, i32 0, i32 1
  %986 = getelementptr inbounds %union.argvalue_t* %985, i32 0, i32 0
  %987 = bitcast x86_fp80* %986 to i32*
  %988 = load i32* %987, align 16
  %989 = zext i32 %978 to i64
  %990 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 %989
  store i32 %988, i32* %990, align 4
  %991 = load i32* %prefix_count, align 4
  %992 = add i32 %991, 1
  store i32 %992, i32* %prefix_count, align 4
  br label %bb271

bb271:                                            ; preds = %bb270, %bb267
  %993 = load %struct.char_directive** %dp, align 8
  %994 = getelementptr inbounds %struct.char_directive* %993, i32 0, i32 8
  %995 = load i64* %994, align 8
  %996 = icmp ne i64 %995, -1
  br i1 %996, label %bb272, label %bb275

bb272:                                            ; preds = %bb271
  %997 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %998 = load %struct.argument** %997, align 8
  %999 = load %struct.char_directive** %dp, align 8
  %1000 = getelementptr inbounds %struct.char_directive* %999, i32 0, i32 8
  %1001 = load i64* %1000, align 8
  %1002 = getelementptr inbounds %struct.argument* %998, i64 %1001
  %1003 = getelementptr inbounds %struct.argument* %1002, i32 0, i32 0
  %1004 = load i32* %1003, align 16
  %1005 = icmp ne i32 %1004, 5
  br i1 %1005, label %bb273, label %bb274

bb273:                                            ; preds = %bb272
  call void @abort() noreturn nounwind
  unreachable

bb274:                                            ; preds = %bb272
  %1006 = load i32* %prefix_count, align 4
  %1007 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1008 = load %struct.argument** %1007, align 8
  %1009 = load %struct.char_directive** %dp, align 8
  %1010 = getelementptr inbounds %struct.char_directive* %1009, i32 0, i32 8
  %1011 = load i64* %1010, align 8
  %1012 = getelementptr inbounds %struct.argument* %1008, i64 %1011
  %1013 = getelementptr inbounds %struct.argument* %1012, i32 0, i32 1
  %1014 = getelementptr inbounds %union.argvalue_t* %1013, i32 0, i32 0
  %1015 = bitcast x86_fp80* %1014 to i32*
  %1016 = load i32* %1015, align 16
  %1017 = zext i32 %1006 to i64
  %1018 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 %1017
  store i32 %1016, i32* %1018, align 4
  %1019 = load i32* %prefix_count, align 4
  %1020 = add i32 %1019, 1
  store i32 %1020, i32* %prefix_count, align 4
  br label %bb275

bb275:                                            ; preds = %bb274, %bb271
  %1021 = load i64* %length, align 8
  %1022 = call i64 @xsum(i64 %1021, i64 2) nounwind readonly
  %1023 = load i64* %allocated, align 8
  %1024 = icmp ugt i64 %1022, %1023
  br i1 %1024, label %bb276, label %bb296

bb276:                                            ; preds = %bb275
  %1025 = load i64* %allocated, align 8
  %1026 = icmp ne i64 %1025, 0
  br i1 %1026, label %bb279, label %bb283

bb279:                                            ; preds = %bb276
  %1027 = load i64* %allocated, align 8
  %1028 = icmp sge i64 %1027, 0
  br i1 %1028, label %bb280, label %bb281

bb280:                                            ; preds = %bb279
  %1029 = load i64* %allocated, align 8
  %1030 = mul i64 %1029, 2
  store i64 %1030, i64* %iftmp.28, align 8
  br label %bb282

bb281:                                            ; preds = %bb279
  store i64 -1, i64* %iftmp.28, align 8
  br label %bb282

bb282:                                            ; preds = %bb281, %bb280
  %1031 = load i64* %iftmp.28, align 8
  store i64 %1031, i64* %iftmp.27, align 8
  br label %bb284

bb283:                                            ; preds = %bb276
  store i64 12, i64* %iftmp.27, align 8
  br label %bb284

bb284:                                            ; preds = %bb283, %bb282
  %1032 = load i64* %iftmp.27, align 8
  store i64 %1032, i64* %allocated, align 8
  %1033 = load i64* %length, align 8
  %1034 = call i64 @xsum(i64 %1033, i64 2) nounwind readonly
  %1035 = load i64* %allocated, align 8
  %1036 = icmp ugt i64 %1034, %1035
  br i1 %1036, label %bb285, label %bb286

bb285:                                            ; preds = %bb284
  %1037 = load i64* %length, align 8
  %1038 = call i64 @xsum(i64 %1037, i64 2) nounwind readonly
  store i64 %1038, i64* %allocated, align 8
  br label %bb286

bb286:                                            ; preds = %bb285, %bb284
  %1039 = load i64* %allocated, align 8
  store i64 %1039, i64* %memory_size277, align 8
  %1040 = load i64* %memory_size277, align 8
  %1041 = icmp eq i64 %1040, -1
  br i1 %1041, label %out_of_memory, label %bb287

bb287:                                            ; preds = %bb286
  %1042 = load i8** %result, align 8
  %1043 = load i8** %resultbuf_addr, align 8
  %1044 = icmp eq i8* %1042, %1043
  %1045 = load i8** %result, align 8
  %1046 = icmp eq i8* %1045, null
  %or.cond7 = or i1 %1044, %1046
  br i1 %or.cond7, label %bb289, label %bb290

bb289:                                            ; preds = %bb287
  %1047 = load i64* %memory_size277, align 8
  %1048 = call noalias i8* @malloc(i64 %1047) nounwind
  store i8* %1048, i8** %memory278, align 8
  br label %bb291

bb290:                                            ; preds = %bb287
  %1049 = load i8** %result, align 8
  %1050 = load i64* %memory_size277, align 8
  %1051 = call i8* @realloc(i8* %1049, i64 %1050) nounwind
  store i8* %1051, i8** %memory278, align 8
  br label %bb291

bb291:                                            ; preds = %bb290, %bb289
  %1052 = load i8** %memory278, align 8
  %1053 = icmp eq i8* %1052, null
  br i1 %1053, label %out_of_memory, label %bb292

bb292:                                            ; preds = %bb291
  %1054 = load i8** %result, align 8
  %1055 = load i8** %resultbuf_addr, align 8
  %1056 = icmp eq i8* %1054, %1055
  br i1 %1056, label %bb293, label %bb295

bb293:                                            ; preds = %bb292
  %1057 = load i64* %length, align 8
  %1058 = icmp ne i64 %1057, 0
  br i1 %1058, label %bb294, label %bb295

bb294:                                            ; preds = %bb293
  %1059 = load i8** %memory278, align 8
  %1060 = load i8** %result, align 8
  %1061 = load i64* %length, align 8
  %1062 = call i8* @memcpy(i8* %1059, i8* %1060, i64 %1061)
  br label %bb295

bb295:                                            ; preds = %bb294, %bb293, %bb292
  %1063 = load i8** %memory278, align 8
  store i8* %1063, i8** %result, align 8
  br label %bb296

bb296:                                            ; preds = %bb295, %bb275
  %1064 = load i8** %result, align 8
  %1065 = load i64* %length, align 8
  %1066 = getelementptr inbounds i8* %1064, i64 %1065
  store i8 0, i8* %1066, align 1
  %1067 = call i32* @__errno_location() nounwind readnone
  %1068 = load i32* %1067, align 4
  store i32 %1068, i32* %orig_errno, align 4
  br label %bb297

bb297:                                            ; preds = %bb429, %bb476, %bb456, %bb296
  store i32 -1, i32* %count298, align 4
  store i32 0, i32* %retcount, align 4
  %1069 = load i64* %allocated, align 8
  %1070 = load i64* %length, align 8
  %1071 = sub i64 %1069, %1070
  store i64 %1071, i64* %maxlen, align 8
  %1072 = load i64* %maxlen, align 8
  %1073 = icmp ugt i64 %1072, 2147483647
  br i1 %1073, label %bb299, label %bb300

bb299:                                            ; preds = %bb297
  store i64 2147483647, i64* %maxlen, align 8
  br label %bb300

bb300:                                            ; preds = %bb299, %bb297
  %1074 = load i64* %maxlen, align 8
  store i64 %1074, i64* %maxlen, align 8
  %1075 = call i32* @__errno_location() nounwind readnone
  store i32 0, i32* %1075, align 4
  %1076 = load i32* %type, align 4
  switch i32 %1076, label %bb420 [
    i32 1, label %bb301
    i32 2, label %bb308
    i32 3, label %bb315
    i32 4, label %bb322
    i32 5, label %bb329
    i32 6, label %bb336
    i32 7, label %bb343
    i32 8, label %bb350
    i32 9, label %bb357
    i32 10, label %bb364
    i32 11, label %bb371
    i32 12, label %bb378
    i32 13, label %bb385
    i32 14, label %bb392
    i32 15, label %bb399
    i32 16, label %bb406
    i32 17, label %bb413
  ]

bb301:                                            ; preds = %bb300
  %1077 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1078 = load %struct.argument** %1077, align 8
  %1079 = load %struct.char_directive** %dp, align 8
  %1080 = getelementptr inbounds %struct.char_directive* %1079, i32 0, i32 10
  %1081 = load i64* %1080, align 8
  %1082 = getelementptr inbounds %struct.argument* %1078, i64 %1081
  %1083 = getelementptr inbounds %struct.argument* %1082, i32 0, i32 1
  %1084 = getelementptr inbounds %union.argvalue_t* %1083, i32 0, i32 0
  %1085 = bitcast x86_fp80* %1084 to i8*
  %1086 = load i8* %1085, align 16
  %1087 = sext i8 %1086 to i32
  store i32 %1087, i32* %arg302, align 4
  %1088 = load i32* %prefix_count, align 4
  switch i32 %1088, label %bb306 [
    i32 0, label %bb303
    i32 1, label %bb304
    i32 2, label %bb305
  ]

bb303:                                            ; preds = %bb301
  %1089 = load i8** %result, align 8
  %1090 = load i64* %length, align 8
  %1091 = getelementptr inbounds i8* %1089, i64 %1090
  %1092 = load i64* %maxlen, align 8
  %1093 = load i8** %buf, align 8
  %1094 = load i32* %arg302, align 4
  %1095 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1091, i64 %1092, i8* noalias %1093, i32 %1094, i32* %count298) nounwind
  store i32 %1095, i32* %retcount, align 4
  br label %bb421

bb304:                                            ; preds = %bb301
  %1096 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1097 = load i32* %1096, align 4
  %1098 = load i8** %result, align 8
  %1099 = load i64* %length, align 8
  %1100 = getelementptr inbounds i8* %1098, i64 %1099
  %1101 = load i64* %maxlen, align 8
  %1102 = load i8** %buf, align 8
  %1103 = load i32* %arg302, align 4
  %1104 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1100, i64 %1101, i8* noalias %1102, i32 %1097, i32 %1103, i32* %count298) nounwind
  store i32 %1104, i32* %retcount, align 4
  br label %bb421

bb305:                                            ; preds = %bb301
  %1105 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1106 = load i32* %1105, align 4
  %1107 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1108 = load i32* %1107, align 4
  %1109 = load i8** %result, align 8
  %1110 = load i64* %length, align 8
  %1111 = getelementptr inbounds i8* %1109, i64 %1110
  %1112 = load i64* %maxlen, align 8
  %1113 = load i8** %buf, align 8
  %1114 = load i32* %arg302, align 4
  %1115 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1111, i64 %1112, i8* noalias %1113, i32 %1108, i32 %1106, i32 %1114, i32* %count298) nounwind
  store i32 %1115, i32* %retcount, align 4
  br label %bb421

bb306:                                            ; preds = %bb301
  call void @abort() noreturn nounwind
  unreachable

bb308:                                            ; preds = %bb300
  %1116 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1117 = load %struct.argument** %1116, align 8
  %1118 = load %struct.char_directive** %dp, align 8
  %1119 = getelementptr inbounds %struct.char_directive* %1118, i32 0, i32 10
  %1120 = load i64* %1119, align 8
  %1121 = getelementptr inbounds %struct.argument* %1117, i64 %1120
  %1122 = getelementptr inbounds %struct.argument* %1121, i32 0, i32 1
  %1123 = getelementptr inbounds %union.argvalue_t* %1122, i32 0, i32 0
  %1124 = bitcast x86_fp80* %1123 to i8*
  %1125 = load i8* %1124, align 16
  %1126 = zext i8 %1125 to i32
  store i32 %1126, i32* %arg309, align 4
  %1127 = load i32* %prefix_count, align 4
  switch i32 %1127, label %bb313 [
    i32 0, label %bb310
    i32 1, label %bb311
    i32 2, label %bb312
  ]

bb310:                                            ; preds = %bb308
  %1128 = load i8** %result, align 8
  %1129 = load i64* %length, align 8
  %1130 = getelementptr inbounds i8* %1128, i64 %1129
  %1131 = load i64* %maxlen, align 8
  %1132 = load i8** %buf, align 8
  %1133 = load i32* %arg309, align 4
  %1134 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1130, i64 %1131, i8* noalias %1132, i32 %1133, i32* %count298) nounwind
  store i32 %1134, i32* %retcount, align 4
  br label %bb421

bb311:                                            ; preds = %bb308
  %1135 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1136 = load i32* %1135, align 4
  %1137 = load i8** %result, align 8
  %1138 = load i64* %length, align 8
  %1139 = getelementptr inbounds i8* %1137, i64 %1138
  %1140 = load i64* %maxlen, align 8
  %1141 = load i8** %buf, align 8
  %1142 = load i32* %arg309, align 4
  %1143 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1139, i64 %1140, i8* noalias %1141, i32 %1136, i32 %1142, i32* %count298) nounwind
  store i32 %1143, i32* %retcount, align 4
  br label %bb421

bb312:                                            ; preds = %bb308
  %1144 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1145 = load i32* %1144, align 4
  %1146 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1147 = load i32* %1146, align 4
  %1148 = load i8** %result, align 8
  %1149 = load i64* %length, align 8
  %1150 = getelementptr inbounds i8* %1148, i64 %1149
  %1151 = load i64* %maxlen, align 8
  %1152 = load i8** %buf, align 8
  %1153 = load i32* %arg309, align 4
  %1154 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1150, i64 %1151, i8* noalias %1152, i32 %1147, i32 %1145, i32 %1153, i32* %count298) nounwind
  store i32 %1154, i32* %retcount, align 4
  br label %bb421

bb313:                                            ; preds = %bb308
  call void @abort() noreturn nounwind
  unreachable

bb315:                                            ; preds = %bb300
  %1155 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1156 = load %struct.argument** %1155, align 8
  %1157 = load %struct.char_directive** %dp, align 8
  %1158 = getelementptr inbounds %struct.char_directive* %1157, i32 0, i32 10
  %1159 = load i64* %1158, align 8
  %1160 = getelementptr inbounds %struct.argument* %1156, i64 %1159
  %1161 = getelementptr inbounds %struct.argument* %1160, i32 0, i32 1
  %1162 = getelementptr inbounds %union.argvalue_t* %1161, i32 0, i32 0
  %1163 = bitcast x86_fp80* %1162 to i16*
  %1164 = load i16* %1163, align 16
  %1165 = sext i16 %1164 to i32
  store i32 %1165, i32* %arg316, align 4
  %1166 = load i32* %prefix_count, align 4
  switch i32 %1166, label %bb320 [
    i32 0, label %bb317
    i32 1, label %bb318
    i32 2, label %bb319
  ]

bb317:                                            ; preds = %bb315
  %1167 = load i8** %result, align 8
  %1168 = load i64* %length, align 8
  %1169 = getelementptr inbounds i8* %1167, i64 %1168
  %1170 = load i64* %maxlen, align 8
  %1171 = load i8** %buf, align 8
  %1172 = load i32* %arg316, align 4
  %1173 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1169, i64 %1170, i8* noalias %1171, i32 %1172, i32* %count298) nounwind
  store i32 %1173, i32* %retcount, align 4
  br label %bb421

bb318:                                            ; preds = %bb315
  %1174 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1175 = load i32* %1174, align 4
  %1176 = load i8** %result, align 8
  %1177 = load i64* %length, align 8
  %1178 = getelementptr inbounds i8* %1176, i64 %1177
  %1179 = load i64* %maxlen, align 8
  %1180 = load i8** %buf, align 8
  %1181 = load i32* %arg316, align 4
  %1182 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1178, i64 %1179, i8* noalias %1180, i32 %1175, i32 %1181, i32* %count298) nounwind
  store i32 %1182, i32* %retcount, align 4
  br label %bb421

bb319:                                            ; preds = %bb315
  %1183 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1184 = load i32* %1183, align 4
  %1185 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1186 = load i32* %1185, align 4
  %1187 = load i8** %result, align 8
  %1188 = load i64* %length, align 8
  %1189 = getelementptr inbounds i8* %1187, i64 %1188
  %1190 = load i64* %maxlen, align 8
  %1191 = load i8** %buf, align 8
  %1192 = load i32* %arg316, align 4
  %1193 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1189, i64 %1190, i8* noalias %1191, i32 %1186, i32 %1184, i32 %1192, i32* %count298) nounwind
  store i32 %1193, i32* %retcount, align 4
  br label %bb421

bb320:                                            ; preds = %bb315
  call void @abort() noreturn nounwind
  unreachable

bb322:                                            ; preds = %bb300
  %1194 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1195 = load %struct.argument** %1194, align 8
  %1196 = load %struct.char_directive** %dp, align 8
  %1197 = getelementptr inbounds %struct.char_directive* %1196, i32 0, i32 10
  %1198 = load i64* %1197, align 8
  %1199 = getelementptr inbounds %struct.argument* %1195, i64 %1198
  %1200 = getelementptr inbounds %struct.argument* %1199, i32 0, i32 1
  %1201 = getelementptr inbounds %union.argvalue_t* %1200, i32 0, i32 0
  %1202 = bitcast x86_fp80* %1201 to i16*
  %1203 = load i16* %1202, align 16
  %1204 = zext i16 %1203 to i32
  store i32 %1204, i32* %arg323, align 4
  %1205 = load i32* %prefix_count, align 4
  switch i32 %1205, label %bb327 [
    i32 0, label %bb324
    i32 1, label %bb325
    i32 2, label %bb326
  ]

bb324:                                            ; preds = %bb322
  %1206 = load i8** %result, align 8
  %1207 = load i64* %length, align 8
  %1208 = getelementptr inbounds i8* %1206, i64 %1207
  %1209 = load i64* %maxlen, align 8
  %1210 = load i8** %buf, align 8
  %1211 = load i32* %arg323, align 4
  %1212 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1208, i64 %1209, i8* noalias %1210, i32 %1211, i32* %count298) nounwind
  store i32 %1212, i32* %retcount, align 4
  br label %bb421

bb325:                                            ; preds = %bb322
  %1213 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1214 = load i32* %1213, align 4
  %1215 = load i8** %result, align 8
  %1216 = load i64* %length, align 8
  %1217 = getelementptr inbounds i8* %1215, i64 %1216
  %1218 = load i64* %maxlen, align 8
  %1219 = load i8** %buf, align 8
  %1220 = load i32* %arg323, align 4
  %1221 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1217, i64 %1218, i8* noalias %1219, i32 %1214, i32 %1220, i32* %count298) nounwind
  store i32 %1221, i32* %retcount, align 4
  br label %bb421

bb326:                                            ; preds = %bb322
  %1222 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1223 = load i32* %1222, align 4
  %1224 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1225 = load i32* %1224, align 4
  %1226 = load i8** %result, align 8
  %1227 = load i64* %length, align 8
  %1228 = getelementptr inbounds i8* %1226, i64 %1227
  %1229 = load i64* %maxlen, align 8
  %1230 = load i8** %buf, align 8
  %1231 = load i32* %arg323, align 4
  %1232 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1228, i64 %1229, i8* noalias %1230, i32 %1225, i32 %1223, i32 %1231, i32* %count298) nounwind
  store i32 %1232, i32* %retcount, align 4
  br label %bb421

bb327:                                            ; preds = %bb322
  call void @abort() noreturn nounwind
  unreachable

bb329:                                            ; preds = %bb300
  %1233 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1234 = load %struct.argument** %1233, align 8
  %1235 = load %struct.char_directive** %dp, align 8
  %1236 = getelementptr inbounds %struct.char_directive* %1235, i32 0, i32 10
  %1237 = load i64* %1236, align 8
  %1238 = getelementptr inbounds %struct.argument* %1234, i64 %1237
  %1239 = getelementptr inbounds %struct.argument* %1238, i32 0, i32 1
  %1240 = getelementptr inbounds %union.argvalue_t* %1239, i32 0, i32 0
  %1241 = bitcast x86_fp80* %1240 to i32*
  %1242 = load i32* %1241, align 16
  store i32 %1242, i32* %arg330, align 4
  %1243 = load i32* %prefix_count, align 4
  switch i32 %1243, label %bb334 [
    i32 0, label %bb331
    i32 1, label %bb332
    i32 2, label %bb333
  ]

bb331:                                            ; preds = %bb329
  %1244 = load i8** %result, align 8
  %1245 = load i64* %length, align 8
  %1246 = getelementptr inbounds i8* %1244, i64 %1245
  %1247 = load i64* %maxlen, align 8
  %1248 = load i8** %buf, align 8
  %1249 = load i32* %arg330, align 4
  %1250 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1246, i64 %1247, i8* noalias %1248, i32 %1249, i32* %count298) nounwind
  store i32 %1250, i32* %retcount, align 4
  br label %bb421

bb332:                                            ; preds = %bb329
  %1251 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1252 = load i32* %1251, align 4
  %1253 = load i8** %result, align 8
  %1254 = load i64* %length, align 8
  %1255 = getelementptr inbounds i8* %1253, i64 %1254
  %1256 = load i64* %maxlen, align 8
  %1257 = load i8** %buf, align 8
  %1258 = load i32* %arg330, align 4
  %1259 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1255, i64 %1256, i8* noalias %1257, i32 %1252, i32 %1258, i32* %count298) nounwind
  store i32 %1259, i32* %retcount, align 4
  br label %bb421

bb333:                                            ; preds = %bb329
  %1260 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1261 = load i32* %1260, align 4
  %1262 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1263 = load i32* %1262, align 4
  %1264 = load i8** %result, align 8
  %1265 = load i64* %length, align 8
  %1266 = getelementptr inbounds i8* %1264, i64 %1265
  %1267 = load i64* %maxlen, align 8
  %1268 = load i8** %buf, align 8
  %1269 = load i32* %arg330, align 4
  %1270 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1266, i64 %1267, i8* noalias %1268, i32 %1263, i32 %1261, i32 %1269, i32* %count298) nounwind
  store i32 %1270, i32* %retcount, align 4
  br label %bb421

bb334:                                            ; preds = %bb329
  call void @abort() noreturn nounwind
  unreachable

bb336:                                            ; preds = %bb300
  %1271 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1272 = load %struct.argument** %1271, align 8
  %1273 = load %struct.char_directive** %dp, align 8
  %1274 = getelementptr inbounds %struct.char_directive* %1273, i32 0, i32 10
  %1275 = load i64* %1274, align 8
  %1276 = getelementptr inbounds %struct.argument* %1272, i64 %1275
  %1277 = getelementptr inbounds %struct.argument* %1276, i32 0, i32 1
  %1278 = getelementptr inbounds %union.argvalue_t* %1277, i32 0, i32 0
  %1279 = bitcast x86_fp80* %1278 to i32*
  %1280 = load i32* %1279, align 16
  store i32 %1280, i32* %arg337, align 4
  %1281 = load i32* %prefix_count, align 4
  switch i32 %1281, label %bb341 [
    i32 0, label %bb338
    i32 1, label %bb339
    i32 2, label %bb340
  ]

bb338:                                            ; preds = %bb336
  %1282 = load i8** %result, align 8
  %1283 = load i64* %length, align 8
  %1284 = getelementptr inbounds i8* %1282, i64 %1283
  %1285 = load i64* %maxlen, align 8
  %1286 = load i8** %buf, align 8
  %1287 = load i32* %arg337, align 4
  %1288 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1284, i64 %1285, i8* noalias %1286, i32 %1287, i32* %count298) nounwind
  store i32 %1288, i32* %retcount, align 4
  br label %bb421

bb339:                                            ; preds = %bb336
  %1289 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1290 = load i32* %1289, align 4
  %1291 = load i8** %result, align 8
  %1292 = load i64* %length, align 8
  %1293 = getelementptr inbounds i8* %1291, i64 %1292
  %1294 = load i64* %maxlen, align 8
  %1295 = load i8** %buf, align 8
  %1296 = load i32* %arg337, align 4
  %1297 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1293, i64 %1294, i8* noalias %1295, i32 %1290, i32 %1296, i32* %count298) nounwind
  store i32 %1297, i32* %retcount, align 4
  br label %bb421

bb340:                                            ; preds = %bb336
  %1298 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1299 = load i32* %1298, align 4
  %1300 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1301 = load i32* %1300, align 4
  %1302 = load i8** %result, align 8
  %1303 = load i64* %length, align 8
  %1304 = getelementptr inbounds i8* %1302, i64 %1303
  %1305 = load i64* %maxlen, align 8
  %1306 = load i8** %buf, align 8
  %1307 = load i32* %arg337, align 4
  %1308 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1304, i64 %1305, i8* noalias %1306, i32 %1301, i32 %1299, i32 %1307, i32* %count298) nounwind
  store i32 %1308, i32* %retcount, align 4
  br label %bb421

bb341:                                            ; preds = %bb336
  call void @abort() noreturn nounwind
  unreachable

bb343:                                            ; preds = %bb300
  %1309 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1310 = load %struct.argument** %1309, align 8
  %1311 = load %struct.char_directive** %dp, align 8
  %1312 = getelementptr inbounds %struct.char_directive* %1311, i32 0, i32 10
  %1313 = load i64* %1312, align 8
  %1314 = getelementptr inbounds %struct.argument* %1310, i64 %1313
  %1315 = getelementptr inbounds %struct.argument* %1314, i32 0, i32 1
  %1316 = getelementptr inbounds %union.argvalue_t* %1315, i32 0, i32 0
  %1317 = bitcast x86_fp80* %1316 to i64*
  %1318 = load i64* %1317, align 16
  store i64 %1318, i64* %arg344, align 8
  %1319 = load i32* %prefix_count, align 4
  switch i32 %1319, label %bb348 [
    i32 0, label %bb345
    i32 1, label %bb346
    i32 2, label %bb347
  ]

bb345:                                            ; preds = %bb343
  %1320 = load i8** %result, align 8
  %1321 = load i64* %length, align 8
  %1322 = getelementptr inbounds i8* %1320, i64 %1321
  %1323 = load i64* %maxlen, align 8
  %1324 = load i8** %buf, align 8
  %1325 = load i64* %arg344, align 8
  %1326 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1322, i64 %1323, i8* noalias %1324, i64 %1325, i32* %count298) nounwind
  store i32 %1326, i32* %retcount, align 4
  br label %bb421

bb346:                                            ; preds = %bb343
  %1327 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1328 = load i32* %1327, align 4
  %1329 = load i8** %result, align 8
  %1330 = load i64* %length, align 8
  %1331 = getelementptr inbounds i8* %1329, i64 %1330
  %1332 = load i64* %maxlen, align 8
  %1333 = load i8** %buf, align 8
  %1334 = load i64* %arg344, align 8
  %1335 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1331, i64 %1332, i8* noalias %1333, i32 %1328, i64 %1334, i32* %count298) nounwind
  store i32 %1335, i32* %retcount, align 4
  br label %bb421

bb347:                                            ; preds = %bb343
  %1336 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1337 = load i32* %1336, align 4
  %1338 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1339 = load i32* %1338, align 4
  %1340 = load i8** %result, align 8
  %1341 = load i64* %length, align 8
  %1342 = getelementptr inbounds i8* %1340, i64 %1341
  %1343 = load i64* %maxlen, align 8
  %1344 = load i8** %buf, align 8
  %1345 = load i64* %arg344, align 8
  %1346 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1342, i64 %1343, i8* noalias %1344, i32 %1339, i32 %1337, i64 %1345, i32* %count298) nounwind
  store i32 %1346, i32* %retcount, align 4
  br label %bb421

bb348:                                            ; preds = %bb343
  call void @abort() noreturn nounwind
  unreachable

bb350:                                            ; preds = %bb300
  %1347 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1348 = load %struct.argument** %1347, align 8
  %1349 = load %struct.char_directive** %dp, align 8
  %1350 = getelementptr inbounds %struct.char_directive* %1349, i32 0, i32 10
  %1351 = load i64* %1350, align 8
  %1352 = getelementptr inbounds %struct.argument* %1348, i64 %1351
  %1353 = getelementptr inbounds %struct.argument* %1352, i32 0, i32 1
  %1354 = getelementptr inbounds %union.argvalue_t* %1353, i32 0, i32 0
  %1355 = bitcast x86_fp80* %1354 to i64*
  %1356 = load i64* %1355, align 16
  store i64 %1356, i64* %arg351, align 8
  %1357 = load i32* %prefix_count, align 4
  switch i32 %1357, label %bb355 [
    i32 0, label %bb352
    i32 1, label %bb353
    i32 2, label %bb354
  ]

bb352:                                            ; preds = %bb350
  %1358 = load i8** %result, align 8
  %1359 = load i64* %length, align 8
  %1360 = getelementptr inbounds i8* %1358, i64 %1359
  %1361 = load i64* %maxlen, align 8
  %1362 = load i8** %buf, align 8
  %1363 = load i64* %arg351, align 8
  %1364 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1360, i64 %1361, i8* noalias %1362, i64 %1363, i32* %count298) nounwind
  store i32 %1364, i32* %retcount, align 4
  br label %bb421

bb353:                                            ; preds = %bb350
  %1365 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1366 = load i32* %1365, align 4
  %1367 = load i8** %result, align 8
  %1368 = load i64* %length, align 8
  %1369 = getelementptr inbounds i8* %1367, i64 %1368
  %1370 = load i64* %maxlen, align 8
  %1371 = load i8** %buf, align 8
  %1372 = load i64* %arg351, align 8
  %1373 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1369, i64 %1370, i8* noalias %1371, i32 %1366, i64 %1372, i32* %count298) nounwind
  store i32 %1373, i32* %retcount, align 4
  br label %bb421

bb354:                                            ; preds = %bb350
  %1374 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1375 = load i32* %1374, align 4
  %1376 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1377 = load i32* %1376, align 4
  %1378 = load i8** %result, align 8
  %1379 = load i64* %length, align 8
  %1380 = getelementptr inbounds i8* %1378, i64 %1379
  %1381 = load i64* %maxlen, align 8
  %1382 = load i8** %buf, align 8
  %1383 = load i64* %arg351, align 8
  %1384 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1380, i64 %1381, i8* noalias %1382, i32 %1377, i32 %1375, i64 %1383, i32* %count298) nounwind
  store i32 %1384, i32* %retcount, align 4
  br label %bb421

bb355:                                            ; preds = %bb350
  call void @abort() noreturn nounwind
  unreachable

bb357:                                            ; preds = %bb300
  %1385 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1386 = load %struct.argument** %1385, align 8
  %1387 = load %struct.char_directive** %dp, align 8
  %1388 = getelementptr inbounds %struct.char_directive* %1387, i32 0, i32 10
  %1389 = load i64* %1388, align 8
  %1390 = getelementptr inbounds %struct.argument* %1386, i64 %1389
  %1391 = getelementptr inbounds %struct.argument* %1390, i32 0, i32 1
  %1392 = getelementptr inbounds %union.argvalue_t* %1391, i32 0, i32 0
  %1393 = bitcast x86_fp80* %1392 to i64*
  %1394 = load i64* %1393, align 16
  store i64 %1394, i64* %arg358, align 8
  %1395 = load i32* %prefix_count, align 4
  switch i32 %1395, label %bb362 [
    i32 0, label %bb359
    i32 1, label %bb360
    i32 2, label %bb361
  ]

bb359:                                            ; preds = %bb357
  %1396 = load i8** %result, align 8
  %1397 = load i64* %length, align 8
  %1398 = getelementptr inbounds i8* %1396, i64 %1397
  %1399 = load i64* %maxlen, align 8
  %1400 = load i8** %buf, align 8
  %1401 = load i64* %arg358, align 8
  %1402 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1398, i64 %1399, i8* noalias %1400, i64 %1401, i32* %count298) nounwind
  store i32 %1402, i32* %retcount, align 4
  br label %bb421

bb360:                                            ; preds = %bb357
  %1403 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1404 = load i32* %1403, align 4
  %1405 = load i8** %result, align 8
  %1406 = load i64* %length, align 8
  %1407 = getelementptr inbounds i8* %1405, i64 %1406
  %1408 = load i64* %maxlen, align 8
  %1409 = load i8** %buf, align 8
  %1410 = load i64* %arg358, align 8
  %1411 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1407, i64 %1408, i8* noalias %1409, i32 %1404, i64 %1410, i32* %count298) nounwind
  store i32 %1411, i32* %retcount, align 4
  br label %bb421

bb361:                                            ; preds = %bb357
  %1412 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1413 = load i32* %1412, align 4
  %1414 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1415 = load i32* %1414, align 4
  %1416 = load i8** %result, align 8
  %1417 = load i64* %length, align 8
  %1418 = getelementptr inbounds i8* %1416, i64 %1417
  %1419 = load i64* %maxlen, align 8
  %1420 = load i8** %buf, align 8
  %1421 = load i64* %arg358, align 8
  %1422 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1418, i64 %1419, i8* noalias %1420, i32 %1415, i32 %1413, i64 %1421, i32* %count298) nounwind
  store i32 %1422, i32* %retcount, align 4
  br label %bb421

bb362:                                            ; preds = %bb357
  call void @abort() noreturn nounwind
  unreachable

bb364:                                            ; preds = %bb300
  %1423 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1424 = load %struct.argument** %1423, align 8
  %1425 = load %struct.char_directive** %dp, align 8
  %1426 = getelementptr inbounds %struct.char_directive* %1425, i32 0, i32 10
  %1427 = load i64* %1426, align 8
  %1428 = getelementptr inbounds %struct.argument* %1424, i64 %1427
  %1429 = getelementptr inbounds %struct.argument* %1428, i32 0, i32 1
  %1430 = getelementptr inbounds %union.argvalue_t* %1429, i32 0, i32 0
  %1431 = bitcast x86_fp80* %1430 to i64*
  %1432 = load i64* %1431, align 16
  store i64 %1432, i64* %arg365, align 8
  %1433 = load i32* %prefix_count, align 4
  switch i32 %1433, label %bb369 [
    i32 0, label %bb366
    i32 1, label %bb367
    i32 2, label %bb368
  ]

bb366:                                            ; preds = %bb364
  %1434 = load i8** %result, align 8
  %1435 = load i64* %length, align 8
  %1436 = getelementptr inbounds i8* %1434, i64 %1435
  %1437 = load i64* %maxlen, align 8
  %1438 = load i8** %buf, align 8
  %1439 = load i64* %arg365, align 8
  %1440 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1436, i64 %1437, i8* noalias %1438, i64 %1439, i32* %count298) nounwind
  store i32 %1440, i32* %retcount, align 4
  br label %bb421

bb367:                                            ; preds = %bb364
  %1441 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1442 = load i32* %1441, align 4
  %1443 = load i8** %result, align 8
  %1444 = load i64* %length, align 8
  %1445 = getelementptr inbounds i8* %1443, i64 %1444
  %1446 = load i64* %maxlen, align 8
  %1447 = load i8** %buf, align 8
  %1448 = load i64* %arg365, align 8
  %1449 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1445, i64 %1446, i8* noalias %1447, i32 %1442, i64 %1448, i32* %count298) nounwind
  store i32 %1449, i32* %retcount, align 4
  br label %bb421

bb368:                                            ; preds = %bb364
  %1450 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1451 = load i32* %1450, align 4
  %1452 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1453 = load i32* %1452, align 4
  %1454 = load i8** %result, align 8
  %1455 = load i64* %length, align 8
  %1456 = getelementptr inbounds i8* %1454, i64 %1455
  %1457 = load i64* %maxlen, align 8
  %1458 = load i8** %buf, align 8
  %1459 = load i64* %arg365, align 8
  %1460 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1456, i64 %1457, i8* noalias %1458, i32 %1453, i32 %1451, i64 %1459, i32* %count298) nounwind
  store i32 %1460, i32* %retcount, align 4
  br label %bb421

bb369:                                            ; preds = %bb364
  call void @abort() noreturn nounwind
  unreachable

bb371:                                            ; preds = %bb300
  %1461 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1462 = load %struct.argument** %1461, align 8
  %1463 = load %struct.char_directive** %dp, align 8
  %1464 = getelementptr inbounds %struct.char_directive* %1463, i32 0, i32 10
  %1465 = load i64* %1464, align 8
  %1466 = getelementptr inbounds %struct.argument* %1462, i64 %1465
  %1467 = getelementptr inbounds %struct.argument* %1466, i32 0, i32 1
  %1468 = getelementptr inbounds %union.argvalue_t* %1467, i32 0, i32 0
  %1469 = bitcast x86_fp80* %1468 to double*
  %1470 = load double* %1469, align 16
  store double %1470, double* %arg372, align 8
  %1471 = load i32* %prefix_count, align 4
  switch i32 %1471, label %bb376 [
    i32 0, label %bb373
    i32 1, label %bb374
    i32 2, label %bb375
  ]

bb373:                                            ; preds = %bb371
  %1472 = load i8** %result, align 8
  %1473 = load i64* %length, align 8
  %1474 = getelementptr inbounds i8* %1472, i64 %1473
  %1475 = load i64* %maxlen, align 8
  %1476 = load i8** %buf, align 8
  %1477 = load double* %arg372, align 8
  %1478 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1474, i64 %1475, i8* noalias %1476, double %1477, i32* %count298) nounwind
  store i32 %1478, i32* %retcount, align 4
  br label %bb421

bb374:                                            ; preds = %bb371
  %1479 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1480 = load i32* %1479, align 4
  %1481 = load i8** %result, align 8
  %1482 = load i64* %length, align 8
  %1483 = getelementptr inbounds i8* %1481, i64 %1482
  %1484 = load i64* %maxlen, align 8
  %1485 = load i8** %buf, align 8
  %1486 = load double* %arg372, align 8
  %1487 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1483, i64 %1484, i8* noalias %1485, i32 %1480, double %1486, i32* %count298) nounwind
  store i32 %1487, i32* %retcount, align 4
  br label %bb421

bb375:                                            ; preds = %bb371
  %1488 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1489 = load i32* %1488, align 4
  %1490 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1491 = load i32* %1490, align 4
  %1492 = load i8** %result, align 8
  %1493 = load i64* %length, align 8
  %1494 = getelementptr inbounds i8* %1492, i64 %1493
  %1495 = load i64* %maxlen, align 8
  %1496 = load i8** %buf, align 8
  %1497 = load double* %arg372, align 8
  %1498 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1494, i64 %1495, i8* noalias %1496, i32 %1491, i32 %1489, double %1497, i32* %count298) nounwind
  store i32 %1498, i32* %retcount, align 4
  br label %bb421

bb376:                                            ; preds = %bb371
  call void @abort() noreturn nounwind
  unreachable

bb378:                                            ; preds = %bb300
  %1499 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1500 = load %struct.argument** %1499, align 8
  %1501 = load %struct.char_directive** %dp, align 8
  %1502 = getelementptr inbounds %struct.char_directive* %1501, i32 0, i32 10
  %1503 = load i64* %1502, align 8
  %1504 = getelementptr inbounds %struct.argument* %1500, i64 %1503
  %1505 = getelementptr inbounds %struct.argument* %1504, i32 0, i32 1
  %1506 = getelementptr inbounds %union.argvalue_t* %1505, i32 0, i32 0
  %1507 = load x86_fp80* %1506, align 16
  store x86_fp80 %1507, x86_fp80* %arg379, align 16
  %1508 = load i32* %prefix_count, align 4
  switch i32 %1508, label %bb383 [
    i32 0, label %bb380
    i32 1, label %bb381
    i32 2, label %bb382
  ]

bb380:                                            ; preds = %bb378
  %1509 = load i8** %result, align 8
  %1510 = load i64* %length, align 8
  %1511 = getelementptr inbounds i8* %1509, i64 %1510
  %1512 = load i64* %maxlen, align 8
  %1513 = load i8** %buf, align 8
  %1514 = load x86_fp80* %arg379, align 16
  %1515 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1511, i64 %1512, i8* noalias %1513, x86_fp80 %1514, i32* %count298) nounwind
  store i32 %1515, i32* %retcount, align 4
  br label %bb421

bb381:                                            ; preds = %bb378
  %1516 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1517 = load i32* %1516, align 4
  %1518 = load i8** %result, align 8
  %1519 = load i64* %length, align 8
  %1520 = getelementptr inbounds i8* %1518, i64 %1519
  %1521 = load i64* %maxlen, align 8
  %1522 = load i8** %buf, align 8
  %1523 = load x86_fp80* %arg379, align 16
  %1524 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1520, i64 %1521, i8* noalias %1522, i32 %1517, x86_fp80 %1523, i32* %count298) nounwind
  store i32 %1524, i32* %retcount, align 4
  br label %bb421

bb382:                                            ; preds = %bb378
  %1525 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1526 = load i32* %1525, align 4
  %1527 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1528 = load i32* %1527, align 4
  %1529 = load i8** %result, align 8
  %1530 = load i64* %length, align 8
  %1531 = getelementptr inbounds i8* %1529, i64 %1530
  %1532 = load i64* %maxlen, align 8
  %1533 = load i8** %buf, align 8
  %1534 = load x86_fp80* %arg379, align 16
  %1535 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1531, i64 %1532, i8* noalias %1533, i32 %1528, i32 %1526, x86_fp80 %1534, i32* %count298) nounwind
  store i32 %1535, i32* %retcount, align 4
  br label %bb421

bb383:                                            ; preds = %bb378
  call void @abort() noreturn nounwind
  unreachable

bb385:                                            ; preds = %bb300
  %1536 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1537 = load %struct.argument** %1536, align 8
  %1538 = load %struct.char_directive** %dp, align 8
  %1539 = getelementptr inbounds %struct.char_directive* %1538, i32 0, i32 10
  %1540 = load i64* %1539, align 8
  %1541 = getelementptr inbounds %struct.argument* %1537, i64 %1540
  %1542 = getelementptr inbounds %struct.argument* %1541, i32 0, i32 1
  %1543 = getelementptr inbounds %union.argvalue_t* %1542, i32 0, i32 0
  %1544 = bitcast x86_fp80* %1543 to i32*
  %1545 = load i32* %1544, align 16
  store i32 %1545, i32* %arg386, align 4
  %1546 = load i32* %prefix_count, align 4
  switch i32 %1546, label %bb390 [
    i32 0, label %bb387
    i32 1, label %bb388
    i32 2, label %bb389
  ]

bb387:                                            ; preds = %bb385
  %1547 = load i8** %result, align 8
  %1548 = load i64* %length, align 8
  %1549 = getelementptr inbounds i8* %1547, i64 %1548
  %1550 = load i64* %maxlen, align 8
  %1551 = load i8** %buf, align 8
  %1552 = load i32* %arg386, align 4
  %1553 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1549, i64 %1550, i8* noalias %1551, i32 %1552, i32* %count298) nounwind
  store i32 %1553, i32* %retcount, align 4
  br label %bb421

bb388:                                            ; preds = %bb385
  %1554 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1555 = load i32* %1554, align 4
  %1556 = load i8** %result, align 8
  %1557 = load i64* %length, align 8
  %1558 = getelementptr inbounds i8* %1556, i64 %1557
  %1559 = load i64* %maxlen, align 8
  %1560 = load i8** %buf, align 8
  %1561 = load i32* %arg386, align 4
  %1562 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1558, i64 %1559, i8* noalias %1560, i32 %1555, i32 %1561, i32* %count298) nounwind
  store i32 %1562, i32* %retcount, align 4
  br label %bb421

bb389:                                            ; preds = %bb385
  %1563 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1564 = load i32* %1563, align 4
  %1565 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1566 = load i32* %1565, align 4
  %1567 = load i8** %result, align 8
  %1568 = load i64* %length, align 8
  %1569 = getelementptr inbounds i8* %1567, i64 %1568
  %1570 = load i64* %maxlen, align 8
  %1571 = load i8** %buf, align 8
  %1572 = load i32* %arg386, align 4
  %1573 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1569, i64 %1570, i8* noalias %1571, i32 %1566, i32 %1564, i32 %1572, i32* %count298) nounwind
  store i32 %1573, i32* %retcount, align 4
  br label %bb421

bb390:                                            ; preds = %bb385
  call void @abort() noreturn nounwind
  unreachable

bb392:                                            ; preds = %bb300
  %1574 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1575 = load %struct.argument** %1574, align 8
  %1576 = load %struct.char_directive** %dp, align 8
  %1577 = getelementptr inbounds %struct.char_directive* %1576, i32 0, i32 10
  %1578 = load i64* %1577, align 8
  %1579 = getelementptr inbounds %struct.argument* %1575, i64 %1578
  %1580 = getelementptr inbounds %struct.argument* %1579, i32 0, i32 1
  %1581 = getelementptr inbounds %union.argvalue_t* %1580, i32 0, i32 0
  %1582 = bitcast x86_fp80* %1581 to i32*
  %1583 = load i32* %1582, align 16
  store i32 %1583, i32* %arg393, align 4
  %1584 = load i32* %prefix_count, align 4
  switch i32 %1584, label %bb397 [
    i32 0, label %bb394
    i32 1, label %bb395
    i32 2, label %bb396
  ]

bb394:                                            ; preds = %bb392
  %1585 = load i8** %result, align 8
  %1586 = load i64* %length, align 8
  %1587 = getelementptr inbounds i8* %1585, i64 %1586
  %1588 = load i64* %maxlen, align 8
  %1589 = load i8** %buf, align 8
  %1590 = load i32* %arg393, align 4
  %1591 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1587, i64 %1588, i8* noalias %1589, i32 %1590, i32* %count298) nounwind
  store i32 %1591, i32* %retcount, align 4
  br label %bb421

bb395:                                            ; preds = %bb392
  %1592 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1593 = load i32* %1592, align 4
  %1594 = load i8** %result, align 8
  %1595 = load i64* %length, align 8
  %1596 = getelementptr inbounds i8* %1594, i64 %1595
  %1597 = load i64* %maxlen, align 8
  %1598 = load i8** %buf, align 8
  %1599 = load i32* %arg393, align 4
  %1600 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1596, i64 %1597, i8* noalias %1598, i32 %1593, i32 %1599, i32* %count298) nounwind
  store i32 %1600, i32* %retcount, align 4
  br label %bb421

bb396:                                            ; preds = %bb392
  %1601 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1602 = load i32* %1601, align 4
  %1603 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1604 = load i32* %1603, align 4
  %1605 = load i8** %result, align 8
  %1606 = load i64* %length, align 8
  %1607 = getelementptr inbounds i8* %1605, i64 %1606
  %1608 = load i64* %maxlen, align 8
  %1609 = load i8** %buf, align 8
  %1610 = load i32* %arg393, align 4
  %1611 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1607, i64 %1608, i8* noalias %1609, i32 %1604, i32 %1602, i32 %1610, i32* %count298) nounwind
  store i32 %1611, i32* %retcount, align 4
  br label %bb421

bb397:                                            ; preds = %bb392
  call void @abort() noreturn nounwind
  unreachable

bb399:                                            ; preds = %bb300
  %1612 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1613 = load %struct.argument** %1612, align 8
  %1614 = load %struct.char_directive** %dp, align 8
  %1615 = getelementptr inbounds %struct.char_directive* %1614, i32 0, i32 10
  %1616 = load i64* %1615, align 8
  %1617 = getelementptr inbounds %struct.argument* %1613, i64 %1616
  %1618 = getelementptr inbounds %struct.argument* %1617, i32 0, i32 1
  %1619 = getelementptr inbounds %union.argvalue_t* %1618, i32 0, i32 0
  %1620 = bitcast x86_fp80* %1619 to i8**
  %1621 = load i8** %1620, align 16
  store i8* %1621, i8** %arg400, align 8
  %1622 = load i32* %prefix_count, align 4
  switch i32 %1622, label %bb404 [
    i32 0, label %bb401
    i32 1, label %bb402
    i32 2, label %bb403
  ]

bb401:                                            ; preds = %bb399
  %1623 = load i8** %result, align 8
  %1624 = load i64* %length, align 8
  %1625 = getelementptr inbounds i8* %1623, i64 %1624
  %1626 = load i64* %maxlen, align 8
  %1627 = load i8** %buf, align 8
  %1628 = load i8** %arg400, align 8
  %1629 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1625, i64 %1626, i8* noalias %1627, i8* %1628, i32* %count298) nounwind
  store i32 %1629, i32* %retcount, align 4
  br label %bb421

bb402:                                            ; preds = %bb399
  %1630 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1631 = load i32* %1630, align 4
  %1632 = load i8** %result, align 8
  %1633 = load i64* %length, align 8
  %1634 = getelementptr inbounds i8* %1632, i64 %1633
  %1635 = load i64* %maxlen, align 8
  %1636 = load i8** %buf, align 8
  %1637 = load i8** %arg400, align 8
  %1638 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1634, i64 %1635, i8* noalias %1636, i32 %1631, i8* %1637, i32* %count298) nounwind
  store i32 %1638, i32* %retcount, align 4
  br label %bb421

bb403:                                            ; preds = %bb399
  %1639 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1640 = load i32* %1639, align 4
  %1641 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1642 = load i32* %1641, align 4
  %1643 = load i8** %result, align 8
  %1644 = load i64* %length, align 8
  %1645 = getelementptr inbounds i8* %1643, i64 %1644
  %1646 = load i64* %maxlen, align 8
  %1647 = load i8** %buf, align 8
  %1648 = load i8** %arg400, align 8
  %1649 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1645, i64 %1646, i8* noalias %1647, i32 %1642, i32 %1640, i8* %1648, i32* %count298) nounwind
  store i32 %1649, i32* %retcount, align 4
  br label %bb421

bb404:                                            ; preds = %bb399
  call void @abort() noreturn nounwind
  unreachable

bb406:                                            ; preds = %bb300
  %1650 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1651 = load %struct.argument** %1650, align 8
  %1652 = load %struct.char_directive** %dp, align 8
  %1653 = getelementptr inbounds %struct.char_directive* %1652, i32 0, i32 10
  %1654 = load i64* %1653, align 8
  %1655 = getelementptr inbounds %struct.argument* %1651, i64 %1654
  %1656 = getelementptr inbounds %struct.argument* %1655, i32 0, i32 1
  %1657 = getelementptr inbounds %union.argvalue_t* %1656, i32 0, i32 0
  %1658 = bitcast x86_fp80* %1657 to i32**
  %1659 = load i32** %1658, align 16
  store i32* %1659, i32** %arg407, align 8
  %1660 = load i32* %prefix_count, align 4
  switch i32 %1660, label %bb411 [
    i32 0, label %bb408
    i32 1, label %bb409
    i32 2, label %bb410
  ]

bb408:                                            ; preds = %bb406
  %1661 = load i8** %result, align 8
  %1662 = load i64* %length, align 8
  %1663 = getelementptr inbounds i8* %1661, i64 %1662
  %1664 = load i64* %maxlen, align 8
  %1665 = load i8** %buf, align 8
  %1666 = load i32** %arg407, align 8
  %1667 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1663, i64 %1664, i8* noalias %1665, i32* %1666, i32* %count298) nounwind
  store i32 %1667, i32* %retcount, align 4
  br label %bb421

bb409:                                            ; preds = %bb406
  %1668 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1669 = load i32* %1668, align 4
  %1670 = load i8** %result, align 8
  %1671 = load i64* %length, align 8
  %1672 = getelementptr inbounds i8* %1670, i64 %1671
  %1673 = load i64* %maxlen, align 8
  %1674 = load i8** %buf, align 8
  %1675 = load i32** %arg407, align 8
  %1676 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1672, i64 %1673, i8* noalias %1674, i32 %1669, i32* %1675, i32* %count298) nounwind
  store i32 %1676, i32* %retcount, align 4
  br label %bb421

bb410:                                            ; preds = %bb406
  %1677 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1678 = load i32* %1677, align 4
  %1679 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1680 = load i32* %1679, align 4
  %1681 = load i8** %result, align 8
  %1682 = load i64* %length, align 8
  %1683 = getelementptr inbounds i8* %1681, i64 %1682
  %1684 = load i64* %maxlen, align 8
  %1685 = load i8** %buf, align 8
  %1686 = load i32** %arg407, align 8
  %1687 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1683, i64 %1684, i8* noalias %1685, i32 %1680, i32 %1678, i32* %1686, i32* %count298) nounwind
  store i32 %1687, i32* %retcount, align 4
  br label %bb421

bb411:                                            ; preds = %bb406
  call void @abort() noreturn nounwind
  unreachable

bb413:                                            ; preds = %bb300
  %1688 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1689 = load %struct.argument** %1688, align 8
  %1690 = load %struct.char_directive** %dp, align 8
  %1691 = getelementptr inbounds %struct.char_directive* %1690, i32 0, i32 10
  %1692 = load i64* %1691, align 8
  %1693 = getelementptr inbounds %struct.argument* %1689, i64 %1692
  %1694 = getelementptr inbounds %struct.argument* %1693, i32 0, i32 1
  %1695 = getelementptr inbounds %union.argvalue_t* %1694, i32 0, i32 0
  %1696 = bitcast x86_fp80* %1695 to i8**
  %1697 = load i8** %1696, align 16
  store i8* %1697, i8** %arg414, align 8
  %1698 = load i32* %prefix_count, align 4
  switch i32 %1698, label %bb418 [
    i32 0, label %bb415
    i32 1, label %bb416
    i32 2, label %bb417
  ]

bb415:                                            ; preds = %bb413
  %1699 = load i8** %result, align 8
  %1700 = load i64* %length, align 8
  %1701 = getelementptr inbounds i8* %1699, i64 %1700
  %1702 = load i64* %maxlen, align 8
  %1703 = load i8** %buf, align 8
  %1704 = load i8** %arg414, align 8
  %1705 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1701, i64 %1702, i8* noalias %1703, i8* %1704, i32* %count298) nounwind
  store i32 %1705, i32* %retcount, align 4
  br label %bb421

bb416:                                            ; preds = %bb413
  %1706 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1707 = load i32* %1706, align 4
  %1708 = load i8** %result, align 8
  %1709 = load i64* %length, align 8
  %1710 = getelementptr inbounds i8* %1708, i64 %1709
  %1711 = load i64* %maxlen, align 8
  %1712 = load i8** %buf, align 8
  %1713 = load i8** %arg414, align 8
  %1714 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1710, i64 %1711, i8* noalias %1712, i32 %1707, i8* %1713, i32* %count298) nounwind
  store i32 %1714, i32* %retcount, align 4
  br label %bb421

bb417:                                            ; preds = %bb413
  %1715 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 1
  %1716 = load i32* %1715, align 4
  %1717 = getelementptr inbounds [2 x i32]* %prefixes, i64 0, i64 0
  %1718 = load i32* %1717, align 4
  %1719 = load i8** %result, align 8
  %1720 = load i64* %length, align 8
  %1721 = getelementptr inbounds i8* %1719, i64 %1720
  %1722 = load i64* %maxlen, align 8
  %1723 = load i8** %buf, align 8
  %1724 = load i8** %arg414, align 8
  %1725 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %1721, i64 %1722, i8* noalias %1723, i32 %1718, i32 %1716, i8* %1724, i32* %count298) nounwind
  store i32 %1725, i32* %retcount, align 4
  br label %bb421

bb418:                                            ; preds = %bb413
  call void @abort() noreturn nounwind
  unreachable

bb420:                                            ; preds = %bb300
  call void @abort() noreturn nounwind
  unreachable

bb421:                                            ; preds = %bb415, %bb416, %bb417, %bb408, %bb409, %bb410, %bb401, %bb402, %bb403, %bb394, %bb395, %bb396, %bb387, %bb388, %bb389, %bb380, %bb381, %bb382, %bb373, %bb374, %bb375, %bb366, %bb367, %bb368, %b
  %1726 = load i32* %count298, align 4
  %1727 = icmp sge i32 %1726, 0
  br i1 %1727, label %bb422, label %bb428

bb422:                                            ; preds = %bb421
  %1728 = load i32* %count298, align 4
  %1729 = sext i32 %1728 to i64
  %1730 = load i64* %maxlen, align 8
  %1731 = icmp ult i64 %1729, %1730
  br i1 %1731, label %bb423, label %bb425

bb423:                                            ; preds = %bb422
  %1732 = load i8** %result, align 8
  %1733 = load i64* %length, align 8
  %1734 = getelementptr inbounds i8* %1732, i64 %1733
  %1735 = load i32* %count298, align 4
  %1736 = sext i32 %1735 to i64
  %1737 = getelementptr inbounds i8* %1734, i64 %1736
  %1738 = load i8* %1737, align 1
  %1739 = icmp ne i8 %1738, 0
  br i1 %1739, label %bb424, label %bb425

bb424:                                            ; preds = %bb423
  call void @abort() noreturn nounwind
  unreachable

bb425:                                            ; preds = %bb423, %bb422
  %1740 = load i32* %count298, align 4
  %1741 = load i32* %retcount, align 4
  %1742 = icmp sgt i32 %1741, %1740
  br i1 %1742, label %bb426, label %bb432

bb426:                                            ; preds = %bb425
  %1743 = load i32* %retcount, align 4
  store i32 %1743, i32* %count298, align 4
  br label %bb432

bb428:                                            ; preds = %bb421
  %1744 = load i8** %fbp, align 8
  %1745 = getelementptr inbounds i8* %1744, i64 1
  %1746 = load i8* %1745, align 1
  %1747 = icmp ne i8 %1746, 0
  br i1 %1747, label %bb429, label %bb430

bb429:                                            ; preds = %bb428
  %1748 = load i8** %fbp, align 8
  %1749 = getelementptr inbounds i8* %1748, i64 1
  store i8 0, i8* %1749, align 1
  br label %bb297

bb430:                                            ; preds = %bb428
  %1750 = load i32* %retcount, align 4
  %1751 = icmp sge i32 %1750, 0
  br i1 %1751, label %bb431, label %bb432

bb431:                                            ; preds = %bb430
  %1752 = load i32* %retcount, align 4
  store i32 %1752, i32* %count298, align 4
  br label %bb432

bb432:                                            ; preds = %bb425, %bb426, %bb431, %bb430
  %1753 = load i32* %count298, align 4
  %1754 = icmp slt i32 %1753, 0
  br i1 %1754, label %bb433, label %bb450

bb433:                                            ; preds = %bb432
  %1755 = call i32* @__errno_location() nounwind readnone
  %1756 = load i32* %1755, align 4
  store i32 %1756, i32* %saved_errno, align 4
  %1757 = load i8** %result, align 8
  %1758 = load i8** %resultbuf_addr, align 8
  %1759 = icmp ne i8* %1757, %1758
  %1760 = load i8** %result, align 8
  %1761 = icmp ne i8* %1760, null
  %or.cond9 = and i1 %1759, %1761
  br i1 %or.cond9, label %bb435, label %bb436

bb435:                                            ; preds = %bb433
  %1762 = load i8** %result, align 8
  call void @free(i8* %1762) nounwind
  br label %bb436

bb436:                                            ; preds = %bb435, %bb433
  %1763 = load i8** %buf_malloced, align 8
  %1764 = icmp ne i8* %1763, null
  br i1 %1764, label %bb437, label %bb438

bb437:                                            ; preds = %bb436
  %1765 = load i8** %buf_malloced, align 8
  call void @free(i8* %1765) nounwind
  br label %bb438

bb438:                                            ; preds = %bb437, %bb436
  %1766 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 1
  %1767 = load %struct.char_directive** %1766, align 8
  %1768 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 4
  %1769 = getelementptr inbounds [7 x %struct.char_directive]* %1768, i64 0, i64 0
  %1770 = icmp ne %struct.char_directive* %1767, %1769
  br i1 %1770, label %bb439, label %bb440

bb439:                                            ; preds = %bb438
  %1771 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 1
  %1772 = load %struct.char_directive** %1771, align 8
  %1773 = bitcast %struct.char_directive* %1772 to i8*
  call void @free(i8* %1773) nounwind
  br label %bb440

bb440:                                            ; preds = %bb439, %bb438
  %1774 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1775 = load %struct.argument** %1774, align 8
  %1776 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 2
  %1777 = getelementptr inbounds [7 x %struct.argument]* %1776, i64 0, i64 0
  %1778 = icmp ne %struct.argument* %1775, %1777
  br i1 %1778, label %bb441, label %bb442

bb441:                                            ; preds = %bb440
  %1779 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1780 = load %struct.argument** %1779, align 8
  %1781 = bitcast %struct.argument* %1780 to i8*
  call void @free(i8* %1781) nounwind
  br label %bb442

bb442:                                            ; preds = %bb441, %bb440
  %1782 = call i32* @__errno_location() nounwind readnone
  %1783 = load i32* %saved_errno, align 4
  %1784 = icmp eq i32 %1783, 0
  br i1 %1784, label %bb443, label %bb448

bb443:                                            ; preds = %bb442
  %1785 = load %struct.char_directive** %dp, align 8
  %1786 = getelementptr inbounds %struct.char_directive* %1785, i32 0, i32 9
  %1787 = load i8* %1786, align 8
  %1788 = icmp eq i8 %1787, 99
  br i1 %1788, label %bb445, label %bb444

bb444:                                            ; preds = %bb443
  %1789 = load %struct.char_directive** %dp, align 8
  %1790 = getelementptr inbounds %struct.char_directive* %1789, i32 0, i32 9
  %1791 = load i8* %1790, align 8
  %1792 = icmp eq i8 %1791, 115
  br i1 %1792, label %bb445, label %bb446

bb445:                                            ; preds = %bb444, %bb443
  store i32 84, i32* %iftmp.36, align 4
  br label %bb447

bb446:                                            ; preds = %bb444
  store i32 22, i32* %iftmp.36, align 4
  br label %bb447

bb447:                                            ; preds = %bb446, %bb445
  %1793 = load i32* %iftmp.36, align 4
  store i32 %1793, i32* %iftmp.35, align 4
  br label %bb449

bb448:                                            ; preds = %bb442
  %1794 = load i32* %saved_errno, align 4
  store i32 %1794, i32* %iftmp.35, align 4
  br label %bb449

bb449:                                            ; preds = %bb448, %bb447
  %1795 = load i32* %iftmp.35, align 4
  store i32 %1795, i32* %1782, align 4
  store i8* null, i8** %2, align 8
  br label %bb531

bb450:                                            ; preds = %bb432
  %1796 = load i32* %count298, align 4
  %1797 = add i32 %1796, 1
  %1798 = zext i32 %1797 to i64
  %1799 = load i64* %maxlen, align 8
  %1800 = icmp uge i64 %1798, %1799
  br i1 %1800, label %bb451, label %bb478

bb451:                                            ; preds = %bb450
  %1801 = load i64* %maxlen, align 8
  %1802 = icmp eq i64 %1801, 2147483647
  br i1 %1802, label %overflow, label %bb452

bb452:                                            ; preds = %bb451
  %1803 = load i64* %allocated, align 8
  %1804 = icmp sge i64 %1803, 0
  br i1 %1804, label %bb454, label %bb455

bb454:                                            ; preds = %bb452
  %1805 = load i64* %allocated, align 8
  %1806 = mul i64 %1805, 2
  store i64 %1806, i64* %iftmp.39, align 8
  br label %bb456

bb455:                                            ; preds = %bb452
  store i64 -1, i64* %iftmp.39, align 8
  br label %bb456

bb456:                                            ; preds = %bb455, %bb454
  %1807 = load i32* %count298, align 4
  %1808 = add i32 %1807, 2
  %1809 = zext i32 %1808 to i64
  %1810 = load i64* %length, align 8
  %1811 = call i64 @xsum(i64 %1810, i64 %1809) nounwind readonly
  %1812 = load i64* %iftmp.39, align 8
  %1813 = call i64 @xmax(i64 %1811, i64 %1812) nounwind readonly
  store i64 %1813, i64* %n453, align 8
  %1814 = load i64* %n453, align 8
  %1815 = load i64* %allocated, align 8
  %1816 = icmp ugt i64 %1814, %1815
  br i1 %1816, label %bb457, label %bb297

bb457:                                            ; preds = %bb456
  %1817 = load i64* %allocated, align 8
  %1818 = icmp ne i64 %1817, 0
  br i1 %1818, label %bb460, label %bb464

bb460:                                            ; preds = %bb457
  %1819 = load i64* %allocated, align 8
  %1820 = icmp sge i64 %1819, 0
  br i1 %1820, label %bb461, label %bb462

bb461:                                            ; preds = %bb460
  %1821 = load i64* %allocated, align 8
  %1822 = mul i64 %1821, 2
  store i64 %1822, i64* %iftmp.44, align 8
  br label %bb463

bb462:                                            ; preds = %bb460
  store i64 -1, i64* %iftmp.44, align 8
  br label %bb463

bb463:                                            ; preds = %bb462, %bb461
  %1823 = load i64* %iftmp.44, align 8
  store i64 %1823, i64* %iftmp.43, align 8
  br label %bb465

bb464:                                            ; preds = %bb457
  store i64 12, i64* %iftmp.43, align 8
  br label %bb465

bb465:                                            ; preds = %bb464, %bb463
  %1824 = load i64* %iftmp.43, align 8
  store i64 %1824, i64* %allocated, align 8
  %1825 = load i64* %n453, align 8
  %1826 = load i64* %allocated, align 8
  %1827 = icmp ugt i64 %1825, %1826
  br i1 %1827, label %bb466, label %bb467

bb466:                                            ; preds = %bb465
  %1828 = load i64* %n453, align 8
  store i64 %1828, i64* %allocated, align 8
  br label %bb467

bb467:                                            ; preds = %bb466, %bb465
  %1829 = load i64* %allocated, align 8
  store i64 %1829, i64* %memory_size458, align 8
  %1830 = load i64* %memory_size458, align 8
  %1831 = icmp eq i64 %1830, -1
  br i1 %1831, label %out_of_memory, label %bb468

bb468:                                            ; preds = %bb467
  %1832 = load i8** %result, align 8
  %1833 = load i8** %resultbuf_addr, align 8
  %1834 = icmp eq i8* %1832, %1833
  %1835 = load i8** %result, align 8
  %1836 = icmp eq i8* %1835, null
  %or.cond11 = or i1 %1834, %1836
  br i1 %or.cond11, label %bb470, label %bb471

bb470:                                            ; preds = %bb468
  %1837 = load i64* %memory_size458, align 8
  %1838 = call noalias i8* @malloc(i64 %1837) nounwind
  store i8* %1838, i8** %memory459, align 8
  br label %bb472

bb471:                                            ; preds = %bb468
  %1839 = load i8** %result, align 8
  %1840 = load i64* %memory_size458, align 8
  %1841 = call i8* @realloc(i8* %1839, i64 %1840) nounwind
  store i8* %1841, i8** %memory459, align 8
  br label %bb472

bb472:                                            ; preds = %bb471, %bb470
  %1842 = load i8** %memory459, align 8
  %1843 = icmp eq i8* %1842, null
  br i1 %1843, label %out_of_memory, label %bb473

bb473:                                            ; preds = %bb472
  %1844 = load i8** %result, align 8
  %1845 = load i8** %resultbuf_addr, align 8
  %1846 = icmp eq i8* %1844, %1845
  br i1 %1846, label %bb474, label %bb476

bb474:                                            ; preds = %bb473
  %1847 = load i64* %length, align 8
  %1848 = icmp ne i64 %1847, 0
  br i1 %1848, label %bb475, label %bb476

bb475:                                            ; preds = %bb474
  %1849 = load i8** %memory459, align 8
  %1850 = load i8** %result, align 8
  %1851 = load i64* %length, align 8
  %1852 = call i8* @memcpy(i8* %1849, i8* %1850, i64 %1851)
  br label %bb476

bb476:                                            ; preds = %bb475, %bb474, %bb473
  %1853 = load i8** %memory459, align 8
  store i8* %1853, i8** %result, align 8
  br label %bb297

bb478:                                            ; preds = %bb450
  %1854 = load i32* %count298, align 4
  %1855 = sext i32 %1854 to i64
  %1856 = load i64* %length, align 8
  %1857 = add i64 %1855, %1856
  store i64 %1857, i64* %length, align 8
  %1858 = call i32* @__errno_location() nounwind readnone
  %1859 = load i32* %orig_errno, align 4
  store i32 %1859, i32* %1858, align 4
  br label %bb480

bb480:                                            ; preds = %bb68, %bb69, %bb70, %bb71, %bb72, %bb478, %bb241, %bb63
  %1860 = load %struct.char_directive** %dp, align 8
  %1861 = getelementptr inbounds %struct.char_directive* %1860, i32 0, i32 1
  %1862 = load i8** %1861, align 8
  store i8* %1862, i8** %cp, align 8
  %1863 = load i64* %i, align 8
  %1864 = add i64 %1863, 1
  store i64 %1864, i64* %i, align 8
  %1865 = load %struct.char_directive** %dp, align 8
  %1866 = getelementptr inbounds %struct.char_directive* %1865, i64 1
  store %struct.char_directive* %1866, %struct.char_directive** %dp, align 8
  br label %bb16

bb481:                                            ; preds = %bb37
  %1867 = load i64* %length, align 8
  %1868 = call i64 @xsum(i64 %1867, i64 1) nounwind readonly
  %1869 = load i64* %allocated, align 8
  %1870 = icmp ugt i64 %1868, %1869
  br i1 %1870, label %bb482, label %bb502

bb482:                                            ; preds = %bb481
  %1871 = load i64* %allocated, align 8
  %1872 = icmp ne i64 %1871, 0
  br i1 %1872, label %bb485, label %bb489

bb485:                                            ; preds = %bb482
  %1873 = load i64* %allocated, align 8
  %1874 = icmp sge i64 %1873, 0
  br i1 %1874, label %bb486, label %bb487

bb486:                                            ; preds = %bb485
  %1875 = load i64* %allocated, align 8
  %1876 = mul i64 %1875, 2
  store i64 %1876, i64* %iftmp.48, align 8
  br label %bb488

bb487:                                            ; preds = %bb485
  store i64 -1, i64* %iftmp.48, align 8
  br label %bb488

bb488:                                            ; preds = %bb487, %bb486
  %1877 = load i64* %iftmp.48, align 8
  store i64 %1877, i64* %iftmp.47, align 8
  br label %bb490

bb489:                                            ; preds = %bb482
  store i64 12, i64* %iftmp.47, align 8
  br label %bb490

bb490:                                            ; preds = %bb489, %bb488
  %1878 = load i64* %iftmp.47, align 8
  store i64 %1878, i64* %allocated, align 8
  %1879 = load i64* %length, align 8
  %1880 = call i64 @xsum(i64 %1879, i64 1) nounwind readonly
  %1881 = load i64* %allocated, align 8
  %1882 = icmp ugt i64 %1880, %1881
  br i1 %1882, label %bb491, label %bb492

bb491:                                            ; preds = %bb490
  %1883 = load i64* %length, align 8
  %1884 = call i64 @xsum(i64 %1883, i64 1) nounwind readonly
  store i64 %1884, i64* %allocated, align 8
  br label %bb492

bb492:                                            ; preds = %bb491, %bb490
  %1885 = load i64* %allocated, align 8
  store i64 %1885, i64* %memory_size483, align 8
  %1886 = load i64* %memory_size483, align 8
  %1887 = icmp eq i64 %1886, -1
  br i1 %1887, label %out_of_memory, label %bb493

bb493:                                            ; preds = %bb492
  %1888 = load i8** %result, align 8
  %1889 = load i8** %resultbuf_addr, align 8
  %1890 = icmp eq i8* %1888, %1889
  %1891 = load i8** %result, align 8
  %1892 = icmp eq i8* %1891, null
  %or.cond13 = or i1 %1890, %1892
  br i1 %or.cond13, label %bb495, label %bb496

bb495:                                            ; preds = %bb493
  %1893 = load i64* %memory_size483, align 8
  %1894 = call noalias i8* @malloc(i64 %1893) nounwind
  store i8* %1894, i8** %memory484, align 8
  br label %bb497

bb496:                                            ; preds = %bb493
  %1895 = load i8** %result, align 8
  %1896 = load i64* %memory_size483, align 8
  %1897 = call i8* @realloc(i8* %1895, i64 %1896) nounwind
  store i8* %1897, i8** %memory484, align 8
  br label %bb497

bb497:                                            ; preds = %bb496, %bb495
  %1898 = load i8** %memory484, align 8
  %1899 = icmp eq i8* %1898, null
  br i1 %1899, label %out_of_memory, label %bb498

bb498:                                            ; preds = %bb497
  %1900 = load i8** %result, align 8
  %1901 = load i8** %resultbuf_addr, align 8
  %1902 = icmp eq i8* %1900, %1901
  br i1 %1902, label %bb499, label %bb501

bb499:                                            ; preds = %bb498
  %1903 = load i64* %length, align 8
  %1904 = icmp ne i64 %1903, 0
  br i1 %1904, label %bb500, label %bb501

bb500:                                            ; preds = %bb499
  %1905 = load i8** %memory484, align 8
  %1906 = load i8** %result, align 8
  %1907 = load i64* %length, align 8
  %1908 = call i8* @memcpy(i8* %1905, i8* %1906, i64 %1907)
  br label %bb501

bb501:                                            ; preds = %bb500, %bb499, %bb498
  %1909 = load i8** %memory484, align 8
  store i8* %1909, i8** %result, align 8
  br label %bb502

bb502:                                            ; preds = %bb501, %bb481
  %1910 = load i8** %result, align 8
  %1911 = load i64* %length, align 8
  %1912 = getelementptr inbounds i8* %1910, i64 %1911
  store i8 0, i8* %1912, align 1
  %1913 = load i8** %result, align 8
  %1914 = load i8** %resultbuf_addr, align 8
  %1915 = icmp ne i8* %1913, %1914
  br i1 %1915, label %bb503, label %bb507

bb503:                                            ; preds = %bb502
  %1916 = load i64* %length, align 8
  %1917 = add i64 %1916, 1
  %1918 = load i64* %allocated, align 8
  %1919 = icmp ult i64 %1917, %1918
  br i1 %1919, label %bb504, label %bb507

bb504:                                            ; preds = %bb503
  %1920 = load i64* %length, align 8
  %1921 = add i64 %1920, 1
  %1922 = load i8** %result, align 8
  %1923 = call i8* @realloc(i8* %1922, i64 %1921) nounwind
  store i8* %1923, i8** %memory505, align 8
  %1924 = load i8** %memory505, align 8
  %1925 = icmp ne i8* %1924, null
  br i1 %1925, label %bb506, label %bb507

bb506:                                            ; preds = %bb504
  %1926 = load i8** %memory505, align 8
  store i8* %1926, i8** %result, align 8
  br label %bb507

bb507:                                            ; preds = %bb506, %bb504, %bb503, %bb502
  %1927 = load i8** %buf_malloced, align 8
  %1928 = icmp ne i8* %1927, null
  br i1 %1928, label %bb508, label %bb509

bb508:                                            ; preds = %bb507
  %1929 = load i8** %buf_malloced, align 8
  call void @free(i8* %1929) nounwind
  br label %bb509

bb509:                                            ; preds = %bb508, %bb507
  %1930 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 1
  %1931 = load %struct.char_directive** %1930, align 8
  %1932 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 4
  %1933 = getelementptr inbounds [7 x %struct.char_directive]* %1932, i64 0, i64 0
  %1934 = icmp ne %struct.char_directive* %1931, %1933
  br i1 %1934, label %bb510, label %bb511

bb510:                                            ; preds = %bb509
  %1935 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 1
  %1936 = load %struct.char_directive** %1935, align 8
  %1937 = bitcast %struct.char_directive* %1936 to i8*
  call void @free(i8* %1937) nounwind
  br label %bb511

bb511:                                            ; preds = %bb510, %bb509
  %1938 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1939 = load %struct.argument** %1938, align 8
  %1940 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 2
  %1941 = getelementptr inbounds [7 x %struct.argument]* %1940, i64 0, i64 0
  %1942 = icmp ne %struct.argument* %1939, %1941
  br i1 %1942, label %bb512, label %bb513

bb512:                                            ; preds = %bb511
  %1943 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1944 = load %struct.argument** %1943, align 8
  %1945 = bitcast %struct.argument* %1944 to i8*
  call void @free(i8* %1945) nounwind
  br label %bb513

bb513:                                            ; preds = %bb512, %bb511
  %1946 = load i64** %lengthp_addr, align 8
  %1947 = load i64* %length, align 8
  store i64 %1947, i64* %1946, align 8
  %1948 = load i8** %result, align 8
  store i8* %1948, i8** %2, align 8
  br label %bb531

overflow:                                         ; preds = %bb451
  %1949 = load i8** %result, align 8
  %1950 = load i8** %resultbuf_addr, align 8
  %1951 = icmp ne i8* %1949, %1950
  %1952 = load i8** %result, align 8
  %1953 = icmp ne i8* %1952, null
  %or.cond15 = and i1 %1951, %1953
  br i1 %or.cond15, label %bb515, label %bb516

bb515:                                            ; preds = %overflow
  %1954 = load i8** %result, align 8
  call void @free(i8* %1954) nounwind
  br label %bb516

bb516:                                            ; preds = %bb515, %overflow
  %1955 = load i8** %buf_malloced, align 8
  %1956 = icmp ne i8* %1955, null
  br i1 %1956, label %bb517, label %bb518

bb517:                                            ; preds = %bb516
  %1957 = load i8** %buf_malloced, align 8
  call void @free(i8* %1957) nounwind
  br label %bb518

bb518:                                            ; preds = %bb517, %bb516
  %1958 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 1
  %1959 = load %struct.char_directive** %1958, align 8
  %1960 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 4
  %1961 = getelementptr inbounds [7 x %struct.char_directive]* %1960, i64 0, i64 0
  %1962 = icmp ne %struct.char_directive* %1959, %1961
  br i1 %1962, label %bb519, label %bb520

bb519:                                            ; preds = %bb518
  %1963 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 1
  %1964 = load %struct.char_directive** %1963, align 8
  %1965 = bitcast %struct.char_directive* %1964 to i8*
  call void @free(i8* %1965) nounwind
  br label %bb520

bb520:                                            ; preds = %bb519, %bb518
  %1966 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1967 = load %struct.argument** %1966, align 8
  %1968 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 2
  %1969 = getelementptr inbounds [7 x %struct.argument]* %1968, i64 0, i64 0
  %1970 = icmp ne %struct.argument* %1967, %1969
  br i1 %1970, label %bb521, label %bb522

bb521:                                            ; preds = %bb520
  %1971 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1972 = load %struct.argument** %1971, align 8
  %1973 = bitcast %struct.argument* %1972 to i8*
  call void @free(i8* %1973) nounwind
  br label %bb522

bb522:                                            ; preds = %bb521, %bb520
  %1974 = call i32* @__errno_location() nounwind readnone
  store i32 75, i32* %1974, align 4
  store i8* null, i8** %2, align 8
  br label %bb531

out_of_memory:                                    ; preds = %bb497, %bb492, %bb472, %bb467, %bb291, %bb286, %bb233, %bb228, %bb127, %bb126, %bb58, %bb53, %bb31, %bb26
  %1975 = load i8** %result, align 8
  %1976 = load i8** %resultbuf_addr, align 8
  %1977 = icmp ne i8* %1975, %1976
  %1978 = load i8** %result, align 8
  %1979 = icmp ne i8* %1978, null
  %or.cond17 = and i1 %1977, %1979
  br i1 %or.cond17, label %bb524, label %bb525

bb524:                                            ; preds = %out_of_memory
  %1980 = load i8** %result, align 8
  call void @free(i8* %1980) nounwind
  br label %bb525

bb525:                                            ; preds = %bb524, %out_of_memory
  %1981 = load i8** %buf_malloced, align 8
  %1982 = icmp ne i8* %1981, null
  br i1 %1982, label %bb526, label %out_of_memory_1

bb526:                                            ; preds = %bb525
  %1983 = load i8** %buf_malloced, align 8
  call void @free(i8* %1983) nounwind
  br label %out_of_memory_1

out_of_memory_1:                                  ; preds = %bb526, %bb525, %bb10, %bb9
  %1984 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 1
  %1985 = load %struct.char_directive** %1984, align 8
  %1986 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 4
  %1987 = getelementptr inbounds [7 x %struct.char_directive]* %1986, i64 0, i64 0
  %1988 = icmp ne %struct.char_directive* %1985, %1987
  br i1 %1988, label %bb527, label %bb528

bb527:                                            ; preds = %out_of_memory_1
  %1989 = getelementptr inbounds %struct.char_directives* %d, i32 0, i32 1
  %1990 = load %struct.char_directive** %1989, align 8
  %1991 = bitcast %struct.char_directive* %1990 to i8*
  call void @free(i8* %1991) nounwind
  br label %bb528

bb528:                                            ; preds = %bb527, %out_of_memory_1
  %1992 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1993 = load %struct.argument** %1992, align 8
  %1994 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 2
  %1995 = getelementptr inbounds [7 x %struct.argument]* %1994, i64 0, i64 0
  %1996 = icmp ne %struct.argument* %1993, %1995
  br i1 %1996, label %bb529, label %bb530

bb529:                                            ; preds = %bb528
  %1997 = getelementptr inbounds %struct.arguments* %a, i32 0, i32 1
  %1998 = load %struct.argument** %1997, align 8
  %1999 = bitcast %struct.argument* %1998 to i8*
  call void @free(i8* %1999) nounwind
  br label %bb530

bb530:                                            ; preds = %bb529, %bb528
  %2000 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %2000, align 4
  store i8* null, i8** %2, align 8
  br label %bb531

bb531:                                            ; preds = %bb530, %bb522, %bb513, %bb449, %bb6, %bb
  %2001 = load i8** %2, align 8
  store i8* %2001, i8** %retval, align 8
  %retval532 = load i8** %retval
  ret i8* %retval532
}

define zeroext i8 @c_isascii(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp slt i32 %1, 0
  %3 = load i32* %c_addr, align 4
  %4 = icmp sgt i32 %3, 127
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb2, label %bb1

bb1:                                              ; preds = %entry
  store i32 1, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 0, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i32* %iftmp.0, align 4
  %6 = trunc i32 %5 to i8
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define zeroext i8 @c_isalnum(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.1 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp sgt i32 %1, 47
  %3 = load i32* %c_addr, align 4
  %4 = icmp sle i32 %3, 57
  %or.cond = and i1 %2, %4
  br i1 %or.cond, label %bb3, label %bb1

bb1:                                              ; preds = %entry
  %5 = load i32* %c_addr, align 4
  %6 = and i32 %5, -33
  %7 = icmp sle i32 %6, 64
  br i1 %7, label %bb4, label %bb2

bb2:                                              ; preds = %bb1
  %8 = load i32* %c_addr, align 4
  %9 = and i32 %8, -33
  %10 = icmp sle i32 %9, 90
  br i1 %10, label %bb3, label %bb4

bb3:                                              ; preds = %entry, %bb2
  store i32 1, i32* %iftmp.1, align 4
  br label %bb5

bb4:                                              ; preds = %bb2, %bb1
  store i32 0, i32* %iftmp.1, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %11 = load i32* %iftmp.1, align 4
  %12 = trunc i32 %11 to i8
  %13 = zext i8 %12 to i32
  store i32 %13, i32* %0, align 4
  %14 = load i32* %0, align 4
  store i32 %14, i32* %retval, align 4
  %retval6 = load i32* %retval
  %retval67 = trunc i32 %retval6 to i8
  ret i8 %retval67
}

define zeroext i8 @c_isalpha(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.2 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = and i32 %1, -33
  %3 = icmp sle i32 %2, 64
  br i1 %3, label %bb2, label %bb

bb:                                               ; preds = %entry
  %4 = load i32* %c_addr, align 4
  %5 = and i32 %4, -33
  %6 = icmp sgt i32 %5, 90
  br i1 %6, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.2, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.2, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %7 = load i32* %iftmp.2, align 4
  %8 = trunc i32 %7 to i8
  %9 = zext i8 %8 to i32
  store i32 %9, i32* %0, align 4
  %10 = load i32* %0, align 4
  store i32 %10, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define zeroext i8 @c_isblank(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.3 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp eq i32 %1, 32
  %3 = load i32* %c_addr, align 4
  %4 = icmp eq i32 %3, 9
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb1, label %bb2

bb1:                                              ; preds = %entry
  store i32 1, i32* %iftmp.3, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 0, i32* %iftmp.3, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i32* %iftmp.3, align 4
  %6 = trunc i32 %5 to i8
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define zeroext i8 @c_iscntrl(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.4 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = and i32 %1, -32
  %3 = icmp eq i32 %2, 0
  %4 = load i32* %c_addr, align 4
  %5 = icmp eq i32 %4, 127
  %or.cond = or i1 %3, %5
  br i1 %or.cond, label %bb1, label %bb2

bb1:                                              ; preds = %entry
  store i32 1, i32* %iftmp.4, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 0, i32* %iftmp.4, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i32* %iftmp.4, align 4
  %7 = trunc i32 %6 to i8
  %8 = zext i8 %7 to i32
  store i32 %8, i32* %0, align 4
  %9 = load i32* %0, align 4
  store i32 %9, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define zeroext i8 @c_isdigit(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.5 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp sle i32 %1, 47
  %3 = load i32* %c_addr, align 4
  %4 = icmp sgt i32 %3, 57
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb2, label %bb1

bb1:                                              ; preds = %entry
  store i32 1, i32* %iftmp.5, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 0, i32* %iftmp.5, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i32* %iftmp.5, align 4
  %6 = trunc i32 %5 to i8
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define zeroext i8 @c_islower(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.6 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp sle i32 %1, 96
  %3 = load i32* %c_addr, align 4
  %4 = icmp sgt i32 %3, 122
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb2, label %bb1

bb1:                                              ; preds = %entry
  store i32 1, i32* %iftmp.6, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 0, i32* %iftmp.6, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i32* %iftmp.6, align 4
  %6 = trunc i32 %5 to i8
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define zeroext i8 @c_isgraph(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.7 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp sle i32 %1, 32
  %3 = load i32* %c_addr, align 4
  %4 = icmp sgt i32 %3, 126
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb2, label %bb1

bb1:                                              ; preds = %entry
  store i32 1, i32* %iftmp.7, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 0, i32* %iftmp.7, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i32* %iftmp.7, align 4
  %6 = trunc i32 %5 to i8
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define zeroext i8 @c_isprint(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.8 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp sle i32 %1, 31
  %3 = load i32* %c_addr, align 4
  %4 = icmp sgt i32 %3, 126
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb2, label %bb1

bb1:                                              ; preds = %entry
  store i32 1, i32* %iftmp.8, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 0, i32* %iftmp.8, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i32* %iftmp.8, align 4
  %6 = trunc i32 %5 to i8
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define zeroext i8 @c_ispunct(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.9 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp sle i32 %1, 32
  %3 = load i32* %c_addr, align 4
  %4 = icmp sgt i32 %3, 126
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb6, label %bb1

bb1:                                              ; preds = %entry
  %5 = load i32* %c_addr, align 4
  %6 = icmp sle i32 %5, 47
  %7 = load i32* %c_addr, align 4
  %8 = icmp sgt i32 %7, 57
  %or.cond3 = or i1 %6, %8
  br i1 %or.cond3, label %bb3, label %bb6

bb3:                                              ; preds = %bb1
  %9 = load i32* %c_addr, align 4
  %10 = and i32 %9, -33
  %11 = icmp sle i32 %10, 64
  br i1 %11, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %12 = load i32* %c_addr, align 4
  %13 = and i32 %12, -33
  %14 = icmp sgt i32 %13, 90
  br i1 %14, label %bb5, label %bb6

bb5:                                              ; preds = %bb4, %bb3
  store i32 1, i32* %iftmp.9, align 4
  br label %bb7

bb6:                                              ; preds = %bb1, %bb4, %entry
  store i32 0, i32* %iftmp.9, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %15 = load i32* %iftmp.9, align 4
  %16 = trunc i32 %15 to i8
  %17 = zext i8 %16 to i32
  store i32 %17, i32* %0, align 4
  %18 = load i32* %0, align 4
  store i32 %18, i32* %retval, align 4
  %retval8 = load i32* %retval
  %retval89 = trunc i32 %retval8 to i8
  ret i8 %retval89
}

define zeroext i8 @c_isspace(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.10 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp eq i32 %1, 32
  %3 = load i32* %c_addr, align 4
  %4 = icmp eq i32 %3, 9
  %or.cond = or i1 %2, %4
  %5 = load i32* %c_addr, align 4
  %6 = icmp eq i32 %5, 10
  %or.cond3 = or i1 %or.cond, %6
  %7 = load i32* %c_addr, align 4
  %8 = icmp eq i32 %7, 11
  %or.cond5 = or i1 %or.cond3, %8
  %9 = load i32* %c_addr, align 4
  %10 = icmp eq i32 %9, 12
  %or.cond7 = or i1 %or.cond5, %10
  %11 = load i32* %c_addr, align 4
  %12 = icmp eq i32 %11, 13
  %or.cond9 = or i1 %or.cond7, %12
  br i1 %or.cond9, label %bb5, label %bb6

bb5:                                              ; preds = %entry
  store i32 1, i32* %iftmp.10, align 4
  br label %bb7

bb6:                                              ; preds = %entry
  store i32 0, i32* %iftmp.10, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %13 = load i32* %iftmp.10, align 4
  %14 = trunc i32 %13 to i8
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval8 = load i32* %retval
  %retval89 = trunc i32 %retval8 to i8
  ret i8 %retval89
}

define zeroext i8 @c_isupper(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.11 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp sle i32 %1, 64
  %3 = load i32* %c_addr, align 4
  %4 = icmp sgt i32 %3, 90
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb2, label %bb1

bb1:                                              ; preds = %entry
  store i32 1, i32* %iftmp.11, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 0, i32* %iftmp.11, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i32* %iftmp.11, align 4
  %6 = trunc i32 %5 to i8
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define zeroext i8 @c_isxdigit(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.12 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp sgt i32 %1, 47
  %3 = load i32* %c_addr, align 4
  %4 = icmp sle i32 %3, 57
  %or.cond = and i1 %2, %4
  br i1 %or.cond, label %bb3, label %bb1

bb1:                                              ; preds = %entry
  %5 = load i32* %c_addr, align 4
  %6 = and i32 %5, -33
  %7 = icmp sle i32 %6, 64
  br i1 %7, label %bb4, label %bb2

bb2:                                              ; preds = %bb1
  %8 = load i32* %c_addr, align 4
  %9 = and i32 %8, -33
  %10 = icmp sle i32 %9, 70
  br i1 %10, label %bb3, label %bb4

bb3:                                              ; preds = %entry, %bb2
  store i32 1, i32* %iftmp.12, align 4
  br label %bb5

bb4:                                              ; preds = %bb2, %bb1
  store i32 0, i32* %iftmp.12, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %11 = load i32* %iftmp.12, align 4
  %12 = trunc i32 %11 to i8
  %13 = zext i8 %12 to i32
  store i32 %13, i32* %0, align 4
  %14 = load i32* %0, align 4
  store i32 %14, i32* %retval, align 4
  %retval6 = load i32* %retval
  %retval67 = trunc i32 %retval6 to i8
  ret i8 %retval67
}

define i32 @c_tolower(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.13 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp sle i32 %1, 64
  %3 = load i32* %c_addr, align 4
  %4 = icmp sgt i32 %3, 90
  %or.cond = or i1 %2, %4
  %5 = load i32* %c_addr, align 4
  br i1 %or.cond, label %bb2, label %bb1

bb1:                                              ; preds = %entry
  %6 = add nsw i32 %5, 32
  store i32 %6, i32* %iftmp.13, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 %5, i32* %iftmp.13, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %7 = load i32* %iftmp.13, align 4
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval4 = load i32* %retval
  ret i32 %retval4
}

define i32 @c_toupper(i32 %c) nounwind readnone {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.14 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp sle i32 %1, 96
  %3 = load i32* %c_addr, align 4
  %4 = icmp sgt i32 %3, 122
  %or.cond = or i1 %2, %4
  %5 = load i32* %c_addr, align 4
  br i1 %or.cond, label %bb2, label %bb1

bb1:                                              ; preds = %entry
  %6 = sub nsw i32 %5, 32
  store i32 %6, i32* %iftmp.14, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 %5, i32* %iftmp.14, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %7 = load i32* %iftmp.14, align 4
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval4 = load i32* %retval
  ret i32 %retval4
}

define i8* @mmalloca(i64 %n) nounwind {
entry:
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %nplus = alloca i64
  %p = alloca i8*
  %slot = alloca i64
  %h = alloca %union.header*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  %1 = load i64* %n_addr, align 8
  %2 = add i64 %1, 16
  store i64 %2, i64* %nplus, align 8
  %3 = load i64* %nplus, align 8
  %4 = load i64* %n_addr, align 8
  %5 = icmp uge i64 %3, %4
  br i1 %5, label %bb, label %bb2

bb:                                               ; preds = %entry
  %6 = load i64* %nplus, align 8
  %7 = call noalias i8* @malloc(i64 %6) nounwind
  store i8* %7, i8** %p, align 8
  %8 = load i8** %p, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %10 = load i8** %p, align 8
  %11 = bitcast i8* %10 to %union.header*
  store %union.header* %11, %union.header** %h, align 8
  %12 = load %union.header** %h, align 8
  %13 = getelementptr inbounds %union.header* %12, i64 1
  %14 = bitcast %union.header* %13 to i8*
  store i8* %14, i8** %p, align 8
  %15 = load %union.header** %h, align 8
  %16 = getelementptr inbounds %union.header* %15, i32 0, i32 0
  %17 = bitcast i8** %16 to %struct.anon*
  %18 = getelementptr inbounds %struct.anon* %17, i32 0, i32 1
  store i32 336984906, i32* %18, align 4
  %19 = load i8** %p, align 8
  %20 = ptrtoint i8* %19 to i64
  %int_cast_to_i64 = bitcast i64 257 to i64
  %21 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %22 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %22, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb1
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb1
  call void @klee_disable_symbex() nounwind
  %23 = urem i64 %20, 257
  store i64 %23, i64* %slot, align 8
  %24 = load i64* %slot, align 8
  %25 = getelementptr inbounds [257 x i8*]* @mmalloca_results, i64 0, i64 %24
  %26 = load i8** %25, align 8
  %27 = load %union.header** %h, align 8
  %28 = getelementptr inbounds %union.header* %27, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = load i64* %slot, align 8
  %30 = getelementptr inbounds [257 x i8*]* @mmalloca_results, i64 0, i64 %29
  %31 = load i8** %p, align 8
  store i8* %31, i8** %30, align 8
  %32 = load i8** %p, align 8
  store i8* %32, i8** %0, align 8
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i8* null, i8** %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %klee_div_zero_check.exit
  %33 = load i8** %0, align 8
  store i8* %33, i8** %retval, align 8
  %retval4 = load i8** %retval
  ret i8* %retval4
}

define void @freea(i8* %p) nounwind {
entry:
  %p_addr = alloca i8*, align 8
  %slot = alloca i64
  %chain = alloca i8**
  %h = alloca %union.header*
  %p_begin = alloca %union.header*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  %0 = load i8** %p_addr, align 8
  %1 = icmp ne i8* %0, null
  br i1 %1, label %bb, label %return

bb:                                               ; preds = %entry
  %2 = load i8** %p_addr, align 8
  %3 = bitcast i8* %2 to i32*
  %4 = getelementptr inbounds i32* %3, i64 -1
  %5 = load i32* %4, align 1
  %6 = icmp eq i32 %5, 336984906
  br i1 %6, label %bb1, label %return

bb1:                                              ; preds = %bb
  %7 = load i8** %p_addr, align 8
  %8 = ptrtoint i8* %7 to i64
  %int_cast_to_i64 = bitcast i64 257 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb1
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb1
  call void @klee_disable_symbex() nounwind
  %11 = urem i64 %8, 257
  store i64 %11, i64* %slot, align 8
  %12 = load i64* %slot, align 8
  %13 = getelementptr inbounds [257 x i8*]* @mmalloca_results, i64 0, i64 %12
  store i8** %13, i8*** %chain, align 8
  br label %bb5

bb2:                                              ; preds = %bb5
  %14 = load i8** %p_addr, align 8
  %15 = bitcast i8* %14 to %union.header*
  store %union.header* %15, %union.header** %h, align 8
  %16 = load i8*** %chain, align 8
  %17 = load i8** %16, align 8
  %18 = load i8** %p_addr, align 8
  %19 = icmp eq i8* %17, %18
  br i1 %19, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %20 = load %union.header** %h, align 8
  %21 = getelementptr inbounds %union.header* %20, i64 -1
  store %union.header* %21, %union.header** %p_begin, align 8
  %22 = load %union.header** %p_begin, align 8
  %23 = getelementptr inbounds %union.header* %22, i32 0, i32 0
  %24 = load i8** %23, align 8
  %25 = load i8*** %chain, align 8
  store i8* %24, i8** %25, align 8
  %26 = load %union.header** %p_begin, align 8
  %27 = bitcast %union.header* %26 to i8*
  call void @free(i8* %27) nounwind
  br label %return

bb4:                                              ; preds = %bb2
  %28 = load i8*** %chain, align 8
  %29 = load i8** %28, align 8
  %30 = bitcast i8* %29 to %union.header*
  store %union.header* %30, %union.header** %h, align 8
  %31 = load %union.header** %h, align 8
  %32 = getelementptr inbounds %union.header* %31, i64 -1
  %33 = getelementptr inbounds %union.header* %32, i32 0, i32 0
  store i8** %33, i8*** %chain, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %klee_div_zero_check.exit
  %34 = load i8*** %chain, align 8
  %35 = load i8** %34, align 8
  %36 = icmp ne i8* %35, null
  br i1 %36, label %bb2, label %return

return:                                           ; preds = %entry, %bb, %bb3, %bb5
  ret void
}

define i32 @mb_width_aux(i32 %wc) nounwind inlinehint {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.1 = alloca i32
  %0 = alloca i32
  %w = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = load i32* %wc_addr, align 4
  %2 = call i32 @wcwidth(i32 %1) nounwind
  store i32 %2, i32* %w, align 4
  %3 = load i32* %w, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %5 = load i32* %wc_addr, align 4
  %6 = call i32 @iswcntrl(i32 %5) nounwind readonly
  %7 = icmp eq i32 %6, 0
  %8 = zext i1 %7 to i32
  store i32 %8, i32* %iftmp.1, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  %9 = load i32* %w, align 4
  store i32 %9, i32* %iftmp.1, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %10 = load i32* %iftmp.1, align 4
  store i32 %10, i32* %0, align 4
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define void @mb_copy(%struct.mbchar* %new_mbc, %struct.mbchar* %old_mbc) nounwind inlinehint {
entry:
  %new_mbc_addr = alloca %struct.mbchar*, align 8
  %old_mbc_addr = alloca %struct.mbchar*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbchar* %new_mbc, %struct.mbchar** %new_mbc_addr
  store %struct.mbchar* %old_mbc, %struct.mbchar** %old_mbc_addr
  %0 = load %struct.mbchar** %old_mbc_addr, align 8
  %1 = getelementptr inbounds %struct.mbchar* %0, i32 0, i32 0
  %2 = load i8** %1, align 8
  %3 = load %struct.mbchar** %old_mbc_addr, align 8
  %4 = getelementptr inbounds %struct.mbchar* %3, i32 0, i32 4
  %5 = getelementptr inbounds [24 x i8]* %4, i64 0, i64 0
  %6 = icmp eq i8* %2, %5
  %7 = load %struct.mbchar** %old_mbc_addr, align 8
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %entry
  %8 = getelementptr inbounds %struct.mbchar* %7, i32 0, i32 1
  %9 = load i64* %8, align 8
  %10 = load %struct.mbchar** %old_mbc_addr, align 8
  %11 = getelementptr inbounds %struct.mbchar* %10, i32 0, i32 4
  %12 = getelementptr inbounds [24 x i8]* %11, i64 0, i64 0
  %13 = load %struct.mbchar** %new_mbc_addr, align 8
  %14 = getelementptr inbounds %struct.mbchar* %13, i32 0, i32 4
  %15 = getelementptr inbounds [24 x i8]* %14, i64 0, i64 0
  %16 = call i8* @memcpy(i8* %15, i8* %12, i64 %9)
  %17 = load %struct.mbchar** %new_mbc_addr, align 8
  %18 = getelementptr inbounds %struct.mbchar* %17, i32 0, i32 4
  %19 = getelementptr inbounds [24 x i8]* %18, i64 0, i64 0
  %20 = load %struct.mbchar** %new_mbc_addr, align 8
  %21 = getelementptr inbounds %struct.mbchar* %20, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %22 = getelementptr inbounds %struct.mbchar* %7, i32 0, i32 0
  %23 = load i8** %22, align 8
  %24 = load %struct.mbchar** %new_mbc_addr, align 8
  %25 = getelementptr inbounds %struct.mbchar* %24, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %26 = load %struct.mbchar** %old_mbc_addr, align 8
  %27 = getelementptr inbounds %struct.mbchar* %26, i32 0, i32 1
  %28 = load i64* %27, align 8
  %29 = load %struct.mbchar** %new_mbc_addr, align 8
  %30 = getelementptr inbounds %struct.mbchar* %29, i32 0, i32 1
  store i64 %28, i64* %30, align 8
  %31 = load %struct.mbchar** %old_mbc_addr, align 8
  %32 = getelementptr inbounds %struct.mbchar* %31, i32 0, i32 2
  %33 = load i8* %32, align 8
  %34 = load %struct.mbchar** %new_mbc_addr, align 8
  %35 = getelementptr inbounds %struct.mbchar* %34, i32 0, i32 2
  store i8 %33, i8* %35, align 8
  %36 = load %struct.mbchar** %new_mbc_addr, align 8
  %37 = getelementptr inbounds %struct.mbchar* %36, i32 0, i32 2
  %38 = load i8* %37, align 8
  %toBool = icmp ne i8 %38, 0
  br i1 %toBool, label %bb3, label %return

bb3:                                              ; preds = %bb2
  %39 = load %struct.mbchar** %old_mbc_addr, align 8
  %40 = getelementptr inbounds %struct.mbchar* %39, i32 0, i32 3
  %41 = load i32* %40, align 4
  %42 = load %struct.mbchar** %new_mbc_addr, align 8
  %43 = getelementptr inbounds %struct.mbchar* %42, i32 0, i32 3
  store i32 %41, i32* %43, align 4
  br label %return

return:                                           ; preds = %bb2, %bb3
  ret void
}

define zeroext i8 @is_basic(i8 signext %c) nounwind inlinehint {
entry:
  %c_addr = alloca i8, align 1
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8 %c, i8* %c_addr
  %1 = load i8* %c_addr, align 1
  %int_cast_to_i64 = zext i8 5 to i64
  %2 = icmp ult i64 %int_cast_to_i64, 8
  br i1 %2, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %3 = lshr i8 %1, 5
  %4 = zext i8 %3 to i32
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds [0 x i32]* bitcast ([8 x i32]* @is_basic_table to [0 x i32]*), i64 0, i64 %5
  %7 = load i32* %6, align 4
  %8 = load i8* %c_addr, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 31
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = lshr i32 %7, %10
  %13 = and i32 %12, 1
  %14 = trunc i32 %13 to i8
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define i64 @mbslen(i8* %string) nounwind readonly {
entry:
  %string_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.4 = alloca i32
  %count = alloca i64
  %iter = alloca %struct.mbui_iterator_t
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  %1 = call i64 @_stdlib_mb_cur_max() nounwind
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %bb, label %bb11

bb:                                               ; preds = %entry
  store i64 0, i64* %count, align 8
  %3 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %4 = getelementptr inbounds %struct.mbchar* %3, i32 0, i32 0
  %5 = load i8** %string_addr, align 8
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 1
  %8 = bitcast %struct.mbstate_t* %7 to i8*
  %9 = call i8* @memset(i8* %8, i32 0, i64 8)
  %10 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 2
  store i8 0, i8* %10, align 4
  br label %bb2

bb1:                                              ; preds = %bb9
  %11 = add i64 %31, 1
  store i64 %11, i64* %count, align 8
  %12 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %13 = getelementptr inbounds %struct.mbchar* %12, i32 0, i32 0
  %14 = load i8** %13, align 8
  %15 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %16 = getelementptr inbounds %struct.mbchar* %15, i32 0, i32 1
  %17 = load i64* %16, align 8
  %18 = getelementptr inbounds i8* %14, i64 %17
  %19 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %20 = getelementptr inbounds %struct.mbchar* %19, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 2
  store i8 0, i8* %21, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter) nounwind
  %22 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %23 = getelementptr inbounds %struct.mbchar* %22, i32 0, i32 2
  %24 = load i8* %23, align 8
  %toBool = icmp ne i8 %24, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot3 = zext i1 %toBoolnot to i8
  %toBool5 = icmp ne i8 %toBoolnot3, 0
  br i1 %toBool5, label %bb7, label %bb6

bb6:                                              ; preds = %bb2
  %25 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %26 = getelementptr inbounds %struct.mbchar* %25, i32 0, i32 3
  %27 = load i32* %26, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %bb7, label %bb8

bb7:                                              ; preds = %bb6, %bb2
  store i32 1, i32* %iftmp.4, align 4
  br label %bb9

bb8:                                              ; preds = %bb6
  store i32 0, i32* %iftmp.4, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %29 = load i32* %iftmp.4, align 4
  %30 = icmp ne i32 %29, 0
  %31 = load i64* %count, align 8
  br i1 %30, label %bb1, label %bb10

bb10:                                             ; preds = %bb9
  store i64 %31, i64* %0, align 8
  br label %bb12

bb11:                                             ; preds = %entry
  %32 = load i8** %string_addr, align 8
  %33 = call i64 @strlen(i8* %32) nounwind readonly
  store i64 %33, i64* %0, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %34 = load i64* %0, align 8
  store i64 %34, i64* %retval, align 8
  %retval13 = load i64* %retval
  ret i64 %retval13
}

define i32 @dup_safer(i32 %fd) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  %1 = load i32* %fd_addr, align 4
  %2 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %1, i32 0, i32 3) nounwind
  store i32 %2, i32* %0, align 4
  %3 = load i32* %0, align 4
  store i32 %3, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i64 @xsum(i64 %size1, i64 %size2) nounwind readonly inlinehint {
entry:
  %size1_addr = alloca i64, align 8
  %size2_addr = alloca i64, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %sum = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %size1, i64* %size1_addr
  store i64 %size2, i64* %size2_addr
  %1 = load i64* %size1_addr, align 8
  %2 = load i64* %size2_addr, align 8
  %3 = add i64 %1, %2
  store i64 %3, i64* %sum, align 8
  %4 = load i64* %sum, align 8
  %5 = load i64* %size1_addr, align 8
  %6 = icmp uge i64 %4, %5
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %entry
  %7 = load i64* %sum, align 8
  store i64 %7, i64* %iftmp.0, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store i64 -1, i64* %iftmp.0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %8 = load i64* %iftmp.0, align 8
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define i64 @xsum3(i64 %size1, i64 %size2, i64 %size3) nounwind readonly inlinehint {
entry:
  %size1_addr = alloca i64, align 8
  %size2_addr = alloca i64, align 8
  %size3_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %size1, i64* %size1_addr
  store i64 %size2, i64* %size2_addr
  store i64 %size3, i64* %size3_addr
  %1 = load i64* %size1_addr, align 8
  %2 = load i64* %size2_addr, align 8
  %3 = call i64 @xsum(i64 %1, i64 %2) nounwind readonly
  %4 = load i64* %size3_addr, align 8
  %5 = call i64 @xsum(i64 %3, i64 %4) nounwind readonly
  store i64 %5, i64* %0, align 8
  %6 = load i64* %0, align 8
  store i64 %6, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @xsum4(i64 %size1, i64 %size2, i64 %size3, i64 %size4) nounwind readonly inlinehint {
entry:
  %size1_addr = alloca i64, align 8
  %size2_addr = alloca i64, align 8
  %size3_addr = alloca i64, align 8
  %size4_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %size1, i64* %size1_addr
  store i64 %size2, i64* %size2_addr
  store i64 %size3, i64* %size3_addr
  store i64 %size4, i64* %size4_addr
  %1 = load i64* %size1_addr, align 8
  %2 = load i64* %size2_addr, align 8
  %3 = call i64 @xsum(i64 %1, i64 %2) nounwind readonly
  %4 = load i64* %size3_addr, align 8
  %5 = call i64 @xsum(i64 %3, i64 %4) nounwind readonly
  %6 = load i64* %size4_addr, align 8
  %7 = call i64 @xsum(i64 %5, i64 %6) nounwind readonly
  store i64 %7, i64* %0, align 8
  %8 = load i64* %0, align 8
  store i64 %8, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @xmax(i64 %size1, i64 %size2) nounwind readonly inlinehint {
entry:
  %size1_addr = alloca i64, align 8
  %size2_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %size1, i64* %size1_addr
  store i64 %size2, i64* %size2_addr
  %1 = load i64* %size1_addr, align 8
  %2 = load i64* %size2_addr, align 8
  %3 = icmp uge i64 %1, %2
  %max = select i1 %3, i64 %1, i64 %2
  store i64 %max, i64* %0, align 8
  %4 = load i64* %0, align 8
  store i64 %4, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i32 @rpl_isnanl(x86_fp80 %x) nounwind readnone {
entry:
  %x_addr = alloca x86_fp80, align 16
  %retval = alloca i32
  %0 = alloca i32
  %m = alloca %union.argvalue_t
  %exponent = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store x86_fp80 %x, x86_fp80* %x_addr
  %1 = getelementptr inbounds %union.argvalue_t* %m, i32 0, i32 0
  %2 = load x86_fp80* %x_addr, align 16
  store x86_fp80 %2, x86_fp80* %1, align 16
  %3 = getelementptr inbounds %union.argvalue_t* %m, i32 0, i32 0
  %4 = bitcast x86_fp80* %3 to [4 x i32]*
  %5 = getelementptr inbounds [4 x i32]* %4, i64 0, i64 2
  %6 = load i32* %5, align 4
  %7 = and i32 %6, 32767
  store i32 %7, i32* %exponent, align 4
  %8 = load i32* %exponent, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %bb, label %bb1

bb:                                               ; preds = %entry
  %10 = getelementptr inbounds %union.argvalue_t* %m, i32 0, i32 0
  %11 = bitcast x86_fp80* %10 to [4 x i32]*
  %12 = getelementptr inbounds [4 x i32]* %11, i64 0, i64 1
  %13 = load i32* %12, align 4
  %int_cast_to_i64 = zext i32 31 to i64
  %14 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %14, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb
  %15 = lshr i32 %13, 31
  store i32 %15, i32* %0, align 4
  br label %bb4

bb1:                                              ; preds = %entry
  %16 = load i32* %exponent, align 4
  %17 = icmp eq i32 %16, 32767
  %18 = getelementptr inbounds %union.argvalue_t* %m, i32 0, i32 0
  %19 = bitcast x86_fp80* %18 to [4 x i32]*
  %20 = getelementptr inbounds [4 x i32]* %19, i64 0, i64 1
  %21 = load i32* %20, align 4
  br i1 %17, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %22 = xor i32 %21, -2147483648
  %23 = getelementptr inbounds %union.argvalue_t* %m, i32 0, i32 0
  %24 = bitcast x86_fp80* %23 to [4 x i32]*
  %25 = getelementptr inbounds [4 x i32]* %24, i64 0, i64 0
  %26 = load i32* %25, align 4
  %27 = or i32 %22, %26
  %28 = icmp ne i32 %27, 0
  %29 = zext i1 %28 to i32
  store i32 %29, i32* %0, align 4
  br label %bb4

bb3:                                              ; preds = %bb1
  %int_cast_to_i641 = zext i32 31 to i64
  %30 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %30, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %bb3
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %bb3
  %31 = lshr i32 %21, 31
  %32 = xor i32 %31, 1
  store i32 %32, i32* %0, align 4
  br label %bb4

bb4:                                              ; preds = %klee_overshift_check.exit3, %bb2, %klee_overshift_check.exit
  %33 = load i32* %0, align 4
  store i32 %33, i32* %retval, align 4
  %retval5 = load i32* %retval
  ret i32 %retval5
}

define i32 @printf_fetchargs(%struct.__va_list_tag* %args, %struct.arguments* %a) nounwind {
entry:
  %args_addr = alloca %struct.__va_list_tag*, align 8
  %a_addr = alloca %struct.arguments*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %addr.42 = alloca i8*
  %addr.40 = alloca i8*
  %addr.38 = alloca i8*
  %addr.36 = alloca i8*
  %addr.34 = alloca i8*
  %addr.32 = alloca i8*
  %addr.30 = alloca i8*
  %addr.28 = alloca i8*
  %addr.26 = alloca i8*
  %addr.24 = alloca i8*
  %addr.22 = alloca i8*
  %addr.20 = alloca i8*
  %addr.18 = alloca i8*
  %addr.16 = alloca i8*
  %addr.14 = alloca i8*
  %addr.12 = alloca i8*
  %addr.10 = alloca i8*
  %addr.8 = alloca i8*
  %addr.6 = alloca i8*
  %addr.4 = alloca i8*
  %addr.2 = alloca i8*
  %addr.0 = alloca i8*
  %i = alloca i64
  %ap = alloca %struct.argument*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args_addr
  store %struct.arguments* %a, %struct.arguments** %a_addr
  store i64 0, i64* %i, align 8
  %1 = load %struct.arguments** %a_addr, align 8
  %2 = getelementptr inbounds %struct.arguments* %1, i32 0, i32 1
  %3 = load %struct.argument** %2, align 8
  %4 = getelementptr inbounds %struct.argument* %3, i64 0
  store %struct.argument* %4, %struct.argument** %ap, align 8
  br label %bb92

bb:                                               ; preds = %bb92
  %5 = load %struct.argument** %ap, align 8
  %6 = getelementptr inbounds %struct.argument* %5, i32 0, i32 0
  %7 = load i32* %6, align 16
  switch i32 %7, label %bb90 [
    i32 1, label %bb1
    i32 2, label %bb5
    i32 3, label %bb9
    i32 4, label %bb13
    i32 5, label %bb17
    i32 6, label %bb21
    i32 7, label %bb25
    i32 8, label %bb29
    i32 9, label %bb33
    i32 10, label %bb37
    i32 11, label %bb41
    i32 12, label %bb45
    i32 13, label %bb46
    i32 14, label %bb50
    i32 15, label %bb54
    i32 16, label %bb60
    i32 17, label %bb66
    i32 18, label %bb70
    i32 19, label %bb74
    i32 20, label %bb78
    i32 21, label %bb82
    i32 22, label %bb86
  ]

bb1:                                              ; preds = %bb
  %8 = load %struct.__va_list_tag** %args_addr, align 8
  %9 = getelementptr inbounds %struct.__va_list_tag* %8, i32 0, i32 0
  %10 = load i32* %9, align 8
  %11 = icmp uge i32 %10, 48
  %12 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %11, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %13 = getelementptr inbounds %struct.__va_list_tag* %12, i32 0, i32 3
  %14 = load i8** %13, align 8
  %15 = load %struct.__va_list_tag** %args_addr, align 8
  %16 = getelementptr inbounds %struct.__va_list_tag* %15, i32 0, i32 0
  %17 = load i32* %16, align 8
  %18 = inttoptr i32 %17 to i8*
  %19 = ptrtoint i8* %14 to i64
  %20 = ptrtoint i8* %18 to i64
  %21 = add i64 %19, %20
  %22 = inttoptr i64 %21 to i8*
  store i8* %22, i8** %addr.0, align 8
  %23 = load %struct.__va_list_tag** %args_addr, align 8
  %24 = getelementptr inbounds %struct.__va_list_tag* %23, i32 0, i32 0
  %25 = load i32* %24, align 8
  %26 = add i32 %25, 8
  %27 = load %struct.__va_list_tag** %args_addr, align 8
  %28 = getelementptr inbounds %struct.__va_list_tag* %27, i32 0, i32 0
  store i32 %26, i32* %28, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %29 = getelementptr inbounds %struct.__va_list_tag* %12, i32 0, i32 2
  %30 = load i8** %29, align 8
  store i8* %30, i8** %addr.0, align 8
  %31 = getelementptr inbounds i8* %30, i64 8
  %32 = load %struct.__va_list_tag** %args_addr, align 8
  %33 = getelementptr inbounds %struct.__va_list_tag* %32, i32 0, i32 2
  store i8* %31, i8** %33, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %34 = load i8** %addr.0, align 8
  %35 = bitcast i8* %34 to i32*
  %36 = load i32* %35, align 4
  %37 = trunc i32 %36 to i8
  %38 = load %struct.argument** %ap, align 8
  %39 = getelementptr inbounds %struct.argument* %38, i32 0, i32 1
  %40 = getelementptr inbounds %union.argvalue_t* %39, i32 0, i32 0
  %41 = bitcast x86_fp80* %40 to i8*
  store i8 %37, i8* %41, align 16
  br label %bb91

bb5:                                              ; preds = %bb
  %42 = load %struct.__va_list_tag** %args_addr, align 8
  %43 = getelementptr inbounds %struct.__va_list_tag* %42, i32 0, i32 0
  %44 = load i32* %43, align 8
  %45 = icmp uge i32 %44, 48
  %46 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %45, label %bb7, label %bb6

bb6:                                              ; preds = %bb5
  %47 = getelementptr inbounds %struct.__va_list_tag* %46, i32 0, i32 3
  %48 = load i8** %47, align 8
  %49 = load %struct.__va_list_tag** %args_addr, align 8
  %50 = getelementptr inbounds %struct.__va_list_tag* %49, i32 0, i32 0
  %51 = load i32* %50, align 8
  %52 = inttoptr i32 %51 to i8*
  %53 = ptrtoint i8* %48 to i64
  %54 = ptrtoint i8* %52 to i64
  %55 = add i64 %53, %54
  %56 = inttoptr i64 %55 to i8*
  store i8* %56, i8** %addr.2, align 8
  %57 = load %struct.__va_list_tag** %args_addr, align 8
  %58 = getelementptr inbounds %struct.__va_list_tag* %57, i32 0, i32 0
  %59 = load i32* %58, align 8
  %60 = add i32 %59, 8
  %61 = load %struct.__va_list_tag** %args_addr, align 8
  %62 = getelementptr inbounds %struct.__va_list_tag* %61, i32 0, i32 0
  store i32 %60, i32* %62, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  %63 = getelementptr inbounds %struct.__va_list_tag* %46, i32 0, i32 2
  %64 = load i8** %63, align 8
  store i8* %64, i8** %addr.2, align 8
  %65 = getelementptr inbounds i8* %64, i64 8
  %66 = load %struct.__va_list_tag** %args_addr, align 8
  %67 = getelementptr inbounds %struct.__va_list_tag* %66, i32 0, i32 2
  store i8* %65, i8** %67, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %68 = load i8** %addr.2, align 8
  %69 = bitcast i8* %68 to i32*
  %70 = load i32* %69, align 4
  %71 = trunc i32 %70 to i8
  %72 = load %struct.argument** %ap, align 8
  %73 = getelementptr inbounds %struct.argument* %72, i32 0, i32 1
  %74 = getelementptr inbounds %union.argvalue_t* %73, i32 0, i32 0
  %75 = bitcast x86_fp80* %74 to i8*
  store i8 %71, i8* %75, align 16
  br label %bb91

bb9:                                              ; preds = %bb
  %76 = load %struct.__va_list_tag** %args_addr, align 8
  %77 = getelementptr inbounds %struct.__va_list_tag* %76, i32 0, i32 0
  %78 = load i32* %77, align 8
  %79 = icmp uge i32 %78, 48
  %80 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %79, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  %81 = getelementptr inbounds %struct.__va_list_tag* %80, i32 0, i32 3
  %82 = load i8** %81, align 8
  %83 = load %struct.__va_list_tag** %args_addr, align 8
  %84 = getelementptr inbounds %struct.__va_list_tag* %83, i32 0, i32 0
  %85 = load i32* %84, align 8
  %86 = inttoptr i32 %85 to i8*
  %87 = ptrtoint i8* %82 to i64
  %88 = ptrtoint i8* %86 to i64
  %89 = add i64 %87, %88
  %90 = inttoptr i64 %89 to i8*
  store i8* %90, i8** %addr.4, align 8
  %91 = load %struct.__va_list_tag** %args_addr, align 8
  %92 = getelementptr inbounds %struct.__va_list_tag* %91, i32 0, i32 0
  %93 = load i32* %92, align 8
  %94 = add i32 %93, 8
  %95 = load %struct.__va_list_tag** %args_addr, align 8
  %96 = getelementptr inbounds %struct.__va_list_tag* %95, i32 0, i32 0
  store i32 %94, i32* %96, align 8
  br label %bb12

bb11:                                             ; preds = %bb9
  %97 = getelementptr inbounds %struct.__va_list_tag* %80, i32 0, i32 2
  %98 = load i8** %97, align 8
  store i8* %98, i8** %addr.4, align 8
  %99 = getelementptr inbounds i8* %98, i64 8
  %100 = load %struct.__va_list_tag** %args_addr, align 8
  %101 = getelementptr inbounds %struct.__va_list_tag* %100, i32 0, i32 2
  store i8* %99, i8** %101, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %102 = load i8** %addr.4, align 8
  %103 = bitcast i8* %102 to i32*
  %104 = load i32* %103, align 4
  %105 = trunc i32 %104 to i16
  %106 = load %struct.argument** %ap, align 8
  %107 = getelementptr inbounds %struct.argument* %106, i32 0, i32 1
  %108 = getelementptr inbounds %union.argvalue_t* %107, i32 0, i32 0
  %109 = bitcast x86_fp80* %108 to i16*
  store i16 %105, i16* %109, align 16
  br label %bb91

bb13:                                             ; preds = %bb
  %110 = load %struct.__va_list_tag** %args_addr, align 8
  %111 = getelementptr inbounds %struct.__va_list_tag* %110, i32 0, i32 0
  %112 = load i32* %111, align 8
  %113 = icmp uge i32 %112, 48
  %114 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %113, label %bb15, label %bb14

bb14:                                             ; preds = %bb13
  %115 = getelementptr inbounds %struct.__va_list_tag* %114, i32 0, i32 3
  %116 = load i8** %115, align 8
  %117 = load %struct.__va_list_tag** %args_addr, align 8
  %118 = getelementptr inbounds %struct.__va_list_tag* %117, i32 0, i32 0
  %119 = load i32* %118, align 8
  %120 = inttoptr i32 %119 to i8*
  %121 = ptrtoint i8* %116 to i64
  %122 = ptrtoint i8* %120 to i64
  %123 = add i64 %121, %122
  %124 = inttoptr i64 %123 to i8*
  store i8* %124, i8** %addr.6, align 8
  %125 = load %struct.__va_list_tag** %args_addr, align 8
  %126 = getelementptr inbounds %struct.__va_list_tag* %125, i32 0, i32 0
  %127 = load i32* %126, align 8
  %128 = add i32 %127, 8
  %129 = load %struct.__va_list_tag** %args_addr, align 8
  %130 = getelementptr inbounds %struct.__va_list_tag* %129, i32 0, i32 0
  store i32 %128, i32* %130, align 8
  br label %bb16

bb15:                                             ; preds = %bb13
  %131 = getelementptr inbounds %struct.__va_list_tag* %114, i32 0, i32 2
  %132 = load i8** %131, align 8
  store i8* %132, i8** %addr.6, align 8
  %133 = getelementptr inbounds i8* %132, i64 8
  %134 = load %struct.__va_list_tag** %args_addr, align 8
  %135 = getelementptr inbounds %struct.__va_list_tag* %134, i32 0, i32 2
  store i8* %133, i8** %135, align 8
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %136 = load i8** %addr.6, align 8
  %137 = bitcast i8* %136 to i32*
  %138 = load i32* %137, align 4
  %139 = trunc i32 %138 to i16
  %140 = load %struct.argument** %ap, align 8
  %141 = getelementptr inbounds %struct.argument* %140, i32 0, i32 1
  %142 = getelementptr inbounds %union.argvalue_t* %141, i32 0, i32 0
  %143 = bitcast x86_fp80* %142 to i16*
  store i16 %139, i16* %143, align 16
  br label %bb91

bb17:                                             ; preds = %bb
  %144 = load %struct.__va_list_tag** %args_addr, align 8
  %145 = getelementptr inbounds %struct.__va_list_tag* %144, i32 0, i32 0
  %146 = load i32* %145, align 8
  %147 = icmp uge i32 %146, 48
  %148 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %147, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  %149 = getelementptr inbounds %struct.__va_list_tag* %148, i32 0, i32 3
  %150 = load i8** %149, align 8
  %151 = load %struct.__va_list_tag** %args_addr, align 8
  %152 = getelementptr inbounds %struct.__va_list_tag* %151, i32 0, i32 0
  %153 = load i32* %152, align 8
  %154 = inttoptr i32 %153 to i8*
  %155 = ptrtoint i8* %150 to i64
  %156 = ptrtoint i8* %154 to i64
  %157 = add i64 %155, %156
  %158 = inttoptr i64 %157 to i8*
  store i8* %158, i8** %addr.8, align 8
  %159 = load %struct.__va_list_tag** %args_addr, align 8
  %160 = getelementptr inbounds %struct.__va_list_tag* %159, i32 0, i32 0
  %161 = load i32* %160, align 8
  %162 = add i32 %161, 8
  %163 = load %struct.__va_list_tag** %args_addr, align 8
  %164 = getelementptr inbounds %struct.__va_list_tag* %163, i32 0, i32 0
  store i32 %162, i32* %164, align 8
  br label %bb20

bb19:                                             ; preds = %bb17
  %165 = getelementptr inbounds %struct.__va_list_tag* %148, i32 0, i32 2
  %166 = load i8** %165, align 8
  store i8* %166, i8** %addr.8, align 8
  %167 = getelementptr inbounds i8* %166, i64 8
  %168 = load %struct.__va_list_tag** %args_addr, align 8
  %169 = getelementptr inbounds %struct.__va_list_tag* %168, i32 0, i32 2
  store i8* %167, i8** %169, align 8
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18
  %170 = load i8** %addr.8, align 8
  %171 = bitcast i8* %170 to i32*
  %172 = load i32* %171, align 4
  %173 = load %struct.argument** %ap, align 8
  %174 = getelementptr inbounds %struct.argument* %173, i32 0, i32 1
  %175 = getelementptr inbounds %union.argvalue_t* %174, i32 0, i32 0
  %176 = bitcast x86_fp80* %175 to i32*
  store i32 %172, i32* %176, align 16
  br label %bb91

bb21:                                             ; preds = %bb
  %177 = load %struct.__va_list_tag** %args_addr, align 8
  %178 = getelementptr inbounds %struct.__va_list_tag* %177, i32 0, i32 0
  %179 = load i32* %178, align 8
  %180 = icmp uge i32 %179, 48
  %181 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %180, label %bb23, label %bb22

bb22:                                             ; preds = %bb21
  %182 = getelementptr inbounds %struct.__va_list_tag* %181, i32 0, i32 3
  %183 = load i8** %182, align 8
  %184 = load %struct.__va_list_tag** %args_addr, align 8
  %185 = getelementptr inbounds %struct.__va_list_tag* %184, i32 0, i32 0
  %186 = load i32* %185, align 8
  %187 = inttoptr i32 %186 to i8*
  %188 = ptrtoint i8* %183 to i64
  %189 = ptrtoint i8* %187 to i64
  %190 = add i64 %188, %189
  %191 = inttoptr i64 %190 to i8*
  store i8* %191, i8** %addr.10, align 8
  %192 = load %struct.__va_list_tag** %args_addr, align 8
  %193 = getelementptr inbounds %struct.__va_list_tag* %192, i32 0, i32 0
  %194 = load i32* %193, align 8
  %195 = add i32 %194, 8
  %196 = load %struct.__va_list_tag** %args_addr, align 8
  %197 = getelementptr inbounds %struct.__va_list_tag* %196, i32 0, i32 0
  store i32 %195, i32* %197, align 8
  br label %bb24

bb23:                                             ; preds = %bb21
  %198 = getelementptr inbounds %struct.__va_list_tag* %181, i32 0, i32 2
  %199 = load i8** %198, align 8
  store i8* %199, i8** %addr.10, align 8
  %200 = getelementptr inbounds i8* %199, i64 8
  %201 = load %struct.__va_list_tag** %args_addr, align 8
  %202 = getelementptr inbounds %struct.__va_list_tag* %201, i32 0, i32 2
  store i8* %200, i8** %202, align 8
  br label %bb24

bb24:                                             ; preds = %bb23, %bb22
  %203 = load i8** %addr.10, align 8
  %204 = bitcast i8* %203 to i32*
  %205 = load i32* %204, align 4
  %206 = load %struct.argument** %ap, align 8
  %207 = getelementptr inbounds %struct.argument* %206, i32 0, i32 1
  %208 = getelementptr inbounds %union.argvalue_t* %207, i32 0, i32 0
  %209 = bitcast x86_fp80* %208 to i32*
  store i32 %205, i32* %209, align 16
  br label %bb91

bb25:                                             ; preds = %bb
  %210 = load %struct.__va_list_tag** %args_addr, align 8
  %211 = getelementptr inbounds %struct.__va_list_tag* %210, i32 0, i32 0
  %212 = load i32* %211, align 8
  %213 = icmp uge i32 %212, 48
  %214 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %213, label %bb27, label %bb26

bb26:                                             ; preds = %bb25
  %215 = getelementptr inbounds %struct.__va_list_tag* %214, i32 0, i32 3
  %216 = load i8** %215, align 8
  %217 = load %struct.__va_list_tag** %args_addr, align 8
  %218 = getelementptr inbounds %struct.__va_list_tag* %217, i32 0, i32 0
  %219 = load i32* %218, align 8
  %220 = inttoptr i32 %219 to i8*
  %221 = ptrtoint i8* %216 to i64
  %222 = ptrtoint i8* %220 to i64
  %223 = add i64 %221, %222
  %224 = inttoptr i64 %223 to i8*
  store i8* %224, i8** %addr.12, align 8
  %225 = load %struct.__va_list_tag** %args_addr, align 8
  %226 = getelementptr inbounds %struct.__va_list_tag* %225, i32 0, i32 0
  %227 = load i32* %226, align 8
  %228 = add i32 %227, 8
  %229 = load %struct.__va_list_tag** %args_addr, align 8
  %230 = getelementptr inbounds %struct.__va_list_tag* %229, i32 0, i32 0
  store i32 %228, i32* %230, align 8
  br label %bb28

bb27:                                             ; preds = %bb25
  %231 = getelementptr inbounds %struct.__va_list_tag* %214, i32 0, i32 2
  %232 = load i8** %231, align 8
  store i8* %232, i8** %addr.12, align 8
  %233 = getelementptr inbounds i8* %232, i64 8
  %234 = load %struct.__va_list_tag** %args_addr, align 8
  %235 = getelementptr inbounds %struct.__va_list_tag* %234, i32 0, i32 2
  store i8* %233, i8** %235, align 8
  br label %bb28

bb28:                                             ; preds = %bb27, %bb26
  %236 = load i8** %addr.12, align 8
  %237 = bitcast i8* %236 to i64*
  %238 = load i64* %237, align 8
  %239 = load %struct.argument** %ap, align 8
  %240 = getelementptr inbounds %struct.argument* %239, i32 0, i32 1
  %241 = getelementptr inbounds %union.argvalue_t* %240, i32 0, i32 0
  %242 = bitcast x86_fp80* %241 to i64*
  store i64 %238, i64* %242, align 16
  br label %bb91

bb29:                                             ; preds = %bb
  %243 = load %struct.__va_list_tag** %args_addr, align 8
  %244 = getelementptr inbounds %struct.__va_list_tag* %243, i32 0, i32 0
  %245 = load i32* %244, align 8
  %246 = icmp uge i32 %245, 48
  %247 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %246, label %bb31, label %bb30

bb30:                                             ; preds = %bb29
  %248 = getelementptr inbounds %struct.__va_list_tag* %247, i32 0, i32 3
  %249 = load i8** %248, align 8
  %250 = load %struct.__va_list_tag** %args_addr, align 8
  %251 = getelementptr inbounds %struct.__va_list_tag* %250, i32 0, i32 0
  %252 = load i32* %251, align 8
  %253 = inttoptr i32 %252 to i8*
  %254 = ptrtoint i8* %249 to i64
  %255 = ptrtoint i8* %253 to i64
  %256 = add i64 %254, %255
  %257 = inttoptr i64 %256 to i8*
  store i8* %257, i8** %addr.14, align 8
  %258 = load %struct.__va_list_tag** %args_addr, align 8
  %259 = getelementptr inbounds %struct.__va_list_tag* %258, i32 0, i32 0
  %260 = load i32* %259, align 8
  %261 = add i32 %260, 8
  %262 = load %struct.__va_list_tag** %args_addr, align 8
  %263 = getelementptr inbounds %struct.__va_list_tag* %262, i32 0, i32 0
  store i32 %261, i32* %263, align 8
  br label %bb32

bb31:                                             ; preds = %bb29
  %264 = getelementptr inbounds %struct.__va_list_tag* %247, i32 0, i32 2
  %265 = load i8** %264, align 8
  store i8* %265, i8** %addr.14, align 8
  %266 = getelementptr inbounds i8* %265, i64 8
  %267 = load %struct.__va_list_tag** %args_addr, align 8
  %268 = getelementptr inbounds %struct.__va_list_tag* %267, i32 0, i32 2
  store i8* %266, i8** %268, align 8
  br label %bb32

bb32:                                             ; preds = %bb31, %bb30
  %269 = load i8** %addr.14, align 8
  %270 = bitcast i8* %269 to i64*
  %271 = load i64* %270, align 8
  %272 = load %struct.argument** %ap, align 8
  %273 = getelementptr inbounds %struct.argument* %272, i32 0, i32 1
  %274 = getelementptr inbounds %union.argvalue_t* %273, i32 0, i32 0
  %275 = bitcast x86_fp80* %274 to i64*
  store i64 %271, i64* %275, align 16
  br label %bb91

bb33:                                             ; preds = %bb
  %276 = load %struct.__va_list_tag** %args_addr, align 8
  %277 = getelementptr inbounds %struct.__va_list_tag* %276, i32 0, i32 0
  %278 = load i32* %277, align 8
  %279 = icmp uge i32 %278, 48
  %280 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %279, label %bb35, label %bb34

bb34:                                             ; preds = %bb33
  %281 = getelementptr inbounds %struct.__va_list_tag* %280, i32 0, i32 3
  %282 = load i8** %281, align 8
  %283 = load %struct.__va_list_tag** %args_addr, align 8
  %284 = getelementptr inbounds %struct.__va_list_tag* %283, i32 0, i32 0
  %285 = load i32* %284, align 8
  %286 = inttoptr i32 %285 to i8*
  %287 = ptrtoint i8* %282 to i64
  %288 = ptrtoint i8* %286 to i64
  %289 = add i64 %287, %288
  %290 = inttoptr i64 %289 to i8*
  store i8* %290, i8** %addr.16, align 8
  %291 = load %struct.__va_list_tag** %args_addr, align 8
  %292 = getelementptr inbounds %struct.__va_list_tag* %291, i32 0, i32 0
  %293 = load i32* %292, align 8
  %294 = add i32 %293, 8
  %295 = load %struct.__va_list_tag** %args_addr, align 8
  %296 = getelementptr inbounds %struct.__va_list_tag* %295, i32 0, i32 0
  store i32 %294, i32* %296, align 8
  br label %bb36

bb35:                                             ; preds = %bb33
  %297 = getelementptr inbounds %struct.__va_list_tag* %280, i32 0, i32 2
  %298 = load i8** %297, align 8
  store i8* %298, i8** %addr.16, align 8
  %299 = getelementptr inbounds i8* %298, i64 8
  %300 = load %struct.__va_list_tag** %args_addr, align 8
  %301 = getelementptr inbounds %struct.__va_list_tag* %300, i32 0, i32 2
  store i8* %299, i8** %301, align 8
  br label %bb36

bb36:                                             ; preds = %bb35, %bb34
  %302 = load i8** %addr.16, align 8
  %303 = bitcast i8* %302 to i64*
  %304 = load i64* %303, align 8
  %305 = load %struct.argument** %ap, align 8
  %306 = getelementptr inbounds %struct.argument* %305, i32 0, i32 1
  %307 = getelementptr inbounds %union.argvalue_t* %306, i32 0, i32 0
  %308 = bitcast x86_fp80* %307 to i64*
  store i64 %304, i64* %308, align 16
  br label %bb91

bb37:                                             ; preds = %bb
  %309 = load %struct.__va_list_tag** %args_addr, align 8
  %310 = getelementptr inbounds %struct.__va_list_tag* %309, i32 0, i32 0
  %311 = load i32* %310, align 8
  %312 = icmp uge i32 %311, 48
  %313 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %312, label %bb39, label %bb38

bb38:                                             ; preds = %bb37
  %314 = getelementptr inbounds %struct.__va_list_tag* %313, i32 0, i32 3
  %315 = load i8** %314, align 8
  %316 = load %struct.__va_list_tag** %args_addr, align 8
  %317 = getelementptr inbounds %struct.__va_list_tag* %316, i32 0, i32 0
  %318 = load i32* %317, align 8
  %319 = inttoptr i32 %318 to i8*
  %320 = ptrtoint i8* %315 to i64
  %321 = ptrtoint i8* %319 to i64
  %322 = add i64 %320, %321
  %323 = inttoptr i64 %322 to i8*
  store i8* %323, i8** %addr.18, align 8
  %324 = load %struct.__va_list_tag** %args_addr, align 8
  %325 = getelementptr inbounds %struct.__va_list_tag* %324, i32 0, i32 0
  %326 = load i32* %325, align 8
  %327 = add i32 %326, 8
  %328 = load %struct.__va_list_tag** %args_addr, align 8
  %329 = getelementptr inbounds %struct.__va_list_tag* %328, i32 0, i32 0
  store i32 %327, i32* %329, align 8
  br label %bb40

bb39:                                             ; preds = %bb37
  %330 = getelementptr inbounds %struct.__va_list_tag* %313, i32 0, i32 2
  %331 = load i8** %330, align 8
  store i8* %331, i8** %addr.18, align 8
  %332 = getelementptr inbounds i8* %331, i64 8
  %333 = load %struct.__va_list_tag** %args_addr, align 8
  %334 = getelementptr inbounds %struct.__va_list_tag* %333, i32 0, i32 2
  store i8* %332, i8** %334, align 8
  br label %bb40

bb40:                                             ; preds = %bb39, %bb38
  %335 = load i8** %addr.18, align 8
  %336 = bitcast i8* %335 to i64*
  %337 = load i64* %336, align 8
  %338 = load %struct.argument** %ap, align 8
  %339 = getelementptr inbounds %struct.argument* %338, i32 0, i32 1
  %340 = getelementptr inbounds %union.argvalue_t* %339, i32 0, i32 0
  %341 = bitcast x86_fp80* %340 to i64*
  store i64 %337, i64* %341, align 16
  br label %bb91

bb41:                                             ; preds = %bb
  %342 = load %struct.__va_list_tag** %args_addr, align 8
  %343 = getelementptr inbounds %struct.__va_list_tag* %342, i32 0, i32 1
  %344 = load i32* %343, align 4
  %345 = icmp uge i32 %344, 176
  %346 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %345, label %bb43, label %bb42

bb42:                                             ; preds = %bb41
  %347 = getelementptr inbounds %struct.__va_list_tag* %346, i32 0, i32 3
  %348 = load i8** %347, align 8
  %349 = load %struct.__va_list_tag** %args_addr, align 8
  %350 = getelementptr inbounds %struct.__va_list_tag* %349, i32 0, i32 1
  %351 = load i32* %350, align 4
  %352 = inttoptr i32 %351 to i8*
  %353 = ptrtoint i8* %348 to i64
  %354 = ptrtoint i8* %352 to i64
  %355 = add i64 %353, %354
  %356 = inttoptr i64 %355 to i8*
  store i8* %356, i8** %addr.20, align 8
  %357 = load %struct.__va_list_tag** %args_addr, align 8
  %358 = getelementptr inbounds %struct.__va_list_tag* %357, i32 0, i32 1
  %359 = load i32* %358, align 4
  %360 = add i32 %359, 16
  %361 = load %struct.__va_list_tag** %args_addr, align 8
  %362 = getelementptr inbounds %struct.__va_list_tag* %361, i32 0, i32 1
  store i32 %360, i32* %362, align 4
  br label %bb44

bb43:                                             ; preds = %bb41
  %363 = getelementptr inbounds %struct.__va_list_tag* %346, i32 0, i32 2
  %364 = load i8** %363, align 8
  store i8* %364, i8** %addr.20, align 8
  %365 = getelementptr inbounds i8* %364, i64 8
  %366 = load %struct.__va_list_tag** %args_addr, align 8
  %367 = getelementptr inbounds %struct.__va_list_tag* %366, i32 0, i32 2
  store i8* %365, i8** %367, align 8
  br label %bb44

bb44:                                             ; preds = %bb43, %bb42
  %368 = load i8** %addr.20, align 8
  %369 = bitcast i8* %368 to double*
  %370 = load double* %369, align 8
  %371 = load %struct.argument** %ap, align 8
  %372 = getelementptr inbounds %struct.argument* %371, i32 0, i32 1
  %373 = getelementptr inbounds %union.argvalue_t* %372, i32 0, i32 0
  %374 = bitcast x86_fp80* %373 to double*
  store double %370, double* %374, align 16
  br label %bb91

bb45:                                             ; preds = %bb
  %375 = load %struct.__va_list_tag** %args_addr, align 8
  %376 = getelementptr inbounds %struct.__va_list_tag* %375, i32 0, i32 2
  %377 = load i8** %376, align 8
  %378 = getelementptr inbounds i8* %377, i64 15
  %379 = ptrtoint i8* %378 to i64
  %380 = and i64 %379, -16
  %381 = inttoptr i64 %380 to i8*
  store i8* %381, i8** %addr.22, align 8
  %382 = getelementptr inbounds i8* %381, i64 16
  %383 = load %struct.__va_list_tag** %args_addr, align 8
  %384 = getelementptr inbounds %struct.__va_list_tag* %383, i32 0, i32 2
  store i8* %382, i8** %384, align 8
  %385 = load i8** %addr.22, align 8
  %386 = bitcast i8* %385 to x86_fp80*
  %387 = load x86_fp80* %386, align 16
  %388 = load %struct.argument** %ap, align 8
  %389 = getelementptr inbounds %struct.argument* %388, i32 0, i32 1
  %390 = getelementptr inbounds %union.argvalue_t* %389, i32 0, i32 0
  store x86_fp80 %387, x86_fp80* %390, align 16
  br label %bb91

bb46:                                             ; preds = %bb
  %391 = load %struct.__va_list_tag** %args_addr, align 8
  %392 = getelementptr inbounds %struct.__va_list_tag* %391, i32 0, i32 0
  %393 = load i32* %392, align 8
  %394 = icmp uge i32 %393, 48
  %395 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %394, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  %396 = getelementptr inbounds %struct.__va_list_tag* %395, i32 0, i32 3
  %397 = load i8** %396, align 8
  %398 = load %struct.__va_list_tag** %args_addr, align 8
  %399 = getelementptr inbounds %struct.__va_list_tag* %398, i32 0, i32 0
  %400 = load i32* %399, align 8
  %401 = inttoptr i32 %400 to i8*
  %402 = ptrtoint i8* %397 to i64
  %403 = ptrtoint i8* %401 to i64
  %404 = add i64 %402, %403
  %405 = inttoptr i64 %404 to i8*
  store i8* %405, i8** %addr.24, align 8
  %406 = load %struct.__va_list_tag** %args_addr, align 8
  %407 = getelementptr inbounds %struct.__va_list_tag* %406, i32 0, i32 0
  %408 = load i32* %407, align 8
  %409 = add i32 %408, 8
  %410 = load %struct.__va_list_tag** %args_addr, align 8
  %411 = getelementptr inbounds %struct.__va_list_tag* %410, i32 0, i32 0
  store i32 %409, i32* %411, align 8
  br label %bb49

bb48:                                             ; preds = %bb46
  %412 = getelementptr inbounds %struct.__va_list_tag* %395, i32 0, i32 2
  %413 = load i8** %412, align 8
  store i8* %413, i8** %addr.24, align 8
  %414 = getelementptr inbounds i8* %413, i64 8
  %415 = load %struct.__va_list_tag** %args_addr, align 8
  %416 = getelementptr inbounds %struct.__va_list_tag* %415, i32 0, i32 2
  store i8* %414, i8** %416, align 8
  br label %bb49

bb49:                                             ; preds = %bb48, %bb47
  %417 = load i8** %addr.24, align 8
  %418 = bitcast i8* %417 to i32*
  %419 = load i32* %418, align 4
  %420 = load %struct.argument** %ap, align 8
  %421 = getelementptr inbounds %struct.argument* %420, i32 0, i32 1
  %422 = getelementptr inbounds %union.argvalue_t* %421, i32 0, i32 0
  %423 = bitcast x86_fp80* %422 to i32*
  store i32 %419, i32* %423, align 16
  br label %bb91

bb50:                                             ; preds = %bb
  %424 = load %struct.__va_list_tag** %args_addr, align 8
  %425 = getelementptr inbounds %struct.__va_list_tag* %424, i32 0, i32 0
  %426 = load i32* %425, align 8
  %427 = icmp uge i32 %426, 48
  %428 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %427, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %429 = getelementptr inbounds %struct.__va_list_tag* %428, i32 0, i32 3
  %430 = load i8** %429, align 8
  %431 = load %struct.__va_list_tag** %args_addr, align 8
  %432 = getelementptr inbounds %struct.__va_list_tag* %431, i32 0, i32 0
  %433 = load i32* %432, align 8
  %434 = inttoptr i32 %433 to i8*
  %435 = ptrtoint i8* %430 to i64
  %436 = ptrtoint i8* %434 to i64
  %437 = add i64 %435, %436
  %438 = inttoptr i64 %437 to i8*
  store i8* %438, i8** %addr.26, align 8
  %439 = load %struct.__va_list_tag** %args_addr, align 8
  %440 = getelementptr inbounds %struct.__va_list_tag* %439, i32 0, i32 0
  %441 = load i32* %440, align 8
  %442 = add i32 %441, 8
  %443 = load %struct.__va_list_tag** %args_addr, align 8
  %444 = getelementptr inbounds %struct.__va_list_tag* %443, i32 0, i32 0
  store i32 %442, i32* %444, align 8
  br label %bb53

bb52:                                             ; preds = %bb50
  %445 = getelementptr inbounds %struct.__va_list_tag* %428, i32 0, i32 2
  %446 = load i8** %445, align 8
  store i8* %446, i8** %addr.26, align 8
  %447 = getelementptr inbounds i8* %446, i64 8
  %448 = load %struct.__va_list_tag** %args_addr, align 8
  %449 = getelementptr inbounds %struct.__va_list_tag* %448, i32 0, i32 2
  store i8* %447, i8** %449, align 8
  br label %bb53

bb53:                                             ; preds = %bb52, %bb51
  %450 = load i8** %addr.26, align 8
  %451 = bitcast i8* %450 to i32*
  %452 = load i32* %451, align 4
  %453 = load %struct.argument** %ap, align 8
  %454 = getelementptr inbounds %struct.argument* %453, i32 0, i32 1
  %455 = getelementptr inbounds %union.argvalue_t* %454, i32 0, i32 0
  %456 = bitcast x86_fp80* %455 to i32*
  store i32 %452, i32* %456, align 16
  br label %bb91

bb54:                                             ; preds = %bb
  %457 = load %struct.__va_list_tag** %args_addr, align 8
  %458 = getelementptr inbounds %struct.__va_list_tag* %457, i32 0, i32 0
  %459 = load i32* %458, align 8
  %460 = icmp uge i32 %459, 48
  %461 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %460, label %bb56, label %bb55

bb55:                                             ; preds = %bb54
  %462 = getelementptr inbounds %struct.__va_list_tag* %461, i32 0, i32 3
  %463 = load i8** %462, align 8
  %464 = load %struct.__va_list_tag** %args_addr, align 8
  %465 = getelementptr inbounds %struct.__va_list_tag* %464, i32 0, i32 0
  %466 = load i32* %465, align 8
  %467 = inttoptr i32 %466 to i8*
  %468 = ptrtoint i8* %463 to i64
  %469 = ptrtoint i8* %467 to i64
  %470 = add i64 %468, %469
  %471 = inttoptr i64 %470 to i8*
  store i8* %471, i8** %addr.28, align 8
  %472 = load %struct.__va_list_tag** %args_addr, align 8
  %473 = getelementptr inbounds %struct.__va_list_tag* %472, i32 0, i32 0
  %474 = load i32* %473, align 8
  %475 = add i32 %474, 8
  %476 = load %struct.__va_list_tag** %args_addr, align 8
  %477 = getelementptr inbounds %struct.__va_list_tag* %476, i32 0, i32 0
  store i32 %475, i32* %477, align 8
  br label %bb57

bb56:                                             ; preds = %bb54
  %478 = getelementptr inbounds %struct.__va_list_tag* %461, i32 0, i32 2
  %479 = load i8** %478, align 8
  store i8* %479, i8** %addr.28, align 8
  %480 = getelementptr inbounds i8* %479, i64 8
  %481 = load %struct.__va_list_tag** %args_addr, align 8
  %482 = getelementptr inbounds %struct.__va_list_tag* %481, i32 0, i32 2
  store i8* %480, i8** %482, align 8
  br label %bb57

bb57:                                             ; preds = %bb56, %bb55
  %483 = load i8** %addr.28, align 8
  %484 = bitcast i8* %483 to i8**
  %485 = load i8** %484, align 8
  %486 = load %struct.argument** %ap, align 8
  %487 = getelementptr inbounds %struct.argument* %486, i32 0, i32 1
  %488 = getelementptr inbounds %union.argvalue_t* %487, i32 0, i32 0
  %489 = bitcast x86_fp80* %488 to i8**
  store i8* %485, i8** %489, align 16
  %490 = load %struct.argument** %ap, align 8
  %491 = getelementptr inbounds %struct.argument* %490, i32 0, i32 1
  %492 = getelementptr inbounds %union.argvalue_t* %491, i32 0, i32 0
  %493 = bitcast x86_fp80* %492 to i8**
  %494 = load i8** %493, align 16
  %495 = icmp eq i8* %494, null
  br i1 %495, label %bb58, label %bb91

bb58:                                             ; preds = %bb57
  %496 = load %struct.argument** %ap, align 8
  %497 = getelementptr inbounds %struct.argument* %496, i32 0, i32 1
  %498 = getelementptr inbounds %union.argvalue_t* %497, i32 0, i32 0
  %499 = bitcast x86_fp80* %498 to i8**
  store i8* getelementptr inbounds ([7 x i8]* @.str335, i64 0, i64 0), i8** %499, align 16
  br label %bb91

bb60:                                             ; preds = %bb
  %500 = load %struct.__va_list_tag** %args_addr, align 8
  %501 = getelementptr inbounds %struct.__va_list_tag* %500, i32 0, i32 0
  %502 = load i32* %501, align 8
  %503 = icmp uge i32 %502, 48
  %504 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %503, label %bb62, label %bb61

bb61:                                             ; preds = %bb60
  %505 = getelementptr inbounds %struct.__va_list_tag* %504, i32 0, i32 3
  %506 = load i8** %505, align 8
  %507 = load %struct.__va_list_tag** %args_addr, align 8
  %508 = getelementptr inbounds %struct.__va_list_tag* %507, i32 0, i32 0
  %509 = load i32* %508, align 8
  %510 = inttoptr i32 %509 to i8*
  %511 = ptrtoint i8* %506 to i64
  %512 = ptrtoint i8* %510 to i64
  %513 = add i64 %511, %512
  %514 = inttoptr i64 %513 to i8*
  store i8* %514, i8** %addr.30, align 8
  %515 = load %struct.__va_list_tag** %args_addr, align 8
  %516 = getelementptr inbounds %struct.__va_list_tag* %515, i32 0, i32 0
  %517 = load i32* %516, align 8
  %518 = add i32 %517, 8
  %519 = load %struct.__va_list_tag** %args_addr, align 8
  %520 = getelementptr inbounds %struct.__va_list_tag* %519, i32 0, i32 0
  store i32 %518, i32* %520, align 8
  br label %bb63

bb62:                                             ; preds = %bb60
  %521 = getelementptr inbounds %struct.__va_list_tag* %504, i32 0, i32 2
  %522 = load i8** %521, align 8
  store i8* %522, i8** %addr.30, align 8
  %523 = getelementptr inbounds i8* %522, i64 8
  %524 = load %struct.__va_list_tag** %args_addr, align 8
  %525 = getelementptr inbounds %struct.__va_list_tag* %524, i32 0, i32 2
  store i8* %523, i8** %525, align 8
  br label %bb63

bb63:                                             ; preds = %bb62, %bb61
  %526 = load i8** %addr.30, align 8
  %527 = bitcast i8* %526 to i32**
  %528 = load i32** %527, align 8
  %529 = load %struct.argument** %ap, align 8
  %530 = getelementptr inbounds %struct.argument* %529, i32 0, i32 1
  %531 = getelementptr inbounds %union.argvalue_t* %530, i32 0, i32 0
  %532 = bitcast x86_fp80* %531 to i32**
  store i32* %528, i32** %532, align 16
  %533 = load %struct.argument** %ap, align 8
  %534 = getelementptr inbounds %struct.argument* %533, i32 0, i32 1
  %535 = getelementptr inbounds %union.argvalue_t* %534, i32 0, i32 0
  %536 = bitcast x86_fp80* %535 to i32**
  %537 = load i32** %536, align 16
  %538 = bitcast i32* %537 to i8*
  %539 = icmp eq i8* %538, null
  br i1 %539, label %bb64, label %bb91

bb64:                                             ; preds = %bb63
  %540 = load %struct.argument** %ap, align 8
  %541 = getelementptr inbounds %struct.argument* %540, i32 0, i32 1
  %542 = getelementptr inbounds %union.argvalue_t* %541, i32 0, i32 0
  %543 = bitcast x86_fp80* %542 to i32**
  store i32* getelementptr inbounds ([7 x i32]* @wide_null_string.1937, i64 0, i64 0), i32** %543, align 16
  br label %bb91

bb66:                                             ; preds = %bb
  %544 = load %struct.__va_list_tag** %args_addr, align 8
  %545 = getelementptr inbounds %struct.__va_list_tag* %544, i32 0, i32 0
  %546 = load i32* %545, align 8
  %547 = icmp uge i32 %546, 48
  %548 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %547, label %bb68, label %bb67

bb67:                                             ; preds = %bb66
  %549 = getelementptr inbounds %struct.__va_list_tag* %548, i32 0, i32 3
  %550 = load i8** %549, align 8
  %551 = load %struct.__va_list_tag** %args_addr, align 8
  %552 = getelementptr inbounds %struct.__va_list_tag* %551, i32 0, i32 0
  %553 = load i32* %552, align 8
  %554 = inttoptr i32 %553 to i8*
  %555 = ptrtoint i8* %550 to i64
  %556 = ptrtoint i8* %554 to i64
  %557 = add i64 %555, %556
  %558 = inttoptr i64 %557 to i8*
  store i8* %558, i8** %addr.32, align 8
  %559 = load %struct.__va_list_tag** %args_addr, align 8
  %560 = getelementptr inbounds %struct.__va_list_tag* %559, i32 0, i32 0
  %561 = load i32* %560, align 8
  %562 = add i32 %561, 8
  %563 = load %struct.__va_list_tag** %args_addr, align 8
  %564 = getelementptr inbounds %struct.__va_list_tag* %563, i32 0, i32 0
  store i32 %562, i32* %564, align 8
  br label %bb69

bb68:                                             ; preds = %bb66
  %565 = getelementptr inbounds %struct.__va_list_tag* %548, i32 0, i32 2
  %566 = load i8** %565, align 8
  store i8* %566, i8** %addr.32, align 8
  %567 = getelementptr inbounds i8* %566, i64 8
  %568 = load %struct.__va_list_tag** %args_addr, align 8
  %569 = getelementptr inbounds %struct.__va_list_tag* %568, i32 0, i32 2
  store i8* %567, i8** %569, align 8
  br label %bb69

bb69:                                             ; preds = %bb68, %bb67
  %570 = load i8** %addr.32, align 8
  %571 = bitcast i8* %570 to i8**
  %572 = load i8** %571, align 8
  %573 = load %struct.argument** %ap, align 8
  %574 = getelementptr inbounds %struct.argument* %573, i32 0, i32 1
  %575 = getelementptr inbounds %union.argvalue_t* %574, i32 0, i32 0
  %576 = bitcast x86_fp80* %575 to i8**
  store i8* %572, i8** %576, align 16
  br label %bb91

bb70:                                             ; preds = %bb
  %577 = load %struct.__va_list_tag** %args_addr, align 8
  %578 = getelementptr inbounds %struct.__va_list_tag* %577, i32 0, i32 0
  %579 = load i32* %578, align 8
  %580 = icmp uge i32 %579, 48
  %581 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %580, label %bb72, label %bb71

bb71:                                             ; preds = %bb70
  %582 = getelementptr inbounds %struct.__va_list_tag* %581, i32 0, i32 3
  %583 = load i8** %582, align 8
  %584 = load %struct.__va_list_tag** %args_addr, align 8
  %585 = getelementptr inbounds %struct.__va_list_tag* %584, i32 0, i32 0
  %586 = load i32* %585, align 8
  %587 = inttoptr i32 %586 to i8*
  %588 = ptrtoint i8* %583 to i64
  %589 = ptrtoint i8* %587 to i64
  %590 = add i64 %588, %589
  %591 = inttoptr i64 %590 to i8*
  store i8* %591, i8** %addr.34, align 8
  %592 = load %struct.__va_list_tag** %args_addr, align 8
  %593 = getelementptr inbounds %struct.__va_list_tag* %592, i32 0, i32 0
  %594 = load i32* %593, align 8
  %595 = add i32 %594, 8
  %596 = load %struct.__va_list_tag** %args_addr, align 8
  %597 = getelementptr inbounds %struct.__va_list_tag* %596, i32 0, i32 0
  store i32 %595, i32* %597, align 8
  br label %bb73

bb72:                                             ; preds = %bb70
  %598 = getelementptr inbounds %struct.__va_list_tag* %581, i32 0, i32 2
  %599 = load i8** %598, align 8
  store i8* %599, i8** %addr.34, align 8
  %600 = getelementptr inbounds i8* %599, i64 8
  %601 = load %struct.__va_list_tag** %args_addr, align 8
  %602 = getelementptr inbounds %struct.__va_list_tag* %601, i32 0, i32 2
  store i8* %600, i8** %602, align 8
  br label %bb73

bb73:                                             ; preds = %bb72, %bb71
  %603 = load i8** %addr.34, align 8
  %604 = bitcast i8* %603 to i8**
  %605 = load i8** %604, align 8
  %606 = load %struct.argument** %ap, align 8
  %607 = getelementptr inbounds %struct.argument* %606, i32 0, i32 1
  %608 = getelementptr inbounds %union.argvalue_t* %607, i32 0, i32 0
  %609 = bitcast x86_fp80* %608 to i8**
  store i8* %605, i8** %609, align 16
  br label %bb91

bb74:                                             ; preds = %bb
  %610 = load %struct.__va_list_tag** %args_addr, align 8
  %611 = getelementptr inbounds %struct.__va_list_tag* %610, i32 0, i32 0
  %612 = load i32* %611, align 8
  %613 = icmp uge i32 %612, 48
  %614 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %613, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %615 = getelementptr inbounds %struct.__va_list_tag* %614, i32 0, i32 3
  %616 = load i8** %615, align 8
  %617 = load %struct.__va_list_tag** %args_addr, align 8
  %618 = getelementptr inbounds %struct.__va_list_tag* %617, i32 0, i32 0
  %619 = load i32* %618, align 8
  %620 = inttoptr i32 %619 to i8*
  %621 = ptrtoint i8* %616 to i64
  %622 = ptrtoint i8* %620 to i64
  %623 = add i64 %621, %622
  %624 = inttoptr i64 %623 to i8*
  store i8* %624, i8** %addr.36, align 8
  %625 = load %struct.__va_list_tag** %args_addr, align 8
  %626 = getelementptr inbounds %struct.__va_list_tag* %625, i32 0, i32 0
  %627 = load i32* %626, align 8
  %628 = add i32 %627, 8
  %629 = load %struct.__va_list_tag** %args_addr, align 8
  %630 = getelementptr inbounds %struct.__va_list_tag* %629, i32 0, i32 0
  store i32 %628, i32* %630, align 8
  br label %bb77

bb76:                                             ; preds = %bb74
  %631 = getelementptr inbounds %struct.__va_list_tag* %614, i32 0, i32 2
  %632 = load i8** %631, align 8
  store i8* %632, i8** %addr.36, align 8
  %633 = getelementptr inbounds i8* %632, i64 8
  %634 = load %struct.__va_list_tag** %args_addr, align 8
  %635 = getelementptr inbounds %struct.__va_list_tag* %634, i32 0, i32 2
  store i8* %633, i8** %635, align 8
  br label %bb77

bb77:                                             ; preds = %bb76, %bb75
  %636 = load i8** %addr.36, align 8
  %637 = bitcast i8* %636 to i16**
  %638 = load i16** %637, align 8
  %639 = load %struct.argument** %ap, align 8
  %640 = getelementptr inbounds %struct.argument* %639, i32 0, i32 1
  %641 = getelementptr inbounds %union.argvalue_t* %640, i32 0, i32 0
  %642 = bitcast x86_fp80* %641 to i16**
  store i16* %638, i16** %642, align 16
  br label %bb91

bb78:                                             ; preds = %bb
  %643 = load %struct.__va_list_tag** %args_addr, align 8
  %644 = getelementptr inbounds %struct.__va_list_tag* %643, i32 0, i32 0
  %645 = load i32* %644, align 8
  %646 = icmp uge i32 %645, 48
  %647 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %646, label %bb80, label %bb79

bb79:                                             ; preds = %bb78
  %648 = getelementptr inbounds %struct.__va_list_tag* %647, i32 0, i32 3
  %649 = load i8** %648, align 8
  %650 = load %struct.__va_list_tag** %args_addr, align 8
  %651 = getelementptr inbounds %struct.__va_list_tag* %650, i32 0, i32 0
  %652 = load i32* %651, align 8
  %653 = inttoptr i32 %652 to i8*
  %654 = ptrtoint i8* %649 to i64
  %655 = ptrtoint i8* %653 to i64
  %656 = add i64 %654, %655
  %657 = inttoptr i64 %656 to i8*
  store i8* %657, i8** %addr.38, align 8
  %658 = load %struct.__va_list_tag** %args_addr, align 8
  %659 = getelementptr inbounds %struct.__va_list_tag* %658, i32 0, i32 0
  %660 = load i32* %659, align 8
  %661 = add i32 %660, 8
  %662 = load %struct.__va_list_tag** %args_addr, align 8
  %663 = getelementptr inbounds %struct.__va_list_tag* %662, i32 0, i32 0
  store i32 %661, i32* %663, align 8
  br label %bb81

bb80:                                             ; preds = %bb78
  %664 = getelementptr inbounds %struct.__va_list_tag* %647, i32 0, i32 2
  %665 = load i8** %664, align 8
  store i8* %665, i8** %addr.38, align 8
  %666 = getelementptr inbounds i8* %665, i64 8
  %667 = load %struct.__va_list_tag** %args_addr, align 8
  %668 = getelementptr inbounds %struct.__va_list_tag* %667, i32 0, i32 2
  store i8* %666, i8** %668, align 8
  br label %bb81

bb81:                                             ; preds = %bb80, %bb79
  %669 = load i8** %addr.38, align 8
  %670 = bitcast i8* %669 to i32**
  %671 = load i32** %670, align 8
  %672 = load %struct.argument** %ap, align 8
  %673 = getelementptr inbounds %struct.argument* %672, i32 0, i32 1
  %674 = getelementptr inbounds %union.argvalue_t* %673, i32 0, i32 0
  %675 = bitcast x86_fp80* %674 to i32**
  store i32* %671, i32** %675, align 16
  br label %bb91

bb82:                                             ; preds = %bb
  %676 = load %struct.__va_list_tag** %args_addr, align 8
  %677 = getelementptr inbounds %struct.__va_list_tag* %676, i32 0, i32 0
  %678 = load i32* %677, align 8
  %679 = icmp uge i32 %678, 48
  %680 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %679, label %bb84, label %bb83

bb83:                                             ; preds = %bb82
  %681 = getelementptr inbounds %struct.__va_list_tag* %680, i32 0, i32 3
  %682 = load i8** %681, align 8
  %683 = load %struct.__va_list_tag** %args_addr, align 8
  %684 = getelementptr inbounds %struct.__va_list_tag* %683, i32 0, i32 0
  %685 = load i32* %684, align 8
  %686 = inttoptr i32 %685 to i8*
  %687 = ptrtoint i8* %682 to i64
  %688 = ptrtoint i8* %686 to i64
  %689 = add i64 %687, %688
  %690 = inttoptr i64 %689 to i8*
  store i8* %690, i8** %addr.40, align 8
  %691 = load %struct.__va_list_tag** %args_addr, align 8
  %692 = getelementptr inbounds %struct.__va_list_tag* %691, i32 0, i32 0
  %693 = load i32* %692, align 8
  %694 = add i32 %693, 8
  %695 = load %struct.__va_list_tag** %args_addr, align 8
  %696 = getelementptr inbounds %struct.__va_list_tag* %695, i32 0, i32 0
  store i32 %694, i32* %696, align 8
  br label %bb85

bb84:                                             ; preds = %bb82
  %697 = getelementptr inbounds %struct.__va_list_tag* %680, i32 0, i32 2
  %698 = load i8** %697, align 8
  store i8* %698, i8** %addr.40, align 8
  %699 = getelementptr inbounds i8* %698, i64 8
  %700 = load %struct.__va_list_tag** %args_addr, align 8
  %701 = getelementptr inbounds %struct.__va_list_tag* %700, i32 0, i32 2
  store i8* %699, i8** %701, align 8
  br label %bb85

bb85:                                             ; preds = %bb84, %bb83
  %702 = load i8** %addr.40, align 8
  %703 = bitcast i8* %702 to i64**
  %704 = load i64** %703, align 8
  %705 = load %struct.argument** %ap, align 8
  %706 = getelementptr inbounds %struct.argument* %705, i32 0, i32 1
  %707 = getelementptr inbounds %union.argvalue_t* %706, i32 0, i32 0
  %708 = bitcast x86_fp80* %707 to i64**
  store i64* %704, i64** %708, align 16
  br label %bb91

bb86:                                             ; preds = %bb
  %709 = load %struct.__va_list_tag** %args_addr, align 8
  %710 = getelementptr inbounds %struct.__va_list_tag* %709, i32 0, i32 0
  %711 = load i32* %710, align 8
  %712 = icmp uge i32 %711, 48
  %713 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %712, label %bb88, label %bb87

bb87:                                             ; preds = %bb86
  %714 = getelementptr inbounds %struct.__va_list_tag* %713, i32 0, i32 3
  %715 = load i8** %714, align 8
  %716 = load %struct.__va_list_tag** %args_addr, align 8
  %717 = getelementptr inbounds %struct.__va_list_tag* %716, i32 0, i32 0
  %718 = load i32* %717, align 8
  %719 = inttoptr i32 %718 to i8*
  %720 = ptrtoint i8* %715 to i64
  %721 = ptrtoint i8* %719 to i64
  %722 = add i64 %720, %721
  %723 = inttoptr i64 %722 to i8*
  store i8* %723, i8** %addr.42, align 8
  %724 = load %struct.__va_list_tag** %args_addr, align 8
  %725 = getelementptr inbounds %struct.__va_list_tag* %724, i32 0, i32 0
  %726 = load i32* %725, align 8
  %727 = add i32 %726, 8
  %728 = load %struct.__va_list_tag** %args_addr, align 8
  %729 = getelementptr inbounds %struct.__va_list_tag* %728, i32 0, i32 0
  store i32 %727, i32* %729, align 8
  br label %bb89

bb88:                                             ; preds = %bb86
  %730 = getelementptr inbounds %struct.__va_list_tag* %713, i32 0, i32 2
  %731 = load i8** %730, align 8
  store i8* %731, i8** %addr.42, align 8
  %732 = getelementptr inbounds i8* %731, i64 8
  %733 = load %struct.__va_list_tag** %args_addr, align 8
  %734 = getelementptr inbounds %struct.__va_list_tag* %733, i32 0, i32 2
  store i8* %732, i8** %734, align 8
  br label %bb89

bb89:                                             ; preds = %bb88, %bb87
  %735 = load i8** %addr.42, align 8
  %736 = bitcast i8* %735 to i64**
  %737 = load i64** %736, align 8
  %738 = load %struct.argument** %ap, align 8
  %739 = getelementptr inbounds %struct.argument* %738, i32 0, i32 1
  %740 = getelementptr inbounds %union.argvalue_t* %739, i32 0, i32 0
  %741 = bitcast x86_fp80* %740 to i64**
  store i64* %737, i64** %741, align 16
  br label %bb91

bb90:                                             ; preds = %bb
  store i32 -1, i32* %0, align 4
  br label %bb94

bb91:                                             ; preds = %bb63, %bb64, %bb57, %bb58, %bb89, %bb85, %bb81, %bb77, %bb73, %bb69, %bb53, %bb49, %bb45, %bb44, %bb40, %bb36, %bb32, %bb28, %bb24, %bb20, %bb16, %bb12, %bb8, %bb4
  %742 = load i64* %i, align 8
  %743 = add i64 %742, 1
  store i64 %743, i64* %i, align 8
  %744 = load %struct.argument** %ap, align 8
  %745 = getelementptr inbounds %struct.argument* %744, i64 1
  store %struct.argument* %745, %struct.argument** %ap, align 8
  br label %bb92

bb92:                                             ; preds = %bb91, %entry
  %746 = load %struct.arguments** %a_addr, align 8
  %747 = getelementptr inbounds %struct.arguments* %746, i32 0, i32 0
  %748 = load i64* %747, align 16
  %749 = load i64* %i, align 8
  %750 = icmp ugt i64 %748, %749
  br i1 %750, label %bb, label %bb93

bb93:                                             ; preds = %bb92
  store i32 0, i32* %0, align 4
  br label %bb94

bb94:                                             ; preds = %bb93, %bb90
  %751 = load i32* %0, align 4
  store i32 %751, i32* %retval, align 4
  %retval95 = load i32* %retval
  ret i32 %retval95
}

define i32 @printf_parse(i8* %format, %struct.char_directives* %d, %struct.arguments* %a) nounwind {
entry:
  %format_addr = alloca i8*, align 8
  %d_addr = alloca %struct.char_directives*, align 8
  %a_addr = alloca %struct.arguments*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.19 = alloca i8*
  %iftmp.18 = alloca i64
  %iftmp.16 = alloca i64
  %iftmp.15 = alloca i8*
  %iftmp.14 = alloca i64
  %iftmp.12 = alloca i64
  %iftmp.11 = alloca i8*
  %iftmp.10 = alloca i64
  %iftmp.8 = alloca i64
  %iftmp.7 = alloca i64
  %iftmp.6 = alloca i8*
  %iftmp.5 = alloca i64
  %iftmp.3 = alloca i64
  %iftmp.2 = alloca i64
  %iftmp.1 = alloca i64
  %cp = alloca i8*
  %arg_posn = alloca i64
  %d_allocated = alloca i64
  %a_allocated = alloca i64
  %max_width_length = alloca i64
  %max_precision_length = alloca i64
  %c = alloca i8
  %arg_index = alloca i64
  %dp = alloca %struct.char_directive*
  %np = alloca i8*
  %n = alloca i64
  %np39 = alloca i8*
  %n45 = alloca i64
  %n58 = alloca i64
  %memory_size = alloca i64
  %memory = alloca %struct.argument*
  %width_length = alloca i64
  %np97 = alloca i8*
  %n103 = alloca i64
  %n116 = alloca i64
  %memory_size118 = alloca i64
  %memory119 = alloca %struct.argument*
  %precision_length = alloca i64
  %type = alloca i32
  %flags = alloca i32
  %n221 = alloca i64
  %memory_size223 = alloca i64
  %memory224 = alloca %struct.argument*
  %memory_size248 = alloca i64
  %memory249 = alloca %struct.char_directive*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %format, i8** %format_addr
  store %struct.char_directives* %d, %struct.char_directives** %d_addr
  store %struct.arguments* %a, %struct.arguments** %a_addr
  %1 = load i8** %format_addr, align 8
  store i8* %1, i8** %cp, align 8
  store i64 0, i64* %arg_posn, align 8
  store i64 0, i64* %max_width_length, align 8
  store i64 0, i64* %max_precision_length, align 8
  %2 = load %struct.char_directives** %d_addr, align 8
  %3 = getelementptr inbounds %struct.char_directives* %2, i32 0, i32 0
  store i64 0, i64* %3, align 8
  store i64 7, i64* %d_allocated, align 8
  %4 = load %struct.char_directives** %d_addr, align 8
  %5 = getelementptr inbounds %struct.char_directives* %4, i32 0, i32 4
  %6 = getelementptr inbounds [7 x %struct.char_directive]* %5, i64 0, i64 0
  %7 = load %struct.char_directives** %d_addr, align 8
  %8 = getelementptr inbounds %struct.char_directives* %7, i32 0, i32 1
  store %struct.char_directive* %6, %struct.char_directive** %8, align 8
  %9 = load %struct.arguments** %a_addr, align 8
  %10 = getelementptr inbounds %struct.arguments* %9, i32 0, i32 0
  store i64 0, i64* %10, align 16
  store i64 7, i64* %a_allocated, align 8
  %11 = load %struct.arguments** %a_addr, align 8
  %12 = getelementptr inbounds %struct.arguments* %11, i32 0, i32 2
  %13 = getelementptr inbounds [7 x %struct.argument]* %12, i64 0, i64 0
  %14 = load %struct.arguments** %a_addr, align 8
  %15 = getelementptr inbounds %struct.arguments* %14, i32 0, i32 1
  store %struct.argument* %13, %struct.argument** %15, align 8
  br label %bb263

bb:                                               ; preds = %bb263
  %16 = load i8** %cp, align 8
  %17 = load i8* %16, align 1
  store i8 %17, i8* %c, align 1
  %18 = load i8** %cp, align 8
  %19 = getelementptr inbounds i8* %18, i64 1
  store i8* %19, i8** %cp, align 8
  %20 = load i8* %c, align 1
  %21 = icmp eq i8 %20, 37
  br i1 %21, label %bb1, label %bb263

bb1:                                              ; preds = %bb
  store i64 -1, i64* %arg_index, align 8
  %22 = load %struct.char_directives** %d_addr, align 8
  %23 = getelementptr inbounds %struct.char_directives* %22, i32 0, i32 1
  %24 = load %struct.char_directive** %23, align 8
  %25 = load %struct.char_directives** %d_addr, align 8
  %26 = getelementptr inbounds %struct.char_directives* %25, i32 0, i32 0
  %27 = load i64* %26, align 8
  %28 = getelementptr inbounds %struct.char_directive* %24, i64 %27
  store %struct.char_directive* %28, %struct.char_directive** %dp, align 8
  %29 = load i8** %cp, align 8
  %30 = getelementptr inbounds i8* %29, i64 -1
  %31 = load %struct.char_directive** %dp, align 8
  %32 = getelementptr inbounds %struct.char_directive* %31, i32 0, i32 0
  store i8* %30, i8** %32, align 8
  %33 = load %struct.char_directive** %dp, align 8
  %34 = getelementptr inbounds %struct.char_directive* %33, i32 0, i32 2
  store i32 0, i32* %34, align 8
  %35 = load %struct.char_directive** %dp, align 8
  %36 = getelementptr inbounds %struct.char_directive* %35, i32 0, i32 3
  store i8* null, i8** %36, align 8
  %37 = load %struct.char_directive** %dp, align 8
  %38 = getelementptr inbounds %struct.char_directive* %37, i32 0, i32 4
  store i8* null, i8** %38, align 8
  %39 = load %struct.char_directive** %dp, align 8
  %40 = getelementptr inbounds %struct.char_directive* %39, i32 0, i32 5
  store i64 -1, i64* %40, align 8
  %41 = load %struct.char_directive** %dp, align 8
  %42 = getelementptr inbounds %struct.char_directive* %41, i32 0, i32 6
  store i8* null, i8** %42, align 8
  %43 = load %struct.char_directive** %dp, align 8
  %44 = getelementptr inbounds %struct.char_directive* %43, i32 0, i32 7
  store i8* null, i8** %44, align 8
  %45 = load %struct.char_directive** %dp, align 8
  %46 = getelementptr inbounds %struct.char_directive* %45, i32 0, i32 8
  store i64 -1, i64* %46, align 8
  %47 = load %struct.char_directive** %dp, align 8
  %48 = getelementptr inbounds %struct.char_directive* %47, i32 0, i32 10
  store i64 -1, i64* %48, align 8
  %49 = load i8** %cp, align 8
  %50 = load i8* %49, align 1
  %51 = icmp sgt i8 %50, 47
  br i1 %51, label %bb2, label %bb18

bb2:                                              ; preds = %bb1
  %52 = load i8** %cp, align 8
  %53 = load i8* %52, align 1
  %54 = icmp sle i8 %53, 57
  br i1 %54, label %bb3, label %bb18

bb3:                                              ; preds = %bb2
  %55 = load i8** %cp, align 8
  store i8* %55, i8** %np, align 8
  br label %bb5

bb4:                                              ; preds = %bb6
  %56 = load i8** %np, align 8
  %57 = getelementptr inbounds i8* %56, i64 1
  store i8* %57, i8** %np, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %58 = load i8** %np, align 8
  %59 = load i8* %58, align 1
  %60 = icmp sle i8 %59, 47
  br i1 %60, label %bb7, label %bb6

bb6:                                              ; preds = %bb5
  %61 = load i8** %np, align 8
  %62 = load i8* %61, align 1
  %63 = icmp sle i8 %62, 57
  br i1 %63, label %bb4, label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %64 = load i8** %np, align 8
  %65 = load i8* %64, align 1
  %66 = icmp eq i8 %65, 36
  br i1 %66, label %bb8, label %bb18

bb8:                                              ; preds = %bb7
  store i64 0, i64* %n, align 8
  %67 = load i8** %cp, align 8
  store i8* %67, i8** %np, align 8
  br label %bb13

bb9:                                              ; preds = %bb14
  %68 = load i8** %np, align 8
  %69 = load i8* %68, align 1
  %70 = sext i8 %69 to i32
  %71 = sub nsw i32 %70, 48
  %72 = sext i32 %71 to i64
  %73 = load i64* %n, align 8
  %74 = icmp ule i64 %73, 1844674407370955161
  br i1 %74, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %75 = load i64* %n, align 8
  %76 = mul i64 %75, 10
  store i64 %76, i64* %iftmp.1, align 8
  br label %bb12

bb11:                                             ; preds = %bb9
  store i64 -1, i64* %iftmp.1, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %77 = load i64* %iftmp.1, align 8
  %78 = call i64 @xsum(i64 %77, i64 %72) nounwind readonly
  store i64 %78, i64* %n, align 8
  %79 = load i8** %np, align 8
  %80 = getelementptr inbounds i8* %79, i64 1
  store i8* %80, i8** %np, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb8
  %81 = load i8** %np, align 8
  %82 = load i8* %81, align 1
  %83 = icmp sle i8 %82, 47
  br i1 %83, label %bb15, label %bb14

bb14:                                             ; preds = %bb13
  %84 = load i8** %np, align 8
  %85 = load i8* %84, align 1
  %86 = icmp sle i8 %85, 57
  br i1 %86, label %bb9, label %bb15

bb15:                                             ; preds = %bb14, %bb13
  %87 = load i64* %n, align 8
  %88 = icmp eq i64 %87, 0
  %89 = load i64* %n, align 8
  %90 = icmp eq i64 %89, -1
  %or.cond = or i1 %88, %90
  br i1 %or.cond, label %error, label %bb17

bb17:                                             ; preds = %bb15
  %91 = load i64* %n, align 8
  %92 = sub i64 %91, 1
  store i64 %92, i64* %arg_index, align 8
  %93 = load i8** %np, align 8
  %94 = getelementptr inbounds i8* %93, i64 1
  store i8* %94, i8** %cp, align 8
  br label %bb18

bb18:                                             ; preds = %bb19, %bb21, %bb23, %bb25, %bb27, %bb29, %bb31, %bb17, %bb7, %bb2, %bb1
  %95 = load i8** %cp, align 8
  %96 = load i8* %95, align 1
  %97 = icmp eq i8 %96, 39
  br i1 %97, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  %98 = load %struct.char_directive** %dp, align 8
  %99 = getelementptr inbounds %struct.char_directive* %98, i32 0, i32 2
  %100 = load i32* %99, align 8
  %101 = or i32 %100, 1
  %102 = load %struct.char_directive** %dp, align 8
  %103 = getelementptr inbounds %struct.char_directive* %102, i32 0, i32 2
  store i32 %101, i32* %103, align 8
  %104 = load i8** %cp, align 8
  %105 = getelementptr inbounds i8* %104, i64 1
  store i8* %105, i8** %cp, align 8
  br label %bb18

bb20:                                             ; preds = %bb18
  %106 = load i8** %cp, align 8
  %107 = load i8* %106, align 1
  %108 = icmp eq i8 %107, 45
  br i1 %108, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %109 = load %struct.char_directive** %dp, align 8
  %110 = getelementptr inbounds %struct.char_directive* %109, i32 0, i32 2
  %111 = load i32* %110, align 8
  %112 = or i32 %111, 2
  %113 = load %struct.char_directive** %dp, align 8
  %114 = getelementptr inbounds %struct.char_directive* %113, i32 0, i32 2
  store i32 %112, i32* %114, align 8
  %115 = load i8** %cp, align 8
  %116 = getelementptr inbounds i8* %115, i64 1
  store i8* %116, i8** %cp, align 8
  br label %bb18

bb22:                                             ; preds = %bb20
  %117 = load i8** %cp, align 8
  %118 = load i8* %117, align 1
  %119 = icmp eq i8 %118, 43
  br i1 %119, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  %120 = load %struct.char_directive** %dp, align 8
  %121 = getelementptr inbounds %struct.char_directive* %120, i32 0, i32 2
  %122 = load i32* %121, align 8
  %123 = or i32 %122, 4
  %124 = load %struct.char_directive** %dp, align 8
  %125 = getelementptr inbounds %struct.char_directive* %124, i32 0, i32 2
  store i32 %123, i32* %125, align 8
  %126 = load i8** %cp, align 8
  %127 = getelementptr inbounds i8* %126, i64 1
  store i8* %127, i8** %cp, align 8
  br label %bb18

bb24:                                             ; preds = %bb22
  %128 = load i8** %cp, align 8
  %129 = load i8* %128, align 1
  %130 = icmp eq i8 %129, 32
  br i1 %130, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  %131 = load %struct.char_directive** %dp, align 8
  %132 = getelementptr inbounds %struct.char_directive* %131, i32 0, i32 2
  %133 = load i32* %132, align 8
  %134 = or i32 %133, 8
  %135 = load %struct.char_directive** %dp, align 8
  %136 = getelementptr inbounds %struct.char_directive* %135, i32 0, i32 2
  store i32 %134, i32* %136, align 8
  %137 = load i8** %cp, align 8
  %138 = getelementptr inbounds i8* %137, i64 1
  store i8* %138, i8** %cp, align 8
  br label %bb18

bb26:                                             ; preds = %bb24
  %139 = load i8** %cp, align 8
  %140 = load i8* %139, align 1
  %141 = icmp eq i8 %140, 35
  br i1 %141, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %142 = load %struct.char_directive** %dp, align 8
  %143 = getelementptr inbounds %struct.char_directive* %142, i32 0, i32 2
  %144 = load i32* %143, align 8
  %145 = or i32 %144, 16
  %146 = load %struct.char_directive** %dp, align 8
  %147 = getelementptr inbounds %struct.char_directive* %146, i32 0, i32 2
  store i32 %145, i32* %147, align 8
  %148 = load i8** %cp, align 8
  %149 = getelementptr inbounds i8* %148, i64 1
  store i8* %149, i8** %cp, align 8
  br label %bb18

bb28:                                             ; preds = %bb26
  %150 = load i8** %cp, align 8
  %151 = load i8* %150, align 1
  %152 = icmp eq i8 %151, 48
  br i1 %152, label %bb29, label %bb30

bb29:                                             ; preds = %bb28
  %153 = load %struct.char_directive** %dp, align 8
  %154 = getelementptr inbounds %struct.char_directive* %153, i32 0, i32 2
  %155 = load i32* %154, align 8
  %156 = or i32 %155, 32
  %157 = load %struct.char_directive** %dp, align 8
  %158 = getelementptr inbounds %struct.char_directive* %157, i32 0, i32 2
  store i32 %156, i32* %158, align 8
  %159 = load i8** %cp, align 8
  %160 = getelementptr inbounds i8* %159, i64 1
  store i8* %160, i8** %cp, align 8
  br label %bb18

bb30:                                             ; preds = %bb28
  %161 = load i8** %cp, align 8
  %162 = load i8* %161, align 1
  %163 = icmp eq i8 %162, 73
  br i1 %163, label %bb31, label %bb33

bb31:                                             ; preds = %bb30
  %164 = load %struct.char_directive** %dp, align 8
  %165 = getelementptr inbounds %struct.char_directive* %164, i32 0, i32 2
  %166 = load i32* %165, align 8
  %167 = or i32 %166, 64
  %168 = load %struct.char_directive** %dp, align 8
  %169 = getelementptr inbounds %struct.char_directive* %168, i32 0, i32 2
  store i32 %167, i32* %169, align 8
  %170 = load i8** %cp, align 8
  %171 = getelementptr inbounds i8* %170, i64 1
  store i8* %171, i8** %cp, align 8
  br label %bb18

bb33:                                             ; preds = %bb30
  %172 = load i8** %cp, align 8
  %173 = load i8* %172, align 1
  %174 = icmp eq i8 %173, 42
  br i1 %174, label %bb34, label %bb82

bb34:                                             ; preds = %bb33
  %175 = load %struct.char_directive** %dp, align 8
  %176 = getelementptr inbounds %struct.char_directive* %175, i32 0, i32 3
  %177 = load i8** %cp, align 8
  store i8* %177, i8** %176, align 8
  %178 = load i8** %cp, align 8
  %179 = getelementptr inbounds i8* %178, i64 1
  store i8* %179, i8** %cp, align 8
  %180 = load %struct.char_directive** %dp, align 8
  %181 = getelementptr inbounds %struct.char_directive* %180, i32 0, i32 4
  %182 = load i8** %cp, align 8
  store i8* %182, i8** %181, align 8
  %183 = load i64* %max_width_length, align 8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %bb35, label %bb36

bb35:                                             ; preds = %bb34
  store i64 1, i64* %max_width_length, align 8
  br label %bb36

bb36:                                             ; preds = %bb35, %bb34
  %185 = load i8** %cp, align 8
  %186 = load i8* %185, align 1
  %187 = icmp sgt i8 %186, 47
  br i1 %187, label %bb37, label %bb55

bb37:                                             ; preds = %bb36
  %188 = load i8** %cp, align 8
  %189 = load i8* %188, align 1
  %190 = icmp sle i8 %189, 57
  br i1 %190, label %bb38, label %bb55

bb38:                                             ; preds = %bb37
  %191 = load i8** %cp, align 8
  store i8* %191, i8** %np39, align 8
  br label %bb41

bb40:                                             ; preds = %bb42
  %192 = load i8** %np39, align 8
  %193 = getelementptr inbounds i8* %192, i64 1
  store i8* %193, i8** %np39, align 8
  br label %bb41

bb41:                                             ; preds = %bb40, %bb38
  %194 = load i8** %np39, align 8
  %195 = load i8* %194, align 1
  %196 = icmp sle i8 %195, 47
  br i1 %196, label %bb43, label %bb42

bb42:                                             ; preds = %bb41
  %197 = load i8** %np39, align 8
  %198 = load i8* %197, align 1
  %199 = icmp sle i8 %198, 57
  br i1 %199, label %bb40, label %bb43

bb43:                                             ; preds = %bb42, %bb41
  %200 = load i8** %np39, align 8
  %201 = load i8* %200, align 1
  %202 = icmp eq i8 %201, 36
  br i1 %202, label %bb44, label %bb55

bb44:                                             ; preds = %bb43
  store i64 0, i64* %n45, align 8
  %203 = load i8** %cp, align 8
  store i8* %203, i8** %np39, align 8
  br label %bb50

bb46:                                             ; preds = %bb51
  %204 = load i8** %np39, align 8
  %205 = load i8* %204, align 1
  %206 = sext i8 %205 to i32
  %207 = sub nsw i32 %206, 48
  %208 = sext i32 %207 to i64
  %209 = load i64* %n45, align 8
  %210 = icmp ule i64 %209, 1844674407370955161
  br i1 %210, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  %211 = load i64* %n45, align 8
  %212 = mul i64 %211, 10
  store i64 %212, i64* %iftmp.2, align 8
  br label %bb49

bb48:                                             ; preds = %bb46
  store i64 -1, i64* %iftmp.2, align 8
  br label %bb49

bb49:                                             ; preds = %bb48, %bb47
  %213 = load i64* %iftmp.2, align 8
  %214 = call i64 @xsum(i64 %213, i64 %208) nounwind readonly
  store i64 %214, i64* %n45, align 8
  %215 = load i8** %np39, align 8
  %216 = getelementptr inbounds i8* %215, i64 1
  store i8* %216, i8** %np39, align 8
  br label %bb50

bb50:                                             ; preds = %bb49, %bb44
  %217 = load i8** %np39, align 8
  %218 = load i8* %217, align 1
  %219 = icmp sle i8 %218, 47
  br i1 %219, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %220 = load i8** %np39, align 8
  %221 = load i8* %220, align 1
  %222 = icmp sle i8 %221, 57
  br i1 %222, label %bb46, label %bb52

bb52:                                             ; preds = %bb51, %bb50
  %223 = load i64* %n45, align 8
  %224 = icmp eq i64 %223, 0
  %225 = load i64* %n45, align 8
  %226 = icmp eq i64 %225, -1
  %or.cond3 = or i1 %224, %226
  br i1 %or.cond3, label %error, label %bb54

bb54:                                             ; preds = %bb52
  %227 = load i64* %n45, align 8
  %228 = sub i64 %227, 1
  %229 = load %struct.char_directive** %dp, align 8
  %230 = getelementptr inbounds %struct.char_directive* %229, i32 0, i32 5
  store i64 %228, i64* %230, align 8
  %231 = load i8** %np39, align 8
  %232 = getelementptr inbounds i8* %231, i64 1
  store i8* %232, i8** %cp, align 8
  br label %bb55

bb55:                                             ; preds = %bb54, %bb43, %bb37, %bb36
  %233 = load %struct.char_directive** %dp, align 8
  %234 = getelementptr inbounds %struct.char_directive* %233, i32 0, i32 5
  %235 = load i64* %234, align 8
  %236 = icmp eq i64 %235, -1
  br i1 %236, label %bb56, label %bb57

bb56:                                             ; preds = %bb55
  %237 = load %struct.char_directive** %dp, align 8
  %238 = getelementptr inbounds %struct.char_directive* %237, i32 0, i32 5
  %239 = load i64* %arg_posn, align 8
  store i64 %239, i64* %238, align 8
  %240 = load i64* %arg_posn, align 8
  %241 = add i64 %240, 1
  store i64 %241, i64* %arg_posn, align 8
  %242 = load %struct.char_directive** %dp, align 8
  %243 = getelementptr inbounds %struct.char_directive* %242, i32 0, i32 5
  %244 = load i64* %243, align 8
  %245 = icmp eq i64 %244, -1
  br i1 %245, label %error, label %bb57

bb57:                                             ; preds = %bb56, %bb55
  %246 = load %struct.char_directive** %dp, align 8
  %247 = getelementptr inbounds %struct.char_directive* %246, i32 0, i32 5
  %248 = load i64* %247, align 8
  store i64 %248, i64* %n58, align 8
  %249 = load i64* %n58, align 8
  %250 = load i64* %a_allocated, align 8
  %251 = icmp uge i64 %249, %250
  br i1 %251, label %bb59, label %bb77

bb59:                                             ; preds = %bb57
  %252 = load i64* %a_allocated, align 8
  %253 = icmp sge i64 %252, 0
  br i1 %253, label %bb60, label %bb61

bb60:                                             ; preds = %bb59
  %254 = load i64* %a_allocated, align 8
  %255 = mul i64 %254, 2
  store i64 %255, i64* %iftmp.3, align 8
  br label %bb62

bb61:                                             ; preds = %bb59
  store i64 -1, i64* %iftmp.3, align 8
  br label %bb62

bb62:                                             ; preds = %bb61, %bb60
  %256 = load i64* %iftmp.3, align 8
  store i64 %256, i64* %a_allocated, align 8
  %257 = load i64* %a_allocated, align 8
  %258 = load i64* %n58, align 8
  %259 = icmp ule i64 %257, %258
  br i1 %259, label %bb63, label %bb64

bb63:                                             ; preds = %bb62
  %260 = load i64* %n58, align 8
  %261 = call i64 @xsum(i64 %260, i64 1) nounwind readonly
  store i64 %261, i64* %a_allocated, align 8
  br label %bb64

bb64:                                             ; preds = %bb63, %bb62
  %262 = load i64* %a_allocated, align 8
  %263 = icmp ule i64 %262, 576460752303423487
  br i1 %263, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  %264 = load i64* %a_allocated, align 8
  %265 = mul i64 %264, 32
  store i64 %265, i64* %iftmp.5, align 8
  br label %bb67

bb66:                                             ; preds = %bb64
  store i64 -1, i64* %iftmp.5, align 8
  br label %bb67

bb67:                                             ; preds = %bb66, %bb65
  %266 = load i64* %iftmp.5, align 8
  store i64 %266, i64* %memory_size, align 8
  %267 = load i64* %memory_size, align 8
  %268 = icmp eq i64 %267, -1
  br i1 %268, label %out_of_memory, label %bb68

bb68:                                             ; preds = %bb67
  %269 = load %struct.arguments** %a_addr, align 8
  %270 = getelementptr inbounds %struct.arguments* %269, i32 0, i32 1
  %271 = load %struct.argument** %270, align 8
  %272 = load %struct.arguments** %a_addr, align 8
  %273 = getelementptr inbounds %struct.arguments* %272, i32 0, i32 2
  %274 = getelementptr inbounds [7 x %struct.argument]* %273, i64 0, i64 0
  %275 = icmp ne %struct.argument* %271, %274
  br i1 %275, label %bb69, label %bb70

bb69:                                             ; preds = %bb68
  %276 = load %struct.arguments** %a_addr, align 8
  %277 = getelementptr inbounds %struct.arguments* %276, i32 0, i32 1
  %278 = load %struct.argument** %277, align 8
  %279 = bitcast %struct.argument* %278 to i8*
  %280 = load i64* %memory_size, align 8
  %281 = call i8* @realloc(i8* %279, i64 %280) nounwind
  store i8* %281, i8** %iftmp.6, align 8
  br label %bb71

bb70:                                             ; preds = %bb68
  %282 = load i64* %memory_size, align 8
  %283 = call noalias i8* @malloc(i64 %282) nounwind
  store i8* %283, i8** %iftmp.6, align 8
  br label %bb71

bb71:                                             ; preds = %bb70, %bb69
  %284 = load i8** %iftmp.6, align 8
  %285 = bitcast i8* %284 to %struct.argument*
  store %struct.argument* %285, %struct.argument** %memory, align 8
  %286 = load %struct.argument** %memory, align 8
  %287 = icmp eq %struct.argument* %286, null
  br i1 %287, label %out_of_memory, label %bb72

bb72:                                             ; preds = %bb71
  %288 = load %struct.arguments** %a_addr, align 8
  %289 = getelementptr inbounds %struct.arguments* %288, i32 0, i32 1
  %290 = load %struct.argument** %289, align 8
  %291 = load %struct.arguments** %a_addr, align 8
  %292 = getelementptr inbounds %struct.arguments* %291, i32 0, i32 2
  %293 = getelementptr inbounds [7 x %struct.argument]* %292, i64 0, i64 0
  %294 = icmp eq %struct.argument* %290, %293
  br i1 %294, label %bb73, label %bb74

bb73:                                             ; preds = %bb72
  %295 = load %struct.arguments** %a_addr, align 8
  %296 = getelementptr inbounds %struct.arguments* %295, i32 0, i32 0
  %297 = load i64* %296, align 16
  %298 = mul i64 %297, 32
  %299 = load %struct.arguments** %a_addr, align 8
  %300 = getelementptr inbounds %struct.arguments* %299, i32 0, i32 1
  %301 = load %struct.argument** %300, align 8
  %302 = load %struct.argument** %memory, align 8
  %303 = bitcast %struct.argument* %302 to i8*
  %304 = bitcast %struct.argument* %301 to i8*
  %305 = call i8* @memcpy(i8* %303, i8* %304, i64 %298)
  br label %bb74

bb74:                                             ; preds = %bb73, %bb72
  %306 = load %struct.arguments** %a_addr, align 8
  %307 = getelementptr inbounds %struct.arguments* %306, i32 0, i32 1
  %308 = load %struct.argument** %memory, align 8
  store %struct.argument* %308, %struct.argument** %307, align 8
  br label %bb77

bb76:                                             ; preds = %bb77
  %309 = load %struct.arguments** %a_addr, align 8
  %310 = getelementptr inbounds %struct.arguments* %309, i32 0, i32 0
  %311 = load i64* %310, align 16
  %312 = getelementptr inbounds %struct.argument* %324, i64 %311
  %313 = getelementptr inbounds %struct.argument* %312, i32 0, i32 0
  store i32 0, i32* %313, align 16
  %314 = add i64 %311, 1
  %315 = load %struct.arguments** %a_addr, align 8
  %316 = getelementptr inbounds %struct.arguments* %315, i32 0, i32 0
  store i64 %314, i64* %316, align 16
  br label %bb77

bb77:                                             ; preds = %bb57, %bb74, %bb76
  %317 = load %struct.arguments** %a_addr, align 8
  %318 = getelementptr inbounds %struct.arguments* %317, i32 0, i32 0
  %319 = load i64* %318, align 16
  %320 = load i64* %n58, align 8
  %321 = icmp ule i64 %319, %320
  %322 = load %struct.arguments** %a_addr, align 8
  %323 = getelementptr inbounds %struct.arguments* %322, i32 0, i32 1
  %324 = load %struct.argument** %323, align 8
  br i1 %321, label %bb76, label %bb78

bb78:                                             ; preds = %bb77
  %325 = load i64* %n58, align 8
  %326 = getelementptr inbounds %struct.argument* %324, i64 %325
  %327 = getelementptr inbounds %struct.argument* %326, i32 0, i32 0
  %328 = load i32* %327, align 16
  %329 = icmp eq i32 %328, 0
  %330 = load %struct.arguments** %a_addr, align 8
  %331 = getelementptr inbounds %struct.arguments* %330, i32 0, i32 1
  %332 = load %struct.argument** %331, align 8
  %333 = load i64* %n58, align 8
  %334 = getelementptr inbounds %struct.argument* %332, i64 %333
  %335 = getelementptr inbounds %struct.argument* %334, i32 0, i32 0
  br i1 %329, label %bb79, label %bb80

bb79:                                             ; preds = %bb78
  store i32 5, i32* %335, align 16
  br label %bb90

bb80:                                             ; preds = %bb78
  %336 = load i32* %335, align 16
  %337 = icmp ne i32 %336, 5
  br i1 %337, label %error, label %bb90

bb82:                                             ; preds = %bb33
  %338 = load i8** %cp, align 8
  %339 = load i8* %338, align 1
  %340 = icmp sgt i8 %339, 47
  br i1 %340, label %bb83, label %bb90

bb83:                                             ; preds = %bb82
  %341 = load i8** %cp, align 8
  %342 = load i8* %341, align 1
  %343 = icmp sle i8 %342, 57
  br i1 %343, label %bb84, label %bb90

bb84:                                             ; preds = %bb83
  %344 = load %struct.char_directive** %dp, align 8
  %345 = getelementptr inbounds %struct.char_directive* %344, i32 0, i32 3
  %346 = load i8** %cp, align 8
  store i8* %346, i8** %345, align 8
  br label %bb86

bb85:                                             ; preds = %bb87
  %347 = load i8** %cp, align 8
  %348 = getelementptr inbounds i8* %347, i64 1
  store i8* %348, i8** %cp, align 8
  br label %bb86

bb86:                                             ; preds = %bb85, %bb84
  %349 = load i8** %cp, align 8
  %350 = load i8* %349, align 1
  %351 = icmp sle i8 %350, 47
  br i1 %351, label %bb88, label %bb87

bb87:                                             ; preds = %bb86
  %352 = load i8** %cp, align 8
  %353 = load i8* %352, align 1
  %354 = icmp sle i8 %353, 57
  br i1 %354, label %bb85, label %bb88

bb88:                                             ; preds = %bb87, %bb86
  %355 = load %struct.char_directive** %dp, align 8
  %356 = getelementptr inbounds %struct.char_directive* %355, i32 0, i32 4
  %357 = load i8** %cp, align 8
  store i8* %357, i8** %356, align 8
  %358 = load %struct.char_directive** %dp, align 8
  %359 = getelementptr inbounds %struct.char_directive* %358, i32 0, i32 4
  %360 = load i8** %359, align 8
  %361 = ptrtoint i8* %360 to i64
  %362 = load %struct.char_directive** %dp, align 8
  %363 = getelementptr inbounds %struct.char_directive* %362, i32 0, i32 3
  %364 = load i8** %363, align 8
  %365 = ptrtoint i8* %364 to i64
  %366 = sub nsw i64 %361, %365
  store i64 %366, i64* %width_length, align 8
  %367 = load i64* %max_width_length, align 8
  %368 = load i64* %width_length, align 8
  %369 = icmp ult i64 %367, %368
  br i1 %369, label %bb89, label %bb90

bb89:                                             ; preds = %bb88
  %370 = load i64* %width_length, align 8
  store i64 %370, i64* %max_width_length, align 8
  br label %bb90

bb90:                                             ; preds = %bb79, %bb80, %bb89, %bb88, %bb83, %bb82
  %371 = load i8** %cp, align 8
  %372 = load i8* %371, align 1
  %373 = icmp eq i8 %372, 46
  br i1 %373, label %bb91, label %bb148

bb91:                                             ; preds = %bb90
  %374 = load i8** %cp, align 8
  %375 = getelementptr inbounds i8* %374, i64 1
  store i8* %375, i8** %cp, align 8
  %376 = load i8** %cp, align 8
  %377 = load i8* %376, align 1
  %378 = icmp eq i8 %377, 42
  %379 = load i8** %cp, align 8
  %380 = getelementptr inbounds i8* %379, i64 -1
  %381 = load %struct.char_directive** %dp, align 8
  %382 = getelementptr inbounds %struct.char_directive* %381, i32 0, i32 6
  store i8* %380, i8** %382, align 8
  br i1 %378, label %bb92, label %bb144

bb92:                                             ; preds = %bb91
  %383 = load i8** %cp, align 8
  %384 = getelementptr inbounds i8* %383, i64 1
  store i8* %384, i8** %cp, align 8
  %385 = load %struct.char_directive** %dp, align 8
  %386 = getelementptr inbounds %struct.char_directive* %385, i32 0, i32 7
  %387 = load i8** %cp, align 8
  store i8* %387, i8** %386, align 8
  %388 = load i64* %max_precision_length, align 8
  %389 = icmp ule i64 %388, 1
  br i1 %389, label %bb93, label %bb94

bb93:                                             ; preds = %bb92
  store i64 2, i64* %max_precision_length, align 8
  br label %bb94

bb94:                                             ; preds = %bb93, %bb92
  %390 = load i8** %cp, align 8
  %391 = load i8* %390, align 1
  %392 = icmp sgt i8 %391, 47
  br i1 %392, label %bb95, label %bb113

bb95:                                             ; preds = %bb94
  %393 = load i8** %cp, align 8
  %394 = load i8* %393, align 1
  %395 = icmp sle i8 %394, 57
  br i1 %395, label %bb96, label %bb113

bb96:                                             ; preds = %bb95
  %396 = load i8** %cp, align 8
  store i8* %396, i8** %np97, align 8
  br label %bb99

bb98:                                             ; preds = %bb100
  %397 = load i8** %np97, align 8
  %398 = getelementptr inbounds i8* %397, i64 1
  store i8* %398, i8** %np97, align 8
  br label %bb99

bb99:                                             ; preds = %bb98, %bb96
  %399 = load i8** %np97, align 8
  %400 = load i8* %399, align 1
  %401 = icmp sle i8 %400, 47
  br i1 %401, label %bb101, label %bb100

bb100:                                            ; preds = %bb99
  %402 = load i8** %np97, align 8
  %403 = load i8* %402, align 1
  %404 = icmp sle i8 %403, 57
  br i1 %404, label %bb98, label %bb101

bb101:                                            ; preds = %bb100, %bb99
  %405 = load i8** %np97, align 8
  %406 = load i8* %405, align 1
  %407 = icmp eq i8 %406, 36
  br i1 %407, label %bb102, label %bb113

bb102:                                            ; preds = %bb101
  store i64 0, i64* %n103, align 8
  %408 = load i8** %cp, align 8
  store i8* %408, i8** %np97, align 8
  br label %bb108

bb104:                                            ; preds = %bb109
  %409 = load i8** %np97, align 8
  %410 = load i8* %409, align 1
  %411 = sext i8 %410 to i32
  %412 = sub nsw i32 %411, 48
  %413 = sext i32 %412 to i64
  %414 = load i64* %n103, align 8
  %415 = icmp ule i64 %414, 1844674407370955161
  br i1 %415, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %416 = load i64* %n103, align 8
  %417 = mul i64 %416, 10
  store i64 %417, i64* %iftmp.7, align 8
  br label %bb107

bb106:                                            ; preds = %bb104
  store i64 -1, i64* %iftmp.7, align 8
  br label %bb107

bb107:                                            ; preds = %bb106, %bb105
  %418 = load i64* %iftmp.7, align 8
  %419 = call i64 @xsum(i64 %418, i64 %413) nounwind readonly
  store i64 %419, i64* %n103, align 8
  %420 = load i8** %np97, align 8
  %421 = getelementptr inbounds i8* %420, i64 1
  store i8* %421, i8** %np97, align 8
  br label %bb108

bb108:                                            ; preds = %bb107, %bb102
  %422 = load i8** %np97, align 8
  %423 = load i8* %422, align 1
  %424 = icmp sle i8 %423, 47
  br i1 %424, label %bb110, label %bb109

bb109:                                            ; preds = %bb108
  %425 = load i8** %np97, align 8
  %426 = load i8* %425, align 1
  %427 = icmp sle i8 %426, 57
  br i1 %427, label %bb104, label %bb110

bb110:                                            ; preds = %bb109, %bb108
  %428 = load i64* %n103, align 8
  %429 = icmp eq i64 %428, 0
  %430 = load i64* %n103, align 8
  %431 = icmp eq i64 %430, -1
  %or.cond5 = or i1 %429, %431
  br i1 %or.cond5, label %error, label %bb112

bb112:                                            ; preds = %bb110
  %432 = load i64* %n103, align 8
  %433 = sub i64 %432, 1
  %434 = load %struct.char_directive** %dp, align 8
  %435 = getelementptr inbounds %struct.char_directive* %434, i32 0, i32 8
  store i64 %433, i64* %435, align 8
  %436 = load i8** %np97, align 8
  %437 = getelementptr inbounds i8* %436, i64 1
  store i8* %437, i8** %cp, align 8
  br label %bb113

bb113:                                            ; preds = %bb112, %bb101, %bb95, %bb94
  %438 = load %struct.char_directive** %dp, align 8
  %439 = getelementptr inbounds %struct.char_directive* %438, i32 0, i32 8
  %440 = load i64* %439, align 8
  %441 = icmp eq i64 %440, -1
  br i1 %441, label %bb114, label %bb115

bb114:                                            ; preds = %bb113
  %442 = load %struct.char_directive** %dp, align 8
  %443 = getelementptr inbounds %struct.char_directive* %442, i32 0, i32 8
  %444 = load i64* %arg_posn, align 8
  store i64 %444, i64* %443, align 8
  %445 = load i64* %arg_posn, align 8
  %446 = add i64 %445, 1
  store i64 %446, i64* %arg_posn, align 8
  %447 = load %struct.char_directive** %dp, align 8
  %448 = getelementptr inbounds %struct.char_directive* %447, i32 0, i32 8
  %449 = load i64* %448, align 8
  %450 = icmp eq i64 %449, -1
  br i1 %450, label %error, label %bb115

bb115:                                            ; preds = %bb114, %bb113
  %451 = load %struct.char_directive** %dp, align 8
  %452 = getelementptr inbounds %struct.char_directive* %451, i32 0, i32 8
  %453 = load i64* %452, align 8
  store i64 %453, i64* %n116, align 8
  %454 = load i64* %n116, align 8
  %455 = load i64* %a_allocated, align 8
  %456 = icmp uge i64 %454, %455
  br i1 %456, label %bb117, label %bb137

bb117:                                            ; preds = %bb115
  %457 = load i64* %a_allocated, align 8
  %458 = icmp sge i64 %457, 0
  br i1 %458, label %bb120, label %bb121

bb120:                                            ; preds = %bb117
  %459 = load i64* %a_allocated, align 8
  %460 = mul i64 %459, 2
  store i64 %460, i64* %iftmp.8, align 8
  br label %bb122

bb121:                                            ; preds = %bb117
  store i64 -1, i64* %iftmp.8, align 8
  br label %bb122

bb122:                                            ; preds = %bb121, %bb120
  %461 = load i64* %iftmp.8, align 8
  store i64 %461, i64* %a_allocated, align 8
  %462 = load i64* %a_allocated, align 8
  %463 = load i64* %n116, align 8
  %464 = icmp ule i64 %462, %463
  br i1 %464, label %bb123, label %bb124

bb123:                                            ; preds = %bb122
  %465 = load i64* %n116, align 8
  %466 = call i64 @xsum(i64 %465, i64 1) nounwind readonly
  store i64 %466, i64* %a_allocated, align 8
  br label %bb124

bb124:                                            ; preds = %bb123, %bb122
  %467 = load i64* %a_allocated, align 8
  %468 = icmp ule i64 %467, 576460752303423487
  br i1 %468, label %bb125, label %bb126

bb125:                                            ; preds = %bb124
  %469 = load i64* %a_allocated, align 8
  %470 = mul i64 %469, 32
  store i64 %470, i64* %iftmp.10, align 8
  br label %bb127

bb126:                                            ; preds = %bb124
  store i64 -1, i64* %iftmp.10, align 8
  br label %bb127

bb127:                                            ; preds = %bb126, %bb125
  %471 = load i64* %iftmp.10, align 8
  store i64 %471, i64* %memory_size118, align 8
  %472 = load i64* %memory_size118, align 8
  %473 = icmp eq i64 %472, -1
  br i1 %473, label %out_of_memory, label %bb128

bb128:                                            ; preds = %bb127
  %474 = load %struct.arguments** %a_addr, align 8
  %475 = getelementptr inbounds %struct.arguments* %474, i32 0, i32 1
  %476 = load %struct.argument** %475, align 8
  %477 = load %struct.arguments** %a_addr, align 8
  %478 = getelementptr inbounds %struct.arguments* %477, i32 0, i32 2
  %479 = getelementptr inbounds [7 x %struct.argument]* %478, i64 0, i64 0
  %480 = icmp ne %struct.argument* %476, %479
  br i1 %480, label %bb129, label %bb130

bb129:                                            ; preds = %bb128
  %481 = load %struct.arguments** %a_addr, align 8
  %482 = getelementptr inbounds %struct.arguments* %481, i32 0, i32 1
  %483 = load %struct.argument** %482, align 8
  %484 = bitcast %struct.argument* %483 to i8*
  %485 = load i64* %memory_size118, align 8
  %486 = call i8* @realloc(i8* %484, i64 %485) nounwind
  store i8* %486, i8** %iftmp.11, align 8
  br label %bb131

bb130:                                            ; preds = %bb128
  %487 = load i64* %memory_size118, align 8
  %488 = call noalias i8* @malloc(i64 %487) nounwind
  store i8* %488, i8** %iftmp.11, align 8
  br label %bb131

bb131:                                            ; preds = %bb130, %bb129
  %489 = load i8** %iftmp.11, align 8
  %490 = bitcast i8* %489 to %struct.argument*
  store %struct.argument* %490, %struct.argument** %memory119, align 8
  %491 = load %struct.argument** %memory119, align 8
  %492 = icmp eq %struct.argument* %491, null
  br i1 %492, label %out_of_memory, label %bb132

bb132:                                            ; preds = %bb131
  %493 = load %struct.arguments** %a_addr, align 8
  %494 = getelementptr inbounds %struct.arguments* %493, i32 0, i32 1
  %495 = load %struct.argument** %494, align 8
  %496 = load %struct.arguments** %a_addr, align 8
  %497 = getelementptr inbounds %struct.arguments* %496, i32 0, i32 2
  %498 = getelementptr inbounds [7 x %struct.argument]* %497, i64 0, i64 0
  %499 = icmp eq %struct.argument* %495, %498
  br i1 %499, label %bb133, label %bb134

bb133:                                            ; preds = %bb132
  %500 = load %struct.arguments** %a_addr, align 8
  %501 = getelementptr inbounds %struct.arguments* %500, i32 0, i32 0
  %502 = load i64* %501, align 16
  %503 = mul i64 %502, 32
  %504 = load %struct.arguments** %a_addr, align 8
  %505 = getelementptr inbounds %struct.arguments* %504, i32 0, i32 1
  %506 = load %struct.argument** %505, align 8
  %507 = load %struct.argument** %memory119, align 8
  %508 = bitcast %struct.argument* %507 to i8*
  %509 = bitcast %struct.argument* %506 to i8*
  %510 = call i8* @memcpy(i8* %508, i8* %509, i64 %503)
  br label %bb134

bb134:                                            ; preds = %bb133, %bb132
  %511 = load %struct.arguments** %a_addr, align 8
  %512 = getelementptr inbounds %struct.arguments* %511, i32 0, i32 1
  %513 = load %struct.argument** %memory119, align 8
  store %struct.argument* %513, %struct.argument** %512, align 8
  br label %bb137

bb136:                                            ; preds = %bb137
  %514 = load %struct.arguments** %a_addr, align 8
  %515 = getelementptr inbounds %struct.arguments* %514, i32 0, i32 0
  %516 = load i64* %515, align 16
  %517 = getelementptr inbounds %struct.argument* %529, i64 %516
  %518 = getelementptr inbounds %struct.argument* %517, i32 0, i32 0
  store i32 0, i32* %518, align 16
  %519 = add i64 %516, 1
  %520 = load %struct.arguments** %a_addr, align 8
  %521 = getelementptr inbounds %struct.arguments* %520, i32 0, i32 0
  store i64 %519, i64* %521, align 16
  br label %bb137

bb137:                                            ; preds = %bb115, %bb134, %bb136
  %522 = load %struct.arguments** %a_addr, align 8
  %523 = getelementptr inbounds %struct.arguments* %522, i32 0, i32 0
  %524 = load i64* %523, align 16
  %525 = load i64* %n116, align 8
  %526 = icmp ule i64 %524, %525
  %527 = load %struct.arguments** %a_addr, align 8
  %528 = getelementptr inbounds %struct.arguments* %527, i32 0, i32 1
  %529 = load %struct.argument** %528, align 8
  br i1 %526, label %bb136, label %bb138

bb138:                                            ; preds = %bb137
  %530 = load i64* %n116, align 8
  %531 = getelementptr inbounds %struct.argument* %529, i64 %530
  %532 = getelementptr inbounds %struct.argument* %531, i32 0, i32 0
  %533 = load i32* %532, align 16
  %534 = icmp eq i32 %533, 0
  %535 = load %struct.arguments** %a_addr, align 8
  %536 = getelementptr inbounds %struct.arguments* %535, i32 0, i32 1
  %537 = load %struct.argument** %536, align 8
  %538 = load i64* %n116, align 8
  %539 = getelementptr inbounds %struct.argument* %537, i64 %538
  %540 = getelementptr inbounds %struct.argument* %539, i32 0, i32 0
  br i1 %534, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 5, i32* %540, align 16
  br label %bb148

bb140:                                            ; preds = %bb138
  %541 = load i32* %540, align 16
  %542 = icmp ne i32 %541, 5
  br i1 %542, label %error, label %bb148

bb143:                                            ; preds = %bb145
  %543 = load i8** %cp, align 8
  %544 = getelementptr inbounds i8* %543, i64 1
  store i8* %544, i8** %cp, align 8
  br label %bb144

bb144:                                            ; preds = %bb91, %bb143
  %545 = load i8** %cp, align 8
  %546 = load i8* %545, align 1
  %547 = icmp sle i8 %546, 47
  br i1 %547, label %bb146, label %bb145

bb145:                                            ; preds = %bb144
  %548 = load i8** %cp, align 8
  %549 = load i8* %548, align 1
  %550 = icmp sle i8 %549, 57
  br i1 %550, label %bb143, label %bb146

bb146:                                            ; preds = %bb145, %bb144
  %551 = load %struct.char_directive** %dp, align 8
  %552 = getelementptr inbounds %struct.char_directive* %551, i32 0, i32 7
  %553 = load i8** %cp, align 8
  store i8* %553, i8** %552, align 8
  %554 = load %struct.char_directive** %dp, align 8
  %555 = getelementptr inbounds %struct.char_directive* %554, i32 0, i32 7
  %556 = load i8** %555, align 8
  %557 = ptrtoint i8* %556 to i64
  %558 = load %struct.char_directive** %dp, align 8
  %559 = getelementptr inbounds %struct.char_directive* %558, i32 0, i32 6
  %560 = load i8** %559, align 8
  %561 = ptrtoint i8* %560 to i64
  %562 = sub nsw i64 %557, %561
  store i64 %562, i64* %precision_length, align 8
  %563 = load i64* %max_precision_length, align 8
  %564 = load i64* %precision_length, align 8
  %565 = icmp ult i64 %563, %564
  br i1 %565, label %bb147, label %bb148

bb147:                                            ; preds = %bb146
  %566 = load i64* %precision_length, align 8
  store i64 %566, i64* %max_precision_length, align 8
  br label %bb148

bb148:                                            ; preds = %bb139, %bb140, %bb147, %bb146, %bb90
  store i32 0, i32* %flags, align 4
  br label %bb149

bb149:                                            ; preds = %klee_overshift_check.exit, %bb152, %bb154, %bb156, %bb159, %bb161, %bb148
  %567 = load i8** %cp, align 8
  %568 = load i8* %567, align 1
  %569 = icmp eq i8 %568, 104
  br i1 %569, label %bb150, label %bb151

bb150:                                            ; preds = %bb149
  %570 = load i32* %flags, align 4
  %571 = and i32 %570, 1
  %int_cast_to_i64 = zext i32 %571 to i64
  %572 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %572, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb150
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb150
  %573 = shl i32 1, %571
  %574 = load i32* %flags, align 4
  %575 = or i32 %573, %574
  store i32 %575, i32* %flags, align 4
  %576 = load i8** %cp, align 8
  %577 = getelementptr inbounds i8* %576, i64 1
  store i8* %577, i8** %cp, align 8
  br label %bb149

bb151:                                            ; preds = %bb149
  %578 = load i8** %cp, align 8
  %579 = load i8* %578, align 1
  %580 = icmp eq i8 %579, 76
  br i1 %580, label %bb152, label %bb153

bb152:                                            ; preds = %bb151
  %581 = load i32* %flags, align 4
  %582 = or i32 %581, 4
  store i32 %582, i32* %flags, align 4
  %583 = load i8** %cp, align 8
  %584 = getelementptr inbounds i8* %583, i64 1
  store i8* %584, i8** %cp, align 8
  br label %bb149

bb153:                                            ; preds = %bb151
  %585 = load i8** %cp, align 8
  %586 = load i8* %585, align 1
  %587 = icmp eq i8 %586, 108
  br i1 %587, label %bb154, label %bb155

bb154:                                            ; preds = %bb153
  %588 = load i32* %flags, align 4
  %589 = add nsw i32 %588, 8
  store i32 %589, i32* %flags, align 4
  %590 = load i8** %cp, align 8
  %591 = getelementptr inbounds i8* %590, i64 1
  store i8* %591, i8** %cp, align 8
  br label %bb149

bb155:                                            ; preds = %bb153
  %592 = load i8** %cp, align 8
  %593 = load i8* %592, align 1
  %594 = icmp eq i8 %593, 106
  br i1 %594, label %bb156, label %bb157

bb156:                                            ; preds = %bb155
  %595 = load i32* %flags, align 4
  %596 = add nsw i32 %595, 8
  store i32 %596, i32* %flags, align 4
  %597 = load i8** %cp, align 8
  %598 = getelementptr inbounds i8* %597, i64 1
  store i8* %598, i8** %cp, align 8
  br label %bb149

bb157:                                            ; preds = %bb155
  %599 = load i8** %cp, align 8
  %600 = load i8* %599, align 1
  %601 = icmp eq i8 %600, 122
  br i1 %601, label %bb159, label %bb158

bb158:                                            ; preds = %bb157
  %602 = load i8** %cp, align 8
  %603 = load i8* %602, align 1
  %604 = icmp eq i8 %603, 90
  br i1 %604, label %bb159, label %bb160

bb159:                                            ; preds = %bb158, %bb157
  %605 = load i32* %flags, align 4
  %606 = add nsw i32 %605, 8
  store i32 %606, i32* %flags, align 4
  %607 = load i8** %cp, align 8
  %608 = getelementptr inbounds i8* %607, i64 1
  store i8* %608, i8** %cp, align 8
  br label %bb149

bb160:                                            ; preds = %bb158
  %609 = load i8** %cp, align 8
  %610 = load i8* %609, align 1
  %611 = icmp eq i8 %610, 116
  br i1 %611, label %bb161, label %bb163

bb161:                                            ; preds = %bb160
  %612 = load i32* %flags, align 4
  %613 = add nsw i32 %612, 8
  store i32 %613, i32* %flags, align 4
  %614 = load i8** %cp, align 8
  %615 = getelementptr inbounds i8* %614, i64 1
  store i8* %615, i8** %cp, align 8
  br label %bb149

bb163:                                            ; preds = %bb160
  %616 = load i8** %cp, align 8
  %617 = load i8* %616, align 1
  store i8 %617, i8* %c, align 1
  %618 = load i8** %cp, align 8
  %619 = getelementptr inbounds i8* %618, i64 1
  store i8* %619, i8** %cp, align 8
  %620 = load i8* %c, align 1
  %621 = sext i8 %620 to i32
  switch i32 %621, label %error [
    i32 37, label %bb215
    i32 65, label %bb187
    i32 67, label %bb196
    i32 69, label %bb187
    i32 70, label %bb187
    i32 71, label %bb187
    i32 83, label %bb201
    i32 88, label %bb175
    i32 97, label %bb187
    i32 99, label %bb192
    i32 100, label %bb164
    i32 101, label %bb187
    i32 102, label %bb187
    i32 103, label %bb187
    i32 105, label %bb164
    i32 110, label %bb203
    i32 111, label %bb175
    i32 112, label %bb202
    i32 115, label %bb197
    i32 117, label %bb175
    i32 120, label %bb175
  ]

bb164:                                            ; preds = %bb163, %bb163
  %622 = load i32* %flags, align 4
  %623 = icmp sgt i32 %622, 15
  br i1 %623, label %bb166, label %bb165

bb165:                                            ; preds = %bb164
  %624 = load i32* %flags, align 4
  %625 = and i32 %624, 4
  %626 = icmp ne i32 %625, 0
  br i1 %626, label %bb166, label %bb167

bb166:                                            ; preds = %bb165, %bb164
  store i32 9, i32* %type, align 4
  br label %bb217

bb167:                                            ; preds = %bb165
  %627 = load i32* %flags, align 4
  %628 = icmp sgt i32 %627, 7
  br i1 %628, label %bb168, label %bb169

bb168:                                            ; preds = %bb167
  store i32 7, i32* %type, align 4
  br label %bb217

bb169:                                            ; preds = %bb167
  %629 = load i32* %flags, align 4
  %630 = and i32 %629, 2
  %631 = icmp ne i32 %630, 0
  br i1 %631, label %bb170, label %bb171

bb170:                                            ; preds = %bb169
  store i32 1, i32* %type, align 4
  br label %bb217

bb171:                                            ; preds = %bb169
  %632 = load i32* %flags, align 4
  %633 = and i32 %632, 1
  %634 = trunc i32 %633 to i8
  %toBool = icmp ne i8 %634, 0
  br i1 %toBool, label %bb172, label %bb173

bb172:                                            ; preds = %bb171
  store i32 3, i32* %type, align 4
  br label %bb217

bb173:                                            ; preds = %bb171
  store i32 5, i32* %type, align 4
  br label %bb217

bb175:                                            ; preds = %bb163, %bb163, %bb163, %bb163
  %635 = load i32* %flags, align 4
  %636 = icmp sgt i32 %635, 15
  br i1 %636, label %bb177, label %bb176

bb176:                                            ; preds = %bb175
  %637 = load i32* %flags, align 4
  %638 = and i32 %637, 4
  %639 = icmp ne i32 %638, 0
  br i1 %639, label %bb177, label %bb178

bb177:                                            ; preds = %bb176, %bb175
  store i32 10, i32* %type, align 4
  br label %bb217

bb178:                                            ; preds = %bb176
  %640 = load i32* %flags, align 4
  %641 = icmp sgt i32 %640, 7
  br i1 %641, label %bb179, label %bb180

bb179:                                            ; preds = %bb178
  store i32 8, i32* %type, align 4
  br label %bb217

bb180:                                            ; preds = %bb178
  %642 = load i32* %flags, align 4
  %643 = and i32 %642, 2
  %644 = icmp ne i32 %643, 0
  br i1 %644, label %bb181, label %bb182

bb181:                                            ; preds = %bb180
  store i32 2, i32* %type, align 4
  br label %bb217

bb182:                                            ; preds = %bb180
  %645 = load i32* %flags, align 4
  %646 = and i32 %645, 1
  %647 = trunc i32 %646 to i8
  %toBool183 = icmp ne i8 %647, 0
  br i1 %toBool183, label %bb184, label %bb185

bb184:                                            ; preds = %bb182
  store i32 4, i32* %type, align 4
  br label %bb217

bb185:                                            ; preds = %bb182
  store i32 6, i32* %type, align 4
  br label %bb217

bb187:                                            ; preds = %bb163, %bb163, %bb163, %bb163, %bb163, %bb163, %bb163, %bb163
  %648 = load i32* %flags, align 4
  %649 = icmp sgt i32 %648, 15
  br i1 %649, label %bb189, label %bb188

bb188:                                            ; preds = %bb187
  %650 = load i32* %flags, align 4
  %651 = and i32 %650, 4
  %652 = icmp ne i32 %651, 0
  br i1 %652, label %bb189, label %bb190

bb189:                                            ; preds = %bb188, %bb187
  store i32 12, i32* %type, align 4
  br label %bb217

bb190:                                            ; preds = %bb188
  store i32 11, i32* %type, align 4
  br label %bb217

bb192:                                            ; preds = %bb163
  %653 = load i32* %flags, align 4
  %654 = icmp sgt i32 %653, 7
  br i1 %654, label %bb193, label %bb194

bb193:                                            ; preds = %bb192
  store i32 14, i32* %type, align 4
  br label %bb217

bb194:                                            ; preds = %bb192
  store i32 13, i32* %type, align 4
  br label %bb217

bb196:                                            ; preds = %bb163
  store i32 14, i32* %type, align 4
  store i8 99, i8* %c, align 1
  br label %bb217

bb197:                                            ; preds = %bb163
  %655 = load i32* %flags, align 4
  %656 = icmp sgt i32 %655, 7
  br i1 %656, label %bb198, label %bb199

bb198:                                            ; preds = %bb197
  store i32 16, i32* %type, align 4
  br label %bb217

bb199:                                            ; preds = %bb197
  store i32 15, i32* %type, align 4
  br label %bb217

bb201:                                            ; preds = %bb163
  store i32 16, i32* %type, align 4
  store i8 115, i8* %c, align 1
  br label %bb217

bb202:                                            ; preds = %bb163
  store i32 17, i32* %type, align 4
  br label %bb217

bb203:                                            ; preds = %bb163
  %657 = load i32* %flags, align 4
  %658 = icmp sgt i32 %657, 15
  br i1 %658, label %bb205, label %bb204

bb204:                                            ; preds = %bb203
  %659 = load i32* %flags, align 4
  %660 = and i32 %659, 4
  %661 = icmp ne i32 %660, 0
  br i1 %661, label %bb205, label %bb206

bb205:                                            ; preds = %bb204, %bb203
  store i32 22, i32* %type, align 4
  br label %bb217

bb206:                                            ; preds = %bb204
  %662 = load i32* %flags, align 4
  %663 = icmp sgt i32 %662, 7
  br i1 %663, label %bb207, label %bb208

bb207:                                            ; preds = %bb206
  store i32 21, i32* %type, align 4
  br label %bb217

bb208:                                            ; preds = %bb206
  %664 = load i32* %flags, align 4
  %665 = and i32 %664, 2
  %666 = icmp ne i32 %665, 0
  br i1 %666, label %bb209, label %bb210

bb209:                                            ; preds = %bb208
  store i32 18, i32* %type, align 4
  br label %bb217

bb210:                                            ; preds = %bb208
  %667 = load i32* %flags, align 4
  %668 = and i32 %667, 1
  %669 = trunc i32 %668 to i8
  %toBool211 = icmp ne i8 %669, 0
  br i1 %toBool211, label %bb212, label %bb213

bb212:                                            ; preds = %bb210
  store i32 19, i32* %type, align 4
  br label %bb217

bb213:                                            ; preds = %bb210
  store i32 20, i32* %type, align 4
  br label %bb217

bb215:                                            ; preds = %bb163
  store i32 0, i32* %type, align 4
  br label %bb217

bb217:                                            ; preds = %bb205, %bb207, %bb209, %bb212, %bb213, %bb198, %bb199, %bb193, %bb194, %bb189, %bb190, %bb177, %bb179, %bb181, %bb184, %bb185, %bb166, %bb168, %bb170, %bb172, %bb173, %bb215, %bb202, %bb201, %b
  %670 = load i32* %type, align 4
  %671 = icmp ne i32 %670, 0
  br i1 %671, label %bb218, label %bb246

bb218:                                            ; preds = %bb217
  %672 = load %struct.char_directive** %dp, align 8
  %673 = getelementptr inbounds %struct.char_directive* %672, i32 0, i32 10
  %674 = load i64* %arg_index, align 8
  store i64 %674, i64* %673, align 8
  %675 = load %struct.char_directive** %dp, align 8
  %676 = getelementptr inbounds %struct.char_directive* %675, i32 0, i32 10
  %677 = load i64* %676, align 8
  %678 = icmp eq i64 %677, -1
  br i1 %678, label %bb219, label %bb220

bb219:                                            ; preds = %bb218
  %679 = load %struct.char_directive** %dp, align 8
  %680 = getelementptr inbounds %struct.char_directive* %679, i32 0, i32 10
  %681 = load i64* %arg_posn, align 8
  store i64 %681, i64* %680, align 8
  %682 = load i64* %arg_posn, align 8
  %683 = add i64 %682, 1
  store i64 %683, i64* %arg_posn, align 8
  %684 = load %struct.char_directive** %dp, align 8
  %685 = getelementptr inbounds %struct.char_directive* %684, i32 0, i32 10
  %686 = load i64* %685, align 8
  %687 = icmp eq i64 %686, -1
  br i1 %687, label %error, label %bb220

bb220:                                            ; preds = %bb219, %bb218
  %688 = load %struct.char_directive** %dp, align 8
  %689 = getelementptr inbounds %struct.char_directive* %688, i32 0, i32 10
  %690 = load i64* %689, align 8
  store i64 %690, i64* %n221, align 8
  %691 = load i64* %n221, align 8
  %692 = load i64* %a_allocated, align 8
  %693 = icmp uge i64 %691, %692
  br i1 %693, label %bb222, label %bb242

bb222:                                            ; preds = %bb220
  %694 = load i64* %a_allocated, align 8
  %695 = icmp sge i64 %694, 0
  br i1 %695, label %bb225, label %bb226

bb225:                                            ; preds = %bb222
  %696 = load i64* %a_allocated, align 8
  %697 = mul i64 %696, 2
  store i64 %697, i64* %iftmp.12, align 8
  br label %bb227

bb226:                                            ; preds = %bb222
  store i64 -1, i64* %iftmp.12, align 8
  br label %bb227

bb227:                                            ; preds = %bb226, %bb225
  %698 = load i64* %iftmp.12, align 8
  store i64 %698, i64* %a_allocated, align 8
  %699 = load i64* %a_allocated, align 8
  %700 = load i64* %n221, align 8
  %701 = icmp ule i64 %699, %700
  br i1 %701, label %bb228, label %bb229

bb228:                                            ; preds = %bb227
  %702 = load i64* %n221, align 8
  %703 = call i64 @xsum(i64 %702, i64 1) nounwind readonly
  store i64 %703, i64* %a_allocated, align 8
  br label %bb229

bb229:                                            ; preds = %bb228, %bb227
  %704 = load i64* %a_allocated, align 8
  %705 = icmp ule i64 %704, 576460752303423487
  br i1 %705, label %bb230, label %bb231

bb230:                                            ; preds = %bb229
  %706 = load i64* %a_allocated, align 8
  %707 = mul i64 %706, 32
  store i64 %707, i64* %iftmp.14, align 8
  br label %bb232

bb231:                                            ; preds = %bb229
  store i64 -1, i64* %iftmp.14, align 8
  br label %bb232

bb232:                                            ; preds = %bb231, %bb230
  %708 = load i64* %iftmp.14, align 8
  store i64 %708, i64* %memory_size223, align 8
  %709 = load i64* %memory_size223, align 8
  %710 = icmp eq i64 %709, -1
  br i1 %710, label %out_of_memory, label %bb233

bb233:                                            ; preds = %bb232
  %711 = load %struct.arguments** %a_addr, align 8
  %712 = getelementptr inbounds %struct.arguments* %711, i32 0, i32 1
  %713 = load %struct.argument** %712, align 8
  %714 = load %struct.arguments** %a_addr, align 8
  %715 = getelementptr inbounds %struct.arguments* %714, i32 0, i32 2
  %716 = getelementptr inbounds [7 x %struct.argument]* %715, i64 0, i64 0
  %717 = icmp ne %struct.argument* %713, %716
  br i1 %717, label %bb234, label %bb235

bb234:                                            ; preds = %bb233
  %718 = load %struct.arguments** %a_addr, align 8
  %719 = getelementptr inbounds %struct.arguments* %718, i32 0, i32 1
  %720 = load %struct.argument** %719, align 8
  %721 = bitcast %struct.argument* %720 to i8*
  %722 = load i64* %memory_size223, align 8
  %723 = call i8* @realloc(i8* %721, i64 %722) nounwind
  store i8* %723, i8** %iftmp.15, align 8
  br label %bb236

bb235:                                            ; preds = %bb233
  %724 = load i64* %memory_size223, align 8
  %725 = call noalias i8* @malloc(i64 %724) nounwind
  store i8* %725, i8** %iftmp.15, align 8
  br label %bb236

bb236:                                            ; preds = %bb235, %bb234
  %726 = load i8** %iftmp.15, align 8
  %727 = bitcast i8* %726 to %struct.argument*
  store %struct.argument* %727, %struct.argument** %memory224, align 8
  %728 = load %struct.argument** %memory224, align 8
  %729 = icmp eq %struct.argument* %728, null
  br i1 %729, label %out_of_memory, label %bb237

bb237:                                            ; preds = %bb236
  %730 = load %struct.arguments** %a_addr, align 8
  %731 = getelementptr inbounds %struct.arguments* %730, i32 0, i32 1
  %732 = load %struct.argument** %731, align 8
  %733 = load %struct.arguments** %a_addr, align 8
  %734 = getelementptr inbounds %struct.arguments* %733, i32 0, i32 2
  %735 = getelementptr inbounds [7 x %struct.argument]* %734, i64 0, i64 0
  %736 = icmp eq %struct.argument* %732, %735
  br i1 %736, label %bb238, label %bb239

bb238:                                            ; preds = %bb237
  %737 = load %struct.arguments** %a_addr, align 8
  %738 = getelementptr inbounds %struct.arguments* %737, i32 0, i32 0
  %739 = load i64* %738, align 16
  %740 = mul i64 %739, 32
  %741 = load %struct.arguments** %a_addr, align 8
  %742 = getelementptr inbounds %struct.arguments* %741, i32 0, i32 1
  %743 = load %struct.argument** %742, align 8
  %744 = load %struct.argument** %memory224, align 8
  %745 = bitcast %struct.argument* %744 to i8*
  %746 = bitcast %struct.argument* %743 to i8*
  %747 = call i8* @memcpy(i8* %745, i8* %746, i64 %740)
  br label %bb239

bb239:                                            ; preds = %bb238, %bb237
  %748 = load %struct.arguments** %a_addr, align 8
  %749 = getelementptr inbounds %struct.arguments* %748, i32 0, i32 1
  %750 = load %struct.argument** %memory224, align 8
  store %struct.argument* %750, %struct.argument** %749, align 8
  br label %bb242

bb241:                                            ; preds = %bb242
  %751 = load %struct.arguments** %a_addr, align 8
  %752 = getelementptr inbounds %struct.arguments* %751, i32 0, i32 0
  %753 = load i64* %752, align 16
  %754 = getelementptr inbounds %struct.argument* %766, i64 %753
  %755 = getelementptr inbounds %struct.argument* %754, i32 0, i32 0
  store i32 0, i32* %755, align 16
  %756 = add i64 %753, 1
  %757 = load %struct.arguments** %a_addr, align 8
  %758 = getelementptr inbounds %struct.arguments* %757, i32 0, i32 0
  store i64 %756, i64* %758, align 16
  br label %bb242

bb242:                                            ; preds = %bb220, %bb239, %bb241
  %759 = load %struct.arguments** %a_addr, align 8
  %760 = getelementptr inbounds %struct.arguments* %759, i32 0, i32 0
  %761 = load i64* %760, align 16
  %762 = load i64* %n221, align 8
  %763 = icmp ule i64 %761, %762
  %764 = load %struct.arguments** %a_addr, align 8
  %765 = getelementptr inbounds %struct.arguments* %764, i32 0, i32 1
  %766 = load %struct.argument** %765, align 8
  br i1 %763, label %bb241, label %bb243

bb243:                                            ; preds = %bb242
  %767 = load i64* %n221, align 8
  %768 = getelementptr inbounds %struct.argument* %766, i64 %767
  %769 = getelementptr inbounds %struct.argument* %768, i32 0, i32 0
  %770 = load i32* %769, align 16
  %771 = icmp eq i32 %770, 0
  %772 = load %struct.arguments** %a_addr, align 8
  %773 = getelementptr inbounds %struct.arguments* %772, i32 0, i32 1
  %774 = load %struct.argument** %773, align 8
  %775 = load i64* %n221, align 8
  %776 = getelementptr inbounds %struct.argument* %774, i64 %775
  %777 = getelementptr inbounds %struct.argument* %776, i32 0, i32 0
  br i1 %771, label %bb244, label %bb245

bb244:                                            ; preds = %bb243
  %778 = load i32* %type, align 4
  store i32 %778, i32* %777, align 16
  br label %bb246

bb245:                                            ; preds = %bb243
  %779 = load i32* %777, align 16
  %780 = load i32* %type, align 4
  %781 = icmp ne i32 %779, %780
  br i1 %781, label %error, label %bb246

bb246:                                            ; preds = %bb245, %bb244, %bb217
  %782 = load %struct.char_directive** %dp, align 8
  %783 = getelementptr inbounds %struct.char_directive* %782, i32 0, i32 9
  %784 = load i8* %c, align 1
  store i8 %784, i8* %783, align 8
  %785 = load %struct.char_directive** %dp, align 8
  %786 = getelementptr inbounds %struct.char_directive* %785, i32 0, i32 1
  %787 = load i8** %cp, align 8
  store i8* %787, i8** %786, align 8
  %788 = load %struct.char_directives** %d_addr, align 8
  %789 = getelementptr inbounds %struct.char_directives* %788, i32 0, i32 0
  %790 = load i64* %789, align 8
  %791 = add i64 %790, 1
  %792 = load %struct.char_directives** %d_addr, align 8
  %793 = getelementptr inbounds %struct.char_directives* %792, i32 0, i32 0
  store i64 %791, i64* %793, align 8
  %794 = load %struct.char_directives** %d_addr, align 8
  %795 = getelementptr inbounds %struct.char_directives* %794, i32 0, i32 0
  %796 = load i64* %795, align 8
  %797 = load i64* %d_allocated, align 8
  %798 = icmp uge i64 %796, %797
  br i1 %798, label %bb247, label %bb263

bb247:                                            ; preds = %bb246
  %799 = load i64* %d_allocated, align 8
  %800 = icmp sge i64 %799, 0
  br i1 %800, label %bb250, label %bb251

bb250:                                            ; preds = %bb247
  %801 = load i64* %d_allocated, align 8
  %802 = mul i64 %801, 2
  store i64 %802, i64* %iftmp.16, align 8
  br label %bb252

bb251:                                            ; preds = %bb247
  store i64 -1, i64* %iftmp.16, align 8
  br label %bb252

bb252:                                            ; preds = %bb251, %bb250
  %803 = load i64* %iftmp.16, align 8
  store i64 %803, i64* %d_allocated, align 8
  %804 = load i64* %d_allocated, align 8
  %805 = icmp ule i64 %804, 209622091746699450
  br i1 %805, label %bb253, label %bb254

bb253:                                            ; preds = %bb252
  %806 = load i64* %d_allocated, align 8
  %807 = mul i64 %806, 88
  store i64 %807, i64* %iftmp.18, align 8
  br label %bb255

bb254:                                            ; preds = %bb252
  store i64 -1, i64* %iftmp.18, align 8
  br label %bb255

bb255:                                            ; preds = %bb254, %bb253
  %808 = load i64* %iftmp.18, align 8
  store i64 %808, i64* %memory_size248, align 8
  %809 = load i64* %memory_size248, align 8
  %810 = icmp eq i64 %809, -1
  br i1 %810, label %out_of_memory, label %bb256

bb256:                                            ; preds = %bb255
  %811 = load %struct.char_directives** %d_addr, align 8
  %812 = getelementptr inbounds %struct.char_directives* %811, i32 0, i32 1
  %813 = load %struct.char_directive** %812, align 8
  %814 = load %struct.char_directives** %d_addr, align 8
  %815 = getelementptr inbounds %struct.char_directives* %814, i32 0, i32 4
  %816 = getelementptr inbounds [7 x %struct.char_directive]* %815, i64 0, i64 0
  %817 = icmp ne %struct.char_directive* %813, %816
  br i1 %817, label %bb257, label %bb258

bb257:                                            ; preds = %bb256
  %818 = load %struct.char_directives** %d_addr, align 8
  %819 = getelementptr inbounds %struct.char_directives* %818, i32 0, i32 1
  %820 = load %struct.char_directive** %819, align 8
  %821 = bitcast %struct.char_directive* %820 to i8*
  %822 = load i64* %memory_size248, align 8
  %823 = call i8* @realloc(i8* %821, i64 %822) nounwind
  store i8* %823, i8** %iftmp.19, align 8
  br label %bb259

bb258:                                            ; preds = %bb256
  %824 = load i64* %memory_size248, align 8
  %825 = call noalias i8* @malloc(i64 %824) nounwind
  store i8* %825, i8** %iftmp.19, align 8
  br label %bb259

bb259:                                            ; preds = %bb258, %bb257
  %826 = load i8** %iftmp.19, align 8
  %827 = bitcast i8* %826 to %struct.char_directive*
  store %struct.char_directive* %827, %struct.char_directive** %memory249, align 8
  %828 = load %struct.char_directive** %memory249, align 8
  %829 = icmp eq %struct.char_directive* %828, null
  br i1 %829, label %out_of_memory, label %bb260

bb260:                                            ; preds = %bb259
  %830 = load %struct.char_directives** %d_addr, align 8
  %831 = getelementptr inbounds %struct.char_directives* %830, i32 0, i32 1
  %832 = load %struct.char_directive** %831, align 8
  %833 = load %struct.char_directives** %d_addr, align 8
  %834 = getelementptr inbounds %struct.char_directives* %833, i32 0, i32 4
  %835 = getelementptr inbounds [7 x %struct.char_directive]* %834, i64 0, i64 0
  %836 = icmp eq %struct.char_directive* %832, %835
  br i1 %836, label %bb261, label %bb262

bb261:                                            ; preds = %bb260
  %837 = load %struct.char_directives** %d_addr, align 8
  %838 = getelementptr inbounds %struct.char_directives* %837, i32 0, i32 0
  %839 = load i64* %838, align 8
  %840 = mul i64 %839, 88
  %841 = load %struct.char_directives** %d_addr, align 8
  %842 = getelementptr inbounds %struct.char_directives* %841, i32 0, i32 1
  %843 = load %struct.char_directive** %842, align 8
  %844 = load %struct.char_directive** %memory249, align 8
  %845 = bitcast %struct.char_directive* %844 to i8*
  %846 = bitcast %struct.char_directive* %843 to i8*
  %847 = call i8* @memcpy(i8* %845, i8* %846, i64 %840)
  br label %bb262

bb262:                                            ; preds = %bb261, %bb260
  %848 = load %struct.char_directives** %d_addr, align 8
  %849 = getelementptr inbounds %struct.char_directives* %848, i32 0, i32 1
  %850 = load %struct.char_directive** %memory249, align 8
  store %struct.char_directive* %850, %struct.char_directive** %849, align 8
  br label %bb263

bb263:                                            ; preds = %bb262, %bb246, %bb, %entry
  %851 = load i8** %cp, align 8
  %852 = load i8* %851, align 1
  %853 = icmp ne i8 %852, 0
  br i1 %853, label %bb, label %bb264

bb264:                                            ; preds = %bb263
  %854 = load %struct.char_directives** %d_addr, align 8
  %855 = getelementptr inbounds %struct.char_directives* %854, i32 0, i32 1
  %856 = load %struct.char_directive** %855, align 8
  %857 = load %struct.char_directives** %d_addr, align 8
  %858 = getelementptr inbounds %struct.char_directives* %857, i32 0, i32 0
  %859 = load i64* %858, align 8
  %860 = getelementptr inbounds %struct.char_directive* %856, i64 %859
  %861 = getelementptr inbounds %struct.char_directive* %860, i32 0, i32 0
  %862 = load i8** %cp, align 8
  store i8* %862, i8** %861, align 8
  %863 = load %struct.char_directives** %d_addr, align 8
  %864 = getelementptr inbounds %struct.char_directives* %863, i32 0, i32 2
  %865 = load i64* %max_width_length, align 8
  store i64 %865, i64* %864, align 8
  %866 = load %struct.char_directives** %d_addr, align 8
  %867 = getelementptr inbounds %struct.char_directives* %866, i32 0, i32 3
  %868 = load i64* %max_precision_length, align 8
  store i64 %868, i64* %867, align 8
  store i32 0, i32* %0, align 4
  br label %bb273

error:                                            ; preds = %bb163, %bb245, %bb219, %bb140, %bb114, %bb110, %bb80, %bb56, %bb52, %bb15
  %869 = load %struct.arguments** %a_addr, align 8
  %870 = getelementptr inbounds %struct.arguments* %869, i32 0, i32 1
  %871 = load %struct.argument** %870, align 8
  %872 = load %struct.arguments** %a_addr, align 8
  %873 = getelementptr inbounds %struct.arguments* %872, i32 0, i32 2
  %874 = getelementptr inbounds [7 x %struct.argument]* %873, i64 0, i64 0
  %875 = icmp ne %struct.argument* %871, %874
  br i1 %875, label %bb265, label %bb266

bb265:                                            ; preds = %error
  %876 = load %struct.arguments** %a_addr, align 8
  %877 = getelementptr inbounds %struct.arguments* %876, i32 0, i32 1
  %878 = load %struct.argument** %877, align 8
  %879 = bitcast %struct.argument* %878 to i8*
  call void @free(i8* %879) nounwind
  br label %bb266

bb266:                                            ; preds = %bb265, %error
  %880 = load %struct.char_directives** %d_addr, align 8
  %881 = getelementptr inbounds %struct.char_directives* %880, i32 0, i32 1
  %882 = load %struct.char_directive** %881, align 8
  %883 = load %struct.char_directives** %d_addr, align 8
  %884 = getelementptr inbounds %struct.char_directives* %883, i32 0, i32 4
  %885 = getelementptr inbounds [7 x %struct.char_directive]* %884, i64 0, i64 0
  %886 = icmp ne %struct.char_directive* %882, %885
  br i1 %886, label %bb267, label %bb268

bb267:                                            ; preds = %bb266
  %887 = load %struct.char_directives** %d_addr, align 8
  %888 = getelementptr inbounds %struct.char_directives* %887, i32 0, i32 1
  %889 = load %struct.char_directive** %888, align 8
  %890 = bitcast %struct.char_directive* %889 to i8*
  call void @free(i8* %890) nounwind
  br label %bb268

bb268:                                            ; preds = %bb267, %bb266
  %891 = call i32* @__errno_location() nounwind readnone
  store i32 22, i32* %891, align 4
  store i32 -1, i32* %0, align 4
  br label %bb273

out_of_memory:                                    ; preds = %bb259, %bb255, %bb236, %bb232, %bb131, %bb127, %bb71, %bb67
  %892 = load %struct.arguments** %a_addr, align 8
  %893 = getelementptr inbounds %struct.arguments* %892, i32 0, i32 1
  %894 = load %struct.argument** %893, align 8
  %895 = load %struct.arguments** %a_addr, align 8
  %896 = getelementptr inbounds %struct.arguments* %895, i32 0, i32 2
  %897 = getelementptr inbounds [7 x %struct.argument]* %896, i64 0, i64 0
  %898 = icmp ne %struct.argument* %894, %897
  br i1 %898, label %bb269, label %bb270

bb269:                                            ; preds = %out_of_memory
  %899 = load %struct.arguments** %a_addr, align 8
  %900 = getelementptr inbounds %struct.arguments* %899, i32 0, i32 1
  %901 = load %struct.argument** %900, align 8
  %902 = bitcast %struct.argument* %901 to i8*
  call void @free(i8* %902) nounwind
  br label %bb270

bb270:                                            ; preds = %bb269, %out_of_memory
  %903 = load %struct.char_directives** %d_addr, align 8
  %904 = getelementptr inbounds %struct.char_directives* %903, i32 0, i32 1
  %905 = load %struct.char_directive** %904, align 8
  %906 = load %struct.char_directives** %d_addr, align 8
  %907 = getelementptr inbounds %struct.char_directives* %906, i32 0, i32 4
  %908 = getelementptr inbounds [7 x %struct.char_directive]* %907, i64 0, i64 0
  %909 = icmp ne %struct.char_directive* %905, %908
  br i1 %909, label %bb271, label %bb272

bb271:                                            ; preds = %bb270
  %910 = load %struct.char_directives** %d_addr, align 8
  %911 = getelementptr inbounds %struct.char_directives* %910, i32 0, i32 1
  %912 = load %struct.char_directive** %911, align 8
  %913 = bitcast %struct.char_directive* %912 to i8*
  call void @free(i8* %913) nounwind
  br label %bb272

bb272:                                            ; preds = %bb271, %bb270
  %914 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %914, align 4
  store i32 -1, i32* %0, align 4
  br label %bb273

bb273:                                            ; preds = %bb272, %bb268, %bb264
  %915 = load i32* %0, align 4
  store i32 %915, i32* %retval, align 4
  %retval274 = load i32* %retval
  ret i32 %retval274
}

define weak i32* @__errno_location() nounwind readnone {
entry:
  %retval = alloca i32*
  %0 = alloca i32*
  %"alloca point" = bitcast i32 0 to i32
  store i32* @errno, i32** %0, align 8, !dbg !5621
  %1 = load i32** %0, align 8, !dbg !5621
  store i32* %1, i32** %retval, align 8, !dbg !5621
  %retval1 = load i32** %retval, !dbg !5621
  ret i32* %retval1, !dbg !5621
}

define i32 @__fgetc_unlocked(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %uc = alloca i8
  %uc16 = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5623
  %2 = getelementptr inbounds %4* %1, i32 0, i32 5, !dbg !5623
  %3 = load i8** %2, align 8, !dbg !5623
  %4 = load %4** %stream_addr, align 8, !dbg !5623
  %5 = getelementptr inbounds %4* %4, i32 0, i32 7, !dbg !5623
  %6 = load i8** %5, align 8, !dbg !5623
  %7 = icmp ult i8* %3, %6, !dbg !5623
  %8 = load %4** %stream_addr, align 8, !dbg !5625
  br i1 %7, label %bb, label %bb1, !dbg !5623

bb:                                               ; preds = %entry
  %9 = getelementptr inbounds %4* %8, i32 0, i32 5, !dbg !5625
  %10 = load i8** %9, align 8, !dbg !5625
  %11 = load i8* %10, align 1, !dbg !5625
  %12 = zext i8 %11 to i32, !dbg !5625
  store i32 %12, i32* %0, align 4, !dbg !5625
  %13 = getelementptr inbounds i8* %10, i64 1, !dbg !5625
  %14 = load %4** %stream_addr, align 8, !dbg !5625
  %15 = getelementptr inbounds %4* %14, i32 0, i32 5, !dbg !5625
  store i8* %13, i8** %15, align 8, !dbg !5625
  br label %bb19, !dbg !5625

bb1:                                              ; preds = %entry
  %16 = getelementptr inbounds %4* %8, i32 0, i32 0, !dbg !5626
  %17 = load i16* %16, align 8, !dbg !5626
  %18 = zext i16 %17 to i32, !dbg !5626
  %19 = and i32 %18, 131, !dbg !5626
  %20 = icmp ugt i32 %19, 128, !dbg !5626
  br i1 %20, label %bb3, label %bb2, !dbg !5626

bb2:                                              ; preds = %bb1
  %21 = load %4** %stream_addr, align 8, !dbg !5626
  %22 = call i32 @__stdio_trans2r_o(%4* noalias %21, i32 128) nounwind, !dbg !5626
  %23 = icmp eq i32 %22, 0, !dbg !5626
  br i1 %23, label %bb3, label %bb18, !dbg !5626

bb3:                                              ; preds = %bb2, %bb1
  %24 = load %4** %stream_addr, align 8, !dbg !5627
  %25 = getelementptr inbounds %4* %24, i32 0, i32 0, !dbg !5627
  %26 = load i16* %25, align 8, !dbg !5627
  %27 = zext i16 %26 to i32, !dbg !5627
  %28 = and i32 %27, 2, !dbg !5627
  %29 = icmp ne i32 %28, 0, !dbg !5627
  %30 = load %4** %stream_addr, align 8, !dbg !5628
  br i1 %29, label %bb4, label %bb5, !dbg !5627

bb4:                                              ; preds = %bb3
  %31 = getelementptr inbounds %4* %30, i32 0, i32 0, !dbg !5628
  %32 = load i16* %31, align 8, !dbg !5628
  %33 = zext i16 %32 to i32, !dbg !5628
  %34 = and i32 %33, 1, !dbg !5628
  %35 = load %4** %stream_addr, align 8, !dbg !5628
  %36 = getelementptr inbounds %4* %35, i32 0, i32 10, !dbg !5628
  %37 = sext i32 %34 to i64, !dbg !5628
  %38 = getelementptr inbounds [2 x i32]* %36, i64 0, i64 %37, !dbg !5628
  %39 = load i32* %38, align 4, !dbg !5628
  %40 = trunc i32 %39 to i8, !dbg !5628
  store i8 %40, i8* %uc, align 1, !dbg !5628
  %41 = sub i16 %32, 1, !dbg !5628
  %42 = load %4** %stream_addr, align 8, !dbg !5628
  %43 = getelementptr inbounds %4* %42, i32 0, i32 0, !dbg !5628
  store i16 %41, i16* %43, align 8, !dbg !5628
  %44 = load %4** %stream_addr, align 8, !dbg !5630
  %45 = getelementptr inbounds %4* %44, i32 0, i32 10, !dbg !5630
  %46 = getelementptr inbounds [2 x i32]* %45, i64 0, i64 1, !dbg !5630
  store i32 0, i32* %46, align 4, !dbg !5630
  %47 = load i8* %uc, align 1, !dbg !5631
  %48 = zext i8 %47 to i32, !dbg !5631
  store i32 %48, i32* %0, align 4, !dbg !5631
  br label %bb19, !dbg !5631

bb5:                                              ; preds = %bb3
  %49 = getelementptr inbounds %4* %30, i32 0, i32 6, !dbg !5632
  %50 = load i8** %49, align 8, !dbg !5632
  %51 = load %4** %stream_addr, align 8, !dbg !5632
  %52 = getelementptr inbounds %4* %51, i32 0, i32 5, !dbg !5632
  %53 = load i8** %52, align 8, !dbg !5632
  %54 = icmp ne i8* %50, %53, !dbg !5632
  %55 = load %4** %stream_addr, align 8, !dbg !5633
  br i1 %54, label %bb6, label %bb7, !dbg !5632

bb6:                                              ; preds = %bb5
  %56 = getelementptr inbounds %4* %55, i32 0, i32 5, !dbg !5633
  %57 = load i8** %56, align 8, !dbg !5633
  %58 = load i8* %57, align 1, !dbg !5633
  %59 = zext i8 %58 to i32, !dbg !5633
  store i32 %59, i32* %0, align 4, !dbg !5633
  %60 = getelementptr inbounds i8* %57, i64 1, !dbg !5633
  %61 = load %4** %stream_addr, align 8, !dbg !5633
  %62 = getelementptr inbounds %4* %61, i32 0, i32 5, !dbg !5633
  store i8* %60, i8** %62, align 8, !dbg !5633
  br label %bb19, !dbg !5633

bb7:                                              ; preds = %bb5
  %63 = getelementptr inbounds %4* %55, i32 0, i32 2, !dbg !5634
  %64 = load i32* %63, align 4, !dbg !5634
  %65 = icmp eq i32 %64, -2, !dbg !5634
  %66 = load %4** %stream_addr, align 8, !dbg !5635
  %67 = getelementptr inbounds %4* %66, i32 0, i32 0, !dbg !5635
  %68 = load i16* %67, align 8, !dbg !5635
  br i1 %65, label %bb8, label %bb9, !dbg !5634

bb8:                                              ; preds = %bb7
  %69 = or i16 %68, 4, !dbg !5635
  %70 = load %4** %stream_addr, align 8, !dbg !5635
  %71 = getelementptr inbounds %4* %70, i32 0, i32 0, !dbg !5635
  store i16 %69, i16* %71, align 8, !dbg !5635
  store i32 -1, i32* %0, align 4, !dbg !5636
  br label %bb19, !dbg !5636

bb9:                                              ; preds = %bb7
  %72 = zext i16 %68 to i32, !dbg !5637
  %73 = and i32 %72, 768, !dbg !5637
  %74 = icmp ne i32 %73, 0, !dbg !5637
  br i1 %74, label %bb10, label %bb11, !dbg !5637

bb10:                                             ; preds = %bb9
  %75 = call i32 @fflush_unlocked(%4* bitcast (%4** @_stdio_openlist to %4*)) nounwind, !dbg !5638
  br label %bb11, !dbg !5638

bb11:                                             ; preds = %bb10, %bb9
  %76 = load %4** %stream_addr, align 8, !dbg !5639
  %77 = getelementptr inbounds %4* %76, i32 0, i32 4, !dbg !5639
  %78 = load i8** %77, align 8, !dbg !5639
  %79 = load %4** %stream_addr, align 8, !dbg !5639
  %80 = getelementptr inbounds %4* %79, i32 0, i32 3, !dbg !5639
  %81 = load i8** %80, align 8, !dbg !5639
  %82 = icmp ne i8* %78, %81, !dbg !5639
  %83 = load %4** %stream_addr, align 8, !dbg !5640
  br i1 %82, label %bb12, label %bb15, !dbg !5639

bb12:                                             ; preds = %bb11
  %84 = getelementptr inbounds %4* %83, i32 0, i32 3, !dbg !5640
  %85 = load i8** %84, align 8, !dbg !5640
  %86 = load %4** %stream_addr, align 8, !dbg !5640
  %87 = getelementptr inbounds %4* %86, i32 0, i32 7, !dbg !5640
  store i8* %85, i8** %87, align 8, !dbg !5640
  %88 = load %4** %stream_addr, align 8, !dbg !5641
  %89 = call i64 @__stdio_rfill(%4* noalias %88) nounwind, !dbg !5641
  %90 = icmp ne i64 %89, 0, !dbg !5641
  br i1 %90, label %bb13, label %bb18, !dbg !5641

bb13:                                             ; preds = %bb12
  %91 = load %4** %stream_addr, align 8, !dbg !5642
  %92 = getelementptr inbounds %4* %91, i32 0, i32 6, !dbg !5642
  %93 = load i8** %92, align 8, !dbg !5642
  %94 = load %4** %stream_addr, align 8, !dbg !5642
  %95 = getelementptr inbounds %4* %94, i32 0, i32 7, !dbg !5642
  store i8* %93, i8** %95, align 8, !dbg !5642
  %96 = load %4** %stream_addr, align 8, !dbg !5643
  %97 = getelementptr inbounds %4* %96, i32 0, i32 5, !dbg !5643
  %98 = load i8** %97, align 8, !dbg !5643
  %99 = load i8* %98, align 1, !dbg !5643
  %100 = zext i8 %99 to i32, !dbg !5643
  store i32 %100, i32* %0, align 4, !dbg !5643
  %101 = getelementptr inbounds i8* %98, i64 1, !dbg !5643
  %102 = load %4** %stream_addr, align 8, !dbg !5643
  %103 = getelementptr inbounds %4* %102, i32 0, i32 5, !dbg !5643
  store i8* %101, i8** %103, align 8, !dbg !5643
  br label %bb19, !dbg !5643

bb15:                                             ; preds = %bb11
  %104 = call i64 @__stdio_READ(%4* %83, i8* %uc16, i64 1) nounwind, !dbg !5644
  %105 = icmp ne i64 %104, 0, !dbg !5644
  br i1 %105, label %bb17, label %bb18, !dbg !5644

bb17:                                             ; preds = %bb15
  %106 = load i8* %uc16, align 1, !dbg !5646
  %107 = zext i8 %106 to i32, !dbg !5646
  store i32 %107, i32* %0, align 4, !dbg !5646
  br label %bb19, !dbg !5646

bb18:                                             ; preds = %bb12, %bb15, %bb2
  store i32 -1, i32* %0, align 4, !dbg !5647
  br label %bb19, !dbg !5647

bb19:                                             ; preds = %bb18, %bb17, %bb13, %bb8, %bb6, %bb4, %bb
  %108 = load i32* %0, align 4, !dbg !5625
  store i32 %108, i32* %retval, align 4, !dbg !5625
  %retval20 = load i32* %retval, !dbg !5625
  ret i32 %retval20, !dbg !5625
}

declare void @llvm.dbg.declare(metadata, metadata) nounwind readnone

define i64 @__fpending(%4* noalias %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5648
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !5648
  %3 = load i16* %2, align 8, !dbg !5648
  %4 = zext i16 %3 to i32, !dbg !5648
  %5 = and i32 %4, 64, !dbg !5648
  %6 = icmp ne i32 %5, 0, !dbg !5648
  br i1 %6, label %bb, label %bb1, !dbg !5648

bb:                                               ; preds = %entry
  %7 = load %4** %stream_addr, align 8, !dbg !5648
  %8 = getelementptr inbounds %4* %7, i32 0, i32 5, !dbg !5648
  %9 = load i8** %8, align 8, !dbg !5648
  %10 = ptrtoint i8* %9 to i64, !dbg !5648
  %11 = load %4** %stream_addr, align 8, !dbg !5648
  %12 = getelementptr inbounds %4* %11, i32 0, i32 3, !dbg !5648
  %13 = load i8** %12, align 8, !dbg !5648
  %14 = ptrtoint i8* %13 to i64, !dbg !5648
  %15 = sub nsw i64 %10, %14, !dbg !5648
  store i64 %15, i64* %iftmp.0, align 8, !dbg !5648
  br label %bb2, !dbg !5648

bb1:                                              ; preds = %entry
  store i64 0, i64* %iftmp.0, align 8, !dbg !5648
  br label %bb2, !dbg !5648

bb2:                                              ; preds = %bb1, %bb
  %16 = load i64* %iftmp.0, align 8, !dbg !5648
  store i64 %16, i64* %0, align 8, !dbg !5648
  %17 = load i64* %0, align 8, !dbg !5648
  store i64 %17, i64* %retval, align 8, !dbg !5648
  %retval3 = load i64* %retval, !dbg !5648
  ret i64 %retval3, !dbg !5648
}

define i32 @__fputc_unlocked(i32 %c, %4* %stream) nounwind {
entry:
  %c_addr = alloca i32, align 4
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %uc = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5650
  %2 = getelementptr inbounds %4* %1, i32 0, i32 5, !dbg !5650
  %3 = load i8** %2, align 8, !dbg !5650
  %4 = load %4** %stream_addr, align 8, !dbg !5650
  %5 = getelementptr inbounds %4* %4, i32 0, i32 8, !dbg !5650
  %6 = load i8** %5, align 8, !dbg !5650
  %7 = icmp ult i8* %3, %6, !dbg !5650
  %8 = load %4** %stream_addr, align 8, !dbg !5652
  br i1 %7, label %bb, label %bb1, !dbg !5650

bb:                                               ; preds = %entry
  %9 = getelementptr inbounds %4* %8, i32 0, i32 5, !dbg !5652
  %10 = load i8** %9, align 8, !dbg !5652
  %11 = load i32* %c_addr, align 4, !dbg !5652
  %12 = trunc i32 %11 to i8, !dbg !5652
  store i8 %12, i8* %10, align 1, !dbg !5652
  %13 = getelementptr inbounds i8* %10, i64 1, !dbg !5652
  %14 = load %4** %stream_addr, align 8, !dbg !5652
  %15 = getelementptr inbounds %4* %14, i32 0, i32 5, !dbg !5652
  store i8* %13, i8** %15, align 8, !dbg !5652
  %16 = load i32* %c_addr, align 4, !dbg !5653
  %17 = trunc i32 %16 to i8, !dbg !5653
  %18 = zext i8 %17 to i32, !dbg !5653
  store i32 %18, i32* %0, align 4, !dbg !5653
  br label %bb15, !dbg !5653

bb1:                                              ; preds = %entry
  %19 = getelementptr inbounds %4* %8, i32 0, i32 0, !dbg !5654
  %20 = load i16* %19, align 8, !dbg !5654
  %21 = zext i16 %20 to i32, !dbg !5654
  %22 = and i32 %21, 192, !dbg !5654
  %23 = icmp eq i32 %22, 192, !dbg !5654
  br i1 %23, label %bb3, label %bb2, !dbg !5654

bb2:                                              ; preds = %bb1
  %24 = load %4** %stream_addr, align 8, !dbg !5654
  %25 = call i32 @__stdio_trans2w_o(%4* noalias %24, i32 128) nounwind, !dbg !5654
  %26 = icmp eq i32 %25, 0, !dbg !5654
  br i1 %26, label %bb3, label %BAD, !dbg !5654

bb3:                                              ; preds = %bb2, %bb1
  %27 = load %4** %stream_addr, align 8, !dbg !5655
  %28 = getelementptr inbounds %4* %27, i32 0, i32 2, !dbg !5655
  %29 = load i32* %28, align 4, !dbg !5655
  %30 = icmp eq i32 %29, -2, !dbg !5655
  br i1 %30, label %bb4, label %bb5, !dbg !5655

bb4:                                              ; preds = %bb3
  %31 = load i32* %c_addr, align 4, !dbg !5656
  %32 = trunc i32 %31 to i8, !dbg !5656
  %33 = zext i8 %32 to i32, !dbg !5656
  store i32 %33, i32* %0, align 4, !dbg !5656
  br label %bb15, !dbg !5656

bb5:                                              ; preds = %bb3
  %34 = load %4** %stream_addr, align 8, !dbg !5657
  %35 = getelementptr inbounds %4* %34, i32 0, i32 4, !dbg !5657
  %36 = load i8** %35, align 8, !dbg !5657
  %37 = load %4** %stream_addr, align 8, !dbg !5657
  %38 = getelementptr inbounds %4* %37, i32 0, i32 3, !dbg !5657
  %39 = load i8** %38, align 8, !dbg !5657
  %40 = icmp ne i8* %36, %39, !dbg !5657
  br i1 %40, label %bb6, label %bb13, !dbg !5657

bb6:                                              ; preds = %bb5
  %41 = load %4** %stream_addr, align 8, !dbg !5658
  %42 = getelementptr inbounds %4* %41, i32 0, i32 4, !dbg !5658
  %43 = load i8** %42, align 8, !dbg !5658
  %44 = load %4** %stream_addr, align 8, !dbg !5658
  %45 = getelementptr inbounds %4* %44, i32 0, i32 5, !dbg !5658
  %46 = load i8** %45, align 8, !dbg !5658
  %47 = icmp eq i8* %43, %46, !dbg !5658
  br i1 %47, label %bb7, label %bb8, !dbg !5658

bb7:                                              ; preds = %bb6
  %48 = load %4** %stream_addr, align 8, !dbg !5658
  %49 = call i64 @__stdio_wcommit(%4* noalias %48) nounwind, !dbg !5658
  %50 = icmp ne i64 %49, 0, !dbg !5658
  br i1 %50, label %BAD, label %bb8, !dbg !5658

bb8:                                              ; preds = %bb7, %bb6
  %51 = load %4** %stream_addr, align 8, !dbg !5659
  %52 = getelementptr inbounds %4* %51, i32 0, i32 5, !dbg !5659
  %53 = load i8** %52, align 8, !dbg !5659
  %54 = load i32* %c_addr, align 4, !dbg !5659
  %55 = trunc i32 %54 to i8, !dbg !5659
  store i8 %55, i8* %53, align 1, !dbg !5659
  %56 = getelementptr inbounds i8* %53, i64 1, !dbg !5659
  %57 = load %4** %stream_addr, align 8, !dbg !5659
  %58 = getelementptr inbounds %4* %57, i32 0, i32 5, !dbg !5659
  store i8* %56, i8** %58, align 8, !dbg !5659
  %59 = load %4** %stream_addr, align 8, !dbg !5660
  %60 = getelementptr inbounds %4* %59, i32 0, i32 0, !dbg !5660
  %61 = load i16* %60, align 8, !dbg !5660
  %62 = zext i16 %61 to i32, !dbg !5660
  %63 = and i32 %62, 256, !dbg !5660
  %64 = icmp ne i32 %63, 0, !dbg !5660
  br i1 %64, label %bb9, label %bb14, !dbg !5660

bb9:                                              ; preds = %bb8
  %65 = load i32* %c_addr, align 4, !dbg !5661
  %66 = trunc i32 %65 to i8, !dbg !5661
  %67 = icmp eq i8 %66, 10, !dbg !5661
  br i1 %67, label %bb10, label %bb14, !dbg !5661

bb10:                                             ; preds = %bb9
  %68 = load %4** %stream_addr, align 8, !dbg !5661
  %69 = call i64 @__stdio_wcommit(%4* noalias %68) nounwind, !dbg !5661
  %70 = icmp ne i64 %69, 0, !dbg !5661
  br i1 %70, label %bb11, label %bb14, !dbg !5661

bb11:                                             ; preds = %bb10
  %71 = load %4** %stream_addr, align 8, !dbg !5662
  %72 = getelementptr inbounds %4* %71, i32 0, i32 5, !dbg !5662
  %73 = load i8** %72, align 8, !dbg !5662
  %74 = getelementptr inbounds i8* %73, i64 -1, !dbg !5662
  %75 = load %4** %stream_addr, align 8, !dbg !5662
  %76 = getelementptr inbounds %4* %75, i32 0, i32 5, !dbg !5662
  store i8* %74, i8** %76, align 8, !dbg !5662
  br label %BAD, !dbg !5662

bb13:                                             ; preds = %bb5
  %77 = load i32* %c_addr, align 4, !dbg !5663
  %78 = trunc i32 %77 to i8, !dbg !5663
  store i8 %78, i8* %uc, align 1, !dbg !5663
  %79 = load %4** %stream_addr, align 8, !dbg !5665
  %80 = call i64 @__stdio_WRITE(%4* %79, i8* %uc, i64 1) nounwind, !dbg !5665
  %81 = icmp eq i64 %80, 0, !dbg !5665
  br i1 %81, label %BAD, label %bb14, !dbg !5665

bb14:                                             ; preds = %bb8, %bb9, %bb10, %bb13
  %82 = load i32* %c_addr, align 4, !dbg !5666
  %83 = trunc i32 %82 to i8, !dbg !5666
  %84 = zext i8 %83 to i32, !dbg !5666
  store i32 %84, i32* %0, align 4, !dbg !5666
  br label %bb15, !dbg !5666

BAD:                                              ; preds = %bb13, %bb11, %bb7, %bb2
  store i32 -1, i32* %0, align 4, !dbg !5667
  br label %bb15, !dbg !5667

bb15:                                             ; preds = %BAD, %bb14, %bb4, %bb
  %85 = load i32* %0, align 4, !dbg !5653
  store i32 %85, i32* %retval, align 4, !dbg !5653
  %retval16 = load i32* %retval, !dbg !5653
  ret i32 %retval16, !dbg !5653
}

define i32 @__freading(%4* noalias %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5668
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !5668
  %3 = load i16* %2, align 8, !dbg !5668
  %4 = zext i16 %3 to i32, !dbg !5668
  %5 = and i32 %4, 35, !dbg !5668
  store i32 %5, i32* %0, align 4, !dbg !5668
  %6 = load i32* %0, align 4, !dbg !5668
  store i32 %6, i32* %retval, align 4, !dbg !5668
  %retval1 = load i32* %retval, !dbg !5668
  ret i32 %retval1, !dbg !5668
}

define internal void @__check_one_fd(i32 %fd, i32 %mode) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %mode_addr = alloca i32, align 4
  %iftmp.0 = alloca i32
  %st = alloca %8
  %nullfd = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i32 %mode, i32* %mode_addr
  %0 = load i32* %fd_addr, align 4, !dbg !5670
  %1 = call i32 (i32, i32, ...)* @fcntl(i32 %0, i32 1) nounwind, !dbg !5670
  %2 = icmp ne i32 %1, -1, !dbg !5670
  br i1 %2, label %bb2, label %bb, !dbg !5670

bb:                                               ; preds = %entry
  %3 = call i32* @__errno_location() nounwind readnone, !dbg !5670
  %4 = load i32* %3, align 4, !dbg !5670
  %5 = icmp ne i32 %4, 9, !dbg !5670
  br i1 %5, label %bb2, label %bb1, !dbg !5670

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.0, align 4, !dbg !5670
  br label %bb3, !dbg !5670

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.0, align 4, !dbg !5670
  br label %bb3, !dbg !5670

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i32* %iftmp.0, align 4, !dbg !5670
  %7 = sext i32 %6 to i64, !dbg !5670
  %8 = icmp ne i64 %7, 0, !dbg !5670
  br i1 %8, label %bb4, label %return, !dbg !5670

bb4:                                              ; preds = %bb3
  %9 = load i32* %mode_addr, align 4, !dbg !5672
  %10 = call i32 (i8*, i32, ...)* @open(i8* getelementptr inbounds ([10 x i8]* @.str1102, i64 0, i64 0), i32 %9) nounwind, !dbg !5672
  store i32 %10, i32* %nullfd, align 4, !dbg !5672
  %11 = load i32* %nullfd, align 4, !dbg !5674
  %12 = load i32* %fd_addr, align 4, !dbg !5674
  %13 = icmp ne i32 %11, %12, !dbg !5674
  br i1 %13, label %bb8, label %bb5, !dbg !5674

bb5:                                              ; preds = %bb4
  %14 = load i32* %fd_addr, align 4, !dbg !5674
  %15 = call i32 bitcast (i32 (i32, %struct.stat*)* @fstat to i32 (i32, %8*)*)(i32 %14, %8* %st) nounwind, !dbg !5674
  %16 = icmp ne i32 %15, 0, !dbg !5674
  br i1 %16, label %bb8, label %bb6, !dbg !5674

bb6:                                              ; preds = %bb5
  %17 = getelementptr inbounds %8* %st, i32 0, i32 3, !dbg !5674
  %18 = load i32* %17, align 8, !dbg !5674
  %19 = and i32 %18, 61440, !dbg !5674
  %20 = icmp ne i32 %19, 8192, !dbg !5674
  br i1 %20, label %bb8, label %bb7, !dbg !5674

bb7:                                              ; preds = %bb6
  %21 = getelementptr inbounds %8* %st, i32 0, i32 7, !dbg !5674
  %22 = load i64* %21, align 8, !dbg !5674
  %23 = call i64 @gnu_dev_makedev420(i32 1, i32 3) nounwind, !dbg !5674
  %24 = icmp ne i64 %22, %23, !dbg !5674
  br i1 %24, label %bb8, label %return, !dbg !5674

bb8:                                              ; preds = %bb7, %bb6, %bb5, %bb4
  call void @abort() noreturn nounwind, !dbg !5675
  unreachable, !dbg !5675

return:                                           ; preds = %bb3, %bb7
  ret void, !dbg !5676
}

define internal i64 @gnu_dev_makedev420(i32 %__major, i32 %__minor) nounwind inlinehint {
entry:
  %__major_addr = alloca i32, align 4
  %__minor_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %__major, i32* %__major_addr
  store i32 %__minor, i32* %__minor_addr
  %1 = load i32* %__minor_addr, align 4, !dbg !5677
  %2 = and i32 %1, 255, !dbg !5677
  %3 = load i32* %__major_addr, align 4, !dbg !5677
  %4 = and i32 %3, 4095, !dbg !5677
  %int_cast_to_i64 = zext i32 8 to i64
  %5 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %5, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %6 = shl i32 %4, 8, !dbg !5677
  %7 = or i32 %2, %6, !dbg !5677
  %8 = zext i32 %7 to i64, !dbg !5677
  %9 = load i32* %__minor_addr, align 4, !dbg !5677
  %10 = zext i32 %9 to i64, !dbg !5677
  %11 = and i64 %10, 4294967040, !dbg !5677
  %int_cast_to_i641 = bitcast i64 12 to i64
  %12 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %12, label %klee_overshift_check.exit4, label %bb.i3

bb.i3:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit4:                       ; preds = %klee_overshift_check.exit
  %13 = shl i64 %11, 12, !dbg !5677
  %14 = or i64 %8, %13, !dbg !5677
  %15 = load i32* %__major_addr, align 4, !dbg !5677
  %16 = zext i32 %15 to i64, !dbg !5677
  %17 = and i64 %16, 4294963200, !dbg !5677
  %int_cast_to_i642 = bitcast i64 32 to i64
  %18 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %18, label %klee_overshift_check.exit6, label %bb.i5

bb.i5:                                            ; preds = %klee_overshift_check.exit4
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit6:                       ; preds = %klee_overshift_check.exit4
  %19 = shl i64 %17, 32, !dbg !5677
  %20 = or i64 %14, %19, !dbg !5677
  store i64 %20, i64* %0, align 8, !dbg !5677
  %21 = load i64* %0, align 8, !dbg !5677
  store i64 %21, i64* %retval, align 8, !dbg !5677
  %retval1 = load i64* %retval, !dbg !5677
  ret i64 %retval1, !dbg !5677
}

define internal i32 @__check_suid() nounwind {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %uid = alloca i32
  %euid = alloca i32
  %gid = alloca i32
  %egid = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %1 = call i32 @getuid() nounwind, !dbg !5679
  store i32 %1, i32* %uid, align 4, !dbg !5679
  %2 = call i32 @geteuid() nounwind, !dbg !5681
  store i32 %2, i32* %euid, align 4, !dbg !5681
  %3 = call i32 @getgid() nounwind, !dbg !5682
  store i32 %3, i32* %gid, align 4, !dbg !5682
  %4 = call i32 @getegid() nounwind, !dbg !5683
  store i32 %4, i32* %egid, align 4, !dbg !5683
  %5 = load i32* %uid, align 4, !dbg !5684
  %6 = load i32* %euid, align 4, !dbg !5684
  %7 = icmp eq i32 %5, %6, !dbg !5684
  br i1 %7, label %bb, label %bb2, !dbg !5684

bb:                                               ; preds = %entry
  %8 = load i32* %gid, align 4, !dbg !5684
  %9 = load i32* %egid, align 4, !dbg !5684
  %10 = icmp eq i32 %8, %9, !dbg !5684
  br i1 %10, label %bb1, label %bb2, !dbg !5684

bb1:                                              ; preds = %bb
  store i32 0, i32* %0, align 4, !dbg !5685
  br label %bb3, !dbg !5685

bb2:                                              ; preds = %bb, %entry
  store i32 1, i32* %0, align 4, !dbg !5686
  br label %bb3, !dbg !5686

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i32* %0, align 4, !dbg !5685
  store i32 %11, i32* %retval, align 4, !dbg !5685
  %retval4 = load i32* %retval, !dbg !5685
  ret i32 %retval4, !dbg !5685
}

declare i32 @getuid() nounwind

declare i32 @geteuid() nounwind

declare i32 @getgid() nounwind

declare i32 @getegid() nounwind

define void @__uClibc_init() nounwind {
entry:
  %0 = load i32* @been_there_done_that.2848, align 4, !dbg !5687
  %1 = icmp ne i32 %0, 0, !dbg !5687
  br i1 %1, label %return, label %bb, !dbg !5687

bb:                                               ; preds = %entry
  %2 = load i32* @been_there_done_that.2848, align 4, !dbg !5689
  %3 = add nsw i32 %2, 1, !dbg !5689
  store i32 %3, i32* @been_there_done_that.2848, align 4, !dbg !5689
  store i64 4096, i64* @__pagesize, align 8, !dbg !5690
  call void @_stdio_init() nounwind, !dbg !5691
  br label %return, !dbg !5691

return:                                           ; preds = %entry, %bb
  ret void, !dbg !5692
}

define void @__uClibc_fini() nounwind {
entry:
  %0 = load void ()** @__app_fini, align 8, !dbg !5693
  %1 = icmp ne void ()* %0, null, !dbg !5693
  br i1 %1, label %bb, label %bb1, !dbg !5693

bb:                                               ; preds = %entry
  %2 = load void ()** @__app_fini, align 8, !dbg !5695
  call void %2() nounwind, !dbg !5695
  br label %bb1, !dbg !5695

bb1:                                              ; preds = %bb, %entry
  %3 = load void ()** @__rtld_fini, align 8, !dbg !5696
  %4 = icmp ne void ()* %3, null, !dbg !5696
  br i1 %4, label %bb2, label %return, !dbg !5696

bb2:                                              ; preds = %bb1
  %5 = load void ()** @__rtld_fini, align 8, !dbg !5697
  call void %5() nounwind, !dbg !5697
  br label %return, !dbg !5697

return:                                           ; preds = %bb1, %bb2
  ret void, !dbg !5698
}

define void @__uClibc_main(i32 (i32, i8**, i8**)* %main, i32 %argc, i8** %argv, void ()* %app_init, void ()* %app_fini, void ()* %rtld_fini, i8* %stack_end) noreturn nounwind {
entry:
  %main_addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %app_init_addr = alloca void ()*, align 8
  %app_fini_addr = alloca void ()*, align 8
  %rtld_fini_addr = alloca void ()*, align 8
  %stack_end_addr = alloca i8*, align 8
  %iftmp.10 = alloca i64
  %aux_dat = alloca i64*
  %auxvt = alloca [15 x %struct.Elf64_auxv_t]
  %auxv_entry = alloca %struct.Elf64_auxv_t*
  %"alloca point" = bitcast i32 0 to i32
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main_addr
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store void ()* %app_init, void ()** %app_init_addr
  store void ()* %app_fini, void ()** %app_fini_addr
  store void ()* %rtld_fini, void ()** %rtld_fini_addr
  store i8* %stack_end, i8** %stack_end_addr
  %0 = load i8** %stack_end_addr, align 8, !dbg !5699
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !5699
  %1 = load void ()** %rtld_fini_addr, align 8, !dbg !5701
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !5701
  %2 = load i32* %argc_addr, align 4, !dbg !5702
  %3 = add nsw i32 %2, 1, !dbg !5702
  %4 = load i8*** %argv_addr, align 8, !dbg !5702
  %5 = sext i32 %3 to i64, !dbg !5702
  %6 = getelementptr inbounds i8** %4, i64 %5, !dbg !5702
  store i8** %6, i8*** @__environ, align 8, !dbg !5702
  %7 = load i8*** %argv_addr, align 8, !dbg !5703
  %8 = load i8** %7, align 8, !dbg !5703
  %9 = load i8*** @__environ, align 8, !dbg !5703
  %10 = bitcast i8** %9 to i8*, !dbg !5703
  %11 = icmp eq i8* %8, %10, !dbg !5703
  br i1 %11, label %bb, label %bb1, !dbg !5703

bb:                                               ; preds = %entry
  %12 = load i8*** %argv_addr, align 8, !dbg !5704
  %13 = load i32* %argc_addr, align 4, !dbg !5704
  %14 = sext i32 %13 to i64, !dbg !5704
  %15 = getelementptr inbounds i8** %12, i64 %14, !dbg !5704
  store i8** %15, i8*** @__environ, align 8, !dbg !5704
  br label %bb1, !dbg !5704

bb1:                                              ; preds = %bb, %entry
  %auxvt2 = bitcast [15 x %struct.Elf64_auxv_t]* %auxvt to %struct.Elf64_auxv_t*, !dbg !5705
  %auxvt23 = bitcast %struct.Elf64_auxv_t* %auxvt2 to i8*, !dbg !5705
  %16 = call i8* @memset(i8* %auxvt23, i32 0, i64 240) nounwind, !dbg !5705
  %17 = load i8*** @__environ, align 8, !dbg !5706
  %18 = bitcast i8** %17 to i64*, !dbg !5706
  store i64* %18, i64** %aux_dat, align 8, !dbg !5706
  br label %bb5, !dbg !5706

bb5:                                              ; preds = %bb5, %bb1
  %19 = load i64** %aux_dat, align 8, !dbg !5707
  %20 = load i64* %19, align 8, !dbg !5707
  %21 = icmp ne i64 %20, 0, !dbg !5707
  %22 = load i64** %aux_dat, align 8, !dbg !5708
  %23 = getelementptr inbounds i64* %22, i64 1, !dbg !5708
  store i64* %23, i64** %aux_dat, align 8, !dbg !5708
  br i1 %21, label %bb5, label %bb10, !dbg !5707

bb7:                                              ; preds = %bb10
  %24 = load i64** %aux_dat, align 8, !dbg !5709
  %25 = bitcast i64* %24 to %struct.Elf64_auxv_t*, !dbg !5709
  store %struct.Elf64_auxv_t* %25, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !5709
  %26 = load %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !5711
  %27 = getelementptr inbounds %struct.Elf64_auxv_t* %26, i32 0, i32 0, !dbg !5711
  %28 = load i64* %27, align 8, !dbg !5711
  %29 = icmp ule i64 %28, 14, !dbg !5711
  br i1 %29, label %bb8, label %bb9, !dbg !5711

bb8:                                              ; preds = %bb7
  %30 = load %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !5712
  %31 = getelementptr inbounds %struct.Elf64_auxv_t* %30, i32 0, i32 0, !dbg !5712
  %32 = load i64* %31, align 8, !dbg !5712
  %33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %32, !dbg !5712
  %34 = bitcast %struct.Elf64_auxv_t* %33 to i8*, !dbg !5712
  %35 = load %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !5712
  %36 = bitcast %struct.Elf64_auxv_t* %35 to i8*, !dbg !5712
  %37 = call i8* @memcpy(i8* noalias %34, i8* noalias %36, i64 16) nounwind, !dbg !5712
  br label %bb9, !dbg !5712

bb9:                                              ; preds = %bb8, %bb7
  %38 = load i64** %aux_dat, align 8, !dbg !5713
  %39 = getelementptr inbounds i64* %38, i64 2, !dbg !5713
  store i64* %39, i64** %aux_dat, align 8, !dbg !5713
  br label %bb10, !dbg !5713

bb10:                                             ; preds = %bb5, %bb9
  %40 = load i64** %aux_dat, align 8, !dbg !5714
  %41 = load i64* %40, align 8, !dbg !5714
  %42 = icmp ne i64 %41, 0, !dbg !5714
  br i1 %42, label %bb7, label %bb11, !dbg !5714

bb11:                                             ; preds = %bb10
  call void @__uClibc_init() nounwind, !dbg !5715
  %43 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !5716
  %44 = getelementptr inbounds %struct.Elf64_auxv_t* %43, i32 0, i32 1, !dbg !5716
  %45 = getelementptr inbounds %0* %44, i32 0, i32 0, !dbg !5716
  %46 = load i64* %45, align 8, !dbg !5716
  %47 = icmp ne i64 %46, 0, !dbg !5716
  br i1 %47, label %bb12, label %bb13, !dbg !5716

bb12:                                             ; preds = %bb11
  %48 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !5716
  %49 = getelementptr inbounds %struct.Elf64_auxv_t* %48, i32 0, i32 1, !dbg !5716
  %50 = getelementptr inbounds %0* %49, i32 0, i32 0, !dbg !5716
  %51 = load i64* %50, align 8, !dbg !5716
  store i64 %51, i64* %iftmp.10, align 8, !dbg !5716
  br label %bb14, !dbg !5716

bb13:                                             ; preds = %bb11
  store i64 4096, i64* %iftmp.10, align 8, !dbg !5716
  br label %bb14, !dbg !5716

bb14:                                             ; preds = %bb13, %bb12
  %52 = load i64* %iftmp.10, align 8, !dbg !5716
  store i64 %52, i64* @__pagesize, align 8, !dbg !5716
  %53 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !5717
  %54 = getelementptr inbounds %struct.Elf64_auxv_t* %53, i32 0, i32 1, !dbg !5717
  %55 = getelementptr inbounds %0* %54, i32 0, i32 0, !dbg !5717
  %56 = load i64* %55, align 8, !dbg !5717
  %57 = icmp ne i64 %56, -1, !dbg !5717
  br i1 %57, label %bb16, label %bb15, !dbg !5717

bb15:                                             ; preds = %bb14
  %58 = call i32 @__check_suid() nounwind, !dbg !5717
  %59 = icmp ne i32 %58, 0, !dbg !5717
  br i1 %59, label %bb19, label %bb16, !dbg !5717

bb16:                                             ; preds = %bb15, %bb14
  %60 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !5717
  %61 = getelementptr inbounds %struct.Elf64_auxv_t* %60, i32 0, i32 1, !dbg !5717
  %62 = getelementptr inbounds %0* %61, i32 0, i32 0, !dbg !5717
  %63 = load i64* %62, align 8, !dbg !5717
  %64 = icmp eq i64 %63, -1, !dbg !5717
  br i1 %64, label %bb20, label %bb17, !dbg !5717

bb17:                                             ; preds = %bb16
  %65 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !5717
  %66 = getelementptr inbounds %struct.Elf64_auxv_t* %65, i32 0, i32 1, !dbg !5717
  %67 = getelementptr inbounds %0* %66, i32 0, i32 0, !dbg !5717
  %68 = load i64* %67, align 8, !dbg !5717
  %69 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !5717
  %70 = getelementptr inbounds %struct.Elf64_auxv_t* %69, i32 0, i32 1, !dbg !5717
  %71 = getelementptr inbounds %0* %70, i32 0, i32 0, !dbg !5717
  %72 = load i64* %71, align 8, !dbg !5717
  %73 = icmp ne i64 %68, %72, !dbg !5717
  br i1 %73, label %bb19, label %bb18, !dbg !5717

bb18:                                             ; preds = %bb17
  %74 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !5717
  %75 = getelementptr inbounds %struct.Elf64_auxv_t* %74, i32 0, i32 1, !dbg !5717
  %76 = getelementptr inbounds %0* %75, i32 0, i32 0, !dbg !5717
  %77 = load i64* %76, align 8, !dbg !5717
  %78 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !5717
  %79 = getelementptr inbounds %struct.Elf64_auxv_t* %78, i32 0, i32 1, !dbg !5717
  %80 = getelementptr inbounds %0* %79, i32 0, i32 0, !dbg !5717
  %81 = load i64* %80, align 8, !dbg !5717
  %82 = icmp ne i64 %77, %81, !dbg !5717
  br i1 %82, label %bb19, label %bb20, !dbg !5717

bb19:                                             ; preds = %bb18, %bb17, %bb15
  call void @__check_one_fd(i32 0, i32 131072) nounwind, !dbg !5718
  call void @__check_one_fd(i32 1, i32 131074) nounwind, !dbg !5719
  call void @__check_one_fd(i32 2, i32 131074) nounwind, !dbg !5720
  br label %bb20, !dbg !5720

bb20:                                             ; preds = %bb19, %bb18, %bb16
  %83 = load i8*** %argv_addr, align 8, !dbg !5721
  %84 = load i8** %83, align 8, !dbg !5721
  store i8* %84, i8** @__uclibc_progname, align 8, !dbg !5721
  %85 = load void ()** %app_fini_addr, align 8, !dbg !5722
  store void ()* %85, void ()** @__app_fini, align 8, !dbg !5722
  %86 = load void ()** %app_init_addr, align 8, !dbg !5723
  %87 = icmp ne void ()* %86, null, !dbg !5723
  br i1 %87, label %bb21, label %bb22, !dbg !5723

bb21:                                             ; preds = %bb20
  %88 = load void ()** %app_init_addr, align 8, !dbg !5724
  call void %88() nounwind, !dbg !5724
  br label %bb22, !dbg !5724

bb22:                                             ; preds = %bb21, %bb20
  %89 = icmp ne i8* bitcast (i32* ()* @__errno_location to i8*), null, !dbg !5725
  br i1 %89, label %bb23, label %bb24, !dbg !5725

bb23:                                             ; preds = %bb22
  %90 = call i32* @__errno_location() nounwind readnone, !dbg !5726
  store i32 0, i32* %90, align 4, !dbg !5726
  br label %bb24, !dbg !5726

bb24:                                             ; preds = %bb23, %bb22
  %91 = icmp ne i8* bitcast (i32* ()* @__h_errno_location to i8*), null, !dbg !5727
  br i1 %91, label %bb25, label %bb26, !dbg !5727

bb25:                                             ; preds = %bb24
  %92 = call i32* @__h_errno_location() nounwind readnone, !dbg !5728
  store i32 0, i32* %92, align 4, !dbg !5728
  br label %bb26, !dbg !5728

bb26:                                             ; preds = %bb25, %bb24
  %93 = load i8*** @__environ, align 8, !dbg !5729
  %94 = load i32 (i32, i8**, i8**)** %main_addr, align 8, !dbg !5729
  %95 = load i32* %argc_addr, align 4, !dbg !5729
  %96 = load i8*** %argv_addr, align 8, !dbg !5729
  %97 = call i32 %94(i32 %95, i8** %96, i8** %93) nounwind, !dbg !5729
  call void @exit(i32 %97) noreturn nounwind, !dbg !5729
  unreachable, !dbg !5729
}

define i64 @_stdlib_mb_cur_max() nounwind {
entry:
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 1, i64* %0, align 8, !dbg !5730
  %1 = load i64* %0, align 8, !dbg !5730
  store i64 %1, i64* %retval, align 8, !dbg !5730
  %retval1 = load i64* %retval, !dbg !5730
  ret i64 %retval1, !dbg !5730
}

declare void @abort() noreturn nounwind

declare i32 @sigprocmask(i32, %struct.__sigset_t* noalias, %struct.__sigset_t* noalias) nounwind

define hidden i32 @atexit(void ()* %func) nounwind {
entry:
  %func_addr = alloca void ()*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i8*
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store void ()* %func, void ()** %func_addr
  br i1 icmp ne (i8** @__dso_handle, i8** null), label %bb, label %bb1, !dbg !5732

bb:                                               ; preds = %entry
  %1 = load i8** @__dso_handle, align 8, !dbg !5732
  store i8* %1, i8** %iftmp.0, align 8, !dbg !5732
  br label %bb2, !dbg !5732

bb1:                                              ; preds = %entry
  store i8* null, i8** %iftmp.0, align 8, !dbg !5732
  br label %bb2, !dbg !5732

bb2:                                              ; preds = %bb1, %bb
  %2 = load void ()** %func_addr, align 8, !dbg !5732
  %3 = bitcast void ()* %2 to void (i8*)*, !dbg !5732
  %4 = load i8** %iftmp.0, align 8, !dbg !5732
  %5 = call i32 @__cxa_atexit(void (i8*)* %3, i8* null, i8* %4) nounwind, !dbg !5732
  store i32 %5, i32* %0, align 4, !dbg !5732
  %6 = load i32* %0, align 4, !dbg !5732
  store i32 %6, i32* %retval, align 4, !dbg !5732
  %retval3 = load i32* %retval, !dbg !5732
  ret i32 %retval3, !dbg !5732
}

define %struct.mntent* @getmntent_r(%4* %filep, %struct.mntent* %mnt, i8* %buff, i32 %bufsize) nounwind {
entry:
  %filep_addr = alloca %4*, align 8
  %mnt_addr = alloca %struct.mntent*, align 8
  %buff_addr = alloca i8*, align 8
  %bufsize_addr = alloca i32, align 4
  %retval = alloca %struct.mntent*
  %iftmp.1 = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca %struct.mntent*
  %cp = alloca i8*
  %ptrptr = alloca i8*
  %sep = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %filep, %4** %filep_addr
  store %struct.mntent* %mnt, %struct.mntent** %mnt_addr
  store i8* %buff, i8** %buff_addr
  store i32 %bufsize, i32* %bufsize_addr
  store i8* getelementptr inbounds ([4 x i8]* @.str107, i64 0, i64 0), i8** %sep, align 8, !dbg !5734
  %1 = load %4** %filep_addr, align 8, !dbg !5736
  %2 = icmp eq %4* %1, null, !dbg !5736
  br i1 %2, label %bb2, label %bb, !dbg !5736

bb:                                               ; preds = %entry
  %3 = load %struct.mntent** %mnt_addr, align 8, !dbg !5736
  %4 = icmp eq %struct.mntent* %3, null, !dbg !5736
  br i1 %4, label %bb2, label %bb1, !dbg !5736

bb1:                                              ; preds = %bb
  %5 = load i8** %buff_addr, align 8, !dbg !5736
  %6 = icmp eq i8* %5, null, !dbg !5736
  br i1 %6, label %bb2, label %bb7, !dbg !5736

bb2:                                              ; preds = %bb1, %bb, %entry
  store %struct.mntent* null, %struct.mntent** %0, align 8, !dbg !5737
  br label %bb25, !dbg !5737

bb4:                                              ; preds = %bb7
  %7 = load i8** %buff_addr, align 8, !dbg !5738
  %8 = getelementptr inbounds i8* %7, i64 0, !dbg !5738
  %9 = load i8* %8, align 1, !dbg !5738
  %10 = icmp eq i8 %9, 35, !dbg !5738
  br i1 %10, label %bb7, label %bb5, !dbg !5738

bb5:                                              ; preds = %bb4
  %11 = load i8** %buff_addr, align 8, !dbg !5738
  %12 = getelementptr inbounds i8* %11, i64 0, !dbg !5738
  %13 = load i8* %12, align 1, !dbg !5738
  %14 = icmp eq i8 %13, 10, !dbg !5738
  br i1 %14, label %bb7, label %bb8, !dbg !5738

bb7:                                              ; preds = %bb1, %bb5, %bb4
  %15 = load i8** %buff_addr, align 8, !dbg !5739
  %16 = load i32* %bufsize_addr, align 4, !dbg !5739
  %17 = load %4** %filep_addr, align 8, !dbg !5739
  %18 = call i8* @fgets_unlocked(i8* noalias %15, i32 %16, %4* noalias %17) nounwind, !dbg !5739
  store i8* %18, i8** %cp, align 8, !dbg !5739
  %19 = load i8** %cp, align 8, !dbg !5739
  %20 = icmp ne i8* %19, null, !dbg !5739
  br i1 %20, label %bb4, label %bb8, !dbg !5739

bb8:                                              ; preds = %bb5, %bb7
  %21 = load i8** %cp, align 8, !dbg !5740
  %22 = icmp eq i8* %21, null, !dbg !5740
  br i1 %22, label %bb9, label %bb10, !dbg !5740

bb9:                                              ; preds = %bb8
  store %struct.mntent* null, %struct.mntent** %0, align 8, !dbg !5741
  br label %bb25, !dbg !5741

bb10:                                             ; preds = %bb8
  store i8* null, i8** %ptrptr, align 8, !dbg !5742
  %23 = load i8** %buff_addr, align 8, !dbg !5743
  %24 = load i8** %sep, align 8, !dbg !5743
  %25 = call i8* @strtok_r(i8* noalias %23, i8* noalias %24, i8** noalias %ptrptr) nounwind, !dbg !5743
  %26 = load %struct.mntent** %mnt_addr, align 8, !dbg !5743
  %27 = getelementptr inbounds %struct.mntent* %26, i32 0, i32 0, !dbg !5743
  store i8* %25, i8** %27, align 8, !dbg !5743
  %28 = load %struct.mntent** %mnt_addr, align 8, !dbg !5744
  %29 = getelementptr inbounds %struct.mntent* %28, i32 0, i32 0, !dbg !5744
  %30 = load i8** %29, align 8, !dbg !5744
  %31 = icmp eq i8* %30, null, !dbg !5744
  br i1 %31, label %bb11, label %bb12, !dbg !5744

bb11:                                             ; preds = %bb10
  store %struct.mntent* null, %struct.mntent** %0, align 8, !dbg !5745
  br label %bb25, !dbg !5745

bb12:                                             ; preds = %bb10
  %32 = load i8** %sep, align 8, !dbg !5746
  %33 = call i8* @strtok_r(i8* noalias null, i8* noalias %32, i8** noalias %ptrptr) nounwind, !dbg !5746
  %34 = load %struct.mntent** %mnt_addr, align 8, !dbg !5746
  %35 = getelementptr inbounds %struct.mntent* %34, i32 0, i32 1, !dbg !5746
  store i8* %33, i8** %35, align 8, !dbg !5746
  %36 = load %struct.mntent** %mnt_addr, align 8, !dbg !5747
  %37 = getelementptr inbounds %struct.mntent* %36, i32 0, i32 1, !dbg !5747
  %38 = load i8** %37, align 8, !dbg !5747
  %39 = icmp eq i8* %38, null, !dbg !5747
  br i1 %39, label %bb13, label %bb14, !dbg !5747

bb13:                                             ; preds = %bb12
  store %struct.mntent* null, %struct.mntent** %0, align 8, !dbg !5748
  br label %bb25, !dbg !5748

bb14:                                             ; preds = %bb12
  %40 = load i8** %sep, align 8, !dbg !5749
  %41 = call i8* @strtok_r(i8* noalias null, i8* noalias %40, i8** noalias %ptrptr) nounwind, !dbg !5749
  %42 = load %struct.mntent** %mnt_addr, align 8, !dbg !5749
  %43 = getelementptr inbounds %struct.mntent* %42, i32 0, i32 2, !dbg !5749
  store i8* %41, i8** %43, align 8, !dbg !5749
  %44 = load %struct.mntent** %mnt_addr, align 8, !dbg !5750
  %45 = getelementptr inbounds %struct.mntent* %44, i32 0, i32 2, !dbg !5750
  %46 = load i8** %45, align 8, !dbg !5750
  %47 = icmp eq i8* %46, null, !dbg !5750
  br i1 %47, label %bb15, label %bb16, !dbg !5750

bb15:                                             ; preds = %bb14
  store %struct.mntent* null, %struct.mntent** %0, align 8, !dbg !5751
  br label %bb25, !dbg !5751

bb16:                                             ; preds = %bb14
  %48 = load i8** %sep, align 8, !dbg !5752
  %49 = call i8* @strtok_r(i8* noalias null, i8* noalias %48, i8** noalias %ptrptr) nounwind, !dbg !5752
  %50 = load %struct.mntent** %mnt_addr, align 8, !dbg !5752
  %51 = getelementptr inbounds %struct.mntent* %50, i32 0, i32 3, !dbg !5752
  store i8* %49, i8** %51, align 8, !dbg !5752
  %52 = load %struct.mntent** %mnt_addr, align 8, !dbg !5753
  %53 = getelementptr inbounds %struct.mntent* %52, i32 0, i32 3, !dbg !5753
  %54 = load i8** %53, align 8, !dbg !5753
  %55 = icmp eq i8* %54, null, !dbg !5753
  br i1 %55, label %bb17, label %bb18, !dbg !5753

bb17:                                             ; preds = %bb16
  %56 = load %struct.mntent** %mnt_addr, align 8, !dbg !5754
  %57 = getelementptr inbounds %struct.mntent* %56, i32 0, i32 3, !dbg !5754
  store i8* getelementptr inbounds ([1 x i8]* @.str1108, i64 0, i64 0), i8** %57, align 8, !dbg !5754
  br label %bb18, !dbg !5754

bb18:                                             ; preds = %bb17, %bb16
  %58 = load i8** %sep, align 8, !dbg !5755
  %59 = call i8* @strtok_r(i8* noalias null, i8* noalias %58, i8** noalias %ptrptr) nounwind, !dbg !5755
  store i8* %59, i8** %cp, align 8, !dbg !5755
  %60 = load i8** %cp, align 8, !dbg !5756
  %61 = icmp ne i8* %60, null, !dbg !5756
  br i1 %61, label %bb19, label %bb20, !dbg !5756

bb19:                                             ; preds = %bb18
  %62 = load i8** %cp, align 8, !dbg !5756
  %63 = call i32 @atoi(i8* %62) nounwind readonly, !dbg !5756
  store i32 %63, i32* %iftmp.0, align 4, !dbg !5756
  br label %bb21, !dbg !5756

bb20:                                             ; preds = %bb18
  store i32 0, i32* %iftmp.0, align 4, !dbg !5756
  br label %bb21, !dbg !5756

bb21:                                             ; preds = %bb20, %bb19
  %64 = load %struct.mntent** %mnt_addr, align 8, !dbg !5756
  %65 = getelementptr inbounds %struct.mntent* %64, i32 0, i32 4, !dbg !5756
  %66 = load i32* %iftmp.0, align 4, !dbg !5756
  store i32 %66, i32* %65, align 8, !dbg !5756
  %67 = load i8** %sep, align 8, !dbg !5757
  %68 = call i8* @strtok_r(i8* noalias null, i8* noalias %67, i8** noalias %ptrptr) nounwind, !dbg !5757
  store i8* %68, i8** %cp, align 8, !dbg !5757
  %69 = load i8** %cp, align 8, !dbg !5758
  %70 = icmp ne i8* %69, null, !dbg !5758
  br i1 %70, label %bb22, label %bb23, !dbg !5758

bb22:                                             ; preds = %bb21
  %71 = load i8** %cp, align 8, !dbg !5758
  %72 = call i32 @atoi(i8* %71) nounwind readonly, !dbg !5758
  store i32 %72, i32* %iftmp.1, align 4, !dbg !5758
  br label %bb24, !dbg !5758

bb23:                                             ; preds = %bb21
  store i32 0, i32* %iftmp.1, align 4, !dbg !5758
  br label %bb24, !dbg !5758

bb24:                                             ; preds = %bb23, %bb22
  %73 = load %struct.mntent** %mnt_addr, align 8, !dbg !5758
  %74 = getelementptr inbounds %struct.mntent* %73, i32 0, i32 5, !dbg !5758
  %75 = load i32* %iftmp.1, align 4, !dbg !5758
  store i32 %75, i32* %74, align 4, !dbg !5758
  %76 = load %struct.mntent** %mnt_addr, align 8, !dbg !5759
  store %struct.mntent* %76, %struct.mntent** %0, align 8, !dbg !5759
  br label %bb25, !dbg !5759

bb25:                                             ; preds = %bb24, %bb15, %bb13, %bb11, %bb9, %bb2
  %77 = load %struct.mntent** %0, align 8, !dbg !5737
  store %struct.mntent* %77, %struct.mntent** %retval, align 8, !dbg !5737
  %retval26 = load %struct.mntent** %retval, !dbg !5737
  ret %struct.mntent* %retval26, !dbg !5737
}

define %struct.mntent* @getmntent(%4* %filep) nounwind {
entry:
  %filep_addr = alloca %4*, align 8
  %retval = alloca %struct.mntent*
  %0 = alloca %struct.mntent*
  %tmp = alloca %struct.mntent*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %filep, %4** %filep_addr
  %1 = load i8** @buff.2072, align 8, !dbg !5760
  %2 = icmp eq i8* %1, null, !dbg !5760
  br i1 %2, label %bb, label %bb2, !dbg !5760

bb:                                               ; preds = %entry
  %3 = call noalias i8* @malloc(i64 4096) nounwind, !dbg !5762
  store i8* %3, i8** @buff.2072, align 8, !dbg !5762
  %4 = load i8** @buff.2072, align 8, !dbg !5763
  %5 = icmp eq i8* %4, null, !dbg !5763
  br i1 %5, label %bb1, label %bb2, !dbg !5763

bb1:                                              ; preds = %bb
  call void @abort() noreturn nounwind, !dbg !5764
  unreachable, !dbg !5764

bb2:                                              ; preds = %bb, %entry
  %6 = load i8** @buff.2072, align 8, !dbg !5765
  %7 = load %4** %filep_addr, align 8, !dbg !5765
  %8 = call %struct.mntent* @getmntent_r(%4* %7, %struct.mntent* @mnt.2073, i8* %6, i32 4096) nounwind, !dbg !5765
  store %struct.mntent* %8, %struct.mntent** %tmp, align 8, !dbg !5765
  %9 = load %struct.mntent** %tmp, align 8, !dbg !5766
  store %struct.mntent* %9, %struct.mntent** %0, align 8, !dbg !5766
  %10 = load %struct.mntent** %0, align 8, !dbg !5766
  store %struct.mntent* %10, %struct.mntent** %retval, align 8, !dbg !5766
  %retval3 = load %struct.mntent** %retval, !dbg !5766
  ret %struct.mntent* %retval3, !dbg !5766
}

define i32 @addmntent(%4* %filep, %struct.mntent* %mnt) nounwind {
entry:
  %filep_addr = alloca %4*, align 8
  %mnt_addr = alloca %struct.mntent*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %filep, %4** %filep_addr
  store %struct.mntent* %mnt, %struct.mntent** %mnt_addr
  %1 = load %4** %filep_addr, align 8, !dbg !5767
  %2 = call i32 @fseek(%4* %1, i64 0, i32 2) nounwind, !dbg !5767
  %3 = icmp slt i32 %2, 0, !dbg !5767
  br i1 %3, label %bb, label %bb1, !dbg !5767

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4, !dbg !5769
  br label %bb4, !dbg !5769

bb1:                                              ; preds = %entry
  %4 = load %struct.mntent** %mnt_addr, align 8, !dbg !5770
  %5 = getelementptr inbounds %struct.mntent* %4, i32 0, i32 5, !dbg !5770
  %6 = load i32* %5, align 4, !dbg !5770
  %7 = load %struct.mntent** %mnt_addr, align 8, !dbg !5770
  %8 = getelementptr inbounds %struct.mntent* %7, i32 0, i32 4, !dbg !5770
  %9 = load i32* %8, align 8, !dbg !5770
  %10 = load %struct.mntent** %mnt_addr, align 8, !dbg !5770
  %11 = getelementptr inbounds %struct.mntent* %10, i32 0, i32 3, !dbg !5770
  %12 = load i8** %11, align 8, !dbg !5770
  %13 = load %struct.mntent** %mnt_addr, align 8, !dbg !5770
  %14 = getelementptr inbounds %struct.mntent* %13, i32 0, i32 2, !dbg !5770
  %15 = load i8** %14, align 8, !dbg !5770
  %16 = load %struct.mntent** %mnt_addr, align 8, !dbg !5770
  %17 = getelementptr inbounds %struct.mntent* %16, i32 0, i32 1, !dbg !5770
  %18 = load i8** %17, align 8, !dbg !5770
  %19 = load %struct.mntent** %mnt_addr, align 8, !dbg !5770
  %20 = getelementptr inbounds %struct.mntent* %19, i32 0, i32 0, !dbg !5770
  %21 = load i8** %20, align 8, !dbg !5770
  %22 = load %4** %filep_addr, align 8, !dbg !5770
  %23 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %22, i8* noalias getelementptr inbounds ([19 x i8]* @.str2109, i64 0, i64 0), i8* %21, i8* %18, i8* %15, i8* %12, i32 %9, i32 %6) nounwind, !dbg !5770
  %24 = icmp sle i32 %23, 0, !dbg !5770
  br i1 %24, label %bb2, label %bb3, !dbg !5770

bb2:                                              ; preds = %bb1
  store i32 1, i32* %0, align 4, !dbg !5771
  br label %bb4, !dbg !5771

bb3:                                              ; preds = %bb1
  store i32 0, i32* %0, align 4, !dbg !5772
  br label %bb4, !dbg !5772

bb4:                                              ; preds = %bb3, %bb2, %bb
  %25 = load i32* %0, align 4, !dbg !5769
  store i32 %25, i32* %retval, align 4, !dbg !5769
  %retval5 = load i32* %retval, !dbg !5769
  ret i32 %retval5, !dbg !5769
}

define i8* @hasmntopt(%struct.mntent* %mnt, i8* %opt) nounwind {
entry:
  %mnt_addr = alloca %struct.mntent*, align 8
  %opt_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mntent* %mnt, %struct.mntent** %mnt_addr
  store i8* %opt, i8** %opt_addr
  %1 = load %struct.mntent** %mnt_addr, align 8, !dbg !5773
  %2 = getelementptr inbounds %struct.mntent* %1, i32 0, i32 3, !dbg !5773
  %3 = load i8** %2, align 8, !dbg !5773
  %4 = load i8** %opt_addr, align 8, !dbg !5773
  %5 = call i8* @strstr(i8* %3, i8* %4) nounwind readonly, !dbg !5773
  store i8* %5, i8** %0, align 8, !dbg !5773
  %6 = load i8** %0, align 8, !dbg !5773
  store i8* %6, i8** %retval, align 8, !dbg !5773
  %retval1 = load i8** %retval, !dbg !5773
  ret i8* %retval1, !dbg !5773
}

define %4* @setmntent(i8* %name, i8* %mode) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %mode_addr = alloca i8*, align 8
  %retval = alloca %4*
  %0 = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store i8* %mode, i8** %mode_addr
  %1 = load i8** %name_addr, align 8, !dbg !5775
  %2 = load i8** %mode_addr, align 8, !dbg !5775
  %3 = call %4* @fopen(i8* noalias %1, i8* noalias %2) nounwind, !dbg !5775
  store %4* %3, %4** %0, align 8, !dbg !5775
  %4 = load %4** %0, align 8, !dbg !5775
  store %4* %4, %4** %retval, align 8, !dbg !5775
  %retval1 = load %4** %retval, !dbg !5775
  ret %4* %retval1, !dbg !5775
}

define i32 @endmntent(%4* %filep) nounwind {
entry:
  %filep_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %filep, %4** %filep_addr
  %1 = load %4** %filep_addr, align 8, !dbg !5777
  %2 = icmp ne %4* %1, null, !dbg !5777
  br i1 %2, label %bb, label %bb1, !dbg !5777

bb:                                               ; preds = %entry
  %3 = load %4** %filep_addr, align 8, !dbg !5779
  %4 = call i32 @fclose(%4* %3) nounwind, !dbg !5779
  br label %bb1, !dbg !5779

bb1:                                              ; preds = %bb, %entry
  store i32 1, i32* %0, align 4, !dbg !5780
  %5 = load i32* %0, align 4, !dbg !5780
  store i32 %5, i32* %retval, align 4, !dbg !5780
  %retval2 = load i32* %retval, !dbg !5780
  ret i32 %retval2, !dbg !5780
}

define hidden void @__error(i32 %status, i32 %errnum, i8* %message, ...) nounwind {
entry:
  %status_addr = alloca i32, align 4
  %errnum_addr = alloca i32, align 4
  %message_addr = alloca i8*, align 8
  %iftmp.4 = alloca i32
  %0 = alloca i32
  %args = alloca [1 x %struct.__va_list_tag]
  %__S = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  store i32 %errnum, i32* %errnum_addr
  store i8* %message, i8** %message_addr
  %1 = load %4** @stdout, align 8, !dbg !5781
  %2 = call i32 @fflush_unlocked(%4* %1) nounwind, !dbg !5781
  %args1 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5783
  %args12 = bitcast %struct.__va_list_tag* %args1 to i8*, !dbg !5783
  call void @llvm.va_start(i8* %args12), !dbg !5783
  %3 = load %4** @stderr, align 8, !dbg !5784
  %4 = load i8** %message_addr, align 8, !dbg !5784
  %args3 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5784
  %5 = call i32 @vfprintf(%4* noalias %3, i8* noalias %4, %struct.__va_list_tag* %args3) nounwind, !dbg !5784
  %args4 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5785
  %args45 = bitcast %struct.__va_list_tag* %args4 to i8*, !dbg !5785
  call void @llvm.va_end(i8* %args45), !dbg !5785
  %6 = load i32* @error_message_count, align 4, !dbg !5786
  %7 = add i32 %6, 1, !dbg !5786
  store i32 %7, i32* @error_message_count, align 4, !dbg !5786
  %8 = load i32* %errnum_addr, align 4, !dbg !5787
  %9 = icmp ne i32 %8, 0, !dbg !5787
  br i1 %9, label %bb, label %bb6, !dbg !5787

bb:                                               ; preds = %entry
  %10 = load i32* %errnum_addr, align 4, !dbg !5788
  %11 = call i8* @strerror(i32 %10) nounwind, !dbg !5788
  %12 = load %4** @stderr, align 8, !dbg !5788
  %13 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %12, i8* noalias getelementptr inbounds ([5 x i8]* @.str113, i64 0, i64 0), i8* %11) nounwind, !dbg !5788
  br label %bb6, !dbg !5788

bb6:                                              ; preds = %bb, %entry
  %14 = load %4** @stderr, align 8, !dbg !5789
  store %4* %14, %4** %__S, align 8, !dbg !5789
  %15 = load %4** %__S, align 8, !dbg !5789
  %16 = getelementptr inbounds %4* %15, i32 0, i32 5, !dbg !5789
  %17 = load i8** %16, align 8, !dbg !5789
  %18 = load %4** %__S, align 8, !dbg !5789
  %19 = getelementptr inbounds %4* %18, i32 0, i32 8, !dbg !5789
  %20 = load i8** %19, align 8, !dbg !5789
  %21 = icmp ult i8* %17, %20, !dbg !5789
  %22 = load %4** %__S, align 8, !dbg !5789
  br i1 %21, label %bb7, label %bb8, !dbg !5789

bb7:                                              ; preds = %bb6
  %23 = getelementptr inbounds %4* %22, i32 0, i32 5, !dbg !5789
  %24 = load i8** %23, align 8, !dbg !5789
  store i8 10, i8* %24, align 1, !dbg !5789
  %25 = getelementptr inbounds i8* %24, i64 1, !dbg !5789
  %26 = load %4** %__S, align 8, !dbg !5789
  %27 = getelementptr inbounds %4* %26, i32 0, i32 5, !dbg !5789
  store i8* %25, i8** %27, align 8, !dbg !5789
  store i32 10, i32* %iftmp.4, align 4, !dbg !5789
  br label %bb9, !dbg !5789

bb8:                                              ; preds = %bb6
  %28 = call i32 @__fputc_unlocked(i32 10, %4* %22) nounwind, !dbg !5789
  store i32 %28, i32* %iftmp.4, align 4, !dbg !5789
  br label %bb9, !dbg !5789

bb9:                                              ; preds = %bb8, %bb7
  %29 = load i32* %iftmp.4, align 4, !dbg !5789
  store i32 %29, i32* %0, align 4, !dbg !5789
  %30 = load i32* %status_addr, align 4, !dbg !5791
  %31 = icmp ne i32 %30, 0, !dbg !5791
  br i1 %31, label %bb10, label %return, !dbg !5791

bb10:                                             ; preds = %bb9
  %32 = load i32* %status_addr, align 4, !dbg !5792
  call void @exit(i32 %32) noreturn nounwind, !dbg !5792
  unreachable, !dbg !5792

return:                                           ; preds = %bb9
  ret void, !dbg !5793
}

define hidden void @__error_at_line(i32 %status, i32 %errnum, i8* %file_name, i32 %line_number, i8* %message, ...) nounwind {
entry:
  %status_addr = alloca i32, align 4
  %errnum_addr = alloca i32, align 4
  %file_name_addr = alloca i8*, align 8
  %line_number_addr = alloca i32, align 4
  %message_addr = alloca i8*, align 8
  %iftmp.15 = alloca i32
  %0 = alloca i32
  %args = alloca [1 x %struct.__va_list_tag]
  %__S = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  store i32 %errnum, i32* %errnum_addr
  store i8* %file_name, i8** %file_name_addr
  store i32 %line_number, i32* %line_number_addr
  store i8* %message, i8** %message_addr
  %1 = load i32* @error_one_per_line, align 4, !dbg !5794
  %2 = icmp ne i32 %1, 0, !dbg !5794
  br i1 %2, label %bb, label %bb5, !dbg !5794

bb:                                               ; preds = %entry
  %3 = load i32* @old_line_number.2047, align 4, !dbg !5796
  %4 = load i32* %line_number_addr, align 4, !dbg !5796
  %5 = icmp eq i32 %3, %4, !dbg !5796
  br i1 %5, label %bb1, label %bb4, !dbg !5796

bb1:                                              ; preds = %bb
  %6 = load i8** @old_file_name.2046, align 8, !dbg !5796
  %7 = load i8** %file_name_addr, align 8, !dbg !5796
  %8 = icmp eq i8* %7, %6, !dbg !5796
  br i1 %8, label %return, label %bb2, !dbg !5796

bb2:                                              ; preds = %bb1
  %9 = load i8** @old_file_name.2046, align 8, !dbg !5796
  %10 = load i8** %file_name_addr, align 8, !dbg !5796
  %11 = call i32 @strcmp(i8* %9, i8* %10) nounwind readonly, !dbg !5796
  %12 = icmp eq i32 %11, 0, !dbg !5796
  br i1 %12, label %return, label %bb4, !dbg !5796

bb4:                                              ; preds = %bb2, %bb
  %13 = load i8** %file_name_addr, align 8, !dbg !5798
  store i8* %13, i8** @old_file_name.2046, align 8, !dbg !5798
  %14 = load i32* %line_number_addr, align 4, !dbg !5799
  store i32 %14, i32* @old_line_number.2047, align 4, !dbg !5799
  br label %bb5, !dbg !5799

bb5:                                              ; preds = %bb4, %entry
  %15 = load %4** @stdout, align 8, !dbg !5800
  %16 = call i32 @fflush_unlocked(%4* %15) nounwind, !dbg !5800
  %17 = load i8** %file_name_addr, align 8, !dbg !5801
  %18 = icmp ne i8* %17, null, !dbg !5801
  br i1 %18, label %bb6, label %bb7, !dbg !5801

bb6:                                              ; preds = %bb5
  %19 = load %4** @stderr, align 8, !dbg !5802
  %20 = load i8** %file_name_addr, align 8, !dbg !5802
  %21 = load i32* %line_number_addr, align 4, !dbg !5802
  %22 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %19, i8* noalias getelementptr inbounds ([8 x i8]* @.str1114, i64 0, i64 0), i8* %20, i32 %21) nounwind, !dbg !5802
  br label %bb7, !dbg !5802

bb7:                                              ; preds = %bb6, %bb5
  %args8 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5803
  %args89 = bitcast %struct.__va_list_tag* %args8 to i8*, !dbg !5803
  call void @llvm.va_start(i8* %args89), !dbg !5803
  %23 = load %4** @stderr, align 8, !dbg !5804
  %24 = load i8** %message_addr, align 8, !dbg !5804
  %args10 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5804
  %25 = call i32 @vfprintf(%4* noalias %23, i8* noalias %24, %struct.__va_list_tag* %args10) nounwind, !dbg !5804
  %args11 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5805
  %args1112 = bitcast %struct.__va_list_tag* %args11 to i8*, !dbg !5805
  call void @llvm.va_end(i8* %args1112), !dbg !5805
  %26 = load i32* @error_message_count, align 4, !dbg !5806
  %27 = add i32 %26, 1, !dbg !5806
  store i32 %27, i32* @error_message_count, align 4, !dbg !5806
  %28 = load i32* %errnum_addr, align 4, !dbg !5807
  %29 = icmp ne i32 %28, 0, !dbg !5807
  br i1 %29, label %bb13, label %bb14, !dbg !5807

bb13:                                             ; preds = %bb7
  %30 = load i32* %errnum_addr, align 4, !dbg !5808
  %31 = call i8* @strerror(i32 %30) nounwind, !dbg !5808
  %32 = load %4** @stderr, align 8, !dbg !5808
  %33 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %32, i8* noalias getelementptr inbounds ([5 x i8]* @.str113, i64 0, i64 0), i8* %31) nounwind, !dbg !5808
  br label %bb14, !dbg !5808

bb14:                                             ; preds = %bb13, %bb7
  %34 = load %4** @stderr, align 8, !dbg !5809
  store %4* %34, %4** %__S, align 8, !dbg !5809
  %35 = load %4** %__S, align 8, !dbg !5809
  %36 = getelementptr inbounds %4* %35, i32 0, i32 5, !dbg !5809
  %37 = load i8** %36, align 8, !dbg !5809
  %38 = load %4** %__S, align 8, !dbg !5809
  %39 = getelementptr inbounds %4* %38, i32 0, i32 8, !dbg !5809
  %40 = load i8** %39, align 8, !dbg !5809
  %41 = icmp ult i8* %37, %40, !dbg !5809
  %42 = load %4** %__S, align 8, !dbg !5809
  br i1 %41, label %bb15, label %bb16, !dbg !5809

bb15:                                             ; preds = %bb14
  %43 = getelementptr inbounds %4* %42, i32 0, i32 5, !dbg !5809
  %44 = load i8** %43, align 8, !dbg !5809
  store i8 10, i8* %44, align 1, !dbg !5809
  %45 = getelementptr inbounds i8* %44, i64 1, !dbg !5809
  %46 = load %4** %__S, align 8, !dbg !5809
  %47 = getelementptr inbounds %4* %46, i32 0, i32 5, !dbg !5809
  store i8* %45, i8** %47, align 8, !dbg !5809
  store i32 10, i32* %iftmp.15, align 4, !dbg !5809
  br label %bb17, !dbg !5809

bb16:                                             ; preds = %bb14
  %48 = call i32 @__fputc_unlocked(i32 10, %4* %42) nounwind, !dbg !5809
  store i32 %48, i32* %iftmp.15, align 4, !dbg !5809
  br label %bb17, !dbg !5809

bb17:                                             ; preds = %bb16, %bb15
  %49 = load i32* %iftmp.15, align 4, !dbg !5809
  store i32 %49, i32* %0, align 4, !dbg !5809
  %50 = load i32* %status_addr, align 4, !dbg !5811
  %51 = icmp ne i32 %50, 0, !dbg !5811
  br i1 %51, label %bb18, label %return, !dbg !5811

bb18:                                             ; preds = %bb17
  %52 = load i32* %status_addr, align 4, !dbg !5812
  call void @exit(i32 %52) noreturn nounwind, !dbg !5812
  unreachable, !dbg !5812

return:                                           ; preds = %bb17, %bb2, %bb1
  ret void, !dbg !5813
}

define void @exit(i32 %rv) noreturn nounwind {
entry:
  %rv_addr = alloca i32, align 4
  %"alloca point" = bitcast i32 0 to i32
  store i32 %rv, i32* %rv_addr
  %0 = load void (i32)** @__exit_cleanup, align 8, !dbg !5814
  %1 = icmp ne void (i32)* %0, null, !dbg !5814
  br i1 %1, label %bb, label %bb1, !dbg !5814

bb:                                               ; preds = %entry
  %2 = load void (i32)** @__exit_cleanup, align 8, !dbg !5816
  %3 = load i32* %rv_addr, align 4, !dbg !5816
  call void %2(i32 %3) nounwind, !dbg !5816
  br label %bb1, !dbg !5816

bb1:                                              ; preds = %bb, %entry
  call void @__uClibc_fini() nounwind, !dbg !5817
  call void @_stdio_term() nounwind, !dbg !5818
  %4 = load i32* %rv_addr, align 4, !dbg !5819
  call void @_exit(i32 %4) noreturn nounwind, !dbg !5819
  unreachable, !dbg !5819
}

define i32 @fclose(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %rv = alloca i32
  %ptr = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 0, i32* %rv, align 4, !dbg !5820
  %1 = load %4** @_stdio_openlist, align 8, !dbg !5822
  store %4* %1, %4** %ptr, align 8, !dbg !5822
  %2 = load %4** @_stdio_openlist, align 8, !dbg !5824
  store %4* %2, %4** %ptr, align 8, !dbg !5824
  %3 = load %4** %ptr, align 8, !dbg !5824
  %4 = load %4** %stream_addr, align 8, !dbg !5824
  %5 = icmp eq %4* %3, %4, !dbg !5824
  br i1 %5, label %bb, label %bb5, !dbg !5824

bb:                                               ; preds = %entry
  %6 = load %4** %stream_addr, align 8, !dbg !5825
  %7 = getelementptr inbounds %4* %6, i32 0, i32 9, !dbg !5825
  %8 = load %4** %7, align 8, !dbg !5825
  store %4* %8, %4** @_stdio_openlist, align 8, !dbg !5825
  br label %bb6, !dbg !5825

bb2:                                              ; preds = %bb5
  %9 = load %4** %ptr, align 8, !dbg !5826
  %10 = getelementptr inbounds %4* %9, i32 0, i32 9, !dbg !5826
  %11 = load %4** %10, align 8, !dbg !5826
  %12 = load %4** %stream_addr, align 8, !dbg !5826
  %13 = icmp eq %4* %11, %12, !dbg !5826
  br i1 %13, label %bb3, label %bb4, !dbg !5826

bb3:                                              ; preds = %bb2
  %14 = load %4** %stream_addr, align 8, !dbg !5827
  %15 = getelementptr inbounds %4* %14, i32 0, i32 9, !dbg !5827
  %16 = load %4** %15, align 8, !dbg !5827
  %17 = load %4** %ptr, align 8, !dbg !5827
  %18 = getelementptr inbounds %4* %17, i32 0, i32 9, !dbg !5827
  store %4* %16, %4** %18, align 8, !dbg !5827
  br label %bb6, !dbg !5827

bb4:                                              ; preds = %bb2
  %19 = load %4** %ptr, align 8, !dbg !5828
  %20 = getelementptr inbounds %4* %19, i32 0, i32 9, !dbg !5828
  %21 = load %4** %20, align 8, !dbg !5828
  store %4* %21, %4** %ptr, align 8, !dbg !5828
  br label %bb5, !dbg !5828

bb5:                                              ; preds = %entry, %bb4
  %22 = load %4** %ptr, align 8, !dbg !5829
  %23 = icmp ne %4* %22, null, !dbg !5829
  br i1 %23, label %bb2, label %bb6, !dbg !5829

bb6:                                              ; preds = %bb5, %bb3, %bb
  %24 = load %4** %stream_addr, align 8, !dbg !5830
  %25 = getelementptr inbounds %4* %24, i32 0, i32 0, !dbg !5830
  %26 = load i16* %25, align 8, !dbg !5830
  %27 = zext i16 %26 to i32, !dbg !5830
  %28 = and i32 %27, 64, !dbg !5830
  %29 = icmp ne i32 %28, 0, !dbg !5830
  br i1 %29, label %bb7, label %bb8, !dbg !5830

bb7:                                              ; preds = %bb6
  %30 = load %4** %stream_addr, align 8, !dbg !5831
  %31 = call i32 @fflush_unlocked(%4* %30) nounwind, !dbg !5831
  store i32 %31, i32* %rv, align 4, !dbg !5831
  br label %bb8, !dbg !5831

bb8:                                              ; preds = %bb7, %bb6
  %32 = load %4** %stream_addr, align 8, !dbg !5832
  %33 = getelementptr inbounds %4* %32, i32 0, i32 2, !dbg !5832
  %34 = load i32* %33, align 4, !dbg !5832
  %35 = call i32 @close(i32 %34) nounwind, !dbg !5832
  %36 = icmp slt i32 %35, 0, !dbg !5832
  br i1 %36, label %bb9, label %bb10, !dbg !5832

bb9:                                              ; preds = %bb8
  store i32 -1, i32* %rv, align 4, !dbg !5833
  br label %bb10, !dbg !5833

bb10:                                             ; preds = %bb9, %bb8
  %37 = load %4** %stream_addr, align 8, !dbg !5834
  %38 = getelementptr inbounds %4* %37, i32 0, i32 2, !dbg !5834
  store i32 -1, i32* %38, align 4, !dbg !5834
  %39 = load %4** %stream_addr, align 8, !dbg !5835
  %40 = getelementptr inbounds %4* %39, i32 0, i32 0, !dbg !5835
  %41 = load i16* %40, align 8, !dbg !5835
  %42 = and i16 %41, 24576, !dbg !5835
  %43 = load %4** %stream_addr, align 8, !dbg !5835
  %44 = getelementptr inbounds %4* %43, i32 0, i32 0, !dbg !5835
  store i16 %42, i16* %44, align 8, !dbg !5835
  %45 = load %4** %stream_addr, align 8, !dbg !5836
  %46 = getelementptr inbounds %4* %45, i32 0, i32 0, !dbg !5836
  %47 = load i16* %46, align 8, !dbg !5836
  %48 = or i16 %47, 48, !dbg !5836
  %49 = load %4** %stream_addr, align 8, !dbg !5836
  %50 = getelementptr inbounds %4* %49, i32 0, i32 0, !dbg !5836
  store i16 %48, i16* %50, align 8, !dbg !5836
  %51 = load %4** %stream_addr, align 8, !dbg !5837
  %52 = getelementptr inbounds %4* %51, i32 0, i32 0, !dbg !5837
  %53 = load i16* %52, align 8, !dbg !5837
  %54 = zext i16 %53 to i32, !dbg !5837
  %55 = and i32 %54, 16384, !dbg !5837
  %56 = icmp ne i32 %55, 0, !dbg !5837
  br i1 %56, label %bb11, label %bb12, !dbg !5837

bb11:                                             ; preds = %bb10
  %57 = load %4** %stream_addr, align 8, !dbg !5837
  %58 = getelementptr inbounds %4* %57, i32 0, i32 3, !dbg !5837
  %59 = load i8** %58, align 8, !dbg !5837
  call void @free(i8* %59) nounwind, !dbg !5837
  br label %bb12, !dbg !5837

bb12:                                             ; preds = %bb11, %bb10
  %60 = load %4** %stream_addr, align 8, !dbg !5838
  %61 = getelementptr inbounds %4* %60, i32 0, i32 0, !dbg !5838
  %62 = load i16* %61, align 8, !dbg !5838
  %63 = zext i16 %62 to i32, !dbg !5838
  %64 = and i32 %63, 8192, !dbg !5838
  %65 = icmp ne i32 %64, 0, !dbg !5838
  br i1 %65, label %bb13, label %bb14, !dbg !5838

bb13:                                             ; preds = %bb12
  %66 = load %4** %stream_addr, align 8, !dbg !5838
  %67 = bitcast %4* %66 to i8*, !dbg !5838
  call void @free(i8* %67) nounwind, !dbg !5838
  br label %bb14, !dbg !5838

bb14:                                             ; preds = %bb13, %bb12
  %68 = load i32* %rv, align 4, !dbg !5839
  store i32 %68, i32* %0, align 4, !dbg !5839
  %69 = load i32* %0, align 4, !dbg !5839
  store i32 %69, i32* %retval, align 4, !dbg !5839
  %retval15 = load i32* %retval, !dbg !5839
  ret i32 %retval15, !dbg !5839
}

define %4* @fdopen(i32 %filedes, i8* %mode) nounwind {
entry:
  %filedes_addr = alloca i32, align 4
  %mode_addr = alloca i8*, align 8
  %retval = alloca %4*
  %iftmp.0 = alloca %4*
  %0 = alloca %4*
  %cur_mode = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %filedes, i32* %filedes_addr
  store i8* %mode, i8** %mode_addr
  %1 = load i32* %filedes_addr, align 4, !dbg !5840
  %2 = call i32 (i32, i32, ...)* @fcntl(i32 %1, i32 3) nounwind, !dbg !5840
  %3 = sext i32 %2 to i64, !dbg !5840
  store i64 %3, i64* %cur_mode, align 8, !dbg !5840
  %4 = load i64* %cur_mode, align 8, !dbg !5840
  %5 = icmp ne i64 %4, -1, !dbg !5840
  br i1 %5, label %bb, label %bb1, !dbg !5840

bb:                                               ; preds = %entry
  %6 = load i64* %cur_mode, align 8, !dbg !5840
  %7 = load i8** %mode_addr, align 8, !dbg !5840
  %8 = load i32* %filedes_addr, align 4, !dbg !5840
  %9 = call %4* @_stdio_fopen(i64 %6, i8* noalias %7, %4* noalias null, i32 %8) nounwind, !dbg !5840
  store %4* %9, %4** %iftmp.0, align 8, !dbg !5840
  br label %bb2, !dbg !5840

bb1:                                              ; preds = %entry
  store %4* null, %4** %iftmp.0, align 8, !dbg !5840
  br label %bb2, !dbg !5840

bb2:                                              ; preds = %bb1, %bb
  %10 = load %4** %iftmp.0, align 8, !dbg !5840
  store %4* %10, %4** %0, align 8, !dbg !5840
  %11 = load %4** %0, align 8, !dbg !5840
  store %4* %11, %4** %retval, align 8, !dbg !5840
  %retval3 = load %4** %retval, !dbg !5840
  ret %4* %retval3, !dbg !5840
}

define i32 @ferror_unlocked(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5842
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !5842
  %3 = load i16* %2, align 8, !dbg !5842
  %4 = zext i16 %3 to i32, !dbg !5842
  %5 = and i32 %4, 8, !dbg !5842
  store i32 %5, i32* %0, align 4, !dbg !5842
  %6 = load i32* %0, align 4, !dbg !5842
  store i32 %6, i32* %retval, align 4, !dbg !5842
  %retval1 = load i32* %retval, !dbg !5842
  ret i32 %retval1, !dbg !5842
}

define i32 @fflush_unlocked(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %retval1 = alloca i32
  %bufmask = alloca i16
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 0, i32* %retval1, align 4, !dbg !5844
  store i16 256, i16* %bufmask, align 2, !dbg !5846
  %1 = load %4** %stream_addr, align 8, !dbg !5847
  %2 = icmp eq %4* %1, bitcast (%4** @_stdio_openlist to %4*), !dbg !5847
  br i1 %2, label %bb, label %bb2, !dbg !5847

bb:                                               ; preds = %entry
  store %4* null, %4** %stream_addr, align 8, !dbg !5848
  store i16 0, i16* %bufmask, align 2, !dbg !5849
  br label %bb2, !dbg !5849

bb2:                                              ; preds = %bb, %entry
  %3 = load %4** %stream_addr, align 8, !dbg !5850
  %4 = icmp eq %4* %3, null, !dbg !5850
  br i1 %4, label %bb3, label %bb12, !dbg !5850

bb3:                                              ; preds = %bb2
  %5 = load %4** @_stdio_openlist, align 8, !dbg !5851
  store %4* %5, %4** %stream_addr, align 8, !dbg !5851
  br label %bb10, !dbg !5851

bb4:                                              ; preds = %bb10
  %6 = load %4** %stream_addr, align 8, !dbg !5852
  %7 = getelementptr inbounds %4* %6, i32 0, i32 0, !dbg !5852
  %8 = load i16* %7, align 8, !dbg !5852
  %9 = zext i16 %8 to i32, !dbg !5852
  %10 = and i32 %9, 64, !dbg !5852
  %11 = icmp ne i32 %10, 0, !dbg !5852
  br i1 %11, label %bb5, label %bb9, !dbg !5852

bb5:                                              ; preds = %bb4
  %12 = load %4** %stream_addr, align 8, !dbg !5853
  %13 = getelementptr inbounds %4* %12, i32 0, i32 0, !dbg !5853
  %14 = load i16* %13, align 8, !dbg !5853
  %15 = load i16* %bufmask, align 2, !dbg !5853
  %16 = or i16 %14, %15, !dbg !5853
  %17 = xor i16 %16, 320, !dbg !5853
  %18 = zext i16 %17 to i32, !dbg !5853
  %19 = and i32 %18, 832, !dbg !5853
  %20 = icmp eq i32 %19, 0, !dbg !5853
  br i1 %20, label %bb6, label %bb9, !dbg !5853

bb6:                                              ; preds = %bb5
  %21 = load %4** %stream_addr, align 8, !dbg !5854
  %22 = call i64 @__stdio_wcommit(%4* noalias %21) nounwind, !dbg !5854
  %23 = icmp eq i64 %22, 0, !dbg !5854
  br i1 %23, label %bb7, label %bb8, !dbg !5854

bb7:                                              ; preds = %bb6
  %24 = load %4** %stream_addr, align 8, !dbg !5855
  %25 = getelementptr inbounds %4* %24, i32 0, i32 3, !dbg !5855
  %26 = load i8** %25, align 8, !dbg !5855
  %27 = load %4** %stream_addr, align 8, !dbg !5855
  %28 = getelementptr inbounds %4* %27, i32 0, i32 8, !dbg !5855
  store i8* %26, i8** %28, align 8, !dbg !5855
  %29 = load %4** %stream_addr, align 8, !dbg !5856
  %30 = getelementptr inbounds %4* %29, i32 0, i32 0, !dbg !5856
  %31 = load i16* %30, align 8, !dbg !5856
  %32 = and i16 %31, -65, !dbg !5856
  %33 = load %4** %stream_addr, align 8, !dbg !5856
  %34 = getelementptr inbounds %4* %33, i32 0, i32 0, !dbg !5856
  store i16 %32, i16* %34, align 8, !dbg !5856
  br label %bb9, !dbg !5856

bb8:                                              ; preds = %bb6
  store i32 -1, i32* %retval1, align 4, !dbg !5857
  br label %bb9, !dbg !5857

bb9:                                              ; preds = %bb8, %bb7, %bb5, %bb4
  %35 = load %4** %stream_addr, align 8, !dbg !5858
  %36 = getelementptr inbounds %4* %35, i32 0, i32 9, !dbg !5858
  %37 = load %4** %36, align 8, !dbg !5858
  store %4* %37, %4** %stream_addr, align 8, !dbg !5858
  br label %bb10, !dbg !5858

bb10:                                             ; preds = %bb9, %bb3
  %38 = load %4** %stream_addr, align 8, !dbg !5859
  %39 = icmp ne %4* %38, null, !dbg !5859
  br i1 %39, label %bb4, label %bb16, !dbg !5859

bb12:                                             ; preds = %bb2
  %40 = load %4** %stream_addr, align 8, !dbg !5860
  %41 = getelementptr inbounds %4* %40, i32 0, i32 0, !dbg !5860
  %42 = load i16* %41, align 8, !dbg !5860
  %43 = zext i16 %42 to i32, !dbg !5860
  %44 = and i32 %43, 64, !dbg !5860
  %45 = icmp ne i32 %44, 0, !dbg !5860
  br i1 %45, label %bb13, label %bb16, !dbg !5860

bb13:                                             ; preds = %bb12
  %46 = load %4** %stream_addr, align 8, !dbg !5861
  %47 = call i64 @__stdio_wcommit(%4* noalias %46) nounwind, !dbg !5861
  %48 = icmp eq i64 %47, 0, !dbg !5861
  br i1 %48, label %bb14, label %bb15, !dbg !5861

bb14:                                             ; preds = %bb13
  %49 = load %4** %stream_addr, align 8, !dbg !5862
  %50 = getelementptr inbounds %4* %49, i32 0, i32 3, !dbg !5862
  %51 = load i8** %50, align 8, !dbg !5862
  %52 = load %4** %stream_addr, align 8, !dbg !5862
  %53 = getelementptr inbounds %4* %52, i32 0, i32 8, !dbg !5862
  store i8* %51, i8** %53, align 8, !dbg !5862
  %54 = load %4** %stream_addr, align 8, !dbg !5863
  %55 = getelementptr inbounds %4* %54, i32 0, i32 0, !dbg !5863
  %56 = load i16* %55, align 8, !dbg !5863
  %57 = and i16 %56, -65, !dbg !5863
  %58 = load %4** %stream_addr, align 8, !dbg !5863
  %59 = getelementptr inbounds %4* %58, i32 0, i32 0, !dbg !5863
  store i16 %57, i16* %59, align 8, !dbg !5863
  br label %bb16, !dbg !5863

bb15:                                             ; preds = %bb13
  store i32 -1, i32* %retval1, align 4, !dbg !5864
  br label %bb16, !dbg !5864

bb16:                                             ; preds = %bb10, %bb15, %bb14, %bb12
  %60 = load i32* %retval1, align 4, !dbg !5865
  store i32 %60, i32* %0, align 4, !dbg !5865
  %61 = load i32* %0, align 4, !dbg !5865
  store i32 %61, i32* %retval, align 4, !dbg !5865
  %retval17 = load i32* %retval, !dbg !5865
  ret i32 %retval17, !dbg !5865
}

define i32 @fileno_unlocked(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5866
  %2 = getelementptr inbounds %4* %1, i32 0, i32 2, !dbg !5866
  %3 = load i32* %2, align 4, !dbg !5866
  %4 = icmp sge i32 %3, 0, !dbg !5866
  br i1 %4, label %bb, label %bb1, !dbg !5866

bb:                                               ; preds = %entry
  %5 = load %4** %stream_addr, align 8, !dbg !5868
  %6 = getelementptr inbounds %4* %5, i32 0, i32 2, !dbg !5868
  %7 = load i32* %6, align 4, !dbg !5868
  store i32 %7, i32* %0, align 4, !dbg !5868
  br label %bb2, !dbg !5868

bb1:                                              ; preds = %entry
  store i32 9, i32* @errno, align 4, !dbg !5869
  store i32 -1, i32* %0, align 4, !dbg !5870
  br label %bb2, !dbg !5870

bb2:                                              ; preds = %bb1, %bb
  %8 = load i32* %0, align 4, !dbg !5868
  store i32 %8, i32* %retval, align 4, !dbg !5868
  %retval3 = load i32* %retval, !dbg !5868
  ret i32 %retval3, !dbg !5868
}

define i32 @fprintf(%4* noalias %stream, i8* noalias %format, ...) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %format_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %arg = alloca [1 x %struct.__va_list_tag]
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %format, i8** %format_addr
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5871
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*, !dbg !5871
  call void @llvm.va_start(i8* %arg12), !dbg !5871
  %1 = load %4** @stdout, align 8, !dbg !5873
  %2 = load %4** %stream_addr, align 8, !dbg !5873
  %3 = icmp eq %4* %2, %1, !dbg !5873
  br i1 %3, label %bb3, label %bb, !dbg !5873

bb:                                               ; preds = %entry
  %4 = load %4** @stderr, align 8, !dbg !5873
  %5 = load %4** %stream_addr, align 8, !dbg !5873
  %6 = icmp eq %4* %5, %4, !dbg !5873
  br i1 %6, label %bb3, label %bb5, !dbg !5873

bb3:                                              ; preds = %bb, %entry
  %7 = load i8** %format_addr, align 8, !dbg !5874
  %arg4 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5874
  %8 = call i32 @vprintf(i8* noalias %7, %struct.__va_list_tag* %arg4) nounwind, !dbg !5874
  store i32 %8, i32* %rv, align 4, !dbg !5874
  br label %bb7, !dbg !5874

bb5:                                              ; preds = %bb
  %9 = load %4** %stream_addr, align 8, !dbg !5875
  %10 = load i8** %format_addr, align 8, !dbg !5875
  %arg6 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5875
  %11 = call i32 @vfprintf(%4* noalias %9, i8* noalias %10, %struct.__va_list_tag* %arg6) nounwind, !dbg !5875
  store i32 %11, i32* %rv, align 4, !dbg !5875
  br label %bb7, !dbg !5875

bb7:                                              ; preds = %bb5, %bb3
  %arg8 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5876
  %arg89 = bitcast %struct.__va_list_tag* %arg8 to i8*, !dbg !5876
  call void @llvm.va_end(i8* %arg89), !dbg !5876
  %12 = load i32* %rv, align 4, !dbg !5877
  store i32 %12, i32* %0, align 4, !dbg !5877
  %13 = load i32* %0, align 4, !dbg !5877
  store i32 %13, i32* %retval, align 4, !dbg !5877
  %retval10 = load i32* %retval, !dbg !5877
  ret i32 %retval10, !dbg !5877
}

declare i32 @vprintf(i8* noalias, %struct.__va_list_tag*)

define i32 @fputs_unlocked(i8* noalias %s, %4* noalias %stream) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %n = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store %4* %stream, %4** %stream_addr
  %1 = load i8** %s_addr, align 8, !dbg !5878
  %2 = call i64 @strlen(i8* %1) nounwind readonly, !dbg !5878
  store i64 %2, i64* %n, align 8, !dbg !5878
  %3 = load i8** %s_addr, align 8, !dbg !5880
  %4 = load i64* %n, align 8, !dbg !5880
  %5 = load %4** %stream_addr, align 8, !dbg !5880
  %6 = call i64 @fwrite_unlocked(i8* noalias %3, i64 1, i64 %4, %4* noalias %5) nounwind, !dbg !5880
  %7 = load i64* %n, align 8, !dbg !5880
  %8 = icmp eq i64 %6, %7, !dbg !5880
  br i1 %8, label %bb, label %bb1, !dbg !5880

bb:                                               ; preds = %entry
  %9 = load i64* %n, align 8, !dbg !5880
  %10 = trunc i64 %9 to i32, !dbg !5880
  store i32 %10, i32* %iftmp.0, align 4, !dbg !5880
  br label %bb2, !dbg !5880

bb1:                                              ; preds = %entry
  store i32 -1, i32* %iftmp.0, align 4, !dbg !5880
  br label %bb2, !dbg !5880

bb2:                                              ; preds = %bb1, %bb
  %11 = load i32* %iftmp.0, align 4, !dbg !5880
  store i32 %11, i32* %0, align 4, !dbg !5880
  %12 = load i32* %0, align 4, !dbg !5880
  store i32 %12, i32* %retval, align 4, !dbg !5880
  %retval3 = load i32* %retval, !dbg !5880
  ret i32 %retval3, !dbg !5880
}

define i32 @fscanf(%4* noalias %stream, i8* noalias %format, ...) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %format_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %arg = alloca [1 x %struct.__va_list_tag]
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %format, i8** %format_addr
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5881
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*, !dbg !5881
  call void @llvm.va_start(i8* %arg12), !dbg !5881
  %1 = load %4** %stream_addr, align 8, !dbg !5883
  %2 = load i8** %format_addr, align 8, !dbg !5883
  %arg3 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5883
  %3 = call i32 @vfscanf(%4* noalias %1, i8* noalias %2, %struct.__va_list_tag* %arg3) nounwind, !dbg !5883
  store i32 %3, i32* %rv, align 4, !dbg !5883
  %arg4 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5884
  %arg45 = bitcast %struct.__va_list_tag* %arg4 to i8*, !dbg !5884
  call void @llvm.va_end(i8* %arg45), !dbg !5884
  %4 = load i32* %rv, align 4, !dbg !5885
  store i32 %4, i32* %0, align 4, !dbg !5885
  %5 = load i32* %0, align 4, !dbg !5885
  store i32 %5, i32* %retval, align 4, !dbg !5885
  %retval6 = load i32* %retval, !dbg !5885
  ret i32 %retval6, !dbg !5885
}

define i32 @fseek(%4* %stream, i64 %offset, i32 %whence) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %offset_addr = alloca i64, align 8
  %whence_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i64 %offset, i64* %offset_addr
  store i32 %whence, i32* %whence_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5886
  %2 = load i64* %offset_addr, align 8, !dbg !5886
  %3 = load i32* %whence_addr, align 4, !dbg !5886
  %4 = call i32 @fseeko64(%4* %1, i64 %2, i32 %3) nounwind, !dbg !5886
  store i32 %4, i32* %0, align 4, !dbg !5886
  %5 = load i32* %0, align 4, !dbg !5886
  store i32 %5, i32* %retval, align 4, !dbg !5886
  %retval1 = load i32* %retval, !dbg !5886
  ret i32 %retval1, !dbg !5886
}

define i64 @fwrite_unlocked(i8* noalias %ptr, i64 %size, i64 %nmemb, %4* noalias %stream) nounwind {
entry:
  %ptr_addr = alloca i8*, align 8
  %size_addr = alloca i64, align 8
  %nmemb_addr = alloca i64, align 8
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %ptr, i8** %ptr_addr
  store i64 %size, i64* %size_addr
  store i64 %nmemb, i64* %nmemb_addr
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5888
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !5888
  %3 = load i16* %2, align 8, !dbg !5888
  %4 = zext i16 %3 to i32, !dbg !5888
  %5 = and i32 %4, 192, !dbg !5888
  %6 = icmp eq i32 %5, 192, !dbg !5888
  br i1 %6, label %bb1, label %bb, !dbg !5888

bb:                                               ; preds = %entry
  %7 = load %4** %stream_addr, align 8, !dbg !5888
  %8 = call i32 @__stdio_trans2w_o(%4* noalias %7, i32 128) nounwind, !dbg !5888
  %9 = icmp eq i32 %8, 0, !dbg !5888
  br i1 %9, label %bb1, label %bb6, !dbg !5888

bb1:                                              ; preds = %bb, %entry
  %10 = load i64* %size_addr, align 8, !dbg !5888
  %11 = icmp ne i64 %10, 0, !dbg !5888
  br i1 %11, label %bb2, label %bb6, !dbg !5888

bb2:                                              ; preds = %bb1
  %12 = load i64* %nmemb_addr, align 8, !dbg !5888
  %13 = icmp ne i64 %12, 0, !dbg !5888
  br i1 %13, label %bb3, label %bb6, !dbg !5888

bb3:                                              ; preds = %bb2
  %14 = load i64* %size_addr, align 8, !dbg !5890
  %int_cast_to_i64 = bitcast i64 %14 to i64
  %15 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %16 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %16, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb3
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb3
  call void @klee_disable_symbex() nounwind
  %17 = udiv i64 -1, %14, !dbg !5890
  %18 = load i64* %nmemb_addr, align 8, !dbg !5890
  %19 = icmp uge i64 %17, %18, !dbg !5890
  br i1 %19, label %bb4, label %bb5, !dbg !5890

bb4:                                              ; preds = %klee_div_zero_check.exit
  %20 = load i64* %size_addr, align 8, !dbg !5891
  %21 = load i64* %nmemb_addr, align 8, !dbg !5891
  %22 = mul i64 %20, %21, !dbg !5891
  %23 = load i8** %ptr_addr, align 8, !dbg !5891
  %24 = load %4** %stream_addr, align 8, !dbg !5891
  %25 = call i64 @__stdio_fwrite(i8* noalias %23, i64 %22, %4* noalias %24) nounwind, !dbg !5891
  %26 = load i64* %size_addr, align 8, !dbg !5891
  %int_cast_to_i641 = bitcast i64 %26 to i64
  %27 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %28 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %28, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %bb4
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %bb4
  call void @klee_disable_symbex() nounwind
  %29 = udiv i64 %25, %26, !dbg !5891
  store i64 %29, i64* %0, align 8, !dbg !5891
  br label %bb7, !dbg !5891

bb5:                                              ; preds = %klee_div_zero_check.exit
  %30 = load %4** %stream_addr, align 8, !dbg !5892
  %31 = getelementptr inbounds %4* %30, i32 0, i32 0, !dbg !5892
  %32 = load i16* %31, align 8, !dbg !5892
  %33 = or i16 %32, 8, !dbg !5892
  %34 = load %4** %stream_addr, align 8, !dbg !5892
  %35 = getelementptr inbounds %4* %34, i32 0, i32 0, !dbg !5892
  store i16 %33, i16* %35, align 8, !dbg !5892
  store i32 22, i32* @errno, align 4, !dbg !5893
  br label %bb6, !dbg !5893

bb6:                                              ; preds = %bb5, %bb2, %bb1, %bb
  store i64 0, i64* %0, align 8, !dbg !5894
  br label %bb7, !dbg !5894

bb7:                                              ; preds = %bb6, %klee_div_zero_check.exit3
  %36 = load i64* %0, align 8, !dbg !5891
  store i64 %36, i64* %retval, align 8, !dbg !5891
  %retval8 = load i64* %retval, !dbg !5891
  ret i64 %retval8, !dbg !5891
}

define i32 @ungetc(i32 %c, %4* %stream) nounwind {
entry:
  %c_addr = alloca i32, align 4
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5895
  %2 = getelementptr inbounds %4* %1, i32 0, i32 5, !dbg !5895
  %3 = load i8** %2, align 8, !dbg !5895
  %4 = load %4** %stream_addr, align 8, !dbg !5895
  %5 = getelementptr inbounds %4* %4, i32 0, i32 7, !dbg !5895
  %6 = load i8** %5, align 8, !dbg !5895
  %7 = icmp uge i8* %3, %6, !dbg !5895
  br i1 %7, label %bb4, label %bb, !dbg !5895

bb:                                               ; preds = %entry
  %8 = load i32* %c_addr, align 4, !dbg !5895
  %9 = icmp eq i32 %8, -1, !dbg !5895
  br i1 %9, label %bb4, label %bb1, !dbg !5895

bb1:                                              ; preds = %bb
  %10 = load %4** %stream_addr, align 8, !dbg !5895
  %11 = getelementptr inbounds %4* %10, i32 0, i32 5, !dbg !5895
  %12 = load i8** %11, align 8, !dbg !5895
  %13 = load %4** %stream_addr, align 8, !dbg !5895
  %14 = getelementptr inbounds %4* %13, i32 0, i32 3, !dbg !5895
  %15 = load i8** %14, align 8, !dbg !5895
  %16 = icmp ule i8* %12, %15, !dbg !5895
  br i1 %16, label %bb4, label %bb2, !dbg !5895

bb2:                                              ; preds = %bb1
  %17 = load %4** %stream_addr, align 8, !dbg !5895
  %18 = getelementptr inbounds %4* %17, i32 0, i32 5, !dbg !5895
  %19 = load i8** %18, align 8, !dbg !5895
  %20 = getelementptr inbounds i8* %19, i64 -1, !dbg !5895
  %21 = load i8* %20, align 1, !dbg !5895
  %22 = load i32* %c_addr, align 4, !dbg !5895
  %23 = trunc i32 %22 to i8, !dbg !5895
  %24 = icmp ne i8 %21, %23, !dbg !5895
  br i1 %24, label %bb4, label %bb3, !dbg !5895

bb3:                                              ; preds = %bb2
  %25 = load %4** %stream_addr, align 8, !dbg !5897
  %26 = getelementptr inbounds %4* %25, i32 0, i32 5, !dbg !5897
  %27 = load i8** %26, align 8, !dbg !5897
  %28 = getelementptr inbounds i8* %27, i64 -1, !dbg !5897
  %29 = load %4** %stream_addr, align 8, !dbg !5897
  %30 = getelementptr inbounds %4* %29, i32 0, i32 5, !dbg !5897
  store i8* %28, i8** %30, align 8, !dbg !5897
  %31 = load %4** %stream_addr, align 8, !dbg !5898
  %32 = getelementptr inbounds %4* %31, i32 0, i32 0, !dbg !5898
  %33 = load i16* %32, align 8, !dbg !5898
  %34 = and i16 %33, -5, !dbg !5898
  %35 = load %4** %stream_addr, align 8, !dbg !5898
  %36 = getelementptr inbounds %4* %35, i32 0, i32 0, !dbg !5898
  store i16 %34, i16* %36, align 8, !dbg !5898
  br label %bb12, !dbg !5898

bb4:                                              ; preds = %bb2, %bb1, %bb, %entry
  %37 = load %4** %stream_addr, align 8, !dbg !5899
  %38 = getelementptr inbounds %4* %37, i32 0, i32 0, !dbg !5899
  %39 = load i16* %38, align 8, !dbg !5899
  %40 = zext i16 %39 to i32, !dbg !5899
  %41 = and i32 %40, 131, !dbg !5899
  %42 = icmp ugt i32 %41, 128, !dbg !5899
  br i1 %42, label %bb6, label %bb5, !dbg !5899

bb5:                                              ; preds = %bb4
  %43 = load %4** %stream_addr, align 8, !dbg !5899
  %44 = call i32 @__stdio_trans2r_o(%4* noalias %43, i32 128) nounwind, !dbg !5899
  %45 = icmp ne i32 %44, 0, !dbg !5899
  br i1 %45, label %bb9, label %bb6, !dbg !5899

bb6:                                              ; preds = %bb5, %bb4
  %46 = load %4** %stream_addr, align 8, !dbg !5899
  %47 = getelementptr inbounds %4* %46, i32 0, i32 0, !dbg !5899
  %48 = load i16* %47, align 8, !dbg !5899
  %49 = zext i16 %48 to i32, !dbg !5899
  %50 = and i32 %49, 2, !dbg !5899
  %51 = icmp eq i32 %50, 0, !dbg !5899
  br i1 %51, label %bb10, label %bb7, !dbg !5899

bb7:                                              ; preds = %bb6
  %52 = load %4** %stream_addr, align 8, !dbg !5899
  %53 = getelementptr inbounds %4* %52, i32 0, i32 0, !dbg !5899
  %54 = load i16* %53, align 8, !dbg !5899
  %55 = zext i16 %54 to i32, !dbg !5899
  %56 = and i32 %55, 1, !dbg !5899
  %57 = trunc i32 %56 to i8, !dbg !5899
  %toBool = icmp ne i8 %57, 0, !dbg !5899
  br i1 %toBool, label %bb9, label %bb8, !dbg !5899

bb8:                                              ; preds = %bb7
  %58 = load %4** %stream_addr, align 8, !dbg !5899
  %59 = getelementptr inbounds %4* %58, i32 0, i32 10, !dbg !5899
  %60 = getelementptr inbounds [2 x i32]* %59, i64 0, i64 1, !dbg !5899
  %61 = load i32* %60, align 4, !dbg !5899
  %62 = icmp ne i32 %61, 0, !dbg !5899
  br i1 %62, label %bb9, label %bb10, !dbg !5899

bb9:                                              ; preds = %bb8, %bb7, %bb5
  store i32 -1, i32* %c_addr, align 4, !dbg !5900
  br label %bb12, !dbg !5900

bb10:                                             ; preds = %bb8, %bb6
  %63 = load i32* %c_addr, align 4, !dbg !5901
  %64 = icmp ne i32 %63, -1, !dbg !5901
  br i1 %64, label %bb11, label %bb12, !dbg !5901

bb11:                                             ; preds = %bb10
  %65 = load %4** %stream_addr, align 8, !dbg !5902
  %66 = getelementptr inbounds %4* %65, i32 0, i32 3, !dbg !5902
  %67 = load i8** %66, align 8, !dbg !5902
  %68 = load %4** %stream_addr, align 8, !dbg !5902
  %69 = getelementptr inbounds %4* %68, i32 0, i32 7, !dbg !5902
  store i8* %67, i8** %69, align 8, !dbg !5902
  %70 = load %4** %stream_addr, align 8, !dbg !5903
  %71 = getelementptr inbounds %4* %70, i32 0, i32 10, !dbg !5903
  %72 = getelementptr inbounds [2 x i32]* %71, i64 0, i64 1, !dbg !5903
  store i32 1, i32* %72, align 4, !dbg !5903
  %73 = load %4** %stream_addr, align 8, !dbg !5904
  %74 = getelementptr inbounds %4* %73, i32 0, i32 0, !dbg !5904
  %75 = load i16* %74, align 8, !dbg !5904
  %76 = add i16 %75, 1, !dbg !5904
  %77 = load %4** %stream_addr, align 8, !dbg !5904
  %78 = getelementptr inbounds %4* %77, i32 0, i32 0, !dbg !5904
  store i16 %76, i16* %78, align 8, !dbg !5904
  %79 = load %4** %stream_addr, align 8, !dbg !5904
  %80 = getelementptr inbounds %4* %79, i32 0, i32 0, !dbg !5904
  %81 = load i16* %80, align 8, !dbg !5904
  %82 = zext i16 %81 to i32, !dbg !5904
  %83 = and i32 %82, 1, !dbg !5904
  %84 = load %4** %stream_addr, align 8, !dbg !5904
  %85 = getelementptr inbounds %4* %84, i32 0, i32 10, !dbg !5904
  %86 = sext i32 %83 to i64, !dbg !5904
  %87 = getelementptr inbounds [2 x i32]* %85, i64 0, i64 %86, !dbg !5904
  %88 = load i32* %c_addr, align 4, !dbg !5904
  store i32 %88, i32* %87, align 4, !dbg !5904
  %89 = load %4** %stream_addr, align 8, !dbg !5905
  %90 = getelementptr inbounds %4* %89, i32 0, i32 0, !dbg !5905
  %91 = load i16* %90, align 8, !dbg !5905
  %92 = and i16 %91, -5, !dbg !5905
  %93 = load %4** %stream_addr, align 8, !dbg !5905
  %94 = getelementptr inbounds %4* %93, i32 0, i32 0, !dbg !5905
  store i16 %92, i16* %94, align 8, !dbg !5905
  br label %bb12, !dbg !5905

bb12:                                             ; preds = %bb11, %bb10, %bb9, %bb3
  %95 = load i32* %c_addr, align 4, !dbg !5906
  store i32 %95, i32* %0, align 4, !dbg !5906
  %96 = load i32* %0, align 4, !dbg !5906
  store i32 %96, i32* %retval, align 4, !dbg !5906
  %retval13 = load i32* %retval, !dbg !5906
  ret i32 %retval13, !dbg !5906
}

define i8* @getenv(i8* %var) nounwind {
entry:
  %var_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %len = alloca i32
  %ep = alloca i8**
  %"alloca point" = bitcast i32 0 to i32
  store i8* %var, i8** %var_addr
  %1 = load i8*** @__environ, align 8, !dbg !5907
  store i8** %1, i8*** %ep, align 8, !dbg !5907
  %2 = load i8*** %ep, align 8, !dbg !5907
  %3 = icmp eq i8** %2, null, !dbg !5907
  br i1 %3, label %bb, label %bb1, !dbg !5907

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8, !dbg !5909
  br label %bb8, !dbg !5909

bb1:                                              ; preds = %entry
  %4 = load i8** %var_addr, align 8, !dbg !5910
  %5 = call i64 @strlen(i8* %4) nounwind readonly, !dbg !5910
  %6 = trunc i64 %5 to i32, !dbg !5910
  store i32 %6, i32* %len, align 4, !dbg !5910
  br label %bb6, !dbg !5910

bb2:                                              ; preds = %bb6
  %7 = load i32* %len, align 4, !dbg !5911
  %8 = sext i32 %7 to i64, !dbg !5911
  %9 = load i8*** %ep, align 8, !dbg !5911
  %10 = load i8** %9, align 8, !dbg !5911
  %11 = load i8** %var_addr, align 8, !dbg !5911
  %12 = call i32 @memcmp(i8* %11, i8* %10, i64 %8) nounwind readonly, !dbg !5911
  %13 = icmp eq i32 %12, 0, !dbg !5911
  br i1 %13, label %bb3, label %bb5, !dbg !5911

bb3:                                              ; preds = %bb2
  %14 = load i8*** %ep, align 8, !dbg !5911
  %15 = load i8** %14, align 8, !dbg !5911
  %16 = load i32* %len, align 4, !dbg !5911
  %17 = sext i32 %16 to i64, !dbg !5911
  %18 = getelementptr inbounds i8* %15, i64 %17, !dbg !5911
  %19 = load i8* %18, align 1, !dbg !5911
  %20 = icmp eq i8 %19, 61, !dbg !5911
  br i1 %20, label %bb4, label %bb5, !dbg !5911

bb4:                                              ; preds = %bb3
  %21 = load i8*** %ep, align 8, !dbg !5912
  %22 = load i8** %21, align 8, !dbg !5912
  %23 = load i32* %len, align 4, !dbg !5912
  %24 = sext i32 %23 to i64, !dbg !5912
  %25 = getelementptr inbounds i8* %22, i64 %24, !dbg !5912
  %26 = getelementptr inbounds i8* %25, i64 1, !dbg !5912
  store i8* %26, i8** %0, align 8, !dbg !5912
  br label %bb8, !dbg !5912

bb5:                                              ; preds = %bb3, %bb2
  %27 = load i8*** %ep, align 8, !dbg !5913
  %28 = getelementptr inbounds i8** %27, i64 1, !dbg !5913
  store i8** %28, i8*** %ep, align 8, !dbg !5913
  br label %bb6, !dbg !5913

bb6:                                              ; preds = %bb5, %bb1
  %29 = load i8*** %ep, align 8, !dbg !5914
  %30 = load i8** %29, align 8, !dbg !5914
  %31 = icmp ne i8* %30, null, !dbg !5914
  br i1 %31, label %bb2, label %bb7, !dbg !5914

bb7:                                              ; preds = %bb6
  store i8* null, i8** %0, align 8, !dbg !5915
  br label %bb8, !dbg !5915

bb8:                                              ; preds = %bb7, %bb4, %bb
  %32 = load i8** %0, align 8, !dbg !5909
  store i8* %32, i8** %retval, align 8, !dbg !5909
  %retval9 = load i8** %retval, !dbg !5909
  ret i8* %retval9, !dbg !5909
}

define internal void @exchange(i8** %argv, %struct._getopt_data* %d) nounwind {
entry:
  %argv_addr = alloca i8**, align 8
  %d_addr = alloca %struct._getopt_data*, align 8
  %bottom = alloca i32
  %middle = alloca i32
  %top = alloca i32
  %tem = alloca i8*
  %len = alloca i32
  %i = alloca i32
  %len6 = alloca i32
  %i7 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8** %argv, i8*** %argv_addr
  store %struct._getopt_data* %d, %struct._getopt_data** %d_addr
  %0 = load %struct._getopt_data** %d_addr, align 8, !dbg !5916
  %1 = getelementptr inbounds %struct._getopt_data* %0, i32 0, i32 8, !dbg !5916
  %2 = load i32* %1, align 8, !dbg !5916
  store i32 %2, i32* %bottom, align 4, !dbg !5916
  %3 = load %struct._getopt_data** %d_addr, align 8, !dbg !5918
  %4 = getelementptr inbounds %struct._getopt_data* %3, i32 0, i32 9, !dbg !5918
  %5 = load i32* %4, align 4, !dbg !5918
  store i32 %5, i32* %middle, align 4, !dbg !5918
  %6 = load %struct._getopt_data** %d_addr, align 8, !dbg !5919
  %7 = getelementptr inbounds %struct._getopt_data* %6, i32 0, i32 0, !dbg !5919
  %8 = load i32* %7, align 8, !dbg !5919
  store i32 %8, i32* %top, align 4, !dbg !5919
  br label %bb11, !dbg !5919

bb:                                               ; preds = %bb12
  %9 = load i32* %top, align 4, !dbg !5920
  %10 = load i32* %middle, align 4, !dbg !5920
  %11 = sub nsw i32 %9, %10, !dbg !5920
  %12 = load i32* %middle, align 4, !dbg !5920
  %13 = load i32* %bottom, align 4, !dbg !5920
  %14 = sub nsw i32 %12, %13, !dbg !5920
  %15 = icmp sgt i32 %11, %14, !dbg !5920
  br i1 %15, label %bb1, label %bb5, !dbg !5920

bb1:                                              ; preds = %bb
  %16 = load i32* %middle, align 4, !dbg !5921
  %17 = load i32* %bottom, align 4, !dbg !5921
  %18 = sub nsw i32 %16, %17, !dbg !5921
  store i32 %18, i32* %len, align 4, !dbg !5921
  store i32 0, i32* %i, align 4, !dbg !5923
  br label %bb3, !dbg !5923

bb2:                                              ; preds = %bb3
  %19 = load i32* %bottom, align 4, !dbg !5924
  %20 = load i32* %i, align 4, !dbg !5924
  %21 = add nsw i32 %19, %20, !dbg !5924
  %22 = load i8*** %argv_addr, align 8, !dbg !5924
  %23 = sext i32 %21 to i64, !dbg !5924
  %24 = getelementptr inbounds i8** %22, i64 %23, !dbg !5924
  %25 = load i8** %24, align 1, !dbg !5924
  store i8* %25, i8** %tem, align 8, !dbg !5924
  %26 = load i32* %bottom, align 4, !dbg !5925
  %27 = load i32* %i, align 4, !dbg !5925
  %28 = add nsw i32 %26, %27, !dbg !5925
  %29 = load i32* %middle, align 4, !dbg !5925
  %30 = load i32* %bottom, align 4, !dbg !5925
  %31 = sub nsw i32 %29, %30, !dbg !5925
  %32 = load i32* %top, align 4, !dbg !5925
  %33 = sub nsw i32 %32, %31, !dbg !5925
  %34 = load i32* %i, align 4, !dbg !5925
  %35 = add nsw i32 %33, %34, !dbg !5925
  %36 = load i8*** %argv_addr, align 8, !dbg !5925
  %37 = sext i32 %35 to i64, !dbg !5925
  %38 = getelementptr inbounds i8** %36, i64 %37, !dbg !5925
  %39 = load i8** %38, align 1, !dbg !5925
  %40 = load i8*** %argv_addr, align 8, !dbg !5925
  %41 = sext i32 %28 to i64, !dbg !5925
  %42 = getelementptr inbounds i8** %40, i64 %41, !dbg !5925
  store i8* %39, i8** %42, align 1, !dbg !5925
  %43 = load i32* %middle, align 4, !dbg !5926
  %44 = load i32* %bottom, align 4, !dbg !5926
  %45 = sub nsw i32 %43, %44, !dbg !5926
  %46 = load i32* %top, align 4, !dbg !5926
  %47 = sub nsw i32 %46, %45, !dbg !5926
  %48 = load i32* %i, align 4, !dbg !5926
  %49 = add nsw i32 %47, %48, !dbg !5926
  %50 = load i8*** %argv_addr, align 8, !dbg !5926
  %51 = sext i32 %49 to i64, !dbg !5926
  %52 = getelementptr inbounds i8** %50, i64 %51, !dbg !5926
  %53 = load i8** %tem, align 8, !dbg !5926
  store i8* %53, i8** %52, align 1, !dbg !5926
  %54 = load i32* %i, align 4, !dbg !5923
  %55 = add nsw i32 %54, 1, !dbg !5923
  store i32 %55, i32* %i, align 4, !dbg !5923
  br label %bb3, !dbg !5923

bb3:                                              ; preds = %bb2, %bb1
  %56 = load i32* %i, align 4, !dbg !5923
  %57 = load i32* %len, align 4, !dbg !5923
  %58 = icmp slt i32 %56, %57, !dbg !5923
  br i1 %58, label %bb2, label %bb4, !dbg !5923

bb4:                                              ; preds = %bb3
  %59 = load i32* %top, align 4, !dbg !5927
  %60 = load i32* %len, align 4, !dbg !5927
  %61 = sub nsw i32 %59, %60, !dbg !5927
  store i32 %61, i32* %top, align 4, !dbg !5927
  br label %bb11, !dbg !5927

bb5:                                              ; preds = %bb
  %62 = load i32* %top, align 4, !dbg !5928
  %63 = load i32* %middle, align 4, !dbg !5928
  %64 = sub nsw i32 %62, %63, !dbg !5928
  store i32 %64, i32* %len6, align 4, !dbg !5928
  store i32 0, i32* %i7, align 4, !dbg !5930
  br label %bb9, !dbg !5930

bb8:                                              ; preds = %bb9
  %65 = load i32* %i7, align 4, !dbg !5931
  %66 = add nsw i32 %96, %65, !dbg !5931
  %67 = load i8*** %argv_addr, align 8, !dbg !5931
  %68 = sext i32 %66 to i64, !dbg !5931
  %69 = getelementptr inbounds i8** %67, i64 %68, !dbg !5931
  %70 = load i8** %69, align 1, !dbg !5931
  store i8* %70, i8** %tem, align 8, !dbg !5931
  %71 = load i32* %bottom, align 4, !dbg !5932
  %72 = load i32* %i7, align 4, !dbg !5932
  %73 = add nsw i32 %71, %72, !dbg !5932
  %74 = load i32* %middle, align 4, !dbg !5932
  %75 = load i32* %i7, align 4, !dbg !5932
  %76 = add nsw i32 %74, %75, !dbg !5932
  %77 = load i8*** %argv_addr, align 8, !dbg !5932
  %78 = sext i32 %76 to i64, !dbg !5932
  %79 = getelementptr inbounds i8** %77, i64 %78, !dbg !5932
  %80 = load i8** %79, align 1, !dbg !5932
  %81 = load i8*** %argv_addr, align 8, !dbg !5932
  %82 = sext i32 %73 to i64, !dbg !5932
  %83 = getelementptr inbounds i8** %81, i64 %82, !dbg !5932
  store i8* %80, i8** %83, align 1, !dbg !5932
  %84 = load i32* %middle, align 4, !dbg !5933
  %85 = load i32* %i7, align 4, !dbg !5933
  %86 = add nsw i32 %84, %85, !dbg !5933
  %87 = load i8*** %argv_addr, align 8, !dbg !5933
  %88 = sext i32 %86 to i64, !dbg !5933
  %89 = getelementptr inbounds i8** %87, i64 %88, !dbg !5933
  %90 = load i8** %tem, align 8, !dbg !5933
  store i8* %90, i8** %89, align 1, !dbg !5933
  %91 = load i32* %i7, align 4, !dbg !5930
  %92 = add nsw i32 %91, 1, !dbg !5930
  store i32 %92, i32* %i7, align 4, !dbg !5930
  br label %bb9, !dbg !5930

bb9:                                              ; preds = %bb8, %bb5
  %93 = load i32* %i7, align 4, !dbg !5930
  %94 = load i32* %len6, align 4, !dbg !5930
  %95 = icmp slt i32 %93, %94, !dbg !5930
  %96 = load i32* %bottom, align 4, !dbg !5931
  br i1 %95, label %bb8, label %bb10, !dbg !5930

bb10:                                             ; preds = %bb9
  %97 = load i32* %len6, align 4, !dbg !5934
  %98 = add nsw i32 %96, %97, !dbg !5934
  store i32 %98, i32* %bottom, align 4, !dbg !5934
  br label %bb11, !dbg !5934

bb11:                                             ; preds = %bb10, %bb4, %entry
  %99 = load i32* %top, align 4, !dbg !5935
  %100 = load i32* %middle, align 4, !dbg !5935
  %101 = icmp sle i32 %99, %100, !dbg !5935
  br i1 %101, label %bb13, label %bb12, !dbg !5935

bb12:                                             ; preds = %bb11
  %102 = load i32* %middle, align 4, !dbg !5935
  %103 = load i32* %bottom, align 4, !dbg !5935
  %104 = icmp sgt i32 %102, %103, !dbg !5935
  br i1 %104, label %bb, label %bb13, !dbg !5935

bb13:                                             ; preds = %bb12, %bb11
  %105 = load %struct._getopt_data** %d_addr, align 8, !dbg !5936
  %106 = getelementptr inbounds %struct._getopt_data* %105, i32 0, i32 8, !dbg !5936
  %107 = load i32* %106, align 8, !dbg !5936
  %108 = load %struct._getopt_data** %d_addr, align 8, !dbg !5936
  %109 = getelementptr inbounds %struct._getopt_data* %108, i32 0, i32 0, !dbg !5936
  %110 = load i32* %109, align 8, !dbg !5936
  %111 = load %struct._getopt_data** %d_addr, align 8, !dbg !5936
  %112 = getelementptr inbounds %struct._getopt_data* %111, i32 0, i32 9, !dbg !5936
  %113 = load i32* %112, align 4, !dbg !5936
  %114 = sub nsw i32 %110, %113, !dbg !5936
  %115 = add nsw i32 %107, %114, !dbg !5936
  %116 = load %struct._getopt_data** %d_addr, align 8, !dbg !5936
  %117 = getelementptr inbounds %struct._getopt_data* %116, i32 0, i32 8, !dbg !5936
  store i32 %115, i32* %117, align 8, !dbg !5936
  %118 = load %struct._getopt_data** %d_addr, align 8, !dbg !5937
  %119 = getelementptr inbounds %struct._getopt_data* %118, i32 0, i32 0, !dbg !5937
  %120 = load i32* %119, align 8, !dbg !5937
  %121 = load %struct._getopt_data** %d_addr, align 8, !dbg !5937
  %122 = getelementptr inbounds %struct._getopt_data* %121, i32 0, i32 9, !dbg !5937
  store i32 %120, i32* %122, align 4, !dbg !5937
  ret void, !dbg !5938
}

define internal i8* @_getopt_initialize(i32 %argc, i8** %argv, i8* %optstring, %struct._getopt_data* %d) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %optstring_addr = alloca i8*, align 8
  %d_addr = alloca %struct._getopt_data*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %optstring, i8** %optstring_addr
  store %struct._getopt_data* %d, %struct._getopt_data** %d_addr
  %1 = load %struct._getopt_data** %d_addr, align 8, !dbg !5939
  %2 = getelementptr inbounds %struct._getopt_data* %1, i32 0, i32 0, !dbg !5939
  %3 = load i32* %2, align 8, !dbg !5939
  %4 = load %struct._getopt_data** %d_addr, align 8, !dbg !5939
  %5 = getelementptr inbounds %struct._getopt_data* %4, i32 0, i32 9, !dbg !5939
  store i32 %3, i32* %5, align 4, !dbg !5939
  %6 = load %struct._getopt_data** %d_addr, align 8, !dbg !5939
  %7 = getelementptr inbounds %struct._getopt_data* %6, i32 0, i32 9, !dbg !5939
  %8 = load i32* %7, align 4, !dbg !5939
  %9 = load %struct._getopt_data** %d_addr, align 8, !dbg !5939
  %10 = getelementptr inbounds %struct._getopt_data* %9, i32 0, i32 8, !dbg !5939
  store i32 %8, i32* %10, align 8, !dbg !5939
  %11 = load %struct._getopt_data** %d_addr, align 8, !dbg !5941
  %12 = getelementptr inbounds %struct._getopt_data* %11, i32 0, i32 5, !dbg !5941
  store i8* null, i8** %12, align 8, !dbg !5941
  %13 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8]* @.str134, i64 0, i64 0)) nounwind, !dbg !5942
  %14 = icmp ne i8* %13, null, !dbg !5942
  %15 = zext i1 %14 to i32, !dbg !5942
  %16 = load %struct._getopt_data** %d_addr, align 8, !dbg !5942
  %17 = getelementptr inbounds %struct._getopt_data* %16, i32 0, i32 7, !dbg !5942
  store i32 %15, i32* %17, align 4, !dbg !5942
  %18 = load i8** %optstring_addr, align 8, !dbg !5943
  %19 = getelementptr inbounds i8* %18, i64 0, !dbg !5943
  %20 = load i8* %19, align 1, !dbg !5943
  %21 = icmp eq i8 %20, 45, !dbg !5943
  br i1 %21, label %bb, label %bb1, !dbg !5943

bb:                                               ; preds = %entry
  %22 = load %struct._getopt_data** %d_addr, align 8, !dbg !5944
  %23 = getelementptr inbounds %struct._getopt_data* %22, i32 0, i32 6, !dbg !5944
  store i32 2, i32* %23, align 8, !dbg !5944
  %24 = load i8** %optstring_addr, align 8, !dbg !5945
  %25 = getelementptr inbounds i8* %24, i64 1, !dbg !5945
  store i8* %25, i8** %optstring_addr, align 8, !dbg !5945
  br label %bb6, !dbg !5945

bb1:                                              ; preds = %entry
  %26 = load i8** %optstring_addr, align 8, !dbg !5946
  %27 = getelementptr inbounds i8* %26, i64 0, !dbg !5946
  %28 = load i8* %27, align 1, !dbg !5946
  %29 = icmp eq i8 %28, 43, !dbg !5946
  %30 = load %struct._getopt_data** %d_addr, align 8, !dbg !5947
  br i1 %29, label %bb2, label %bb3, !dbg !5946

bb2:                                              ; preds = %bb1
  %31 = getelementptr inbounds %struct._getopt_data* %30, i32 0, i32 6, !dbg !5947
  store i32 0, i32* %31, align 8, !dbg !5947
  %32 = load i8** %optstring_addr, align 8, !dbg !5948
  %33 = getelementptr inbounds i8* %32, i64 1, !dbg !5948
  store i8* %33, i8** %optstring_addr, align 8, !dbg !5948
  br label %bb6, !dbg !5948

bb3:                                              ; preds = %bb1
  %34 = getelementptr inbounds %struct._getopt_data* %30, i32 0, i32 7, !dbg !5949
  %35 = load i32* %34, align 4, !dbg !5949
  %36 = icmp ne i32 %35, 0, !dbg !5949
  %37 = load %struct._getopt_data** %d_addr, align 8, !dbg !5950
  %38 = getelementptr inbounds %struct._getopt_data* %37, i32 0, i32 6, !dbg !5950
  br i1 %36, label %bb4, label %bb5, !dbg !5949

bb4:                                              ; preds = %bb3
  store i32 0, i32* %38, align 8, !dbg !5950
  br label %bb6, !dbg !5950

bb5:                                              ; preds = %bb3
  store i32 1, i32* %38, align 8, !dbg !5951
  br label %bb6, !dbg !5951

bb6:                                              ; preds = %bb5, %bb4, %bb2, %bb
  %39 = load i8** %optstring_addr, align 8, !dbg !5952
  store i8* %39, i8** %0, align 8, !dbg !5952
  %40 = load i8** %0, align 8, !dbg !5952
  store i8* %40, i8** %retval, align 8, !dbg !5952
  %retval7 = load i8** %retval, !dbg !5952
  ret i8* %retval7, !dbg !5952
}

define internal i32 @_getopt_internal_r(i32 %argc, i8** %argv, i8* %optstring, %struct.option* %longopts, i32* %longind, i32 %long_only, %struct._getopt_data* %d) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %optstring_addr = alloca i8*, align 8
  %longopts_addr = alloca %struct.option*, align 8
  %longind_addr = alloca i32*, align 8
  %long_only_addr = alloca i32, align 4
  %d_addr = alloca %struct._getopt_data*, align 8
  %retval = alloca i32
  %iftmp.13 = alloca i32
  %iftmp.2 = alloca i32
  %0 = alloca i32
  %print_errors = alloca i32
  %nameend = alloca i8*
  %p = alloca %struct.option*
  %pfound = alloca %struct.option*
  %exact = alloca i32
  %ambig = alloca i32
  %indfound = alloca i32
  %option_index = alloca i32
  %c = alloca i8
  %temp = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %optstring, i8** %optstring_addr
  store %struct.option* %longopts, %struct.option** %longopts_addr
  store i32* %longind, i32** %longind_addr
  store i32 %long_only, i32* %long_only_addr
  store %struct._getopt_data* %d, %struct._getopt_data** %d_addr
  %1 = load %struct._getopt_data** %d_addr, align 8, !dbg !5953
  %2 = getelementptr inbounds %struct._getopt_data* %1, i32 0, i32 1, !dbg !5953
  %3 = load i32* %2, align 4, !dbg !5953
  store i32 %3, i32* %print_errors, align 4, !dbg !5953
  %4 = load i8** %optstring_addr, align 8, !dbg !5955
  %5 = getelementptr inbounds i8* %4, i64 0, !dbg !5955
  %6 = load i8* %5, align 1, !dbg !5955
  %7 = icmp eq i8 %6, 58, !dbg !5955
  br i1 %7, label %bb, label %bb1, !dbg !5955

bb:                                               ; preds = %entry
  store i32 0, i32* %print_errors, align 4, !dbg !5956
  br label %bb1, !dbg !5956

bb1:                                              ; preds = %bb, %entry
  %8 = load i32* %argc_addr, align 4, !dbg !5957
  %9 = icmp sle i32 %8, 0, !dbg !5957
  br i1 %9, label %bb2, label %bb3, !dbg !5957

bb2:                                              ; preds = %bb1
  store i32 -1, i32* %0, align 4, !dbg !5958
  br label %bb133, !dbg !5958

bb3:                                              ; preds = %bb1
  %10 = load %struct._getopt_data** %d_addr, align 8, !dbg !5959
  %11 = getelementptr inbounds %struct._getopt_data* %10, i32 0, i32 3, !dbg !5959
  store i8* null, i8** %11, align 8, !dbg !5959
  %12 = load %struct._getopt_data** %d_addr, align 8, !dbg !5960
  %13 = getelementptr inbounds %struct._getopt_data* %12, i32 0, i32 0, !dbg !5960
  %14 = load i32* %13, align 8, !dbg !5960
  %15 = icmp eq i32 %14, 0, !dbg !5960
  br i1 %15, label %bb5, label %bb4, !dbg !5960

bb4:                                              ; preds = %bb3
  %16 = load %struct._getopt_data** %d_addr, align 8, !dbg !5960
  %17 = getelementptr inbounds %struct._getopt_data* %16, i32 0, i32 4, !dbg !5960
  %18 = load i32* %17, align 8, !dbg !5960
  %19 = icmp eq i32 %18, 0, !dbg !5960
  br i1 %19, label %bb5, label %bb8, !dbg !5960

bb5:                                              ; preds = %bb4, %bb3
  %20 = load %struct._getopt_data** %d_addr, align 8, !dbg !5961
  %21 = getelementptr inbounds %struct._getopt_data* %20, i32 0, i32 0, !dbg !5961
  %22 = load i32* %21, align 8, !dbg !5961
  %23 = icmp eq i32 %22, 0, !dbg !5961
  br i1 %23, label %bb6, label %bb7, !dbg !5961

bb6:                                              ; preds = %bb5
  %24 = load %struct._getopt_data** %d_addr, align 8, !dbg !5962
  %25 = getelementptr inbounds %struct._getopt_data* %24, i32 0, i32 0, !dbg !5962
  store i32 1, i32* %25, align 8, !dbg !5962
  br label %bb7, !dbg !5962

bb7:                                              ; preds = %bb6, %bb5
  %26 = load i32* %argc_addr, align 4, !dbg !5963
  %27 = load i8*** %argv_addr, align 8, !dbg !5963
  %28 = load i8** %optstring_addr, align 8, !dbg !5963
  %29 = load %struct._getopt_data** %d_addr, align 8, !dbg !5963
  %30 = call i8* @_getopt_initialize(i32 %26, i8** %27, i8* %28, %struct._getopt_data* %29) nounwind, !dbg !5963
  store i8* %30, i8** %optstring_addr, align 8, !dbg !5963
  %31 = load %struct._getopt_data** %d_addr, align 8, !dbg !5964
  %32 = getelementptr inbounds %struct._getopt_data* %31, i32 0, i32 4, !dbg !5964
  store i32 1, i32* %32, align 8, !dbg !5964
  br label %bb8, !dbg !5964

bb8:                                              ; preds = %bb7, %bb4
  %33 = load %struct._getopt_data** %d_addr, align 8, !dbg !5965
  %34 = getelementptr inbounds %struct._getopt_data* %33, i32 0, i32 5, !dbg !5965
  %35 = load i8** %34, align 8, !dbg !5965
  %36 = icmp eq i8* %35, null, !dbg !5965
  br i1 %36, label %bb10, label %bb9, !dbg !5965

bb9:                                              ; preds = %bb8
  %37 = load %struct._getopt_data** %d_addr, align 8, !dbg !5965
  %38 = getelementptr inbounds %struct._getopt_data* %37, i32 0, i32 5, !dbg !5965
  %39 = load i8** %38, align 8, !dbg !5965
  %40 = load i8* %39, align 1, !dbg !5965
  %41 = icmp eq i8 %40, 0, !dbg !5965
  br i1 %41, label %bb10, label %bb48, !dbg !5965

bb10:                                             ; preds = %bb9, %bb8
  %42 = load %struct._getopt_data** %d_addr, align 8, !dbg !5966
  %43 = getelementptr inbounds %struct._getopt_data* %42, i32 0, i32 9, !dbg !5966
  %44 = load i32* %43, align 4, !dbg !5966
  %45 = load %struct._getopt_data** %d_addr, align 8, !dbg !5966
  %46 = getelementptr inbounds %struct._getopt_data* %45, i32 0, i32 0, !dbg !5966
  %47 = load i32* %46, align 8, !dbg !5966
  %48 = icmp sgt i32 %44, %47, !dbg !5966
  br i1 %48, label %bb11, label %bb12, !dbg !5966

bb11:                                             ; preds = %bb10
  %49 = load %struct._getopt_data** %d_addr, align 8, !dbg !5967
  %50 = getelementptr inbounds %struct._getopt_data* %49, i32 0, i32 0, !dbg !5967
  %51 = load i32* %50, align 8, !dbg !5967
  %52 = load %struct._getopt_data** %d_addr, align 8, !dbg !5967
  %53 = getelementptr inbounds %struct._getopt_data* %52, i32 0, i32 9, !dbg !5967
  store i32 %51, i32* %53, align 4, !dbg !5967
  br label %bb12, !dbg !5967

bb12:                                             ; preds = %bb11, %bb10
  %54 = load %struct._getopt_data** %d_addr, align 8, !dbg !5968
  %55 = getelementptr inbounds %struct._getopt_data* %54, i32 0, i32 8, !dbg !5968
  %56 = load i32* %55, align 8, !dbg !5968
  %57 = load %struct._getopt_data** %d_addr, align 8, !dbg !5968
  %58 = getelementptr inbounds %struct._getopt_data* %57, i32 0, i32 0, !dbg !5968
  %59 = load i32* %58, align 8, !dbg !5968
  %60 = icmp sgt i32 %56, %59, !dbg !5968
  br i1 %60, label %bb13, label %bb14, !dbg !5968

bb13:                                             ; preds = %bb12
  %61 = load %struct._getopt_data** %d_addr, align 8, !dbg !5969
  %62 = getelementptr inbounds %struct._getopt_data* %61, i32 0, i32 0, !dbg !5969
  %63 = load i32* %62, align 8, !dbg !5969
  %64 = load %struct._getopt_data** %d_addr, align 8, !dbg !5969
  %65 = getelementptr inbounds %struct._getopt_data* %64, i32 0, i32 8, !dbg !5969
  store i32 %63, i32* %65, align 8, !dbg !5969
  br label %bb14, !dbg !5969

bb14:                                             ; preds = %bb13, %bb12
  %66 = load %struct._getopt_data** %d_addr, align 8, !dbg !5970
  %67 = getelementptr inbounds %struct._getopt_data* %66, i32 0, i32 6, !dbg !5970
  %68 = load i32* %67, align 8, !dbg !5970
  %69 = icmp eq i32 %68, 1, !dbg !5970
  br i1 %69, label %bb15, label %bb26, !dbg !5970

bb15:                                             ; preds = %bb14
  %70 = load %struct._getopt_data** %d_addr, align 8, !dbg !5971
  %71 = getelementptr inbounds %struct._getopt_data* %70, i32 0, i32 8, !dbg !5971
  %72 = load i32* %71, align 8, !dbg !5971
  %73 = load %struct._getopt_data** %d_addr, align 8, !dbg !5971
  %74 = getelementptr inbounds %struct._getopt_data* %73, i32 0, i32 9, !dbg !5971
  %75 = load i32* %74, align 4, !dbg !5971
  %76 = icmp eq i32 %72, %75, !dbg !5971
  br i1 %76, label %bb18, label %bb16, !dbg !5971

bb16:                                             ; preds = %bb15
  %77 = load %struct._getopt_data** %d_addr, align 8, !dbg !5971
  %78 = getelementptr inbounds %struct._getopt_data* %77, i32 0, i32 9, !dbg !5971
  %79 = load i32* %78, align 4, !dbg !5971
  %80 = load %struct._getopt_data** %d_addr, align 8, !dbg !5971
  %81 = getelementptr inbounds %struct._getopt_data* %80, i32 0, i32 0, !dbg !5971
  %82 = load i32* %81, align 8, !dbg !5971
  %83 = icmp eq i32 %79, %82, !dbg !5971
  br i1 %83, label %bb18, label %bb17, !dbg !5971

bb17:                                             ; preds = %bb16
  %84 = load i8*** %argv_addr, align 8, !dbg !5972
  %85 = load %struct._getopt_data** %d_addr, align 8, !dbg !5972
  call void @exchange(i8** %84, %struct._getopt_data* %85) nounwind, !dbg !5972
  br label %bb22, !dbg !5972

bb18:                                             ; preds = %bb16, %bb15
  %86 = load %struct._getopt_data** %d_addr, align 8, !dbg !5973
  %87 = getelementptr inbounds %struct._getopt_data* %86, i32 0, i32 9, !dbg !5973
  %88 = load i32* %87, align 4, !dbg !5973
  %89 = load %struct._getopt_data** %d_addr, align 8, !dbg !5973
  %90 = getelementptr inbounds %struct._getopt_data* %89, i32 0, i32 0, !dbg !5973
  %91 = load i32* %90, align 8, !dbg !5973
  %92 = icmp ne i32 %88, %91, !dbg !5973
  br i1 %92, label %bb19, label %bb22, !dbg !5973

bb19:                                             ; preds = %bb18
  %93 = load %struct._getopt_data** %d_addr, align 8, !dbg !5974
  %94 = getelementptr inbounds %struct._getopt_data* %93, i32 0, i32 0, !dbg !5974
  %95 = load i32* %94, align 8, !dbg !5974
  %96 = load %struct._getopt_data** %d_addr, align 8, !dbg !5974
  %97 = getelementptr inbounds %struct._getopt_data* %96, i32 0, i32 8, !dbg !5974
  store i32 %95, i32* %97, align 8, !dbg !5974
  br label %bb22, !dbg !5974

bb21:                                             ; preds = %bb24, %bb23
  %98 = load %struct._getopt_data** %d_addr, align 8, !dbg !5975
  %99 = getelementptr inbounds %struct._getopt_data* %98, i32 0, i32 0, !dbg !5975
  %100 = load i32* %99, align 8, !dbg !5975
  %101 = add nsw i32 %100, 1, !dbg !5975
  %102 = load %struct._getopt_data** %d_addr, align 8, !dbg !5975
  %103 = getelementptr inbounds %struct._getopt_data* %102, i32 0, i32 0, !dbg !5975
  store i32 %101, i32* %103, align 8, !dbg !5975
  br label %bb22, !dbg !5975

bb22:                                             ; preds = %bb17, %bb18, %bb19, %bb21
  %104 = load %struct._getopt_data** %d_addr, align 8, !dbg !5976
  %105 = getelementptr inbounds %struct._getopt_data* %104, i32 0, i32 0, !dbg !5976
  %106 = load i32* %105, align 8, !dbg !5976
  %107 = load i32* %argc_addr, align 4, !dbg !5976
  %108 = icmp sge i32 %106, %107, !dbg !5976
  br i1 %108, label %bb25, label %bb23, !dbg !5976

bb23:                                             ; preds = %bb22
  %109 = load %struct._getopt_data** %d_addr, align 8, !dbg !5976
  %110 = getelementptr inbounds %struct._getopt_data* %109, i32 0, i32 0, !dbg !5976
  %111 = load i32* %110, align 8, !dbg !5976
  %112 = load i8*** %argv_addr, align 8, !dbg !5976
  %113 = sext i32 %111 to i64, !dbg !5976
  %114 = getelementptr inbounds i8** %112, i64 %113, !dbg !5976
  %115 = load i8** %114, align 1, !dbg !5976
  %116 = getelementptr inbounds i8* %115, i64 0, !dbg !5976
  %117 = load i8* %116, align 1, !dbg !5976
  %118 = icmp ne i8 %117, 45, !dbg !5976
  br i1 %118, label %bb21, label %bb24, !dbg !5976

bb24:                                             ; preds = %bb23
  %119 = load %struct._getopt_data** %d_addr, align 8, !dbg !5976
  %120 = getelementptr inbounds %struct._getopt_data* %119, i32 0, i32 0, !dbg !5976
  %121 = load i32* %120, align 8, !dbg !5976
  %122 = load i8*** %argv_addr, align 8, !dbg !5976
  %123 = sext i32 %121 to i64, !dbg !5976
  %124 = getelementptr inbounds i8** %122, i64 %123, !dbg !5976
  %125 = load i8** %124, align 1, !dbg !5976
  %126 = getelementptr inbounds i8* %125, i64 1, !dbg !5976
  %127 = load i8* %126, align 1, !dbg !5976
  %128 = icmp eq i8 %127, 0, !dbg !5976
  br i1 %128, label %bb21, label %bb25, !dbg !5976

bb25:                                             ; preds = %bb24, %bb22
  %129 = load %struct._getopt_data** %d_addr, align 8, !dbg !5977
  %130 = getelementptr inbounds %struct._getopt_data* %129, i32 0, i32 0, !dbg !5977
  %131 = load i32* %130, align 8, !dbg !5977
  %132 = load %struct._getopt_data** %d_addr, align 8, !dbg !5977
  %133 = getelementptr inbounds %struct._getopt_data* %132, i32 0, i32 9, !dbg !5977
  store i32 %131, i32* %133, align 4, !dbg !5977
  br label %bb26, !dbg !5977

bb26:                                             ; preds = %bb25, %bb14
  %134 = load %struct._getopt_data** %d_addr, align 8, !dbg !5978
  %135 = getelementptr inbounds %struct._getopt_data* %134, i32 0, i32 0, !dbg !5978
  %136 = load i32* %135, align 8, !dbg !5978
  %137 = load i32* %argc_addr, align 4, !dbg !5978
  %138 = icmp ne i32 %136, %137, !dbg !5978
  br i1 %138, label %bb27, label %bb34, !dbg !5978

bb27:                                             ; preds = %bb26
  %139 = load %struct._getopt_data** %d_addr, align 8, !dbg !5978
  %140 = getelementptr inbounds %struct._getopt_data* %139, i32 0, i32 0, !dbg !5978
  %141 = load i32* %140, align 8, !dbg !5978
  %142 = load i8*** %argv_addr, align 8, !dbg !5978
  %143 = sext i32 %141 to i64, !dbg !5978
  %144 = getelementptr inbounds i8** %142, i64 %143, !dbg !5978
  %145 = load i8** %144, align 1, !dbg !5978
  %146 = call i32 @strcmp(i8* %145, i8* getelementptr inbounds ([3 x i8]* @.str1135, i64 0, i64 0)) nounwind readonly, !dbg !5978
  %147 = icmp eq i32 %146, 0, !dbg !5978
  br i1 %147, label %bb28, label %bb34, !dbg !5978

bb28:                                             ; preds = %bb27
  %148 = load %struct._getopt_data** %d_addr, align 8, !dbg !5979
  %149 = getelementptr inbounds %struct._getopt_data* %148, i32 0, i32 0, !dbg !5979
  %150 = load i32* %149, align 8, !dbg !5979
  %151 = add nsw i32 %150, 1, !dbg !5979
  %152 = load %struct._getopt_data** %d_addr, align 8, !dbg !5979
  %153 = getelementptr inbounds %struct._getopt_data* %152, i32 0, i32 0, !dbg !5979
  store i32 %151, i32* %153, align 8, !dbg !5979
  %154 = load %struct._getopt_data** %d_addr, align 8, !dbg !5980
  %155 = getelementptr inbounds %struct._getopt_data* %154, i32 0, i32 8, !dbg !5980
  %156 = load i32* %155, align 8, !dbg !5980
  %157 = load %struct._getopt_data** %d_addr, align 8, !dbg !5980
  %158 = getelementptr inbounds %struct._getopt_data* %157, i32 0, i32 9, !dbg !5980
  %159 = load i32* %158, align 4, !dbg !5980
  %160 = icmp eq i32 %156, %159, !dbg !5980
  br i1 %160, label %bb31, label %bb29, !dbg !5980

bb29:                                             ; preds = %bb28
  %161 = load %struct._getopt_data** %d_addr, align 8, !dbg !5980
  %162 = getelementptr inbounds %struct._getopt_data* %161, i32 0, i32 9, !dbg !5980
  %163 = load i32* %162, align 4, !dbg !5980
  %164 = load %struct._getopt_data** %d_addr, align 8, !dbg !5980
  %165 = getelementptr inbounds %struct._getopt_data* %164, i32 0, i32 0, !dbg !5980
  %166 = load i32* %165, align 8, !dbg !5980
  %167 = icmp eq i32 %163, %166, !dbg !5980
  br i1 %167, label %bb31, label %bb30, !dbg !5980

bb30:                                             ; preds = %bb29
  %168 = load i8*** %argv_addr, align 8, !dbg !5981
  %169 = load %struct._getopt_data** %d_addr, align 8, !dbg !5981
  call void @exchange(i8** %168, %struct._getopt_data* %169) nounwind, !dbg !5981
  br label %bb33, !dbg !5981

bb31:                                             ; preds = %bb29, %bb28
  %170 = load %struct._getopt_data** %d_addr, align 8, !dbg !5982
  %171 = getelementptr inbounds %struct._getopt_data* %170, i32 0, i32 8, !dbg !5982
  %172 = load i32* %171, align 8, !dbg !5982
  %173 = load %struct._getopt_data** %d_addr, align 8, !dbg !5982
  %174 = getelementptr inbounds %struct._getopt_data* %173, i32 0, i32 9, !dbg !5982
  %175 = load i32* %174, align 4, !dbg !5982
  %176 = icmp eq i32 %172, %175, !dbg !5982
  br i1 %176, label %bb32, label %bb33, !dbg !5982

bb32:                                             ; preds = %bb31
  %177 = load %struct._getopt_data** %d_addr, align 8, !dbg !5983
  %178 = getelementptr inbounds %struct._getopt_data* %177, i32 0, i32 0, !dbg !5983
  %179 = load i32* %178, align 8, !dbg !5983
  %180 = load %struct._getopt_data** %d_addr, align 8, !dbg !5983
  %181 = getelementptr inbounds %struct._getopt_data* %180, i32 0, i32 8, !dbg !5983
  store i32 %179, i32* %181, align 8, !dbg !5983
  br label %bb33, !dbg !5983

bb33:                                             ; preds = %bb32, %bb31, %bb30
  %182 = load %struct._getopt_data** %d_addr, align 8, !dbg !5984
  %183 = getelementptr inbounds %struct._getopt_data* %182, i32 0, i32 9, !dbg !5984
  %184 = load i32* %argc_addr, align 4, !dbg !5984
  store i32 %184, i32* %183, align 4, !dbg !5984
  %185 = load %struct._getopt_data** %d_addr, align 8, !dbg !5985
  %186 = getelementptr inbounds %struct._getopt_data* %185, i32 0, i32 0, !dbg !5985
  %187 = load i32* %argc_addr, align 4, !dbg !5985
  store i32 %187, i32* %186, align 8, !dbg !5985
  br label %bb34, !dbg !5985

bb34:                                             ; preds = %bb33, %bb27, %bb26
  %188 = load %struct._getopt_data** %d_addr, align 8, !dbg !5986
  %189 = getelementptr inbounds %struct._getopt_data* %188, i32 0, i32 0, !dbg !5986
  %190 = load i32* %189, align 8, !dbg !5986
  %191 = load i32* %argc_addr, align 4, !dbg !5986
  %192 = icmp eq i32 %190, %191, !dbg !5986
  %193 = load %struct._getopt_data** %d_addr, align 8, !dbg !5987
  br i1 %192, label %bb35, label %bb38, !dbg !5986

bb35:                                             ; preds = %bb34
  %194 = getelementptr inbounds %struct._getopt_data* %193, i32 0, i32 8, !dbg !5987
  %195 = load i32* %194, align 8, !dbg !5987
  %196 = load %struct._getopt_data** %d_addr, align 8, !dbg !5987
  %197 = getelementptr inbounds %struct._getopt_data* %196, i32 0, i32 9, !dbg !5987
  %198 = load i32* %197, align 4, !dbg !5987
  %199 = icmp ne i32 %195, %198, !dbg !5987
  br i1 %199, label %bb36, label %bb37, !dbg !5987

bb36:                                             ; preds = %bb35
  %200 = load %struct._getopt_data** %d_addr, align 8, !dbg !5988
  %201 = getelementptr inbounds %struct._getopt_data* %200, i32 0, i32 8, !dbg !5988
  %202 = load i32* %201, align 8, !dbg !5988
  %203 = load %struct._getopt_data** %d_addr, align 8, !dbg !5988
  %204 = getelementptr inbounds %struct._getopt_data* %203, i32 0, i32 0, !dbg !5988
  store i32 %202, i32* %204, align 8, !dbg !5988
  br label %bb37, !dbg !5988

bb37:                                             ; preds = %bb36, %bb35
  store i32 -1, i32* %0, align 4, !dbg !5989
  br label %bb133, !dbg !5989

bb38:                                             ; preds = %bb34
  %205 = getelementptr inbounds %struct._getopt_data* %193, i32 0, i32 0, !dbg !5990
  %206 = load i32* %205, align 8, !dbg !5990
  %207 = load i8*** %argv_addr, align 8, !dbg !5990
  %208 = sext i32 %206 to i64, !dbg !5990
  %209 = getelementptr inbounds i8** %207, i64 %208, !dbg !5990
  %210 = load i8** %209, align 1, !dbg !5990
  %211 = getelementptr inbounds i8* %210, i64 0, !dbg !5990
  %212 = load i8* %211, align 1, !dbg !5990
  %213 = icmp ne i8 %212, 45, !dbg !5990
  br i1 %213, label %bb40, label %bb39, !dbg !5990

bb39:                                             ; preds = %bb38
  %214 = load %struct._getopt_data** %d_addr, align 8, !dbg !5990
  %215 = getelementptr inbounds %struct._getopt_data* %214, i32 0, i32 0, !dbg !5990
  %216 = load i32* %215, align 8, !dbg !5990
  %217 = load i8*** %argv_addr, align 8, !dbg !5990
  %218 = sext i32 %216 to i64, !dbg !5990
  %219 = getelementptr inbounds i8** %217, i64 %218, !dbg !5990
  %220 = load i8** %219, align 1, !dbg !5990
  %221 = getelementptr inbounds i8* %220, i64 1, !dbg !5990
  %222 = load i8* %221, align 1, !dbg !5990
  %223 = icmp eq i8 %222, 0, !dbg !5990
  br i1 %223, label %bb40, label %bb43, !dbg !5990

bb40:                                             ; preds = %bb39, %bb38
  %224 = load %struct._getopt_data** %d_addr, align 8, !dbg !5991
  %225 = getelementptr inbounds %struct._getopt_data* %224, i32 0, i32 6, !dbg !5991
  %226 = load i32* %225, align 8, !dbg !5991
  %227 = icmp eq i32 %226, 0, !dbg !5991
  br i1 %227, label %bb41, label %bb42, !dbg !5991

bb41:                                             ; preds = %bb40
  store i32 -1, i32* %0, align 4, !dbg !5992
  br label %bb133, !dbg !5992

bb42:                                             ; preds = %bb40
  %228 = load %struct._getopt_data** %d_addr, align 8, !dbg !5993
  %229 = getelementptr inbounds %struct._getopt_data* %228, i32 0, i32 0, !dbg !5993
  %230 = load i32* %229, align 8, !dbg !5993
  %231 = load i8*** %argv_addr, align 8, !dbg !5993
  %232 = sext i32 %230 to i64, !dbg !5993
  %233 = getelementptr inbounds i8** %231, i64 %232, !dbg !5993
  %234 = load i8** %233, align 1, !dbg !5993
  %235 = load %struct._getopt_data** %d_addr, align 8, !dbg !5993
  %236 = getelementptr inbounds %struct._getopt_data* %235, i32 0, i32 3, !dbg !5993
  store i8* %234, i8** %236, align 8, !dbg !5993
  %237 = add nsw i32 %230, 1, !dbg !5993
  %238 = load %struct._getopt_data** %d_addr, align 8, !dbg !5993
  %239 = getelementptr inbounds %struct._getopt_data* %238, i32 0, i32 0, !dbg !5993
  store i32 %237, i32* %239, align 8, !dbg !5993
  store i32 1, i32* %0, align 4, !dbg !5994
  br label %bb133, !dbg !5994

bb43:                                             ; preds = %bb39
  %240 = load %struct._getopt_data** %d_addr, align 8, !dbg !5995
  %241 = getelementptr inbounds %struct._getopt_data* %240, i32 0, i32 0, !dbg !5995
  %242 = load i32* %241, align 8, !dbg !5995
  %243 = load i8*** %argv_addr, align 8, !dbg !5995
  %244 = sext i32 %242 to i64, !dbg !5995
  %245 = getelementptr inbounds i8** %243, i64 %244, !dbg !5995
  %246 = load i8** %245, align 1, !dbg !5995
  %247 = getelementptr inbounds i8* %246, i64 1, !dbg !5995
  %248 = load %struct.option** %longopts_addr, align 8, !dbg !5995
  %249 = bitcast %struct.option* %248 to i8*, !dbg !5995
  %250 = icmp eq i8* %249, null, !dbg !5995
  br i1 %250, label %bb46, label %bb44, !dbg !5995

bb44:                                             ; preds = %bb43
  %251 = load %struct._getopt_data** %d_addr, align 8, !dbg !5995
  %252 = getelementptr inbounds %struct._getopt_data* %251, i32 0, i32 0, !dbg !5995
  %253 = load i32* %252, align 8, !dbg !5995
  %254 = load i8*** %argv_addr, align 8, !dbg !5995
  %255 = sext i32 %253 to i64, !dbg !5995
  %256 = getelementptr inbounds i8** %254, i64 %255, !dbg !5995
  %257 = load i8** %256, align 1, !dbg !5995
  %258 = getelementptr inbounds i8* %257, i64 1, !dbg !5995
  %259 = load i8* %258, align 1, !dbg !5995
  %260 = icmp ne i8 %259, 45, !dbg !5995
  br i1 %260, label %bb46, label %bb45, !dbg !5995

bb45:                                             ; preds = %bb44
  store i32 1, i32* %iftmp.2, align 4, !dbg !5995
  br label %bb47, !dbg !5995

bb46:                                             ; preds = %bb44, %bb43
  store i32 0, i32* %iftmp.2, align 4, !dbg !5995
  br label %bb47, !dbg !5995

bb47:                                             ; preds = %bb46, %bb45
  %261 = load i32* %iftmp.2, align 4, !dbg !5995
  %262 = sext i32 %261 to i64, !dbg !5995
  %263 = getelementptr inbounds i8* %247, i64 %262, !dbg !5995
  %264 = load %struct._getopt_data** %d_addr, align 8, !dbg !5995
  %265 = getelementptr inbounds %struct._getopt_data* %264, i32 0, i32 5, !dbg !5995
  store i8* %263, i8** %265, align 8, !dbg !5995
  br label %bb48, !dbg !5995

bb48:                                             ; preds = %bb47, %bb9
  %266 = load %struct.option** %longopts_addr, align 8, !dbg !5996
  %267 = bitcast %struct.option* %266 to i8*, !dbg !5996
  %268 = icmp ne i8* %267, null, !dbg !5996
  br i1 %268, label %bb49, label %bb106, !dbg !5996

bb49:                                             ; preds = %bb48
  %269 = load %struct._getopt_data** %d_addr, align 8, !dbg !5996
  %270 = getelementptr inbounds %struct._getopt_data* %269, i32 0, i32 0, !dbg !5996
  %271 = load i32* %270, align 8, !dbg !5996
  %272 = load i8*** %argv_addr, align 8, !dbg !5996
  %273 = sext i32 %271 to i64, !dbg !5996
  %274 = getelementptr inbounds i8** %272, i64 %273, !dbg !5996
  %275 = load i8** %274, align 1, !dbg !5996
  %276 = getelementptr inbounds i8* %275, i64 1, !dbg !5996
  %277 = load i8* %276, align 1, !dbg !5996
  %278 = icmp eq i8 %277, 45, !dbg !5996
  br i1 %278, label %bb53, label %bb50, !dbg !5996

bb50:                                             ; preds = %bb49
  %279 = load i32* %long_only_addr, align 4, !dbg !5996
  %280 = icmp eq i32 %279, 0, !dbg !5996
  br i1 %280, label %bb106, label %bb51, !dbg !5996

bb51:                                             ; preds = %bb50
  %281 = load %struct._getopt_data** %d_addr, align 8, !dbg !5996
  %282 = getelementptr inbounds %struct._getopt_data* %281, i32 0, i32 0, !dbg !5996
  %283 = load i32* %282, align 8, !dbg !5996
  %284 = load i8*** %argv_addr, align 8, !dbg !5996
  %285 = sext i32 %283 to i64, !dbg !5996
  %286 = getelementptr inbounds i8** %284, i64 %285, !dbg !5996
  %287 = load i8** %286, align 1, !dbg !5996
  %288 = getelementptr inbounds i8* %287, i64 2, !dbg !5996
  %289 = load i8* %288, align 1, !dbg !5996
  %290 = icmp ne i8 %289, 0, !dbg !5996
  br i1 %290, label %bb53, label %bb52, !dbg !5996

bb52:                                             ; preds = %bb51
  %291 = load %struct._getopt_data** %d_addr, align 8, !dbg !5996
  %292 = getelementptr inbounds %struct._getopt_data* %291, i32 0, i32 0, !dbg !5996
  %293 = load i32* %292, align 8, !dbg !5996
  %294 = load i8*** %argv_addr, align 8, !dbg !5996
  %295 = sext i32 %293 to i64, !dbg !5996
  %296 = getelementptr inbounds i8** %294, i64 %295, !dbg !5996
  %297 = load i8** %296, align 1, !dbg !5996
  %298 = getelementptr inbounds i8* %297, i64 1, !dbg !5996
  %299 = load i8* %298, align 1, !dbg !5996
  %300 = sext i8 %299 to i32, !dbg !5996
  %301 = load i8** %optstring_addr, align 8, !dbg !5996
  %302 = call i8* @strchr(i8* %301, i32 %300) nounwind readonly, !dbg !5996
  %303 = icmp eq i8* %302, null, !dbg !5996
  br i1 %303, label %bb53, label %bb106, !dbg !5996

bb53:                                             ; preds = %bb52, %bb51, %bb49
  store %struct.option* null, %struct.option** %pfound, align 8, !dbg !5997
  store i32 0, i32* %exact, align 4, !dbg !5999
  store i32 0, i32* %ambig, align 4, !dbg !6000
  store i32 -1, i32* %indfound, align 4, !dbg !6001
  %304 = load %struct._getopt_data** %d_addr, align 8, !dbg !6002
  %305 = getelementptr inbounds %struct._getopt_data* %304, i32 0, i32 5, !dbg !6002
  %306 = load i8** %305, align 8, !dbg !6002
  store i8* %306, i8** %nameend, align 8, !dbg !6002
  br label %bb55, !dbg !6002

bb54:                                             ; preds = %bb56
  %307 = load i8** %nameend, align 8, !dbg !6002
  %308 = getelementptr inbounds i8* %307, i64 1, !dbg !6002
  store i8* %308, i8** %nameend, align 8, !dbg !6002
  br label %bb55, !dbg !6002

bb55:                                             ; preds = %bb54, %bb53
  %309 = load i8** %nameend, align 8, !dbg !6002
  %310 = load i8* %309, align 1, !dbg !6002
  %311 = icmp eq i8 %310, 0, !dbg !6002
  br i1 %311, label %bb57, label %bb56, !dbg !6002

bb56:                                             ; preds = %bb55
  %312 = load i8** %nameend, align 8, !dbg !6002
  %313 = load i8* %312, align 1, !dbg !6002
  %314 = icmp ne i8 %313, 61, !dbg !6002
  br i1 %314, label %bb54, label %bb57, !dbg !6002

bb57:                                             ; preds = %bb56, %bb55
  %315 = load %struct.option** %longopts_addr, align 8, !dbg !6003
  store %struct.option* %315, %struct.option** %p, align 8, !dbg !6003
  store i32 0, i32* %option_index, align 4, !dbg !6003
  br label %bb69, !dbg !6003

bb58:                                             ; preds = %bb69
  %316 = load i8** %nameend, align 8, !dbg !6004
  %317 = ptrtoint i8* %316 to i64, !dbg !6004
  %318 = load %struct._getopt_data** %d_addr, align 8, !dbg !6004
  %319 = getelementptr inbounds %struct._getopt_data* %318, i32 0, i32 5, !dbg !6004
  %320 = load i8** %319, align 8, !dbg !6004
  %321 = ptrtoint i8* %320 to i64, !dbg !6004
  %322 = sub nsw i64 %317, %321, !dbg !6004
  %323 = load %struct._getopt_data** %d_addr, align 8, !dbg !6004
  %324 = getelementptr inbounds %struct._getopt_data* %323, i32 0, i32 5, !dbg !6004
  %325 = load i8** %324, align 8, !dbg !6004
  %326 = load %struct.option** %p, align 8, !dbg !6004
  %327 = getelementptr inbounds %struct.option* %326, i32 0, i32 0, !dbg !6004
  %328 = load i8** %327, align 8, !dbg !6004
  %329 = call i32 @strncmp(i8* %328, i8* %325, i64 %322) nounwind readonly, !dbg !6004
  %330 = icmp eq i32 %329, 0, !dbg !6004
  br i1 %330, label %bb59, label %bb68, !dbg !6004

bb59:                                             ; preds = %bb58
  %331 = load i8** %nameend, align 8, !dbg !6005
  %332 = ptrtoint i8* %331 to i64, !dbg !6005
  %333 = trunc i64 %332 to i32, !dbg !6005
  %334 = load %struct._getopt_data** %d_addr, align 8, !dbg !6005
  %335 = getelementptr inbounds %struct._getopt_data* %334, i32 0, i32 5, !dbg !6005
  %336 = load i8** %335, align 8, !dbg !6005
  %337 = ptrtoint i8* %336 to i64, !dbg !6005
  %338 = trunc i64 %337 to i32, !dbg !6005
  %339 = sub i32 %333, %338, !dbg !6005
  %340 = load %struct.option** %p, align 8, !dbg !6005
  %341 = getelementptr inbounds %struct.option* %340, i32 0, i32 0, !dbg !6005
  %342 = load i8** %341, align 8, !dbg !6005
  %343 = call i64 @strlen(i8* %342) nounwind readonly, !dbg !6005
  %344 = trunc i64 %343 to i32, !dbg !6005
  %345 = icmp eq i32 %339, %344, !dbg !6005
  br i1 %345, label %bb60, label %bb61, !dbg !6005

bb60:                                             ; preds = %bb59
  %346 = load %struct.option** %p, align 8, !dbg !6006
  store %struct.option* %346, %struct.option** %pfound, align 8, !dbg !6006
  %347 = load i32* %option_index, align 4, !dbg !6007
  store i32 %347, i32* %indfound, align 4, !dbg !6007
  store i32 1, i32* %exact, align 4, !dbg !6008
  br label %bb70, !dbg !6008

bb61:                                             ; preds = %bb59
  %348 = load %struct.option** %pfound, align 8, !dbg !6009
  %349 = bitcast %struct.option* %348 to i8*, !dbg !6009
  %350 = icmp eq i8* %349, null, !dbg !6009
  br i1 %350, label %bb62, label %bb63, !dbg !6009

bb62:                                             ; preds = %bb61
  %351 = load %struct.option** %p, align 8, !dbg !6010
  store %struct.option* %351, %struct.option** %pfound, align 8, !dbg !6010
  %352 = load i32* %option_index, align 4, !dbg !6011
  store i32 %352, i32* %indfound, align 4, !dbg !6011
  br label %bb68, !dbg !6011

bb63:                                             ; preds = %bb61
  %353 = load i32* %long_only_addr, align 4, !dbg !6012
  %354 = icmp ne i32 %353, 0, !dbg !6012
  br i1 %354, label %bb67, label %bb64, !dbg !6012

bb64:                                             ; preds = %bb63
  %355 = load %struct.option** %pfound, align 8, !dbg !6012
  %356 = getelementptr inbounds %struct.option* %355, i32 0, i32 1, !dbg !6012
  %357 = load i32* %356, align 8, !dbg !6012
  %358 = load %struct.option** %p, align 8, !dbg !6012
  %359 = getelementptr inbounds %struct.option* %358, i32 0, i32 1, !dbg !6012
  %360 = load i32* %359, align 8, !dbg !6012
  %361 = icmp ne i32 %357, %360, !dbg !6012
  br i1 %361, label %bb67, label %bb65, !dbg !6012

bb65:                                             ; preds = %bb64
  %362 = load %struct.option** %pfound, align 8, !dbg !6012
  %363 = getelementptr inbounds %struct.option* %362, i32 0, i32 2, !dbg !6012
  %364 = load i32** %363, align 8, !dbg !6012
  %365 = load %struct.option** %p, align 8, !dbg !6012
  %366 = getelementptr inbounds %struct.option* %365, i32 0, i32 2, !dbg !6012
  %367 = load i32** %366, align 8, !dbg !6012
  %368 = icmp ne i32* %364, %367, !dbg !6012
  br i1 %368, label %bb67, label %bb66, !dbg !6012

bb66:                                             ; preds = %bb65
  %369 = load %struct.option** %pfound, align 8, !dbg !6012
  %370 = getelementptr inbounds %struct.option* %369, i32 0, i32 3, !dbg !6012
  %371 = load i32* %370, align 8, !dbg !6012
  %372 = load %struct.option** %p, align 8, !dbg !6012
  %373 = getelementptr inbounds %struct.option* %372, i32 0, i32 3, !dbg !6012
  %374 = load i32* %373, align 8, !dbg !6012
  %375 = icmp ne i32 %371, %374, !dbg !6012
  br i1 %375, label %bb67, label %bb68, !dbg !6012

bb67:                                             ; preds = %bb66, %bb65, %bb64, %bb63
  store i32 1, i32* %ambig, align 4, !dbg !6013
  br label %bb68, !dbg !6013

bb68:                                             ; preds = %bb67, %bb66, %bb62, %bb58
  %376 = load %struct.option** %p, align 8, !dbg !6003
  %377 = getelementptr inbounds %struct.option* %376, i64 1, !dbg !6003
  store %struct.option* %377, %struct.option** %p, align 8, !dbg !6003
  %378 = load i32* %option_index, align 4, !dbg !6003
  %379 = add nsw i32 %378, 1, !dbg !6003
  store i32 %379, i32* %option_index, align 4, !dbg !6003
  br label %bb69, !dbg !6003

bb69:                                             ; preds = %bb68, %bb57
  %380 = load %struct.option** %p, align 8, !dbg !6003
  %381 = getelementptr inbounds %struct.option* %380, i32 0, i32 0, !dbg !6003
  %382 = load i8** %381, align 8, !dbg !6003
  %383 = icmp ne i8* %382, null, !dbg !6003
  br i1 %383, label %bb58, label %bb70, !dbg !6003

bb70:                                             ; preds = %bb69, %bb60
  %384 = load i32* %ambig, align 4, !dbg !6014
  %385 = icmp ne i32 %384, 0, !dbg !6014
  br i1 %385, label %bb71, label %bb75, !dbg !6014

bb71:                                             ; preds = %bb70
  %386 = load i32* %exact, align 4, !dbg !6014
  %387 = icmp eq i32 %386, 0, !dbg !6014
  br i1 %387, label %bb72, label %bb75, !dbg !6014

bb72:                                             ; preds = %bb71
  %388 = load i32* %print_errors, align 4, !dbg !6015
  %389 = icmp ne i32 %388, 0, !dbg !6015
  br i1 %389, label %bb73, label %bb74, !dbg !6015

bb73:                                             ; preds = %bb72
  %390 = load %struct._getopt_data** %d_addr, align 8, !dbg !6016
  %391 = getelementptr inbounds %struct._getopt_data* %390, i32 0, i32 0, !dbg !6016
  %392 = load i32* %391, align 8, !dbg !6016
  %393 = load i8*** %argv_addr, align 8, !dbg !6016
  %394 = sext i32 %392 to i64, !dbg !6016
  %395 = getelementptr inbounds i8** %393, i64 %394, !dbg !6016
  %396 = load i8** %395, align 1, !dbg !6016
  %397 = load i8*** %argv_addr, align 8, !dbg !6016
  %398 = getelementptr inbounds i8** %397, i64 0, !dbg !6016
  %399 = load i8** %398, align 1, !dbg !6016
  %400 = load %4** @stderr, align 8, !dbg !6016
  %401 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %400, i8* noalias getelementptr inbounds ([30 x i8]* @.str2136, i64 0, i64 0), i8* %399, i8* %396) nounwind, !dbg !6016
  br label %bb74, !dbg !6016

bb74:                                             ; preds = %bb73, %bb72
  %402 = load %struct._getopt_data** %d_addr, align 8, !dbg !6017
  %403 = getelementptr inbounds %struct._getopt_data* %402, i32 0, i32 5, !dbg !6017
  %404 = load i8** %403, align 8, !dbg !6017
  %405 = load %struct._getopt_data** %d_addr, align 8, !dbg !6017
  %406 = getelementptr inbounds %struct._getopt_data* %405, i32 0, i32 5, !dbg !6017
  %407 = load i8** %406, align 8, !dbg !6017
  %408 = call i64 @strlen(i8* %407) nounwind readonly, !dbg !6017
  %409 = getelementptr inbounds i8* %404, i64 %408, !dbg !6017
  %410 = load %struct._getopt_data** %d_addr, align 8, !dbg !6017
  %411 = getelementptr inbounds %struct._getopt_data* %410, i32 0, i32 5, !dbg !6017
  store i8* %409, i8** %411, align 8, !dbg !6017
  %412 = load %struct._getopt_data** %d_addr, align 8, !dbg !6018
  %413 = getelementptr inbounds %struct._getopt_data* %412, i32 0, i32 0, !dbg !6018
  %414 = load i32* %413, align 8, !dbg !6018
  %415 = add nsw i32 %414, 1, !dbg !6018
  %416 = load %struct._getopt_data** %d_addr, align 8, !dbg !6018
  %417 = getelementptr inbounds %struct._getopt_data* %416, i32 0, i32 0, !dbg !6018
  store i32 %415, i32* %417, align 8, !dbg !6018
  %418 = load %struct._getopt_data** %d_addr, align 8, !dbg !6019
  %419 = getelementptr inbounds %struct._getopt_data* %418, i32 0, i32 2, !dbg !6019
  store i32 0, i32* %419, align 8, !dbg !6019
  store i32 63, i32* %0, align 4, !dbg !6020
  br label %bb133, !dbg !6020

bb75:                                             ; preds = %bb71, %bb70
  %420 = load %struct.option** %pfound, align 8, !dbg !6021
  %421 = bitcast %struct.option* %420 to i8*, !dbg !6021
  %422 = icmp ne i8* %421, null, !dbg !6021
  br i1 %422, label %bb76, label %bb98, !dbg !6021

bb76:                                             ; preds = %bb75
  %423 = load i32* %indfound, align 4, !dbg !6022
  store i32 %423, i32* %option_index, align 4, !dbg !6022
  %424 = load %struct._getopt_data** %d_addr, align 8, !dbg !6023
  %425 = getelementptr inbounds %struct._getopt_data* %424, i32 0, i32 0, !dbg !6023
  %426 = load i32* %425, align 8, !dbg !6023
  %427 = add nsw i32 %426, 1, !dbg !6023
  %428 = load %struct._getopt_data** %d_addr, align 8, !dbg !6023
  %429 = getelementptr inbounds %struct._getopt_data* %428, i32 0, i32 0, !dbg !6023
  store i32 %427, i32* %429, align 8, !dbg !6023
  %430 = load i8** %nameend, align 8, !dbg !6024
  %431 = load i8* %430, align 1, !dbg !6024
  %432 = icmp ne i8 %431, 0, !dbg !6024
  %433 = load %struct.option** %pfound, align 8, !dbg !6025
  %434 = getelementptr inbounds %struct.option* %433, i32 0, i32 1, !dbg !6025
  %435 = load i32* %434, align 8, !dbg !6025
  br i1 %432, label %bb77, label %bb84, !dbg !6024

bb77:                                             ; preds = %bb76
  %436 = icmp ne i32 %435, 0, !dbg !6025
  br i1 %436, label %bb78, label %bb79, !dbg !6025

bb78:                                             ; preds = %bb77
  %437 = load i8** %nameend, align 8, !dbg !6026
  %438 = getelementptr inbounds i8* %437, i64 1, !dbg !6026
  %439 = load %struct._getopt_data** %d_addr, align 8, !dbg !6026
  %440 = getelementptr inbounds %struct._getopt_data* %439, i32 0, i32 3, !dbg !6026
  store i8* %438, i8** %440, align 8, !dbg !6026
  br label %bb93, !dbg !6026

bb79:                                             ; preds = %bb77
  %441 = load i32* %print_errors, align 4, !dbg !6027
  %442 = icmp ne i32 %441, 0, !dbg !6027
  br i1 %442, label %bb80, label %bb83, !dbg !6027

bb80:                                             ; preds = %bb79
  %443 = load %struct._getopt_data** %d_addr, align 8, !dbg !6028
  %444 = getelementptr inbounds %struct._getopt_data* %443, i32 0, i32 0, !dbg !6028
  %445 = load i32* %444, align 8, !dbg !6028
  %446 = sub nsw i32 %445, 1, !dbg !6028
  %447 = load i8*** %argv_addr, align 8, !dbg !6028
  %448 = sext i32 %446 to i64, !dbg !6028
  %449 = getelementptr inbounds i8** %447, i64 %448, !dbg !6028
  %450 = load i8** %449, align 1, !dbg !6028
  %451 = getelementptr inbounds i8* %450, i64 1, !dbg !6028
  %452 = load i8* %451, align 1, !dbg !6028
  %453 = icmp eq i8 %452, 45, !dbg !6028
  %454 = load %struct.option** %pfound, align 8, !dbg !6029
  %455 = getelementptr inbounds %struct.option* %454, i32 0, i32 0, !dbg !6029
  %456 = load i8** %455, align 8, !dbg !6029
  br i1 %453, label %bb81, label %bb82, !dbg !6028

bb81:                                             ; preds = %bb80
  %457 = load i8*** %argv_addr, align 8, !dbg !6029
  %458 = getelementptr inbounds i8** %457, i64 0, !dbg !6029
  %459 = load i8** %458, align 1, !dbg !6029
  %460 = load %4** @stderr, align 8, !dbg !6029
  %461 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %460, i8* noalias getelementptr inbounds ([45 x i8]* @.str3137, i64 0, i64 0), i8* %459, i8* %456) nounwind, !dbg !6029
  br label %bb83, !dbg !6029

bb82:                                             ; preds = %bb80
  %462 = load %struct._getopt_data** %d_addr, align 8, !dbg !6030
  %463 = getelementptr inbounds %struct._getopt_data* %462, i32 0, i32 0, !dbg !6030
  %464 = load i32* %463, align 8, !dbg !6030
  %465 = sub nsw i32 %464, 1, !dbg !6030
  %466 = load i8*** %argv_addr, align 8, !dbg !6030
  %467 = sext i32 %465 to i64, !dbg !6030
  %468 = getelementptr inbounds i8** %466, i64 %467, !dbg !6030
  %469 = load i8** %468, align 1, !dbg !6030
  %470 = getelementptr inbounds i8* %469, i64 0, !dbg !6030
  %471 = load i8* %470, align 1, !dbg !6030
  %472 = sext i8 %471 to i32, !dbg !6030
  %473 = load i8*** %argv_addr, align 8, !dbg !6030
  %474 = getelementptr inbounds i8** %473, i64 0, !dbg !6030
  %475 = load i8** %474, align 1, !dbg !6030
  %476 = load %4** @stderr, align 8, !dbg !6030
  %477 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %476, i8* noalias getelementptr inbounds ([45 x i8]* @.str4138, i64 0, i64 0), i8* %475, i32 %472, i8* %456) nounwind, !dbg !6030
  br label %bb83, !dbg !6030

bb83:                                             ; preds = %bb82, %bb81, %bb79
  %478 = load %struct._getopt_data** %d_addr, align 8, !dbg !6031
  %479 = getelementptr inbounds %struct._getopt_data* %478, i32 0, i32 5, !dbg !6031
  %480 = load i8** %479, align 8, !dbg !6031
  %481 = load %struct._getopt_data** %d_addr, align 8, !dbg !6031
  %482 = getelementptr inbounds %struct._getopt_data* %481, i32 0, i32 5, !dbg !6031
  %483 = load i8** %482, align 8, !dbg !6031
  %484 = call i64 @strlen(i8* %483) nounwind readonly, !dbg !6031
  %485 = getelementptr inbounds i8* %480, i64 %484, !dbg !6031
  %486 = load %struct._getopt_data** %d_addr, align 8, !dbg !6031
  %487 = getelementptr inbounds %struct._getopt_data* %486, i32 0, i32 5, !dbg !6031
  store i8* %485, i8** %487, align 8, !dbg !6031
  %488 = load %struct.option** %pfound, align 8, !dbg !6032
  %489 = getelementptr inbounds %struct.option* %488, i32 0, i32 3, !dbg !6032
  %490 = load i32* %489, align 8, !dbg !6032
  %491 = load %struct._getopt_data** %d_addr, align 8, !dbg !6032
  %492 = getelementptr inbounds %struct._getopt_data* %491, i32 0, i32 2, !dbg !6032
  store i32 %490, i32* %492, align 8, !dbg !6032
  store i32 63, i32* %0, align 4, !dbg !6033
  br label %bb133, !dbg !6033

bb84:                                             ; preds = %bb76
  %493 = icmp eq i32 %435, 1, !dbg !6034
  br i1 %493, label %bb85, label %bb93, !dbg !6034

bb85:                                             ; preds = %bb84
  %494 = load %struct._getopt_data** %d_addr, align 8, !dbg !6035
  %495 = getelementptr inbounds %struct._getopt_data* %494, i32 0, i32 0, !dbg !6035
  %496 = load i32* %495, align 8, !dbg !6035
  %497 = load i32* %argc_addr, align 4, !dbg !6035
  %498 = icmp slt i32 %496, %497, !dbg !6035
  br i1 %498, label %bb86, label %bb87, !dbg !6035

bb86:                                             ; preds = %bb85
  %499 = load %struct._getopt_data** %d_addr, align 8, !dbg !6036
  %500 = getelementptr inbounds %struct._getopt_data* %499, i32 0, i32 0, !dbg !6036
  %501 = load i32* %500, align 8, !dbg !6036
  %502 = load i8*** %argv_addr, align 8, !dbg !6036
  %503 = sext i32 %501 to i64, !dbg !6036
  %504 = getelementptr inbounds i8** %502, i64 %503, !dbg !6036
  %505 = load i8** %504, align 1, !dbg !6036
  %506 = load %struct._getopt_data** %d_addr, align 8, !dbg !6036
  %507 = getelementptr inbounds %struct._getopt_data* %506, i32 0, i32 3, !dbg !6036
  store i8* %505, i8** %507, align 8, !dbg !6036
  %508 = add nsw i32 %501, 1, !dbg !6036
  %509 = load %struct._getopt_data** %d_addr, align 8, !dbg !6036
  %510 = getelementptr inbounds %struct._getopt_data* %509, i32 0, i32 0, !dbg !6036
  store i32 %508, i32* %510, align 8, !dbg !6036
  br label %bb93, !dbg !6036

bb87:                                             ; preds = %bb85
  %511 = load i32* %print_errors, align 4, !dbg !6037
  %512 = icmp ne i32 %511, 0, !dbg !6037
  br i1 %512, label %bb88, label %bb89, !dbg !6037

bb88:                                             ; preds = %bb87
  %513 = load %struct._getopt_data** %d_addr, align 8, !dbg !6038
  %514 = getelementptr inbounds %struct._getopt_data* %513, i32 0, i32 0, !dbg !6038
  %515 = load i32* %514, align 8, !dbg !6038
  %516 = sub nsw i32 %515, 1, !dbg !6038
  %517 = load i8*** %argv_addr, align 8, !dbg !6038
  %518 = sext i32 %516 to i64, !dbg !6038
  %519 = getelementptr inbounds i8** %517, i64 %518, !dbg !6038
  %520 = load i8** %519, align 1, !dbg !6038
  %521 = load i8*** %argv_addr, align 8, !dbg !6038
  %522 = getelementptr inbounds i8** %521, i64 0, !dbg !6038
  %523 = load i8** %522, align 1, !dbg !6038
  %524 = load %4** @stderr, align 8, !dbg !6038
  %525 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %524, i8* noalias getelementptr inbounds ([38 x i8]* @.str5139, i64 0, i64 0), i8* %523, i8* %520) nounwind, !dbg !6038
  br label %bb89, !dbg !6038

bb89:                                             ; preds = %bb88, %bb87
  %526 = load %struct._getopt_data** %d_addr, align 8, !dbg !6039
  %527 = getelementptr inbounds %struct._getopt_data* %526, i32 0, i32 5, !dbg !6039
  %528 = load i8** %527, align 8, !dbg !6039
  %529 = load %struct._getopt_data** %d_addr, align 8, !dbg !6039
  %530 = getelementptr inbounds %struct._getopt_data* %529, i32 0, i32 5, !dbg !6039
  %531 = load i8** %530, align 8, !dbg !6039
  %532 = call i64 @strlen(i8* %531) nounwind readonly, !dbg !6039
  %533 = getelementptr inbounds i8* %528, i64 %532, !dbg !6039
  %534 = load %struct._getopt_data** %d_addr, align 8, !dbg !6039
  %535 = getelementptr inbounds %struct._getopt_data* %534, i32 0, i32 5, !dbg !6039
  store i8* %533, i8** %535, align 8, !dbg !6039
  %536 = load %struct.option** %pfound, align 8, !dbg !6040
  %537 = getelementptr inbounds %struct.option* %536, i32 0, i32 3, !dbg !6040
  %538 = load i32* %537, align 8, !dbg !6040
  %539 = load %struct._getopt_data** %d_addr, align 8, !dbg !6040
  %540 = getelementptr inbounds %struct._getopt_data* %539, i32 0, i32 2, !dbg !6040
  store i32 %538, i32* %540, align 8, !dbg !6040
  %541 = load i8** %optstring_addr, align 8, !dbg !6041
  %542 = getelementptr inbounds i8* %541, i64 0, !dbg !6041
  %543 = load i8* %542, align 1, !dbg !6041
  %544 = icmp eq i8 %543, 58, !dbg !6041
  br i1 %544, label %bb90, label %bb91, !dbg !6041

bb90:                                             ; preds = %bb89
  store i32 58, i32* %iftmp.13, align 4, !dbg !6041
  br label %bb92, !dbg !6041

bb91:                                             ; preds = %bb89
  store i32 63, i32* %iftmp.13, align 4, !dbg !6041
  br label %bb92, !dbg !6041

bb92:                                             ; preds = %bb91, %bb90
  %545 = load i32* %iftmp.13, align 4, !dbg !6041
  store i32 %545, i32* %0, align 4, !dbg !6041
  br label %bb133, !dbg !6041

bb93:                                             ; preds = %bb86, %bb84, %bb78
  %546 = load %struct._getopt_data** %d_addr, align 8, !dbg !6042
  %547 = getelementptr inbounds %struct._getopt_data* %546, i32 0, i32 5, !dbg !6042
  %548 = load i8** %547, align 8, !dbg !6042
  %549 = load %struct._getopt_data** %d_addr, align 8, !dbg !6042
  %550 = getelementptr inbounds %struct._getopt_data* %549, i32 0, i32 5, !dbg !6042
  %551 = load i8** %550, align 8, !dbg !6042
  %552 = call i64 @strlen(i8* %551) nounwind readonly, !dbg !6042
  %553 = getelementptr inbounds i8* %548, i64 %552, !dbg !6042
  %554 = load %struct._getopt_data** %d_addr, align 8, !dbg !6042
  %555 = getelementptr inbounds %struct._getopt_data* %554, i32 0, i32 5, !dbg !6042
  store i8* %553, i8** %555, align 8, !dbg !6042
  %556 = load i32** %longind_addr, align 8, !dbg !6043
  %557 = icmp ne i32* %556, null, !dbg !6043
  br i1 %557, label %bb94, label %bb95, !dbg !6043

bb94:                                             ; preds = %bb93
  %558 = load i32** %longind_addr, align 8, !dbg !6044
  %559 = load i32* %option_index, align 4, !dbg !6044
  store i32 %559, i32* %558, align 4, !dbg !6044
  br label %bb95, !dbg !6044

bb95:                                             ; preds = %bb94, %bb93
  %560 = load %struct.option** %pfound, align 8, !dbg !6045
  %561 = getelementptr inbounds %struct.option* %560, i32 0, i32 2, !dbg !6045
  %562 = load i32** %561, align 8, !dbg !6045
  %563 = icmp ne i32* %562, null, !dbg !6045
  %564 = load %struct.option** %pfound, align 8, !dbg !6046
  br i1 %563, label %bb96, label %bb97, !dbg !6045

bb96:                                             ; preds = %bb95
  %565 = getelementptr inbounds %struct.option* %564, i32 0, i32 2, !dbg !6046
  %566 = load i32** %565, align 8, !dbg !6046
  %567 = load %struct.option** %pfound, align 8, !dbg !6046
  %568 = getelementptr inbounds %struct.option* %567, i32 0, i32 3, !dbg !6046
  %569 = load i32* %568, align 8, !dbg !6046
  store i32 %569, i32* %566, align 4, !dbg !6046
  store i32 0, i32* %0, align 4, !dbg !6047
  br label %bb133, !dbg !6047

bb97:                                             ; preds = %bb95
  %570 = getelementptr inbounds %struct.option* %564, i32 0, i32 3, !dbg !6048
  %571 = load i32* %570, align 8, !dbg !6048
  store i32 %571, i32* %0, align 4, !dbg !6048
  br label %bb133, !dbg !6048

bb98:                                             ; preds = %bb75
  %572 = load i32* %long_only_addr, align 4, !dbg !6049
  %573 = icmp eq i32 %572, 0, !dbg !6049
  br i1 %573, label %bb101, label %bb99, !dbg !6049

bb99:                                             ; preds = %bb98
  %574 = load %struct._getopt_data** %d_addr, align 8, !dbg !6049
  %575 = getelementptr inbounds %struct._getopt_data* %574, i32 0, i32 0, !dbg !6049
  %576 = load i32* %575, align 8, !dbg !6049
  %577 = load i8*** %argv_addr, align 8, !dbg !6049
  %578 = sext i32 %576 to i64, !dbg !6049
  %579 = getelementptr inbounds i8** %577, i64 %578, !dbg !6049
  %580 = load i8** %579, align 1, !dbg !6049
  %581 = getelementptr inbounds i8* %580, i64 1, !dbg !6049
  %582 = load i8* %581, align 1, !dbg !6049
  %583 = icmp eq i8 %582, 45, !dbg !6049
  br i1 %583, label %bb101, label %bb100, !dbg !6049

bb100:                                            ; preds = %bb99
  %584 = load %struct._getopt_data** %d_addr, align 8, !dbg !6049
  %585 = getelementptr inbounds %struct._getopt_data* %584, i32 0, i32 5, !dbg !6049
  %586 = load i8** %585, align 8, !dbg !6049
  %587 = load i8* %586, align 1, !dbg !6049
  %588 = sext i8 %587 to i32, !dbg !6049
  %589 = load i8** %optstring_addr, align 8, !dbg !6049
  %590 = call i8* @strchr(i8* %589, i32 %588) nounwind readonly, !dbg !6049
  %591 = icmp eq i8* %590, null, !dbg !6049
  br i1 %591, label %bb101, label %bb106, !dbg !6049

bb101:                                            ; preds = %bb100, %bb99, %bb98
  %592 = load i32* %print_errors, align 4, !dbg !6050
  %593 = icmp ne i32 %592, 0, !dbg !6050
  br i1 %593, label %bb102, label %bb105, !dbg !6050

bb102:                                            ; preds = %bb101
  %594 = load %struct._getopt_data** %d_addr, align 8, !dbg !6051
  %595 = getelementptr inbounds %struct._getopt_data* %594, i32 0, i32 0, !dbg !6051
  %596 = load i32* %595, align 8, !dbg !6051
  %597 = load i8*** %argv_addr, align 8, !dbg !6051
  %598 = sext i32 %596 to i64, !dbg !6051
  %599 = getelementptr inbounds i8** %597, i64 %598, !dbg !6051
  %600 = load i8** %599, align 1, !dbg !6051
  %601 = getelementptr inbounds i8* %600, i64 1, !dbg !6051
  %602 = load i8* %601, align 1, !dbg !6051
  %603 = icmp eq i8 %602, 45, !dbg !6051
  %604 = load %struct._getopt_data** %d_addr, align 8, !dbg !6052
  %605 = getelementptr inbounds %struct._getopt_data* %604, i32 0, i32 5, !dbg !6052
  %606 = load i8** %605, align 8, !dbg !6052
  br i1 %603, label %bb103, label %bb104, !dbg !6051

bb103:                                            ; preds = %bb102
  %607 = load i8*** %argv_addr, align 8, !dbg !6052
  %608 = getelementptr inbounds i8** %607, i64 0, !dbg !6052
  %609 = load i8** %608, align 1, !dbg !6052
  %610 = load %4** @stderr, align 8, !dbg !6052
  %611 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %610, i8* noalias getelementptr inbounds ([32 x i8]* @.str6140, i64 0, i64 0), i8* %609, i8* %606) nounwind, !dbg !6052
  br label %bb105, !dbg !6052

bb104:                                            ; preds = %bb102
  %612 = load %struct._getopt_data** %d_addr, align 8, !dbg !6053
  %613 = getelementptr inbounds %struct._getopt_data* %612, i32 0, i32 0, !dbg !6053
  %614 = load i32* %613, align 8, !dbg !6053
  %615 = load i8*** %argv_addr, align 8, !dbg !6053
  %616 = sext i32 %614 to i64, !dbg !6053
  %617 = getelementptr inbounds i8** %615, i64 %616, !dbg !6053
  %618 = load i8** %617, align 1, !dbg !6053
  %619 = getelementptr inbounds i8* %618, i64 0, !dbg !6053
  %620 = load i8* %619, align 1, !dbg !6053
  %621 = sext i8 %620 to i32, !dbg !6053
  %622 = load i8*** %argv_addr, align 8, !dbg !6053
  %623 = getelementptr inbounds i8** %622, i64 0, !dbg !6053
  %624 = load i8** %623, align 1, !dbg !6053
  %625 = load %4** @stderr, align 8, !dbg !6053
  %626 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %625, i8* noalias getelementptr inbounds ([32 x i8]* @.str7141, i64 0, i64 0), i8* %624, i32 %621, i8* %606) nounwind, !dbg !6053
  br label %bb105, !dbg !6053

bb105:                                            ; preds = %bb104, %bb103, %bb101
  %627 = load %struct._getopt_data** %d_addr, align 8, !dbg !6054
  %628 = getelementptr inbounds %struct._getopt_data* %627, i32 0, i32 5, !dbg !6054
  store i8* getelementptr inbounds ([1 x i8]* @.str8142, i64 0, i64 0), i8** %628, align 8, !dbg !6054
  %629 = load %struct._getopt_data** %d_addr, align 8, !dbg !6055
  %630 = getelementptr inbounds %struct._getopt_data* %629, i32 0, i32 0, !dbg !6055
  %631 = load i32* %630, align 8, !dbg !6055
  %632 = add nsw i32 %631, 1, !dbg !6055
  %633 = load %struct._getopt_data** %d_addr, align 8, !dbg !6055
  %634 = getelementptr inbounds %struct._getopt_data* %633, i32 0, i32 0, !dbg !6055
  store i32 %632, i32* %634, align 8, !dbg !6055
  %635 = load %struct._getopt_data** %d_addr, align 8, !dbg !6056
  %636 = getelementptr inbounds %struct._getopt_data* %635, i32 0, i32 2, !dbg !6056
  store i32 0, i32* %636, align 8, !dbg !6056
  store i32 63, i32* %0, align 4, !dbg !6057
  br label %bb133, !dbg !6057

bb106:                                            ; preds = %bb100, %bb52, %bb50, %bb48
  %637 = load %struct._getopt_data** %d_addr, align 8, !dbg !6058
  %638 = getelementptr inbounds %struct._getopt_data* %637, i32 0, i32 5, !dbg !6058
  %639 = load i8** %638, align 8, !dbg !6058
  %640 = load i8* %639, align 1, !dbg !6058
  store i8 %640, i8* %c, align 1, !dbg !6058
  %641 = getelementptr inbounds i8* %639, i64 1, !dbg !6058
  %642 = load %struct._getopt_data** %d_addr, align 8, !dbg !6058
  %643 = getelementptr inbounds %struct._getopt_data* %642, i32 0, i32 5, !dbg !6058
  store i8* %641, i8** %643, align 8, !dbg !6058
  %644 = load i8* %c, align 1, !dbg !6060
  %645 = sext i8 %644 to i32, !dbg !6060
  %646 = load i8** %optstring_addr, align 8, !dbg !6060
  %647 = call i8* @strchr(i8* %646, i32 %645) nounwind readonly, !dbg !6060
  store i8* %647, i8** %temp, align 8, !dbg !6060
  %648 = load %struct._getopt_data** %d_addr, align 8, !dbg !6061
  %649 = getelementptr inbounds %struct._getopt_data* %648, i32 0, i32 5, !dbg !6061
  %650 = load i8** %649, align 8, !dbg !6061
  %651 = load i8* %650, align 1, !dbg !6061
  %652 = icmp eq i8 %651, 0, !dbg !6061
  br i1 %652, label %bb107, label %bb108, !dbg !6061

bb107:                                            ; preds = %bb106
  %653 = load %struct._getopt_data** %d_addr, align 8, !dbg !6062
  %654 = getelementptr inbounds %struct._getopt_data* %653, i32 0, i32 0, !dbg !6062
  %655 = load i32* %654, align 8, !dbg !6062
  %656 = add nsw i32 %655, 1, !dbg !6062
  %657 = load %struct._getopt_data** %d_addr, align 8, !dbg !6062
  %658 = getelementptr inbounds %struct._getopt_data* %657, i32 0, i32 0, !dbg !6062
  store i32 %656, i32* %658, align 8, !dbg !6062
  br label %bb108, !dbg !6062

bb108:                                            ; preds = %bb107, %bb106
  %659 = load i8** %temp, align 8, !dbg !6063
  %660 = icmp eq i8* %659, null, !dbg !6063
  br i1 %660, label %bb110, label %bb109, !dbg !6063

bb109:                                            ; preds = %bb108
  %661 = load i8* %c, align 1, !dbg !6063
  %662 = icmp eq i8 %661, 58, !dbg !6063
  br i1 %662, label %bb110, label %bb115, !dbg !6063

bb110:                                            ; preds = %bb109, %bb108
  %663 = load i32* %print_errors, align 4, !dbg !6064
  %664 = icmp ne i32 %663, 0, !dbg !6064
  br i1 %664, label %bb111, label %bb114, !dbg !6064

bb111:                                            ; preds = %bb110
  %665 = load %struct._getopt_data** %d_addr, align 8, !dbg !6065
  %666 = getelementptr inbounds %struct._getopt_data* %665, i32 0, i32 7, !dbg !6065
  %667 = load i32* %666, align 4, !dbg !6065
  %668 = icmp ne i32 %667, 0, !dbg !6065
  %669 = load i8* %c, align 1, !dbg !6066
  %670 = sext i8 %669 to i32, !dbg !6066
  %671 = load i8*** %argv_addr, align 8, !dbg !6066
  %672 = getelementptr inbounds i8** %671, i64 0, !dbg !6066
  %673 = load i8** %672, align 1, !dbg !6066
  %674 = load %4** @stderr, align 8, !dbg !6066
  br i1 %668, label %bb112, label %bb113, !dbg !6065

bb112:                                            ; preds = %bb111
  %675 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %674, i8* noalias getelementptr inbounds ([26 x i8]* @.str9143, i64 0, i64 0), i8* %673, i32 %670) nounwind, !dbg !6066
  br label %bb114, !dbg !6066

bb113:                                            ; preds = %bb111
  %676 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %674, i8* noalias getelementptr inbounds ([26 x i8]* @.str10144, i64 0, i64 0), i8* %673, i32 %670) nounwind, !dbg !6067
  br label %bb114, !dbg !6067

bb114:                                            ; preds = %bb113, %bb112, %bb110
  %677 = load i8* %c, align 1, !dbg !6068
  %678 = sext i8 %677 to i32, !dbg !6068
  %679 = load %struct._getopt_data** %d_addr, align 8, !dbg !6068
  %680 = getelementptr inbounds %struct._getopt_data* %679, i32 0, i32 2, !dbg !6068
  store i32 %678, i32* %680, align 8, !dbg !6068
  store i32 63, i32* %0, align 4, !dbg !6069
  br label %bb133, !dbg !6069

bb115:                                            ; preds = %bb109
  %681 = load i8** %temp, align 8, !dbg !6070
  %682 = getelementptr inbounds i8* %681, i64 1, !dbg !6070
  %683 = load i8* %682, align 1, !dbg !6070
  %684 = icmp eq i8 %683, 58, !dbg !6070
  br i1 %684, label %bb116, label %bb132, !dbg !6070

bb116:                                            ; preds = %bb115
  %685 = load i8** %temp, align 8, !dbg !6071
  %686 = getelementptr inbounds i8* %685, i64 2, !dbg !6071
  %687 = load i8* %686, align 1, !dbg !6071
  %688 = icmp eq i8 %687, 58, !dbg !6071
  %689 = load %struct._getopt_data** %d_addr, align 8, !dbg !6072
  %690 = getelementptr inbounds %struct._getopt_data* %689, i32 0, i32 5, !dbg !6072
  %691 = load i8** %690, align 8, !dbg !6072
  %692 = load i8* %691, align 1, !dbg !6072
  %693 = icmp ne i8 %692, 0, !dbg !6072
  %694 = load %struct._getopt_data** %d_addr, align 8, !dbg !6073
  br i1 %688, label %bb117, label %bb121, !dbg !6071

bb117:                                            ; preds = %bb116
  br i1 %693, label %bb118, label %bb119, !dbg !6072

bb118:                                            ; preds = %bb117
  %695 = getelementptr inbounds %struct._getopt_data* %694, i32 0, i32 5, !dbg !6073
  %696 = load i8** %695, align 8, !dbg !6073
  %697 = load %struct._getopt_data** %d_addr, align 8, !dbg !6073
  %698 = getelementptr inbounds %struct._getopt_data* %697, i32 0, i32 3, !dbg !6073
  store i8* %696, i8** %698, align 8, !dbg !6073
  %699 = load %struct._getopt_data** %d_addr, align 8, !dbg !6074
  %700 = getelementptr inbounds %struct._getopt_data* %699, i32 0, i32 0, !dbg !6074
  %701 = load i32* %700, align 8, !dbg !6074
  %702 = add nsw i32 %701, 1, !dbg !6074
  %703 = load %struct._getopt_data** %d_addr, align 8, !dbg !6074
  %704 = getelementptr inbounds %struct._getopt_data* %703, i32 0, i32 0, !dbg !6074
  store i32 %702, i32* %704, align 8, !dbg !6074
  br label %bb120, !dbg !6074

bb119:                                            ; preds = %bb117
  %705 = getelementptr inbounds %struct._getopt_data* %694, i32 0, i32 3, !dbg !6075
  store i8* null, i8** %705, align 8, !dbg !6075
  br label %bb120, !dbg !6075

bb120:                                            ; preds = %bb119, %bb118
  %706 = load %struct._getopt_data** %d_addr, align 8, !dbg !6076
  %707 = getelementptr inbounds %struct._getopt_data* %706, i32 0, i32 5, !dbg !6076
  store i8* null, i8** %707, align 8, !dbg !6076
  br label %bb132, !dbg !6076

bb121:                                            ; preds = %bb116
  br i1 %693, label %bb122, label %bb123, !dbg !6077

bb122:                                            ; preds = %bb121
  %708 = getelementptr inbounds %struct._getopt_data* %694, i32 0, i32 5, !dbg !6078
  %709 = load i8** %708, align 8, !dbg !6078
  %710 = load %struct._getopt_data** %d_addr, align 8, !dbg !6078
  %711 = getelementptr inbounds %struct._getopt_data* %710, i32 0, i32 3, !dbg !6078
  store i8* %709, i8** %711, align 8, !dbg !6078
  %712 = load %struct._getopt_data** %d_addr, align 8, !dbg !6079
  %713 = getelementptr inbounds %struct._getopt_data* %712, i32 0, i32 0, !dbg !6079
  %714 = load i32* %713, align 8, !dbg !6079
  %715 = add nsw i32 %714, 1, !dbg !6079
  %716 = load %struct._getopt_data** %d_addr, align 8, !dbg !6079
  %717 = getelementptr inbounds %struct._getopt_data* %716, i32 0, i32 0, !dbg !6079
  store i32 %715, i32* %717, align 8, !dbg !6079
  br label %bb131, !dbg !6079

bb123:                                            ; preds = %bb121
  %718 = getelementptr inbounds %struct._getopt_data* %694, i32 0, i32 0, !dbg !6080
  %719 = load i32* %718, align 8, !dbg !6080
  %720 = load i32* %argc_addr, align 4, !dbg !6080
  %721 = icmp eq i32 %719, %720, !dbg !6080
  br i1 %721, label %bb124, label %bb130, !dbg !6080

bb124:                                            ; preds = %bb123
  %722 = load i32* %print_errors, align 4, !dbg !6081
  %723 = icmp ne i32 %722, 0, !dbg !6081
  br i1 %723, label %bb125, label %bb126, !dbg !6081

bb125:                                            ; preds = %bb124
  %724 = load i8* %c, align 1, !dbg !6082
  %725 = sext i8 %724 to i32, !dbg !6082
  %726 = load i8*** %argv_addr, align 8, !dbg !6082
  %727 = getelementptr inbounds i8** %726, i64 0, !dbg !6082
  %728 = load i8** %727, align 1, !dbg !6082
  %729 = load %4** @stderr, align 8, !dbg !6082
  %730 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %729, i8* noalias getelementptr inbounds ([39 x i8]* @.str11145, i64 0, i64 0), i8* %728, i32 %725) nounwind, !dbg !6082
  br label %bb126, !dbg !6082

bb126:                                            ; preds = %bb125, %bb124
  %731 = load i8* %c, align 1, !dbg !6083
  %732 = sext i8 %731 to i32, !dbg !6083
  %733 = load %struct._getopt_data** %d_addr, align 8, !dbg !6083
  %734 = getelementptr inbounds %struct._getopt_data* %733, i32 0, i32 2, !dbg !6083
  store i32 %732, i32* %734, align 8, !dbg !6083
  %735 = load i8** %optstring_addr, align 8, !dbg !6084
  %736 = getelementptr inbounds i8* %735, i64 0, !dbg !6084
  %737 = load i8* %736, align 1, !dbg !6084
  %738 = icmp eq i8 %737, 58, !dbg !6084
  br i1 %738, label %bb127, label %bb128, !dbg !6084

bb127:                                            ; preds = %bb126
  store i8 58, i8* %c, align 1, !dbg !6085
  br label %bb131, !dbg !6085

bb128:                                            ; preds = %bb126
  store i8 63, i8* %c, align 1, !dbg !6086
  br label %bb131, !dbg !6086

bb130:                                            ; preds = %bb123
  %739 = load %struct._getopt_data** %d_addr, align 8, !dbg !6087
  %740 = getelementptr inbounds %struct._getopt_data* %739, i32 0, i32 0, !dbg !6087
  %741 = load i32* %740, align 8, !dbg !6087
  %742 = load i8*** %argv_addr, align 8, !dbg !6087
  %743 = sext i32 %741 to i64, !dbg !6087
  %744 = getelementptr inbounds i8** %742, i64 %743, !dbg !6087
  %745 = load i8** %744, align 1, !dbg !6087
  %746 = load %struct._getopt_data** %d_addr, align 8, !dbg !6087
  %747 = getelementptr inbounds %struct._getopt_data* %746, i32 0, i32 3, !dbg !6087
  store i8* %745, i8** %747, align 8, !dbg !6087
  %748 = add nsw i32 %741, 1, !dbg !6087
  %749 = load %struct._getopt_data** %d_addr, align 8, !dbg !6087
  %750 = getelementptr inbounds %struct._getopt_data* %749, i32 0, i32 0, !dbg !6087
  store i32 %748, i32* %750, align 8, !dbg !6087
  br label %bb131, !dbg !6087

bb131:                                            ; preds = %bb127, %bb128, %bb130, %bb122
  %751 = load %struct._getopt_data** %d_addr, align 8, !dbg !6088
  %752 = getelementptr inbounds %struct._getopt_data* %751, i32 0, i32 5, !dbg !6088
  store i8* null, i8** %752, align 8, !dbg !6088
  br label %bb132, !dbg !6088

bb132:                                            ; preds = %bb131, %bb120, %bb115
  %753 = load i8* %c, align 1, !dbg !6089
  %754 = sext i8 %753 to i32, !dbg !6089
  store i32 %754, i32* %0, align 4, !dbg !6089
  br label %bb133, !dbg !6089

bb133:                                            ; preds = %bb132, %bb114, %bb105, %bb97, %bb96, %bb92, %bb83, %bb74, %bb42, %bb41, %bb37, %bb2
  %755 = load i32* %0, align 4, !dbg !5958
  store i32 %755, i32* %retval, align 4, !dbg !5958
  %retval134 = load i32* %retval, !dbg !5958
  ret i32 %retval134, !dbg !5958
}

define hidden i32 @_getopt_internal(i32 %argc, i8** %argv, i8* %optstring, %struct.option* %longopts, i32* %longind, i32 %long_only) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %optstring_addr = alloca i8*, align 8
  %longopts_addr = alloca %struct.option*, align 8
  %longind_addr = alloca i32*, align 8
  %long_only_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %result = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %optstring, i8** %optstring_addr
  store %struct.option* %longopts, %struct.option** %longopts_addr
  store i32* %longind, i32** %longind_addr
  store i32 %long_only, i32* %long_only_addr
  %1 = load i32* @optind, align 4, !dbg !6090
  store i32 %1, i32* getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 0), align 8, !dbg !6090
  %2 = load i32* @opterr, align 4, !dbg !6092
  store i32 %2, i32* getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 1), align 4, !dbg !6092
  %3 = load i32* %argc_addr, align 4, !dbg !6093
  %4 = load i8*** %argv_addr, align 8, !dbg !6093
  %5 = load i8** %optstring_addr, align 8, !dbg !6093
  %6 = load %struct.option** %longopts_addr, align 8, !dbg !6093
  %7 = load i32** %longind_addr, align 8, !dbg !6093
  %8 = load i32* %long_only_addr, align 4, !dbg !6093
  %9 = call i32 @_getopt_internal_r(i32 %3, i8** %4, i8* %5, %struct.option* %6, i32* %7, i32 %8, %struct._getopt_data* @getopt_data) nounwind, !dbg !6093
  store i32 %9, i32* %result, align 4, !dbg !6093
  %10 = load i32* getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 0), align 8, !dbg !6094
  store i32 %10, i32* @optind, align 4, !dbg !6094
  %11 = load i8** getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 3), align 8, !dbg !6095
  store i8* %11, i8** @optarg, align 8, !dbg !6095
  %12 = load i32* getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 2), align 8, !dbg !6096
  store i32 %12, i32* @optopt, align 4, !dbg !6096
  %13 = load i32* %result, align 4, !dbg !6097
  store i32 %13, i32* %0, align 4, !dbg !6097
  %14 = load i32* %0, align 4, !dbg !6097
  store i32 %14, i32* %retval, align 4, !dbg !6097
  %retval1 = load i32* %retval, !dbg !6097
  ret i32 %retval1, !dbg !6097
}

define i32 @getopt(i32 %argc, i8** %argv, i8* %optstring) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %optstring_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %optstring, i8** %optstring_addr
  %1 = load i32* %argc_addr, align 4, !dbg !6098
  %2 = load i8*** %argv_addr, align 8, !dbg !6098
  %3 = load i8** %optstring_addr, align 8, !dbg !6098
  %4 = call i32 @_getopt_internal(i32 %1, i8** %2, i8* %3, %struct.option* null, i32* null, i32 0) nounwind, !dbg !6098
  store i32 %4, i32* %0, align 4, !dbg !6098
  %5 = load i32* %0, align 4, !dbg !6098
  store i32 %5, i32* %retval, align 4, !dbg !6098
  %retval1 = load i32* %retval, !dbg !6098
  ret i32 %retval1, !dbg !6098
}

define i32 @getopt_long(i32 %argc, i8** %argv, i8* %options, %struct.option* %long_options, i32* %opt_index) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %options_addr = alloca i8*, align 8
  %long_options_addr = alloca %struct.option*, align 8
  %opt_index_addr = alloca i32*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %options, i8** %options_addr
  store %struct.option* %long_options, %struct.option** %long_options_addr
  store i32* %opt_index, i32** %opt_index_addr
  %1 = load i32* %argc_addr, align 4, !dbg !6100
  %2 = load i8*** %argv_addr, align 8, !dbg !6100
  %3 = load i8** %options_addr, align 8, !dbg !6100
  %4 = load %struct.option** %long_options_addr, align 8, !dbg !6100
  %5 = load i32** %opt_index_addr, align 8, !dbg !6100
  %6 = call i32 @_getopt_internal(i32 %1, i8** %2, i8* %3, %struct.option* %4, i32* %5, i32 0) nounwind, !dbg !6100
  store i32 %6, i32* %0, align 4, !dbg !6100
  %7 = load i32* %0, align 4, !dbg !6100
  store i32 %7, i32* %retval, align 4, !dbg !6100
  %retval1 = load i32* %retval, !dbg !6100
  ret i32 %retval1, !dbg !6100
}

define i32 @getopt_long_only(i32 %argc, i8** %argv, i8* %options, %struct.option* %long_options, i32* %opt_index) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %options_addr = alloca i8*, align 8
  %long_options_addr = alloca %struct.option*, align 8
  %opt_index_addr = alloca i32*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %options, i8** %options_addr
  store %struct.option* %long_options, %struct.option** %long_options_addr
  store i32* %opt_index, i32** %opt_index_addr
  %1 = load i32* %argc_addr, align 4, !dbg !6102
  %2 = load i8*** %argv_addr, align 8, !dbg !6102
  %3 = load i8** %options_addr, align 8, !dbg !6102
  %4 = load %struct.option** %long_options_addr, align 8, !dbg !6102
  %5 = load i32** %opt_index_addr, align 8, !dbg !6102
  %6 = call i32 @_getopt_internal(i32 %1, i8** %2, i8* %3, %struct.option* %4, i32* %5, i32 1) nounwind, !dbg !6102
  store i32 %6, i32* %0, align 4, !dbg !6102
  %7 = load i32* %0, align 4, !dbg !6102
  store i32 %7, i32* %retval, align 4, !dbg !6102
  %retval1 = load i32* %retval, !dbg !6102
  ret i32 %retval1, !dbg !6102
}

define internal void @__setutent() nounwind {
entry:
  %ret = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i32* @static_fd, align 4, !dbg !6104
  %1 = icmp eq i32 %0, -1, !dbg !6104
  br i1 %1, label %bb, label %bb5, !dbg !6104

bb:                                               ; preds = %entry
  %2 = load i8** @static_ut_name, align 8, !dbg !6106
  %3 = call i32 (i8*, i32, ...)* @open(i8* %2, i32 2) nounwind, !dbg !6106
  store i32 %3, i32* @static_fd, align 4, !dbg !6106
  %4 = load i32* @static_fd, align 4, !dbg !6106
  %5 = icmp slt i32 %4, 0, !dbg !6106
  br i1 %5, label %bb1, label %bb2, !dbg !6106

bb1:                                              ; preds = %bb
  %6 = load i8** @static_ut_name, align 8, !dbg !6107
  %7 = call i32 (i8*, i32, ...)* @open(i8* %6, i32 0) nounwind, !dbg !6107
  store i32 %7, i32* @static_fd, align 4, !dbg !6107
  %8 = load i32* @static_fd, align 4, !dbg !6107
  %9 = icmp slt i32 %8, 0, !dbg !6107
  br i1 %9, label %bummer, label %bb2, !dbg !6107

bb2:                                              ; preds = %bb1, %bb
  %10 = load i32* @static_fd, align 4, !dbg !6108
  %11 = call i32 (i32, i32, ...)* @fcntl(i32 %10, i32 1, i32 0) nounwind, !dbg !6108
  store i32 %11, i32* %ret, align 4, !dbg !6108
  %12 = load i32* %ret, align 4, !dbg !6109
  %13 = icmp sge i32 %12, 0, !dbg !6109
  br i1 %13, label %bb3, label %bb4, !dbg !6109

bb3:                                              ; preds = %bb2
  %14 = load i32* %ret, align 4, !dbg !6110
  %15 = or i32 %14, 1, !dbg !6110
  %16 = load i32* @static_fd, align 4, !dbg !6110
  %17 = call i32 (i32, i32, ...)* @fcntl(i32 %16, i32 2, i32 %15) nounwind, !dbg !6110
  store i32 %17, i32* %ret, align 4, !dbg !6110
  br label %bb4, !dbg !6110

bb4:                                              ; preds = %bb3, %bb2
  %18 = load i32* %ret, align 4, !dbg !6111
  %19 = icmp slt i32 %18, 0, !dbg !6111
  br i1 %19, label %bummer, label %bb5, !dbg !6111

bummer:                                           ; preds = %bb4, %bb1
  store i32 -1, i32* @static_fd, align 4, !dbg !6112
  %20 = load i32* @static_fd, align 4, !dbg !6113
  %21 = call i32 @close(i32 %20) nounwind, !dbg !6113
  br label %return, !dbg !6113

bb5:                                              ; preds = %bb4, %entry
  %22 = load i32* @static_fd, align 4, !dbg !6114
  %23 = call i64 @lseek(i32 %22, i64 0, i32 0) nounwind, !dbg !6114
  br label %return, !dbg !6114

return:                                           ; preds = %bummer, %bb5
  ret void, !dbg !6115
}

define void @setutent() nounwind {
entry:
  call void @__setutent() nounwind, !dbg !6116
  ret void, !dbg !6118
}

define internal %struct.utmp* @__getutent(i32 %utmp_fd) nounwind {
entry:
  %utmp_fd_addr = alloca i32, align 4
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %ret = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %utmp_fd, i32* %utmp_fd_addr
  store %struct.utmp* null, %struct.utmp** %ret, align 8, !dbg !6119
  %1 = load i32* %utmp_fd_addr, align 4, !dbg !6121
  %2 = icmp eq i32 %1, -1, !dbg !6121
  br i1 %2, label %bb, label %bb1, !dbg !6121

bb:                                               ; preds = %entry
  call void @__setutent() nounwind, !dbg !6122
  br label %bb1, !dbg !6122

bb1:                                              ; preds = %bb, %entry
  %3 = load i32* %utmp_fd_addr, align 4, !dbg !6123
  %4 = icmp eq i32 %3, -1, !dbg !6123
  br i1 %4, label %bb2, label %bb3, !dbg !6123

bb2:                                              ; preds = %bb1
  store %struct.utmp* null, %struct.utmp** %0, align 8, !dbg !6124
  br label %bb6, !dbg !6124

bb3:                                              ; preds = %bb1
  %5 = load i32* %utmp_fd_addr, align 4, !dbg !6125
  %6 = call i64 @read(i32 %5, i8* bitcast (%struct.utmp* @static_utmp to i8*), i64 400) nounwind, !dbg !6125
  %7 = icmp eq i64 %6, 400, !dbg !6125
  br i1 %7, label %bb4, label %bb5, !dbg !6125

bb4:                                              ; preds = %bb3
  store %struct.utmp* @static_utmp, %struct.utmp** %ret, align 8, !dbg !6126
  br label %bb5, !dbg !6126

bb5:                                              ; preds = %bb4, %bb3
  %8 = load %struct.utmp** %ret, align 8, !dbg !6127
  store %struct.utmp* %8, %struct.utmp** %0, align 8, !dbg !6127
  br label %bb6, !dbg !6127

bb6:                                              ; preds = %bb5, %bb2
  %9 = load %struct.utmp** %0, align 8, !dbg !6124
  store %struct.utmp* %9, %struct.utmp** %retval, align 8, !dbg !6124
  %retval7 = load %struct.utmp** %retval, !dbg !6124
  ret %struct.utmp* %retval7, !dbg !6124
}

define void @endutent() nounwind {
entry:
  %0 = load i32* @static_fd, align 4, !dbg !6128
  %1 = icmp ne i32 %0, -1, !dbg !6128
  br i1 %1, label %bb, label %bb1, !dbg !6128

bb:                                               ; preds = %entry
  %2 = load i32* @static_fd, align 4, !dbg !6130
  %3 = call i32 @close(i32 %2) nounwind, !dbg !6130
  br label %bb1, !dbg !6130

bb1:                                              ; preds = %bb, %entry
  store i32 -1, i32* @static_fd, align 4, !dbg !6131
  ret void, !dbg !6132
}

define %struct.utmp* @getutent() nounwind {
entry:
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %ret = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* null, %struct.utmp** %ret, align 8, !dbg !6133
  %1 = load i32* @static_fd, align 4, !dbg !6135
  %2 = call %struct.utmp* @__getutent(i32 %1) nounwind, !dbg !6135
  store %struct.utmp* %2, %struct.utmp** %ret, align 8, !dbg !6135
  %3 = load %struct.utmp** %ret, align 8, !dbg !6136
  store %struct.utmp* %3, %struct.utmp** %0, align 8, !dbg !6136
  %4 = load %struct.utmp** %0, align 8, !dbg !6136
  store %struct.utmp* %4, %struct.utmp** %retval, align 8, !dbg !6136
  %retval1 = load %struct.utmp** %retval, !dbg !6136
  ret %struct.utmp* %retval1, !dbg !6136
}

define internal %struct.utmp* @__getutid(%struct.utmp* %utmp_entry) nounwind {
entry:
  %utmp_entry_addr = alloca %struct.utmp*, align 8
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %lutmp = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* %utmp_entry, %struct.utmp** %utmp_entry_addr
  br label %bb12, !dbg !6137

bb:                                               ; preds = %bb12
  %1 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6139
  %2 = getelementptr inbounds %struct.utmp* %1, i32 0, i32 0, !dbg !6139
  %3 = load i16* %2, align 8, !dbg !6139
  %4 = icmp eq i16 %3, 1, !dbg !6139
  br i1 %4, label %bb4, label %bb1, !dbg !6139

bb1:                                              ; preds = %bb
  %5 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6139
  %6 = getelementptr inbounds %struct.utmp* %5, i32 0, i32 0, !dbg !6139
  %7 = load i16* %6, align 8, !dbg !6139
  %8 = icmp eq i16 %7, 2, !dbg !6139
  br i1 %8, label %bb4, label %bb2, !dbg !6139

bb2:                                              ; preds = %bb1
  %9 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6139
  %10 = getelementptr inbounds %struct.utmp* %9, i32 0, i32 0, !dbg !6139
  %11 = load i16* %10, align 8, !dbg !6139
  %12 = icmp eq i16 %11, 3, !dbg !6139
  br i1 %12, label %bb4, label %bb3, !dbg !6139

bb3:                                              ; preds = %bb2
  %13 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6139
  %14 = getelementptr inbounds %struct.utmp* %13, i32 0, i32 0, !dbg !6139
  %15 = load i16* %14, align 8, !dbg !6139
  %16 = icmp eq i16 %15, 4, !dbg !6139
  br i1 %16, label %bb4, label %bb6, !dbg !6139

bb4:                                              ; preds = %bb3, %bb2, %bb1, %bb
  %17 = load %struct.utmp** %lutmp, align 8, !dbg !6139
  %18 = getelementptr inbounds %struct.utmp* %17, i32 0, i32 0, !dbg !6139
  %19 = load i16* %18, align 8, !dbg !6139
  %20 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6139
  %21 = getelementptr inbounds %struct.utmp* %20, i32 0, i32 0, !dbg !6139
  %22 = load i16* %21, align 8, !dbg !6139
  %23 = icmp eq i16 %19, %22, !dbg !6139
  br i1 %23, label %bb5, label %bb6, !dbg !6139

bb5:                                              ; preds = %bb4
  %24 = load %struct.utmp** %lutmp, align 8, !dbg !6140
  store %struct.utmp* %24, %struct.utmp** %0, align 8, !dbg !6140
  br label %bb14, !dbg !6140

bb6:                                              ; preds = %bb4, %bb3
  %25 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6141
  %26 = getelementptr inbounds %struct.utmp* %25, i32 0, i32 0, !dbg !6141
  %27 = load i16* %26, align 8, !dbg !6141
  %28 = icmp eq i16 %27, 5, !dbg !6141
  br i1 %28, label %bb10, label %bb7, !dbg !6141

bb7:                                              ; preds = %bb6
  %29 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6141
  %30 = getelementptr inbounds %struct.utmp* %29, i32 0, i32 0, !dbg !6141
  %31 = load i16* %30, align 8, !dbg !6141
  %32 = icmp eq i16 %31, 8, !dbg !6141
  br i1 %32, label %bb10, label %bb8, !dbg !6141

bb8:                                              ; preds = %bb7
  %33 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6141
  %34 = getelementptr inbounds %struct.utmp* %33, i32 0, i32 0, !dbg !6141
  %35 = load i16* %34, align 8, !dbg !6141
  %36 = icmp eq i16 %35, 6, !dbg !6141
  br i1 %36, label %bb10, label %bb9, !dbg !6141

bb9:                                              ; preds = %bb8
  %37 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6141
  %38 = getelementptr inbounds %struct.utmp* %37, i32 0, i32 0, !dbg !6141
  %39 = load i16* %38, align 8, !dbg !6141
  %40 = icmp eq i16 %39, 7, !dbg !6141
  br i1 %40, label %bb10, label %bb12, !dbg !6141

bb10:                                             ; preds = %bb9, %bb8, %bb7, %bb6
  %41 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6141
  %42 = getelementptr inbounds %struct.utmp* %41, i32 0, i32 3, !dbg !6141
  %43 = getelementptr inbounds [4 x i8]* %42, i64 0, i64 0, !dbg !6141
  %44 = load %struct.utmp** %lutmp, align 8, !dbg !6141
  %45 = getelementptr inbounds %struct.utmp* %44, i32 0, i32 3, !dbg !6141
  %46 = getelementptr inbounds [4 x i8]* %45, i64 0, i64 0, !dbg !6141
  %47 = call i32 @strncmp(i8* %46, i8* %43, i64 4) nounwind readonly, !dbg !6141
  %48 = icmp eq i32 %47, 0, !dbg !6141
  br i1 %48, label %bb11, label %bb12, !dbg !6141

bb11:                                             ; preds = %bb10
  %49 = load %struct.utmp** %lutmp, align 8, !dbg !6142
  store %struct.utmp* %49, %struct.utmp** %0, align 8, !dbg !6142
  br label %bb14, !dbg !6142

bb12:                                             ; preds = %bb10, %bb9, %entry
  %50 = load i32* @static_fd, align 4, !dbg !6137
  %51 = call %struct.utmp* @__getutent(i32 %50) nounwind, !dbg !6137
  store %struct.utmp* %51, %struct.utmp** %lutmp, align 8, !dbg !6137
  %52 = load %struct.utmp** %lutmp, align 8, !dbg !6137
  %53 = icmp ne %struct.utmp* %52, null, !dbg !6137
  br i1 %53, label %bb, label %bb13, !dbg !6137

bb13:                                             ; preds = %bb12
  store %struct.utmp* null, %struct.utmp** %0, align 8, !dbg !6143
  br label %bb14, !dbg !6143

bb14:                                             ; preds = %bb13, %bb11, %bb5
  %54 = load %struct.utmp** %0, align 8, !dbg !6140
  store %struct.utmp* %54, %struct.utmp** %retval, align 8, !dbg !6140
  %retval15 = load %struct.utmp** %retval, !dbg !6140
  ret %struct.utmp* %retval15, !dbg !6140
}

define %struct.utmp* @getutid(%struct.utmp* %utmp_entry) nounwind {
entry:
  %utmp_entry_addr = alloca %struct.utmp*, align 8
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %ret = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* %utmp_entry, %struct.utmp** %utmp_entry_addr
  store %struct.utmp* null, %struct.utmp** %ret, align 8, !dbg !6144
  %1 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6146
  %2 = call %struct.utmp* @__getutid(%struct.utmp* %1) nounwind, !dbg !6146
  store %struct.utmp* %2, %struct.utmp** %ret, align 8, !dbg !6146
  %3 = load %struct.utmp** %ret, align 8, !dbg !6147
  store %struct.utmp* %3, %struct.utmp** %0, align 8, !dbg !6147
  %4 = load %struct.utmp** %0, align 8, !dbg !6147
  store %struct.utmp* %4, %struct.utmp** %retval, align 8, !dbg !6147
  %retval1 = load %struct.utmp** %retval, !dbg !6147
  ret %struct.utmp* %retval1, !dbg !6147
}

define %struct.utmp* @getutline(%struct.utmp* %utmp_entry) nounwind {
entry:
  %utmp_entry_addr = alloca %struct.utmp*, align 8
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %lutmp = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* %utmp_entry, %struct.utmp** %utmp_entry_addr
  store %struct.utmp* null, %struct.utmp** %lutmp, align 8, !dbg !6148
  br label %bb3, !dbg !6148

bb:                                               ; preds = %bb3
  %1 = load %struct.utmp** %lutmp, align 8, !dbg !6150
  %2 = getelementptr inbounds %struct.utmp* %1, i32 0, i32 0, !dbg !6150
  %3 = load i16* %2, align 8, !dbg !6150
  %4 = icmp eq i16 %3, 7, !dbg !6150
  br i1 %4, label %bb2, label %bb1, !dbg !6150

bb1:                                              ; preds = %bb
  %5 = load %struct.utmp** %lutmp, align 8, !dbg !6150
  %6 = getelementptr inbounds %struct.utmp* %5, i32 0, i32 0, !dbg !6150
  %7 = load i16* %6, align 8, !dbg !6150
  %8 = icmp eq i16 %7, 6, !dbg !6150
  br i1 %8, label %bb2, label %bb3, !dbg !6150

bb2:                                              ; preds = %bb1, %bb
  %9 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6150
  %10 = getelementptr inbounds %struct.utmp* %9, i32 0, i32 2, !dbg !6150
  %11 = getelementptr inbounds [32 x i8]* %10, i64 0, i64 0, !dbg !6150
  %12 = load %struct.utmp** %lutmp, align 8, !dbg !6150
  %13 = getelementptr inbounds %struct.utmp* %12, i32 0, i32 2, !dbg !6150
  %14 = getelementptr inbounds [32 x i8]* %13, i64 0, i64 0, !dbg !6150
  %15 = call i32 @strcmp(i8* %14, i8* %11) nounwind readonly, !dbg !6150
  %16 = icmp eq i32 %15, 0, !dbg !6150
  br i1 %16, label %bb4, label %bb3, !dbg !6150

bb3:                                              ; preds = %bb2, %bb1, %entry
  %17 = load i32* @static_fd, align 4, !dbg !6151
  %18 = call %struct.utmp* @__getutent(i32 %17) nounwind, !dbg !6151
  store %struct.utmp* %18, %struct.utmp** %lutmp, align 8, !dbg !6151
  %19 = load %struct.utmp** %lutmp, align 8, !dbg !6151
  %20 = icmp ne %struct.utmp* %19, null, !dbg !6151
  br i1 %20, label %bb, label %bb4, !dbg !6151

bb4:                                              ; preds = %bb3, %bb2
  %21 = load %struct.utmp** %lutmp, align 8, !dbg !6152
  store %struct.utmp* %21, %struct.utmp** %0, align 8, !dbg !6152
  %22 = load %struct.utmp** %0, align 8, !dbg !6152
  store %struct.utmp* %22, %struct.utmp** %retval, align 8, !dbg !6152
  %retval5 = load %struct.utmp** %retval, !dbg !6152
  ret %struct.utmp* %retval5, !dbg !6152
}

define %struct.utmp* @pututline(%struct.utmp* %utmp_entry) nounwind {
entry:
  %utmp_entry_addr = alloca %struct.utmp*, align 8
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* %utmp_entry, %struct.utmp** %utmp_entry_addr
  %1 = load i32* @static_fd, align 4, !dbg !6153
  %2 = call i64 @lseek(i32 %1, i64 -400, i32 1) nounwind, !dbg !6153
  %3 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6155
  %4 = call %struct.utmp* @__getutid(%struct.utmp* %3) nounwind, !dbg !6155
  %5 = icmp ne %struct.utmp* %4, null, !dbg !6155
  %6 = load i32* @static_fd, align 4, !dbg !6156
  br i1 %5, label %bb, label %bb1, !dbg !6155

bb:                                               ; preds = %entry
  %7 = call i64 @lseek(i32 %6, i64 -400, i32 1) nounwind, !dbg !6156
  br label %bb2, !dbg !6156

bb1:                                              ; preds = %entry
  %8 = call i64 @lseek(i32 %6, i64 0, i32 2) nounwind, !dbg !6157
  br label %bb2, !dbg !6157

bb2:                                              ; preds = %bb1, %bb
  %9 = load i32* @static_fd, align 4, !dbg !6158
  %10 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6158
  %11 = bitcast %struct.utmp* %10 to i8*, !dbg !6158
  %12 = call i64 @write(i32 %9, i8* %11, i64 400) nounwind, !dbg !6158
  %13 = icmp ne i64 %12, 400, !dbg !6158
  br i1 %13, label %bb3, label %bb4, !dbg !6158

bb3:                                              ; preds = %bb2
  store %struct.utmp* null, %struct.utmp** %utmp_entry_addr, align 8, !dbg !6159
  br label %bb4, !dbg !6159

bb4:                                              ; preds = %bb3, %bb2
  %14 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6160
  store %struct.utmp* %14, %struct.utmp** %0, align 8, !dbg !6160
  %15 = load %struct.utmp** %0, align 8, !dbg !6160
  store %struct.utmp* %15, %struct.utmp** %retval, align 8, !dbg !6160
  %retval5 = load %struct.utmp** %retval, !dbg !6160
  ret %struct.utmp* %retval5, !dbg !6160
}

define i32 @utmpname(i8* %new_ut_name) nounwind {
entry:
  %new_ut_name_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %new_ut_name, i8** %new_ut_name_addr
  %1 = load i8** %new_ut_name_addr, align 8, !dbg !6161
  %2 = icmp ne i8* %1, null, !dbg !6161
  br i1 %2, label %bb, label %bb4, !dbg !6161

bb:                                               ; preds = %entry
  %3 = load i8** @static_ut_name, align 8, !dbg !6163
  %4 = icmp ne i8* %3, getelementptr inbounds ([14 x i8]* @default_file_name, i64 0, i64 0), !dbg !6163
  br i1 %4, label %bb1, label %bb2, !dbg !6163

bb1:                                              ; preds = %bb
  %5 = load i8** @static_ut_name, align 8, !dbg !6164
  call void @free(i8* %5) nounwind, !dbg !6164
  br label %bb2, !dbg !6164

bb2:                                              ; preds = %bb1, %bb
  %6 = load i8** %new_ut_name_addr, align 8, !dbg !6165
  %7 = call noalias i8* @strdup(i8* %6) nounwind, !dbg !6165
  store i8* %7, i8** @static_ut_name, align 8, !dbg !6165
  %8 = load i8** @static_ut_name, align 8, !dbg !6166
  %9 = icmp eq i8* %8, null, !dbg !6166
  br i1 %9, label %bb3, label %bb4, !dbg !6166

bb3:                                              ; preds = %bb2
  store i8* getelementptr inbounds ([14 x i8]* @default_file_name, i64 0, i64 0), i8** @static_ut_name, align 8, !dbg !6167
  br label %bb4, !dbg !6167

bb4:                                              ; preds = %bb3, %bb2, %entry
  %10 = load i32* @static_fd, align 4, !dbg !6168
  %11 = icmp ne i32 %10, -1, !dbg !6168
  br i1 %11, label %bb5, label %bb6, !dbg !6168

bb5:                                              ; preds = %bb4
  %12 = load i32* @static_fd, align 4, !dbg !6169
  %13 = call i32 @close(i32 %12) nounwind, !dbg !6169
  br label %bb6, !dbg !6169

bb6:                                              ; preds = %bb5, %bb4
  store i32 -1, i32* @static_fd, align 4, !dbg !6170
  store i32 0, i32* %0, align 4, !dbg !6171
  %14 = load i32* %0, align 4, !dbg !6171
  store i32 %14, i32* %retval, align 4, !dbg !6171
  %retval7 = load i32* %retval, !dbg !6171
  ret i32 %retval7, !dbg !6171
}

define i32 @iswalnum(i32 %wc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = load i32* %wc_addr, align 4, !dbg !6172
  %2 = call i32 @iswctype(i32 %1, i32 1) nounwind, !dbg !6172
  store i32 %2, i32* %0, align 4, !dbg !6172
  %3 = load i32* %0, align 4, !dbg !6172
  store i32 %3, i32* %retval, align 4, !dbg !6172
  %retval1 = load i32* %retval, !dbg !6172
  ret i32 %retval1, !dbg !6173
}

define i32 @iswcntrl(i32 %wc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = load i32* %wc_addr, align 4, !dbg !6175
  %2 = call i32 @iswctype(i32 %1, i32 4) nounwind, !dbg !6175
  store i32 %2, i32* %0, align 4, !dbg !6175
  %3 = load i32* %0, align 4, !dbg !6175
  store i32 %3, i32* %retval, align 4, !dbg !6175
  %retval1 = load i32* %retval, !dbg !6175
  ret i32 %retval1, !dbg !6176
}

define i32 @iswprint(i32 %wc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = load i32* %wc_addr, align 4, !dbg !6178
  %2 = call i32 @iswctype(i32 %1, i32 8) nounwind, !dbg !6178
  store i32 %2, i32* %0, align 4, !dbg !6178
  %3 = load i32* %0, align 4, !dbg !6178
  store i32 %3, i32* %retval, align 4, !dbg !6178
  %retval1 = load i32* %retval, !dbg !6178
  ret i32 %retval1, !dbg !6179
}

define i32 @iswspace(i32 %wc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = load i32* %wc_addr, align 4, !dbg !6181
  %2 = call i32 @iswctype(i32 %1, i32 10) nounwind, !dbg !6181
  store i32 %2, i32* %0, align 4, !dbg !6181
  %3 = load i32* %0, align 4, !dbg !6181
  store i32 %3, i32* %retval, align 4, !dbg !6181
  %retval1 = load i32* %retval, !dbg !6181
  ret i32 %retval1, !dbg !6182
}

define %struct.lconv* @localeconv() nounwind {
entry:
  %retval = alloca %struct.lconv*
  %0 = alloca %struct.lconv*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* bitcast (%struct.lconv* @the_lconv to i8*), i8** %p, align 8, !dbg !6184
  %1 = load i8** %p, align 8, !dbg !6186
  %2 = bitcast i8* %1 to i8**, !dbg !6186
  store i8* getelementptr inbounds ([2 x i8]* @decpt, i64 0, i64 0), i8** %2, align 8, !dbg !6186
  br label %bb, !dbg !6186

bb:                                               ; preds = %bb, %entry
  %3 = load i8** %p, align 8, !dbg !6187
  %4 = getelementptr inbounds i8* %3, i64 8, !dbg !6187
  store i8* %4, i8** %p, align 8, !dbg !6187
  %5 = load i8** %p, align 8, !dbg !6188
  %6 = bitcast i8* %5 to i8**, !dbg !6188
  store i8* getelementptr inbounds ([2 x i8]* @decpt, i64 0, i64 1), i8** %6, align 8, !dbg !6188
  %7 = load i8** %p, align 8, !dbg !6189
  %8 = icmp ult i8* %7, bitcast (i8** getelementptr inbounds (%struct.lconv* @the_lconv, i64 0, i32 9) to i8*), !dbg !6189
  br i1 %8, label %bb, label %bb1, !dbg !6189

bb1:                                              ; preds = %bb
  store i8* getelementptr inbounds (%struct.lconv* @the_lconv, i64 0, i32 10), i8** %p, align 8, !dbg !6190
  br label %bb2, !dbg !6190

bb2:                                              ; preds = %bb2, %bb1
  %9 = load i8** %p, align 8, !dbg !6191
  store i8 127, i8* %9, align 1, !dbg !6191
  %10 = load i8** %p, align 8, !dbg !6192
  %11 = getelementptr inbounds i8* %10, i64 1, !dbg !6192
  store i8* %11, i8** %p, align 8, !dbg !6192
  %12 = load i8** %p, align 8, !dbg !6193
  %13 = icmp ule i8* %12, getelementptr inbounds (%struct.lconv* @the_lconv, i64 0, i32 23), !dbg !6193
  br i1 %13, label %bb2, label %bb3, !dbg !6193

bb3:                                              ; preds = %bb2
  store %struct.lconv* @the_lconv, %struct.lconv** %0, align 8, !dbg !6194
  %14 = load %struct.lconv** %0, align 8, !dbg !6194
  store %struct.lconv* %14, %struct.lconv** %retval, align 8, !dbg !6194
  %retval4 = load %struct.lconv** %retval, !dbg !6194
  ret %struct.lconv* %retval4, !dbg !6194
}

define i64 @mbrtowc(i32* noalias %pwc, i8* noalias %s, i64 %n, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %pwc_addr = alloca i32*, align 8
  %s_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %wcbuf = alloca [1 x i32]
  %p = alloca i8*
  %r = alloca i64
  %empty_string = alloca [1 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i32* %pwc, i32** %pwc_addr
  store i8* %s, i8** %s_addr
  store i64 %n, i64* %n_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6195
  %2 = icmp eq %struct.__mbstate_t* %1, null, !dbg !6195
  br i1 %2, label %bb, label %bb1, !dbg !6195

bb:                                               ; preds = %entry
  store %struct.__mbstate_t* @mbstate.2221, %struct.__mbstate_t** %ps_addr, align 8, !dbg !6197
  br label %bb1, !dbg !6197

bb1:                                              ; preds = %bb, %entry
  %3 = load i8** %s_addr, align 8, !dbg !6198
  %4 = icmp eq i8* %3, null, !dbg !6198
  br i1 %4, label %bb2, label %bb4, !dbg !6198

bb2:                                              ; preds = %bb1
  %5 = load i8** %s_addr, align 8, !dbg !6199
  %6 = bitcast i8* %5 to i32*, !dbg !6199
  store i32* %6, i32** %pwc_addr, align 8, !dbg !6199
  %7 = getelementptr inbounds [1 x i8]* %empty_string, i64 0, i64 0, !dbg !6200
  store i8 0, i8* %7, align 1, !dbg !6200
  %empty_string3 = bitcast [1 x i8]* %empty_string to i8*, !dbg !6201
  store i8* %empty_string3, i8** %s_addr, align 8, !dbg !6201
  store i64 1, i64* %n_addr, align 8, !dbg !6202
  br label %bb10, !dbg !6202

bb4:                                              ; preds = %bb1
  %8 = load i64* %n_addr, align 8, !dbg !6203
  %9 = icmp eq i64 %8, 0, !dbg !6203
  br i1 %9, label %bb5, label %bb10, !dbg !6203

bb5:                                              ; preds = %bb4
  %10 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6204
  %11 = getelementptr inbounds %struct.__mbstate_t* %10, i32 0, i32 0, !dbg !6204
  %12 = load i32* %11, align 4, !dbg !6204
  %13 = icmp eq i32 %12, 0, !dbg !6204
  br i1 %13, label %bb8, label %bb6, !dbg !6204

bb6:                                              ; preds = %bb5
  %14 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6204
  %15 = getelementptr inbounds %struct.__mbstate_t* %14, i32 0, i32 1, !dbg !6204
  %16 = load i32* %15, align 4, !dbg !6204
  %17 = icmp ne i32 %16, 65535, !dbg !6204
  br i1 %17, label %bb8, label %bb7, !dbg !6204

bb7:                                              ; preds = %bb6
  store i64 -1, i64* %iftmp.0, align 8, !dbg !6204
  br label %bb9, !dbg !6204

bb8:                                              ; preds = %bb6, %bb5
  store i64 -2, i64* %iftmp.0, align 8, !dbg !6204
  br label %bb9, !dbg !6204

bb9:                                              ; preds = %bb8, %bb7
  %18 = load i64* %iftmp.0, align 8, !dbg !6204
  store i64 %18, i64* %0, align 8, !dbg !6204
  br label %bb15, !dbg !6204

bb10:                                             ; preds = %bb4, %bb2
  %19 = load i8** %s_addr, align 8, !dbg !6205
  store i8* %19, i8** %p, align 8, !dbg !6205
  %wcbuf11 = bitcast [1 x i32]* %wcbuf to i32*, !dbg !6206
  %20 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6206
  %21 = call i64 @mbsnrtowcs(i32* noalias %wcbuf11, i8** noalias %p, i64 -1, i64 1, %struct.__mbstate_t* noalias %20) nounwind, !dbg !6206
  store i64 %21, i64* %r, align 8, !dbg !6206
  %22 = load i64* %r, align 8, !dbg !6207
  %23 = icmp sge i64 %22, 0, !dbg !6207
  br i1 %23, label %bb12, label %bb14, !dbg !6207

bb12:                                             ; preds = %bb10
  %24 = load i32** %pwc_addr, align 8, !dbg !6208
  %25 = icmp ne i32* %24, null, !dbg !6208
  br i1 %25, label %bb13, label %bb14, !dbg !6208

bb13:                                             ; preds = %bb12
  %26 = getelementptr inbounds [1 x i32]* %wcbuf, i64 0, i64 0, !dbg !6209
  %27 = load i32* %26, align 4, !dbg !6209
  %28 = load i32** %pwc_addr, align 8, !dbg !6209
  store i32 %27, i32* %28, align 4, !dbg !6209
  br label %bb14, !dbg !6209

bb14:                                             ; preds = %bb13, %bb12, %bb10
  %29 = load i64* %r, align 8, !dbg !6210
  store i64 %29, i64* %0, align 8, !dbg !6210
  br label %bb15, !dbg !6210

bb15:                                             ; preds = %bb14, %bb9
  %30 = load i64* %0, align 8, !dbg !6204
  store i64 %30, i64* %retval, align 8, !dbg !6204
  %retval16 = load i64* %retval, !dbg !6204
  ret i64 %retval16, !dbg !6204
}

define i32 @mbsinit(%struct.__mbstate_t* %ps) nounwind readonly {
entry:
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6211
  %2 = icmp eq %struct.__mbstate_t* %1, null, !dbg !6211
  br i1 %2, label %bb1, label %bb, !dbg !6211

bb:                                               ; preds = %entry
  %3 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6211
  %4 = getelementptr inbounds %struct.__mbstate_t* %3, i32 0, i32 0, !dbg !6211
  %5 = load i32* %4, align 4, !dbg !6211
  %6 = icmp eq i32 %5, 0, !dbg !6211
  br i1 %6, label %bb1, label %bb2, !dbg !6211

bb1:                                              ; preds = %bb, %entry
  store i32 1, i32* %iftmp.0, align 4, !dbg !6211
  br label %bb3, !dbg !6211

bb2:                                              ; preds = %bb
  store i32 0, i32* %iftmp.0, align 4, !dbg !6211
  br label %bb3, !dbg !6211

bb3:                                              ; preds = %bb2, %bb1
  %7 = load i32* %iftmp.0, align 4, !dbg !6211
  store i32 %7, i32* %0, align 4, !dbg !6211
  %8 = load i32* %0, align 4, !dbg !6211
  store i32 %8, i32* %retval, align 4, !dbg !6211
  %retval4 = load i32* %retval, !dbg !6211
  ret i32 %retval4, !dbg !6211
}

define i64 @mbstowcs(i32* noalias %pwcs, i8* noalias %s, i64 %n) nounwind {
entry:
  %pwcs_addr = alloca i32*, align 8
  %s_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %state = alloca %struct.__mbstate_t
  %e = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32* %pwcs, i32** %pwcs_addr
  store i8* %s, i8** %s_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s_addr, align 8, !dbg !6213
  store i8* %1, i8** %e, align 8, !dbg !6213
  %2 = getelementptr inbounds %struct.__mbstate_t* %state, i32 0, i32 0, !dbg !6215
  store i32 0, i32* %2, align 4, !dbg !6215
  %3 = load i32** %pwcs_addr, align 8, !dbg !6216
  %4 = load i64* %n_addr, align 8, !dbg !6216
  %5 = call i64 @mbsrtowcs(i32* noalias %3, i8** noalias %e, i64 %4, %struct.__mbstate_t* noalias %state) nounwind, !dbg !6216
  store i64 %5, i64* %0, align 8, !dbg !6216
  %6 = load i64* %0, align 8, !dbg !6216
  store i64 %6, i64* %retval, align 8, !dbg !6216
  %retval1 = load i64* %retval, !dbg !6216
  ret i64 %retval1, !dbg !6216
}

define i8* @memchr(i8* %s, i32 %c, i64 %n) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %r = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s_addr, align 8, !dbg !6217
  store i8* %1, i8** %r, align 8, !dbg !6217
  br label %bb3, !dbg !6217

bb:                                               ; preds = %bb3
  %2 = load i8** %r, align 8, !dbg !6219
  %3 = load i8* %2, align 1, !dbg !6219
  %4 = load i32* %c_addr, align 4, !dbg !6219
  %5 = trunc i32 %4 to i8, !dbg !6219
  %6 = icmp eq i8 %3, %5, !dbg !6219
  %7 = load i8** %r, align 8, !dbg !6220
  br i1 %6, label %bb1, label %bb2, !dbg !6219

bb1:                                              ; preds = %bb
  store i8* %7, i8** %0, align 8, !dbg !6220
  br label %bb5, !dbg !6220

bb2:                                              ; preds = %bb
  %8 = getelementptr inbounds i8* %7, i64 1, !dbg !6221
  store i8* %8, i8** %r, align 8, !dbg !6221
  %9 = load i64* %n_addr, align 8, !dbg !6222
  %10 = sub i64 %9, 1, !dbg !6222
  store i64 %10, i64* %n_addr, align 8, !dbg !6222
  br label %bb3, !dbg !6222

bb3:                                              ; preds = %bb2, %entry
  %11 = load i64* %n_addr, align 8, !dbg !6223
  %12 = icmp ne i64 %11, 0, !dbg !6223
  br i1 %12, label %bb, label %bb4, !dbg !6223

bb4:                                              ; preds = %bb3
  store i8* null, i8** %0, align 8, !dbg !6224
  br label %bb5, !dbg !6224

bb5:                                              ; preds = %bb4, %bb1
  %13 = load i8** %0, align 8, !dbg !6220
  store i8* %13, i8** %retval, align 8, !dbg !6220
  %retval6 = load i8** %retval, !dbg !6220
  ret i8* %retval6, !dbg !6220
}

define i32 @memcmp(i8* %s1, i8* %s2, i64 %n) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r1 = alloca i8*
  %r2 = alloca i8*
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6225
  store i8* %1, i8** %r1, align 8, !dbg !6225
  %2 = load i8** %s2_addr, align 8, !dbg !6227
  store i8* %2, i8** %r2, align 8, !dbg !6227
  store i32 0, i32* %r, align 4, !dbg !6228
  br label %bb, !dbg !6228

bb:                                               ; preds = %bb1, %entry
  %3 = load i64* %n_addr, align 8, !dbg !6229
  %4 = sub i64 %3, 1, !dbg !6229
  store i64 %4, i64* %n_addr, align 8, !dbg !6229
  %5 = load i64* %n_addr, align 8, !dbg !6229
  %6 = icmp eq i64 %5, -1, !dbg !6229
  br i1 %6, label %bb2, label %bb1, !dbg !6229

bb1:                                              ; preds = %bb
  %7 = load i8** %r1, align 8, !dbg !6229
  %8 = load i8* %7, align 1, !dbg !6229
  %9 = zext i8 %8 to i32, !dbg !6229
  %10 = load i8** %r2, align 8, !dbg !6229
  %11 = load i8* %10, align 1, !dbg !6229
  %12 = zext i8 %11 to i32, !dbg !6229
  %13 = sub nsw i32 %9, %12, !dbg !6229
  store i32 %13, i32* %r, align 4, !dbg !6229
  %14 = load i32* %r, align 4, !dbg !6229
  %15 = icmp eq i32 %14, 0, !dbg !6229
  %16 = zext i1 %15 to i8, !dbg !6229
  %17 = load i8** %r1, align 8, !dbg !6229
  %18 = getelementptr inbounds i8* %17, i64 1, !dbg !6229
  store i8* %18, i8** %r1, align 8, !dbg !6229
  %19 = load i8** %r2, align 8, !dbg !6229
  %20 = getelementptr inbounds i8* %19, i64 1, !dbg !6229
  store i8* %20, i8** %r2, align 8, !dbg !6229
  %toBool = icmp ne i8 %16, 0, !dbg !6229
  br i1 %toBool, label %bb, label %bb2, !dbg !6229

bb2:                                              ; preds = %bb1, %bb
  %21 = load i32* %r, align 4, !dbg !6230
  store i32 %21, i32* %0, align 4, !dbg !6230
  %22 = load i32* %0, align 4, !dbg !6230
  store i32 %22, i32* %retval, align 4, !dbg !6230
  %retval3 = load i32* %retval, !dbg !6230
  ret i32 %retval3, !dbg !6230
}

define i8* @mempcpy(i8* noalias %s1, i8* noalias %s2, i64 %n) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %r1 = alloca i8*
  %r2 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6231
  store i8* %1, i8** %r1, align 8, !dbg !6231
  %2 = load i8** %s2_addr, align 8, !dbg !6233
  store i8* %2, i8** %r2, align 8, !dbg !6233
  br label %bb1, !dbg !6233

bb:                                               ; preds = %bb1
  %3 = load i8** %r2, align 8, !dbg !6234
  %4 = load i8* %3, align 1, !dbg !6234
  %5 = load i8** %r1, align 8, !dbg !6234
  store i8 %4, i8* %5, align 1, !dbg !6234
  %6 = load i8** %r1, align 8, !dbg !6234
  %7 = getelementptr inbounds i8* %6, i64 1, !dbg !6234
  store i8* %7, i8** %r1, align 8, !dbg !6234
  %8 = load i8** %r2, align 8, !dbg !6234
  %9 = getelementptr inbounds i8* %8, i64 1, !dbg !6234
  store i8* %9, i8** %r2, align 8, !dbg !6234
  %10 = load i64* %n_addr, align 8, !dbg !6235
  %11 = sub i64 %10, 1, !dbg !6235
  store i64 %11, i64* %n_addr, align 8, !dbg !6235
  br label %bb1, !dbg !6235

bb1:                                              ; preds = %bb, %entry
  %12 = load i64* %n_addr, align 8, !dbg !6236
  %13 = icmp ne i64 %12, 0, !dbg !6236
  br i1 %13, label %bb, label %bb2, !dbg !6236

bb2:                                              ; preds = %bb1
  %14 = load i8** %r1, align 8, !dbg !6237
  store i8* %14, i8** %0, align 8, !dbg !6237
  %15 = load i8** %0, align 8, !dbg !6237
  store i8* %15, i8** %retval, align 8, !dbg !6237
  %retval3 = load i8** %retval, !dbg !6237
  ret i8* %retval3, !dbg !6237
}

define i8* @memrchr(i8* %s, i32 %c, i64 %n) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %r = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s_addr, align 8, !dbg !6238
  %2 = load i64* %n_addr, align 8, !dbg !6238
  %3 = getelementptr inbounds i8* %1, i64 %2, !dbg !6238
  store i8* %3, i8** %r, align 8, !dbg !6238
  br label %bb3, !dbg !6238

bb:                                               ; preds = %bb3
  %4 = load i8** %r, align 8, !dbg !6240
  %5 = getelementptr inbounds i8* %4, i64 -1, !dbg !6240
  store i8* %5, i8** %r, align 8, !dbg !6240
  %6 = load i8** %r, align 8, !dbg !6240
  %7 = load i8* %6, align 1, !dbg !6240
  %8 = load i32* %c_addr, align 4, !dbg !6240
  %9 = trunc i32 %8 to i8, !dbg !6240
  %10 = icmp eq i8 %7, %9, !dbg !6240
  br i1 %10, label %bb1, label %bb2, !dbg !6240

bb1:                                              ; preds = %bb
  %11 = load i8** %r, align 8, !dbg !6241
  store i8* %11, i8** %0, align 8, !dbg !6241
  br label %bb5, !dbg !6241

bb2:                                              ; preds = %bb
  %12 = load i64* %n_addr, align 8, !dbg !6242
  %13 = sub i64 %12, 1, !dbg !6242
  store i64 %13, i64* %n_addr, align 8, !dbg !6242
  br label %bb3, !dbg !6242

bb3:                                              ; preds = %bb2, %entry
  %14 = load i64* %n_addr, align 8, !dbg !6243
  %15 = icmp ne i64 %14, 0, !dbg !6243
  br i1 %15, label %bb, label %bb4, !dbg !6243

bb4:                                              ; preds = %bb3
  store i8* null, i8** %0, align 8, !dbg !6244
  br label %bb5, !dbg !6244

bb5:                                              ; preds = %bb4, %bb1
  %16 = load i8** %0, align 8, !dbg !6241
  store i8* %16, i8** %retval, align 8, !dbg !6241
  %retval6 = load i8** %retval, !dbg !6241
  ret i8* %retval6, !dbg !6241
}

define i8* @nl_langinfo(i32 %item) nounwind {
entry:
  %item_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %c = alloca i32
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %item, i32* %item_addr
  %1 = load i32* %item_addr, align 4, !dbg !6245
  %int_cast_to_i64 = zext i32 8 to i64
  %2 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %2, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %3 = ashr i32 %1, 8, !dbg !6245
  store i32 %3, i32* %c, align 4, !dbg !6245
  %4 = load i32* %c, align 4, !dbg !6245
  %5 = icmp ule i32 %4, 5, !dbg !6245
  br i1 %5, label %bb, label %bb2, !dbg !6245

bb:                                               ; preds = %klee_overshift_check.exit
  %6 = load i32* %c, align 4, !dbg !6247
  %7 = zext i32 %6 to i64, !dbg !6247
  %8 = getelementptr inbounds [417 x i8]* @nl_data, i64 0, i64 %7, !dbg !6247
  %9 = load i8* %8, align 1, !dbg !6247
  %10 = zext i8 %9 to i32, !dbg !6247
  %11 = load i32* %item_addr, align 4, !dbg !6247
  %12 = and i32 %11, 255, !dbg !6247
  %13 = add nsw i32 %10, %12, !dbg !6247
  store i32 %13, i32* %i, align 4, !dbg !6247
  %14 = load i32* %c, align 4, !dbg !6247
  %15 = add i32 %14, 1, !dbg !6247
  %16 = zext i32 %15 to i64, !dbg !6247
  %17 = getelementptr inbounds [417 x i8]* @nl_data, i64 0, i64 %16, !dbg !6247
  %18 = load i8* %17, align 1, !dbg !6247
  %19 = zext i8 %18 to i32, !dbg !6247
  %20 = load i32* %i, align 4, !dbg !6247
  %21 = icmp ult i32 %20, %19, !dbg !6247
  br i1 %21, label %bb1, label %bb2, !dbg !6247

bb1:                                              ; preds = %bb
  %22 = load i32* %i, align 4, !dbg !6248
  %23 = add i32 %22, 7, !dbg !6248
  %24 = zext i32 %23 to i64, !dbg !6248
  %25 = getelementptr inbounds [417 x i8]* @nl_data, i64 0, i64 %24, !dbg !6248
  %26 = load i8* %25, align 1, !dbg !6248
  %27 = zext i8 %26 to i32, !dbg !6248
  %28 = sext i32 %27 to i64, !dbg !6248
  %29 = getelementptr inbounds i8* getelementptr inbounds ([417 x i8]* @nl_data, i64 0, i64 97), i64 %28, !dbg !6248
  %30 = load i32* %i, align 4, !dbg !6248
  %31 = and i32 %30, 64, !dbg !6248
  %32 = mul i32 %31, 2, !dbg !6248
  %33 = zext i32 %32 to i64, !dbg !6248
  %34 = getelementptr inbounds i8* %29, i64 %33, !dbg !6248
  store i8* %34, i8** %0, align 8, !dbg !6248
  br label %bb3, !dbg !6248

bb2:                                              ; preds = %bb, %klee_overshift_check.exit
  store i8* getelementptr inbounds ([417 x i8]* @nl_data, i64 0, i64 0), i8** %0, align 8, !dbg !6249
  br label %bb3, !dbg !6249

bb3:                                              ; preds = %bb2, %bb1
  %35 = load i8** %0, align 8, !dbg !6248
  store i8* %35, i8** %retval, align 8, !dbg !6248
  %retval4 = load i8** %retval, !dbg !6248
  ret i8* %retval4, !dbg !6248
}

define i32 @putchar_unlocked(i32 %c) nounwind {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %stream = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load %4** @stdout, align 8, !dbg !6250
  store %4* %1, %4** %stream, align 8, !dbg !6250
  %2 = load %4** %stream, align 8, !dbg !6252
  %3 = getelementptr inbounds %4* %2, i32 0, i32 5, !dbg !6252
  %4 = load i8** %3, align 8, !dbg !6252
  %5 = load %4** %stream, align 8, !dbg !6252
  %6 = getelementptr inbounds %4* %5, i32 0, i32 8, !dbg !6252
  %7 = load i8** %6, align 8, !dbg !6252
  %8 = icmp ult i8* %4, %7, !dbg !6252
  br i1 %8, label %bb, label %bb1, !dbg !6252

bb:                                               ; preds = %entry
  %9 = load %4** %stream, align 8, !dbg !6252
  %10 = getelementptr inbounds %4* %9, i32 0, i32 5, !dbg !6252
  %11 = load i8** %10, align 8, !dbg !6252
  %12 = load i32* %c_addr, align 4, !dbg !6252
  %13 = trunc i32 %12 to i8, !dbg !6252
  store i8 %13, i8* %11, align 1, !dbg !6252
  %14 = load i8* %11, align 1, !dbg !6252
  %15 = zext i8 %14 to i32, !dbg !6252
  store i32 %15, i32* %iftmp.0, align 4, !dbg !6252
  %16 = getelementptr inbounds i8* %11, i64 1, !dbg !6252
  %17 = load %4** %stream, align 8, !dbg !6252
  %18 = getelementptr inbounds %4* %17, i32 0, i32 5, !dbg !6252
  store i8* %16, i8** %18, align 8, !dbg !6252
  br label %bb2, !dbg !6252

bb1:                                              ; preds = %entry
  %19 = load i32* %c_addr, align 4, !dbg !6252
  %20 = load %4** %stream, align 8, !dbg !6252
  %21 = call i32 @__fputc_unlocked(i32 %19, %4* %20) nounwind, !dbg !6252
  store i32 %21, i32* %iftmp.0, align 4, !dbg !6252
  br label %bb2, !dbg !6252

bb2:                                              ; preds = %bb1, %bb
  %22 = load i32* %iftmp.0, align 4, !dbg !6252
  store i32 %22, i32* %0, align 4, !dbg !6252
  %23 = load i32* %0, align 4, !dbg !6252
  store i32 %23, i32* %retval, align 4, !dbg !6252
  %retval3 = load i32* %retval, !dbg !6252
  ret i32 %retval3, !dbg !6252
}

define i8* @realpath(i8* %path, i8* %got_path) nounwind {
entry:
  %path_addr = alloca i8*, align 8
  %got_path_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %copy_path = alloca [4096 x i8]
  %max_path = alloca i8*
  %new_path = alloca i8*
  %path_len = alloca i64
  %readlinks = alloca i32
  %link_len = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %path, i8** %path_addr
  store i8* %got_path, i8** %got_path_addr
  store i32 0, i32* %readlinks, align 4, !dbg !6253
  %1 = load i8** %path_addr, align 8, !dbg !6255
  %2 = icmp eq i8* %1, null, !dbg !6255
  br i1 %2, label %bb, label %bb1, !dbg !6255

bb:                                               ; preds = %entry
  store i32 22, i32* @errno, align 4, !dbg !6256
  store i8* null, i8** %0, align 8, !dbg !6257
  br label %bb55, !dbg !6257

bb1:                                              ; preds = %entry
  %3 = load i8** %path_addr, align 8, !dbg !6258
  %4 = load i8* %3, align 1, !dbg !6258
  %5 = icmp eq i8 %4, 0, !dbg !6258
  br i1 %5, label %bb2, label %bb3, !dbg !6258

bb2:                                              ; preds = %bb1
  store i32 2, i32* @errno, align 4, !dbg !6259
  store i8* null, i8** %0, align 8, !dbg !6260
  br label %bb55, !dbg !6260

bb3:                                              ; preds = %bb1
  %6 = load i8** %path_addr, align 8, !dbg !6261
  %7 = call i64 @strlen(i8* %6) nounwind readonly, !dbg !6261
  store i64 %7, i64* %path_len, align 8, !dbg !6261
  %8 = load i64* %path_len, align 8, !dbg !6262
  %9 = icmp ugt i64 %8, 4093, !dbg !6262
  br i1 %9, label %bb4, label %bb5, !dbg !6262

bb4:                                              ; preds = %bb3
  store i32 36, i32* @errno, align 4, !dbg !6263
  store i8* null, i8** %0, align 8, !dbg !6264
  br label %bb55, !dbg !6264

bb5:                                              ; preds = %bb3
  %10 = load i64* %path_len, align 8, !dbg !6265
  %11 = sub nsw i64 0, %10, !dbg !6265
  %copy_path6 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6265
  %12 = getelementptr inbounds i8* %copy_path6, i64 4095, !dbg !6265
  %13 = getelementptr inbounds i8* %12, i64 %11, !dbg !6265
  %14 = load i8** %path_addr, align 8, !dbg !6265
  %15 = call i8* @strcpy(i8* noalias %13, i8* noalias %14) nounwind, !dbg !6265
  %16 = load i64* %path_len, align 8, !dbg !6266
  %17 = sub nsw i64 0, %16, !dbg !6266
  %copy_path7 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6266
  %18 = getelementptr inbounds i8* %copy_path7, i64 4095, !dbg !6266
  %19 = getelementptr inbounds i8* %18, i64 %17, !dbg !6266
  store i8* %19, i8** %path_addr, align 8, !dbg !6266
  %20 = load i8** %got_path_addr, align 8, !dbg !6267
  %21 = getelementptr inbounds i8* %20, i64 4096, !dbg !6267
  %22 = getelementptr inbounds i8* %21, i64 -2, !dbg !6267
  store i8* %22, i8** %max_path, align 8, !dbg !6267
  %23 = load i8** %got_path_addr, align 8, !dbg !6268
  store i8* %23, i8** %new_path, align 8, !dbg !6268
  %24 = load i8** %path_addr, align 8, !dbg !6269
  %25 = load i8* %24, align 1, !dbg !6269
  %26 = icmp ne i8 %25, 47, !dbg !6269
  %27 = load i8** %new_path, align 8, !dbg !6270
  br i1 %26, label %bb8, label %bb13, !dbg !6269

bb8:                                              ; preds = %bb5
  %28 = call i8* @getcwd(i8* %27, i64 4095) nounwind, !dbg !6270
  %29 = icmp eq i8* %28, null, !dbg !6270
  br i1 %29, label %bb9, label %bb10, !dbg !6270

bb9:                                              ; preds = %bb8
  store i8* null, i8** %0, align 8, !dbg !6271
  br label %bb55, !dbg !6271

bb10:                                             ; preds = %bb8
  %30 = load i8** %new_path, align 8, !dbg !6272
  %31 = call i64 @strlen(i8* %30) nounwind readonly, !dbg !6272
  %32 = load i8** %new_path, align 8, !dbg !6272
  %33 = getelementptr inbounds i8* %32, i64 %31, !dbg !6272
  store i8* %33, i8** %new_path, align 8, !dbg !6272
  %34 = load i8** %new_path, align 8, !dbg !6273
  %35 = getelementptr inbounds i8* %34, i64 -1, !dbg !6273
  %36 = load i8* %35, align 1, !dbg !6273
  %37 = icmp ne i8 %36, 47, !dbg !6273
  br i1 %37, label %bb11, label %bb50, !dbg !6273

bb11:                                             ; preds = %bb10
  %38 = load i8** %new_path, align 8, !dbg !6274
  store i8 47, i8* %38, align 1, !dbg !6274
  %39 = load i8** %new_path, align 8, !dbg !6274
  %40 = getelementptr inbounds i8* %39, i64 1, !dbg !6274
  store i8* %40, i8** %new_path, align 8, !dbg !6274
  br label %bb50, !dbg !6274

bb13:                                             ; preds = %bb5
  store i8 47, i8* %27, align 1, !dbg !6275
  %41 = load i8** %new_path, align 8, !dbg !6275
  %42 = getelementptr inbounds i8* %41, i64 1, !dbg !6275
  store i8* %42, i8** %new_path, align 8, !dbg !6275
  %43 = load i8** %path_addr, align 8, !dbg !6276
  %44 = getelementptr inbounds i8* %43, i64 1, !dbg !6276
  store i8* %44, i8** %path_addr, align 8, !dbg !6276
  br label %bb50, !dbg !6276

bb15:                                             ; preds = %bb50
  %45 = load i8** %path_addr, align 8, !dbg !6277
  %46 = load i8* %45, align 1, !dbg !6277
  %47 = icmp eq i8 %46, 47, !dbg !6277
  %48 = load i8** %path_addr, align 8, !dbg !6278
  br i1 %47, label %bb16, label %bb17, !dbg !6277

bb16:                                             ; preds = %bb15
  %49 = getelementptr inbounds i8* %48, i64 1, !dbg !6278
  store i8* %49, i8** %path_addr, align 8, !dbg !6278
  br label %bb50, !dbg !6278

bb17:                                             ; preds = %bb15
  %50 = load i8* %48, align 1, !dbg !6279
  %51 = icmp eq i8 %50, 46, !dbg !6279
  br i1 %51, label %bb18, label %bb31, !dbg !6279

bb18:                                             ; preds = %bb17
  %52 = load i8** %path_addr, align 8, !dbg !6280
  %53 = getelementptr inbounds i8* %52, i64 1, !dbg !6280
  %54 = load i8* %53, align 1, !dbg !6280
  %55 = icmp eq i8 %54, 0, !dbg !6280
  br i1 %55, label %bb20, label %bb19, !dbg !6280

bb19:                                             ; preds = %bb18
  %56 = load i8** %path_addr, align 8, !dbg !6280
  %57 = getelementptr inbounds i8* %56, i64 1, !dbg !6280
  %58 = load i8* %57, align 1, !dbg !6280
  %59 = icmp eq i8 %58, 47, !dbg !6280
  br i1 %59, label %bb20, label %bb21, !dbg !6280

bb20:                                             ; preds = %bb19, %bb18
  %60 = load i8** %path_addr, align 8, !dbg !6281
  %61 = getelementptr inbounds i8* %60, i64 1, !dbg !6281
  store i8* %61, i8** %path_addr, align 8, !dbg !6281
  br label %bb50, !dbg !6281

bb21:                                             ; preds = %bb19
  %62 = load i8** %path_addr, align 8, !dbg !6282
  %63 = getelementptr inbounds i8* %62, i64 1, !dbg !6282
  %64 = load i8* %63, align 1, !dbg !6282
  %65 = icmp eq i8 %64, 46, !dbg !6282
  br i1 %65, label %bb22, label %bb31, !dbg !6282

bb22:                                             ; preds = %bb21
  %66 = load i8** %path_addr, align 8, !dbg !6283
  %67 = getelementptr inbounds i8* %66, i64 2, !dbg !6283
  %68 = load i8* %67, align 1, !dbg !6283
  %69 = icmp eq i8 %68, 0, !dbg !6283
  br i1 %69, label %bb24, label %bb23, !dbg !6283

bb23:                                             ; preds = %bb22
  %70 = load i8** %path_addr, align 8, !dbg !6283
  %71 = getelementptr inbounds i8* %70, i64 2, !dbg !6283
  %72 = load i8* %71, align 1, !dbg !6283
  %73 = icmp eq i8 %72, 47, !dbg !6283
  br i1 %73, label %bb24, label %bb31, !dbg !6283

bb24:                                             ; preds = %bb23, %bb22
  %74 = load i8** %path_addr, align 8, !dbg !6284
  %75 = getelementptr inbounds i8* %74, i64 2, !dbg !6284
  store i8* %75, i8** %path_addr, align 8, !dbg !6284
  %76 = load i8** %got_path_addr, align 8, !dbg !6285
  %77 = getelementptr inbounds i8* %76, i64 1, !dbg !6285
  %78 = load i8** %new_path, align 8, !dbg !6285
  %79 = icmp eq i8* %77, %78, !dbg !6285
  br i1 %79, label %bb50, label %bb25, !dbg !6285

bb25:                                             ; preds = %bb25, %bb24
  %80 = load i8** %new_path, align 8, !dbg !6286
  %81 = getelementptr inbounds i8* %80, i64 -1, !dbg !6286
  store i8* %81, i8** %new_path, align 8, !dbg !6286
  %82 = load i8** %new_path, align 8, !dbg !6286
  %83 = getelementptr inbounds i8* %82, i64 -1, !dbg !6286
  %84 = load i8* %83, align 1, !dbg !6286
  %85 = icmp ne i8 %84, 47, !dbg !6286
  br i1 %85, label %bb25, label %bb50, !dbg !6286

bb28:                                             ; preds = %bb32
  %86 = load i8** %new_path, align 8, !dbg !6287
  %87 = load i8** %max_path, align 8, !dbg !6287
  %88 = icmp ugt i8* %86, %87, !dbg !6287
  br i1 %88, label %bb29, label %bb30, !dbg !6287

bb29:                                             ; preds = %bb28
  store i32 36, i32* @errno, align 4, !dbg !6288
  store i8* null, i8** %0, align 8, !dbg !6289
  br label %bb55, !dbg !6289

bb30:                                             ; preds = %bb28
  %89 = load i8** %path_addr, align 8, !dbg !6290
  %90 = load i8* %89, align 1, !dbg !6290
  %91 = load i8** %new_path, align 8, !dbg !6290
  store i8 %90, i8* %91, align 1, !dbg !6290
  %92 = load i8** %new_path, align 8, !dbg !6290
  %93 = getelementptr inbounds i8* %92, i64 1, !dbg !6290
  store i8* %93, i8** %new_path, align 8, !dbg !6290
  %94 = load i8** %path_addr, align 8, !dbg !6290
  %95 = getelementptr inbounds i8* %94, i64 1, !dbg !6290
  store i8* %95, i8** %path_addr, align 8, !dbg !6290
  br label %bb31, !dbg !6290

bb31:                                             ; preds = %bb17, %bb21, %bb23, %bb30
  %96 = load i8** %path_addr, align 8, !dbg !6291
  %97 = load i8* %96, align 1, !dbg !6291
  %98 = icmp eq i8 %97, 0, !dbg !6291
  br i1 %98, label %bb33, label %bb32, !dbg !6291

bb32:                                             ; preds = %bb31
  %99 = load i8** %path_addr, align 8, !dbg !6291
  %100 = load i8* %99, align 1, !dbg !6291
  %101 = icmp ne i8 %100, 47, !dbg !6291
  br i1 %101, label %bb28, label %bb33, !dbg !6291

bb33:                                             ; preds = %bb32, %bb31
  %102 = load i32* %readlinks, align 4, !dbg !6292
  %103 = icmp sgt i32 %102, 32, !dbg !6292
  %104 = zext i1 %103 to i8, !dbg !6292
  %105 = load i32* %readlinks, align 4, !dbg !6292
  %106 = add nsw i32 %105, 1, !dbg !6292
  store i32 %106, i32* %readlinks, align 4, !dbg !6292
  %toBool = icmp ne i8 %104, 0, !dbg !6292
  br i1 %toBool, label %bb34, label %bb35, !dbg !6292

bb34:                                             ; preds = %bb33
  store i32 40, i32* @errno, align 4, !dbg !6293
  store i8* null, i8** %0, align 8, !dbg !6294
  br label %bb55, !dbg !6294

bb35:                                             ; preds = %bb33
  %107 = load i8** %path_addr, align 8, !dbg !6295
  %108 = call i64 @strlen(i8* %107) nounwind readonly, !dbg !6295
  store i64 %108, i64* %path_len, align 8, !dbg !6295
  %109 = load i8** %new_path, align 8, !dbg !6296
  store i8 0, i8* %109, align 1, !dbg !6296
  %110 = load i8** %got_path_addr, align 8, !dbg !6297
  %copy_path36 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6297
  %111 = call i64 @readlink(i8* noalias %110, i8* noalias %copy_path36, i64 4095) nounwind, !dbg !6297
  %112 = trunc i64 %111 to i32, !dbg !6297
  store i32 %112, i32* %link_len, align 4, !dbg !6297
  %113 = load i32* %link_len, align 4, !dbg !6298
  %114 = icmp slt i32 %113, 0, !dbg !6298
  br i1 %114, label %bb37, label %bb40, !dbg !6298

bb37:                                             ; preds = %bb35
  %115 = load i32* @errno, align 4, !dbg !6299
  %116 = icmp ne i32 %115, 22, !dbg !6299
  br i1 %116, label %bb38, label %bb49, !dbg !6299

bb38:                                             ; preds = %bb37
  store i8* null, i8** %0, align 8, !dbg !6300
  br label %bb55, !dbg !6300

bb40:                                             ; preds = %bb35
  %117 = load i32* %link_len, align 4, !dbg !6301
  %118 = sext i32 %117 to i64, !dbg !6301
  %119 = load i64* %path_len, align 8, !dbg !6301
  %120 = add i64 %118, %119, !dbg !6301
  %121 = icmp ugt i64 %120, 4093, !dbg !6301
  br i1 %121, label %bb41, label %bb42, !dbg !6301

bb41:                                             ; preds = %bb40
  store i32 36, i32* @errno, align 4, !dbg !6302
  store i8* null, i8** %0, align 8, !dbg !6303
  br label %bb55, !dbg !6303

bb42:                                             ; preds = %bb40
  %122 = getelementptr inbounds [4096 x i8]* %copy_path, i64 0, i64 0, !dbg !6304
  %123 = load i8* %122, align 1, !dbg !6304
  %124 = icmp eq i8 %123, 47, !dbg !6304
  br i1 %124, label %bb43, label %bb44, !dbg !6304

bb43:                                             ; preds = %bb42
  %125 = load i8** %got_path_addr, align 8, !dbg !6305
  store i8* %125, i8** %new_path, align 8, !dbg !6305
  br label %bb45, !dbg !6305

bb44:                                             ; preds = %bb44, %bb42
  %126 = load i8** %new_path, align 8, !dbg !6306
  %127 = getelementptr inbounds i8* %126, i64 -1, !dbg !6306
  store i8* %127, i8** %new_path, align 8, !dbg !6306
  %128 = load i8** %new_path, align 8, !dbg !6306
  %129 = load i8* %128, align 1, !dbg !6306
  %130 = icmp ne i8 %129, 47, !dbg !6306
  br i1 %130, label %bb44, label %bb45, !dbg !6306

bb45:                                             ; preds = %bb44, %bb43
  %131 = load i32* %link_len, align 4, !dbg !6307
  %132 = sext i32 %131 to i64, !dbg !6307
  %133 = load i32* %link_len, align 4, !dbg !6307
  %134 = sext i32 %133 to i64, !dbg !6307
  %135 = sub nsw i64 0, %134, !dbg !6307
  %copy_path46 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6307
  %136 = getelementptr inbounds i8* %copy_path46, i64 4095, !dbg !6307
  %137 = getelementptr inbounds i8* %136, i64 %135, !dbg !6307
  %138 = load i64* %path_len, align 8, !dbg !6307
  %139 = sub nsw i64 0, %138, !dbg !6307
  %140 = getelementptr inbounds i8* %137, i64 %139, !dbg !6307
  %copy_path47 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6307
  %141 = call i8* @memmove(i8* %140, i8* %copy_path47, i64 %132) nounwind, !dbg !6307
  %142 = load i32* %link_len, align 4, !dbg !6308
  %143 = sext i32 %142 to i64, !dbg !6308
  %144 = sub nsw i64 0, %143, !dbg !6308
  %copy_path48 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6308
  %145 = getelementptr inbounds i8* %copy_path48, i64 4095, !dbg !6308
  %146 = getelementptr inbounds i8* %145, i64 %144, !dbg !6308
  %147 = load i64* %path_len, align 8, !dbg !6308
  %148 = sub nsw i64 0, %147, !dbg !6308
  %149 = getelementptr inbounds i8* %146, i64 %148, !dbg !6308
  store i8* %149, i8** %path_addr, align 8, !dbg !6308
  br label %bb49, !dbg !6308

bb49:                                             ; preds = %bb37, %bb45
  %150 = load i8** %new_path, align 8, !dbg !6309
  store i8 47, i8* %150, align 1, !dbg !6309
  %151 = load i8** %new_path, align 8, !dbg !6309
  %152 = getelementptr inbounds i8* %151, i64 1, !dbg !6309
  store i8* %152, i8** %new_path, align 8, !dbg !6309
  br label %bb50, !dbg !6309

bb50:                                             ; preds = %bb25, %bb13, %bb11, %bb10, %bb49, %bb24, %bb20, %bb16
  %153 = load i8** %path_addr, align 8, !dbg !6310
  %154 = load i8* %153, align 1, !dbg !6310
  %155 = icmp ne i8 %154, 0, !dbg !6310
  br i1 %155, label %bb15, label %bb51, !dbg !6310

bb51:                                             ; preds = %bb50
  %156 = load i8** %got_path_addr, align 8, !dbg !6311
  %157 = getelementptr inbounds i8* %156, i64 1, !dbg !6311
  %158 = load i8** %new_path, align 8, !dbg !6311
  %159 = icmp ne i8* %157, %158, !dbg !6311
  br i1 %159, label %bb52, label %bb54, !dbg !6311

bb52:                                             ; preds = %bb51
  %160 = load i8** %new_path, align 8, !dbg !6311
  %161 = getelementptr inbounds i8* %160, i64 -1, !dbg !6311
  %162 = load i8* %161, align 1, !dbg !6311
  %163 = icmp eq i8 %162, 47, !dbg !6311
  br i1 %163, label %bb53, label %bb54, !dbg !6311

bb53:                                             ; preds = %bb52
  %164 = load i8** %new_path, align 8, !dbg !6312
  %165 = getelementptr inbounds i8* %164, i64 -1, !dbg !6312
  store i8* %165, i8** %new_path, align 8, !dbg !6312
  br label %bb54, !dbg !6312

bb54:                                             ; preds = %bb53, %bb52, %bb51
  %166 = load i8** %new_path, align 8, !dbg !6313
  store i8 0, i8* %166, align 1, !dbg !6313
  %167 = load i8** %got_path_addr, align 8, !dbg !6314
  store i8* %167, i8** %0, align 8, !dbg !6314
  br label %bb55, !dbg !6314

bb55:                                             ; preds = %bb54, %bb41, %bb38, %bb34, %bb29, %bb9, %bb4, %bb2, %bb
  %168 = load i8** %0, align 8, !dbg !6257
  store i8* %168, i8** %retval, align 8, !dbg !6257
  %retval56 = load i8** %retval, !dbg !6257
  ret i8* %retval56, !dbg !6257
}

define i8* @setlocale(i32 %category, i8* %locale) nounwind {
entry:
  %category_addr = alloca i32, align 4
  %locale_addr = alloca i8*, align 8
  %retval = alloca i8*
  %iftmp.0 = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %category, i32* %category_addr
  store i8* %locale, i8** %locale_addr
  %1 = load i32* %category_addr, align 4, !dbg !6315
  %2 = icmp ugt i32 %1, 6, !dbg !6315
  br i1 %2, label %bb6, label %bb, !dbg !6315

bb:                                               ; preds = %entry
  %3 = load i8** %locale_addr, align 8, !dbg !6315
  %4 = icmp eq i8* %3, null, !dbg !6315
  br i1 %4, label %bb5, label %bb1, !dbg !6315

bb1:                                              ; preds = %bb
  %5 = load i8** %locale_addr, align 8, !dbg !6315
  %6 = load i8* %5, align 1, !dbg !6315
  %7 = icmp eq i8 %6, 0, !dbg !6315
  br i1 %7, label %bb5, label %bb2, !dbg !6315

bb2:                                              ; preds = %bb1
  %8 = load i8** %locale_addr, align 8, !dbg !6315
  %9 = load i8* %8, align 1, !dbg !6315
  %10 = icmp ne i8 %9, 67, !dbg !6315
  br i1 %10, label %bb4, label %bb3, !dbg !6315

bb3:                                              ; preds = %bb2
  %11 = load i8** %locale_addr, align 8, !dbg !6315
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6315
  %13 = load i8* %12, align 1, !dbg !6315
  %14 = icmp eq i8 %13, 0, !dbg !6315
  br i1 %14, label %bb5, label %bb4, !dbg !6315

bb4:                                              ; preds = %bb3, %bb2
  %15 = load i8** %locale_addr, align 8, !dbg !6315
  %16 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([6 x i8]* @.str164, i64 0, i64 0)) nounwind readonly, !dbg !6315
  %17 = icmp eq i32 %16, 0, !dbg !6315
  br i1 %17, label %bb5, label %bb6, !dbg !6315

bb5:                                              ; preds = %bb4, %bb3, %bb1, %bb
  store i8* getelementptr inbounds ([2 x i8]* @C_string, i64 0, i64 0), i8** %iftmp.0, align 8, !dbg !6315
  br label %bb7, !dbg !6315

bb6:                                              ; preds = %bb4, %entry
  store i8* null, i8** %iftmp.0, align 8, !dbg !6315
  br label %bb7, !dbg !6315

bb7:                                              ; preds = %bb6, %bb5
  %18 = load i8** %iftmp.0, align 8, !dbg !6315
  store i8* %18, i8** %0, align 8, !dbg !6315
  %19 = load i8** %0, align 8, !dbg !6315
  store i8* %19, i8** %retval, align 8, !dbg !6315
  %retval8 = load i8** %retval, !dbg !6315
  ret i8* %retval8, !dbg !6315
}

define i32 @snprintf(i8* noalias %buf, i64 %size, i8* noalias %format, ...) nounwind {
entry:
  %buf_addr = alloca i8*, align 8
  %size_addr = alloca i64, align 8
  %format_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %arg = alloca [1 x %struct.__va_list_tag]
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buf, i8** %buf_addr
  store i64 %size, i64* %size_addr
  store i8* %format, i8** %format_addr
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6317
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*, !dbg !6317
  call void @llvm.va_start(i8* %arg12), !dbg !6317
  %1 = load i8** %buf_addr, align 8, !dbg !6319
  %2 = load i64* %size_addr, align 8, !dbg !6319
  %3 = load i8** %format_addr, align 8, !dbg !6319
  %arg3 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6319
  %4 = call i32 @vsnprintf(i8* noalias %1, i64 %2, i8* noalias %3, %struct.__va_list_tag* %arg3) nounwind, !dbg !6319
  store i32 %4, i32* %rv, align 4, !dbg !6319
  %arg4 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6320
  %arg45 = bitcast %struct.__va_list_tag* %arg4 to i8*, !dbg !6320
  call void @llvm.va_end(i8* %arg45), !dbg !6320
  %5 = load i32* %rv, align 4, !dbg !6321
  store i32 %5, i32* %0, align 4, !dbg !6321
  %6 = load i32* %0, align 4, !dbg !6321
  store i32 %6, i32* %retval, align 4, !dbg !6321
  %retval6 = load i32* %retval, !dbg !6321
  ret i32 %retval6, !dbg !6321
}

define i32 @sprintf(i8* noalias %buf, i8* noalias %format, ...) nounwind {
entry:
  %buf_addr = alloca i8*, align 8
  %format_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %arg = alloca [1 x %struct.__va_list_tag]
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buf, i8** %buf_addr
  store i8* %format, i8** %format_addr
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6322
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*, !dbg !6322
  call void @llvm.va_start(i8* %arg12), !dbg !6322
  %1 = load i8** %buf_addr, align 8, !dbg !6324
  %2 = load i8** %format_addr, align 8, !dbg !6324
  %arg3 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6324
  %3 = call i32 @vsnprintf(i8* noalias %1, i64 -1, i8* noalias %2, %struct.__va_list_tag* %arg3) nounwind, !dbg !6324
  store i32 %3, i32* %rv, align 4, !dbg !6324
  %arg4 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6325
  %arg45 = bitcast %struct.__va_list_tag* %arg4 to i8*, !dbg !6325
  call void @llvm.va_end(i8* %arg45), !dbg !6325
  %4 = load i32* %rv, align 4, !dbg !6326
  store i32 %4, i32* %0, align 4, !dbg !6326
  %5 = load i32* %0, align 4, !dbg !6326
  store i32 %5, i32* %retval, align 4, !dbg !6326
  %retval6 = load i32* %retval, !dbg !6326
  ret i32 %retval6, !dbg !6326
}

define i32 @statvfs(i8* %file, %struct.statvfs* %buf) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %buf_addr = alloca %struct.statvfs*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %fsbuf = alloca %9
  %st = alloca %8
  %save_errno = alloca i32
  %mntbuf = alloca %struct.mntent
  %mtab = alloca %struct.FILE*
  %tmpbuf = alloca [1024 x i8]
  %fsst = alloca %8
  %cp = alloca i8*
  %opt = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store %struct.statvfs* %buf, %struct.statvfs** %buf_addr
  %1 = load i8** %file_addr, align 8, !dbg !6327
  %2 = call i32 bitcast (i32 (i8*, %struct.statfs*)* @statfs to i32 (i8*, %9*)*)(i8* %1, %9* %fsbuf) nounwind, !dbg !6327
  %3 = icmp slt i32 %2, 0, !dbg !6327
  br i1 %3, label %bb, label %bb1, !dbg !6327

bb:                                               ; preds = %entry
  store i32 -1, i32* %0, align 4, !dbg !6329
  br label %bb32, !dbg !6329

bb1:                                              ; preds = %entry
  %4 = getelementptr inbounds %9* %fsbuf, i32 0, i32 1, !dbg !6330
  %5 = load i64* %4, align 8, !dbg !6330
  %6 = load %struct.statvfs** %buf_addr, align 8, !dbg !6330
  %7 = getelementptr inbounds %struct.statvfs* %6, i32 0, i32 0, !dbg !6330
  store i64 %5, i64* %7, align 8, !dbg !6330
  %8 = getelementptr inbounds %9* %fsbuf, i32 0, i32 1, !dbg !6331
  %9 = load i64* %8, align 8, !dbg !6331
  %10 = load %struct.statvfs** %buf_addr, align 8, !dbg !6331
  %11 = getelementptr inbounds %struct.statvfs* %10, i32 0, i32 1, !dbg !6331
  store i64 %9, i64* %11, align 8, !dbg !6331
  %12 = getelementptr inbounds %9* %fsbuf, i32 0, i32 2, !dbg !6332
  %13 = load i64* %12, align 8, !dbg !6332
  %14 = load %struct.statvfs** %buf_addr, align 8, !dbg !6332
  %15 = getelementptr inbounds %struct.statvfs* %14, i32 0, i32 2, !dbg !6332
  store i64 %13, i64* %15, align 8, !dbg !6332
  %16 = getelementptr inbounds %9* %fsbuf, i32 0, i32 3, !dbg !6333
  %17 = load i64* %16, align 8, !dbg !6333
  %18 = load %struct.statvfs** %buf_addr, align 8, !dbg !6333
  %19 = getelementptr inbounds %struct.statvfs* %18, i32 0, i32 3, !dbg !6333
  store i64 %17, i64* %19, align 8, !dbg !6333
  %20 = getelementptr inbounds %9* %fsbuf, i32 0, i32 4, !dbg !6334
  %21 = load i64* %20, align 8, !dbg !6334
  %22 = load %struct.statvfs** %buf_addr, align 8, !dbg !6334
  %23 = getelementptr inbounds %struct.statvfs* %22, i32 0, i32 4, !dbg !6334
  store i64 %21, i64* %23, align 8, !dbg !6334
  %24 = getelementptr inbounds %9* %fsbuf, i32 0, i32 5, !dbg !6335
  %25 = load i64* %24, align 8, !dbg !6335
  %26 = load %struct.statvfs** %buf_addr, align 8, !dbg !6335
  %27 = getelementptr inbounds %struct.statvfs* %26, i32 0, i32 5, !dbg !6335
  store i64 %25, i64* %27, align 8, !dbg !6335
  %28 = getelementptr inbounds %9* %fsbuf, i32 0, i32 6, !dbg !6336
  %29 = load i64* %28, align 8, !dbg !6336
  %30 = load %struct.statvfs** %buf_addr, align 8, !dbg !6336
  %31 = getelementptr inbounds %struct.statvfs* %30, i32 0, i32 6, !dbg !6336
  store i64 %29, i64* %31, align 8, !dbg !6336
  %32 = getelementptr inbounds %9* %fsbuf, i32 0, i32 7, !dbg !6337
  %33 = getelementptr inbounds %struct.__fsid_t* %32, i32 0, i32 0, !dbg !6337
  %34 = getelementptr inbounds [2 x i32]* %33, i64 0, i64 0, !dbg !6337
  %35 = load i32* %34, align 4, !dbg !6337
  %36 = sext i32 %35 to i64, !dbg !6337
  %37 = getelementptr inbounds %9* %fsbuf, i32 0, i32 7, !dbg !6337
  %38 = getelementptr inbounds %struct.__fsid_t* %37, i32 0, i32 0, !dbg !6337
  %39 = getelementptr inbounds [2 x i32]* %38, i64 0, i64 1, !dbg !6337
  %40 = load i32* %39, align 4, !dbg !6337
  %41 = sext i32 %40 to i64, !dbg !6337
  %int_cast_to_i64 = bitcast i64 32 to i64
  %42 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %42, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb1
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb1
  %43 = shl i64 %41, 32, !dbg !6337
  %44 = or i64 %36, %43, !dbg !6337
  %45 = load %struct.statvfs** %buf_addr, align 8, !dbg !6337
  %46 = getelementptr inbounds %struct.statvfs* %45, i32 0, i32 8, !dbg !6337
  store i64 %44, i64* %46, align 8, !dbg !6337
  %47 = getelementptr inbounds %9* %fsbuf, i32 0, i32 8, !dbg !6338
  %48 = load i64* %47, align 8, !dbg !6338
  %49 = load %struct.statvfs** %buf_addr, align 8, !dbg !6338
  %50 = getelementptr inbounds %struct.statvfs* %49, i32 0, i32 10, !dbg !6338
  store i64 %48, i64* %50, align 8, !dbg !6338
  %51 = load %struct.statvfs** %buf_addr, align 8, !dbg !6339
  %52 = getelementptr inbounds %struct.statvfs* %51, i32 0, i32 11, !dbg !6339
  %53 = getelementptr inbounds [6 x i32]* %52, i64 0, i64 0, !dbg !6339
  %54 = bitcast i32* %53 to i8*, !dbg !6339
  %55 = call i8* @memset(i8* %54, i32 0, i64 24) nounwind, !dbg !6339
  %56 = load %struct.statvfs** %buf_addr, align 8, !dbg !6329
  %57 = getelementptr inbounds %struct.statvfs* %56, i32 0, i32 6, !dbg !6329
  %58 = load i64* %57, align 8, !dbg !6329
  %59 = load %struct.statvfs** %buf_addr, align 8, !dbg !6329
  %60 = getelementptr inbounds %struct.statvfs* %59, i32 0, i32 7, !dbg !6329
  store i64 %58, i64* %60, align 8, !dbg !6329
  %61 = load %struct.statvfs** %buf_addr, align 8, !dbg !6340
  %62 = getelementptr inbounds %struct.statvfs* %61, i32 0, i32 9, !dbg !6340
  store i64 0, i64* %62, align 8, !dbg !6340
  %63 = load i8** %file_addr, align 8, !dbg !6341
  %64 = call i32 bitcast (i32 (i8*, %struct.stat*)* @stat to i32 (i8*, %8*)*)(i8* noalias %63, %8* noalias %st) nounwind, !dbg !6341
  %65 = icmp sge i32 %64, 0, !dbg !6341
  br i1 %65, label %bb2, label %bb31, !dbg !6341

bb2:                                              ; preds = %klee_overshift_check.exit
  %66 = load i32* @errno, align 4, !dbg !6342
  store i32 %66, i32* %save_errno, align 4, !dbg !6342
  %67 = call %struct.FILE* bitcast (%4* (i8*, i8*)* @setmntent to %struct.FILE* (i8*, i8*)*)(i8* getelementptr inbounds ([13 x i8]* @.str168, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str1169, i64 0, i64 0)) nounwind, !dbg !6345
  store %struct.FILE* %67, %struct.FILE** %mtab, align 8, !dbg !6345
  %68 = load %struct.FILE** %mtab, align 8, !dbg !6346
  %69 = icmp eq %struct.FILE* %68, null, !dbg !6346
  br i1 %69, label %bb3, label %bb4, !dbg !6346

bb3:                                              ; preds = %bb2
  %70 = call %struct.FILE* bitcast (%4* (i8*, i8*)* @setmntent to %struct.FILE* (i8*, i8*)*)(i8* getelementptr inbounds ([10 x i8]* @.str2170, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str1169, i64 0, i64 0)) nounwind, !dbg !6347
  store %struct.FILE* %70, %struct.FILE** %mtab, align 8, !dbg !6347
  br label %bb4, !dbg !6347

bb4:                                              ; preds = %bb3, %bb2
  %71 = load %struct.FILE** %mtab, align 8, !dbg !6348
  %72 = icmp ne %struct.FILE* %71, null, !dbg !6348
  br i1 %72, label %bb27, label %bb30, !dbg !6348

bb6:                                              ; preds = %bb27
  %73 = getelementptr inbounds %struct.mntent* %mntbuf, i32 0, i32 1, !dbg !6349
  %74 = load i8** %73, align 8, !dbg !6349
  %75 = call i32 bitcast (i32 (i8*, %struct.stat*)* @stat to i32 (i8*, %8*)*)(i8* noalias %74, %8* noalias %fsst) nounwind, !dbg !6349
  %76 = icmp sge i32 %75, 0, !dbg !6349
  br i1 %76, label %bb7, label %bb27, !dbg !6349

bb7:                                              ; preds = %bb6
  %77 = getelementptr inbounds %8* %st, i32 0, i32 0, !dbg !6349
  %78 = load i64* %77, align 8, !dbg !6349
  %79 = getelementptr inbounds %8* %fsst, i32 0, i32 0, !dbg !6349
  %80 = load i64* %79, align 8, !dbg !6349
  %81 = icmp eq i64 %78, %80, !dbg !6349
  br i1 %81, label %bb8, label %bb27, !dbg !6349

bb8:                                              ; preds = %bb7
  %82 = getelementptr inbounds %struct.mntent* %mntbuf, i32 0, i32 3, !dbg !6352
  %83 = load i8** %82, align 8, !dbg !6352
  store i8* %83, i8** %cp, align 8, !dbg !6352
  br label %bb25, !dbg !6352

bb9:                                              ; preds = %bb25
  %84 = load i8** %opt, align 8, !dbg !6354
  %85 = call i32 @strcmp(i8* %84, i8* getelementptr inbounds ([3 x i8]* @.str3171, i64 0, i64 0)) nounwind readonly, !dbg !6354
  %86 = icmp eq i32 %85, 0, !dbg !6354
  br i1 %86, label %bb10, label %bb11, !dbg !6354

bb10:                                             ; preds = %bb9
  %87 = load %struct.statvfs** %buf_addr, align 8, !dbg !6355
  %88 = getelementptr inbounds %struct.statvfs* %87, i32 0, i32 9, !dbg !6355
  %89 = load i64* %88, align 8, !dbg !6355
  %90 = or i64 %89, 1, !dbg !6355
  %91 = load %struct.statvfs** %buf_addr, align 8, !dbg !6355
  %92 = getelementptr inbounds %struct.statvfs* %91, i32 0, i32 9, !dbg !6355
  store i64 %90, i64* %92, align 8, !dbg !6355
  br label %bb25, !dbg !6355

bb11:                                             ; preds = %bb9
  %93 = load i8** %opt, align 8, !dbg !6356
  %94 = call i32 @strcmp(i8* %93, i8* getelementptr inbounds ([7 x i8]* @.str4172, i64 0, i64 0)) nounwind readonly, !dbg !6356
  %95 = icmp eq i32 %94, 0, !dbg !6356
  br i1 %95, label %bb12, label %bb13, !dbg !6356

bb12:                                             ; preds = %bb11
  %96 = load %struct.statvfs** %buf_addr, align 8, !dbg !6357
  %97 = getelementptr inbounds %struct.statvfs* %96, i32 0, i32 9, !dbg !6357
  %98 = load i64* %97, align 8, !dbg !6357
  %99 = or i64 %98, 2, !dbg !6357
  %100 = load %struct.statvfs** %buf_addr, align 8, !dbg !6357
  %101 = getelementptr inbounds %struct.statvfs* %100, i32 0, i32 9, !dbg !6357
  store i64 %99, i64* %101, align 8, !dbg !6357
  br label %bb25, !dbg !6357

bb13:                                             ; preds = %bb11
  %102 = load i8** %opt, align 8, !dbg !6358
  %103 = call i32 @strcmp(i8* %102, i8* getelementptr inbounds ([7 x i8]* @.str5173, i64 0, i64 0)) nounwind readonly, !dbg !6358
  %104 = icmp eq i32 %103, 0, !dbg !6358
  br i1 %104, label %bb14, label %bb15, !dbg !6358

bb14:                                             ; preds = %bb13
  %105 = load %struct.statvfs** %buf_addr, align 8, !dbg !6359
  %106 = getelementptr inbounds %struct.statvfs* %105, i32 0, i32 9, !dbg !6359
  %107 = load i64* %106, align 8, !dbg !6359
  %108 = or i64 %107, 8, !dbg !6359
  %109 = load %struct.statvfs** %buf_addr, align 8, !dbg !6359
  %110 = getelementptr inbounds %struct.statvfs* %109, i32 0, i32 9, !dbg !6359
  store i64 %108, i64* %110, align 8, !dbg !6359
  br label %bb25, !dbg !6359

bb15:                                             ; preds = %bb13
  %111 = load i8** %opt, align 8, !dbg !6360
  %112 = call i32 @strcmp(i8* %111, i8* getelementptr inbounds ([6 x i8]* @.str6174, i64 0, i64 0)) nounwind readonly, !dbg !6360
  %113 = icmp eq i32 %112, 0, !dbg !6360
  br i1 %113, label %bb16, label %bb17, !dbg !6360

bb16:                                             ; preds = %bb15
  %114 = load %struct.statvfs** %buf_addr, align 8, !dbg !6361
  %115 = getelementptr inbounds %struct.statvfs* %114, i32 0, i32 9, !dbg !6361
  %116 = load i64* %115, align 8, !dbg !6361
  %117 = or i64 %116, 4, !dbg !6361
  %118 = load %struct.statvfs** %buf_addr, align 8, !dbg !6361
  %119 = getelementptr inbounds %struct.statvfs* %118, i32 0, i32 9, !dbg !6361
  store i64 %117, i64* %119, align 8, !dbg !6361
  br label %bb25, !dbg !6361

bb17:                                             ; preds = %bb15
  %120 = load i8** %opt, align 8, !dbg !6362
  %121 = call i32 @strcmp(i8* %120, i8* getelementptr inbounds ([5 x i8]* @.str7175, i64 0, i64 0)) nounwind readonly, !dbg !6362
  %122 = icmp eq i32 %121, 0, !dbg !6362
  br i1 %122, label %bb18, label %bb19, !dbg !6362

bb18:                                             ; preds = %bb17
  %123 = load %struct.statvfs** %buf_addr, align 8, !dbg !6363
  %124 = getelementptr inbounds %struct.statvfs* %123, i32 0, i32 9, !dbg !6363
  %125 = load i64* %124, align 8, !dbg !6363
  %126 = or i64 %125, 16, !dbg !6363
  %127 = load %struct.statvfs** %buf_addr, align 8, !dbg !6363
  %128 = getelementptr inbounds %struct.statvfs* %127, i32 0, i32 9, !dbg !6363
  store i64 %126, i64* %128, align 8, !dbg !6363
  br label %bb25, !dbg !6363

bb19:                                             ; preds = %bb17
  %129 = load i8** %opt, align 8, !dbg !6364
  %130 = call i32 @strcmp(i8* %129, i8* getelementptr inbounds ([5 x i8]* @.str8176, i64 0, i64 0)) nounwind readonly, !dbg !6364
  %131 = icmp eq i32 %130, 0, !dbg !6364
  br i1 %131, label %bb20, label %bb21, !dbg !6364

bb20:                                             ; preds = %bb19
  %132 = load %struct.statvfs** %buf_addr, align 8, !dbg !6365
  %133 = getelementptr inbounds %struct.statvfs* %132, i32 0, i32 9, !dbg !6365
  %134 = load i64* %133, align 8, !dbg !6365
  %135 = or i64 %134, 64, !dbg !6365
  %136 = load %struct.statvfs** %buf_addr, align 8, !dbg !6365
  %137 = getelementptr inbounds %struct.statvfs* %136, i32 0, i32 9, !dbg !6365
  store i64 %135, i64* %137, align 8, !dbg !6365
  br label %bb25, !dbg !6365

bb21:                                             ; preds = %bb19
  %138 = load i8** %opt, align 8, !dbg !6366
  %139 = call i32 @strcmp(i8* %138, i8* getelementptr inbounds ([8 x i8]* @.str9177, i64 0, i64 0)) nounwind readonly, !dbg !6366
  %140 = icmp eq i32 %139, 0, !dbg !6366
  br i1 %140, label %bb22, label %bb23, !dbg !6366

bb22:                                             ; preds = %bb21
  %141 = load %struct.statvfs** %buf_addr, align 8, !dbg !6367
  %142 = getelementptr inbounds %struct.statvfs* %141, i32 0, i32 9, !dbg !6367
  %143 = load i64* %142, align 8, !dbg !6367
  %144 = or i64 %143, 1024, !dbg !6367
  %145 = load %struct.statvfs** %buf_addr, align 8, !dbg !6367
  %146 = getelementptr inbounds %struct.statvfs* %145, i32 0, i32 9, !dbg !6367
  store i64 %144, i64* %146, align 8, !dbg !6367
  br label %bb25, !dbg !6367

bb23:                                             ; preds = %bb21
  %147 = load i8** %opt, align 8, !dbg !6368
  %148 = call i32 @strcmp(i8* %147, i8* getelementptr inbounds ([11 x i8]* @.str10178, i64 0, i64 0)) nounwind readonly, !dbg !6368
  %149 = icmp eq i32 %148, 0, !dbg !6368
  br i1 %149, label %bb24, label %bb25, !dbg !6368

bb24:                                             ; preds = %bb23
  %150 = load %struct.statvfs** %buf_addr, align 8, !dbg !6369
  %151 = getelementptr inbounds %struct.statvfs* %150, i32 0, i32 9, !dbg !6369
  %152 = load i64* %151, align 8, !dbg !6369
  %153 = or i64 %152, 2048, !dbg !6369
  %154 = load %struct.statvfs** %buf_addr, align 8, !dbg !6369
  %155 = getelementptr inbounds %struct.statvfs* %154, i32 0, i32 9, !dbg !6369
  store i64 %153, i64* %155, align 8, !dbg !6369
  br label %bb25, !dbg !6369

bb25:                                             ; preds = %bb24, %bb23, %bb22, %bb20, %bb18, %bb16, %bb14, %bb12, %bb10, %bb8
  %156 = call i8* @strsep(i8** noalias %cp, i8* noalias getelementptr inbounds ([2 x i8]* @.str11179, i64 0, i64 0)) nounwind, !dbg !6370
  store i8* %156, i8** %opt, align 8, !dbg !6370
  %157 = load i8** %opt, align 8, !dbg !6370
  %158 = icmp ne i8* %157, null, !dbg !6370
  br i1 %158, label %bb9, label %bb29, !dbg !6370

bb27:                                             ; preds = %bb4, %bb7, %bb6
  %159 = load %struct.FILE** %mtab, align 8, !dbg !6371
  %tmpbuf28 = bitcast [1024 x i8]* %tmpbuf to i8*, !dbg !6371
  %160 = call %struct.mntent* bitcast (%struct.mntent* (%4*, %struct.mntent*, i8*, i32)* @getmntent_r to %struct.mntent* (%struct.FILE*, %struct.mntent*, i8*, i32)*)(%struct.FILE* noalias %159, %struct.mntent* noalias %mntbuf, i8* noalias %tmpbuf28, i32 
  %161 = icmp ne %struct.mntent* %160, null, !dbg !6371
  br i1 %161, label %bb6, label %bb29, !dbg !6371

bb29:                                             ; preds = %bb25, %bb27
  %162 = load %struct.FILE** %mtab, align 8, !dbg !6372
  %163 = call i32 bitcast (i32 (%4*)* @endmntent to i32 (%struct.FILE*)*)(%struct.FILE* %162) nounwind, !dbg !6372
  br label %bb30, !dbg !6372

bb30:                                             ; preds = %bb29, %bb4
  %164 = load i32* %save_errno, align 4, !dbg !6373
  store i32 %164, i32* @errno, align 4, !dbg !6373
  br label %bb31, !dbg !6373

bb31:                                             ; preds = %bb30, %klee_overshift_check.exit
  store i32 0, i32* %0, align 4, !dbg !6340
  br label %bb32, !dbg !6340

bb32:                                             ; preds = %bb31, %bb
  %165 = load i32* %0, align 4, !dbg !6329
  store i32 %165, i32* %retval, align 4, !dbg !6329
  %retval33 = load i32* %retval, !dbg !6329
  ret i32 %retval33, !dbg !6329
}

define hidden void @_stdio_term() nounwind {
entry:
  %ptr = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  %0 = load %4** @_stdio_openlist, align 8, !dbg !6374
  store %4* %0, %4** %ptr, align 8, !dbg !6374
  br label %bb3, !dbg !6374

bb:                                               ; preds = %bb3
  %1 = load %4** %ptr, align 8, !dbg !6376
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6376
  %3 = load i16* %2, align 8, !dbg !6376
  %4 = zext i16 %3 to i32, !dbg !6376
  %5 = and i32 %4, 64, !dbg !6376
  %6 = icmp ne i32 %5, 0, !dbg !6376
  br i1 %6, label %bb1, label %bb2, !dbg !6376

bb1:                                              ; preds = %bb
  %7 = load %4** %ptr, align 8, !dbg !6377
  %8 = call i64 @__stdio_wcommit(%4* noalias %7) nounwind, !dbg !6377
  br label %bb2, !dbg !6377

bb2:                                              ; preds = %bb1, %bb
  %9 = load %4** %ptr, align 8, !dbg !6374
  %10 = getelementptr inbounds %4* %9, i32 0, i32 9, !dbg !6374
  %11 = load %4** %10, align 8, !dbg !6374
  store %4* %11, %4** %ptr, align 8, !dbg !6374
  br label %bb3, !dbg !6374

bb3:                                              ; preds = %bb2, %entry
  %12 = load %4** %ptr, align 8, !dbg !6374
  %13 = icmp ne %4* %12, null, !dbg !6374
  br i1 %13, label %bb, label %return, !dbg !6374

return:                                           ; preds = %bb3
  ret void, !dbg !6378
}

define hidden void @_stdio_init() nounwind {
entry:
  %old_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i32* @errno, align 4, !dbg !6379
  store i32 %0, i32* %old_errno, align 4, !dbg !6379
  %1 = load i16* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0, i32 0), align 8, !dbg !6381
  %2 = call i32 @isatty(i32 0) nounwind, !dbg !6381
  %3 = sub nsw i32 1, %2, !dbg !6381
  %4 = mul i32 %3, 256, !dbg !6381
  %5 = trunc i32 %4 to i16, !dbg !6381
  %6 = xor i16 %1, %5, !dbg !6381
  store i16 %6, i16* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0, i32 0), align 8, !dbg !6381
  %7 = load i16* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !6382
  %8 = call i32 @isatty(i32 1) nounwind, !dbg !6382
  %9 = sub nsw i32 1, %8, !dbg !6382
  %10 = mul i32 %9, 256, !dbg !6382
  %11 = trunc i32 %10 to i16, !dbg !6382
  %12 = xor i16 %7, %11, !dbg !6382
  store i16 %12, i16* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !6382
  %13 = load i32* %old_errno, align 4, !dbg !6383
  store i32 %13, i32* @errno, align 4, !dbg !6383
  ret void, !dbg !6384
}

define i8* @strchr(i8* %s, i32 %c) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  br label %bb, !dbg !6385

bb:                                               ; preds = %bb2, %entry
  %1 = load i8** %s_addr, align 8, !dbg !6386
  %2 = load i8* %1, align 1, !dbg !6386
  %3 = load i32* %c_addr, align 4, !dbg !6386
  %4 = trunc i32 %3 to i8, !dbg !6386
  %5 = icmp eq i8 %2, %4, !dbg !6386
  %6 = load i8** %s_addr, align 8, !dbg !6388
  br i1 %5, label %bb1, label %bb2, !dbg !6386

bb1:                                              ; preds = %bb
  store i8* %6, i8** %0, align 8, !dbg !6388
  br label %bb4, !dbg !6388

bb2:                                              ; preds = %bb
  %7 = load i8* %6, align 1, !dbg !6389
  %8 = icmp ne i8 %7, 0, !dbg !6389
  %9 = zext i1 %8 to i8, !dbg !6389
  %10 = load i8** %s_addr, align 8, !dbg !6389
  %11 = getelementptr inbounds i8* %10, i64 1, !dbg !6389
  store i8* %11, i8** %s_addr, align 8, !dbg !6389
  %toBool = icmp ne i8 %9, 0, !dbg !6389
  br i1 %toBool, label %bb, label %bb3, !dbg !6389

bb3:                                              ; preds = %bb2
  store i8* null, i8** %0, align 8, !dbg !6390
  br label %bb4, !dbg !6390

bb4:                                              ; preds = %bb3, %bb1
  %12 = load i8** %0, align 8, !dbg !6388
  store i8* %12, i8** %retval, align 8, !dbg !6388
  %retval5 = load i8** %retval, !dbg !6388
  ret i8* %retval5, !dbg !6388
}

define i32 @strcmp(i8* %s1, i8* %s2) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  br label %bb, !dbg !6391

bb:                                               ; preds = %bb4, %entry
  %1 = load i8** %s1_addr, align 8, !dbg !6392
  %2 = load i8* %1, align 1, !dbg !6392
  %3 = zext i8 %2 to i32, !dbg !6392
  %4 = load i8** %s2_addr, align 8, !dbg !6392
  %5 = load i8* %4, align 1, !dbg !6392
  %6 = zext i8 %5 to i32, !dbg !6392
  %7 = sub nsw i32 %3, %6, !dbg !6392
  store i32 %7, i32* %r, align 4, !dbg !6392
  %8 = load i32* %r, align 4, !dbg !6392
  %9 = icmp eq i32 %8, 0, !dbg !6392
  %10 = zext i1 %9 to i8, !dbg !6392
  %11 = load i8** %s2_addr, align 8, !dbg !6392
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6392
  store i8* %12, i8** %s2_addr, align 8, !dbg !6392
  %toBool = icmp ne i8 %10, 0, !dbg !6392
  %toBoolnot = xor i1 %toBool, true, !dbg !6392
  %toBoolnot1 = zext i1 %toBoolnot to i8, !dbg !6392
  %toBool3 = icmp ne i8 %toBoolnot1, 0, !dbg !6392
  br i1 %toBool3, label %bb6, label %bb4, !dbg !6392

bb4:                                              ; preds = %bb
  %13 = load i8** %s1_addr, align 8, !dbg !6392
  %14 = load i8* %13, align 1, !dbg !6392
  %15 = icmp ne i8 %14, 0, !dbg !6392
  %16 = zext i1 %15 to i8, !dbg !6392
  %17 = load i8** %s1_addr, align 8, !dbg !6392
  %18 = getelementptr inbounds i8* %17, i64 1, !dbg !6392
  store i8* %18, i8** %s1_addr, align 8, !dbg !6392
  %toBool5 = icmp ne i8 %16, 0, !dbg !6392
  br i1 %toBool5, label %bb, label %bb6, !dbg !6392

bb6:                                              ; preds = %bb4, %bb
  %19 = load i32* %r, align 4, !dbg !6394
  store i32 %19, i32* %0, align 4, !dbg !6394
  %20 = load i32* %0, align 4, !dbg !6394
  store i32 %20, i32* %retval, align 4, !dbg !6394
  %retval7 = load i32* %retval, !dbg !6394
  ret i32 %retval7, !dbg !6394
}

define i8* @strcpy(i8* noalias %s1, i8* noalias %s2) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6395
  store i8* %1, i8** %s, align 8, !dbg !6395
  br label %bb, !dbg !6395

bb:                                               ; preds = %bb, %entry
  %2 = load i8** %s2_addr, align 8, !dbg !6397
  %3 = load i8* %2, align 1, !dbg !6397
  %4 = load i8** %s, align 8, !dbg !6397
  store i8 %3, i8* %4, align 1, !dbg !6397
  %5 = load i8** %s, align 8, !dbg !6397
  %6 = load i8* %5, align 1, !dbg !6397
  %7 = icmp ne i8 %6, 0, !dbg !6397
  %8 = zext i1 %7 to i8, !dbg !6397
  %9 = load i8** %s, align 8, !dbg !6397
  %10 = getelementptr inbounds i8* %9, i64 1, !dbg !6397
  store i8* %10, i8** %s, align 8, !dbg !6397
  %11 = load i8** %s2_addr, align 8, !dbg !6397
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6397
  store i8* %12, i8** %s2_addr, align 8, !dbg !6397
  %toBool = icmp ne i8 %8, 0, !dbg !6397
  br i1 %toBool, label %bb, label %bb1, !dbg !6397

bb1:                                              ; preds = %bb
  %13 = load i8** %s1_addr, align 8, !dbg !6398
  store i8* %13, i8** %0, align 8, !dbg !6398
  %14 = load i8** %0, align 8, !dbg !6398
  store i8* %14, i8** %retval, align 8, !dbg !6398
  %retval2 = load i8** %retval, !dbg !6398
  ret i8* %retval2, !dbg !6398
}

define noalias i8* @strdup(i8* %s1) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %l = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6399
  %2 = call i64 @strlen(i8* %1) nounwind readonly, !dbg !6399
  %3 = add i64 %2, 1, !dbg !6399
  store i64 %3, i64* %l, align 8, !dbg !6399
  %4 = load i64* %l, align 8, !dbg !6401
  %5 = call noalias i8* @malloc(i64 %4) nounwind, !dbg !6401
  store i8* %5, i8** %s, align 8, !dbg !6401
  %6 = load i8** %s, align 8, !dbg !6401
  %7 = icmp ne i8* %6, null, !dbg !6401
  br i1 %7, label %bb, label %bb1, !dbg !6401

bb:                                               ; preds = %entry
  %8 = load i8** %s, align 8, !dbg !6402
  %9 = load i8** %s1_addr, align 8, !dbg !6402
  %10 = load i64* %l, align 8, !dbg !6402
  %11 = call i8* @memcpy(i8* noalias %8, i8* noalias %9, i64 %10) nounwind, !dbg !6402
  br label %bb1, !dbg !6402

bb1:                                              ; preds = %bb, %entry
  %12 = load i8** %s, align 8, !dbg !6403
  store i8* %12, i8** %0, align 8, !dbg !6403
  %13 = load i8** %0, align 8, !dbg !6403
  store i8* %13, i8** %retval, align 8, !dbg !6403
  %retval2 = load i8** %retval, !dbg !6403
  ret i8* %retval2, !dbg !6403
}

define i64 @strlen(i8* %s) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  %1 = load i8** %s_addr, align 8, !dbg !6404
  store i8* %1, i8** %p, align 8, !dbg !6404
  br label %bb1, !dbg !6404

bb:                                               ; preds = %bb1
  %2 = getelementptr inbounds i8* %6, i64 1, !dbg !6404
  store i8* %2, i8** %p, align 8, !dbg !6404
  br label %bb1, !dbg !6404

bb1:                                              ; preds = %bb, %entry
  %3 = load i8** %p, align 8, !dbg !6404
  %4 = load i8* %3, align 1, !dbg !6404
  %5 = icmp ne i8 %4, 0, !dbg !6404
  %6 = load i8** %p, align 8, !dbg !6404
  br i1 %5, label %bb, label %bb2, !dbg !6404

bb2:                                              ; preds = %bb1
  %7 = ptrtoint i8* %6 to i64, !dbg !6406
  %8 = load i8** %s_addr, align 8, !dbg !6406
  %9 = ptrtoint i8* %8 to i64, !dbg !6406
  %10 = sub nsw i64 %7, %9, !dbg !6406
  store i64 %10, i64* %0, align 8, !dbg !6406
  %11 = load i64* %0, align 8, !dbg !6406
  store i64 %11, i64* %retval, align 8, !dbg !6406
  %retval3 = load i64* %retval, !dbg !6406
  ret i64 %retval3, !dbg !6406
}

define i32 @strncmp(i8* %s1, i8* %s2, i64 %n) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  store i32 0, i32* %r, align 4, !dbg !6407
  br label %bb, !dbg !6407

bb:                                               ; preds = %bb5, %entry
  %1 = load i64* %n_addr, align 8, !dbg !6409
  %2 = sub i64 %1, 1, !dbg !6409
  store i64 %2, i64* %n_addr, align 8, !dbg !6409
  %3 = load i64* %n_addr, align 8, !dbg !6409
  %4 = icmp eq i64 %3, -1, !dbg !6409
  br i1 %4, label %bb7, label %bb1, !dbg !6409

bb1:                                              ; preds = %bb
  %5 = load i8** %s1_addr, align 8, !dbg !6409
  %6 = load i8* %5, align 1, !dbg !6409
  %7 = zext i8 %6 to i32, !dbg !6409
  %8 = load i8** %s2_addr, align 8, !dbg !6409
  %9 = load i8* %8, align 1, !dbg !6409
  %10 = zext i8 %9 to i32, !dbg !6409
  %11 = sub nsw i32 %7, %10, !dbg !6409
  store i32 %11, i32* %r, align 4, !dbg !6409
  %12 = load i32* %r, align 4, !dbg !6409
  %13 = icmp eq i32 %12, 0, !dbg !6409
  %14 = zext i1 %13 to i8, !dbg !6409
  %15 = load i8** %s2_addr, align 8, !dbg !6409
  %16 = getelementptr inbounds i8* %15, i64 1, !dbg !6409
  store i8* %16, i8** %s2_addr, align 8, !dbg !6409
  %toBool = icmp ne i8 %14, 0, !dbg !6409
  %toBoolnot = xor i1 %toBool, true, !dbg !6409
  %toBoolnot2 = zext i1 %toBoolnot to i8, !dbg !6409
  %toBool4 = icmp ne i8 %toBoolnot2, 0, !dbg !6409
  br i1 %toBool4, label %bb7, label %bb5, !dbg !6409

bb5:                                              ; preds = %bb1
  %17 = load i8** %s1_addr, align 8, !dbg !6409
  %18 = load i8* %17, align 1, !dbg !6409
  %19 = icmp ne i8 %18, 0, !dbg !6409
  %20 = zext i1 %19 to i8, !dbg !6409
  %21 = load i8** %s1_addr, align 8, !dbg !6409
  %22 = getelementptr inbounds i8* %21, i64 1, !dbg !6409
  store i8* %22, i8** %s1_addr, align 8, !dbg !6409
  %toBool6 = icmp ne i8 %20, 0, !dbg !6409
  br i1 %toBool6, label %bb, label %bb7, !dbg !6409

bb7:                                              ; preds = %bb5, %bb1, %bb
  %23 = load i32* %r, align 4, !dbg !6410
  store i32 %23, i32* %0, align 4, !dbg !6410
  %24 = load i32* %0, align 4, !dbg !6410
  store i32 %24, i32* %retval, align 4, !dbg !6410
  %retval8 = load i32* %retval, !dbg !6410
  ret i32 %retval8, !dbg !6410
}

define i64 @strnlen(i8* %s, i64 %max) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %max_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i64 %max, i64* %max_addr
  %1 = load i8** %s_addr, align 8, !dbg !6411
  store i8* %1, i8** %p, align 8, !dbg !6411
  br label %bb1, !dbg !6411

bb:                                               ; preds = %bb2
  %2 = load i8** %p, align 8, !dbg !6413
  %3 = getelementptr inbounds i8* %2, i64 1, !dbg !6413
  store i8* %3, i8** %p, align 8, !dbg !6413
  %4 = load i64* %max_addr, align 8, !dbg !6414
  %5 = sub i64 %4, 1, !dbg !6414
  store i64 %5, i64* %max_addr, align 8, !dbg !6414
  br label %bb1, !dbg !6414

bb1:                                              ; preds = %bb, %entry
  %6 = load i64* %max_addr, align 8, !dbg !6415
  %7 = icmp eq i64 %6, 0, !dbg !6415
  br i1 %7, label %bb3, label %bb2, !dbg !6415

bb2:                                              ; preds = %bb1
  %8 = load i8** %p, align 8, !dbg !6415
  %9 = load i8* %8, align 1, !dbg !6415
  %10 = icmp ne i8 %9, 0, !dbg !6415
  br i1 %10, label %bb, label %bb3, !dbg !6415

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i8** %p, align 8, !dbg !6416
  %12 = ptrtoint i8* %11 to i64, !dbg !6416
  %13 = load i8** %s_addr, align 8, !dbg !6416
  %14 = ptrtoint i8* %13 to i64, !dbg !6416
  %15 = sub nsw i64 %12, %14, !dbg !6416
  store i64 %15, i64* %0, align 8, !dbg !6416
  %16 = load i64* %0, align 8, !dbg !6416
  store i64 %16, i64* %retval, align 8, !dbg !6416
  %retval4 = load i64* %retval, !dbg !6416
  ret i64 %retval4, !dbg !6416
}

define i8* @strrchr(i8* %s, i32 %c) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  store i8* null, i8** %p, align 8, !dbg !6417
  br label %bb, !dbg !6417

bb:                                               ; preds = %bb2, %entry
  %1 = load i8** %s_addr, align 8, !dbg !6419
  %2 = load i8* %1, align 1, !dbg !6419
  %3 = load i32* %c_addr, align 4, !dbg !6419
  %4 = trunc i32 %3 to i8, !dbg !6419
  %5 = icmp eq i8 %2, %4, !dbg !6419
  br i1 %5, label %bb1, label %bb2, !dbg !6419

bb1:                                              ; preds = %bb
  %6 = load i8** %s_addr, align 8, !dbg !6420
  store i8* %6, i8** %p, align 8, !dbg !6420
  br label %bb2, !dbg !6420

bb2:                                              ; preds = %bb1, %bb
  %7 = load i8** %s_addr, align 8, !dbg !6421
  %8 = load i8* %7, align 1, !dbg !6421
  %9 = icmp ne i8 %8, 0, !dbg !6421
  %10 = zext i1 %9 to i8, !dbg !6421
  %11 = load i8** %s_addr, align 8, !dbg !6421
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6421
  store i8* %12, i8** %s_addr, align 8, !dbg !6421
  %toBool = icmp ne i8 %10, 0, !dbg !6421
  br i1 %toBool, label %bb, label %bb3, !dbg !6421

bb3:                                              ; preds = %bb2
  %13 = load i8** %p, align 8, !dbg !6422
  store i8* %13, i8** %0, align 8, !dbg !6422
  %14 = load i8** %0, align 8, !dbg !6422
  store i8* %14, i8** %retval, align 8, !dbg !6422
  %retval4 = load i8** %retval, !dbg !6422
  ret i8* %retval4, !dbg !6422
}

define i64 @strspn(i8* %s1, i8* %s2) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6423
  store i8* %1, i8** %s, align 8, !dbg !6423
  %2 = load i8** %s2_addr, align 8, !dbg !6425
  store i8* %2, i8** %p, align 8, !dbg !6425
  br label %bb2, !dbg !6425

bb:                                               ; preds = %bb2
  %3 = load i8** %p, align 8, !dbg !6426
  %4 = load i8* %3, align 1, !dbg !6426
  %5 = load i8** %s, align 8, !dbg !6426
  %6 = load i8* %5, align 1, !dbg !6426
  %7 = icmp eq i8 %4, %6, !dbg !6426
  %8 = zext i1 %7 to i8, !dbg !6426
  %9 = load i8** %p, align 8, !dbg !6426
  %10 = getelementptr inbounds i8* %9, i64 1, !dbg !6426
  store i8* %10, i8** %p, align 8, !dbg !6426
  %toBool = icmp ne i8 %8, 0, !dbg !6426
  br i1 %toBool, label %bb1, label %bb2, !dbg !6426

bb1:                                              ; preds = %bb
  %11 = load i8** %s, align 8, !dbg !6427
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6427
  store i8* %12, i8** %s, align 8, !dbg !6427
  %13 = load i8** %s2_addr, align 8, !dbg !6428
  store i8* %13, i8** %p, align 8, !dbg !6428
  br label %bb2, !dbg !6428

bb2:                                              ; preds = %bb1, %bb, %entry
  %14 = load i8** %p, align 8, !dbg !6429
  %15 = load i8* %14, align 1, !dbg !6429
  %16 = icmp ne i8 %15, 0, !dbg !6429
  br i1 %16, label %bb, label %bb3, !dbg !6429

bb3:                                              ; preds = %bb2
  %17 = load i8** %s, align 8, !dbg !6430
  %18 = ptrtoint i8* %17 to i64, !dbg !6430
  %19 = load i8** %s1_addr, align 8, !dbg !6430
  %20 = ptrtoint i8* %19 to i64, !dbg !6430
  %21 = sub nsw i64 %18, %20, !dbg !6430
  store i64 %21, i64* %0, align 8, !dbg !6430
  %22 = load i64* %0, align 8, !dbg !6430
  store i64 %22, i64* %retval, align 8, !dbg !6430
  %retval4 = load i64* %retval, !dbg !6430
  ret i64 %retval4, !dbg !6430
}

define i64 @strtoul(i8* noalias %str, i8** noalias %endptr, i32 %base) nounwind {
entry:
  %str_addr = alloca i8*, align 8
  %endptr_addr = alloca i8**, align 8
  %base_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %str, i8** %str_addr
  store i8** %endptr, i8*** %endptr_addr
  store i32 %base, i32* %base_addr
  %1 = load i8** %str_addr, align 8, !dbg !6431
  %2 = load i8*** %endptr_addr, align 8, !dbg !6431
  %3 = load i32* %base_addr, align 4, !dbg !6431
  %4 = call i64 @_stdlib_strto_l(i8* noalias %1, i8** noalias %2, i32 %3, i32 0) nounwind, !dbg !6431
  store i64 %4, i64* %0, align 8, !dbg !6431
  %5 = load i64* %0, align 8, !dbg !6431
  store i64 %5, i64* %retval, align 8, !dbg !6431
  %retval1 = load i64* %retval, !dbg !6431
  ret i64 %retval1, !dbg !6431
}

define i64 @wcstombs(i8* noalias %s, i32* noalias %pwcs, i64 %n) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %pwcs_addr = alloca i32*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %e = alloca i32*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32* %pwcs, i32** %pwcs_addr
  store i64 %n, i64* %n_addr
  %1 = load i32** %pwcs_addr, align 8, !dbg !6433
  store i32* %1, i32** %e, align 8, !dbg !6433
  %2 = load i8** %s_addr, align 8, !dbg !6435
  %3 = load i64* %n_addr, align 8, !dbg !6435
  %4 = call i64 @wcsrtombs(i8* noalias %2, i32** noalias %e, i64 %3, %struct.__mbstate_t* noalias null) nounwind, !dbg !6435
  store i64 %4, i64* %0, align 8, !dbg !6435
  %5 = load i64* %0, align 8, !dbg !6435
  store i64 %5, i64* %retval, align 8, !dbg !6435
  %retval1 = load i64* %retval, !dbg !6435
  ret i64 %retval1, !dbg !6435
}

define i32 @wcswidth(i32* %pwcs, i64 %n) nounwind {
entry:
  %pwcs_addr = alloca i32*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %count = alloca i32
  %wc = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32* %pwcs, i32** %pwcs_addr
  store i64 %n, i64* %n_addr
  store i32 0, i32* %count, align 4, !dbg !6436
  br label %bb7, !dbg !6436

bb:                                               ; preds = %bb8
  %1 = load i32* %wc, align 4, !dbg !6438
  %2 = icmp sle i32 %1, 255, !dbg !6438
  br i1 %2, label %bb1, label %bb6, !dbg !6438

bb1:                                              ; preds = %bb
  %3 = load i32* %wc, align 4, !dbg !6439
  %4 = icmp sle i32 %3, 31, !dbg !6439
  br i1 %4, label %bb4, label %bb2, !dbg !6439

bb2:                                              ; preds = %bb1
  %5 = load i32* %wc, align 4, !dbg !6439
  %6 = icmp sgt i32 %5, 126, !dbg !6439
  %7 = load i32* %wc, align 4, !dbg !6439
  %8 = icmp sle i32 %7, 159, !dbg !6439
  %or.cond = and i1 %6, %8
  br i1 %or.cond, label %bb4, label %bb5, !dbg !6439

bb4:                                              ; preds = %bb2, %bb1
  store i32 -1, i32* %0, align 4, !dbg !6440
  br label %bb10, !dbg !6440

bb5:                                              ; preds = %bb2
  %9 = load i32* %count, align 4, !dbg !6441
  %10 = add nsw i32 %9, 1, !dbg !6441
  store i32 %10, i32* %count, align 4, !dbg !6441
  %11 = load i64* %n_addr, align 8, !dbg !6436
  %12 = sub i64 %11, 1, !dbg !6436
  store i64 %12, i64* %n_addr, align 8, !dbg !6436
  br label %bb7, !dbg !6436

bb6:                                              ; preds = %bb
  store i32 -1, i32* %0, align 4, !dbg !6442
  br label %bb10, !dbg !6442

bb7:                                              ; preds = %bb5, %entry
  %13 = load i64* %n_addr, align 8, !dbg !6436
  %14 = icmp eq i64 %13, 0, !dbg !6436
  br i1 %14, label %bb9, label %bb8, !dbg !6436

bb8:                                              ; preds = %bb7
  %15 = load i32** %pwcs_addr, align 8, !dbg !6436
  %16 = load i32* %15, align 4, !dbg !6436
  store i32 %16, i32* %wc, align 4, !dbg !6436
  %17 = load i32* %wc, align 4, !dbg !6436
  %18 = icmp ne i32 %17, 0, !dbg !6436
  %19 = zext i1 %18 to i8, !dbg !6436
  %20 = load i32** %pwcs_addr, align 8, !dbg !6436
  %21 = getelementptr inbounds i32* %20, i64 1, !dbg !6436
  store i32* %21, i32** %pwcs_addr, align 8, !dbg !6436
  %toBool = icmp ne i8 %19, 0, !dbg !6436
  br i1 %toBool, label %bb, label %bb9, !dbg !6436

bb9:                                              ; preds = %bb8, %bb7
  %22 = load i32* %count, align 4, !dbg !6443
  store i32 %22, i32* %0, align 4, !dbg !6443
  br label %bb10, !dbg !6443

bb10:                                             ; preds = %bb9, %bb6, %bb4
  %23 = load i32* %0, align 4, !dbg !6440
  store i32 %23, i32* %retval, align 4, !dbg !6440
  %retval11 = load i32* %retval, !dbg !6440
  ret i32 %retval11, !dbg !6440
}

define i32 @wcwidth(i32 %wc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = call i32 @wcswidth(i32* %wc_addr, i64 1) nounwind, !dbg !6444
  store i32 %1, i32* %0, align 4, !dbg !6444
  %2 = load i32* %0, align 4, !dbg !6444
  store i32 %2, i32* %retval, align 4, !dbg !6444
  %retval1 = load i32* %retval, !dbg !6444
  ret i32 %retval1, !dbg !6444
}

define i8* @strsep(i8** noalias %s1, i8* noalias %s2) nounwind {
entry:
  %s1_addr = alloca i8**, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8** %s1, i8*** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8*** %s1_addr, align 8, !dbg !6446
  %2 = load i8** %1, align 8, !dbg !6446
  store i8* %2, i8** %s, align 8, !dbg !6446
  store i8* null, i8** %p, align 8, !dbg !6448
  %3 = load i8** %s, align 8, !dbg !6449
  %4 = icmp ne i8* %3, null, !dbg !6449
  br i1 %4, label %bb, label %bb3, !dbg !6449

bb:                                               ; preds = %entry
  %5 = load i8** %s, align 8, !dbg !6449
  %6 = load i8* %5, align 1, !dbg !6449
  %7 = icmp ne i8 %6, 0, !dbg !6449
  br i1 %7, label %bb1, label %bb3, !dbg !6449

bb1:                                              ; preds = %bb
  %8 = load i8** %s, align 8, !dbg !6449
  %9 = load i8** %s2_addr, align 8, !dbg !6449
  %10 = call i8* @strpbrk(i8* %8, i8* %9) nounwind readonly, !dbg !6449
  store i8* %10, i8** %p, align 8, !dbg !6449
  %11 = load i8** %p, align 8, !dbg !6449
  %12 = icmp ne i8* %11, null, !dbg !6449
  br i1 %12, label %bb2, label %bb3, !dbg !6449

bb2:                                              ; preds = %bb1
  %13 = load i8** %p, align 8, !dbg !6450
  store i8 0, i8* %13, align 1, !dbg !6450
  %14 = load i8** %p, align 8, !dbg !6450
  %15 = getelementptr inbounds i8* %14, i64 1, !dbg !6450
  store i8* %15, i8** %p, align 8, !dbg !6450
  br label %bb3, !dbg !6450

bb3:                                              ; preds = %bb2, %bb1, %bb, %entry
  %16 = load i8*** %s1_addr, align 8, !dbg !6451
  %17 = load i8** %p, align 8, !dbg !6451
  store i8* %17, i8** %16, align 8, !dbg !6451
  %18 = load i8** %s, align 8, !dbg !6452
  store i8* %18, i8** %0, align 8, !dbg !6452
  %19 = load i8** %0, align 8, !dbg !6452
  store i8* %19, i8** %retval, align 8, !dbg !6452
  %retval4 = load i8** %retval, !dbg !6452
  ret i8* %retval4, !dbg !6452
}

define weak i32* @__h_errno_location() nounwind readnone {
entry:
  %retval = alloca i32*
  %0 = alloca i32*
  %"alloca point" = bitcast i32 0 to i32
  store i32* @h_errno, i32** %0, align 8, !dbg !6453
  %1 = load i32** %0, align 8, !dbg !6453
  store i32* %1, i32** %retval, align 8, !dbg !6453
  %retval1 = load i32** %retval, !dbg !6453
  ret i32* %retval1, !dbg !6453
}

define i32 @__cxa_atexit(void (i8*)* %func, i8* %arg, i8* %dso_handle) nounwind {
entry:
  %func_addr = alloca void (i8*)*, align 8
  %arg_addr = alloca i8*, align 8
  %dso_handle_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %efp = alloca %struct.exit_function*
  %"alloca point" = bitcast i32 0 to i32
  store void (i8*)* %func, void (i8*)** %func_addr
  store i8* %arg, i8** %arg_addr
  store i8* %dso_handle, i8** %dso_handle_addr
  %1 = load void (i8*)** %func_addr, align 8, !dbg !6455
  %2 = icmp eq void (i8*)* %1, null, !dbg !6455
  br i1 %2, label %bb, label %bb1, !dbg !6455

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4, !dbg !6457
  br label %bb4, !dbg !6457

bb1:                                              ; preds = %entry
  %3 = call %struct.exit_function* @__new_exitfn() nounwind, !dbg !6458
  store %struct.exit_function* %3, %struct.exit_function** %efp, align 8, !dbg !6458
  %4 = load %struct.exit_function** %efp, align 8, !dbg !6459
  %5 = icmp eq %struct.exit_function* %4, null, !dbg !6459
  br i1 %5, label %bb2, label %bb3, !dbg !6459

bb2:                                              ; preds = %bb1
  store i32 -1, i32* %0, align 4, !dbg !6460
  br label %bb4, !dbg !6460

bb3:                                              ; preds = %bb1
  %6 = load %struct.exit_function** %efp, align 8, !dbg !6461
  %7 = getelementptr inbounds %struct.exit_function* %6, i32 0, i32 1, !dbg !6461
  %8 = getelementptr inbounds %1* %7, i32 0, i32 0, !dbg !6461
  %9 = getelementptr inbounds %2* %8, i32 0, i32 0, !dbg !6461
  %10 = load void (i8*)** %func_addr, align 8, !dbg !6461
  store void (i8*)* %10, void (i8*)** %9, align 8, !dbg !6461
  %11 = load %struct.exit_function** %efp, align 8, !dbg !6462
  %12 = getelementptr inbounds %struct.exit_function* %11, i32 0, i32 1, !dbg !6462
  %13 = getelementptr inbounds %1* %12, i32 0, i32 0, !dbg !6462
  %14 = getelementptr inbounds %2* %13, i32 0, i32 1, !dbg !6462
  %15 = load i8** %arg_addr, align 8, !dbg !6462
  store i8* %15, i8** %14, align 8, !dbg !6462
  %16 = load %struct.exit_function** %efp, align 8, !dbg !6463
  %17 = getelementptr inbounds %struct.exit_function* %16, i32 0, i32 1, !dbg !6463
  %18 = getelementptr inbounds %1* %17, i32 0, i32 0, !dbg !6463
  %19 = getelementptr inbounds %2* %18, i32 0, i32 2, !dbg !6463
  %20 = load i8** %dso_handle_addr, align 8, !dbg !6463
  store i8* %20, i8** %19, align 8, !dbg !6463
  %21 = load %struct.exit_function** %efp, align 8, !dbg !6464
  %22 = getelementptr inbounds %struct.exit_function* %21, i32 0, i32 0, !dbg !6464
  store i64 3, i64* %22, align 8, !dbg !6464
  store i32 0, i32* %0, align 4, !dbg !6465
  br label %bb4, !dbg !6465

bb4:                                              ; preds = %bb3, %bb2, %bb
  %23 = load i32* %0, align 4, !dbg !6457
  store i32 %23, i32* %retval, align 4, !dbg !6457
  %retval5 = load i32* %retval, !dbg !6457
  ret i32 %retval5, !dbg !6457
}

define i32 @__sigismember(%struct.__sigset_t* %__set, i32 %__sig) nounwind {
entry:
  %__set_addr = alloca %struct.__sigset_t*, align 8
  %__sig_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %__mask = alloca i64
  %__word = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.__sigset_t* %__set, %struct.__sigset_t** %__set_addr
  store i32 %__sig, i32* %__sig_addr
  %1 = load i32* %__sig_addr, align 4, !dbg !6466
  %2 = sub nsw i32 %1, 1, !dbg !6466
  %3 = and i32 %2, 63, !dbg !6466
  %.cast = zext i32 %3 to i64, !dbg !6466
  %int_cast_to_i641 = bitcast i64 %.cast to i64
  %4 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %4, label %klee_overshift_check.exit, label %bb.i2

bb.i2:                                            ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i64 1, %.cast, !dbg !6466
  store i64 %5, i64* %__mask, align 8, !dbg !6466
  %6 = load i32* %__sig_addr, align 4, !dbg !6466
  %7 = sub nsw i32 %6, 1, !dbg !6466
  %8 = sext i32 %7 to i64, !dbg !6466
  %int_cast_to_i64 = bitcast i64 64 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %klee_overshift_check.exit
  call void @klee_disable_symbex() nounwind
  %11 = udiv i64 %8, 64, !dbg !6466
  store i64 %11, i64* %__word, align 8, !dbg !6466
  %12 = load i64* %__word, align 8, !dbg !6466
  %13 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6466
  %14 = getelementptr inbounds %struct.__sigset_t* %13, i32 0, i32 0, !dbg !6466
  %15 = getelementptr inbounds [16 x i64]* %14, i64 0, i64 %12, !dbg !6466
  %16 = load i64* %15, align 8, !dbg !6466
  %17 = load i64* %__mask, align 8, !dbg !6466
  %18 = and i64 %16, %17, !dbg !6466
  %19 = icmp ne i64 %18, 0, !dbg !6466
  %20 = zext i1 %19 to i32, !dbg !6466
  store i32 %20, i32* %0, align 4, !dbg !6466
  %21 = load i32* %0, align 4, !dbg !6466
  store i32 %21, i32* %retval, align 4, !dbg !6466
  %retval1 = load i32* %retval, !dbg !6466
  ret i32 %retval1, !dbg !6467
}

define i32 @__sigaddset(%struct.__sigset_t* %__set, i32 %__sig) nounwind {
entry:
  %__set_addr = alloca %struct.__sigset_t*, align 8
  %__sig_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %__mask = alloca i64
  %__word = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.__sigset_t* %__set, %struct.__sigset_t** %__set_addr
  store i32 %__sig, i32* %__sig_addr
  %1 = load i32* %__sig_addr, align 4, !dbg !6469
  %2 = sub nsw i32 %1, 1, !dbg !6469
  %3 = and i32 %2, 63, !dbg !6469
  %.cast = zext i32 %3 to i64, !dbg !6469
  %int_cast_to_i641 = bitcast i64 %.cast to i64
  %4 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %4, label %klee_overshift_check.exit, label %bb.i2

bb.i2:                                            ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i64 1, %.cast, !dbg !6469
  store i64 %5, i64* %__mask, align 8, !dbg !6469
  %6 = load i32* %__sig_addr, align 4, !dbg !6469
  %7 = sub nsw i32 %6, 1, !dbg !6469
  %8 = sext i32 %7 to i64, !dbg !6469
  %int_cast_to_i64 = bitcast i64 64 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %klee_overshift_check.exit
  call void @klee_disable_symbex() nounwind
  %11 = udiv i64 %8, 64, !dbg !6469
  store i64 %11, i64* %__word, align 8, !dbg !6469
  %12 = load i64* %__word, align 8, !dbg !6469
  %13 = load i64* %__word, align 8, !dbg !6469
  %14 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6469
  %15 = getelementptr inbounds %struct.__sigset_t* %14, i32 0, i32 0, !dbg !6469
  %16 = getelementptr inbounds [16 x i64]* %15, i64 0, i64 %13, !dbg !6469
  %17 = load i64* %16, align 8, !dbg !6469
  %18 = load i64* %__mask, align 8, !dbg !6469
  %19 = or i64 %17, %18, !dbg !6469
  %20 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6469
  %21 = getelementptr inbounds %struct.__sigset_t* %20, i32 0, i32 0, !dbg !6469
  %22 = getelementptr inbounds [16 x i64]* %21, i64 0, i64 %12, !dbg !6469
  store i64 %19, i64* %22, align 8, !dbg !6469
  store i32 0, i32* %0, align 4, !dbg !6469
  %23 = load i32* %0, align 4, !dbg !6469
  store i32 %23, i32* %retval, align 4, !dbg !6469
  %retval1 = load i32* %retval, !dbg !6469
  ret i32 %retval1, !dbg !6470
}

define i32 @__sigdelset(%struct.__sigset_t* %__set, i32 %__sig) nounwind {
entry:
  %__set_addr = alloca %struct.__sigset_t*, align 8
  %__sig_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %__mask = alloca i64
  %__word = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.__sigset_t* %__set, %struct.__sigset_t** %__set_addr
  store i32 %__sig, i32* %__sig_addr
  %1 = load i32* %__sig_addr, align 4, !dbg !6472
  %2 = sub nsw i32 %1, 1, !dbg !6472
  %3 = and i32 %2, 63, !dbg !6472
  %.cast = zext i32 %3 to i64, !dbg !6472
  %int_cast_to_i641 = bitcast i64 %.cast to i64
  %4 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %4, label %klee_overshift_check.exit, label %bb.i2

bb.i2:                                            ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i64 1, %.cast, !dbg !6472
  store i64 %5, i64* %__mask, align 8, !dbg !6472
  %6 = load i32* %__sig_addr, align 4, !dbg !6472
  %7 = sub nsw i32 %6, 1, !dbg !6472
  %8 = sext i32 %7 to i64, !dbg !6472
  %int_cast_to_i64 = bitcast i64 64 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %klee_overshift_check.exit
  call void @klee_disable_symbex() nounwind
  %11 = udiv i64 %8, 64, !dbg !6472
  store i64 %11, i64* %__word, align 8, !dbg !6472
  %12 = load i64* %__word, align 8, !dbg !6472
  %13 = load i64* %__word, align 8, !dbg !6472
  %14 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6472
  %15 = getelementptr inbounds %struct.__sigset_t* %14, i32 0, i32 0, !dbg !6472
  %16 = getelementptr inbounds [16 x i64]* %15, i64 0, i64 %13, !dbg !6472
  %17 = load i64* %16, align 8, !dbg !6472
  %18 = load i64* %__mask, align 8, !dbg !6472
  %not = xor i64 %18, -1, !dbg !6472
  %19 = and i64 %17, %not, !dbg !6472
  %20 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6472
  %21 = getelementptr inbounds %struct.__sigset_t* %20, i32 0, i32 0, !dbg !6472
  %22 = getelementptr inbounds [16 x i64]* %21, i64 0, i64 %12, !dbg !6472
  store i64 %19, i64* %22, align 8, !dbg !6472
  store i32 0, i32* %0, align 4, !dbg !6472
  %23 = load i32* %0, align 4, !dbg !6472
  store i32 %23, i32* %retval, align 4, !dbg !6472
  %retval2 = load i32* %retval, !dbg !6472
  ret i32 %retval2, !dbg !6473
}

define hidden i64 @__stdio_READ(%4* %stream, i8* %buf, i64 %bufsize) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %buf_addr = alloca i8*, align 8
  %bufsize_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %rv = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %buf, i8** %buf_addr
  store i64 %bufsize, i64* %bufsize_addr
  store i64 0, i64* %rv, align 8, !dbg !6475
  %1 = load %4** %stream_addr, align 8, !dbg !6477
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6477
  %3 = load i16* %2, align 8, !dbg !6477
  %4 = zext i16 %3 to i32, !dbg !6477
  %5 = and i32 %4, 4, !dbg !6477
  %6 = icmp eq i32 %5, 0, !dbg !6477
  br i1 %6, label %bb, label %bb6, !dbg !6477

bb:                                               ; preds = %entry
  %7 = load i64* %bufsize_addr, align 8, !dbg !6478
  %8 = icmp slt i64 %7, 0, !dbg !6478
  br i1 %8, label %bb1, label %bb2, !dbg !6478

bb1:                                              ; preds = %bb
  store i64 9223372036854775807, i64* %bufsize_addr, align 8, !dbg !6479
  br label %bb2, !dbg !6479

bb2:                                              ; preds = %bb1, %bb
  %9 = load %4** %stream_addr, align 8, !dbg !6480
  %10 = getelementptr inbounds %4* %9, i32 0, i32 2, !dbg !6480
  %11 = load i32* %10, align 4, !dbg !6480
  %12 = load i8** %buf_addr, align 8, !dbg !6480
  %13 = load i64* %bufsize_addr, align 8, !dbg !6480
  %14 = call i64 @read(i32 %11, i8* %12, i64 %13) nounwind, !dbg !6480
  store i64 %14, i64* %rv, align 8, !dbg !6480
  %15 = load i64* %rv, align 8, !dbg !6480
  %16 = icmp sle i64 %15, 0, !dbg !6480
  br i1 %16, label %bb3, label %bb6, !dbg !6480

bb3:                                              ; preds = %bb2
  %17 = load i64* %rv, align 8, !dbg !6481
  %18 = icmp eq i64 %17, 0, !dbg !6481
  %19 = load %4** %stream_addr, align 8, !dbg !6482
  %20 = getelementptr inbounds %4* %19, i32 0, i32 0, !dbg !6482
  %21 = load i16* %20, align 8, !dbg !6482
  br i1 %18, label %bb4, label %bb5, !dbg !6481

bb4:                                              ; preds = %bb3
  %22 = or i16 %21, 4, !dbg !6482
  %23 = load %4** %stream_addr, align 8, !dbg !6482
  %24 = getelementptr inbounds %4* %23, i32 0, i32 0, !dbg !6482
  store i16 %22, i16* %24, align 8, !dbg !6482
  br label %bb6, !dbg !6482

bb5:                                              ; preds = %bb3
  %25 = or i16 %21, 8, !dbg !6483
  %26 = load %4** %stream_addr, align 8, !dbg !6483
  %27 = getelementptr inbounds %4* %26, i32 0, i32 0, !dbg !6483
  store i16 %25, i16* %27, align 8, !dbg !6483
  store i64 0, i64* %rv, align 8, !dbg !6484
  br label %bb6, !dbg !6484

bb6:                                              ; preds = %bb5, %bb4, %bb2, %entry
  %28 = load i64* %rv, align 8, !dbg !6485
  store i64 %28, i64* %0, align 8, !dbg !6485
  %29 = load i64* %0, align 8, !dbg !6485
  store i64 %29, i64* %retval, align 8, !dbg !6485
  %retval7 = load i64* %retval, !dbg !6485
  ret i64 %retval7, !dbg !6485
}

define hidden i64 @__stdio_WRITE(%4* %stream, i8* %buf, i64 %bufsize) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %buf_addr = alloca i8*, align 8
  %bufsize_addr = alloca i64, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %todo = alloca i64
  %rv = alloca i64
  %stodo = alloca i64
  %s = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %buf, i8** %buf_addr
  store i64 %bufsize, i64* %bufsize_addr
  %1 = load i64* %bufsize_addr, align 8, !dbg !6486
  store i64 %1, i64* %todo, align 8, !dbg !6486
  br label %bb, !dbg !6486

bb:                                               ; preds = %bb6, %entry
  %2 = load i64* %todo, align 8, !dbg !6488
  %3 = icmp eq i64 %2, 0, !dbg !6488
  br i1 %3, label %bb1, label %bb2, !dbg !6488

bb1:                                              ; preds = %bb
  %4 = load i64* %bufsize_addr, align 8, !dbg !6489
  store i64 %4, i64* %0, align 8, !dbg !6489
  br label %bb16, !dbg !6489

bb2:                                              ; preds = %bb
  %5 = load i64* %todo, align 8, !dbg !6490
  %6 = icmp sge i64 %5, 0, !dbg !6490
  br i1 %6, label %bb3, label %bb4, !dbg !6490

bb3:                                              ; preds = %bb2
  %7 = load i64* %todo, align 8, !dbg !6490
  store i64 %7, i64* %iftmp.0, align 8, !dbg !6490
  br label %bb5, !dbg !6490

bb4:                                              ; preds = %bb2
  store i64 9223372036854775807, i64* %iftmp.0, align 8, !dbg !6490
  br label %bb5, !dbg !6490

bb5:                                              ; preds = %bb4, %bb3
  %8 = load i64* %iftmp.0, align 8, !dbg !6490
  store i64 %8, i64* %stodo, align 8, !dbg !6490
  %9 = load i64* %stodo, align 8, !dbg !6491
  %10 = load %4** %stream_addr, align 8, !dbg !6491
  %11 = getelementptr inbounds %4* %10, i32 0, i32 2, !dbg !6491
  %12 = load i32* %11, align 4, !dbg !6491
  %13 = load i8** %buf_addr, align 8, !dbg !6491
  %14 = call i64 @write(i32 %12, i8* %13, i64 %9) nounwind, !dbg !6491
  store i64 %14, i64* %rv, align 8, !dbg !6491
  %15 = load i64* %rv, align 8, !dbg !6491
  %16 = icmp sge i64 %15, 0, !dbg !6491
  br i1 %16, label %bb6, label %bb7, !dbg !6491

bb6:                                              ; preds = %bb5
  %17 = load i64* %rv, align 8, !dbg !6492
  %18 = load i64* %todo, align 8, !dbg !6492
  %19 = sub i64 %18, %17, !dbg !6492
  store i64 %19, i64* %todo, align 8, !dbg !6492
  %20 = load i8** %buf_addr, align 8, !dbg !6493
  %21 = load i64* %rv, align 8, !dbg !6493
  %22 = getelementptr inbounds i8* %20, i64 %21, !dbg !6493
  store i8* %22, i8** %buf_addr, align 8, !dbg !6493
  br label %bb, !dbg !6493

bb7:                                              ; preds = %bb5
  %23 = load %4** %stream_addr, align 8, !dbg !6494
  %24 = getelementptr inbounds %4* %23, i32 0, i32 0, !dbg !6494
  %25 = load i16* %24, align 8, !dbg !6494
  %26 = or i16 %25, 8, !dbg !6494
  %27 = load %4** %stream_addr, align 8, !dbg !6494
  %28 = getelementptr inbounds %4* %27, i32 0, i32 0, !dbg !6494
  store i16 %26, i16* %28, align 8, !dbg !6494
  %29 = load %4** %stream_addr, align 8, !dbg !6495
  %30 = getelementptr inbounds %4* %29, i32 0, i32 4, !dbg !6495
  %31 = load i8** %30, align 8, !dbg !6495
  %32 = ptrtoint i8* %31 to i64, !dbg !6495
  %33 = load %4** %stream_addr, align 8, !dbg !6495
  %34 = getelementptr inbounds %4* %33, i32 0, i32 3, !dbg !6495
  %35 = load i8** %34, align 8, !dbg !6495
  %36 = ptrtoint i8* %35 to i64, !dbg !6495
  %37 = sub nsw i64 %32, %36, !dbg !6495
  store i64 %37, i64* %stodo, align 8, !dbg !6495
  %38 = load i64* %stodo, align 8, !dbg !6495
  %39 = icmp ne i64 %38, 0, !dbg !6495
  br i1 %39, label %bb8, label %bb15, !dbg !6495

bb8:                                              ; preds = %bb7
  %40 = load i64* %stodo, align 8, !dbg !6496
  %41 = load i64* %todo, align 8, !dbg !6496
  %42 = icmp ugt i64 %40, %41, !dbg !6496
  br i1 %42, label %bb9, label %bb10, !dbg !6496

bb9:                                              ; preds = %bb8
  %43 = load i64* %todo, align 8, !dbg !6498
  store i64 %43, i64* %stodo, align 8, !dbg !6498
  br label %bb10, !dbg !6498

bb10:                                             ; preds = %bb9, %bb8
  %44 = load %4** %stream_addr, align 8, !dbg !6499
  %45 = getelementptr inbounds %4* %44, i32 0, i32 3, !dbg !6499
  %46 = load i8** %45, align 8, !dbg !6499
  store i8* %46, i8** %s, align 8, !dbg !6499
  br label %bb11, !dbg !6499

bb11:                                             ; preds = %bb13, %bb10
  %47 = load i8** %buf_addr, align 8, !dbg !6500
  %48 = load i8* %47, align 1, !dbg !6500
  %49 = load i8** %s, align 8, !dbg !6500
  store i8 %48, i8* %49, align 1, !dbg !6500
  %50 = load i8** %s, align 8, !dbg !6500
  %51 = load i8* %50, align 1, !dbg !6500
  %52 = icmp eq i8 %51, 10, !dbg !6500
  br i1 %52, label %bb12, label %bb13, !dbg !6500

bb12:                                             ; preds = %bb11
  %53 = load %4** %stream_addr, align 8, !dbg !6500
  %54 = getelementptr inbounds %4* %53, i32 0, i32 0, !dbg !6500
  %55 = load i16* %54, align 8, !dbg !6500
  %56 = zext i16 %55 to i32, !dbg !6500
  %57 = and i32 %56, 256, !dbg !6500
  %58 = icmp ne i32 %57, 0, !dbg !6500
  br i1 %58, label %bb14, label %bb13, !dbg !6500

bb13:                                             ; preds = %bb12, %bb11
  %59 = load i8** %s, align 8, !dbg !6501
  %60 = getelementptr inbounds i8* %59, i64 1, !dbg !6501
  store i8* %60, i8** %s, align 8, !dbg !6501
  %61 = load i8** %buf_addr, align 8, !dbg !6502
  %62 = getelementptr inbounds i8* %61, i64 1, !dbg !6502
  store i8* %62, i8** %buf_addr, align 8, !dbg !6502
  %63 = load i64* %stodo, align 8, !dbg !6503
  %64 = sub nsw i64 %63, 1, !dbg !6503
  store i64 %64, i64* %stodo, align 8, !dbg !6503
  %65 = load i64* %stodo, align 8, !dbg !6503
  %66 = icmp ne i64 %65, 0, !dbg !6503
  br i1 %66, label %bb11, label %bb14, !dbg !6503

bb14:                                             ; preds = %bb13, %bb12
  %67 = load %4** %stream_addr, align 8, !dbg !6504
  %68 = getelementptr inbounds %4* %67, i32 0, i32 5, !dbg !6504
  %69 = load i8** %s, align 8, !dbg !6504
  store i8* %69, i8** %68, align 8, !dbg !6504
  %70 = load i8** %s, align 8, !dbg !6505
  %71 = ptrtoint i8* %70 to i64, !dbg !6505
  %72 = load %4** %stream_addr, align 8, !dbg !6505
  %73 = getelementptr inbounds %4* %72, i32 0, i32 3, !dbg !6505
  %74 = load i8** %73, align 8, !dbg !6505
  %75 = ptrtoint i8* %74 to i64, !dbg !6505
  %76 = sub nsw i64 %71, %75, !dbg !6505
  %77 = load i64* %todo, align 8, !dbg !6505
  %78 = sub i64 %77, %76, !dbg !6505
  store i64 %78, i64* %todo, align 8, !dbg !6505
  br label %bb15, !dbg !6505

bb15:                                             ; preds = %bb14, %bb7
  %79 = load i64* %bufsize_addr, align 8, !dbg !6506
  %80 = load i64* %todo, align 8, !dbg !6506
  %81 = sub i64 %79, %80, !dbg !6506
  store i64 %81, i64* %0, align 8, !dbg !6506
  br label %bb16, !dbg !6506

bb16:                                             ; preds = %bb15, %bb1
  %82 = load i64* %0, align 8, !dbg !6489
  store i64 %82, i64* %retval, align 8, !dbg !6489
  %retval17 = load i64* %retval, !dbg !6489
  ret i64 %retval17, !dbg !6489
}

define hidden i64 @__stdio_fwrite(i8* noalias %buffer, i64 %bytes, %4* noalias %stream) nounwind {
entry:
  %buffer_addr = alloca i8*, align 8
  %bytes_addr = alloca i64, align 8
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %pending = alloca i64
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buffer, i8** %buffer_addr
  store i64 %bytes, i64* %bytes_addr
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6507
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6507
  %3 = load i16* %2, align 8, !dbg !6507
  %4 = zext i16 %3 to i32, !dbg !6507
  %5 = and i32 %4, 512, !dbg !6507
  %6 = icmp eq i32 %5, 0, !dbg !6507
  br i1 %6, label %bb, label %bb16, !dbg !6507

bb:                                               ; preds = %entry
  %7 = load %4** %stream_addr, align 8, !dbg !6509
  %8 = getelementptr inbounds %4* %7, i32 0, i32 2, !dbg !6509
  %9 = load i32* %8, align 4, !dbg !6509
  %10 = icmp eq i32 %9, -2, !dbg !6509
  %11 = load %4** %stream_addr, align 8, !dbg !6510
  %12 = getelementptr inbounds %4* %11, i32 0, i32 4, !dbg !6510
  %13 = load i8** %12, align 8, !dbg !6510
  %14 = ptrtoint i8* %13 to i64, !dbg !6510
  %15 = load %4** %stream_addr, align 8, !dbg !6510
  %16 = getelementptr inbounds %4* %15, i32 0, i32 5, !dbg !6510
  %17 = load i8** %16, align 8, !dbg !6510
  %18 = ptrtoint i8* %17 to i64, !dbg !6510
  %19 = sub nsw i64 %14, %18, !dbg !6510
  br i1 %10, label %bb1, label %bb4, !dbg !6509

bb1:                                              ; preds = %bb
  store i64 %19, i64* %pending, align 8, !dbg !6510
  %20 = load i64* %pending, align 8, !dbg !6511
  %21 = load i64* %bytes_addr, align 8, !dbg !6511
  %22 = icmp ugt i64 %20, %21, !dbg !6511
  br i1 %22, label %bb2, label %bb3, !dbg !6511

bb2:                                              ; preds = %bb1
  %23 = load i64* %bytes_addr, align 8, !dbg !6512
  store i64 %23, i64* %pending, align 8, !dbg !6512
  br label %bb3, !dbg !6512

bb3:                                              ; preds = %bb2, %bb1
  %24 = load %4** %stream_addr, align 8, !dbg !6513
  %25 = getelementptr inbounds %4* %24, i32 0, i32 5, !dbg !6513
  %26 = load i8** %25, align 8, !dbg !6513
  %27 = load i8** %buffer_addr, align 8, !dbg !6513
  %28 = load i64* %pending, align 8, !dbg !6513
  %29 = call i8* @memcpy(i8* noalias %26, i8* noalias %27, i64 %28) nounwind, !dbg !6513
  %30 = load %4** %stream_addr, align 8, !dbg !6514
  %31 = getelementptr inbounds %4* %30, i32 0, i32 5, !dbg !6514
  %32 = load i8** %31, align 8, !dbg !6514
  %33 = load i64* %pending, align 8, !dbg !6514
  %34 = getelementptr inbounds i8* %32, i64 %33, !dbg !6514
  %35 = load %4** %stream_addr, align 8, !dbg !6514
  %36 = getelementptr inbounds %4* %35, i32 0, i32 5, !dbg !6514
  store i8* %34, i8** %36, align 8, !dbg !6514
  %37 = load i64* %bytes_addr, align 8, !dbg !6515
  store i64 %37, i64* %0, align 8, !dbg !6515
  br label %bb17, !dbg !6515

bb4:                                              ; preds = %bb
  %38 = load i64* %bytes_addr, align 8, !dbg !6516
  %39 = icmp uge i64 %19, %38, !dbg !6516
  %40 = load %4** %stream_addr, align 8, !dbg !6517
  %41 = getelementptr inbounds %4* %40, i32 0, i32 5, !dbg !6517
  %42 = load i8** %41, align 8, !dbg !6517
  br i1 %39, label %bb5, label %bb13, !dbg !6516

bb5:                                              ; preds = %bb4
  %43 = load i8** %buffer_addr, align 8, !dbg !6517
  %44 = load i64* %bytes_addr, align 8, !dbg !6517
  %45 = call i8* @memcpy(i8* noalias %42, i8* noalias %43, i64 %44) nounwind, !dbg !6517
  %46 = load %4** %stream_addr, align 8, !dbg !6518
  %47 = getelementptr inbounds %4* %46, i32 0, i32 5, !dbg !6518
  %48 = load i8** %47, align 8, !dbg !6518
  %49 = load i64* %bytes_addr, align 8, !dbg !6518
  %50 = getelementptr inbounds i8* %48, i64 %49, !dbg !6518
  %51 = load %4** %stream_addr, align 8, !dbg !6518
  %52 = getelementptr inbounds %4* %51, i32 0, i32 5, !dbg !6518
  store i8* %50, i8** %52, align 8, !dbg !6518
  %53 = load %4** %stream_addr, align 8, !dbg !6519
  %54 = getelementptr inbounds %4* %53, i32 0, i32 0, !dbg !6519
  %55 = load i16* %54, align 8, !dbg !6519
  %56 = zext i16 %55 to i32, !dbg !6519
  %57 = and i32 %56, 256, !dbg !6519
  %58 = icmp ne i32 %57, 0, !dbg !6519
  br i1 %58, label %bb6, label %bb12, !dbg !6519

bb6:                                              ; preds = %bb5
  %59 = load i8** %buffer_addr, align 8, !dbg !6519
  %60 = load i64* %bytes_addr, align 8, !dbg !6519
  %61 = call i8* @memrchr(i8* %59, i32 10, i64 %60) nounwind readonly, !dbg !6519
  %62 = icmp ne i8* %61, null, !dbg !6519
  br i1 %62, label %bb7, label %bb12, !dbg !6519

bb7:                                              ; preds = %bb6
  %63 = load %4** %stream_addr, align 8, !dbg !6520
  %64 = call i64 @__stdio_wcommit(%4* noalias %63) nounwind, !dbg !6520
  store i64 %64, i64* %pending, align 8, !dbg !6520
  %65 = load i64* %pending, align 8, !dbg !6520
  %66 = icmp ne i64 %65, 0, !dbg !6520
  br i1 %66, label %bb8, label %bb12, !dbg !6520

bb8:                                              ; preds = %bb7
  %67 = load i64* %pending, align 8, !dbg !6521
  %68 = load i64* %bytes_addr, align 8, !dbg !6521
  %69 = icmp ugt i64 %67, %68, !dbg !6521
  br i1 %69, label %bb9, label %bb10, !dbg !6521

bb9:                                              ; preds = %bb8
  %70 = load i64* %bytes_addr, align 8, !dbg !6522
  store i64 %70, i64* %pending, align 8, !dbg !6522
  br label %bb10, !dbg !6522

bb10:                                             ; preds = %bb9, %bb8
  %71 = load i64* %bytes_addr, align 8, !dbg !6523
  %72 = load i64* %pending, align 8, !dbg !6523
  %73 = sub i64 %71, %72, !dbg !6523
  %74 = load i8** %buffer_addr, align 8, !dbg !6523
  %75 = getelementptr inbounds i8* %74, i64 %73, !dbg !6523
  store i8* %75, i8** %buffer_addr, align 8, !dbg !6523
  %76 = load i8** %buffer_addr, align 8, !dbg !6524
  %77 = load i64* %pending, align 8, !dbg !6524
  %78 = call i8* @memchr(i8* %76, i32 10, i64 %77) nounwind readonly, !dbg !6524
  store i8* %78, i8** %p, align 8, !dbg !6524
  %79 = load i8** %p, align 8, !dbg !6524
  %80 = icmp ne i8* %79, null, !dbg !6524
  br i1 %80, label %bb11, label %bb12, !dbg !6524

bb11:                                             ; preds = %bb10
  %81 = load i8** %buffer_addr, align 8, !dbg !6525
  %82 = load i64* %pending, align 8, !dbg !6525
  %83 = getelementptr inbounds i8* %81, i64 %82, !dbg !6525
  %84 = ptrtoint i8* %83 to i64, !dbg !6525
  %85 = load i8** %p, align 8, !dbg !6525
  %86 = ptrtoint i8* %85 to i64, !dbg !6525
  %87 = sub nsw i64 %84, %86, !dbg !6525
  store i64 %87, i64* %pending, align 8, !dbg !6525
  %88 = load i64* %bytes_addr, align 8, !dbg !6526
  %89 = load i64* %pending, align 8, !dbg !6526
  %90 = sub i64 %88, %89, !dbg !6526
  store i64 %90, i64* %bytes_addr, align 8, !dbg !6526
  %91 = load %4** %stream_addr, align 8, !dbg !6527
  %92 = getelementptr inbounds %4* %91, i32 0, i32 5, !dbg !6527
  %93 = load i8** %92, align 8, !dbg !6527
  %94 = load i64* %pending, align 8, !dbg !6527
  %95 = sub nsw i64 0, %94, !dbg !6527
  %96 = getelementptr inbounds i8* %93, i64 %95, !dbg !6527
  %97 = load %4** %stream_addr, align 8, !dbg !6527
  %98 = getelementptr inbounds %4* %97, i32 0, i32 5, !dbg !6527
  store i8* %96, i8** %98, align 8, !dbg !6527
  br label %bb12, !dbg !6527

bb12:                                             ; preds = %bb11, %bb10, %bb7, %bb6, %bb5
  %99 = load i64* %bytes_addr, align 8, !dbg !6528
  store i64 %99, i64* %0, align 8, !dbg !6528
  br label %bb17, !dbg !6528

bb13:                                             ; preds = %bb4
  %100 = load %4** %stream_addr, align 8, !dbg !6529
  %101 = getelementptr inbounds %4* %100, i32 0, i32 3, !dbg !6529
  %102 = load i8** %101, align 8, !dbg !6529
  %103 = icmp ne i8* %42, %102, !dbg !6529
  br i1 %103, label %bb14, label %bb16, !dbg !6529

bb14:                                             ; preds = %bb13
  %104 = load %4** %stream_addr, align 8, !dbg !6530
  %105 = call i64 @__stdio_wcommit(%4* noalias %104) nounwind, !dbg !6530
  %106 = icmp ne i64 %105, 0, !dbg !6530
  br i1 %106, label %bb15, label %bb16, !dbg !6530

bb15:                                             ; preds = %bb14
  store i64 0, i64* %0, align 8, !dbg !6531
  br label %bb17, !dbg !6531

bb16:                                             ; preds = %bb14, %bb13, %entry
  %107 = load %4** %stream_addr, align 8, !dbg !6532
  %108 = load i8** %buffer_addr, align 8, !dbg !6532
  %109 = load i64* %bytes_addr, align 8, !dbg !6532
  %110 = call i64 @__stdio_WRITE(%4* %107, i8* %108, i64 %109) nounwind, !dbg !6532
  store i64 %110, i64* %0, align 8, !dbg !6532
  br label %bb17, !dbg !6532

bb17:                                             ; preds = %bb16, %bb15, %bb12, %bb3
  %111 = load i64* %0, align 8, !dbg !6515
  store i64 %111, i64* %retval, align 8, !dbg !6515
  %retval18 = load i64* %retval, !dbg !6515
  ret i64 %retval18, !dbg !6515
}

define hidden i64 @__stdio_rfill(%4* noalias %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %rv = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6533
  %2 = getelementptr inbounds %4* %1, i32 0, i32 4, !dbg !6533
  %3 = load i8** %2, align 8, !dbg !6533
  %4 = ptrtoint i8* %3 to i64, !dbg !6533
  %5 = load %4** %stream_addr, align 8, !dbg !6533
  %6 = getelementptr inbounds %4* %5, i32 0, i32 3, !dbg !6533
  %7 = load i8** %6, align 8, !dbg !6533
  %8 = ptrtoint i8* %7 to i64, !dbg !6533
  %9 = sub nsw i64 %4, %8, !dbg !6533
  %10 = load %4** %stream_addr, align 8, !dbg !6533
  %11 = getelementptr inbounds %4* %10, i32 0, i32 3, !dbg !6533
  %12 = load i8** %11, align 8, !dbg !6533
  %13 = load %4** %stream_addr, align 8, !dbg !6533
  %14 = call i64 @__stdio_READ(%4* %13, i8* %12, i64 %9) nounwind, !dbg !6533
  store i64 %14, i64* %rv, align 8, !dbg !6533
  %15 = load %4** %stream_addr, align 8, !dbg !6535
  %16 = getelementptr inbounds %4* %15, i32 0, i32 3, !dbg !6535
  %17 = load i8** %16, align 8, !dbg !6535
  %18 = load %4** %stream_addr, align 8, !dbg !6535
  %19 = getelementptr inbounds %4* %18, i32 0, i32 5, !dbg !6535
  store i8* %17, i8** %19, align 8, !dbg !6535
  %20 = load %4** %stream_addr, align 8, !dbg !6536
  %21 = getelementptr inbounds %4* %20, i32 0, i32 3, !dbg !6536
  %22 = load i8** %21, align 8, !dbg !6536
  %23 = load i64* %rv, align 8, !dbg !6536
  %24 = getelementptr inbounds i8* %22, i64 %23, !dbg !6536
  %25 = load %4** %stream_addr, align 8, !dbg !6536
  %26 = getelementptr inbounds %4* %25, i32 0, i32 6, !dbg !6536
  store i8* %24, i8** %26, align 8, !dbg !6536
  %27 = load i64* %rv, align 8, !dbg !6537
  store i64 %27, i64* %0, align 8, !dbg !6537
  %28 = load i64* %0, align 8, !dbg !6537
  store i64 %28, i64* %retval, align 8, !dbg !6537
  %retval1 = load i64* %retval, !dbg !6537
  ret i64 %retval1, !dbg !6537
}

define hidden i32 @__stdio_trans2r_o(%4* noalias %stream, i32 %oflag) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %oflag_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 %oflag, i32* %oflag_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6538
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6538
  %3 = load i16* %2, align 8, !dbg !6538
  %4 = zext i16 %3 to i32, !dbg !6538
  %5 = load i32* %oflag_addr, align 4, !dbg !6538
  %6 = and i32 %4, %5, !dbg !6538
  %7 = icmp eq i32 %6, 0, !dbg !6538
  br i1 %7, label %bb, label %bb2, !dbg !6538

bb:                                               ; preds = %entry
  %8 = load %4** %stream_addr, align 8, !dbg !6540
  %9 = getelementptr inbounds %4* %8, i32 0, i32 0, !dbg !6540
  %10 = load i16* %9, align 8, !dbg !6540
  %11 = zext i16 %10 to i32, !dbg !6540
  %12 = and i32 %11, 2176, !dbg !6540
  %13 = icmp ne i32 %12, 0, !dbg !6540
  br i1 %13, label %DO_EBADF, label %bb1, !dbg !6540

bb1:                                              ; preds = %bb
  %14 = load %4** %stream_addr, align 8, !dbg !6541
  %15 = getelementptr inbounds %4* %14, i32 0, i32 0, !dbg !6541
  %16 = load i16* %15, align 8, !dbg !6541
  %17 = load i32* %oflag_addr, align 4, !dbg !6541
  %18 = trunc i32 %17 to i16, !dbg !6541
  %19 = or i16 %16, %18, !dbg !6541
  %20 = load %4** %stream_addr, align 8, !dbg !6541
  %21 = getelementptr inbounds %4* %20, i32 0, i32 0, !dbg !6541
  store i16 %19, i16* %21, align 8, !dbg !6541
  br label %bb2, !dbg !6541

bb2:                                              ; preds = %bb1, %entry
  %22 = load %4** %stream_addr, align 8, !dbg !6542
  %23 = getelementptr inbounds %4* %22, i32 0, i32 0, !dbg !6542
  %24 = load i16* %23, align 8, !dbg !6542
  %25 = zext i16 %24 to i32, !dbg !6542
  %26 = and i32 %25, 16, !dbg !6542
  %27 = icmp ne i32 %26, 0, !dbg !6542
  br i1 %27, label %DO_EBADF, label %bb3, !dbg !6542

DO_EBADF:                                         ; preds = %bb2, %bb
  store i32 9, i32* @errno, align 4, !dbg !6543
  br label %ERROR, !dbg !6544

ERROR:                                            ; preds = %bb4, %DO_EBADF
  %28 = load %4** %stream_addr, align 8, !dbg !6545
  %29 = getelementptr inbounds %4* %28, i32 0, i32 0, !dbg !6545
  %30 = load i16* %29, align 8, !dbg !6545
  %31 = or i16 %30, 8, !dbg !6545
  %32 = load %4** %stream_addr, align 8, !dbg !6545
  %33 = getelementptr inbounds %4* %32, i32 0, i32 0, !dbg !6545
  store i16 %31, i16* %33, align 8, !dbg !6545
  store i32 -1, i32* %0, align 4, !dbg !6546
  br label %bb7, !dbg !6546

bb3:                                              ; preds = %bb2
  %34 = load %4** %stream_addr, align 8, !dbg !6547
  %35 = getelementptr inbounds %4* %34, i32 0, i32 0, !dbg !6547
  %36 = load i16* %35, align 8, !dbg !6547
  %37 = zext i16 %36 to i32, !dbg !6547
  %38 = and i32 %37, 64, !dbg !6547
  %39 = icmp ne i32 %38, 0, !dbg !6547
  br i1 %39, label %bb4, label %bb6, !dbg !6547

bb4:                                              ; preds = %bb3
  %40 = load %4** %stream_addr, align 8, !dbg !6548
  %41 = call i64 @__stdio_wcommit(%4* noalias %40) nounwind, !dbg !6548
  %42 = icmp ne i64 %41, 0, !dbg !6548
  br i1 %42, label %ERROR, label %bb5, !dbg !6548

bb5:                                              ; preds = %bb4
  %43 = load %4** %stream_addr, align 8, !dbg !6549
  %44 = getelementptr inbounds %4* %43, i32 0, i32 3, !dbg !6549
  %45 = load i8** %44, align 8, !dbg !6549
  %46 = load %4** %stream_addr, align 8, !dbg !6549
  %47 = getelementptr inbounds %4* %46, i32 0, i32 8, !dbg !6549
  store i8* %45, i8** %47, align 8, !dbg !6549
  %48 = load %4** %stream_addr, align 8, !dbg !6550
  %49 = getelementptr inbounds %4* %48, i32 0, i32 0, !dbg !6550
  %50 = load i16* %49, align 8, !dbg !6550
  %51 = and i16 %50, -65, !dbg !6550
  %52 = load %4** %stream_addr, align 8, !dbg !6550
  %53 = getelementptr inbounds %4* %52, i32 0, i32 0, !dbg !6550
  store i16 %51, i16* %53, align 8, !dbg !6550
  br label %bb6, !dbg !6550

bb6:                                              ; preds = %bb5, %bb3
  %54 = load %4** %stream_addr, align 8, !dbg !6551
  %55 = getelementptr inbounds %4* %54, i32 0, i32 0, !dbg !6551
  %56 = load i16* %55, align 8, !dbg !6551
  %57 = or i16 %56, 1, !dbg !6551
  %58 = load %4** %stream_addr, align 8, !dbg !6551
  %59 = getelementptr inbounds %4* %58, i32 0, i32 0, !dbg !6551
  store i16 %57, i16* %59, align 8, !dbg !6551
  store i32 0, i32* %0, align 4, !dbg !6552
  br label %bb7, !dbg !6552

bb7:                                              ; preds = %bb6, %ERROR
  %60 = load i32* %0, align 4, !dbg !6546
  store i32 %60, i32* %retval, align 4, !dbg !6546
  %retval8 = load i32* %retval, !dbg !6546
  ret i32 %retval8, !dbg !6546
}

define hidden i32 @__stdio_trans2w_o(%4* noalias %stream, i32 %oflag) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %oflag_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 %oflag, i32* %oflag_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6553
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6553
  %3 = load i16* %2, align 8, !dbg !6553
  %4 = zext i16 %3 to i32, !dbg !6553
  %5 = load i32* %oflag_addr, align 4, !dbg !6553
  %6 = and i32 %4, %5, !dbg !6553
  %7 = icmp eq i32 %6, 0, !dbg !6553
  br i1 %7, label %bb, label %bb2, !dbg !6553

bb:                                               ; preds = %entry
  %8 = load %4** %stream_addr, align 8, !dbg !6555
  %9 = getelementptr inbounds %4* %8, i32 0, i32 0, !dbg !6555
  %10 = load i16* %9, align 8, !dbg !6555
  %11 = zext i16 %10 to i32, !dbg !6555
  %12 = and i32 %11, 2176, !dbg !6555
  %13 = icmp ne i32 %12, 0, !dbg !6555
  br i1 %13, label %DO_EBADF, label %bb1, !dbg !6555

bb1:                                              ; preds = %bb
  %14 = load %4** %stream_addr, align 8, !dbg !6556
  %15 = getelementptr inbounds %4* %14, i32 0, i32 0, !dbg !6556
  %16 = load i16* %15, align 8, !dbg !6556
  %17 = load i32* %oflag_addr, align 4, !dbg !6556
  %18 = trunc i32 %17 to i16, !dbg !6556
  %19 = or i16 %16, %18, !dbg !6556
  %20 = load %4** %stream_addr, align 8, !dbg !6556
  %21 = getelementptr inbounds %4* %20, i32 0, i32 0, !dbg !6556
  store i16 %19, i16* %21, align 8, !dbg !6556
  br label %bb2, !dbg !6556

bb2:                                              ; preds = %bb1, %entry
  %22 = load %4** %stream_addr, align 8, !dbg !6557
  %23 = getelementptr inbounds %4* %22, i32 0, i32 0, !dbg !6557
  %24 = load i16* %23, align 8, !dbg !6557
  %25 = zext i16 %24 to i32, !dbg !6557
  %26 = and i32 %25, 32, !dbg !6557
  %27 = icmp ne i32 %26, 0, !dbg !6557
  br i1 %27, label %DO_EBADF, label %bb3, !dbg !6557

DO_EBADF:                                         ; preds = %bb2, %bb
  store i32 9, i32* @errno, align 4, !dbg !6558
  br label %ERROR, !dbg !6559

ERROR:                                            ; preds = %bb10, %DO_EBADF
  %28 = load %4** %stream_addr, align 8, !dbg !6560
  %29 = getelementptr inbounds %4* %28, i32 0, i32 0, !dbg !6560
  %30 = load i16* %29, align 8, !dbg !6560
  %31 = or i16 %30, 8, !dbg !6560
  %32 = load %4** %stream_addr, align 8, !dbg !6560
  %33 = getelementptr inbounds %4* %32, i32 0, i32 0, !dbg !6560
  store i16 %31, i16* %33, align 8, !dbg !6560
  store i32 -1, i32* %0, align 4, !dbg !6561
  br label %bb15, !dbg !6561

bb3:                                              ; preds = %bb2
  %34 = load %4** %stream_addr, align 8, !dbg !6562
  %35 = getelementptr inbounds %4* %34, i32 0, i32 0, !dbg !6562
  %36 = load i16* %35, align 8, !dbg !6562
  %37 = zext i16 %36 to i32, !dbg !6562
  %38 = and i32 %37, 3, !dbg !6562
  %39 = icmp ne i32 %38, 0, !dbg !6562
  br i1 %39, label %bb4, label %bb12, !dbg !6562

bb4:                                              ; preds = %bb3
  %40 = load %4** %stream_addr, align 8, !dbg !6563
  %41 = getelementptr inbounds %4* %40, i32 0, i32 0, !dbg !6563
  %42 = load i16* %41, align 8, !dbg !6563
  %43 = zext i16 %42 to i32, !dbg !6563
  %44 = and i32 %43, 4, !dbg !6563
  %45 = icmp eq i32 %44, 0, !dbg !6563
  br i1 %45, label %bb5, label %bb11, !dbg !6563

bb5:                                              ; preds = %bb4
  %46 = load %4** %stream_addr, align 8, !dbg !6564
  %47 = getelementptr inbounds %4* %46, i32 0, i32 6, !dbg !6564
  %48 = load i8** %47, align 8, !dbg !6564
  %49 = load %4** %stream_addr, align 8, !dbg !6564
  %50 = getelementptr inbounds %4* %49, i32 0, i32 5, !dbg !6564
  %51 = load i8** %50, align 8, !dbg !6564
  %52 = icmp ne i8* %48, %51, !dbg !6564
  br i1 %52, label %bb7, label %bb6, !dbg !6564

bb6:                                              ; preds = %bb5
  %53 = load %4** %stream_addr, align 8, !dbg !6564
  %54 = getelementptr inbounds %4* %53, i32 0, i32 0, !dbg !6564
  %55 = load i16* %54, align 8, !dbg !6564
  %56 = zext i16 %55 to i32, !dbg !6564
  %57 = and i32 %56, 2, !dbg !6564
  %58 = icmp ne i32 %57, 0, !dbg !6564
  br i1 %58, label %bb7, label %bb11, !dbg !6564

bb7:                                              ; preds = %bb6, %bb5
  %59 = load %4** %stream_addr, align 8, !dbg !6564
  %60 = getelementptr inbounds %4* %59, i32 0, i32 0, !dbg !6564
  %61 = load i16* %60, align 8, !dbg !6564
  %62 = zext i16 %61 to i32, !dbg !6564
  %63 = and i32 %62, 1024, !dbg !6564
  %64 = icmp ne i32 %63, 0, !dbg !6564
  br i1 %64, label %bb8, label %bb9, !dbg !6564

bb8:                                              ; preds = %bb7
  store i32 2, i32* %iftmp.0, align 4, !dbg !6564
  br label %bb10, !dbg !6564

bb9:                                              ; preds = %bb7
  store i32 1, i32* %iftmp.0, align 4, !dbg !6564
  br label %bb10, !dbg !6564

bb10:                                             ; preds = %bb9, %bb8
  %65 = load %4** %stream_addr, align 8, !dbg !6564
  %66 = load i32* %iftmp.0, align 4, !dbg !6564
  %67 = call i32 @fseek(%4* %65, i64 0, i32 %66) nounwind, !dbg !6564
  %68 = icmp ne i32 %67, 0, !dbg !6564
  br i1 %68, label %ERROR, label %bb11, !dbg !6564

bb11:                                             ; preds = %bb10, %bb6, %bb4
  %69 = load %4** %stream_addr, align 8, !dbg !6565
  %70 = getelementptr inbounds %4* %69, i32 0, i32 0, !dbg !6565
  %71 = load i16* %70, align 8, !dbg !6565
  %72 = and i16 %71, -4, !dbg !6565
  %73 = load %4** %stream_addr, align 8, !dbg !6565
  %74 = getelementptr inbounds %4* %73, i32 0, i32 0, !dbg !6565
  store i16 %72, i16* %74, align 8, !dbg !6565
  %75 = load %4** %stream_addr, align 8, !dbg !6566
  %76 = getelementptr inbounds %4* %75, i32 0, i32 3, !dbg !6566
  %77 = load i8** %76, align 8, !dbg !6566
  %78 = load %4** %stream_addr, align 8, !dbg !6566
  %79 = getelementptr inbounds %4* %78, i32 0, i32 7, !dbg !6566
  store i8* %77, i8** %79, align 8, !dbg !6566
  %80 = load %4** %stream_addr, align 8, !dbg !6567
  %81 = getelementptr inbounds %4* %80, i32 0, i32 3, !dbg !6567
  %82 = load i8** %81, align 8, !dbg !6567
  %83 = load %4** %stream_addr, align 8, !dbg !6567
  %84 = getelementptr inbounds %4* %83, i32 0, i32 5, !dbg !6567
  store i8* %82, i8** %84, align 8, !dbg !6567
  %85 = load %4** %stream_addr, align 8, !dbg !6567
  %86 = getelementptr inbounds %4* %85, i32 0, i32 5, !dbg !6567
  %87 = load i8** %86, align 8, !dbg !6567
  %88 = load %4** %stream_addr, align 8, !dbg !6567
  %89 = getelementptr inbounds %4* %88, i32 0, i32 6, !dbg !6567
  store i8* %87, i8** %89, align 8, !dbg !6567
  br label %bb12, !dbg !6567

bb12:                                             ; preds = %bb11, %bb3
  %90 = load %4** %stream_addr, align 8, !dbg !6568
  %91 = getelementptr inbounds %4* %90, i32 0, i32 0, !dbg !6568
  %92 = load i16* %91, align 8, !dbg !6568
  %93 = or i16 %92, 64, !dbg !6568
  %94 = load %4** %stream_addr, align 8, !dbg !6568
  %95 = getelementptr inbounds %4* %94, i32 0, i32 0, !dbg !6568
  store i16 %93, i16* %95, align 8, !dbg !6568
  %96 = load %4** %stream_addr, align 8, !dbg !6569
  %97 = getelementptr inbounds %4* %96, i32 0, i32 0, !dbg !6569
  %98 = load i16* %97, align 8, !dbg !6569
  %99 = zext i16 %98 to i32, !dbg !6569
  %100 = and i32 %99, 2816, !dbg !6569
  %101 = icmp eq i32 %100, 0, !dbg !6569
  br i1 %101, label %bb13, label %bb14, !dbg !6569

bb13:                                             ; preds = %bb12
  %102 = load %4** %stream_addr, align 8, !dbg !6570
  %103 = getelementptr inbounds %4* %102, i32 0, i32 4, !dbg !6570
  %104 = load i8** %103, align 8, !dbg !6570
  %105 = load %4** %stream_addr, align 8, !dbg !6570
  %106 = getelementptr inbounds %4* %105, i32 0, i32 8, !dbg !6570
  store i8* %104, i8** %106, align 8, !dbg !6570
  br label %bb14, !dbg !6570

bb14:                                             ; preds = %bb13, %bb12
  store i32 0, i32* %0, align 4, !dbg !6571
  br label %bb15, !dbg !6571

bb15:                                             ; preds = %bb14, %ERROR
  %107 = load i32* %0, align 4, !dbg !6561
  store i32 %107, i32* %retval, align 4, !dbg !6561
  %retval16 = load i32* %retval, !dbg !6561
  ret i32 %retval16, !dbg !6561
}

define hidden i64 @__stdio_wcommit(%4* noalias %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %bufsize = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6572
  %2 = getelementptr inbounds %4* %1, i32 0, i32 5, !dbg !6572
  %3 = load i8** %2, align 8, !dbg !6572
  %4 = ptrtoint i8* %3 to i64, !dbg !6572
  %5 = load %4** %stream_addr, align 8, !dbg !6572
  %6 = getelementptr inbounds %4* %5, i32 0, i32 3, !dbg !6572
  %7 = load i8** %6, align 8, !dbg !6572
  %8 = ptrtoint i8* %7 to i64, !dbg !6572
  %9 = sub nsw i64 %4, %8, !dbg !6572
  store i64 %9, i64* %bufsize, align 8, !dbg !6572
  %10 = load i64* %bufsize, align 8, !dbg !6572
  %11 = icmp ne i64 %10, 0, !dbg !6572
  br i1 %11, label %bb, label %bb1, !dbg !6572

bb:                                               ; preds = %entry
  %12 = load %4** %stream_addr, align 8, !dbg !6574
  %13 = getelementptr inbounds %4* %12, i32 0, i32 3, !dbg !6574
  %14 = load i8** %13, align 8, !dbg !6574
  %15 = load %4** %stream_addr, align 8, !dbg !6574
  %16 = getelementptr inbounds %4* %15, i32 0, i32 5, !dbg !6574
  store i8* %14, i8** %16, align 8, !dbg !6574
  %17 = load %4** %stream_addr, align 8, !dbg !6575
  %18 = getelementptr inbounds %4* %17, i32 0, i32 3, !dbg !6575
  %19 = load i8** %18, align 8, !dbg !6575
  %20 = load %4** %stream_addr, align 8, !dbg !6575
  %21 = load i64* %bufsize, align 8, !dbg !6575
  %22 = call i64 @__stdio_WRITE(%4* %20, i8* %19, i64 %21) nounwind, !dbg !6575
  br label %bb1, !dbg !6575

bb1:                                              ; preds = %bb, %entry
  %23 = load %4** %stream_addr, align 8, !dbg !6576
  %24 = getelementptr inbounds %4* %23, i32 0, i32 5, !dbg !6576
  %25 = load i8** %24, align 8, !dbg !6576
  %26 = ptrtoint i8* %25 to i64, !dbg !6576
  %27 = load %4** %stream_addr, align 8, !dbg !6576
  %28 = getelementptr inbounds %4* %27, i32 0, i32 3, !dbg !6576
  %29 = load i8** %28, align 8, !dbg !6576
  %30 = ptrtoint i8* %29 to i64, !dbg !6576
  %31 = sub nsw i64 %26, %30, !dbg !6576
  store i64 %31, i64* %0, align 8, !dbg !6576
  %32 = load i64* %0, align 8, !dbg !6576
  store i64 %32, i64* %retval, align 8, !dbg !6576
  %retval2 = load i64* %retval, !dbg !6576
  ret i64 %retval2, !dbg !6576
}

define hidden %4* @_stdio_fopen(i64 %fname_or_mode, i8* noalias %mode, %4* noalias %stream, i32 %filedes) nounwind {
entry:
  %fname_or_mode_addr = alloca i64, align 8
  %mode_addr = alloca i8*, align 8
  %stream_addr = alloca %4*, align 8
  %filedes_addr = alloca i32, align 4
  %retval = alloca %4*
  %0 = alloca %4*
  %open_mode = alloca i32
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i64 %fname_or_mode, i64* %fname_or_mode_addr
  store i8* %mode, i8** %mode_addr
  store %4* %stream, %4** %stream_addr
  store i32 %filedes, i32* %filedes_addr
  store i32 0, i32* %open_mode, align 4, !dbg !6577
  %1 = load i8** %mode_addr, align 8, !dbg !6579
  %2 = load i8* %1, align 1, !dbg !6579
  %3 = icmp ne i8 %2, 114, !dbg !6579
  br i1 %3, label %bb, label %bb4, !dbg !6579

bb:                                               ; preds = %entry
  store i32 577, i32* %open_mode, align 4, !dbg !6580
  %4 = load i8** %mode_addr, align 8, !dbg !6581
  %5 = load i8* %4, align 1, !dbg !6581
  %6 = icmp ne i8 %5, 119, !dbg !6581
  br i1 %6, label %bb1, label %bb4, !dbg !6581

bb1:                                              ; preds = %bb
  store i32 1089, i32* %open_mode, align 4, !dbg !6582
  %7 = load i8** %mode_addr, align 8, !dbg !6583
  %8 = load i8* %7, align 1, !dbg !6583
  %9 = icmp ne i8 %8, 97, !dbg !6583
  br i1 %9, label %DO_EINVAL, label %bb4, !dbg !6583

DO_EINVAL:                                        ; preds = %bb16, %bb13, %bb1
  store i32 22, i32* @errno, align 4, !dbg !6584
  %10 = load %4** %stream_addr, align 8, !dbg !6585
  %11 = icmp ne %4* %10, null, !dbg !6585
  br i1 %11, label %FREE_STREAM, label %bb3, !dbg !6585

FREE_STREAM:                                      ; preds = %bb20, %DO_EINVAL
  %12 = load %4** %stream_addr, align 8, !dbg !6586
  %13 = getelementptr inbounds %4* %12, i32 0, i32 0, !dbg !6586
  %14 = load i16* %13, align 8, !dbg !6586
  %15 = zext i16 %14 to i32, !dbg !6586
  %16 = and i32 %15, 8192, !dbg !6586
  %17 = icmp ne i32 %16, 0, !dbg !6586
  br i1 %17, label %bb2, label %bb3, !dbg !6586

bb2:                                              ; preds = %FREE_STREAM
  %18 = load %4** %stream_addr, align 8, !dbg !6586
  %19 = bitcast %4* %18 to i8*, !dbg !6586
  call void @free(i8* %19) nounwind, !dbg !6586
  br label %bb3, !dbg !6586

bb3:                                              ; preds = %bb2, %FREE_STREAM, %DO_EINVAL
  store %4* null, %4** %0, align 8, !dbg !6587
  br label %bb26, !dbg !6587

bb4:                                              ; preds = %bb1, %bb, %entry
  %20 = load i8** %mode_addr, align 8, !dbg !6588
  %21 = getelementptr inbounds i8* %20, i64 1, !dbg !6588
  %22 = load i8* %21, align 1, !dbg !6588
  %23 = icmp eq i8 %22, 98, !dbg !6588
  br i1 %23, label %bb5, label %bb6, !dbg !6588

bb5:                                              ; preds = %bb4
  %24 = load i8** %mode_addr, align 8, !dbg !6589
  %25 = getelementptr inbounds i8* %24, i64 1, !dbg !6589
  store i8* %25, i8** %mode_addr, align 8, !dbg !6589
  br label %bb6, !dbg !6589

bb6:                                              ; preds = %bb5, %bb4
  %26 = load i8** %mode_addr, align 8, !dbg !6590
  %27 = getelementptr inbounds i8* %26, i64 1, !dbg !6590
  %28 = load i8* %27, align 1, !dbg !6590
  %29 = icmp eq i8 %28, 43, !dbg !6590
  br i1 %29, label %bb7, label %bb8, !dbg !6590

bb7:                                              ; preds = %bb6
  %30 = load i8** %mode_addr, align 8, !dbg !6591
  %31 = getelementptr inbounds i8* %30, i64 1, !dbg !6591
  store i8* %31, i8** %mode_addr, align 8, !dbg !6591
  %32 = load i32* %open_mode, align 4, !dbg !6592
  %33 = or i32 %32, 1, !dbg !6592
  store i32 %33, i32* %open_mode, align 4, !dbg !6592
  %34 = load i32* %open_mode, align 4, !dbg !6593
  %35 = add i32 %34, 1, !dbg !6593
  store i32 %35, i32* %open_mode, align 4, !dbg !6593
  br label %bb8, !dbg !6593

bb8:                                              ; preds = %bb7, %bb6
  %36 = load %4** %stream_addr, align 8, !dbg !6594
  %37 = icmp eq %4* %36, null, !dbg !6594
  br i1 %37, label %bb9, label %bb12, !dbg !6594

bb9:                                              ; preds = %bb8
  %38 = call noalias i8* @malloc(i64 80) nounwind, !dbg !6595
  %39 = bitcast i8* %38 to %4*, !dbg !6595
  store %4* %39, %4** %stream_addr, align 8, !dbg !6595
  %40 = load %4** %stream_addr, align 8, !dbg !6595
  %41 = icmp eq %4* %40, null, !dbg !6595
  %42 = load %4** %stream_addr, align 8, !dbg !6596
  br i1 %41, label %bb10, label %bb11, !dbg !6595

bb10:                                             ; preds = %bb9
  store %4* %42, %4** %0, align 8, !dbg !6596
  br label %bb26, !dbg !6596

bb11:                                             ; preds = %bb9
  %43 = getelementptr inbounds %4* %42, i32 0, i32 0, !dbg !6597
  store i16 8192, i16* %43, align 8, !dbg !6597
  %44 = load %4** %stream_addr, align 8, !dbg !6598
  %45 = getelementptr inbounds %4* %44, i32 0, i32 3, !dbg !6598
  store i8* null, i8** %45, align 8, !dbg !6598
  br label %bb12, !dbg !6598

bb12:                                             ; preds = %bb11, %bb8
  %46 = load i32* %filedes_addr, align 4, !dbg !6599
  %47 = icmp sge i32 %46, 0, !dbg !6599
  br i1 %47, label %bb13, label %bb18, !dbg !6599

bb13:                                             ; preds = %bb12
  %48 = load %4** %stream_addr, align 8, !dbg !6600
  %49 = getelementptr inbounds %4* %48, i32 0, i32 2, !dbg !6600
  %50 = load i32* %filedes_addr, align 4, !dbg !6600
  store i32 %50, i32* %49, align 4, !dbg !6600
  %51 = load i32* %open_mode, align 4, !dbg !6601
  %52 = and i32 %51, 3, !dbg !6601
  %53 = add i32 %52, 1, !dbg !6601
  store i32 %53, i32* %i, align 4, !dbg !6601
  %54 = load i64* %fname_or_mode_addr, align 8, !dbg !6602
  %55 = trunc i64 %54 to i32, !dbg !6602
  %56 = add nsw i32 %55, 1, !dbg !6602
  %57 = load i32* %i, align 4, !dbg !6602
  %58 = and i32 %56, %57, !dbg !6602
  %59 = load i32* %i, align 4, !dbg !6602
  %60 = icmp ne i32 %58, %59, !dbg !6602
  br i1 %60, label %DO_EINVAL, label %bb14, !dbg !6602

bb14:                                             ; preds = %bb13
  %61 = load i64* %fname_or_mode_addr, align 8, !dbg !6602
  %62 = trunc i64 %61 to i32, !dbg !6602
  %not = xor i32 %62, -1, !dbg !6602
  %63 = load i32* %open_mode, align 4, !dbg !6602
  %64 = and i32 %not, %63, !dbg !6602
  %65 = and i32 %64, 1024, !dbg !6602
  %66 = icmp eq i32 %65, 0, !dbg !6602
  br i1 %66, label %bb17, label %bb16, !dbg !6602

bb16:                                             ; preds = %bb14
  %67 = load i32* %filedes_addr, align 4, !dbg !6602
  %68 = call i32 (i32, i32, ...)* @fcntl(i32 %67, i32 4, i32 1024) nounwind, !dbg !6602
  %69 = icmp ne i32 %68, 0, !dbg !6602
  br i1 %69, label %DO_EINVAL, label %bb17, !dbg !6602

bb17:                                             ; preds = %bb16, %bb14
  %70 = load i32* %open_mode, align 4, !dbg !6603
  store i32 %70, i32* %open_mode, align 4, !dbg !6603
  br label %bb21, !dbg !6603

bb18:                                             ; preds = %bb12
  %71 = load i32* %filedes_addr, align 4, !dbg !6604
  %72 = icmp slt i32 %71, -1, !dbg !6604
  br i1 %72, label %bb19, label %bb20, !dbg !6604

bb19:                                             ; preds = %bb18
  %73 = load i32* %open_mode, align 4, !dbg !6604
  store i32 %73, i32* %open_mode, align 4, !dbg !6604
  br label %bb20, !dbg !6604

bb20:                                             ; preds = %bb19, %bb18
  %74 = load i32* %open_mode, align 4, !dbg !6605
  %75 = load i64* %fname_or_mode_addr, align 8, !dbg !6605
  %76 = inttoptr i64 %75 to i8*, !dbg !6605
  %77 = call i32 (i8*, i32, ...)* @open(i8* %76, i32 %74, i32 438) nounwind, !dbg !6605
  %78 = load %4** %stream_addr, align 8, !dbg !6605
  %79 = getelementptr inbounds %4* %78, i32 0, i32 2, !dbg !6605
  store i32 %77, i32* %79, align 4, !dbg !6605
  %80 = load %4** %stream_addr, align 8, !dbg !6605
  %81 = getelementptr inbounds %4* %80, i32 0, i32 2, !dbg !6605
  %82 = load i32* %81, align 4, !dbg !6605
  %83 = icmp slt i32 %82, 0, !dbg !6605
  br i1 %83, label %FREE_STREAM, label %bb21, !dbg !6605

bb21:                                             ; preds = %bb20, %bb17
  %84 = load %4** %stream_addr, align 8, !dbg !6606
  %85 = getelementptr inbounds %4* %84, i32 0, i32 0, !dbg !6606
  %86 = load i16* %85, align 8, !dbg !6606
  %87 = and i16 %86, 8192, !dbg !6606
  %88 = load %4** %stream_addr, align 8, !dbg !6606
  %89 = getelementptr inbounds %4* %88, i32 0, i32 0, !dbg !6606
  store i16 %87, i16* %89, align 8, !dbg !6606
  %90 = load %4** %stream_addr, align 8, !dbg !6607
  %91 = getelementptr inbounds %4* %90, i32 0, i32 0, !dbg !6607
  %92 = load i16* %91, align 8, !dbg !6607
  %93 = load i32* %open_mode, align 4, !dbg !6607
  %94 = trunc i32 %93 to i16, !dbg !6607
  %95 = and i16 %94, 1024, !dbg !6607
  %96 = load i32* %open_mode, align 4, !dbg !6607
  %97 = and i32 %96, 3, !dbg !6607
  %98 = add i32 %97, 1, !dbg !6607
  %99 = xor i32 %98, 3, !dbg !6607
  %100 = mul i32 %99, 16, !dbg !6607
  %101 = trunc i32 %100 to i16, !dbg !6607
  %102 = or i16 %95, %101, !dbg !6607
  %103 = or i16 %92, %102, !dbg !6607
  %104 = load %4** %stream_addr, align 8, !dbg !6607
  %105 = getelementptr inbounds %4* %104, i32 0, i32 0, !dbg !6607
  store i16 %103, i16* %105, align 8, !dbg !6607
  %106 = load i32* @errno, align 4, !dbg !6608
  store i32 %106, i32* %i, align 4, !dbg !6608
  %107 = load %4** %stream_addr, align 8, !dbg !6609
  %108 = getelementptr inbounds %4* %107, i32 0, i32 0, !dbg !6609
  %109 = load i16* %108, align 8, !dbg !6609
  %110 = load %4** %stream_addr, align 8, !dbg !6609
  %111 = getelementptr inbounds %4* %110, i32 0, i32 2, !dbg !6609
  %112 = load i32* %111, align 4, !dbg !6609
  %113 = call i32 @isatty(i32 %112) nounwind, !dbg !6609
  %114 = mul i32 %113, 256, !dbg !6609
  %115 = trunc i32 %114 to i16, !dbg !6609
  %116 = or i16 %109, %115, !dbg !6609
  %117 = load %4** %stream_addr, align 8, !dbg !6609
  %118 = getelementptr inbounds %4* %117, i32 0, i32 0, !dbg !6609
  store i16 %116, i16* %118, align 8, !dbg !6609
  %119 = load i32* %i, align 4, !dbg !6610
  store i32 %119, i32* @errno, align 4, !dbg !6610
  %120 = load %4** %stream_addr, align 8, !dbg !6611
  %121 = getelementptr inbounds %4* %120, i32 0, i32 3, !dbg !6611
  %122 = load i8** %121, align 8, !dbg !6611
  %123 = icmp eq i8* %122, null, !dbg !6611
  br i1 %123, label %bb22, label %bb25, !dbg !6611

bb22:                                             ; preds = %bb21
  %124 = call noalias i8* @malloc(i64 4096) nounwind, !dbg !6612
  %125 = load %4** %stream_addr, align 8, !dbg !6612
  %126 = getelementptr inbounds %4* %125, i32 0, i32 3, !dbg !6612
  store i8* %124, i8** %126, align 8, !dbg !6612
  %127 = load %4** %stream_addr, align 8, !dbg !6612
  %128 = getelementptr inbounds %4* %127, i32 0, i32 3, !dbg !6612
  %129 = load i8** %128, align 8, !dbg !6612
  %130 = icmp ne i8* %129, null, !dbg !6612
  %131 = load %4** %stream_addr, align 8, !dbg !6613
  %132 = getelementptr inbounds %4* %131, i32 0, i32 3, !dbg !6613
  %133 = load i8** %132, align 8, !dbg !6613
  br i1 %130, label %bb23, label %bb24, !dbg !6612

bb23:                                             ; preds = %bb22
  %134 = getelementptr inbounds i8* %133, i64 4096, !dbg !6613
  %135 = load %4** %stream_addr, align 8, !dbg !6613
  %136 = getelementptr inbounds %4* %135, i32 0, i32 4, !dbg !6613
  store i8* %134, i8** %136, align 8, !dbg !6613
  %137 = load %4** %stream_addr, align 8, !dbg !6614
  %138 = getelementptr inbounds %4* %137, i32 0, i32 0, !dbg !6614
  %139 = load i16* %138, align 8, !dbg !6614
  %140 = or i16 %139, 16384, !dbg !6614
  %141 = load %4** %stream_addr, align 8, !dbg !6614
  %142 = getelementptr inbounds %4* %141, i32 0, i32 0, !dbg !6614
  store i16 %140, i16* %142, align 8, !dbg !6614
  br label %bb25, !dbg !6614

bb24:                                             ; preds = %bb22
  %143 = load %4** %stream_addr, align 8, !dbg !6615
  %144 = getelementptr inbounds %4* %143, i32 0, i32 4, !dbg !6615
  store i8* %133, i8** %144, align 8, !dbg !6615
  br label %bb25, !dbg !6615

bb25:                                             ; preds = %bb24, %bb23, %bb21
  %145 = load %4** %stream_addr, align 8, !dbg !6616
  %146 = getelementptr inbounds %4* %145, i32 0, i32 3, !dbg !6616
  %147 = load i8** %146, align 8, !dbg !6616
  %148 = load %4** %stream_addr, align 8, !dbg !6616
  %149 = getelementptr inbounds %4* %148, i32 0, i32 7, !dbg !6616
  store i8* %147, i8** %149, align 8, !dbg !6616
  %150 = load %4** %stream_addr, align 8, !dbg !6617
  %151 = getelementptr inbounds %4* %150, i32 0, i32 3, !dbg !6617
  %152 = load i8** %151, align 8, !dbg !6617
  %153 = load %4** %stream_addr, align 8, !dbg !6617
  %154 = getelementptr inbounds %4* %153, i32 0, i32 8, !dbg !6617
  store i8* %152, i8** %154, align 8, !dbg !6617
  %155 = load %4** %stream_addr, align 8, !dbg !6618
  %156 = getelementptr inbounds %4* %155, i32 0, i32 3, !dbg !6618
  %157 = load i8** %156, align 8, !dbg !6618
  %158 = load %4** %stream_addr, align 8, !dbg !6618
  %159 = getelementptr inbounds %4* %158, i32 0, i32 5, !dbg !6618
  store i8* %157, i8** %159, align 8, !dbg !6618
  %160 = load %4** %stream_addr, align 8, !dbg !6618
  %161 = getelementptr inbounds %4* %160, i32 0, i32 5, !dbg !6618
  %162 = load i8** %161, align 8, !dbg !6618
  %163 = load %4** %stream_addr, align 8, !dbg !6618
  %164 = getelementptr inbounds %4* %163, i32 0, i32 6, !dbg !6618
  store i8* %162, i8** %164, align 8, !dbg !6618
  %165 = load %4** %stream_addr, align 8, !dbg !6619
  %166 = getelementptr inbounds %4* %165, i32 0, i32 1, !dbg !6619
  %167 = getelementptr inbounds [2 x i8]* %166, i64 0, i64 0, !dbg !6619
  store i8 0, i8* %167, align 1, !dbg !6619
  %168 = load %4** %stream_addr, align 8, !dbg !6620
  %169 = getelementptr inbounds %4* %168, i32 0, i32 11, !dbg !6620
  %170 = getelementptr inbounds %struct.__mbstate_t* %169, i32 0, i32 0, !dbg !6620
  store i32 0, i32* %170, align 8, !dbg !6620
  %171 = load %4** @_stdio_openlist, align 8, !dbg !6621
  %172 = load %4** %stream_addr, align 8, !dbg !6621
  %173 = getelementptr inbounds %4* %172, i32 0, i32 9, !dbg !6621
  store %4* %171, %4** %173, align 8, !dbg !6621
  %174 = load %4** %stream_addr, align 8, !dbg !6622
  store %4* %174, %4** @_stdio_openlist, align 8, !dbg !6622
  %175 = load %4** %stream_addr, align 8, !dbg !6623
  store %4* %175, %4** %0, align 8, !dbg !6623
  br label %bb26, !dbg !6623

bb26:                                             ; preds = %bb25, %bb10, %bb3
  %176 = load %4** %0, align 8, !dbg !6587
  store %4* %176, %4** %retval, align 8, !dbg !6587
  %retval27 = load %4** %retval, !dbg !6587
  ret %4* %retval27, !dbg !6587
}

define hidden i64 @_stdlib_strto_l(i8* noalias %str, i8** noalias %endptr, i32 %base, i32 %sflag) nounwind {
entry:
  %str_addr = alloca i8*, align 8
  %endptr_addr = alloca i8**, align 8
  %base_addr = alloca i32, align 4
  %sflag_addr = alloca i32, align 4
  %retval = alloca i64
  %iftmp.6 = alloca i64
  %0 = alloca i64
  %iftmp.5 = alloca i64
  %iftmp.2 = alloca i8
  %iftmp.1 = alloca i8
  %number = alloca i64
  %cutoff = alloca i64
  %fail_char = alloca i8*
  %negative = alloca i8
  %digit = alloca i8
  %cutoff_digit = alloca i8
  %tmp = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %str, i8** %str_addr
  store i8** %endptr, i8*** %endptr_addr
  store i32 %base, i32* %base_addr
  store i32 %sflag, i32* %sflag_addr
  %1 = load i8** %str_addr, align 8, !dbg !6624
  store i8* %1, i8** %fail_char, align 8, !dbg !6624
  br label %bb1, !dbg !6624

bb:                                               ; preds = %bb1
  %2 = load i8** %str_addr, align 8, !dbg !6626
  %3 = getelementptr inbounds i8* %2, i64 1, !dbg !6626
  store i8* %3, i8** %str_addr, align 8, !dbg !6626
  br label %bb1, !dbg !6626

bb1:                                              ; preds = %bb, %entry
  %4 = load i16** @__ctype_b, align 8, !dbg !6627
  %5 = load i8** %str_addr, align 8, !dbg !6627
  %6 = load i8* %5, align 1, !dbg !6627
  %7 = sext i8 %6 to i32, !dbg !6627
  %8 = sext i32 %7 to i64, !dbg !6627
  %9 = getelementptr inbounds i16* %4, i64 %8, !dbg !6627
  %10 = load i16* %9, align 1, !dbg !6627
  %11 = zext i16 %10 to i32, !dbg !6627
  %12 = and i32 %11, 8192, !dbg !6627
  %13 = icmp ne i32 %12, 0, !dbg !6627
  br i1 %13, label %bb, label %bb2, !dbg !6627

bb2:                                              ; preds = %bb1
  store i8 0, i8* %negative, align 1, !dbg !6628
  %14 = load i8** %str_addr, align 8, !dbg !6629
  %15 = load i8* %14, align 1, !dbg !6629
  %16 = sext i8 %15 to i32, !dbg !6629
  switch i32 %16, label %bb5 [
    i32 43, label %bb4
    i32 45, label %bb3
  ], !dbg !6629

bb3:                                              ; preds = %bb2
  store i8 1, i8* %negative, align 1, !dbg !6630
  br label %bb4, !dbg !6630

bb4:                                              ; preds = %bb3, %bb2
  %17 = load i8** %str_addr, align 8, !dbg !6631
  %18 = getelementptr inbounds i8* %17, i64 1, !dbg !6631
  store i8* %18, i8** %str_addr, align 8, !dbg !6631
  br label %bb5, !dbg !6631

bb5:                                              ; preds = %bb4, %bb2
  %19 = load i32* %base_addr, align 4, !dbg !6632
  %20 = and i32 %19, -17, !dbg !6632
  %21 = icmp eq i32 %20, 0, !dbg !6632
  br i1 %21, label %bb6, label %bb11, !dbg !6632

bb6:                                              ; preds = %bb5
  %22 = load i32* %base_addr, align 4, !dbg !6633
  %23 = add nsw i32 %22, 10, !dbg !6633
  store i32 %23, i32* %base_addr, align 4, !dbg !6633
  %24 = load i8** %str_addr, align 8, !dbg !6634
  %25 = load i8* %24, align 1, !dbg !6634
  %26 = icmp eq i8 %25, 48, !dbg !6634
  br i1 %26, label %bb7, label %bb9, !dbg !6634

bb7:                                              ; preds = %bb6
  %27 = load i8** %str_addr, align 8, !dbg !6635
  %28 = getelementptr inbounds i8* %27, i64 1, !dbg !6635
  store i8* %28, i8** %str_addr, align 8, !dbg !6635
  %29 = load i8** %str_addr, align 8, !dbg !6635
  store i8* %29, i8** %fail_char, align 8, !dbg !6635
  %30 = load i32* %base_addr, align 4, !dbg !6636
  %31 = sub nsw i32 %30, 2, !dbg !6636
  store i32 %31, i32* %base_addr, align 4, !dbg !6636
  %32 = load i8** %str_addr, align 8, !dbg !6637
  %33 = load i8* %32, align 1, !dbg !6637
  %34 = or i8 %33, 32, !dbg !6637
  %35 = icmp eq i8 %34, 120, !dbg !6637
  br i1 %35, label %bb8, label %bb9, !dbg !6637

bb8:                                              ; preds = %bb7
  %36 = load i8** %str_addr, align 8, !dbg !6638
  %37 = getelementptr inbounds i8* %36, i64 1, !dbg !6638
  store i8* %37, i8** %str_addr, align 8, !dbg !6638
  %38 = load i32* %base_addr, align 4, !dbg !6639
  %39 = load i32* %base_addr, align 4, !dbg !6639
  %40 = add nsw i32 %38, %39, !dbg !6639
  store i32 %40, i32* %base_addr, align 4, !dbg !6639
  br label %bb9, !dbg !6639

bb9:                                              ; preds = %bb8, %bb7, %bb6
  %41 = load i32* %base_addr, align 4, !dbg !6640
  %42 = icmp sgt i32 %41, 16, !dbg !6640
  br i1 %42, label %bb10, label %bb11, !dbg !6640

bb10:                                             ; preds = %bb9
  store i32 16, i32* %base_addr, align 4, !dbg !6641
  br label %bb11, !dbg !6641

bb11:                                             ; preds = %bb10, %bb9, %bb5
  store i64 0, i64* %number, align 8, !dbg !6642
  %43 = load i32* %base_addr, align 4, !dbg !6643
  %44 = sub nsw i32 %43, 2, !dbg !6643
  %45 = icmp ule i32 %44, 34, !dbg !6643
  br i1 %45, label %bb12, label %bb26, !dbg !6643

bb12:                                             ; preds = %bb11
  %46 = load i32* %base_addr, align 4, !dbg !6644
  %47 = sext i32 %46 to i64, !dbg !6644
  %int_cast_to_i64 = bitcast i64 %47 to i64
  %48 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %49 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %49, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb12
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb12
  call void @klee_disable_symbex() nounwind
  %50 = urem i64 -1, %47, !dbg !6644
  %51 = trunc i64 %50 to i8, !dbg !6644
  store i8 %51, i8* %cutoff_digit, align 1, !dbg !6644
  %52 = load i32* %base_addr, align 4, !dbg !6645
  %53 = sext i32 %52 to i64, !dbg !6645
  %int_cast_to_i641 = bitcast i64 %53 to i64
  %54 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %55 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %55, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %56 = udiv i64 -1, %53, !dbg !6645
  store i64 %56, i64* %cutoff, align 8, !dbg !6645
  br label %bb13, !dbg !6645

bb13:                                             ; preds = %bb23, %bb24, %klee_div_zero_check.exit3
  %57 = load i8** %str_addr, align 8, !dbg !6646
  %58 = load i8* %57, align 1, !dbg !6646
  %59 = sub i8 %58, 48, !dbg !6646
  %60 = icmp ule i8 %59, 9, !dbg !6646
  %61 = load i8** %str_addr, align 8, !dbg !6646
  %62 = load i8* %61, align 1, !dbg !6646
  br i1 %60, label %bb14, label %bb15, !dbg !6646

bb14:                                             ; preds = %bb13
  %63 = sub i8 %62, 48, !dbg !6646
  store i8 %63, i8* %iftmp.1, align 1, !dbg !6646
  br label %bb19, !dbg !6646

bb15:                                             ; preds = %bb13
  %64 = icmp sgt i8 %62, 64, !dbg !6646
  br i1 %64, label %bb16, label %bb17, !dbg !6646

bb16:                                             ; preds = %bb15
  %65 = load i8** %str_addr, align 8, !dbg !6646
  %66 = load i8* %65, align 1, !dbg !6646
  %67 = or i8 %66, 32, !dbg !6646
  %68 = sub i8 %67, 87, !dbg !6646
  store i8 %68, i8* %iftmp.2, align 1, !dbg !6646
  br label %bb18, !dbg !6646

bb17:                                             ; preds = %bb15
  store i8 40, i8* %iftmp.2, align 1, !dbg !6646
  br label %bb18, !dbg !6646

bb18:                                             ; preds = %bb17, %bb16
  %69 = load i8* %iftmp.2, align 1, !dbg !6646
  store i8 %69, i8* %iftmp.1, align 1, !dbg !6646
  br label %bb19, !dbg !6646

bb19:                                             ; preds = %bb18, %bb14
  %70 = load i8* %iftmp.1, align 1, !dbg !6646
  store i8 %70, i8* %digit, align 1, !dbg !6646
  %71 = load i8* %digit, align 1, !dbg !6647
  %72 = zext i8 %71 to i32, !dbg !6647
  %73 = load i32* %base_addr, align 4, !dbg !6647
  %74 = icmp sge i32 %72, %73, !dbg !6647
  br i1 %74, label %bb26, label %bb20, !dbg !6647

bb20:                                             ; preds = %bb19
  %75 = load i8** %str_addr, align 8, !dbg !6648
  %76 = getelementptr inbounds i8* %75, i64 1, !dbg !6648
  store i8* %76, i8** %str_addr, align 8, !dbg !6648
  %77 = load i8** %str_addr, align 8, !dbg !6648
  store i8* %77, i8** %fail_char, align 8, !dbg !6648
  %78 = load i64* %number, align 8, !dbg !6649
  %79 = load i64* %cutoff, align 8, !dbg !6649
  %80 = icmp ugt i64 %78, %79, !dbg !6649
  br i1 %80, label %bb23, label %bb21, !dbg !6649

bb21:                                             ; preds = %bb20
  %81 = load i64* %number, align 8, !dbg !6649
  %82 = load i64* %cutoff, align 8, !dbg !6649
  %83 = icmp ne i64 %81, %82, !dbg !6649
  br i1 %83, label %bb24, label %bb22, !dbg !6649

bb22:                                             ; preds = %bb21
  %84 = load i8* %digit, align 1, !dbg !6649
  %85 = load i8* %cutoff_digit, align 1, !dbg !6649
  %86 = icmp ugt i8 %84, %85, !dbg !6649
  br i1 %86, label %bb23, label %bb24, !dbg !6649

bb23:                                             ; preds = %bb22, %bb20
  store i64 -1, i64* %number, align 8, !dbg !6650
  %87 = load i32* %sflag_addr, align 4, !dbg !6651
  %88 = trunc i32 %87 to i8, !dbg !6651
  %89 = load i8* %negative, align 1, !dbg !6651
  %90 = and i8 %88, %89, !dbg !6651
  store i8 %90, i8* %negative, align 1, !dbg !6651
  store i32 34, i32* @errno, align 4, !dbg !6652
  br label %bb13, !dbg !6652

bb24:                                             ; preds = %bb22, %bb21
  %91 = load i32* %base_addr, align 4, !dbg !6653
  %92 = sext i32 %91 to i64, !dbg !6653
  %93 = load i64* %number, align 8, !dbg !6653
  %94 = mul i64 %92, %93, !dbg !6653
  %95 = load i8* %digit, align 1, !dbg !6653
  %96 = zext i8 %95 to i64, !dbg !6653
  %97 = add i64 %94, %96, !dbg !6653
  store i64 %97, i64* %number, align 8, !dbg !6653
  br label %bb13, !dbg !6653

bb26:                                             ; preds = %bb19, %bb11
  %98 = load i8*** %endptr_addr, align 8, !dbg !6654
  %99 = icmp ne i8** %98, null, !dbg !6654
  br i1 %99, label %bb27, label %bb28, !dbg !6654

bb27:                                             ; preds = %bb26
  %100 = load i8** %fail_char, align 8, !dbg !6655
  %101 = load i8*** %endptr_addr, align 8, !dbg !6655
  store i8* %100, i8** %101, align 8, !dbg !6655
  br label %bb28, !dbg !6655

bb28:                                             ; preds = %bb27, %bb26
  %102 = load i8* %negative, align 1, !dbg !6656
  %103 = icmp ne i8 %102, 0, !dbg !6656
  br i1 %103, label %bb29, label %bb30, !dbg !6656

bb29:                                             ; preds = %bb28
  store i64 -9223372036854775808, i64* %iftmp.5, align 8, !dbg !6656
  br label %bb31, !dbg !6656

bb30:                                             ; preds = %bb28
  store i64 9223372036854775807, i64* %iftmp.5, align 8, !dbg !6656
  br label %bb31, !dbg !6656

bb31:                                             ; preds = %bb30, %bb29
  %104 = load i64* %iftmp.5, align 8, !dbg !6656
  store i64 %104, i64* %tmp, align 8, !dbg !6656
  %105 = load i32* %sflag_addr, align 4, !dbg !6658
  %106 = icmp ne i32 %105, 0, !dbg !6658
  br i1 %106, label %bb32, label %bb34, !dbg !6658

bb32:                                             ; preds = %bb31
  %107 = load i64* %number, align 8, !dbg !6658
  %108 = load i64* %tmp, align 8, !dbg !6658
  %109 = icmp ugt i64 %107, %108, !dbg !6658
  br i1 %109, label %bb33, label %bb34, !dbg !6658

bb33:                                             ; preds = %bb32
  %110 = load i64* %tmp, align 8, !dbg !6659
  store i64 %110, i64* %number, align 8, !dbg !6659
  store i32 34, i32* @errno, align 4, !dbg !6660
  br label %bb34, !dbg !6660

bb34:                                             ; preds = %bb33, %bb32, %bb31
  %111 = load i8* %negative, align 1, !dbg !6661
  %112 = icmp ne i8 %111, 0, !dbg !6661
  %113 = load i64* %number, align 8, !dbg !6661
  br i1 %112, label %bb35, label %bb36, !dbg !6661

bb35:                                             ; preds = %bb34
  %114 = sub nsw i64 0, %113, !dbg !6661
  store i64 %114, i64* %iftmp.6, align 8, !dbg !6661
  br label %bb37, !dbg !6661

bb36:                                             ; preds = %bb34
  store i64 %113, i64* %iftmp.6, align 8, !dbg !6661
  br label %bb37, !dbg !6661

bb37:                                             ; preds = %bb36, %bb35
  %115 = load i64* %iftmp.6, align 8, !dbg !6661
  store i64 %115, i64* %0, align 8, !dbg !6661
  %116 = load i64* %0, align 8, !dbg !6661
  store i64 %116, i64* %retval, align 8, !dbg !6661
  %retval38 = load i64* %retval, !dbg !6661
  ret i64 %retval38, !dbg !6661
}

define i32 @atoi(i8* %nptr) nounwind readonly {
entry:
  %nptr_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %nptr, i8** %nptr_addr
  %1 = load i8** %nptr_addr, align 8, !dbg !6662
  %2 = call i64 @strtol(i8* noalias %1, i8** noalias null, i32 10) nounwind, !dbg !6662
  %3 = trunc i64 %2 to i32, !dbg !6662
  store i32 %3, i32* %0, align 4, !dbg !6662
  %4 = load i32* %0, align 4, !dbg !6662
  store i32 %4, i32* %retval, align 4, !dbg !6662
  %retval1 = load i32* %retval, !dbg !6662
  ret i32 %retval1, !dbg !6662
}

define i8* @fgets_unlocked(i8* noalias %s, i32 %n, %4* noalias %stream) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %n_addr = alloca i32, align 4
  %stream_addr = alloca %4*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %c = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %n, i32* %n_addr
  store %4* %stream, %4** %stream_addr
  %1 = load i32* %n_addr, align 4, !dbg !6664
  %2 = icmp sle i32 %1, 0, !dbg !6664
  br i1 %2, label %ERROR, label %bb, !dbg !6664

bb:                                               ; preds = %entry
  %3 = load i8** %s_addr, align 8, !dbg !6666
  store i8* %3, i8** %p, align 8, !dbg !6666
  br label %bb9, !dbg !6666

bb1:                                              ; preds = %bb9
  %4 = load %4** %stream_addr, align 8, !dbg !6667
  %5 = getelementptr inbounds %4* %4, i32 0, i32 5, !dbg !6667
  %6 = load i8** %5, align 8, !dbg !6667
  %7 = load %4** %stream_addr, align 8, !dbg !6667
  %8 = getelementptr inbounds %4* %7, i32 0, i32 7, !dbg !6667
  %9 = load i8** %8, align 8, !dbg !6667
  %10 = icmp ult i8* %6, %9, !dbg !6667
  %11 = load %4** %stream_addr, align 8, !dbg !6668
  br i1 %10, label %bb2, label %bb4, !dbg !6667

bb2:                                              ; preds = %bb1
  %12 = getelementptr inbounds %4* %11, i32 0, i32 5, !dbg !6668
  %13 = load i8** %12, align 8, !dbg !6668
  %14 = load i8* %13, align 1, !dbg !6668
  %15 = load i8** %p, align 8, !dbg !6668
  store i8 %14, i8* %15, align 1, !dbg !6668
  %16 = load i8** %p, align 8, !dbg !6668
  %17 = load i8* %16, align 1, !dbg !6668
  %18 = icmp eq i8 %17, 10, !dbg !6668
  %19 = zext i1 %18 to i8, !dbg !6668
  %20 = load i8** %p, align 8, !dbg !6668
  %21 = getelementptr inbounds i8* %20, i64 1, !dbg !6668
  store i8* %21, i8** %p, align 8, !dbg !6668
  %22 = getelementptr inbounds i8* %13, i64 1, !dbg !6668
  %23 = load %4** %stream_addr, align 8, !dbg !6668
  %24 = getelementptr inbounds %4* %23, i32 0, i32 5, !dbg !6668
  store i8* %22, i8** %24, align 8, !dbg !6668
  %toBool = icmp ne i8 %19, 0, !dbg !6668
  br i1 %toBool, label %bb10, label %bb9, !dbg !6668

bb4:                                              ; preds = %bb1
  %25 = call i32 @__fgetc_unlocked(%4* %11) nounwind, !dbg !6669
  store i32 %25, i32* %c, align 4, !dbg !6669
  %26 = load i32* %c, align 4, !dbg !6669
  %27 = icmp eq i32 %26, -1, !dbg !6669
  br i1 %27, label %bb5, label %bb7, !dbg !6669

bb5:                                              ; preds = %bb4
  %28 = load %4** %stream_addr, align 8, !dbg !6670
  %29 = getelementptr inbounds %4* %28, i32 0, i32 0, !dbg !6670
  %30 = load i16* %29, align 8, !dbg !6670
  %31 = zext i16 %30 to i32, !dbg !6670
  %32 = and i32 %31, 8, !dbg !6670
  %33 = icmp ne i32 %32, 0, !dbg !6670
  br i1 %33, label %ERROR, label %bb10, !dbg !6670

bb7:                                              ; preds = %bb4
  %34 = load i32* %c, align 4, !dbg !6671
  %35 = trunc i32 %34 to i8, !dbg !6671
  %36 = load i8** %p, align 8, !dbg !6671
  store i8 %35, i8* %36, align 1, !dbg !6671
  %37 = load i8** %p, align 8, !dbg !6671
  %38 = load i8* %37, align 1, !dbg !6671
  %39 = icmp eq i8 %38, 10, !dbg !6671
  %40 = zext i1 %39 to i8, !dbg !6671
  %41 = load i8** %p, align 8, !dbg !6671
  %42 = getelementptr inbounds i8* %41, i64 1, !dbg !6671
  store i8* %42, i8** %p, align 8, !dbg !6671
  %toBool8 = icmp ne i8 %40, 0, !dbg !6671
  br i1 %toBool8, label %bb10, label %bb9, !dbg !6671

bb9:                                              ; preds = %bb2, %bb7, %bb
  %43 = load i32* %n_addr, align 4, !dbg !6672
  %44 = sub nsw i32 %43, 1, !dbg !6672
  store i32 %44, i32* %n_addr, align 4, !dbg !6672
  %45 = load i32* %n_addr, align 4, !dbg !6672
  %46 = icmp ne i32 %45, 0, !dbg !6672
  br i1 %46, label %bb1, label %bb10, !dbg !6672

bb10:                                             ; preds = %bb5, %bb9, %bb7, %bb2
  %47 = load i8** %p, align 8, !dbg !6673
  %48 = load i8** %s_addr, align 8, !dbg !6673
  %49 = icmp ugt i8* %47, %48, !dbg !6673
  br i1 %49, label %bb11, label %ERROR, !dbg !6673

bb11:                                             ; preds = %bb10
  %50 = load i8** %p, align 8, !dbg !6674
  store i8 0, i8* %50, align 1, !dbg !6674
  %51 = load i8** %s_addr, align 8, !dbg !6675
  store i8* %51, i8** %0, align 8, !dbg !6675
  br label %bb12, !dbg !6675

ERROR:                                            ; preds = %bb10, %bb5, %entry
  store i8* null, i8** %0, align 8, !dbg !6676
  br label %bb12, !dbg !6676

bb12:                                             ; preds = %ERROR, %bb11
  %52 = load i8** %0, align 8, !dbg !6675
  store i8* %52, i8** %retval, align 8, !dbg !6675
  %retval13 = load i8** %retval, !dbg !6675
  ret i8* %retval13, !dbg !6675
}

define %4* @fopen(i8* noalias %filename, i8* noalias %mode) nounwind {
entry:
  %filename_addr = alloca i8*, align 8
  %mode_addr = alloca i8*, align 8
  %retval = alloca %4*
  %0 = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %filename, i8** %filename_addr
  store i8* %mode, i8** %mode_addr
  %1 = load i8** %filename_addr, align 8, !dbg !6677
  %2 = ptrtoint i8* %1 to i64, !dbg !6677
  %3 = load i8** %mode_addr, align 8, !dbg !6677
  %4 = call %4* @_stdio_fopen(i64 %2, i8* noalias %3, %4* noalias null, i32 -1) nounwind, !dbg !6677
  store %4* %4, %4** %0, align 8, !dbg !6677
  %5 = load %4** %0, align 8, !dbg !6677
  store %4* %5, %4** %retval, align 8, !dbg !6677
  %retval1 = load %4** %retval, !dbg !6677
  ret %4* %retval1, !dbg !6677
}

define i32 @fseeko64(%4* %stream, i64 %offset, i32 %whence) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %offset_addr = alloca i64, align 8
  %whence_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %pos = alloca i64
  %retval1 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i64 %offset, i64* %offset_addr
  store i32 %whence, i32* %whence_addr
  %1 = load i64* %offset_addr, align 8, !dbg !6679
  store i64 %1, i64* %pos, align 8, !dbg !6679
  store i32 -1, i32* %retval1, align 4, !dbg !6681
  %2 = load i32* %whence_addr, align 4, !dbg !6682
  %3 = icmp ugt i32 %2, 2, !dbg !6682
  br i1 %3, label %bb, label %bb2, !dbg !6682

bb:                                               ; preds = %entry
  store i32 22, i32* @errno, align 4, !dbg !6683
  br label %bb8, !dbg !6683

bb2:                                              ; preds = %entry
  %4 = load %4** %stream_addr, align 8, !dbg !6684
  %5 = getelementptr inbounds %4* %4, i32 0, i32 0, !dbg !6684
  %6 = load i16* %5, align 8, !dbg !6684
  %7 = zext i16 %6 to i32, !dbg !6684
  %8 = and i32 %7, 64, !dbg !6684
  %9 = icmp eq i32 %8, 0, !dbg !6684
  br i1 %9, label %bb4, label %bb3, !dbg !6684

bb3:                                              ; preds = %bb2
  %10 = load %4** %stream_addr, align 8, !dbg !6684
  %11 = call i64 @__stdio_wcommit(%4* noalias %10) nounwind, !dbg !6684
  %12 = icmp eq i64 %11, 0, !dbg !6684
  br i1 %12, label %bb4, label %bb8, !dbg !6684

bb4:                                              ; preds = %bb3, %bb2
  %13 = load i32* %whence_addr, align 4, !dbg !6684
  %14 = icmp ne i32 %13, 1, !dbg !6684
  br i1 %14, label %bb6, label %bb5, !dbg !6684

bb5:                                              ; preds = %bb4
  %15 = load %4** %stream_addr, align 8, !dbg !6684
  %16 = call i32 @__stdio_adjust_position(%4* noalias %15, i64* %pos) nounwind, !dbg !6684
  %17 = icmp sge i32 %16, 0, !dbg !6684
  br i1 %17, label %bb6, label %bb8, !dbg !6684

bb6:                                              ; preds = %bb5, %bb4
  %18 = load %4** %stream_addr, align 8, !dbg !6684
  %19 = load i32* %whence_addr, align 4, !dbg !6684
  %20 = call i32 @__stdio_seek(%4* %18, i64* %pos, i32 %19) nounwind, !dbg !6684
  %21 = icmp sge i32 %20, 0, !dbg !6684
  br i1 %21, label %bb7, label %bb8, !dbg !6684

bb7:                                              ; preds = %bb6
  %22 = load %4** %stream_addr, align 8, !dbg !6685
  %23 = getelementptr inbounds %4* %22, i32 0, i32 0, !dbg !6685
  %24 = load i16* %23, align 8, !dbg !6685
  %25 = and i16 %24, -72, !dbg !6685
  %26 = load %4** %stream_addr, align 8, !dbg !6685
  %27 = getelementptr inbounds %4* %26, i32 0, i32 0, !dbg !6685
  store i16 %25, i16* %27, align 8, !dbg !6685
  %28 = load %4** %stream_addr, align 8, !dbg !6686
  %29 = getelementptr inbounds %4* %28, i32 0, i32 3, !dbg !6686
  %30 = load i8** %29, align 8, !dbg !6686
  %31 = load %4** %stream_addr, align 8, !dbg !6686
  %32 = getelementptr inbounds %4* %31, i32 0, i32 5, !dbg !6686
  store i8* %30, i8** %32, align 8, !dbg !6686
  %33 = load %4** %stream_addr, align 8, !dbg !6686
  %34 = getelementptr inbounds %4* %33, i32 0, i32 5, !dbg !6686
  %35 = load i8** %34, align 8, !dbg !6686
  %36 = load %4** %stream_addr, align 8, !dbg !6686
  %37 = getelementptr inbounds %4* %36, i32 0, i32 6, !dbg !6686
  store i8* %35, i8** %37, align 8, !dbg !6686
  %38 = load %4** %stream_addr, align 8, !dbg !6687
  %39 = getelementptr inbounds %4* %38, i32 0, i32 3, !dbg !6687
  %40 = load i8** %39, align 8, !dbg !6687
  %41 = load %4** %stream_addr, align 8, !dbg !6687
  %42 = getelementptr inbounds %4* %41, i32 0, i32 7, !dbg !6687
  store i8* %40, i8** %42, align 8, !dbg !6687
  %43 = load %4** %stream_addr, align 8, !dbg !6688
  %44 = getelementptr inbounds %4* %43, i32 0, i32 3, !dbg !6688
  %45 = load i8** %44, align 8, !dbg !6688
  %46 = load %4** %stream_addr, align 8, !dbg !6688
  %47 = getelementptr inbounds %4* %46, i32 0, i32 8, !dbg !6688
  store i8* %45, i8** %47, align 8, !dbg !6688
  %48 = load %4** %stream_addr, align 8, !dbg !6689
  %49 = getelementptr inbounds %4* %48, i32 0, i32 11, !dbg !6689
  %50 = getelementptr inbounds %struct.__mbstate_t* %49, i32 0, i32 0, !dbg !6689
  store i32 0, i32* %50, align 8, !dbg !6689
  %51 = load %4** %stream_addr, align 8, !dbg !6690
  %52 = getelementptr inbounds %4* %51, i32 0, i32 1, !dbg !6690
  %53 = getelementptr inbounds [2 x i8]* %52, i64 0, i64 0, !dbg !6690
  store i8 0, i8* %53, align 1, !dbg !6690
  store i32 0, i32* %retval1, align 4, !dbg !6691
  br label %bb8, !dbg !6691

bb8:                                              ; preds = %bb7, %bb6, %bb5, %bb3, %bb
  %54 = load i32* %retval1, align 4, !dbg !6692
  store i32 %54, i32* %0, align 4, !dbg !6692
  %55 = load i32* %0, align 4, !dbg !6692
  store i32 %55, i32* %retval, align 4, !dbg !6692
  %retval9 = load i32* %retval, !dbg !6692
  ret i32 %retval9, !dbg !6692
}

define i32 @isatty(i32 %fd) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %term = alloca %struct.termios
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  %1 = load i32* %fd_addr, align 4, !dbg !6693
  %2 = call i32 @tcgetattr(i32 %1, %struct.termios* %term) nounwind, !dbg !6693
  %3 = icmp eq i32 %2, 0, !dbg !6693
  %4 = zext i1 %3 to i32, !dbg !6693
  store i32 %4, i32* %0, align 4, !dbg !6693
  %5 = load i32* %0, align 4, !dbg !6693
  store i32 %5, i32* %retval, align 4, !dbg !6693
  %retval1 = load i32* %retval, !dbg !6693
  ret i32 %retval1, !dbg !6693
}

define i32 @iswctype(i32 %wc, i32 %desc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %desc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  store i32 %desc, i32* %desc_addr
  %1 = load i32* %wc_addr, align 4, !dbg !6695
  %2 = icmp ule i32 %1, 127, !dbg !6695
  br i1 %2, label %bb, label %bb2, !dbg !6695

bb:                                               ; preds = %entry
  %3 = load i32* %desc_addr, align 4, !dbg !6695
  %4 = icmp ule i32 %3, 12, !dbg !6695
  br i1 %4, label %bb1, label %bb2, !dbg !6695

bb1:                                              ; preds = %bb
  %5 = load i16** @__ctype_b, align 8, !dbg !6697
  %6 = load i32* %wc_addr, align 4, !dbg !6697
  %7 = sext i32 %6 to i64, !dbg !6697
  %8 = getelementptr inbounds i16* %5, i64 %7, !dbg !6697
  %9 = load i16* %8, align 1, !dbg !6697
  %10 = load i32* %desc_addr, align 4, !dbg !6697
  %11 = zext i32 %10 to i64, !dbg !6697
  %12 = getelementptr inbounds [13 x i16]* @desc2flag, i64 0, i64 %11, !dbg !6697
  %13 = load i16* %12, align 2, !dbg !6697
  %14 = and i16 %9, %13, !dbg !6697
  %15 = zext i16 %14 to i32, !dbg !6697
  store i32 %15, i32* %0, align 4, !dbg !6697
  br label %bb3, !dbg !6697

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %0, align 4, !dbg !6698
  br label %bb3, !dbg !6698

bb3:                                              ; preds = %bb2, %bb1
  %16 = load i32* %0, align 4, !dbg !6697
  store i32 %16, i32* %retval, align 4, !dbg !6697
  %retval4 = load i32* %retval, !dbg !6697
  ret i32 %retval4, !dbg !6697
}

define i64 @mbsnrtowcs(i32* noalias %dst, i8** noalias %src, i64 %NMC, i64 %len, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %dst_addr = alloca i32*, align 8
  %src_addr = alloca i8**, align 8
  %NMC_addr = alloca i64, align 8
  %len_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %wcbuf = alloca [1 x i32]
  %s = alloca i8*
  %count = alloca i64
  %incr = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32* %dst, i32** %dst_addr
  store i8** %src, i8*** %src_addr
  store i64 %NMC, i64* %NMC_addr
  store i64 %len, i64* %len_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6699
  %2 = icmp eq %struct.__mbstate_t* %1, null, !dbg !6699
  br i1 %2, label %bb, label %bb1, !dbg !6699

bb:                                               ; preds = %entry
  store %struct.__mbstate_t* @mbstate.2222, %struct.__mbstate_t** %ps_addr, align 8, !dbg !6701
  br label %bb1, !dbg !6701

bb1:                                              ; preds = %bb, %entry
  store i32 1, i32* %incr, align 4, !dbg !6702
  %3 = load i32** %dst_addr, align 8, !dbg !6703
  %4 = icmp eq i32* %3, null, !dbg !6703
  br i1 %4, label %bb3, label %bb2, !dbg !6703

bb2:                                              ; preds = %bb1
  %5 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6703
  %6 = bitcast %struct.__mbstate_t* %5 to i32*, !dbg !6703
  %7 = load i32** %dst_addr, align 8, !dbg !6703
  %8 = icmp eq i32* %7, %6, !dbg !6703
  br i1 %8, label %bb3, label %bb7, !dbg !6703

bb3:                                              ; preds = %bb2, %bb1
  %9 = load i32** %dst_addr, align 8, !dbg !6704
  %10 = icmp eq i32* %9, null, !dbg !6704
  br i1 %10, label %bb4, label %bb5, !dbg !6704

bb4:                                              ; preds = %bb3
  store i64 -1, i64* %len_addr, align 8, !dbg !6705
  br label %bb5, !dbg !6705

bb5:                                              ; preds = %bb4, %bb3
  %wcbuf6 = bitcast [1 x i32]* %wcbuf to i32*, !dbg !6706
  store i32* %wcbuf6, i32** %dst_addr, align 8, !dbg !6706
  store i32 0, i32* %incr, align 4, !dbg !6707
  br label %bb7, !dbg !6707

bb7:                                              ; preds = %bb5, %bb2
  %11 = load i64* %len_addr, align 8, !dbg !6708
  %12 = load i64* %NMC_addr, align 8, !dbg !6708
  %13 = icmp ugt i64 %11, %12, !dbg !6708
  br i1 %13, label %bb8, label %bb9, !dbg !6708

bb8:                                              ; preds = %bb7
  %14 = load i64* %NMC_addr, align 8, !dbg !6709
  store i64 %14, i64* %len_addr, align 8, !dbg !6709
  br label %bb9, !dbg !6709

bb9:                                              ; preds = %bb8, %bb7
  %15 = load i64* %len_addr, align 8, !dbg !6710
  store i64 %15, i64* %count, align 8, !dbg !6710
  %16 = load i8*** %src_addr, align 8, !dbg !6711
  %17 = load i8** %16, align 8, !dbg !6711
  store i8* %17, i8** %s, align 8, !dbg !6711
  br label %bb15, !dbg !6711

bb10:                                             ; preds = %bb15
  %18 = load i8** %s, align 8, !dbg !6712
  %19 = load i8* %18, align 1, !dbg !6712
  %20 = zext i8 %19 to i32, !dbg !6712
  %21 = load i32** %dst_addr, align 8, !dbg !6712
  store i32 %20, i32* %21, align 4, !dbg !6712
  %22 = load i32** %dst_addr, align 8, !dbg !6712
  %23 = load i32* %22, align 4, !dbg !6712
  %24 = icmp eq i32 %23, 0, !dbg !6712
  br i1 %24, label %bb11, label %bb12, !dbg !6712

bb11:                                             ; preds = %bb10
  store i8* null, i8** %s, align 8, !dbg !6713
  br label %bb16, !dbg !6713

bb12:                                             ; preds = %bb10
  %25 = load i32** %dst_addr, align 8, !dbg !6714
  %26 = load i32* %25, align 4, !dbg !6714
  %27 = icmp sgt i32 %26, 127, !dbg !6714
  br i1 %27, label %bb13, label %bb14, !dbg !6714

bb13:                                             ; preds = %bb12
  store i32 84, i32* @errno, align 4, !dbg !6715
  store i64 -1, i64* %0, align 8, !dbg !6716
  br label %bb20, !dbg !6716

bb14:                                             ; preds = %bb12
  %28 = load i8** %s, align 8, !dbg !6717
  %29 = getelementptr inbounds i8* %28, i64 1, !dbg !6717
  store i8* %29, i8** %s, align 8, !dbg !6717
  %30 = load i32** %dst_addr, align 8, !dbg !6718
  %31 = load i32* %incr, align 4, !dbg !6718
  %32 = sext i32 %31 to i64, !dbg !6718
  %33 = getelementptr inbounds i32* %30, i64 %32, !dbg !6718
  store i32* %33, i32** %dst_addr, align 8, !dbg !6718
  %34 = load i64* %count, align 8, !dbg !6719
  %35 = sub i64 %34, 1, !dbg !6719
  store i64 %35, i64* %count, align 8, !dbg !6719
  br label %bb15, !dbg !6719

bb15:                                             ; preds = %bb14, %bb9
  %36 = load i64* %count, align 8, !dbg !6720
  %37 = icmp ne i64 %36, 0, !dbg !6720
  br i1 %37, label %bb10, label %bb16, !dbg !6720

bb16:                                             ; preds = %bb15, %bb11
  %wcbuf17 = bitcast [1 x i32]* %wcbuf to i32*, !dbg !6721
  %38 = load i32** %dst_addr, align 8, !dbg !6721
  %39 = icmp ne i32* %wcbuf17, %38, !dbg !6721
  br i1 %39, label %bb18, label %bb19, !dbg !6721

bb18:                                             ; preds = %bb16
  %40 = load i8*** %src_addr, align 8, !dbg !6722
  %41 = load i8** %s, align 8, !dbg !6722
  store i8* %41, i8** %40, align 8, !dbg !6722
  br label %bb19, !dbg !6722

bb19:                                             ; preds = %bb18, %bb16
  %42 = load i64* %len_addr, align 8, !dbg !6723
  %43 = load i64* %count, align 8, !dbg !6723
  %44 = sub i64 %42, %43, !dbg !6723
  store i64 %44, i64* %0, align 8, !dbg !6723
  br label %bb20, !dbg !6723

bb20:                                             ; preds = %bb19, %bb13
  %45 = load i64* %0, align 8, !dbg !6716
  store i64 %45, i64* %retval, align 8, !dbg !6716
  %retval21 = load i64* %retval, !dbg !6716
  ret i64 %retval21, !dbg !6716
}

define i64 @mbsrtowcs(i32* noalias %dst, i8** noalias %src, i64 %len, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %dst_addr = alloca i32*, align 8
  %src_addr = alloca i8**, align 8
  %len_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %iftmp.0 = alloca %struct.__mbstate_t*
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32* %dst, i32** %dst_addr
  store i8** %src, i8*** %src_addr
  store i64 %len, i64* %len_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6724
  %2 = icmp ne %struct.__mbstate_t* %1, null, !dbg !6724
  br i1 %2, label %bb, label %bb1, !dbg !6724

bb:                                               ; preds = %entry
  %3 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6724
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %iftmp.0, align 8, !dbg !6724
  br label %bb2, !dbg !6724

bb1:                                              ; preds = %entry
  store %struct.__mbstate_t* @mbstate.2221221, %struct.__mbstate_t** %iftmp.0, align 8, !dbg !6724
  br label %bb2, !dbg !6724

bb2:                                              ; preds = %bb1, %bb
  %4 = load i32** %dst_addr, align 8, !dbg !6724
  %5 = load i8*** %src_addr, align 8, !dbg !6724
  %6 = load i64* %len_addr, align 8, !dbg !6724
  %7 = load %struct.__mbstate_t** %iftmp.0, align 8, !dbg !6724
  %8 = call i64 @mbsnrtowcs(i32* noalias %4, i8** noalias %5, i64 -1, i64 %6, %struct.__mbstate_t* noalias %7) nounwind, !dbg !6724
  store i64 %8, i64* %0, align 8, !dbg !6724
  %9 = load i64* %0, align 8, !dbg !6724
  store i64 %9, i64* %retval, align 8, !dbg !6724
  %retval3 = load i64* %retval, !dbg !6724
  ret i64 %retval3, !dbg !6724
}

define i8* @memcpy(i8* noalias %s1, i8* noalias %s2, i64 %n) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %r1 = alloca i8*
  %r2 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6726
  store i8* %1, i8** %r1, align 8, !dbg !6726
  %2 = load i8** %s2_addr, align 8, !dbg !6728
  store i8* %2, i8** %r2, align 8, !dbg !6728
  br label %bb1, !dbg !6728

bb:                                               ; preds = %bb1
  %3 = load i8** %r2, align 8, !dbg !6729
  %4 = load i8* %3, align 1, !dbg !6729
  %5 = load i8** %r1, align 8, !dbg !6729
  store i8 %4, i8* %5, align 1, !dbg !6729
  %6 = load i8** %r1, align 8, !dbg !6729
  %7 = getelementptr inbounds i8* %6, i64 1, !dbg !6729
  store i8* %7, i8** %r1, align 8, !dbg !6729
  %8 = load i8** %r2, align 8, !dbg !6729
  %9 = getelementptr inbounds i8* %8, i64 1, !dbg !6729
  store i8* %9, i8** %r2, align 8, !dbg !6729
  %10 = load i64* %n_addr, align 8, !dbg !6730
  %11 = sub i64 %10, 1, !dbg !6730
  store i64 %11, i64* %n_addr, align 8, !dbg !6730
  br label %bb1, !dbg !6730

bb1:                                              ; preds = %bb, %entry
  %12 = load i64* %n_addr, align 8, !dbg !6731
  %13 = icmp ne i64 %12, 0, !dbg !6731
  br i1 %13, label %bb, label %bb2, !dbg !6731

bb2:                                              ; preds = %bb1
  %14 = load i8** %s1_addr, align 8, !dbg !6732
  store i8* %14, i8** %0, align 8, !dbg !6732
  %15 = load i8** %0, align 8, !dbg !6732
  store i8* %15, i8** %retval, align 8, !dbg !6732
  %retval3 = load i8** %retval, !dbg !6732
  ret i8* %retval3, !dbg !6732
}

define i8* @memmove(i8* %s1, i8* %s2, i64 %n) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6733
  store i8* %1, i8** %s, align 8, !dbg !6733
  %2 = load i8** %s2_addr, align 8, !dbg !6735
  store i8* %2, i8** %p, align 8, !dbg !6735
  %3 = load i8** %p, align 8, !dbg !6736
  %4 = load i8** %s, align 8, !dbg !6736
  %5 = icmp uge i8* %3, %4, !dbg !6736
  br i1 %5, label %bb2, label %bb6, !dbg !6736

bb1:                                              ; preds = %bb2
  %6 = load i8** %p, align 8, !dbg !6737
  %7 = load i8* %6, align 1, !dbg !6737
  %8 = load i8** %s, align 8, !dbg !6737
  store i8 %7, i8* %8, align 1, !dbg !6737
  %9 = load i8** %s, align 8, !dbg !6737
  %10 = getelementptr inbounds i8* %9, i64 1, !dbg !6737
  store i8* %10, i8** %s, align 8, !dbg !6737
  %11 = load i8** %p, align 8, !dbg !6737
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6737
  store i8* %12, i8** %p, align 8, !dbg !6737
  %13 = load i64* %n_addr, align 8, !dbg !6738
  %14 = sub i64 %13, 1, !dbg !6738
  store i64 %14, i64* %n_addr, align 8, !dbg !6738
  br label %bb2, !dbg !6738

bb2:                                              ; preds = %entry, %bb1
  %15 = load i64* %n_addr, align 8, !dbg !6739
  %16 = icmp ne i64 %15, 0, !dbg !6739
  br i1 %16, label %bb1, label %bb7, !dbg !6739

bb5:                                              ; preds = %bb6
  %17 = load i64* %n_addr, align 8, !dbg !6740
  %18 = sub i64 %17, 1, !dbg !6740
  store i64 %18, i64* %n_addr, align 8, !dbg !6740
  %19 = load i8** %p, align 8, !dbg !6741
  %20 = load i64* %n_addr, align 8, !dbg !6741
  %21 = getelementptr inbounds i8* %19, i64 %20, !dbg !6741
  %22 = load i8* %21, align 1, !dbg !6741
  %23 = load i8** %s, align 8, !dbg !6741
  %24 = load i64* %n_addr, align 8, !dbg !6741
  %25 = getelementptr inbounds i8* %23, i64 %24, !dbg !6741
  store i8 %22, i8* %25, align 1, !dbg !6741
  br label %bb6, !dbg !6741

bb6:                                              ; preds = %entry, %bb5
  %26 = load i64* %n_addr, align 8, !dbg !6742
  %27 = icmp ne i64 %26, 0, !dbg !6742
  br i1 %27, label %bb5, label %bb7, !dbg !6742

bb7:                                              ; preds = %bb2, %bb6
  %28 = load i8** %s1_addr, align 8, !dbg !6743
  store i8* %28, i8** %0, align 8, !dbg !6743
  %29 = load i8** %0, align 8, !dbg !6743
  store i8* %29, i8** %retval, align 8, !dbg !6743
  %retval8 = load i8** %retval, !dbg !6743
  ret i8* %retval8, !dbg !6743
}

define i8* @memset(i8* %s, i32 %c, i64 %n) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s_addr, align 8, !dbg !6744
  store i8* %1, i8** %p, align 8, !dbg !6744
  br label %bb1, !dbg !6744

bb:                                               ; preds = %bb1
  %2 = load i32* %c_addr, align 4, !dbg !6746
  %3 = trunc i32 %2 to i8, !dbg !6746
  %4 = load i8** %p, align 8, !dbg !6746
  store i8 %3, i8* %4, align 1, !dbg !6746
  %5 = load i8** %p, align 8, !dbg !6746
  %6 = getelementptr inbounds i8* %5, i64 1, !dbg !6746
  store i8* %6, i8** %p, align 8, !dbg !6746
  %7 = load i64* %n_addr, align 8, !dbg !6747
  %8 = sub i64 %7, 1, !dbg !6747
  store i64 %8, i64* %n_addr, align 8, !dbg !6747
  br label %bb1, !dbg !6747

bb1:                                              ; preds = %bb, %entry
  %9 = load i64* %n_addr, align 8, !dbg !6748
  %10 = icmp ne i64 %9, 0, !dbg !6748
  br i1 %10, label %bb, label %bb2, !dbg !6748

bb2:                                              ; preds = %bb1
  %11 = load i8** %s_addr, align 8, !dbg !6749
  store i8* %11, i8** %0, align 8, !dbg !6749
  %12 = load i8** %0, align 8, !dbg !6749
  store i8* %12, i8** %retval, align 8, !dbg !6749
  %retval3 = load i8** %retval, !dbg !6749
  ret i8* %retval3, !dbg !6749
}

define hidden i32 @__raise(i32 %signo) nounwind {
entry:
  %signo_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %signo, i32* %signo_addr
  %1 = call i32 @getpid() nounwind, !dbg !6750
  %2 = load i32* %signo_addr, align 4, !dbg !6750
  %3 = call i32 @kill(i32 %1, i32 %2) nounwind, !dbg !6750
  store i32 %3, i32* %0, align 4, !dbg !6750
  %4 = load i32* %0, align 4, !dbg !6750
  store i32 %4, i32* %retval, align 4, !dbg !6750
  %retval1 = load i32* %retval, !dbg !6750
  ret i32 %retval1, !dbg !6750
}

declare i32 @getpid() nounwind

define i32 @__libc_sigaction(i32 %sig, %struct.sigaction* %act, %struct.sigaction* %oact) nounwind {
entry:
  %sig_addr = alloca i32, align 4
  %act_addr = alloca %struct.sigaction*, align 8
  %oact_addr = alloca %struct.sigaction*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.1 = alloca %struct.kernel_sigaction*
  %iftmp.0 = alloca %struct.kernel_sigaction*
  %result = alloca i32
  %kact = alloca %struct.kernel_sigaction
  %koact = alloca %struct.kernel_sigaction
  %"alloca point" = bitcast i32 0 to i32
  store i32 %sig, i32* %sig_addr
  store %struct.sigaction* %act, %struct.sigaction** %act_addr
  store %struct.sigaction* %oact, %struct.sigaction** %oact_addr
  %1 = load %struct.sigaction** %act_addr, align 8, !dbg !6752
  %2 = icmp ne %struct.sigaction* %1, null, !dbg !6752
  br i1 %2, label %bb, label %bb1, !dbg !6752

bb:                                               ; preds = %entry
  %3 = load %struct.sigaction** %act_addr, align 8, !dbg !6754
  %4 = getelementptr inbounds %struct.sigaction* %3, i32 0, i32 0, !dbg !6754
  %5 = getelementptr inbounds %5* %4, i32 0, i32 0, !dbg !6754
  %6 = load void (i32)** %5, align 8, !dbg !6754
  %7 = getelementptr inbounds %struct.kernel_sigaction* %kact, i32 0, i32 0, !dbg !6754
  store void (i32)* %6, void (i32)** %7, align 8, !dbg !6754
  %8 = load %struct.sigaction** %act_addr, align 8, !dbg !6755
  %9 = getelementptr inbounds %struct.sigaction* %8, i32 0, i32 1, !dbg !6755
  %10 = getelementptr inbounds %struct.kernel_sigaction* %kact, i32 0, i32 3, !dbg !6755
  %11 = bitcast %struct.__sigset_t* %10 to i8*, !dbg !6755
  %12 = bitcast %struct.__sigset_t* %9 to i8*, !dbg !6755
  %13 = call i8* @memcpy(i8* noalias %11, i8* noalias %12, i64 128) nounwind, !dbg !6755
  %14 = load %struct.sigaction** %act_addr, align 8, !dbg !6756
  %15 = getelementptr inbounds %struct.sigaction* %14, i32 0, i32 2, !dbg !6756
  %16 = load i32* %15, align 8, !dbg !6756
  %17 = sext i32 %16 to i64, !dbg !6756
  %18 = getelementptr inbounds %struct.kernel_sigaction* %kact, i32 0, i32 1, !dbg !6756
  store i64 %17, i64* %18, align 8, !dbg !6756
  %19 = load %struct.sigaction** %act_addr, align 8, !dbg !6757
  %20 = getelementptr inbounds %struct.sigaction* %19, i32 0, i32 3, !dbg !6757
  %21 = load void ()** %20, align 8, !dbg !6757
  %22 = getelementptr inbounds %struct.kernel_sigaction* %kact, i32 0, i32 2, !dbg !6757
  store void ()* %21, void ()** %22, align 8, !dbg !6757
  br label %bb1, !dbg !6757

bb1:                                              ; preds = %bb, %entry
  %23 = load %struct.sigaction** %oact_addr, align 8, !dbg !6758
  %24 = icmp ne %struct.sigaction* %23, null, !dbg !6758
  br i1 %24, label %bb2, label %bb3, !dbg !6758

bb2:                                              ; preds = %bb1
  store %struct.kernel_sigaction* %koact, %struct.kernel_sigaction** %iftmp.0, align 8, !dbg !6758
  br label %bb4, !dbg !6758

bb3:                                              ; preds = %bb1
  store %struct.kernel_sigaction* null, %struct.kernel_sigaction** %iftmp.0, align 8, !dbg !6758
  br label %bb4, !dbg !6758

bb4:                                              ; preds = %bb3, %bb2
  %25 = load %struct.sigaction** %act_addr, align 8, !dbg !6758
  %26 = icmp ne %struct.sigaction* %25, null, !dbg !6758
  br i1 %26, label %bb5, label %bb6, !dbg !6758

bb5:                                              ; preds = %bb4
  store %struct.kernel_sigaction* %kact, %struct.kernel_sigaction** %iftmp.1, align 8, !dbg !6758
  br label %bb7, !dbg !6758

bb6:                                              ; preds = %bb4
  store %struct.kernel_sigaction* null, %struct.kernel_sigaction** %iftmp.1, align 8, !dbg !6758
  br label %bb7, !dbg !6758

bb7:                                              ; preds = %bb6, %bb5
  %27 = load i32* %sig_addr, align 4, !dbg !6758
  %28 = load %struct.kernel_sigaction** %iftmp.1, align 8, !dbg !6758
  %29 = load %struct.kernel_sigaction** %iftmp.0, align 8, !dbg !6758
  %30 = call i32 bitcast (i32 (i32, %struct.sigaction*, %struct.sigaction*, i64)* @__syscall_rt_sigaction to i32 (i32, %struct.kernel_sigaction*, %struct.kernel_sigaction*, i64)*)(i32 %27, %struct.kernel_sigaction* %28, %struct.kernel_sigaction* %29, i64
  store i32 %30, i32* %result, align 4, !dbg !6758
  %31 = load %struct.sigaction** %oact_addr, align 8, !dbg !6759
  %32 = icmp ne %struct.sigaction* %31, null, !dbg !6759
  br i1 %32, label %bb8, label %bb10, !dbg !6759

bb8:                                              ; preds = %bb7
  %33 = load i32* %result, align 4, !dbg !6759
  %34 = icmp sge i32 %33, 0, !dbg !6759
  br i1 %34, label %bb9, label %bb10, !dbg !6759

bb9:                                              ; preds = %bb8
  %35 = getelementptr inbounds %struct.kernel_sigaction* %koact, i32 0, i32 0, !dbg !6760
  %36 = load void (i32)** %35, align 8, !dbg !6760
  %37 = load %struct.sigaction** %oact_addr, align 8, !dbg !6760
  %38 = getelementptr inbounds %struct.sigaction* %37, i32 0, i32 0, !dbg !6760
  %39 = getelementptr inbounds %5* %38, i32 0, i32 0, !dbg !6760
  store void (i32)* %36, void (i32)** %39, align 8, !dbg !6760
  %40 = load %struct.sigaction** %oact_addr, align 8, !dbg !6761
  %41 = getelementptr inbounds %struct.sigaction* %40, i32 0, i32 1, !dbg !6761
  %42 = bitcast %struct.__sigset_t* %41 to i8*, !dbg !6761
  %43 = getelementptr inbounds %struct.kernel_sigaction* %koact, i32 0, i32 3, !dbg !6761
  %44 = bitcast %struct.__sigset_t* %43 to i8*, !dbg !6761
  %45 = call i8* @memcpy(i8* noalias %42, i8* noalias %44, i64 128) nounwind, !dbg !6761
  %46 = getelementptr inbounds %struct.kernel_sigaction* %koact, i32 0, i32 1, !dbg !6762
  %47 = load i64* %46, align 8, !dbg !6762
  %48 = trunc i64 %47 to i32, !dbg !6762
  %49 = load %struct.sigaction** %oact_addr, align 8, !dbg !6762
  %50 = getelementptr inbounds %struct.sigaction* %49, i32 0, i32 2, !dbg !6762
  store i32 %48, i32* %50, align 8, !dbg !6762
  %51 = getelementptr inbounds %struct.kernel_sigaction* %koact, i32 0, i32 2, !dbg !6763
  %52 = load void ()** %51, align 8, !dbg !6763
  %53 = load %struct.sigaction** %oact_addr, align 8, !dbg !6763
  %54 = getelementptr inbounds %struct.sigaction* %53, i32 0, i32 3, !dbg !6763
  store void ()* %52, void ()** %54, align 8, !dbg !6763
  br label %bb10, !dbg !6763

bb10:                                             ; preds = %bb9, %bb8, %bb7
  %55 = load i32* %result, align 4, !dbg !6764
  store i32 %55, i32* %0, align 4, !dbg !6764
  %56 = load i32* %0, align 4, !dbg !6764
  store i32 %56, i32* %retval, align 4, !dbg !6764
  %retval11 = load i32* %retval, !dbg !6764
  ret i32 %retval11, !dbg !6764
}

define i8* @strerror(i32 %errnum) nounwind {
entry:
  %errnum_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %errnum, i32* %errnum_addr
  %1 = load i32* %errnum_addr, align 4, !dbg !6765
  %2 = call i32 @__xpg_strerror_r(i32 %1, i8* getelementptr inbounds ([50 x i8]* @buf.1212, i64 0, i64 0), i64 50) nounwind, !dbg !6765
  store i8* getelementptr inbounds ([50 x i8]* @buf.1212, i64 0, i64 0), i8** %0, align 8, !dbg !6767
  %3 = load i8** %0, align 8, !dbg !6767
  store i8* %3, i8** %retval, align 8, !dbg !6767
  %retval1 = load i8** %retval, !dbg !6767
  ret i8* %retval1, !dbg !6767
}

define i8* @strstr(i8* %s1, i8* %s2) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6768
  store i8* %1, i8** %s, align 8, !dbg !6768
  %2 = load i8** %s2_addr, align 8, !dbg !6770
  store i8* %2, i8** %p, align 8, !dbg !6770
  br label %bb, !dbg !6770

bb:                                               ; preds = %bb3, %bb6, %entry
  %3 = load i8** %p, align 8, !dbg !6771
  %4 = load i8* %3, align 1, !dbg !6771
  %5 = icmp eq i8 %4, 0, !dbg !6771
  br i1 %5, label %bb1, label %bb2, !dbg !6771

bb1:                                              ; preds = %bb
  %6 = load i8** %s1_addr, align 8, !dbg !6772
  store i8* %6, i8** %0, align 8, !dbg !6772
  br label %bb8, !dbg !6772

bb2:                                              ; preds = %bb
  %7 = load i8** %p, align 8, !dbg !6773
  %8 = load i8* %7, align 1, !dbg !6773
  %9 = load i8** %s, align 8, !dbg !6773
  %10 = load i8* %9, align 1, !dbg !6773
  %11 = icmp eq i8 %8, %10, !dbg !6773
  br i1 %11, label %bb3, label %bb4, !dbg !6773

bb3:                                              ; preds = %bb2
  %12 = load i8** %p, align 8, !dbg !6774
  %13 = getelementptr inbounds i8* %12, i64 1, !dbg !6774
  store i8* %13, i8** %p, align 8, !dbg !6774
  %14 = load i8** %s, align 8, !dbg !6775
  %15 = getelementptr inbounds i8* %14, i64 1, !dbg !6775
  store i8* %15, i8** %s, align 8, !dbg !6775
  br label %bb, !dbg !6775

bb4:                                              ; preds = %bb2
  %16 = load i8** %s2_addr, align 8, !dbg !6776
  store i8* %16, i8** %p, align 8, !dbg !6776
  %17 = load i8** %s, align 8, !dbg !6777
  %18 = load i8* %17, align 1, !dbg !6777
  %19 = icmp eq i8 %18, 0, !dbg !6777
  br i1 %19, label %bb5, label %bb6, !dbg !6777

bb5:                                              ; preds = %bb4
  store i8* null, i8** %0, align 8, !dbg !6778
  br label %bb8, !dbg !6778

bb6:                                              ; preds = %bb4
  %20 = load i8** %s1_addr, align 8, !dbg !6779
  %21 = getelementptr inbounds i8* %20, i64 1, !dbg !6779
  store i8* %21, i8** %s1_addr, align 8, !dbg !6779
  %22 = load i8** %s1_addr, align 8, !dbg !6779
  store i8* %22, i8** %s, align 8, !dbg !6779
  br label %bb, !dbg !6779

bb8:                                              ; preds = %bb5, %bb1
  %23 = load i8** %0, align 8, !dbg !6772
  store i8* %23, i8** %retval, align 8, !dbg !6772
  %retval9 = load i8** %retval, !dbg !6772
  ret i8* %retval9, !dbg !6772
}

define i8* @strtok_r(i8* noalias %s1, i8* noalias %s2, i8** noalias %next_start) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %next_start_addr = alloca i8**, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i8** %next_start, i8*** %next_start_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6780
  store i8* %1, i8** %s, align 8, !dbg !6780
  %2 = load i8** %s, align 8, !dbg !6780
  %3 = icmp ne i8* %2, null, !dbg !6780
  br i1 %3, label %bb1, label %bb, !dbg !6780

bb:                                               ; preds = %entry
  %4 = load i8*** %next_start_addr, align 8, !dbg !6780
  %5 = load i8** %4, align 8, !dbg !6780
  store i8* %5, i8** %s, align 8, !dbg !6780
  %6 = load i8** %s, align 8, !dbg !6780
  %7 = icmp ne i8* %6, null, !dbg !6780
  br i1 %7, label %bb1, label %bb7, !dbg !6780

bb1:                                              ; preds = %bb, %entry
  %8 = load i8** %s, align 8, !dbg !6782
  %9 = load i8** %s2_addr, align 8, !dbg !6782
  %10 = call i64 @strspn(i8* %8, i8* %9) nounwind readonly, !dbg !6782
  %11 = load i8** %s, align 8, !dbg !6782
  %12 = getelementptr inbounds i8* %11, i64 %10, !dbg !6782
  store i8* %12, i8** %s, align 8, !dbg !6782
  %13 = load i8** %s, align 8, !dbg !6782
  %14 = load i8* %13, align 1, !dbg !6782
  %15 = icmp ne i8 %14, 0, !dbg !6782
  br i1 %15, label %bb2, label %bb5, !dbg !6782

bb2:                                              ; preds = %bb1
  %16 = load i8** %s, align 8, !dbg !6783
  %17 = load i8** %s2_addr, align 8, !dbg !6783
  %18 = call i8* @strpbrk(i8* %16, i8* %17) nounwind readonly, !dbg !6783
  store i8* %18, i8** %p, align 8, !dbg !6783
  %19 = load i8** %p, align 8, !dbg !6783
  %20 = icmp ne i8* %19, null, !dbg !6783
  br i1 %20, label %bb3, label %bb6, !dbg !6783

bb3:                                              ; preds = %bb2
  %21 = load i8** %p, align 8, !dbg !6784
  store i8 0, i8* %21, align 1, !dbg !6784
  %22 = load i8** %p, align 8, !dbg !6784
  %23 = getelementptr inbounds i8* %22, i64 1, !dbg !6784
  store i8* %23, i8** %p, align 8, !dbg !6784
  br label %bb6, !dbg !6784

bb5:                                              ; preds = %bb1
  store i8* null, i8** %s, align 8, !dbg !6785
  %24 = load i8** %s, align 8, !dbg !6785
  store i8* %24, i8** %p, align 8, !dbg !6785
  br label %bb6, !dbg !6785

bb6:                                              ; preds = %bb2, %bb3, %bb5
  %25 = load i8*** %next_start_addr, align 8, !dbg !6786
  %26 = load i8** %p, align 8, !dbg !6786
  store i8* %26, i8** %25, align 8, !dbg !6786
  br label %bb7, !dbg !6786

bb7:                                              ; preds = %bb6, %bb
  %27 = load i8** %s, align 8, !dbg !6787
  store i8* %27, i8** %0, align 8, !dbg !6787
  %28 = load i8** %0, align 8, !dbg !6787
  store i8* %28, i8** %retval, align 8, !dbg !6787
  %retval8 = load i8** %retval, !dbg !6787
  ret i8* %retval8, !dbg !6787
}

define internal i64 @_fp_out_narrow(%4* %fp, i64 %type, i64 %len, i64 %buf) nounwind {
entry:
  %fp_addr = alloca %4*, align 8
  %type_addr = alloca i64, align 8
  %len_addr = alloca i64, align 8
  %buf_addr = alloca i64, align 8
  %retval = alloca i64
  %iftmp.3 = alloca i64
  %0 = alloca i64
  %r = alloca i64
  %buflen = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %fp, %4** %fp_addr
  store i64 %type, i64* %type_addr
  store i64 %len, i64* %len_addr
  store i64 %buf, i64* %buf_addr
  store i64 0, i64* %r, align 8, !dbg !6788
  %1 = load i64* %type_addr, align 8, !dbg !6790
  %2 = and i64 %1, 128, !dbg !6790
  %3 = icmp ne i64 %2, 0, !dbg !6790
  br i1 %3, label %bb, label %bb4, !dbg !6790

bb:                                               ; preds = %entry
  %4 = load i64* %buf_addr, align 8, !dbg !6791
  %5 = inttoptr i64 %4 to i8*, !dbg !6791
  %6 = call i64 @strlen(i8* %5) nounwind readonly, !dbg !6791
  %7 = trunc i64 %6 to i32, !dbg !6791
  store i32 %7, i32* %buflen, align 4, !dbg !6791
  %8 = load i32* %buflen, align 4, !dbg !6793
  %9 = sext i32 %8 to i64, !dbg !6793
  %10 = load i64* %len_addr, align 8, !dbg !6793
  %11 = sub nsw i64 %10, %9, !dbg !6793
  store i64 %11, i64* %len_addr, align 8, !dbg !6793
  %12 = load i64* %len_addr, align 8, !dbg !6793
  %13 = icmp sgt i64 %12, 0, !dbg !6793
  br i1 %13, label %bb1, label %bb3, !dbg !6793

bb1:                                              ; preds = %bb
  %14 = load i64* %len_addr, align 8, !dbg !6794
  %15 = load i64* %type_addr, align 8, !dbg !6794
  %16 = trunc i64 %15 to i32, !dbg !6794
  %17 = and i32 %16, 127, !dbg !6794
  %18 = load %4** %fp_addr, align 8, !dbg !6794
  %19 = call i64 @_charpad(%4* noalias %18, i32 %17, i64 %14) nounwind, !dbg !6794
  store i64 %19, i64* %r, align 8, !dbg !6794
  %20 = load i64* %len_addr, align 8, !dbg !6794
  %21 = load i64* %r, align 8, !dbg !6794
  %22 = icmp ne i64 %21, %20, !dbg !6794
  br i1 %22, label %bb2, label %bb3, !dbg !6794

bb2:                                              ; preds = %bb1
  %23 = load i64* %r, align 8, !dbg !6795
  store i64 %23, i64* %0, align 8, !dbg !6795
  br label %bb8, !dbg !6795

bb3:                                              ; preds = %bb1, %bb
  %24 = load i32* %buflen, align 4, !dbg !6796
  %25 = sext i32 %24 to i64, !dbg !6796
  store i64 %25, i64* %len_addr, align 8, !dbg !6796
  br label %bb4, !dbg !6796

bb4:                                              ; preds = %bb3, %entry
  %26 = load i64* %len_addr, align 8, !dbg !6797
  %27 = icmp sgt i64 %26, 0, !dbg !6797
  br i1 %27, label %bb5, label %bb6, !dbg !6797

bb5:                                              ; preds = %bb4
  %28 = load i64* %len_addr, align 8, !dbg !6797
  %29 = load i64* %buf_addr, align 8, !dbg !6797
  %30 = inttoptr i64 %29 to i8*, !dbg !6797
  %31 = load %4** %fp_addr, align 8, !dbg !6797
  %32 = call i64 @__stdio_fwrite(i8* noalias %30, i64 %28, %4* noalias %31) nounwind, !dbg !6797
  store i64 %32, i64* %iftmp.3, align 8, !dbg !6797
  br label %bb7, !dbg !6797

bb6:                                              ; preds = %bb4
  store i64 0, i64* %iftmp.3, align 8, !dbg !6797
  br label %bb7, !dbg !6797

bb7:                                              ; preds = %bb6, %bb5
  %33 = load i64* %iftmp.3, align 8, !dbg !6797
  %34 = load i64* %r, align 8, !dbg !6797
  %35 = add i64 %33, %34, !dbg !6797
  store i64 %35, i64* %0, align 8, !dbg !6797
  br label %bb8, !dbg !6797

bb8:                                              ; preds = %bb7, %bb2
  %36 = load i64* %0, align 8, !dbg !6795
  store i64 %36, i64* %retval, align 8, !dbg !6795
  %retval9 = load i64* %retval, !dbg !6795
  ret i64 %retval9, !dbg !6795
}

define internal i64 @_charpad(%4* noalias %stream, i32 %padchar, i64 %numpad) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %padchar_addr = alloca i32, align 4
  %numpad_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %todo = alloca i64
  %pad = alloca [1 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 %padchar, i32* %padchar_addr
  store i64 %numpad, i64* %numpad_addr
  %1 = load i64* %numpad_addr, align 8, !dbg !6798
  store i64 %1, i64* %todo, align 8, !dbg !6798
  %2 = load i32* %padchar_addr, align 4, !dbg !6800
  %3 = trunc i32 %2 to i8, !dbg !6800
  %4 = getelementptr inbounds [1 x i8]* %pad, i64 0, i64 0, !dbg !6800
  store i8 %3, i8* %4, align 1, !dbg !6800
  br label %bb1, !dbg !6800

bb:                                               ; preds = %bb2
  %5 = load i64* %todo, align 8, !dbg !6801
  %6 = sub i64 %5, 1, !dbg !6801
  store i64 %6, i64* %todo, align 8, !dbg !6801
  br label %bb1, !dbg !6801

bb1:                                              ; preds = %bb, %entry
  %7 = load i64* %todo, align 8, !dbg !6802
  %8 = icmp eq i64 %7, 0, !dbg !6802
  br i1 %8, label %bb5, label %bb2, !dbg !6802

bb2:                                              ; preds = %bb1
  %pad3 = bitcast [1 x i8]* %pad to i8*, !dbg !6802
  %9 = load %4** %stream_addr, align 8, !dbg !6802
  %10 = call i64 @__stdio_fwrite(i8* noalias %pad3, i64 1, %4* noalias %9) nounwind, !dbg !6802
  %11 = icmp eq i64 %10, 1, !dbg !6802
  br i1 %11, label %bb, label %bb5, !dbg !6802

bb5:                                              ; preds = %bb2, %bb1
  %12 = load i64* %numpad_addr, align 8, !dbg !6803
  %13 = load i64* %todo, align 8, !dbg !6803
  %14 = sub i64 %12, %13, !dbg !6803
  store i64 %14, i64* %0, align 8, !dbg !6803
  %15 = load i64* %0, align 8, !dbg !6803
  store i64 %15, i64* %retval, align 8, !dbg !6803
  %retval6 = load i64* %retval, !dbg !6803
  ret i64 %retval6, !dbg !6803
}

define internal i32 @_do_one_spec(%4* noalias %stream, %struct.ppfs_t* %ppfs, i32* %count) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %count_addr = alloca i32*, align 8
  %retval = alloca i32
  %iftmp.26 = alloca i64
  %iftmp.24 = alloca i64
  %iftmp.21 = alloca i32
  %iftmp.20 = alloca i64
  %iftmp.19 = alloca i64
  %iftmp.17 = alloca i64
  %iftmp.15 = alloca x86_fp80
  %iftmp.13 = alloca i32
  %iftmp.12 = alloca i32
  %iftmp.11 = alloca i32
  %iftmp.9 = alloca i32
  %0 = alloca i32
  %argptr = alloca [1 x i8*]
  %argtype = alloca i32*
  %ws = alloca i32*
  %mbstate = alloca %struct.__mbstate_t
  %slen = alloca i64
  %base = alloca i32
  %numpad = alloca i32
  %alphacase = alloca i32
  %numfill = alloca i32
  %prefix_num = alloca i32
  %padchar = alloca i8
  %buf = alloca [128 x i8]
  %p = alloca %union.argvalue_t*
  %i = alloca i32
  %s = alloca i8*
  %nf = alloca i64
  %t = alloca i64
  %t117 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  store i32* %count, i32** %count_addr
  store i32* null, i32** %ws, align 8, !dbg !6804
  store i32 0, i32* %numfill, align 4, !dbg !6806
  store i32 11, i32* %prefix_num, align 4, !dbg !6807
  store i8 32, i8* %padchar, align 1, !dbg !6808
  %1 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6809
  %2 = call i32 @_ppfs_parsespec(%struct.ppfs_t* %1) nounwind, !dbg !6809
  %3 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6810
  call void @_ppfs_setargs(%struct.ppfs_t* %3) nounwind, !dbg !6810
  %4 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6811
  %5 = getelementptr inbounds %struct.ppfs_t* %4, i32 0, i32 6, !dbg !6811
  %6 = getelementptr inbounds [9 x i32]* %5, i64 0, i64 0, !dbg !6811
  %7 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6811
  %8 = getelementptr inbounds %struct.ppfs_t* %7, i32 0, i32 5, !dbg !6811
  %9 = getelementptr inbounds [4 x i8]* %8, i64 0, i64 2, !dbg !6811
  %10 = load i8* %9, align 1, !dbg !6811
  %11 = zext i8 %10 to i32, !dbg !6811
  %12 = sext i32 %11 to i64, !dbg !6811
  %13 = getelementptr inbounds i32* %6, i64 %12, !dbg !6811
  %14 = getelementptr inbounds i32* %13, i64 -1, !dbg !6811
  store i32* %14, i32** %argtype, align 8, !dbg !6811
  %15 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6812
  %16 = getelementptr inbounds %struct.ppfs_t* %15, i32 0, i32 8, !dbg !6812
  %17 = getelementptr inbounds [9 x %union.argvalue_t]* %16, i64 0, i64 0, !dbg !6812
  store %union.argvalue_t* %17, %union.argvalue_t** %p, align 8, !dbg !6812
  %18 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6814
  %19 = getelementptr inbounds %struct.ppfs_t* %18, i32 0, i32 2, !dbg !6814
  %20 = load i32* %19, align 4, !dbg !6814
  %21 = icmp sgt i32 %20, 0, !dbg !6814
  br i1 %21, label %bb, label %bb1, !dbg !6814

bb:                                               ; preds = %entry
  %22 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6815
  %23 = getelementptr inbounds %struct.ppfs_t* %22, i32 0, i32 5, !dbg !6815
  %24 = getelementptr inbounds [4 x i8]* %23, i64 0, i64 2, !dbg !6815
  %25 = load i8* %24, align 1, !dbg !6815
  %26 = zext i8 %25 to i32, !dbg !6815
  %27 = sub nsw i32 %26, 1, !dbg !6815
  %28 = load %union.argvalue_t** %p, align 8, !dbg !6815
  %29 = sext i32 %27 to i64, !dbg !6815
  %30 = getelementptr inbounds %union.argvalue_t* %28, i64 %29, !dbg !6815
  store %union.argvalue_t* %30, %union.argvalue_t** %p, align 8, !dbg !6815
  br label %bb1, !dbg !6815

bb1:                                              ; preds = %bb, %entry
  store i32 0, i32* %i, align 4, !dbg !6816
  br label %bb3, !dbg !6816

bb2:                                              ; preds = %bb3
  %31 = load i32* %i, align 4, !dbg !6817
  %32 = sext i32 %31 to i64, !dbg !6817
  %33 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 %32, !dbg !6817
  %34 = load %union.argvalue_t** %p, align 8, !dbg !6817
  %35 = bitcast %union.argvalue_t* %34 to i8*, !dbg !6817
  store i8* %35, i8** %33, align 8, !dbg !6817
  %36 = load %union.argvalue_t** %p, align 8, !dbg !6817
  %37 = getelementptr inbounds %union.argvalue_t* %36, i64 1, !dbg !6817
  store %union.argvalue_t* %37, %union.argvalue_t** %p, align 8, !dbg !6817
  %38 = load i32* %i, align 4, !dbg !6816
  %39 = add nsw i32 %38, 1, !dbg !6816
  store i32 %39, i32* %i, align 4, !dbg !6816
  br label %bb3, !dbg !6816

bb3:                                              ; preds = %bb2, %bb1
  %40 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6816
  %41 = getelementptr inbounds %struct.ppfs_t* %40, i32 0, i32 3, !dbg !6816
  %42 = load i32* %41, align 16, !dbg !6816
  %43 = load i32* %i, align 4, !dbg !6816
  %44 = icmp sgt i32 %42, %43, !dbg !6816
  br i1 %44, label %bb2, label %bb4, !dbg !6816

bb4:                                              ; preds = %bb3
  store i8* null, i8** %s, align 8, !dbg !6818
  %45 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6820
  %46 = getelementptr inbounds %struct.ppfs_t* %45, i32 0, i32 4, !dbg !6820
  %47 = load i32* %46, align 4, !dbg !6820
  %48 = icmp eq i32 %47, 0, !dbg !6820
  br i1 %48, label %bb5, label %bb6, !dbg !6820

bb5:                                              ; preds = %bb4
  %49 = load i32** %count_addr, align 8, !dbg !6821
  %50 = load i32* %49, align 4, !dbg !6821
  %51 = sext i32 %50 to i64, !dbg !6821
  %52 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6821
  %53 = getelementptr inbounds %struct.ppfs_t* %52, i32 0, i32 1, !dbg !6821
  %54 = getelementptr inbounds %struct.printf_info* %53, i32 0, i32 3, !dbg !6821
  %55 = load i32* %54, align 4, !dbg !6821
  %56 = and i32 %55, 3840, !dbg !6821
  %57 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6821
  %58 = load i8** %57, align 8, !dbg !6821
  %59 = bitcast i8* %58 to i8**, !dbg !6821
  %60 = load i8** %59, align 8, !dbg !6821
  call void @_store_inttype(i8* %60, i32 %56, i64 %51) nounwind, !dbg !6821
  store i32 0, i32* %0, align 4, !dbg !6822
  br label %bb131, !dbg !6822

bb6:                                              ; preds = %bb4
  %61 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6823
  %62 = getelementptr inbounds %struct.ppfs_t* %61, i32 0, i32 4, !dbg !6823
  %63 = load i32* %62, align 4, !dbg !6823
  %64 = icmp ule i32 %63, 7, !dbg !6823
  br i1 %64, label %bb7, label %bb58, !dbg !6823

bb7:                                              ; preds = %bb6
  store i32 87, i32* %alphacase, align 4, !dbg !6824
  %65 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6825
  %66 = getelementptr inbounds %struct.ppfs_t* %65, i32 0, i32 4, !dbg !6825
  %67 = load i32* %66, align 4, !dbg !6825
  %68 = sub i32 %67, 1, !dbg !6825
  %69 = sext i32 %68 to i64, !dbg !6825
  %70 = getelementptr inbounds [7 x i8]* @spec_base.3674, i64 0, i64 %69, !dbg !6825
  %71 = load i8* %70, align 1, !dbg !6825
  %72 = sext i8 %71 to i32, !dbg !6825
  store i32 %72, i32* %base, align 4, !dbg !6825
  %73 = load i32* %base, align 4, !dbg !6825
  %74 = icmp eq i32 %73, 10, !dbg !6825
  br i1 %74, label %bb8, label %bb12, !dbg !6825

bb8:                                              ; preds = %bb7
  %75 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6826
  %76 = getelementptr inbounds %struct.ppfs_t* %75, i32 0, i32 1, !dbg !6826
  %77 = getelementptr inbounds %struct.printf_info* %76, i32 0, i32 3, !dbg !6826
  %78 = load i32* %77, align 4, !dbg !6826
  %79 = and i32 %78, 32, !dbg !6826
  %80 = icmp ne i32 %79, 0, !dbg !6826
  br i1 %80, label %bb9, label %bb10, !dbg !6826

bb9:                                              ; preds = %bb8
  store i32 44, i32* %alphacase, align 4, !dbg !6827
  br label %bb10, !dbg !6827

bb10:                                             ; preds = %bb9, %bb8
  %81 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6828
  %82 = getelementptr inbounds %struct.ppfs_t* %81, i32 0, i32 1, !dbg !6828
  %83 = getelementptr inbounds %struct.printf_info* %82, i32 0, i32 3, !dbg !6828
  %84 = load i32* %83, align 4, !dbg !6828
  %85 = and i32 %84, 64, !dbg !6828
  %86 = icmp ne i32 %85, 0, !dbg !6828
  br i1 %86, label %bb11, label %bb12, !dbg !6828

bb11:                                             ; preds = %bb10
  %87 = load i32* %alphacase, align 4, !dbg !6829
  %88 = or i32 %87, 128, !dbg !6829
  store i32 %88, i32* %alphacase, align 4, !dbg !6829
  br label %bb12, !dbg !6829

bb12:                                             ; preds = %bb11, %bb10, %bb7
  %89 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6830
  %90 = getelementptr inbounds %struct.ppfs_t* %89, i32 0, i32 4, !dbg !6830
  %91 = load i32* %90, align 4, !dbg !6830
  %92 = icmp ule i32 %91, 5, !dbg !6830
  br i1 %92, label %bb13, label %bb18, !dbg !6830

bb13:                                             ; preds = %bb12
  %93 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6831
  %94 = getelementptr inbounds %struct.ppfs_t* %93, i32 0, i32 4, !dbg !6831
  %95 = load i32* %94, align 4, !dbg !6831
  %96 = icmp eq i32 %95, 3, !dbg !6831
  br i1 %96, label %bb14, label %bb15, !dbg !6831

bb14:                                             ; preds = %bb13
  store i32 55, i32* %alphacase, align 4, !dbg !6832
  br label %bb15, !dbg !6832

bb15:                                             ; preds = %bb14, %bb13
  %97 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6833
  %98 = getelementptr inbounds %struct.ppfs_t* %97, i32 0, i32 4, !dbg !6833
  %99 = load i32* %98, align 4, !dbg !6833
  %100 = icmp eq i32 %99, 1, !dbg !6833
  br i1 %100, label %bb16, label %bb19, !dbg !6833

bb16:                                             ; preds = %bb15
  store i32 6, i32* %prefix_num, align 4, !dbg !6834
  br label %bb19, !dbg !6834

bb18:                                             ; preds = %bb12
  %101 = load i32* %base, align 4, !dbg !6835
  %102 = sub nsw i32 0, %101, !dbg !6835
  store i32 %102, i32* %base, align 4, !dbg !6835
  br label %bb19, !dbg !6835

bb19:                                             ; preds = %bb15, %bb16, %bb18
  %103 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6836
  %104 = getelementptr inbounds %struct.ppfs_t* %103, i32 0, i32 1, !dbg !6836
  %105 = getelementptr inbounds %struct.printf_info* %104, i32 0, i32 0, !dbg !6836
  %106 = load i32* %105, align 8, !dbg !6836
  %107 = icmp slt i32 %106, 0, !dbg !6836
  br i1 %107, label %bb20, label %bb21, !dbg !6836

bb20:                                             ; preds = %bb19
  %108 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6837
  %109 = getelementptr inbounds %struct.ppfs_t* %108, i32 0, i32 1, !dbg !6837
  %110 = getelementptr inbounds %struct.printf_info* %109, i32 0, i32 4, !dbg !6837
  %111 = load i32* %110, align 8, !dbg !6837
  %112 = trunc i32 %111 to i8, !dbg !6837
  store i8 %112, i8* %padchar, align 1, !dbg !6837
  br label %bb21, !dbg !6837

bb21:                                             ; preds = %bb20, %bb19
  %113 = load i32* %alphacase, align 4, !dbg !6838
  %114 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6838
  %115 = load i8** %114, align 8, !dbg !6838
  %116 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6838
  %117 = getelementptr inbounds %struct.ppfs_t* %116, i32 0, i32 4, !dbg !6838
  %118 = load i32* %117, align 4, !dbg !6838
  %119 = icmp ne i32 %118, 1, !dbg !6838
  br i1 %119, label %bb22, label %bb23, !dbg !6838

bb22:                                             ; preds = %bb21
  %120 = load i32** %argtype, align 8, !dbg !6838
  %121 = load i32* %120, align 4, !dbg !6838
  %122 = and i32 %121, 3840, !dbg !6838
  store i32 %122, i32* %iftmp.9, align 4, !dbg !6838
  br label %bb24, !dbg !6838

bb23:                                             ; preds = %bb21
  store i32 1024, i32* %iftmp.9, align 4, !dbg !6838
  br label %bb24, !dbg !6838

bb24:                                             ; preds = %bb23, %bb22
  %123 = load i32* %iftmp.9, align 4, !dbg !6838
  %124 = load i32* %base, align 4, !dbg !6838
  %125 = call i64 @_load_inttype(i32 %123, i8* %115, i32 %124) nounwind, !dbg !6838
  %buf25 = bitcast [128 x i8]* %buf to i8*, !dbg !6838
  %126 = getelementptr inbounds i8* %buf25, i64 128, !dbg !6838
  %127 = getelementptr inbounds i8* %126, i64 -1, !dbg !6838
  %128 = load i32* %base, align 4, !dbg !6838
  %129 = call i8* @_uintmaxtostr(i8* noalias %127, i64 %125, i32 %128, i32 %113) nounwind, !dbg !6838
  store i8* %129, i8** %s, align 8, !dbg !6838
  %130 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6839
  %131 = getelementptr inbounds %struct.ppfs_t* %130, i32 0, i32 4, !dbg !6839
  %132 = load i32* %131, align 4, !dbg !6839
  %133 = icmp ugt i32 %132, 5, !dbg !6839
  br i1 %133, label %bb26, label %bb32, !dbg !6839

bb26:                                             ; preds = %bb24
  %134 = load i8** %s, align 8, !dbg !6840
  %135 = load i8* %134, align 1, !dbg !6840
  %136 = icmp eq i8 %135, 45, !dbg !6840
  %137 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6841
  %138 = getelementptr inbounds %struct.ppfs_t* %137, i32 0, i32 1, !dbg !6841
  %139 = getelementptr inbounds %struct.printf_info* %138, i32 0, i32 3, !dbg !6841
  %140 = load i32* %139, align 4, !dbg !6841
  br i1 %136, label %bb27, label %bb28, !dbg !6840

bb27:                                             ; preds = %bb26
  %141 = or i32 %140, 2, !dbg !6841
  %142 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6841
  %143 = getelementptr inbounds %struct.ppfs_t* %142, i32 0, i32 1, !dbg !6841
  %144 = getelementptr inbounds %struct.printf_info* %143, i32 0, i32 3, !dbg !6841
  store i32 %141, i32* %144, align 4, !dbg !6841
  %145 = load i8** %s, align 8, !dbg !6842
  %146 = getelementptr inbounds i8* %145, i64 1, !dbg !6842
  store i8* %146, i8** %s, align 8, !dbg !6842
  store i32 2, i32* %prefix_num, align 4, !dbg !6843
  br label %bb32, !dbg !6843

bb28:                                             ; preds = %bb26
  %147 = and i32 %140, 2, !dbg !6844
  %148 = icmp ne i32 %147, 0, !dbg !6844
  br i1 %148, label %bb29, label %bb30, !dbg !6844

bb29:                                             ; preds = %bb28
  store i32 0, i32* %prefix_num, align 4, !dbg !6845
  br label %bb32, !dbg !6845

bb30:                                             ; preds = %bb28
  %149 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6846
  %150 = getelementptr inbounds %struct.ppfs_t* %149, i32 0, i32 1, !dbg !6846
  %151 = getelementptr inbounds %struct.printf_info* %150, i32 0, i32 3, !dbg !6846
  %152 = load i32* %151, align 4, !dbg !6846
  %153 = and i32 %152, 1, !dbg !6846
  %154 = trunc i32 %153 to i8, !dbg !6846
  %toBool = icmp ne i8 %154, 0, !dbg !6846
  br i1 %toBool, label %bb31, label %bb32, !dbg !6846

bb31:                                             ; preds = %bb30
  store i32 4, i32* %prefix_num, align 4, !dbg !6847
  br label %bb32, !dbg !6847

bb32:                                             ; preds = %bb31, %bb30, %bb29, %bb27, %bb24
  %buf33 = bitcast [128 x i8]* %buf to i8*, !dbg !6848
  %155 = getelementptr inbounds i8* %buf33, i64 128, !dbg !6848
  %156 = getelementptr inbounds i8* %155, i64 -1, !dbg !6848
  %157 = ptrtoint i8* %156 to i64, !dbg !6848
  %158 = load i8** %s, align 8, !dbg !6848
  %159 = ptrtoint i8* %158 to i64, !dbg !6848
  %160 = sub nsw i64 %157, %159, !dbg !6848
  store i64 %160, i64* %slen, align 8, !dbg !6848
  %161 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6849
  %162 = getelementptr inbounds %struct.ppfs_t* %161, i32 0, i32 1, !dbg !6849
  %163 = getelementptr inbounds %struct.printf_info* %162, i32 0, i32 0, !dbg !6849
  %164 = load i32* %163, align 8, !dbg !6849
  %165 = icmp sge i32 %164, 0, !dbg !6849
  br i1 %165, label %bb34, label %bb35, !dbg !6849

bb34:                                             ; preds = %bb32
  %166 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6849
  %167 = getelementptr inbounds %struct.ppfs_t* %166, i32 0, i32 1, !dbg !6849
  %168 = getelementptr inbounds %struct.printf_info* %167, i32 0, i32 0, !dbg !6849
  %169 = load i32* %168, align 8, !dbg !6849
  store i32 %169, i32* %iftmp.11, align 4, !dbg !6849
  br label %bb36, !dbg !6849

bb35:                                             ; preds = %bb32
  store i32 1, i32* %iftmp.11, align 4, !dbg !6849
  br label %bb36, !dbg !6849

bb36:                                             ; preds = %bb35, %bb34
  %170 = load i32* %iftmp.11, align 4, !dbg !6849
  store i32 %170, i32* %numfill, align 4, !dbg !6849
  %171 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6850
  %172 = getelementptr inbounds %struct.ppfs_t* %171, i32 0, i32 1, !dbg !6850
  %173 = getelementptr inbounds %struct.printf_info* %172, i32 0, i32 3, !dbg !6850
  %174 = load i32* %173, align 4, !dbg !6850
  %175 = and i32 %174, 16, !dbg !6850
  %176 = icmp ne i32 %175, 0, !dbg !6850
  br i1 %176, label %bb37, label %bb47, !dbg !6850

bb37:                                             ; preds = %bb36
  %177 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6851
  %178 = getelementptr inbounds %struct.ppfs_t* %177, i32 0, i32 4, !dbg !6851
  %179 = load i32* %178, align 4, !dbg !6851
  %180 = icmp ule i32 %179, 2, !dbg !6851
  br i1 %180, label %bb38, label %bb39, !dbg !6851

bb38:                                             ; preds = %bb37
  store i32 6, i32* %prefix_num, align 4, !dbg !6852
  br label %bb39, !dbg !6852

bb39:                                             ; preds = %bb38, %bb37
  %181 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6853
  %182 = getelementptr inbounds %struct.ppfs_t* %181, i32 0, i32 4, !dbg !6853
  %183 = load i32* %182, align 4, !dbg !6853
  %184 = icmp eq i32 %183, 3, !dbg !6853
  br i1 %184, label %bb40, label %bb41, !dbg !6853

bb40:                                             ; preds = %bb39
  store i32 9, i32* %prefix_num, align 4, !dbg !6854
  br label %bb41, !dbg !6854

bb41:                                             ; preds = %bb40, %bb39
  %185 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6855
  %186 = getelementptr inbounds %struct.ppfs_t* %185, i32 0, i32 4, !dbg !6855
  %187 = load i32* %186, align 4, !dbg !6855
  %188 = icmp eq i32 %187, 4, !dbg !6855
  br i1 %188, label %bb42, label %bb47, !dbg !6855

bb42:                                             ; preds = %bb41
  %189 = load i32* %numfill, align 4, !dbg !6855
  %190 = sext i32 %189 to i64, !dbg !6855
  %191 = load i64* %slen, align 8, !dbg !6855
  %192 = icmp ule i64 %190, %191, !dbg !6855
  br i1 %192, label %bb43, label %bb47, !dbg !6855

bb43:                                             ; preds = %bb42
  %193 = load i8** %s, align 8, !dbg !6856
  %194 = load i8* %193, align 1, !dbg !6856
  %195 = icmp ne i8 %194, 48, !dbg !6856
  br i1 %195, label %bb44, label %bb45, !dbg !6856

bb44:                                             ; preds = %bb43
  %196 = load i64* %slen, align 8, !dbg !6856
  %197 = trunc i64 %196 to i32, !dbg !6856
  %198 = add i32 %197, 1, !dbg !6856
  store i32 %198, i32* %iftmp.12, align 4, !dbg !6856
  br label %bb46, !dbg !6856

bb45:                                             ; preds = %bb43
  store i32 1, i32* %iftmp.12, align 4, !dbg !6856
  br label %bb46, !dbg !6856

bb46:                                             ; preds = %bb45, %bb44
  %199 = load i32* %iftmp.12, align 4, !dbg !6856
  store i32 %199, i32* %numfill, align 4, !dbg !6856
  br label %bb47, !dbg !6856

bb47:                                             ; preds = %bb46, %bb42, %bb41, %bb36
  %200 = load i8** %s, align 8, !dbg !6857
  %201 = load i8* %200, align 1, !dbg !6857
  %202 = icmp eq i8 %201, 48, !dbg !6857
  br i1 %202, label %bb48, label %bb54, !dbg !6857

bb48:                                             ; preds = %bb47
  %203 = load i32* %prefix_num, align 4, !dbg !6858
  %204 = icmp sgt i32 %203, 5, !dbg !6858
  br i1 %204, label %bb49, label %bb50, !dbg !6858

bb49:                                             ; preds = %bb48
  store i32 11, i32* %prefix_num, align 4, !dbg !6859
  br label %bb50, !dbg !6859

bb50:                                             ; preds = %bb49, %bb48
  %205 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6860
  %206 = getelementptr inbounds %struct.ppfs_t* %205, i32 0, i32 4, !dbg !6860
  %207 = load i32* %206, align 4, !dbg !6860
  %208 = icmp eq i32 %207, 1, !dbg !6860
  br i1 %208, label %bb51, label %bb52, !dbg !6860

bb51:                                             ; preds = %bb50
  store i8* getelementptr inbounds ([6 x i8]* @.str232, i64 0, i64 0), i8** %s, align 8, !dbg !6861
  store i64 5, i64* %slen, align 8, !dbg !6862
  store i32 0, i32* %numfill, align 4, !dbg !6863
  br label %bb54, !dbg !6863

bb52:                                             ; preds = %bb50
  %209 = load i32* %numfill, align 4, !dbg !6864
  %210 = icmp eq i32 %209, 0, !dbg !6864
  br i1 %210, label %bb53, label %bb54, !dbg !6864

bb53:                                             ; preds = %bb52
  store i64 0, i64* %slen, align 8, !dbg !6865
  br label %bb54, !dbg !6865

bb54:                                             ; preds = %bb53, %bb52, %bb51, %bb47
  %211 = load i32* %numfill, align 4, !dbg !6866
  %212 = sext i32 %211 to i64, !dbg !6866
  %213 = load i64* %slen, align 8, !dbg !6866
  %214 = icmp ugt i64 %212, %213, !dbg !6866
  br i1 %214, label %bb55, label %bb56, !dbg !6866

bb55:                                             ; preds = %bb54
  %215 = load i32* %numfill, align 4, !dbg !6866
  %216 = load i64* %slen, align 8, !dbg !6866
  %217 = trunc i64 %216 to i32, !dbg !6866
  %218 = sub i32 %215, %217, !dbg !6866
  store i32 %218, i32* %iftmp.13, align 4, !dbg !6866
  br label %bb57, !dbg !6866

bb56:                                             ; preds = %bb54
  store i32 0, i32* %iftmp.13, align 4, !dbg !6866
  br label %bb57, !dbg !6866

bb57:                                             ; preds = %bb56, %bb55
  %219 = load i32* %iftmp.13, align 4, !dbg !6866
  store i32 %219, i32* %numfill, align 4, !dbg !6866
  br label %bb93, !dbg !6866

bb58:                                             ; preds = %bb6
  %220 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6867
  %221 = getelementptr inbounds %struct.ppfs_t* %220, i32 0, i32 4, !dbg !6867
  %222 = load i32* %221, align 4, !dbg !6867
  %223 = icmp ule i32 %222, 15, !dbg !6867
  %224 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6868
  br i1 %223, label %bb59, label %bb65, !dbg !6867

bb59:                                             ; preds = %bb58
  %225 = getelementptr inbounds %struct.ppfs_t* %224, i32 0, i32 1, !dbg !6868
  %226 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6868
  %227 = getelementptr inbounds %struct.ppfs_t* %226, i32 0, i32 1, !dbg !6868
  %228 = getelementptr inbounds %struct.printf_info* %227, i32 0, i32 3, !dbg !6868
  %229 = load i32* %228, align 4, !dbg !6868
  %230 = and i32 %229, 2048, !dbg !6868
  %231 = icmp ne i32 %230, 0, !dbg !6868
  %232 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6868
  %233 = load i8** %232, align 8, !dbg !6868
  br i1 %231, label %bb60, label %bb61, !dbg !6868

bb60:                                             ; preds = %bb59
  %234 = bitcast i8* %233 to x86_fp80*, !dbg !6868
  %235 = load x86_fp80* %234, align 16, !dbg !6868
  store x86_fp80 %235, x86_fp80* %iftmp.15, align 16, !dbg !6868
  br label %bb62, !dbg !6868

bb61:                                             ; preds = %bb59
  %236 = bitcast i8* %233 to double*, !dbg !6868
  %237 = load double* %236, align 8, !dbg !6868
  %238 = fpext double %237 to x86_fp80, !dbg !6868
  store x86_fp80 %238, x86_fp80* %iftmp.15, align 16, !dbg !6868
  br label %bb62, !dbg !6868

bb62:                                             ; preds = %bb61, %bb60
  %239 = load %4** %stream_addr, align 8, !dbg !6868
  %240 = load x86_fp80* %iftmp.15, align 16, !dbg !6868
  %241 = call i64 @_fpmaxtostr(%4* %239, x86_fp80 %240, %struct.printf_info* %225, i64 (%4*, i64, i64, i64)* @_fp_out_narrow) nounwind, !dbg !6868
  store i64 %241, i64* %nf, align 8, !dbg !6868
  %242 = load i64* %nf, align 8, !dbg !6870
  %243 = icmp slt i64 %242, 0, !dbg !6870
  br i1 %243, label %bb63, label %bb64, !dbg !6870

bb63:                                             ; preds = %bb62
  store i32 -1, i32* %0, align 4, !dbg !6871
  br label %bb131, !dbg !6871

bb64:                                             ; preds = %bb62
  %244 = load i32** %count_addr, align 8, !dbg !6872
  %245 = load i32* %244, align 4, !dbg !6872
  %246 = load i64* %nf, align 8, !dbg !6872
  %247 = trunc i64 %246 to i32, !dbg !6872
  %248 = add i32 %245, %247, !dbg !6872
  %249 = load i32** %count_addr, align 8, !dbg !6872
  store i32 %248, i32* %249, align 4, !dbg !6872
  store i32 0, i32* %0, align 4, !dbg !6873
  br label %bb131, !dbg !6873

bb65:                                             ; preds = %bb58
  %250 = getelementptr inbounds %struct.ppfs_t* %224, i32 0, i32 4, !dbg !6874
  %251 = load i32* %250, align 4, !dbg !6874
  %252 = icmp ule i32 %251, 17, !dbg !6874
  br i1 %252, label %bb66, label %bb81, !dbg !6874

bb66:                                             ; preds = %bb65
  %253 = getelementptr inbounds %struct.__mbstate_t* %mbstate, i32 0, i32 0, !dbg !6875
  store i32 0, i32* %253, align 4, !dbg !6875
  %254 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6876
  %255 = getelementptr inbounds %struct.ppfs_t* %254, i32 0, i32 4, !dbg !6876
  %256 = load i32* %255, align 4, !dbg !6876
  %257 = icmp eq i32 %256, 17, !dbg !6876
  br i1 %257, label %bb67, label %bb76, !dbg !6876

bb67:                                             ; preds = %bb66
  %258 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6877
  %259 = load i8** %258, align 8, !dbg !6877
  %260 = bitcast i8* %259 to i32**, !dbg !6877
  %261 = load i32** %260, align 8, !dbg !6877
  store i32* %261, i32** %ws, align 8, !dbg !6877
  %262 = load i32** %ws, align 8, !dbg !6877
  %263 = icmp eq i32* %262, null, !dbg !6877
  br i1 %263, label %NULL_STRING, label %bb68, !dbg !6877

bb68:                                             ; preds = %bb67
  %264 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6878
  %265 = getelementptr inbounds %struct.ppfs_t* %264, i32 0, i32 1, !dbg !6878
  %266 = getelementptr inbounds %struct.printf_info* %265, i32 0, i32 0, !dbg !6878
  %267 = load i32* %266, align 8, !dbg !6878
  %268 = icmp sge i32 %267, 0, !dbg !6878
  br i1 %268, label %bb69, label %bb70, !dbg !6878

bb69:                                             ; preds = %bb68
  %269 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6878
  %270 = getelementptr inbounds %struct.ppfs_t* %269, i32 0, i32 1, !dbg !6878
  %271 = getelementptr inbounds %struct.printf_info* %270, i32 0, i32 0, !dbg !6878
  %272 = load i32* %271, align 8, !dbg !6878
  %273 = sext i32 %272 to i64, !dbg !6878
  store i64 %273, i64* %iftmp.17, align 8, !dbg !6878
  br label %bb71, !dbg !6878

bb70:                                             ; preds = %bb68
  store i64 -1, i64* %iftmp.17, align 8, !dbg !6878
  br label %bb71, !dbg !6878

bb71:                                             ; preds = %bb70, %bb69
  %ws72 = bitcast i32** %ws to i8*, !dbg !6878
  %274 = load i64* %iftmp.17, align 8, !dbg !6878
  %275 = call i64 @wcsrtombs(i8* noalias %ws72, i32** noalias %ws, i64 %274, %struct.__mbstate_t* noalias %mbstate) nounwind, !dbg !6878
  store i64 %275, i64* %slen, align 8, !dbg !6878
  %276 = load i64* %slen, align 8, !dbg !6878
  %277 = icmp eq i64 %276, -1, !dbg !6878
  br i1 %277, label %bb74, label %bb93, !dbg !6878

bb74:                                             ; preds = %bb71
  store i32 -1, i32* %0, align 4, !dbg !6879
  br label %bb131, !dbg !6879

bb76:                                             ; preds = %bb66
  %buf77 = bitcast [128 x i8]* %buf to i8*, !dbg !6880
  store i8* %buf77, i8** %s, align 8, !dbg !6880
  %278 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6881
  %279 = load i8** %278, align 8, !dbg !6881
  %280 = bitcast i8* %279 to i32*, !dbg !6881
  %281 = load i32* %280, align 4, !dbg !6881
  %282 = load i8** %s, align 8, !dbg !6881
  %283 = call i64 @wcrtomb(i8* noalias %282, i32 %281, %struct.__mbstate_t* noalias %mbstate) nounwind, !dbg !6881
  store i64 %283, i64* %slen, align 8, !dbg !6881
  %284 = load i64* %slen, align 8, !dbg !6882
  %285 = icmp eq i64 %284, -1, !dbg !6882
  br i1 %285, label %bb78, label %bb79, !dbg !6882

bb78:                                             ; preds = %bb76
  store i32 -1, i32* %0, align 4, !dbg !6883
  br label %bb131, !dbg !6883

bb79:                                             ; preds = %bb76
  %286 = load i8** %s, align 8, !dbg !6884
  %287 = load i64* %slen, align 8, !dbg !6884
  %288 = getelementptr inbounds i8* %286, i64 %287, !dbg !6884
  store i8 0, i8* %288, align 1, !dbg !6884
  br label %bb93, !dbg !6884

bb81:                                             ; preds = %bb65
  %289 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6885
  %290 = getelementptr inbounds %struct.ppfs_t* %289, i32 0, i32 4, !dbg !6885
  %291 = load i32* %290, align 4, !dbg !6885
  %292 = icmp ule i32 %291, 19, !dbg !6885
  br i1 %292, label %bb82, label %bb92, !dbg !6885

bb82:                                             ; preds = %bb81
  %293 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6886
  %294 = getelementptr inbounds %struct.ppfs_t* %293, i32 0, i32 4, !dbg !6886
  %295 = load i32* %294, align 4, !dbg !6886
  %296 = icmp eq i32 %295, 19, !dbg !6886
  br i1 %296, label %bb83, label %bb89, !dbg !6886

bb83:                                             ; preds = %bb82
  %297 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6887
  %298 = load i8** %297, align 8, !dbg !6887
  %299 = bitcast i8* %298 to i8**, !dbg !6887
  %300 = load i8** %299, align 8, !dbg !6887
  store i8* %300, i8** %s, align 8, !dbg !6887
  %301 = load i8** %s, align 8, !dbg !6888
  %302 = icmp ne i8* %301, null, !dbg !6888
  br i1 %302, label %bb84, label %NULL_STRING, !dbg !6888

bb84:                                             ; preds = %bb83
  %303 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6889
  %304 = getelementptr inbounds %struct.ppfs_t* %303, i32 0, i32 1, !dbg !6889
  %305 = getelementptr inbounds %struct.printf_info* %304, i32 0, i32 0, !dbg !6889
  %306 = load i32* %305, align 8, !dbg !6889
  %307 = icmp sge i32 %306, 0, !dbg !6889
  br i1 %307, label %bb85, label %bb86, !dbg !6889

bb85:                                             ; preds = %bb84
  %308 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6889
  %309 = getelementptr inbounds %struct.ppfs_t* %308, i32 0, i32 1, !dbg !6889
  %310 = getelementptr inbounds %struct.printf_info* %309, i32 0, i32 0, !dbg !6889
  %311 = load i32* %310, align 8, !dbg !6889
  %312 = sext i32 %311 to i64, !dbg !6889
  store i64 %312, i64* %iftmp.19, align 8, !dbg !6889
  br label %bb87, !dbg !6889

bb86:                                             ; preds = %bb84
  store i64 -1, i64* %iftmp.19, align 8, !dbg !6889
  br label %bb87, !dbg !6889

bb87:                                             ; preds = %bb86, %bb85
  %313 = load i8** %s, align 8, !dbg !6889
  %314 = load i64* %iftmp.19, align 8, !dbg !6889
  %315 = call i64 @strnlen(i8* %313, i64 %314) nounwind readonly, !dbg !6889
  store i64 %315, i64* %slen, align 8, !dbg !6889
  br label %bb93, !dbg !6889

NULL_STRING:                                      ; preds = %bb83, %bb67
  store i8* getelementptr inbounds ([7 x i8]* @.str1233, i64 0, i64 0), i8** %s, align 8, !dbg !6890
  store i64 6, i64* %slen, align 8, !dbg !6891
  br label %bb93, !dbg !6891

bb89:                                             ; preds = %bb82
  %buf90 = bitcast [128 x i8]* %buf to i8*, !dbg !6892
  store i8* %buf90, i8** %s, align 8, !dbg !6892
  %316 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6893
  %317 = load i8** %316, align 8, !dbg !6893
  %318 = bitcast i8* %317 to i32*, !dbg !6893
  %319 = load i32* %318, align 4, !dbg !6893
  %320 = trunc i32 %319 to i8, !dbg !6893
  %321 = load i8** %s, align 8, !dbg !6893
  store i8 %320, i8* %321, align 1, !dbg !6893
  %322 = load i8** %s, align 8, !dbg !6894
  %323 = getelementptr inbounds i8* %322, i64 1, !dbg !6894
  store i8 0, i8* %323, align 1, !dbg !6894
  store i64 1, i64* %slen, align 8, !dbg !6895
  br label %bb93, !dbg !6895

bb92:                                             ; preds = %bb81
  store i32 -1, i32* %0, align 4, !dbg !6896
  br label %bb131, !dbg !6896

bb93:                                             ; preds = %bb89, %NULL_STRING, %bb87, %bb79, %bb71, %bb57
  %324 = load i32* %numfill, align 4, !dbg !6897
  %325 = sext i32 %324 to i64, !dbg !6897
  %326 = load i64* %slen, align 8, !dbg !6897
  %327 = add i64 %325, %326, !dbg !6897
  store i64 %327, i64* %t, align 8, !dbg !6897
  %328 = load i32* %prefix_num, align 4, !dbg !6899
  %329 = icmp ne i32 %328, 11, !dbg !6899
  br i1 %329, label %bb94, label %bb98, !dbg !6899

bb94:                                             ; preds = %bb93
  %330 = load i32* %prefix_num, align 4, !dbg !6900
  %331 = icmp sle i32 %330, 5, !dbg !6900
  br i1 %331, label %bb95, label %bb96, !dbg !6900

bb95:                                             ; preds = %bb94
  store i64 1, i64* %iftmp.20, align 8, !dbg !6900
  br label %bb97, !dbg !6900

bb96:                                             ; preds = %bb94
  store i64 2, i64* %iftmp.20, align 8, !dbg !6900
  br label %bb97, !dbg !6900

bb97:                                             ; preds = %bb96, %bb95
  %332 = load i64* %iftmp.20, align 8, !dbg !6900
  %333 = load i64* %t, align 8, !dbg !6900
  %334 = add i64 %332, %333, !dbg !6900
  store i64 %334, i64* %t, align 8, !dbg !6900
  br label %bb98, !dbg !6900

bb98:                                             ; preds = %bb97, %bb93
  %335 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6901
  %336 = getelementptr inbounds %struct.ppfs_t* %335, i32 0, i32 1, !dbg !6901
  %337 = getelementptr inbounds %struct.printf_info* %336, i32 0, i32 1, !dbg !6901
  %338 = load i32* %337, align 4, !dbg !6901
  %339 = sext i32 %338 to i64, !dbg !6901
  %340 = load i64* %t, align 8, !dbg !6901
  %341 = icmp ugt i64 %339, %340, !dbg !6901
  br i1 %341, label %bb99, label %bb100, !dbg !6901

bb99:                                             ; preds = %bb98
  %342 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6901
  %343 = getelementptr inbounds %struct.ppfs_t* %342, i32 0, i32 1, !dbg !6901
  %344 = getelementptr inbounds %struct.printf_info* %343, i32 0, i32 1, !dbg !6901
  %345 = load i32* %344, align 4, !dbg !6901
  %346 = load i64* %t, align 8, !dbg !6901
  %347 = trunc i64 %346 to i32, !dbg !6901
  %348 = sub i32 %345, %347, !dbg !6901
  store i32 %348, i32* %iftmp.21, align 4, !dbg !6901
  br label %bb101, !dbg !6901

bb100:                                            ; preds = %bb98
  store i32 0, i32* %iftmp.21, align 4, !dbg !6901
  br label %bb101, !dbg !6901

bb101:                                            ; preds = %bb100, %bb99
  %349 = load i32* %iftmp.21, align 4, !dbg !6901
  store i32 %349, i32* %numpad, align 4, !dbg !6901
  %350 = load i32** %count_addr, align 8, !dbg !6902
  %351 = load i32* %350, align 4, !dbg !6902
  %352 = load i64* %t, align 8, !dbg !6902
  %353 = trunc i64 %352 to i32, !dbg !6902
  %354 = load i32* %numpad, align 4, !dbg !6902
  %355 = add i32 %353, %354, !dbg !6902
  %356 = add i32 %351, %355, !dbg !6902
  %357 = load i32** %count_addr, align 8, !dbg !6902
  store i32 %356, i32* %357, align 4, !dbg !6902
  %358 = load i8* %padchar, align 1, !dbg !6903
  %359 = icmp eq i8 %358, 48, !dbg !6903
  br i1 %359, label %bb102, label %bb103, !dbg !6903

bb102:                                            ; preds = %bb101
  %360 = load i32* %numfill, align 4, !dbg !6904
  %361 = load i32* %numpad, align 4, !dbg !6904
  %362 = add nsw i32 %360, %361, !dbg !6904
  store i32 %362, i32* %numfill, align 4, !dbg !6904
  store i32 0, i32* %numpad, align 4, !dbg !6905
  br label %bb103, !dbg !6905

bb103:                                            ; preds = %bb102, %bb101
  %363 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6906
  %364 = getelementptr inbounds %struct.ppfs_t* %363, i32 0, i32 1, !dbg !6906
  %365 = getelementptr inbounds %struct.printf_info* %364, i32 0, i32 3, !dbg !6906
  %366 = load i32* %365, align 4, !dbg !6906
  %367 = and i32 %366, 8, !dbg !6906
  %368 = icmp eq i32 %367, 0, !dbg !6906
  br i1 %368, label %bb104, label %bb107, !dbg !6906

bb104:                                            ; preds = %bb103
  %369 = load i32* %numpad, align 4, !dbg !6907
  %370 = sext i32 %369 to i64, !dbg !6907
  %371 = load %4** %stream_addr, align 8, !dbg !6907
  %372 = call i64 @_charpad(%4* noalias %371, i32 32, i64 %370) nounwind, !dbg !6907
  %373 = load i32* %numpad, align 4, !dbg !6907
  %374 = sext i32 %373 to i64, !dbg !6907
  %375 = icmp ne i64 %372, %374, !dbg !6907
  br i1 %375, label %bb105, label %bb106, !dbg !6907

bb105:                                            ; preds = %bb104
  store i32 -1, i32* %0, align 4, !dbg !6908
  br label %bb131, !dbg !6908

bb106:                                            ; preds = %bb104
  store i32 0, i32* %numpad, align 4, !dbg !6909
  br label %bb107, !dbg !6909

bb107:                                            ; preds = %bb106, %bb103
  %376 = load i32* %prefix_num, align 4, !dbg !6910
  %377 = sext i32 %376 to i64, !dbg !6910
  %378 = getelementptr inbounds i8* getelementptr inbounds ([12 x i8]* @prefix.3675, i64 0, i64 0), i64 %377, !dbg !6910
  %379 = load %4** %stream_addr, align 8, !dbg !6910
  %380 = call i32 @fputs_unlocked(i8* noalias %378, %4* noalias %379) nounwind, !dbg !6910
  %381 = load i32* %numfill, align 4, !dbg !6911
  %382 = sext i32 %381 to i64, !dbg !6911
  %383 = load %4** %stream_addr, align 8, !dbg !6911
  %384 = call i64 @_charpad(%4* noalias %383, i32 48, i64 %382) nounwind, !dbg !6911
  %385 = load i32* %numfill, align 4, !dbg !6911
  %386 = sext i32 %385 to i64, !dbg !6911
  %387 = icmp ne i64 %384, %386, !dbg !6911
  br i1 %387, label %bb108, label %bb109, !dbg !6911

bb108:                                            ; preds = %bb107
  store i32 -1, i32* %0, align 4, !dbg !6912
  br label %bb131, !dbg !6912

bb109:                                            ; preds = %bb107
  %388 = load i32** %ws, align 8, !dbg !6913
  %389 = icmp eq i32* %388, null, !dbg !6913
  br i1 %389, label %bb110, label %bb116, !dbg !6913

bb110:                                            ; preds = %bb109
  %390 = load i64* %slen, align 8, !dbg !6914
  %391 = icmp ne i64 %390, 0, !dbg !6914
  br i1 %391, label %bb111, label %bb112, !dbg !6914

bb111:                                            ; preds = %bb110
  %392 = load i8** %s, align 8, !dbg !6914
  %393 = load i64* %slen, align 8, !dbg !6914
  %394 = load %4** %stream_addr, align 8, !dbg !6914
  %395 = call i64 @__stdio_fwrite(i8* noalias %392, i64 %393, %4* noalias %394) nounwind, !dbg !6914
  store i64 %395, i64* %iftmp.24, align 8, !dbg !6914
  br label %bb113, !dbg !6914

bb112:                                            ; preds = %bb110
  store i64 0, i64* %iftmp.24, align 8, !dbg !6914
  br label %bb113, !dbg !6914

bb113:                                            ; preds = %bb112, %bb111
  %396 = load i64* %iftmp.24, align 8, !dbg !6914
  %397 = load i64* %slen, align 8, !dbg !6914
  %398 = icmp ne i64 %396, %397, !dbg !6914
  br i1 %398, label %bb114, label %bb128, !dbg !6914

bb114:                                            ; preds = %bb113
  store i32 -1, i32* %0, align 4, !dbg !6915
  br label %bb131, !dbg !6915

bb116:                                            ; preds = %bb109
  %399 = getelementptr inbounds %struct.__mbstate_t* %mbstate, i32 0, i32 0, !dbg !6916
  store i32 0, i32* %399, align 4, !dbg !6916
  br label %bb127, !dbg !6916

bb118:                                            ; preds = %bb127
  %400 = load i64* %slen, align 8, !dbg !6918
  %401 = icmp ule i64 %400, 128, !dbg !6918
  %min = select i1 %401, i64 %400, i64 128, !dbg !6918
  store i64 %min, i64* %t117, align 8, !dbg !6918
  %buf119 = bitcast [128 x i8]* %buf to i8*, !dbg !6919
  %402 = load i64* %t117, align 8, !dbg !6919
  %403 = call i64 @wcsrtombs(i8* noalias %buf119, i32** noalias %ws, i64 %402, %struct.__mbstate_t* noalias %mbstate) nounwind, !dbg !6919
  store i64 %403, i64* %t117, align 8, !dbg !6919
  %404 = load i64* %t117, align 8, !dbg !6920
  %405 = icmp ne i64 %404, 0, !dbg !6920
  br i1 %405, label %bb120, label %bb123, !dbg !6920

bb120:                                            ; preds = %bb118
  %buf121 = bitcast [128 x i8]* %buf to i8*, !dbg !6920
  %406 = load i64* %t117, align 8, !dbg !6920
  %407 = load %4** %stream_addr, align 8, !dbg !6920
  %408 = call i64 @__stdio_fwrite(i8* noalias %buf121, i64 %406, %4* noalias %407) nounwind, !dbg !6920
  store i64 %408, i64* %iftmp.26, align 8, !dbg !6920
  br label %bb124, !dbg !6920

bb123:                                            ; preds = %bb118
  store i64 0, i64* %iftmp.26, align 8, !dbg !6920
  br label %bb124, !dbg !6920

bb124:                                            ; preds = %bb123, %bb120
  %409 = load i64* %iftmp.26, align 8, !dbg !6920
  %410 = load i64* %t117, align 8, !dbg !6920
  %411 = icmp ne i64 %409, %410, !dbg !6920
  br i1 %411, label %bb125, label %bb126, !dbg !6920

bb125:                                            ; preds = %bb124
  store i32 -1, i32* %0, align 4, !dbg !6921
  br label %bb131, !dbg !6921

bb126:                                            ; preds = %bb124
  %412 = load i64* %slen, align 8, !dbg !6922
  %413 = load i64* %t117, align 8, !dbg !6922
  %414 = sub i64 %412, %413, !dbg !6922
  store i64 %414, i64* %slen, align 8, !dbg !6922
  br label %bb127, !dbg !6922

bb127:                                            ; preds = %bb126, %bb116
  %415 = load i64* %slen, align 8, !dbg !6923
  %416 = icmp ne i64 %415, 0, !dbg !6923
  br i1 %416, label %bb118, label %bb128, !dbg !6923

bb128:                                            ; preds = %bb113, %bb127
  %417 = load i32* %numpad, align 4, !dbg !6924
  %418 = sext i32 %417 to i64, !dbg !6924
  %419 = load %4** %stream_addr, align 8, !dbg !6924
  %420 = call i64 @_charpad(%4* noalias %419, i32 32, i64 %418) nounwind, !dbg !6924
  %421 = load i32* %numpad, align 4, !dbg !6924
  %422 = sext i32 %421 to i64, !dbg !6924
  %423 = icmp ne i64 %420, %422, !dbg !6924
  br i1 %423, label %bb129, label %bb130, !dbg !6924

bb129:                                            ; preds = %bb128
  store i32 -1, i32* %0, align 4, !dbg !6925
  br label %bb131, !dbg !6925

bb130:                                            ; preds = %bb128
  store i32 0, i32* %0, align 4, !dbg !6926
  br label %bb131, !dbg !6926

bb131:                                            ; preds = %bb130, %bb129, %bb125, %bb114, %bb108, %bb105, %bb92, %bb78, %bb74, %bb64, %bb63, %bb5
  %424 = load i32* %0, align 4, !dbg !6822
  store i32 %424, i32* %retval, align 4, !dbg !6822
  %retval132 = load i32* %retval, !dbg !6822
  ret i32 %retval132, !dbg !6822
}

define i32 @vfprintf(%4* noalias %stream, i8* noalias %format, %struct.__va_list_tag* %arg) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %format_addr = alloca i8*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.31 = alloca i32
  %iftmp.28 = alloca i64
  %ppfs = alloca %struct.ppfs_t
  %count = alloca i32
  %r = alloca i32
  %s = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  store i32 0, i32* %count, align 4, !dbg !6927
  %1 = load i8** %format_addr, align 8, !dbg !6929
  store i8* %1, i8** %s, align 8, !dbg !6929
  %2 = load %4** %stream_addr, align 8, !dbg !6930
  %3 = getelementptr inbounds %4* %2, i32 0, i32 0, !dbg !6930
  %4 = load i16* %3, align 8, !dbg !6930
  %5 = zext i16 %4 to i32, !dbg !6930
  %6 = and i32 %5, 192, !dbg !6930
  %7 = icmp eq i32 %6, 192, !dbg !6930
  br i1 %7, label %bb2, label %bb, !dbg !6930

bb:                                               ; preds = %entry
  %8 = load %4** %stream_addr, align 8, !dbg !6930
  %9 = call i32 @__stdio_trans2w_o(%4* noalias %8, i32 128) nounwind, !dbg !6930
  %10 = icmp eq i32 %9, 0, !dbg !6930
  br i1 %10, label %bb2, label %bb1, !dbg !6930

bb1:                                              ; preds = %bb
  store i32 -1, i32* %count, align 4, !dbg !6931
  br label %bb27, !dbg !6931

bb2:                                              ; preds = %bb, %entry
  %11 = load i8** %format_addr, align 8, !dbg !6932
  %12 = call i32 @_ppfs_init(%struct.ppfs_t* %ppfs, i8* %11) nounwind, !dbg !6932
  %13 = icmp slt i32 %12, 0, !dbg !6932
  br i1 %13, label %bb3, label %bb7, !dbg !6932

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6933
  %15 = load i8** %14, align 16, !dbg !6933
  %16 = call i64 @strlen(i8* %15) nounwind readonly, !dbg !6933
  %17 = icmp ne i64 %16, 0, !dbg !6933
  br i1 %17, label %bb4, label %bb5, !dbg !6933

bb4:                                              ; preds = %bb3
  %18 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6933
  %19 = load i8** %18, align 16, !dbg !6933
  %20 = call i64 @strlen(i8* %19) nounwind readonly, !dbg !6933
  %21 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6933
  %22 = load i8** %21, align 16, !dbg !6933
  %23 = load %4** %stream_addr, align 8, !dbg !6933
  %24 = call i64 @__stdio_fwrite(i8* noalias %22, i64 %20, %4* noalias %23) nounwind, !dbg !6933
  store i64 %24, i64* %iftmp.28, align 8, !dbg !6933
  br label %bb6, !dbg !6933

bb5:                                              ; preds = %bb3
  store i64 0, i64* %iftmp.28, align 8, !dbg !6933
  br label %bb6, !dbg !6933

bb6:                                              ; preds = %bb5, %bb4
  store i32 -1, i32* %count, align 4, !dbg !6934
  br label %bb27, !dbg !6934

bb7:                                              ; preds = %bb2
  %25 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6935
  call void @_ppfs_prepargs(%struct.ppfs_t* %ppfs, %struct.__va_list_tag* %25) nounwind, !dbg !6935
  br label %bb10, !dbg !6935

bb9:                                              ; preds = %bb11
  %26 = load i8** %format_addr, align 8, !dbg !6936
  %27 = getelementptr inbounds i8* %26, i64 1, !dbg !6936
  store i8* %27, i8** %format_addr, align 8, !dbg !6936
  br label %bb10, !dbg !6936

bb10:                                             ; preds = %bb23, %bb24, %bb7, %bb9
  %28 = load i8** %format_addr, align 8, !dbg !6937
  %29 = load i8* %28, align 1, !dbg !6937
  %30 = icmp eq i8 %29, 0, !dbg !6937
  br i1 %30, label %bb12, label %bb11, !dbg !6937

bb11:                                             ; preds = %bb10
  %31 = load i8** %format_addr, align 8, !dbg !6937
  %32 = load i8* %31, align 1, !dbg !6937
  %33 = icmp ne i8 %32, 37, !dbg !6937
  br i1 %33, label %bb9, label %bb12, !dbg !6937

bb12:                                             ; preds = %bb11, %bb10
  %34 = load i8** %format_addr, align 8, !dbg !6938
  %35 = ptrtoint i8* %34 to i64, !dbg !6938
  %36 = load i8** %s, align 8, !dbg !6938
  %37 = ptrtoint i8* %36 to i64, !dbg !6938
  %38 = icmp ne i64 %35, %37, !dbg !6938
  br i1 %38, label %bb13, label %bb19, !dbg !6938

bb13:                                             ; preds = %bb12
  %39 = load i8** %format_addr, align 8, !dbg !6939
  %40 = ptrtoint i8* %39 to i64, !dbg !6939
  %41 = load i8** %s, align 8, !dbg !6939
  %42 = ptrtoint i8* %41 to i64, !dbg !6939
  %43 = sub nsw i64 %40, %42, !dbg !6939
  %44 = icmp sgt i64 %43, 0, !dbg !6939
  br i1 %44, label %bb14, label %bb15, !dbg !6939

bb14:                                             ; preds = %bb13
  %45 = load i8** %format_addr, align 8, !dbg !6939
  %46 = ptrtoint i8* %45 to i64, !dbg !6939
  %47 = load i8** %s, align 8, !dbg !6939
  %48 = ptrtoint i8* %47 to i64, !dbg !6939
  %49 = sub nsw i64 %46, %48, !dbg !6939
  %50 = load i8** %s, align 8, !dbg !6939
  %51 = load %4** %stream_addr, align 8, !dbg !6939
  %52 = call i64 @__stdio_fwrite(i8* noalias %50, i64 %49, %4* noalias %51) nounwind, !dbg !6939
  %53 = trunc i64 %52 to i32, !dbg !6939
  store i32 %53, i32* %iftmp.31, align 4, !dbg !6939
  br label %bb16, !dbg !6939

bb15:                                             ; preds = %bb13
  store i32 0, i32* %iftmp.31, align 4, !dbg !6939
  br label %bb16, !dbg !6939

bb16:                                             ; preds = %bb15, %bb14
  %54 = load i32* %iftmp.31, align 4, !dbg !6939
  store i32 %54, i32* %r, align 4, !dbg !6939
  %55 = load i32* %r, align 4, !dbg !6939
  %56 = sext i32 %55 to i64, !dbg !6939
  %57 = load i8** %format_addr, align 8, !dbg !6939
  %58 = ptrtoint i8* %57 to i64, !dbg !6939
  %59 = load i8** %s, align 8, !dbg !6939
  %60 = ptrtoint i8* %59 to i64, !dbg !6939
  %61 = sub nsw i64 %58, %60, !dbg !6939
  %62 = icmp ne i64 %56, %61, !dbg !6939
  br i1 %62, label %bb17, label %bb18, !dbg !6939

bb17:                                             ; preds = %bb16
  store i32 -1, i32* %count, align 4, !dbg !6940
  br label %bb26, !dbg !6940

bb18:                                             ; preds = %bb16
  %63 = load i32* %count, align 4, !dbg !6941
  %64 = load i32* %r, align 4, !dbg !6941
  %65 = add nsw i32 %63, %64, !dbg !6941
  store i32 %65, i32* %count, align 4, !dbg !6941
  br label %bb19, !dbg !6941

bb19:                                             ; preds = %bb18, %bb12
  %66 = load i8** %format_addr, align 8, !dbg !6942
  %67 = load i8* %66, align 1, !dbg !6942
  %68 = icmp eq i8 %67, 0, !dbg !6942
  br i1 %68, label %bb26, label %bb20, !dbg !6942

bb20:                                             ; preds = %bb19
  %69 = load i8** %format_addr, align 8, !dbg !6943
  %70 = getelementptr inbounds i8* %69, i64 1, !dbg !6943
  %71 = load i8* %70, align 1, !dbg !6943
  %72 = icmp ne i8 %71, 37, !dbg !6943
  %73 = load i8** %format_addr, align 8, !dbg !6944
  %74 = getelementptr inbounds i8* %73, i64 1, !dbg !6944
  store i8* %74, i8** %format_addr, align 8, !dbg !6944
  br i1 %72, label %bb21, label %bb24, !dbg !6943

bb21:                                             ; preds = %bb20
  %75 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6944
  %76 = load i8** %format_addr, align 8, !dbg !6944
  store i8* %76, i8** %75, align 16, !dbg !6944
  %77 = load %4** %stream_addr, align 8, !dbg !6945
  %78 = call i32 @_do_one_spec(%4* noalias %77, %struct.ppfs_t* %ppfs, i32* %count) nounwind, !dbg !6945
  store i32 %78, i32* %r, align 4, !dbg !6945
  %79 = load i32* %r, align 4, !dbg !6945
  %80 = icmp slt i32 %79, 0, !dbg !6945
  br i1 %80, label %bb22, label %bb23, !dbg !6945

bb22:                                             ; preds = %bb21
  store i32 -1, i32* %count, align 4, !dbg !6946
  br label %bb26, !dbg !6946

bb23:                                             ; preds = %bb21
  %81 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6947
  %82 = load i8** %81, align 16, !dbg !6947
  store i8* %82, i8** %format_addr, align 8, !dbg !6947
  %83 = load i8** %format_addr, align 8, !dbg !6947
  store i8* %83, i8** %s, align 8, !dbg !6947
  br label %bb10, !dbg !6947

bb24:                                             ; preds = %bb20
  %84 = load i8** %format_addr, align 8, !dbg !6948
  store i8* %84, i8** %s, align 8, !dbg !6948
  %85 = load i8** %format_addr, align 8, !dbg !6949
  %86 = getelementptr inbounds i8* %85, i64 1, !dbg !6949
  store i8* %86, i8** %format_addr, align 8, !dbg !6949
  br label %bb10, !dbg !6949

bb26:                                             ; preds = %bb22, %bb19, %bb17
  %87 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 7, !dbg !6950
  %88 = getelementptr inbounds [1 x %struct.__va_list_tag]* %87, i64 0, i64 0, !dbg !6950
  %89 = bitcast %struct.__va_list_tag* %88 to i8*, !dbg !6950
  call void @llvm.va_end(i8* %89), !dbg !6950
  br label %bb27, !dbg !6950

bb27:                                             ; preds = %bb26, %bb6, %bb1
  %90 = load i32* %count, align 4, !dbg !6951
  store i32 %90, i32* %0, align 4, !dbg !6951
  %91 = load i32* %0, align 4, !dbg !6951
  store i32 %91, i32* %retval, align 4, !dbg !6951
  %retval28 = load i32* %retval, !dbg !6951
  ret i32 %retval28, !dbg !6951
}

define internal i32 @sc_getc(%struct.scan_cookie* %sc) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %1 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6952
  %2 = getelementptr inbounds %struct.scan_cookie* %1, i32 0, i32 2, !dbg !6952
  %3 = load %4** %2, align 8, !dbg !6952
  %4 = call i32 @__fgetc_unlocked(%4* %3) nounwind, !dbg !6952
  store i32 %4, i32* %0, align 4, !dbg !6952
  %5 = load i32* %0, align 4, !dbg !6952
  store i32 %5, i32* %retval, align 4, !dbg !6952
  %retval1 = load i32* %retval, !dbg !6952
  ret i32 %retval1, !dbg !6952
}

define internal i32 @scan_getwc(%struct.scan_cookie* %sc) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i64
  %width = alloca i32
  %wc = alloca [1 x i32]
  %b = alloca [1 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %1 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6954
  %2 = getelementptr inbounds %struct.scan_cookie* %1, i32 0, i32 4, !dbg !6954
  %3 = load i32* %2, align 4, !dbg !6954
  %4 = sub nsw i32 %3, 1, !dbg !6954
  %5 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6954
  %6 = getelementptr inbounds %struct.scan_cookie* %5, i32 0, i32 4, !dbg !6954
  store i32 %4, i32* %6, align 4, !dbg !6954
  %7 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6954
  %8 = getelementptr inbounds %struct.scan_cookie* %7, i32 0, i32 4, !dbg !6954
  %9 = load i32* %8, align 4, !dbg !6954
  %10 = icmp slt i32 %9, 0, !dbg !6954
  %11 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6956
  br i1 %10, label %bb, label %bb1, !dbg !6954

bb:                                               ; preds = %entry
  %12 = getelementptr inbounds %struct.scan_cookie* %11, i32 0, i32 7, !dbg !6956
  %13 = load i8* %12, align 1, !dbg !6956
  %14 = or i8 %13, 2, !dbg !6956
  %15 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6956
  %16 = getelementptr inbounds %struct.scan_cookie* %15, i32 0, i32 7, !dbg !6956
  store i8 %14, i8* %16, align 1, !dbg !6956
  store i32 -1, i32* %0, align 4, !dbg !6957
  br label %bb12, !dbg !6957

bb1:                                              ; preds = %entry
  %17 = getelementptr inbounds %struct.scan_cookie* %11, i32 0, i32 4, !dbg !6958
  %18 = load i32* %17, align 4, !dbg !6958
  store i32 %18, i32* %width, align 4, !dbg !6958
  %19 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6959
  %20 = getelementptr inbounds %struct.scan_cookie* %19, i32 0, i32 4, !dbg !6959
  store i32 2147483647, i32* %20, align 4, !dbg !6959
  store i64 -3, i64* %r, align 8, !dbg !6960
  br label %bb8, !dbg !6960

bb2:                                              ; preds = %bb8
  %21 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6961
  %22 = getelementptr inbounds %struct.scan_cookie* %21, i32 0, i32 0, !dbg !6961
  %23 = load i32* %22, align 8, !dbg !6961
  %24 = trunc i32 %23 to i8, !dbg !6961
  %25 = getelementptr inbounds [1 x i8]* %b, i64 0, i64 0, !dbg !6961
  store i8 %24, i8* %25, align 1, !dbg !6961
  %26 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6962
  %27 = getelementptr inbounds %struct.scan_cookie* %26, i32 0, i32 10, !dbg !6962
  %wc3 = bitcast [1 x i32]* %wc to i32*, !dbg !6962
  %b4 = bitcast [1 x i8]* %b to i8*, !dbg !6962
  %28 = call i64 @mbrtowc(i32* noalias %wc3, i8* noalias %b4, i64 1, %struct.__mbstate_t* %27) nounwind, !dbg !6962
  store i64 %28, i64* %r, align 8, !dbg !6962
  %29 = load i64* %r, align 8, !dbg !6963
  %30 = icmp sge i64 %29, 0, !dbg !6963
  br i1 %30, label %bb5, label %bb6, !dbg !6963

bb5:                                              ; preds = %bb2
  %31 = getelementptr inbounds [1 x i32]* %wc, i64 0, i64 0, !dbg !6964
  %32 = load i32* %31, align 4, !dbg !6964
  %33 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6964
  %34 = getelementptr inbounds %struct.scan_cookie* %33, i32 0, i32 11, !dbg !6964
  store i32 %32, i32* %34, align 8, !dbg !6964
  br label %SUCCESS, !dbg !6964

bb6:                                              ; preds = %bb2
  %35 = load i64* %r, align 8, !dbg !6965
  %36 = icmp eq i64 %35, -2, !dbg !6965
  br i1 %36, label %bb8, label %bb9, !dbg !6965

bb8:                                              ; preds = %bb6, %bb1
  %37 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6966
  %38 = call i32 @__scan_getc(%struct.scan_cookie* %37) nounwind, !dbg !6966
  %39 = icmp sge i32 %38, 0, !dbg !6966
  br i1 %39, label %bb2, label %bb9, !dbg !6966

bb9:                                              ; preds = %bb6, %bb8
  %40 = load i64* %r, align 8, !dbg !6967
  %41 = icmp eq i64 %40, -3, !dbg !6967
  br i1 %41, label %bb10, label %bb11, !dbg !6967

bb10:                                             ; preds = %bb9
  %42 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6968
  %43 = getelementptr inbounds %struct.scan_cookie* %42, i32 0, i32 11, !dbg !6968
  store i32 -1, i32* %43, align 8, !dbg !6968
  store i64 -1, i64* %r, align 8, !dbg !6969
  br label %SUCCESS, !dbg !6969

bb11:                                             ; preds = %bb9
  store i32 84, i32* @errno, align 4, !dbg !6970
  %44 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6971
  %45 = getelementptr inbounds %struct.scan_cookie* %44, i32 0, i32 9, !dbg !6971
  store i8 1, i8* %45, align 1, !dbg !6971
  br label %SUCCESS, !dbg !6972

SUCCESS:                                          ; preds = %bb11, %bb10, %bb5
  %46 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6973
  %47 = getelementptr inbounds %struct.scan_cookie* %46, i32 0, i32 4, !dbg !6973
  %48 = load i32* %width, align 4, !dbg !6973
  store i32 %48, i32* %47, align 4, !dbg !6973
  %49 = load i64* %r, align 8, !dbg !6974
  %50 = trunc i64 %49 to i32, !dbg !6974
  store i32 %50, i32* %0, align 4, !dbg !6974
  br label %bb12, !dbg !6974

bb12:                                             ; preds = %SUCCESS, %bb
  %51 = load i32* %0, align 4, !dbg !6957
  store i32 %51, i32* %retval, align 4, !dbg !6957
  %retval13 = load i32* %retval, !dbg !6957
  ret i32 %retval13, !dbg !6957
}

define i32 @vfscanf(%4* noalias %fp, i8* noalias %format, %struct.__va_list_tag* %arg) nounwind {
entry:
  %fp_addr = alloca %4*, align 8
  %format_addr = alloca i8*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.11 = alloca i32*
  %iftmp.8 = alloca i8*
  %addr.5 = alloca i8*
  %addr.3 = alloca i8*
  %fmt = alloca i8*
  %b = alloca i8*
  %sc = alloca %struct.scan_cookie
  %psfs = alloca %struct.psfs_t
  %i = alloca i32
  %buf = alloca [67 x i8]
  %scanset = alloca [256 x i8]
  %invert = alloca i8
  %fail = alloca i8
  %zero_conversions = alloca i8
  %r = alloca i32
  %wbuf = alloca [1 x i32]
  %wb = alloca i32*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %fp, %4** %fp_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  store i8 1, i8* %zero_conversions, align 1, !dbg !6975
  %1 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !6977
  store i32 -1, i32* %1, align 8, !dbg !6977
  %2 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 0, !dbg !6978
  %3 = getelementptr inbounds [9 x i8*]* %2, i64 0, i64 0, !dbg !6978
  %4 = bitcast i8** %3 to i8*, !dbg !6978
  %5 = call i8* @memset(i8* %4, i32 0, i64 72) nounwind, !dbg !6978
  %6 = load %4** %fp_addr, align 8, !dbg !6979
  call void @__init_scan_cookie(%struct.scan_cookie* %sc, %4* %6) nounwind, !dbg !6979
  %7 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 13, !dbg !6980
  store i32 (%struct.scan_cookie*)* @sc_getc, i32 (%struct.scan_cookie*)** %7, align 8, !dbg !6980
  %8 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 2, !dbg !6981
  %9 = load %4** %8, align 8, !dbg !6981
  %10 = getelementptr inbounds %4* %9, i32 0, i32 1, !dbg !6981
  %11 = getelementptr inbounds [2 x i8]* %10, i64 0, i64 1, !dbg !6981
  %12 = load i8* %11, align 1, !dbg !6981
  %13 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 6, !dbg !6981
  store i8 %12, i8* %13, align 4, !dbg !6981
  %14 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 14, !dbg !6982
  %15 = load i8** %14, align 8, !dbg !6982
  %16 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 17, !dbg !6982
  store i8* %15, i8** %16, align 8, !dbg !6982
  %17 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !6983
  store i32 0, i32* %17, align 8, !dbg !6983
  %18 = load i8** %format_addr, align 8, !dbg !6984
  store i8* %18, i8** %fmt, align 8, !dbg !6984
  br label %bb104, !dbg !6984

bb:                                               ; preds = %bb104
  %19 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6985
  store i8 1, i8* %19, align 8, !dbg !6985
  %20 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 10, !dbg !6986
  store i8 0, i8* %20, align 1, !dbg !6986
  %21 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 7, !dbg !6987
  %22 = load i8* %21, align 1, !dbg !6987
  %23 = and i8 %22, 1, !dbg !6987
  %24 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 7, !dbg !6987
  store i8 %23, i8* %24, align 1, !dbg !6987
  %25 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 8, !dbg !6988
  store i32 2147483647, i32* %25, align 4, !dbg !6988
  %26 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 8, !dbg !6988
  %27 = load i32* %26, align 4, !dbg !6988
  %28 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !6988
  store i32 %27, i32* %28, align 4, !dbg !6988
  %29 = load i16** @__ctype_b, align 8, !dbg !6989
  %30 = load i8** %fmt, align 8, !dbg !6989
  %31 = load i8* %30, align 1, !dbg !6989
  %32 = zext i8 %31 to i32, !dbg !6989
  %33 = sext i32 %32 to i64, !dbg !6989
  %34 = getelementptr inbounds i16* %29, i64 %33, !dbg !6989
  %35 = load i16* %34, align 1, !dbg !6989
  %36 = zext i16 %35 to i32, !dbg !6989
  %37 = and i32 %36, 8192, !dbg !6989
  %38 = icmp ne i32 %37, 0, !dbg !6989
  br i1 %38, label %bb1, label %bb3, !dbg !6989

bb1:                                              ; preds = %bb1, %bb
  %39 = load i8** %fmt, align 8, !dbg !6990
  %40 = getelementptr inbounds i8* %39, i64 1, !dbg !6990
  store i8* %40, i8** %fmt, align 8, !dbg !6990
  %41 = load i16** @__ctype_b, align 8, !dbg !6991
  %42 = load i8** %fmt, align 8, !dbg !6991
  %43 = load i8* %42, align 1, !dbg !6991
  %44 = zext i8 %43 to i32, !dbg !6991
  %45 = sext i32 %44 to i64, !dbg !6991
  %46 = getelementptr inbounds i16* %41, i64 %45, !dbg !6991
  %47 = load i16* %46, align 1, !dbg !6991
  %48 = zext i16 %47 to i32, !dbg !6991
  %49 = and i32 %48, 8192, !dbg !6991
  %50 = icmp ne i32 %49, 0, !dbg !6991
  br i1 %50, label %bb1, label %bb2, !dbg !6991

bb2:                                              ; preds = %bb1
  %51 = load i8** %fmt, align 8, !dbg !6992
  %52 = getelementptr inbounds i8* %51, i64 -1, !dbg !6992
  store i8* %52, i8** %fmt, align 8, !dbg !6992
  %53 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6993
  store i32 23, i32* %53, align 8, !dbg !6993
  br label %DO_WHITESPACE, !dbg !6993

bb3:                                              ; preds = %bb
  %54 = load i8** %fmt, align 8, !dbg !6994
  %55 = load i8* %54, align 1, !dbg !6994
  %56 = icmp eq i8 %55, 37, !dbg !6994
  br i1 %56, label %bb4, label %MATCH_CHAR, !dbg !6994

bb4:                                              ; preds = %bb3
  %57 = load i8** %fmt, align 8, !dbg !6995
  %58 = getelementptr inbounds i8* %57, i64 1, !dbg !6995
  store i8* %58, i8** %fmt, align 8, !dbg !6995
  %59 = load i8** %fmt, align 8, !dbg !6995
  %60 = load i8* %59, align 1, !dbg !6995
  %61 = icmp eq i8 %60, 37, !dbg !6995
  br i1 %61, label %bb5, label %bb6, !dbg !6995

bb5:                                              ; preds = %bb4
  %62 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6996
  store i32 22, i32* %62, align 8, !dbg !6996
  br label %DO_CONVERSION, !dbg !6996

bb6:                                              ; preds = %bb4
  %63 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 4, !dbg !6997
  %64 = load i8** %fmt, align 8, !dbg !6997
  store i8* %64, i8** %63, align 8, !dbg !6997
  %65 = call i32 @__psfs_parse_spec(%struct.psfs_t* %psfs) nounwind, !dbg !6998
  store i32 %65, i32* %i, align 4, !dbg !6998
  %66 = load i32* %i, align 4, !dbg !6998
  %67 = icmp slt i32 %66, 0, !dbg !6998
  br i1 %67, label %DONE, label %bb7, !dbg !6998

bb7:                                              ; preds = %bb6
  %68 = load i8** %fmt, align 8, !dbg !6999
  %69 = load i32* %i, align 4, !dbg !6999
  %70 = sext i32 %69 to i64, !dbg !6999
  %71 = getelementptr inbounds i8* %68, i64 %70, !dbg !6999
  store i8* %71, i8** %fmt, align 8, !dbg !6999
  %72 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7000
  %73 = load i8* %72, align 8, !dbg !7000
  %74 = icmp ne i8 %73, 0, !dbg !7000
  br i1 %74, label %bb8, label %DO_CONVERSION, !dbg !7000

bb8:                                              ; preds = %bb7
  %75 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !7001
  %76 = load i32* %75, align 8, !dbg !7001
  %77 = icmp eq i32 %76, -2, !dbg !7001
  br i1 %77, label %bb9, label %bb18, !dbg !7001

bb9:                                              ; preds = %bb8
  %78 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7002
  %79 = getelementptr inbounds %struct.__va_list_tag* %78, i32 0, i32 0, !dbg !7002
  %80 = load i32* %79, align 8, !dbg !7002
  %81 = icmp uge i32 %80, 48, !dbg !7002
  %82 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7002
  br i1 %81, label %bb11, label %bb10, !dbg !7002

bb10:                                             ; preds = %bb9
  %83 = getelementptr inbounds %struct.__va_list_tag* %82, i32 0, i32 3, !dbg !7002
  %84 = load i8** %83, align 8, !dbg !7002
  %85 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7002
  %86 = getelementptr inbounds %struct.__va_list_tag* %85, i32 0, i32 0, !dbg !7002
  %87 = load i32* %86, align 8, !dbg !7002
  %88 = inttoptr i32 %87 to i8*, !dbg !7002
  %89 = ptrtoint i8* %84 to i64, !dbg !7002
  %90 = ptrtoint i8* %88 to i64, !dbg !7002
  %91 = add i64 %89, %90, !dbg !7002
  %92 = inttoptr i64 %91 to i8*, !dbg !7002
  store i8* %92, i8** %addr.3, align 8, !dbg !7002
  %93 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7002
  %94 = getelementptr inbounds %struct.__va_list_tag* %93, i32 0, i32 0, !dbg !7002
  %95 = load i32* %94, align 8, !dbg !7002
  %96 = add i32 %95, 8, !dbg !7002
  %97 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7002
  %98 = getelementptr inbounds %struct.__va_list_tag* %97, i32 0, i32 0, !dbg !7002
  store i32 %96, i32* %98, align 8, !dbg !7002
  br label %bb12, !dbg !7002

bb11:                                             ; preds = %bb9
  %99 = getelementptr inbounds %struct.__va_list_tag* %82, i32 0, i32 2, !dbg !7002
  %100 = load i8** %99, align 8, !dbg !7002
  store i8* %100, i8** %addr.3, align 8, !dbg !7002
  %101 = getelementptr inbounds i8* %100, i64 8, !dbg !7002
  %102 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7002
  %103 = getelementptr inbounds %struct.__va_list_tag* %102, i32 0, i32 2, !dbg !7002
  store i8* %101, i8** %103, align 8, !dbg !7002
  br label %bb12, !dbg !7002

bb12:                                             ; preds = %bb11, %bb10
  %104 = load i8** %addr.3, align 8, !dbg !7002
  %105 = bitcast i8* %104 to i8**, !dbg !7002
  %106 = load i8** %105, align 8, !dbg !7002
  %107 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !7002
  store i8* %106, i8** %107, align 8, !dbg !7002
  br label %DO_CONVERSION, !dbg !7002

bb14:                                             ; preds = %bb18
  %108 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !7003
  %109 = load i32* %108, align 8, !dbg !7003
  %110 = add nsw i32 %109, 1, !dbg !7003
  %111 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !7003
  store i32 %110, i32* %111, align 8, !dbg !7003
  %112 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !7003
  %113 = load i32* %112, align 8, !dbg !7003
  %114 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7003
  %115 = getelementptr inbounds %struct.__va_list_tag* %114, i32 0, i32 0, !dbg !7003
  %116 = load i32* %115, align 8, !dbg !7003
  %117 = icmp uge i32 %116, 48, !dbg !7003
  %118 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7003
  br i1 %117, label %bb16, label %bb15, !dbg !7003

bb15:                                             ; preds = %bb14
  %119 = getelementptr inbounds %struct.__va_list_tag* %118, i32 0, i32 3, !dbg !7003
  %120 = load i8** %119, align 8, !dbg !7003
  %121 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7003
  %122 = getelementptr inbounds %struct.__va_list_tag* %121, i32 0, i32 0, !dbg !7003
  %123 = load i32* %122, align 8, !dbg !7003
  %124 = inttoptr i32 %123 to i8*, !dbg !7003
  %125 = ptrtoint i8* %120 to i64, !dbg !7003
  %126 = ptrtoint i8* %124 to i64, !dbg !7003
  %127 = add i64 %125, %126, !dbg !7003
  %128 = inttoptr i64 %127 to i8*, !dbg !7003
  store i8* %128, i8** %addr.5, align 8, !dbg !7003
  %129 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7003
  %130 = getelementptr inbounds %struct.__va_list_tag* %129, i32 0, i32 0, !dbg !7003
  %131 = load i32* %130, align 8, !dbg !7003
  %132 = add i32 %131, 8, !dbg !7003
  %133 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7003
  %134 = getelementptr inbounds %struct.__va_list_tag* %133, i32 0, i32 0, !dbg !7003
  store i32 %132, i32* %134, align 8, !dbg !7003
  br label %bb17, !dbg !7003

bb16:                                             ; preds = %bb14
  %135 = getelementptr inbounds %struct.__va_list_tag* %118, i32 0, i32 2, !dbg !7003
  %136 = load i8** %135, align 8, !dbg !7003
  store i8* %136, i8** %addr.5, align 8, !dbg !7003
  %137 = getelementptr inbounds i8* %136, i64 8, !dbg !7003
  %138 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7003
  %139 = getelementptr inbounds %struct.__va_list_tag* %138, i32 0, i32 2, !dbg !7003
  store i8* %137, i8** %139, align 8, !dbg !7003
  br label %bb17, !dbg !7003

bb17:                                             ; preds = %bb16, %bb15
  %140 = load i8** %addr.5, align 8, !dbg !7003
  %141 = bitcast i8* %140 to i8**, !dbg !7003
  %142 = load i8** %141, align 8, !dbg !7003
  %143 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 0, !dbg !7003
  %144 = sext i32 %113 to i64, !dbg !7003
  %145 = getelementptr inbounds [9 x i8*]* %143, i64 0, i64 %144, !dbg !7003
  store i8* %142, i8** %145, align 8, !dbg !7003
  br label %bb18, !dbg !7003

bb18:                                             ; preds = %bb8, %bb17
  %146 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 2, !dbg !7004
  %147 = load i32* %146, align 4, !dbg !7004
  %148 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !7004
  %149 = load i32* %148, align 8, !dbg !7004
  %150 = icmp sgt i32 %147, %149, !dbg !7004
  br i1 %150, label %bb14, label %bb19, !dbg !7004

bb19:                                             ; preds = %bb18
  %151 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 2, !dbg !7005
  %152 = load i32* %151, align 4, !dbg !7005
  %153 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 0, !dbg !7005
  %154 = sext i32 %152 to i64, !dbg !7005
  %155 = getelementptr inbounds [9 x i8*]* %153, i64 0, i64 %154, !dbg !7005
  %156 = load i8** %155, align 8, !dbg !7005
  %157 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !7005
  store i8* %156, i8** %157, align 8, !dbg !7005
  br label %DO_CONVERSION, !dbg !7006

DO_CONVERSION:                                    ; preds = %bb19, %bb12, %bb7, %bb5
  %158 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7007
  %159 = load i32* %158, align 8, !dbg !7007
  %.cast = zext i32 %159 to i64, !dbg !7007
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %160 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %160, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %DO_CONVERSION
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %DO_CONVERSION
  %161 = ashr i64 2949121, %.cast, !dbg !7007
  %162 = and i64 %161, 1, !dbg !7007
  %163 = icmp eq i64 %162, 0, !dbg !7007
  br i1 %163, label %DO_WHITESPACE, label %bb22, !dbg !7007

DO_WHITESPACE:                                    ; preds = %bb20, %klee_overshift_check.exit, %bb2
  %164 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !7008
  %165 = icmp slt i32 %164, 0, !dbg !7008
  br i1 %165, label %bb21, label %bb20, !dbg !7008

bb20:                                             ; preds = %DO_WHITESPACE
  %166 = load i16** @__ctype_b, align 8, !dbg !7008
  %167 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !7008
  %168 = load i32* %167, align 8, !dbg !7008
  %169 = sext i32 %168 to i64, !dbg !7008
  %170 = getelementptr inbounds i16* %166, i64 %169, !dbg !7008
  %171 = load i16* %170, align 1, !dbg !7008
  %172 = zext i16 %171 to i32, !dbg !7008
  %173 = and i32 %172, 8192, !dbg !7008
  %174 = icmp ne i32 %173, 0, !dbg !7008
  br i1 %174, label %DO_WHITESPACE, label %bb21, !dbg !7008

bb21:                                             ; preds = %bb20, %DO_WHITESPACE
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !7009
  %175 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7010
  %176 = load i32* %175, align 8, !dbg !7010
  %177 = icmp eq i32 %176, 23, !dbg !7010
  br i1 %177, label %NEXT_FMT, label %bb22, !dbg !7010

bb22:                                             ; preds = %bb21, %klee_overshift_check.exit
  %178 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 8, !dbg !7011
  %179 = load i32* %178, align 4, !dbg !7011
  %180 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7011
  store i32 %179, i32* %180, align 4, !dbg !7011
  %181 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7012
  %182 = load i32* %181, align 4, !dbg !7012
  %183 = icmp eq i32 %182, 0, !dbg !7012
  br i1 %183, label %DONE, label %bb23, !dbg !7012

bb23:                                             ; preds = %bb22
  %184 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7013
  %185 = load i32* %184, align 8, !dbg !7013
  %186 = icmp eq i32 %185, 22, !dbg !7013
  br i1 %186, label %MATCH_CHAR, label %bb24, !dbg !7013

bb24:                                             ; preds = %bb23
  %187 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7014
  %188 = load i32* %187, align 8, !dbg !7014
  %189 = icmp eq i32 %188, 0, !dbg !7014
  br i1 %189, label %bb25, label %bb28, !dbg !7014

bb25:                                             ; preds = %bb24
  %190 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7015
  %191 = load i8* %190, align 8, !dbg !7015
  %192 = icmp ne i8 %191, 0, !dbg !7015
  br i1 %192, label %bb26, label %NEXT_FMT, !dbg !7015

bb26:                                             ; preds = %bb25
  %193 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 3, !dbg !7016
  %194 = load i32* %193, align 8, !dbg !7016
  %195 = sext i32 %194 to i64, !dbg !7016
  %196 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 6, !dbg !7016
  %197 = load i32* %196, align 4, !dbg !7016
  %198 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !7016
  %199 = load i8** %198, align 8, !dbg !7016
  call void @_store_inttype(i8* %199, i32 %197, i64 %195) nounwind, !dbg !7016
  br label %NEXT_FMT, !dbg !7016

bb28:                                             ; preds = %bb24
  %200 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7017
  %201 = load i32* %200, align 8, !dbg !7017
  %202 = icmp sle i32 %201, 15, !dbg !7017
  br i1 %202, label %bb29, label %bb33, !dbg !7017

bb29:                                             ; preds = %bb28
  %203 = call i32 @__psfs_do_numeric(%struct.psfs_t* %psfs, %struct.scan_cookie* %sc) nounwind, !dbg !7018
  store i32 %203, i32* %r, align 4, !dbg !7018
  %204 = load i32* %r, align 4, !dbg !7020
  %205 = icmp ne i32 %204, -1, !dbg !7020
  br i1 %205, label %bb30, label %bb31, !dbg !7020

bb30:                                             ; preds = %bb29
  store i8 0, i8* %zero_conversions, align 1, !dbg !7021
  br label %bb31, !dbg !7021

bb31:                                             ; preds = %bb30, %bb29
  %206 = load i32* %r, align 4, !dbg !7022
  %207 = icmp slt i32 %206, 0, !dbg !7022
  br i1 %207, label %DONE, label %NEXT_FMT, !dbg !7022

bb33:                                             ; preds = %bb28
  %208 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7023
  %209 = load i32* %208, align 8, !dbg !7023
  %210 = icmp sgt i32 %209, 17, !dbg !7023
  br i1 %210, label %bb34, label %DO_LEFTBRACKET, !dbg !7023

bb34:                                             ; preds = %bb33
  %211 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7024
  %212 = load i8* %211, align 8, !dbg !7024
  %213 = icmp ne i8 %212, 0, !dbg !7024
  br i1 %213, label %bb35, label %bb36, !dbg !7024

bb35:                                             ; preds = %bb34
  %214 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !7024
  %215 = load i8** %214, align 8, !dbg !7024
  store i8* %215, i8** %iftmp.8, align 8, !dbg !7024
  br label %bb38, !dbg !7024

bb36:                                             ; preds = %bb34
  %buf37 = bitcast [67 x i8]* %buf to i8*, !dbg !7024
  store i8* %buf37, i8** %iftmp.8, align 8, !dbg !7024
  br label %bb38, !dbg !7024

bb38:                                             ; preds = %bb36, %bb35
  %216 = load i8** %iftmp.8, align 8, !dbg !7024
  store i8* %216, i8** %b, align 8, !dbg !7024
  store i8 1, i8* %fail, align 1, !dbg !7025
  %217 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7026
  %218 = load i32* %217, align 8, !dbg !7026
  %219 = icmp eq i32 %218, 19, !dbg !7026
  br i1 %219, label %bb39, label %bb46, !dbg !7026

bb39:                                             ; preds = %bb38
  %220 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7027
  %221 = load i32* %220, align 4, !dbg !7027
  %222 = icmp eq i32 %221, 2147483647, !dbg !7027
  br i1 %222, label %bb40, label %bb43, !dbg !7027

bb40:                                             ; preds = %bb39
  %223 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7028
  store i32 1, i32* %223, align 4, !dbg !7028
  br label %bb43, !dbg !7028

bb42:                                             ; preds = %bb43
  store i8 0, i8* %zero_conversions, align 1, !dbg !7029
  %224 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !7030
  %225 = load i32* %224, align 8, !dbg !7030
  %226 = trunc i32 %225 to i8, !dbg !7030
  %227 = load i8** %b, align 8, !dbg !7030
  store i8 %226, i8* %227, align 1, !dbg !7030
  %228 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7031
  %229 = load i8* %228, align 8, !dbg !7031
  %230 = zext i8 %229 to i32, !dbg !7031
  %231 = load i8** %b, align 8, !dbg !7031
  %232 = sext i32 %230 to i64, !dbg !7031
  %233 = getelementptr inbounds i8* %231, i64 %232, !dbg !7031
  store i8* %233, i8** %b, align 8, !dbg !7031
  br label %bb43, !dbg !7031

bb43:                                             ; preds = %bb39, %bb40, %bb42
  %234 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !7032
  %235 = icmp sge i32 %234, 0, !dbg !7032
  br i1 %235, label %bb42, label %bb44, !dbg !7032

bb44:                                             ; preds = %bb43
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !7033
  %236 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7034
  %237 = load i32* %236, align 4, !dbg !7034
  %238 = icmp sgt i32 %237, 0, !dbg !7034
  br i1 %238, label %DONE, label %bb45, !dbg !7034

bb45:                                             ; preds = %bb44
  %239 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7035
  %240 = load i32* %239, align 8, !dbg !7035
  %241 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7035
  %242 = load i8* %241, align 8, !dbg !7035
  %243 = zext i8 %242 to i32, !dbg !7035
  %244 = add nsw i32 %240, %243, !dbg !7035
  %245 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7035
  store i32 %244, i32* %245, align 8, !dbg !7035
  br label %NEXT_FMT, !dbg !7035

bb46:                                             ; preds = %bb38
  %246 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7036
  %247 = load i32* %246, align 8, !dbg !7036
  %248 = icmp eq i32 %247, 20, !dbg !7036
  br i1 %248, label %bb49, label %bb52, !dbg !7036

bb48:                                             ; preds = %bb50
  store i8 0, i8* %zero_conversions, align 1, !dbg !7037
  %249 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !7038
  %250 = load i32* %249, align 8, !dbg !7038
  %251 = trunc i32 %250 to i8, !dbg !7038
  %252 = load i8** %b, align 8, !dbg !7038
  store i8 %251, i8* %252, align 1, !dbg !7038
  %253 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7039
  %254 = load i8* %253, align 8, !dbg !7039
  %255 = zext i8 %254 to i32, !dbg !7039
  %256 = load i8** %b, align 8, !dbg !7039
  %257 = sext i32 %255 to i64, !dbg !7039
  %258 = getelementptr inbounds i8* %256, i64 %257, !dbg !7039
  store i8* %258, i8** %b, align 8, !dbg !7039
  store i8 0, i8* %fail, align 1, !dbg !7040
  br label %bb49, !dbg !7040

bb49:                                             ; preds = %bb46, %bb48
  %259 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !7041
  %260 = icmp slt i32 %259, 0, !dbg !7041
  br i1 %260, label %bb71, label %bb50, !dbg !7041

bb50:                                             ; preds = %bb49
  %261 = load i16** @__ctype_b, align 8, !dbg !7041
  %262 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !7041
  %263 = load i32* %262, align 8, !dbg !7041
  %264 = sext i32 %263 to i64, !dbg !7041
  %265 = getelementptr inbounds i16* %261, i64 %264, !dbg !7041
  %266 = load i16* %265, align 1, !dbg !7041
  %267 = zext i16 %266 to i32, !dbg !7041
  %268 = and i32 %267, 8192, !dbg !7041
  %269 = icmp eq i32 %268, 0, !dbg !7041
  br i1 %269, label %bb48, label %bb71, !dbg !7041

bb52:                                             ; preds = %bb46
  store i8 0, i8* %invert, align 1, !dbg !7042
  %270 = load i8** %fmt, align 8, !dbg !7043
  %271 = getelementptr inbounds i8* %270, i64 1, !dbg !7043
  store i8* %271, i8** %fmt, align 8, !dbg !7043
  %272 = load i8** %fmt, align 8, !dbg !7043
  %273 = load i8* %272, align 1, !dbg !7043
  %274 = icmp eq i8 %273, 94, !dbg !7043
  br i1 %274, label %bb53, label %bb54, !dbg !7043

bb53:                                             ; preds = %bb52
  %275 = load i8** %fmt, align 8, !dbg !7044
  %276 = getelementptr inbounds i8* %275, i64 1, !dbg !7044
  store i8* %276, i8** %fmt, align 8, !dbg !7044
  store i8 1, i8* %invert, align 1, !dbg !7045
  br label %bb54, !dbg !7045

bb54:                                             ; preds = %bb53, %bb52
  %277 = load i8* %invert, align 1, !dbg !7046
  %278 = zext i8 %277 to i32, !dbg !7046
  %scanset55 = bitcast [256 x i8]* %scanset to i8*, !dbg !7046
  %279 = call i8* @memset(i8* %scanset55, i32 %278, i64 256) nounwind, !dbg !7046
  %280 = load i8* %invert, align 1, !dbg !7047
  %281 = sub i8 1, %280, !dbg !7047
  store i8 %281, i8* %invert, align 1, !dbg !7047
  %282 = load i8** %fmt, align 8, !dbg !7048
  %283 = load i8* %282, align 1, !dbg !7048
  %284 = icmp eq i8 %283, 93, !dbg !7048
  br i1 %284, label %bb56, label %bb65, !dbg !7048

bb56:                                             ; preds = %bb54
  %285 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 93, !dbg !7049
  %286 = load i8* %invert, align 1, !dbg !7049
  store i8 %286, i8* %285, align 1, !dbg !7049
  %287 = load i8** %fmt, align 8, !dbg !7050
  %288 = getelementptr inbounds i8* %287, i64 1, !dbg !7050
  store i8* %288, i8** %fmt, align 8, !dbg !7050
  br label %bb65, !dbg !7050

bb58:                                             ; preds = %bb65
  %289 = load i8** %fmt, align 8, !dbg !7051
  %290 = load i8* %289, align 1, !dbg !7051
  %291 = icmp eq i8 %290, 0, !dbg !7051
  br i1 %291, label %DONE, label %bb59, !dbg !7051

bb59:                                             ; preds = %bb58
  %292 = load i8** %fmt, align 8, !dbg !7052
  %293 = load i8* %292, align 1, !dbg !7052
  %294 = icmp eq i8 %293, 45, !dbg !7052
  br i1 %294, label %bb60, label %bb64, !dbg !7052

bb60:                                             ; preds = %bb59
  %295 = load i8** %fmt, align 8, !dbg !7052
  %296 = getelementptr inbounds i8* %295, i64 1, !dbg !7052
  %297 = load i8* %296, align 1, !dbg !7052
  %298 = icmp ne i8 %297, 93, !dbg !7052
  br i1 %298, label %bb61, label %bb64, !dbg !7052

bb61:                                             ; preds = %bb60
  %299 = load i8** %fmt, align 8, !dbg !7052
  %300 = getelementptr inbounds i8* %299, i64 -1, !dbg !7052
  %301 = load i8* %300, align 1, !dbg !7052
  %302 = load i8** %fmt, align 8, !dbg !7052
  %303 = getelementptr inbounds i8* %302, i64 1, !dbg !7052
  %304 = load i8* %303, align 1, !dbg !7052
  %305 = icmp ult i8 %301, %304, !dbg !7052
  br i1 %305, label %bb62, label %bb64, !dbg !7052

bb62:                                             ; preds = %bb61
  %306 = load i8** %fmt, align 8, !dbg !7053
  %307 = getelementptr inbounds i8* %306, i64 1, !dbg !7053
  store i8* %307, i8** %fmt, align 8, !dbg !7053
  %308 = load i8** %fmt, align 8, !dbg !7054
  %309 = getelementptr inbounds i8* %308, i64 -2, !dbg !7054
  %310 = load i8* %309, align 1, !dbg !7054
  %311 = zext i8 %310 to i32, !dbg !7054
  store i32 %311, i32* %i, align 4, !dbg !7054
  br label %bb63, !dbg !7054

bb63:                                             ; preds = %bb63, %bb62
  %312 = load i32* %i, align 4, !dbg !7055
  %313 = add nsw i32 %312, 1, !dbg !7055
  store i32 %313, i32* %i, align 4, !dbg !7055
  %314 = load i32* %i, align 4, !dbg !7055
  %315 = sext i32 %314 to i64, !dbg !7055
  %316 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 %315, !dbg !7055
  %317 = load i8* %invert, align 1, !dbg !7055
  store i8 %317, i8* %316, align 1, !dbg !7055
  %318 = load i8** %fmt, align 8, !dbg !7056
  %319 = load i8* %318, align 1, !dbg !7056
  %320 = zext i8 %319 to i32, !dbg !7056
  %321 = load i32* %i, align 4, !dbg !7056
  %322 = icmp sgt i32 %320, %321, !dbg !7056
  br i1 %322, label %bb63, label %bb64, !dbg !7056

bb64:                                             ; preds = %bb63, %bb61, %bb60, %bb59
  %323 = load i8** %fmt, align 8, !dbg !7057
  %324 = load i8* %323, align 1, !dbg !7057
  %325 = zext i8 %324 to i32, !dbg !7057
  %326 = sext i32 %325 to i64, !dbg !7057
  %327 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 %326, !dbg !7057
  %328 = load i8* %invert, align 1, !dbg !7057
  store i8 %328, i8* %327, align 1, !dbg !7057
  %329 = load i8** %fmt, align 8, !dbg !7058
  %330 = getelementptr inbounds i8* %329, i64 1, !dbg !7058
  store i8* %330, i8** %fmt, align 8, !dbg !7058
  br label %bb65, !dbg !7058

bb65:                                             ; preds = %bb54, %bb56, %bb64
  %331 = load i8** %fmt, align 8, !dbg !7059
  %332 = load i8* %331, align 1, !dbg !7059
  %333 = icmp ne i8 %332, 93, !dbg !7059
  br i1 %333, label %bb58, label %bb66, !dbg !7059

bb66:                                             ; preds = %bb65
  %334 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7060
  %335 = load i32* %334, align 8, !dbg !7060
  %336 = icmp eq i32 %335, 18, !dbg !7060
  br i1 %336, label %DO_LEFTBRACKET, label %bb70, !dbg !7060

bb68:                                             ; preds = %bb70
  store i8 0, i8* %zero_conversions, align 1, !dbg !7061
  %337 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !7062
  %338 = load i32* %337, align 8, !dbg !7062
  %339 = sext i32 %338 to i64, !dbg !7062
  %340 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 %339, !dbg !7062
  %341 = load i8* %340, align 1, !dbg !7062
  %342 = icmp eq i8 %341, 0, !dbg !7062
  br i1 %342, label %bb71, label %bb69, !dbg !7062

bb69:                                             ; preds = %bb68
  %343 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !7063
  %344 = load i32* %343, align 8, !dbg !7063
  %345 = trunc i32 %344 to i8, !dbg !7063
  %346 = load i8** %b, align 8, !dbg !7063
  store i8 %345, i8* %346, align 1, !dbg !7063
  %347 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7064
  %348 = load i8* %347, align 8, !dbg !7064
  %349 = zext i8 %348 to i32, !dbg !7064
  %350 = load i8** %b, align 8, !dbg !7064
  %351 = sext i32 %349 to i64, !dbg !7064
  %352 = getelementptr inbounds i8* %350, i64 %351, !dbg !7064
  store i8* %352, i8** %b, align 8, !dbg !7064
  store i8 0, i8* %fail, align 1, !dbg !7065
  br label %bb70, !dbg !7065

bb70:                                             ; preds = %bb66, %bb69
  %353 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !7066
  %354 = icmp sge i32 %353, 0, !dbg !7066
  br i1 %354, label %bb68, label %bb71, !dbg !7066

bb71:                                             ; preds = %bb49, %bb50, %bb70, %bb68
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !7067
  %355 = load i8* %fail, align 1, !dbg !7068
  %356 = icmp ne i8 %355, 0, !dbg !7068
  br i1 %356, label %DONE, label %bb72, !dbg !7068

bb72:                                             ; preds = %bb71
  %357 = load i8** %b, align 8, !dbg !7069
  store i8 0, i8* %357, align 1, !dbg !7069
  %358 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7070
  %359 = load i32* %358, align 8, !dbg !7070
  %360 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7070
  %361 = load i8* %360, align 8, !dbg !7070
  %362 = zext i8 %361 to i32, !dbg !7070
  %363 = add nsw i32 %359, %362, !dbg !7070
  %364 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7070
  store i32 %363, i32* %364, align 8, !dbg !7070
  br label %NEXT_FMT, !dbg !7070

DO_LEFTBRACKET:                                   ; preds = %bb66, %bb33
  %365 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7071
  %366 = load i32* %365, align 8, !dbg !7071
  %367 = icmp sgt i32 %366, 15, !dbg !7071
  br i1 %367, label %bb73, label %DONE, !dbg !7071

bb73:                                             ; preds = %DO_LEFTBRACKET
  %368 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 10, !dbg !7072
  %369 = getelementptr inbounds %struct.__mbstate_t* %368, i32 0, i32 0, !dbg !7072
  store i32 0, i32* %369, align 8, !dbg !7072
  %370 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7074
  %371 = load i8* %370, align 8, !dbg !7074
  %372 = icmp ne i8 %371, 0, !dbg !7074
  br i1 %372, label %bb74, label %bb75, !dbg !7074

bb74:                                             ; preds = %bb73
  %373 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !7074
  %374 = load i8** %373, align 8, !dbg !7074
  %375 = bitcast i8* %374 to i32*, !dbg !7074
  store i32* %375, i32** %iftmp.11, align 8, !dbg !7074
  br label %bb77, !dbg !7074

bb75:                                             ; preds = %bb73
  %wbuf76 = bitcast [1 x i32]* %wbuf to i32*, !dbg !7074
  store i32* %wbuf76, i32** %iftmp.11, align 8, !dbg !7074
  br label %bb77, !dbg !7074

bb77:                                             ; preds = %bb75, %bb74
  %376 = load i32** %iftmp.11, align 8, !dbg !7074
  store i32* %376, i32** %wb, align 8, !dbg !7074
  store i8 1, i8* %fail, align 1, !dbg !7075
  %377 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7076
  %378 = load i32* %377, align 8, !dbg !7076
  %379 = icmp eq i32 %378, 16, !dbg !7076
  br i1 %379, label %bb78, label %bb85, !dbg !7076

bb78:                                             ; preds = %bb77
  %380 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7077
  %381 = load i32* %380, align 4, !dbg !7077
  %382 = icmp eq i32 %381, 2147483647, !dbg !7077
  br i1 %382, label %bb79, label %bb82, !dbg !7077

bb79:                                             ; preds = %bb78
  %383 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7078
  store i32 1, i32* %383, align 4, !dbg !7078
  br label %bb82, !dbg !7078

bb81:                                             ; preds = %bb82
  store i8 0, i8* %zero_conversions, align 1, !dbg !7079
  %384 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7080
  %385 = load i32* %384, align 8, !dbg !7080
  %386 = load i32** %wb, align 8, !dbg !7080
  store i32 %385, i32* %386, align 4, !dbg !7080
  %387 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7081
  %388 = load i8* %387, align 8, !dbg !7081
  %389 = zext i8 %388 to i32, !dbg !7081
  %390 = load i32** %wb, align 8, !dbg !7081
  %391 = sext i32 %389 to i64, !dbg !7081
  %392 = getelementptr inbounds i32* %390, i64 %391, !dbg !7081
  store i32* %392, i32** %wb, align 8, !dbg !7081
  br label %bb82, !dbg !7081

bb82:                                             ; preds = %bb78, %bb79, %bb81
  %393 = call i32 @scan_getwc(%struct.scan_cookie* %sc) nounwind, !dbg !7082
  %394 = icmp sge i32 %393, 0, !dbg !7082
  br i1 %394, label %bb81, label %bb83, !dbg !7082

bb83:                                             ; preds = %bb82
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !7083
  %395 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7084
  %396 = load i32* %395, align 4, !dbg !7084
  %397 = icmp sgt i32 %396, 0, !dbg !7084
  br i1 %397, label %DONE, label %bb84, !dbg !7084

bb84:                                             ; preds = %bb83
  %398 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7085
  %399 = load i32* %398, align 8, !dbg !7085
  %400 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7085
  %401 = load i8* %400, align 8, !dbg !7085
  %402 = zext i8 %401 to i32, !dbg !7085
  %403 = add nsw i32 %399, %402, !dbg !7085
  %404 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7085
  store i32 %403, i32* %404, align 8, !dbg !7085
  br label %NEXT_FMT, !dbg !7085

bb85:                                             ; preds = %bb77
  %405 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7086
  %406 = load i32* %405, align 8, !dbg !7086
  %407 = icmp eq i32 %406, 17, !dbg !7086
  br i1 %407, label %bb90, label %bb98, !dbg !7086

bb87:                                             ; preds = %bb90
  store i8 0, i8* %zero_conversions, align 1, !dbg !7087
  %408 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7088
  %409 = load i32* %408, align 8, !dbg !7088
  %410 = icmp ule i32 %409, 255, !dbg !7088
  br i1 %410, label %bb88, label %bb89, !dbg !7088

bb88:                                             ; preds = %bb87
  %411 = load i16** @__ctype_b, align 8, !dbg !7088
  %412 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7088
  %413 = load i32* %412, align 8, !dbg !7088
  %414 = sext i32 %413 to i64, !dbg !7088
  %415 = getelementptr inbounds i16* %411, i64 %414, !dbg !7088
  %416 = load i16* %415, align 1, !dbg !7088
  %417 = zext i16 %416 to i32, !dbg !7088
  %418 = and i32 %417, 8192, !dbg !7088
  %419 = icmp ne i32 %418, 0, !dbg !7088
  br i1 %419, label %bb99, label %bb89, !dbg !7088

bb89:                                             ; preds = %bb88, %bb87
  %420 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7089
  %421 = load i32* %420, align 8, !dbg !7089
  %422 = load i32** %wb, align 8, !dbg !7089
  store i32 %421, i32* %422, align 4, !dbg !7089
  %423 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7090
  %424 = load i8* %423, align 8, !dbg !7090
  %425 = zext i8 %424 to i32, !dbg !7090
  %426 = load i32** %wb, align 8, !dbg !7090
  %427 = sext i32 %425 to i64, !dbg !7090
  %428 = getelementptr inbounds i32* %426, i64 %427, !dbg !7090
  store i32* %428, i32** %wb, align 8, !dbg !7090
  store i8 0, i8* %fail, align 1, !dbg !7091
  br label %bb90, !dbg !7091

bb90:                                             ; preds = %bb85, %bb89
  %429 = call i32 @scan_getwc(%struct.scan_cookie* %sc) nounwind, !dbg !7092
  %430 = icmp sge i32 %429, 0, !dbg !7092
  br i1 %430, label %bb87, label %bb99, !dbg !7092

bb93:                                             ; preds = %bb98
  store i8 0, i8* %zero_conversions, align 1, !dbg !7093
  %431 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7094
  %432 = load i32* %431, align 8, !dbg !7094
  %433 = icmp ule i32 %432, 255, !dbg !7094
  br i1 %433, label %bb94, label %bb96, !dbg !7094

bb94:                                             ; preds = %bb93
  %434 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7095
  %435 = load i32* %434, align 8, !dbg !7095
  %436 = zext i32 %435 to i64, !dbg !7095
  %437 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 %436, !dbg !7095
  %438 = load i8* %437, align 1, !dbg !7095
  %439 = icmp eq i8 %438, 0, !dbg !7095
  br i1 %439, label %bb99, label %bb97, !dbg !7095

bb96:                                             ; preds = %bb93
  %440 = load i8* %invert, align 1, !dbg !7096
  %441 = icmp ne i8 %440, 0, !dbg !7096
  br i1 %441, label %bb99, label %bb97, !dbg !7096

bb97:                                             ; preds = %bb94, %bb96
  %442 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7097
  %443 = load i32* %442, align 8, !dbg !7097
  %444 = load i32** %wb, align 8, !dbg !7097
  store i32 %443, i32* %444, align 4, !dbg !7097
  %445 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7098
  %446 = load i8* %445, align 8, !dbg !7098
  %447 = zext i8 %446 to i32, !dbg !7098
  %448 = load i32** %wb, align 8, !dbg !7098
  %449 = sext i32 %447 to i64, !dbg !7098
  %450 = getelementptr inbounds i32* %448, i64 %449, !dbg !7098
  store i32* %450, i32** %wb, align 8, !dbg !7098
  store i8 0, i8* %fail, align 1, !dbg !7099
  br label %bb98, !dbg !7099

bb98:                                             ; preds = %bb85, %bb97
  %451 = call i32 @scan_getwc(%struct.scan_cookie* %sc) nounwind, !dbg !7100
  %452 = icmp sge i32 %451, 0, !dbg !7100
  br i1 %452, label %bb93, label %bb99, !dbg !7100

bb99:                                             ; preds = %bb88, %bb90, %bb98, %bb96, %bb94
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !7101
  %453 = load i8* %fail, align 1, !dbg !7102
  %454 = icmp ne i8 %453, 0, !dbg !7102
  br i1 %454, label %DONE, label %bb100, !dbg !7102

bb100:                                            ; preds = %bb99
  %455 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 9, !dbg !7102
  %456 = load i8* %455, align 1, !dbg !7102
  %457 = icmp ne i8 %456, 0, !dbg !7102
  br i1 %457, label %DONE, label %bb101, !dbg !7102

bb101:                                            ; preds = %bb100
  %458 = load i32** %wb, align 8, !dbg !7103
  store i32 0, i32* %458, align 4, !dbg !7103
  %459 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7104
  %460 = load i32* %459, align 8, !dbg !7104
  %461 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7104
  %462 = load i8* %461, align 8, !dbg !7104
  %463 = zext i8 %462 to i32, !dbg !7104
  %464 = add nsw i32 %460, %463, !dbg !7104
  %465 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7104
  store i32 %464, i32* %465, align 8, !dbg !7104
  br label %NEXT_FMT, !dbg !7104

MATCH_CHAR:                                       ; preds = %bb23, %bb3
  %466 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !7105
  %467 = load i8** %fmt, align 8, !dbg !7105
  %468 = load i8* %467, align 1, !dbg !7105
  %469 = zext i8 %468 to i32, !dbg !7105
  %470 = icmp ne i32 %466, %469, !dbg !7105
  br i1 %470, label %bb103, label %NEXT_FMT, !dbg !7105

bb103:                                            ; preds = %MATCH_CHAR
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !7106
  br label %DONE, !dbg !7106

NEXT_FMT:                                         ; preds = %bb31, %bb25, %bb26, %MATCH_CHAR, %bb101, %bb84, %bb72, %bb45, %bb21
  %471 = load i8** %fmt, align 8, !dbg !7107
  %472 = getelementptr inbounds i8* %471, i64 1, !dbg !7107
  store i8* %472, i8** %fmt, align 8, !dbg !7107
  %473 = load %4** %fp_addr, align 8, !dbg !7108
  %474 = getelementptr inbounds %4* %473, i32 0, i32 0, !dbg !7108
  %475 = load i16* %474, align 8, !dbg !7108
  %476 = zext i16 %475 to i32, !dbg !7108
  %477 = and i32 %476, 8, !dbg !7108
  %478 = icmp ne i32 %477, 0, !dbg !7108
  br i1 %478, label %DONE, label %bb104, !dbg !7108

bb104:                                            ; preds = %NEXT_FMT, %entry
  %479 = load i8** %fmt, align 8, !dbg !6984
  %480 = load i8* %479, align 1, !dbg !6984
  %481 = icmp ne i8 %480, 0, !dbg !6984
  br i1 %481, label %bb, label %DONE, !dbg !6984

DONE:                                             ; preds = %DO_LEFTBRACKET, %bb104, %NEXT_FMT, %bb103, %bb100, %bb99, %bb83, %bb71, %bb58, %bb44, %bb31, %bb22, %bb6
  %482 = load %4** %fp_addr, align 8, !dbg !7109
  %483 = getelementptr inbounds %4* %482, i32 0, i32 0, !dbg !7109
  %484 = load i16* %483, align 8, !dbg !7109
  %485 = zext i16 %484 to i32, !dbg !7109
  %486 = and i32 %485, 8, !dbg !7109
  %487 = icmp ne i32 %486, 0, !dbg !7109
  br i1 %487, label %bb108, label %bb105, !dbg !7109

bb105:                                            ; preds = %DONE
  %488 = load i8** %fmt, align 8, !dbg !7109
  %489 = load i8* %488, align 1, !dbg !7109
  %490 = icmp eq i8 %489, 0, !dbg !7109
  br i1 %490, label %bb109, label %bb106, !dbg !7109

bb106:                                            ; preds = %bb105
  %491 = load i8* %zero_conversions, align 1, !dbg !7109
  %492 = icmp eq i8 %491, 0, !dbg !7109
  br i1 %492, label %bb109, label %bb107, !dbg !7109

bb107:                                            ; preds = %bb106
  %493 = load %4** %fp_addr, align 8, !dbg !7109
  %494 = getelementptr inbounds %4* %493, i32 0, i32 0, !dbg !7109
  %495 = load i16* %494, align 8, !dbg !7109
  %496 = zext i16 %495 to i32, !dbg !7109
  %497 = and i32 %496, 4, !dbg !7109
  %498 = icmp ne i32 %497, 0, !dbg !7109
  br i1 %498, label %bb108, label %bb109, !dbg !7109

bb108:                                            ; preds = %bb107, %DONE
  %499 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7110
  store i32 -1, i32* %499, align 8, !dbg !7110
  br label %bb109, !dbg !7110

bb109:                                            ; preds = %bb108, %bb107, %bb106, %bb105
  call void @kill_scan_cookie(%struct.scan_cookie* %sc) nounwind, !dbg !7111
  %500 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7112
  %501 = load i32* %500, align 8, !dbg !7112
  store i32 %501, i32* %0, align 4, !dbg !7112
  %502 = load i32* %0, align 4, !dbg !7112
  store i32 %502, i32* %retval, align 4, !dbg !7112
  %retval110 = load i32* %retval, !dbg !7112
  ret i32 %retval110, !dbg !7112
}

define internal void @kill_scan_cookie(%struct.scan_cookie* %sc) nounwind inlinehint {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %0 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7113
  %1 = getelementptr inbounds %struct.scan_cookie* %0, i32 0, i32 7, !dbg !7113
  %2 = load i8* %1, align 1, !dbg !7113
  %3 = sext i8 %2 to i32, !dbg !7113
  %4 = and i32 %3, 1, !dbg !7113
  %5 = trunc i32 %4 to i8, !dbg !7113
  %toBool = icmp ne i8 %5, 0, !dbg !7113
  br i1 %toBool, label %bb, label %return, !dbg !7113

bb:                                               ; preds = %entry
  %6 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7115
  %7 = getelementptr inbounds %struct.scan_cookie* %6, i32 0, i32 2, !dbg !7115
  %8 = load %4** %7, align 8, !dbg !7115
  %9 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7115
  %10 = getelementptr inbounds %struct.scan_cookie* %9, i32 0, i32 1, !dbg !7115
  %11 = load i32* %10, align 4, !dbg !7115
  %12 = call i32 @ungetc(i32 %11, %4* %8) nounwind, !dbg !7115
  %13 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7116
  %14 = getelementptr inbounds %struct.scan_cookie* %13, i32 0, i32 3, !dbg !7116
  %15 = load i32* %14, align 8, !dbg !7116
  %16 = icmp eq i32 %15, 0, !dbg !7116
  %17 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7117
  %18 = getelementptr inbounds %struct.scan_cookie* %17, i32 0, i32 2, !dbg !7117
  %19 = load %4** %18, align 8, !dbg !7117
  br i1 %16, label %bb1, label %bb2, !dbg !7116

bb1:                                              ; preds = %bb
  %20 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7117
  %21 = getelementptr inbounds %struct.scan_cookie* %20, i32 0, i32 5, !dbg !7117
  %22 = load i32* %21, align 8, !dbg !7117
  %23 = getelementptr inbounds %4* %19, i32 0, i32 10, !dbg !7117
  %24 = getelementptr inbounds [2 x i32]* %23, i64 0, i64 1, !dbg !7117
  store i32 %22, i32* %24, align 4, !dbg !7117
  br label %return, !dbg !7117

bb2:                                              ; preds = %bb
  %25 = getelementptr inbounds %4* %19, i32 0, i32 10, !dbg !7118
  %26 = getelementptr inbounds [2 x i32]* %25, i64 0, i64 1, !dbg !7118
  store i32 0, i32* %26, align 4, !dbg !7118
  br label %return, !dbg !7118

return:                                           ; preds = %entry, %bb1, %bb2
  ret void, !dbg !7119
}

define i32 @vsnprintf(i8* noalias %buf, i64 %size, i8* noalias %format, %struct.__va_list_tag* %arg) nounwind {
entry:
  %buf_addr = alloca i8*, align 8
  %size_addr = alloca i64, align 8
  %format_addr = alloca i8*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %f = alloca %4
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buf, i8** %buf_addr
  store i64 %size, i64* %size_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  %1 = getelementptr inbounds %4* %f, i32 0, i32 2, !dbg !7120
  store i32 -2, i32* %1, align 4, !dbg !7120
  %2 = getelementptr inbounds %4* %f, i32 0, i32 0, !dbg !7122
  store i16 208, i16* %2, align 8, !dbg !7122
  %3 = getelementptr inbounds %4* %f, i32 0, i32 1, !dbg !7123
  %4 = getelementptr inbounds [2 x i8]* %3, i64 0, i64 0, !dbg !7123
  store i8 0, i8* %4, align 1, !dbg !7123
  %5 = getelementptr inbounds %4* %f, i32 0, i32 11, !dbg !7124
  %6 = getelementptr inbounds %struct.__mbstate_t* %5, i32 0, i32 0, !dbg !7124
  store i32 0, i32* %6, align 8, !dbg !7124
  %7 = getelementptr inbounds %4* %f, i32 0, i32 9, !dbg !7125
  store %4* null, %4** %7, align 8, !dbg !7125
  %8 = load i8** %buf_addr, align 8, !dbg !7126
  %9 = ptrtoint i8* %8 to i64, !dbg !7126
  %not = xor i64 %9, -1, !dbg !7126
  %10 = load i64* %size_addr, align 8, !dbg !7126
  %11 = icmp ult i64 %not, %10, !dbg !7126
  br i1 %11, label %bb, label %bb3, !dbg !7126

bb:                                               ; preds = %entry
  %12 = load i8** %buf_addr, align 8, !dbg !7127
  %13 = ptrtoint i8* %12 to i64, !dbg !7127
  %not2 = xor i64 %13, -1, !dbg !7127
  store i64 %not2, i64* %size_addr, align 8, !dbg !7127
  br label %bb3, !dbg !7127

bb3:                                              ; preds = %bb, %entry
  %14 = load i8** %buf_addr, align 8, !dbg !7128
  %15 = getelementptr inbounds %4* %f, i32 0, i32 3, !dbg !7128
  store i8* %14, i8** %15, align 8, !dbg !7128
  %16 = load i8** %buf_addr, align 8, !dbg !7129
  %17 = load i64* %size_addr, align 8, !dbg !7129
  %18 = getelementptr inbounds i8* %16, i64 %17, !dbg !7129
  %19 = getelementptr inbounds %4* %f, i32 0, i32 4, !dbg !7129
  store i8* %18, i8** %19, align 8, !dbg !7129
  %20 = getelementptr inbounds %4* %f, i32 0, i32 3, !dbg !7130
  %21 = load i8** %20, align 8, !dbg !7130
  %22 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7130
  store i8* %21, i8** %22, align 8, !dbg !7130
  %23 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7130
  %24 = load i8** %23, align 8, !dbg !7130
  %25 = getelementptr inbounds %4* %f, i32 0, i32 6, !dbg !7130
  store i8* %24, i8** %25, align 8, !dbg !7130
  %26 = getelementptr inbounds %4* %f, i32 0, i32 3, !dbg !7131
  %27 = load i8** %26, align 8, !dbg !7131
  %28 = getelementptr inbounds %4* %f, i32 0, i32 7, !dbg !7131
  store i8* %27, i8** %28, align 8, !dbg !7131
  %29 = getelementptr inbounds %4* %f, i32 0, i32 4, !dbg !7132
  %30 = load i8** %29, align 8, !dbg !7132
  %31 = getelementptr inbounds %4* %f, i32 0, i32 8, !dbg !7132
  store i8* %30, i8** %31, align 8, !dbg !7132
  %32 = load i8** %format_addr, align 8, !dbg !7133
  %33 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7133
  %34 = call i32 @vfprintf(%4* noalias %f, i8* noalias %32, %struct.__va_list_tag* %33) nounwind, !dbg !7133
  store i32 %34, i32* %rv, align 4, !dbg !7133
  %35 = load i64* %size_addr, align 8, !dbg !7134
  %36 = icmp ne i64 %35, 0, !dbg !7134
  br i1 %36, label %bb4, label %bb7, !dbg !7134

bb4:                                              ; preds = %bb3
  %37 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7135
  %38 = load i8** %37, align 8, !dbg !7135
  %39 = getelementptr inbounds %4* %f, i32 0, i32 4, !dbg !7135
  %40 = load i8** %39, align 8, !dbg !7135
  %41 = icmp eq i8* %38, %40, !dbg !7135
  br i1 %41, label %bb5, label %bb6, !dbg !7135

bb5:                                              ; preds = %bb4
  %42 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7136
  %43 = load i8** %42, align 8, !dbg !7136
  %44 = getelementptr inbounds i8* %43, i64 -1, !dbg !7136
  %45 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7136
  store i8* %44, i8** %45, align 8, !dbg !7136
  br label %bb6, !dbg !7136

bb6:                                              ; preds = %bb5, %bb4
  %46 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7137
  %47 = load i8** %46, align 8, !dbg !7137
  store i8 0, i8* %47, align 1, !dbg !7137
  br label %bb7, !dbg !7137

bb7:                                              ; preds = %bb6, %bb3
  %48 = load i32* %rv, align 4, !dbg !7138
  store i32 %48, i32* %0, align 4, !dbg !7138
  %49 = load i32* %0, align 4, !dbg !7138
  store i32 %49, i32* %retval, align 4, !dbg !7138
  %retval8 = load i32* %retval, !dbg !7138
  ret i32 %retval8, !dbg !7138
}

define i64 @wcsrtombs(i8* noalias %dst, i32** noalias %src, i64 %len, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %dst_addr = alloca i8*, align 8
  %src_addr = alloca i32**, align 8
  %len_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dst, i8** %dst_addr
  store i32** %src, i32*** %src_addr
  store i64 %len, i64* %len_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load i8** %dst_addr, align 8, !dbg !7139
  %2 = load i32*** %src_addr, align 8, !dbg !7139
  %3 = load i64* %len_addr, align 8, !dbg !7139
  %4 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !7139
  %5 = call i64 @wcsnrtombs(i8* noalias %1, i32** noalias %2, i64 -1, i64 %3, %struct.__mbstate_t* noalias %4) nounwind, !dbg !7139
  store i64 %5, i64* %0, align 8, !dbg !7139
  %6 = load i64* %0, align 8, !dbg !7139
  store i64 %6, i64* %retval, align 8, !dbg !7139
  %retval1 = load i64* %retval, !dbg !7139
  ret i64 %retval1, !dbg !7139
}

define hidden i32 @__psfs_do_numeric(%struct.psfs_t* %psfs, %struct.scan_cookie* %sc) nounwind {
entry:
  %psfs_addr = alloca %struct.psfs_t*, align 8
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %b = alloca i8*
  %p = alloca i8*
  %exp_adjust = alloca i32
  %buf = alloca [167 x i8]
  %usflag = alloca i8
  %base = alloca i8
  %nonzero = alloca i8
  %seendigit = alloca i8
  %x = alloca x86_fp80
  %e = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.psfs_t* %psfs, %struct.psfs_t** %psfs_addr
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  store i32 0, i32* %exp_adjust, align 4, !dbg !7141
  store i8 0, i8* %nonzero, align 1, !dbg !7143
  store i8 0, i8* %seendigit, align 1, !dbg !7144
  %1 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7145
  %2 = getelementptr inbounds %struct.psfs_t* %1, i32 0, i32 7, !dbg !7145
  %3 = load i32* %2, align 8, !dbg !7145
  %4 = sub nsw i32 %3, 1, !dbg !7145
  %5 = sext i32 %4 to i64, !dbg !7145
  %6 = getelementptr inbounds [15 x i8]* @spec_base, i64 0, i64 %5, !dbg !7145
  %7 = load i8* %6, align 1, !dbg !7145
  store i8 %7, i8* %base, align 1, !dbg !7145
  %8 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7146
  %9 = getelementptr inbounds %struct.psfs_t* %8, i32 0, i32 7, !dbg !7146
  %10 = load i32* %9, align 8, !dbg !7146
  %11 = icmp sle i32 %10, 5, !dbg !7146
  %12 = zext i1 %11 to i8, !dbg !7146
  store i8 %12, i8* %usflag, align 1, !dbg !7146
  %buf1 = bitcast [167 x i8]* %buf to i8*, !dbg !7147
  store i8* %buf1, i8** %b, align 8, !dbg !7147
  %13 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7148
  %14 = getelementptr inbounds %struct.psfs_t* %13, i32 0, i32 7, !dbg !7148
  %15 = load i32* %14, align 8, !dbg !7148
  %16 = icmp eq i32 %15, 1, !dbg !7148
  br i1 %16, label %bb, label %bb12, !dbg !7148

bb:                                               ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8]* @nil_string, i64 0, i64 0), i8** %p, align 8, !dbg !7149
  br label %bb2, !dbg !7149

bb2:                                              ; preds = %bb7, %bb
  %17 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7150
  %18 = call i32 @__scan_getc(%struct.scan_cookie* %17) nounwind, !dbg !7150
  %19 = icmp slt i32 %18, 0, !dbg !7150
  br i1 %19, label %bb4, label %bb3, !dbg !7150

bb3:                                              ; preds = %bb2
  %20 = load i8** %p, align 8, !dbg !7150
  %21 = load i8* %20, align 1, !dbg !7150
  %22 = zext i8 %21 to i32, !dbg !7150
  %23 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7150
  %24 = getelementptr inbounds %struct.scan_cookie* %23, i32 0, i32 0, !dbg !7150
  %25 = load i32* %24, align 8, !dbg !7150
  %26 = icmp ne i32 %22, %25, !dbg !7150
  br i1 %26, label %bb4, label %bb7, !dbg !7150

bb4:                                              ; preds = %bb3, %bb2
  %27 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7151
  call void @__scan_ungetc(%struct.scan_cookie* %27) nounwind, !dbg !7151
  %28 = load i8** %p, align 8, !dbg !7152
  %29 = icmp ugt i8* %28, getelementptr inbounds ([6 x i8]* @nil_string, i64 0, i64 0), !dbg !7152
  br i1 %29, label %bb5, label %bb12, !dbg !7152

bb5:                                              ; preds = %bb4
  store i32 -2, i32* %0, align 4, !dbg !7153
  br label %bb104, !dbg !7153

bb7:                                              ; preds = %bb3
  %30 = load i8** %p, align 8, !dbg !7154
  %31 = getelementptr inbounds i8* %30, i64 1, !dbg !7154
  store i8* %31, i8** %p, align 8, !dbg !7154
  %32 = load i8** %p, align 8, !dbg !7154
  %33 = load i8* %32, align 1, !dbg !7154
  %34 = icmp eq i8 %33, 0, !dbg !7154
  br i1 %34, label %bb8, label %bb2, !dbg !7154

bb8:                                              ; preds = %bb7
  %35 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7155
  %36 = getelementptr inbounds %struct.psfs_t* %35, i32 0, i32 9, !dbg !7155
  %37 = load i8* %36, align 8, !dbg !7155
  %38 = icmp ne i8 %37, 0, !dbg !7155
  br i1 %38, label %bb9, label %bb10, !dbg !7155

bb9:                                              ; preds = %bb8
  %39 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7156
  %40 = getelementptr inbounds %struct.psfs_t* %39, i32 0, i32 5, !dbg !7156
  %41 = load i32* %40, align 8, !dbg !7156
  %42 = add nsw i32 %41, 1, !dbg !7156
  %43 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7156
  %44 = getelementptr inbounds %struct.psfs_t* %43, i32 0, i32 5, !dbg !7156
  store i32 %42, i32* %44, align 8, !dbg !7156
  %45 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7157
  %46 = getelementptr inbounds %struct.psfs_t* %45, i32 0, i32 6, !dbg !7157
  %47 = load i32* %46, align 4, !dbg !7157
  %48 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7157
  %49 = getelementptr inbounds %struct.psfs_t* %48, i32 0, i32 3, !dbg !7157
  %50 = load i8** %49, align 8, !dbg !7157
  call void @_store_inttype(i8* %50, i32 %47, i64 0) nounwind, !dbg !7157
  br label %bb10, !dbg !7157

bb10:                                             ; preds = %bb9, %bb8
  store i32 0, i32* %0, align 4, !dbg !7158
  br label %bb104, !dbg !7158

bb12:                                             ; preds = %bb4, %entry
  %51 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7159
  %52 = call i32 @__scan_getc(%struct.scan_cookie* %51) nounwind, !dbg !7159
  %53 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7160
  %54 = getelementptr inbounds %struct.scan_cookie* %53, i32 0, i32 0, !dbg !7160
  %55 = load i32* %54, align 8, !dbg !7160
  %56 = icmp slt i32 %55, 0, !dbg !7160
  br i1 %56, label %bb13, label %bb14, !dbg !7160

bb13:                                             ; preds = %bb12
  store i32 -1, i32* %0, align 4, !dbg !7161
  br label %bb104, !dbg !7161

bb14:                                             ; preds = %bb12
  %57 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7162
  %58 = getelementptr inbounds %struct.scan_cookie* %57, i32 0, i32 0, !dbg !7162
  %59 = load i32* %58, align 8, !dbg !7162
  %60 = icmp eq i32 %59, 43, !dbg !7162
  br i1 %60, label %bb16, label %bb15, !dbg !7162

bb15:                                             ; preds = %bb14
  %61 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7162
  %62 = getelementptr inbounds %struct.scan_cookie* %61, i32 0, i32 0, !dbg !7162
  %63 = load i32* %62, align 8, !dbg !7162
  %64 = icmp eq i32 %63, 45, !dbg !7162
  br i1 %64, label %bb16, label %bb17, !dbg !7162

bb16:                                             ; preds = %bb15, %bb14
  %65 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7163
  %66 = getelementptr inbounds %struct.scan_cookie* %65, i32 0, i32 0, !dbg !7163
  %67 = load i32* %66, align 8, !dbg !7163
  %68 = trunc i32 %67 to i8, !dbg !7163
  %69 = load i8** %b, align 8, !dbg !7163
  store i8 %68, i8* %69, align 1, !dbg !7163
  %70 = load i8** %b, align 8, !dbg !7163
  %71 = getelementptr inbounds i8* %70, i64 1, !dbg !7163
  store i8* %71, i8** %b, align 8, !dbg !7163
  %72 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7164
  %73 = call i32 @__scan_getc(%struct.scan_cookie* %72) nounwind, !dbg !7164
  br label %bb17, !dbg !7164

bb17:                                             ; preds = %bb16, %bb15
  %74 = load i8* %base, align 1, !dbg !7165
  %75 = zext i8 %74 to i32, !dbg !7165
  %76 = and i32 %75, 239, !dbg !7165
  %77 = icmp eq i32 %76, 0, !dbg !7165
  br i1 %77, label %bb18, label %bb27, !dbg !7165

bb18:                                             ; preds = %bb17
  %78 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7166
  %79 = getelementptr inbounds %struct.scan_cookie* %78, i32 0, i32 0, !dbg !7166
  %80 = load i32* %79, align 8, !dbg !7166
  %81 = icmp eq i32 %80, 48, !dbg !7166
  br i1 %81, label %bb19, label %bb25, !dbg !7166

bb19:                                             ; preds = %bb18
  %82 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7167
  %83 = call i32 @__scan_getc(%struct.scan_cookie* %82) nounwind, !dbg !7167
  %84 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7168
  %85 = getelementptr inbounds %struct.scan_cookie* %84, i32 0, i32 0, !dbg !7168
  %86 = load i32* %85, align 8, !dbg !7168
  %87 = or i32 %86, 32, !dbg !7168
  %88 = icmp eq i32 %87, 120, !dbg !7168
  %89 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7169
  br i1 %88, label %bb20, label %bb22, !dbg !7168

bb20:                                             ; preds = %bb19
  %90 = call i32 @__scan_getc(%struct.scan_cookie* %89) nounwind, !dbg !7169
  %91 = icmp slt i32 %90, 0, !dbg !7169
  br i1 %91, label %DONE_DO_UNGET, label %bb21, !dbg !7169

bb21:                                             ; preds = %bb20
  store i8 16, i8* %base, align 1, !dbg !7170
  br label %bb27, !dbg !7170

bb22:                                             ; preds = %bb19
  call void @__scan_ungetc(%struct.scan_cookie* %89) nounwind, !dbg !7171
  %92 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7172
  %93 = getelementptr inbounds %struct.scan_cookie* %92, i32 0, i32 0, !dbg !7172
  store i32 48, i32* %93, align 8, !dbg !7172
  %94 = load i8* %base, align 1, !dbg !7173
  %int_cast_to_i64 = zext i8 1 to i64
  %95 = icmp ult i64 %int_cast_to_i64, 8
  br i1 %95, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb22
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb22
  %96 = lshr i8 %94, 1, !dbg !7173
  %97 = add i8 %96, 8, !dbg !7173
  store i8 %97, i8* %base, align 1, !dbg !7173
  %98 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7174
  %99 = getelementptr inbounds %struct.psfs_t* %98, i32 0, i32 7, !dbg !7174
  %100 = load i32* %99, align 8, !dbg !7174
  %101 = icmp sgt i32 %100, 7, !dbg !7174
  br i1 %101, label %bb23, label %bb27, !dbg !7174

bb23:                                             ; preds = %klee_overshift_check.exit
  store i8 10, i8* %base, align 1, !dbg !7175
  br label %bb27, !dbg !7175

bb25:                                             ; preds = %bb18
  %102 = load i8* %base, align 1, !dbg !7176
  %103 = icmp eq i8 %102, 0, !dbg !7176
  br i1 %103, label %bb26, label %bb27, !dbg !7176

bb26:                                             ; preds = %bb25
  store i8 10, i8* %base, align 1, !dbg !7177
  br label %bb27, !dbg !7177

bb27:                                             ; preds = %bb21, %klee_overshift_check.exit, %bb23, %bb26, %bb25, %bb17
  %104 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7178
  %105 = getelementptr inbounds %struct.scan_cookie* %104, i32 0, i32 0, !dbg !7178
  %106 = load i32* %105, align 8, !dbg !7178
  %107 = icmp eq i32 %106, 48, !dbg !7178
  br i1 %107, label %bb28, label %bb38, !dbg !7178

bb28:                                             ; preds = %bb27
  store i8 1, i8* %seendigit, align 1, !dbg !7179
  %108 = load i8** %b, align 8, !dbg !7180
  store i8 48, i8* %108, align 1, !dbg !7180
  %109 = load i8** %b, align 8, !dbg !7180
  %110 = getelementptr inbounds i8* %109, i64 1, !dbg !7180
  store i8* %110, i8** %b, align 8, !dbg !7180
  br label %bb29, !dbg !7180

bb29:                                             ; preds = %bb29, %bb28
  %111 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7181
  %112 = call i32 @__scan_getc(%struct.scan_cookie* %111) nounwind, !dbg !7181
  %113 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7182
  %114 = getelementptr inbounds %struct.scan_cookie* %113, i32 0, i32 0, !dbg !7182
  %115 = load i32* %114, align 8, !dbg !7182
  %116 = icmp eq i32 %115, 48, !dbg !7182
  br i1 %116, label %bb29, label %bb38, !dbg !7182

bb31:                                             ; preds = %bb40, %bb39
  %117 = load i8** %b, align 8, !dbg !7183
  %118 = ptrtoint i8* %117 to i64, !dbg !7183
  %buf32 = bitcast [167 x i8]* %buf to i8*, !dbg !7183
  %buf3233 = ptrtoint i8* %buf32 to i64, !dbg !7183
  %119 = sub nsw i64 %118, %buf3233, !dbg !7183
  %120 = icmp sle i64 %119, 64, !dbg !7183
  br i1 %120, label %bb35, label %bb36, !dbg !7183

bb35:                                             ; preds = %bb31
  store i8 1, i8* %seendigit, align 1, !dbg !7184
  %121 = load i8* %seendigit, align 1, !dbg !7184
  store i8 %121, i8* %nonzero, align 1, !dbg !7184
  %122 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7185
  %123 = getelementptr inbounds %struct.scan_cookie* %122, i32 0, i32 0, !dbg !7185
  %124 = load i32* %123, align 8, !dbg !7185
  %125 = trunc i32 %124 to i8, !dbg !7185
  %126 = load i8** %b, align 8, !dbg !7185
  store i8 %125, i8* %126, align 1, !dbg !7185
  %127 = load i8** %b, align 8, !dbg !7185
  %128 = getelementptr inbounds i8* %127, i64 1, !dbg !7185
  store i8* %128, i8** %b, align 8, !dbg !7185
  br label %bb37, !dbg !7185

bb36:                                             ; preds = %bb31
  %129 = load i32* %exp_adjust, align 4, !dbg !7186
  %130 = add nsw i32 %129, 1, !dbg !7186
  store i32 %130, i32* %exp_adjust, align 4, !dbg !7186
  br label %bb37, !dbg !7186

bb37:                                             ; preds = %bb36, %bb35
  %131 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7187
  %132 = call i32 @__scan_getc(%struct.scan_cookie* %131) nounwind, !dbg !7187
  br label %bb38, !dbg !7187

bb38:                                             ; preds = %bb27, %bb29, %bb37
  %133 = load i16** @__ctype_b, align 8, !dbg !7188
  %134 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7188
  %135 = getelementptr inbounds %struct.scan_cookie* %134, i32 0, i32 0, !dbg !7188
  %136 = load i32* %135, align 8, !dbg !7188
  %137 = sext i32 %136 to i64, !dbg !7188
  %138 = getelementptr inbounds i16* %133, i64 %137, !dbg !7188
  %139 = load i16* %138, align 1, !dbg !7188
  %140 = zext i16 %139 to i32, !dbg !7188
  %141 = and i32 %140, 4096, !dbg !7188
  %142 = icmp eq i32 %141, 0, !dbg !7188
  br i1 %142, label %bb41, label %bb39, !dbg !7188

bb39:                                             ; preds = %bb38
  %143 = load i8* %base, align 1, !dbg !7188
  %144 = icmp eq i8 %143, 16, !dbg !7188
  br i1 %144, label %bb31, label %bb40, !dbg !7188

bb40:                                             ; preds = %bb39
  %145 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7188
  %146 = getelementptr inbounds %struct.scan_cookie* %145, i32 0, i32 0, !dbg !7188
  %147 = load i32* %146, align 8, !dbg !7188
  %148 = sub nsw i32 %147, 48, !dbg !7188
  %149 = load i8* %base, align 1, !dbg !7188
  %150 = zext i8 %149 to i32, !dbg !7188
  %151 = icmp slt i32 %148, %150, !dbg !7188
  br i1 %151, label %bb31, label %bb41, !dbg !7188

bb41:                                             ; preds = %bb40, %bb38
  %152 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7189
  %153 = getelementptr inbounds %struct.psfs_t* %152, i32 0, i32 7, !dbg !7189
  %154 = load i32* %153, align 8, !dbg !7189
  %155 = icmp sle i32 %154, 7, !dbg !7189
  %156 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7190
  br i1 %155, label %bb42, label %bb50, !dbg !7189

bb42:                                             ; preds = %bb41
  call void @__scan_ungetc(%struct.scan_cookie* %156) nounwind, !dbg !7190
  %157 = load i8** %b, align 8, !dbg !7191
  store i8 0, i8* %157, align 1, !dbg !7191
  %158 = load i8* %seendigit, align 1, !dbg !7192
  %159 = icmp eq i8 %158, 0, !dbg !7192
  br i1 %159, label %DONE, label %bb43, !dbg !7192

bb43:                                             ; preds = %bb42
  %160 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7193
  %161 = getelementptr inbounds %struct.psfs_t* %160, i32 0, i32 9, !dbg !7193
  %162 = load i8* %161, align 8, !dbg !7193
  %163 = icmp ne i8 %162, 0, !dbg !7193
  br i1 %163, label %bb44, label %bb49, !dbg !7193

bb44:                                             ; preds = %bb43
  %164 = getelementptr inbounds [167 x i8]* %buf, i64 0, i64 0, !dbg !7194
  %165 = load i8* %164, align 1, !dbg !7194
  %166 = icmp eq i8 %165, 45, !dbg !7194
  br i1 %166, label %bb45, label %bb46, !dbg !7194

bb45:                                             ; preds = %bb44
  store i8 0, i8* %usflag, align 1, !dbg !7195
  br label %bb46, !dbg !7195

bb46:                                             ; preds = %bb45, %bb44
  %167 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7196
  %168 = getelementptr inbounds %struct.psfs_t* %167, i32 0, i32 5, !dbg !7196
  %169 = load i32* %168, align 8, !dbg !7196
  %170 = add nsw i32 %169, 1, !dbg !7196
  %171 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7196
  %172 = getelementptr inbounds %struct.psfs_t* %171, i32 0, i32 5, !dbg !7196
  store i32 %170, i32* %172, align 8, !dbg !7196
  %173 = load i8* %usflag, align 1, !dbg !7197
  %174 = zext i8 %173 to i32, !dbg !7197
  %175 = sub nsw i32 1, %174, !dbg !7197
  %176 = load i8* %base, align 1, !dbg !7197
  %177 = zext i8 %176 to i32, !dbg !7197
  %buf47 = bitcast [167 x i8]* %buf to i8*, !dbg !7197
  %178 = call i64 @_stdlib_strto_l(i8* noalias %buf47, i8** noalias null, i32 %177, i32 %175) nounwind, !dbg !7197
  %179 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7197
  %180 = getelementptr inbounds %struct.psfs_t* %179, i32 0, i32 6, !dbg !7197
  %181 = load i32* %180, align 4, !dbg !7197
  %182 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7197
  %183 = getelementptr inbounds %struct.psfs_t* %182, i32 0, i32 3, !dbg !7197
  %184 = load i8** %183, align 8, !dbg !7197
  call void @_store_inttype(i8* %184, i32 %181, i64 %178) nounwind, !dbg !7197
  br label %bb49, !dbg !7197

bb49:                                             ; preds = %bb46, %bb43
  store i32 0, i32* %0, align 4, !dbg !7198
  br label %bb104, !dbg !7198

bb50:                                             ; preds = %bb41
  %185 = getelementptr inbounds %struct.scan_cookie* %156, i32 0, i32 17, !dbg !7199
  %186 = load i8** %185, align 8, !dbg !7199
  store i8* %186, i8** %p, align 8, !dbg !7199
  br label %bb51, !dbg !7199

bb51:                                             ; preds = %bb56, %bb50
  %187 = load i8** %p, align 8, !dbg !7200
  %188 = load i8* %187, align 1, !dbg !7200
  %189 = icmp eq i8 %188, 0, !dbg !7200
  br i1 %189, label %bb52, label %bb53, !dbg !7200

bb52:                                             ; preds = %bb51
  %190 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7201
  %191 = getelementptr inbounds %struct.scan_cookie* %190, i32 0, i32 14, !dbg !7201
  %192 = load i8** %191, align 8, !dbg !7201
  %193 = load i8** %b, align 8, !dbg !7201
  %194 = call i8* @strcpy(i8* noalias %193, i8* noalias %192) nounwind, !dbg !7201
  %195 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7202
  %196 = getelementptr inbounds %struct.scan_cookie* %195, i32 0, i32 15, !dbg !7202
  %197 = load i32* %196, align 8, !dbg !7202
  %198 = load i8** %b, align 8, !dbg !7202
  %199 = sext i32 %197 to i64, !dbg !7202
  %200 = getelementptr inbounds i8* %198, i64 %199, !dbg !7202
  store i8* %200, i8** %b, align 8, !dbg !7202
  %201 = load i8* %nonzero, align 1, !dbg !7203
  %202 = icmp eq i8 %201, 0, !dbg !7203
  br i1 %202, label %bb57, label %bb67, !dbg !7203

bb53:                                             ; preds = %bb51
  %203 = load i8** %p, align 8, !dbg !7204
  %204 = load i8* %203, align 1, !dbg !7204
  %205 = zext i8 %204 to i32, !dbg !7204
  %206 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7204
  %207 = getelementptr inbounds %struct.scan_cookie* %206, i32 0, i32 0, !dbg !7204
  %208 = load i32* %207, align 8, !dbg !7204
  %209 = icmp ne i32 %205, %208, !dbg !7204
  br i1 %209, label %bb54, label %bb56, !dbg !7204

bb54:                                             ; preds = %bb53
  %210 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7205
  %211 = getelementptr inbounds %struct.scan_cookie* %210, i32 0, i32 17, !dbg !7205
  %212 = load i8** %211, align 8, !dbg !7205
  %213 = load i8** %p, align 8, !dbg !7205
  %214 = icmp ult i8* %212, %213, !dbg !7205
  br i1 %214, label %DONE_DO_UNGET, label %DO_DIGIT_CHECK, !dbg !7205

bb56:                                             ; preds = %bb53
  %215 = load i8** %p, align 8, !dbg !7206
  %216 = getelementptr inbounds i8* %215, i64 1, !dbg !7206
  store i8* %216, i8** %p, align 8, !dbg !7206
  %217 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7207
  %218 = call i32 @__scan_getc(%struct.scan_cookie* %217) nounwind, !dbg !7207
  br label %bb51, !dbg !7207

bb57:                                             ; preds = %bb52
  %219 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7208
  %220 = getelementptr inbounds %struct.scan_cookie* %219, i32 0, i32 0, !dbg !7208
  %221 = load i32* %220, align 8, !dbg !7208
  %222 = icmp eq i32 %221, 48, !dbg !7208
  br i1 %222, label %bb58, label %bb67, !dbg !7208

bb58:                                             ; preds = %bb57
  %223 = load i8** %b, align 8, !dbg !7209
  store i8 48, i8* %223, align 1, !dbg !7209
  %224 = load i8** %b, align 8, !dbg !7209
  %225 = getelementptr inbounds i8* %224, i64 1, !dbg !7209
  store i8* %225, i8** %b, align 8, !dbg !7209
  %226 = load i32* %exp_adjust, align 4, !dbg !7210
  %227 = add nsw i32 %226, 1, !dbg !7210
  store i32 %227, i32* %exp_adjust, align 4, !dbg !7210
  store i8 1, i8* %seendigit, align 1, !dbg !7211
  br label %bb59, !dbg !7211

bb59:                                             ; preds = %bb59, %bb58
  %228 = load i32* %exp_adjust, align 4, !dbg !7212
  %229 = sub nsw i32 %228, 1, !dbg !7212
  store i32 %229, i32* %exp_adjust, align 4, !dbg !7212
  %230 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7213
  %231 = call i32 @__scan_getc(%struct.scan_cookie* %230) nounwind, !dbg !7213
  %232 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7214
  %233 = getelementptr inbounds %struct.scan_cookie* %232, i32 0, i32 0, !dbg !7214
  %234 = load i32* %233, align 8, !dbg !7214
  %235 = icmp eq i32 %234, 48, !dbg !7214
  br i1 %235, label %bb59, label %bb67, !dbg !7214

bb61:                                             ; preds = %bb69, %bb68
  %236 = load i8** %b, align 8, !dbg !7215
  %237 = ptrtoint i8* %236 to i64, !dbg !7215
  %buf62 = bitcast [167 x i8]* %buf to i8*, !dbg !7215
  %buf6263 = ptrtoint i8* %buf62 to i64, !dbg !7215
  %238 = sub nsw i64 %237, %buf6263, !dbg !7215
  %239 = icmp sle i64 %238, 64, !dbg !7215
  br i1 %239, label %bb65, label %bb66, !dbg !7215

bb65:                                             ; preds = %bb61
  store i8 1, i8* %seendigit, align 1, !dbg !7216
  %240 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7217
  %241 = getelementptr inbounds %struct.scan_cookie* %240, i32 0, i32 0, !dbg !7217
  %242 = load i32* %241, align 8, !dbg !7217
  %243 = trunc i32 %242 to i8, !dbg !7217
  %244 = load i8** %b, align 8, !dbg !7217
  store i8 %243, i8* %244, align 1, !dbg !7217
  %245 = load i8** %b, align 8, !dbg !7217
  %246 = getelementptr inbounds i8* %245, i64 1, !dbg !7217
  store i8* %246, i8** %b, align 8, !dbg !7217
  br label %bb66, !dbg !7217

bb66:                                             ; preds = %bb65, %bb61
  %247 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7218
  %248 = call i32 @__scan_getc(%struct.scan_cookie* %247) nounwind, !dbg !7218
  br label %bb67, !dbg !7218

bb67:                                             ; preds = %bb52, %bb57, %bb59, %bb66
  %249 = load i16** @__ctype_b, align 8, !dbg !7219
  %250 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7219
  %251 = getelementptr inbounds %struct.scan_cookie* %250, i32 0, i32 0, !dbg !7219
  %252 = load i32* %251, align 8, !dbg !7219
  %253 = sext i32 %252 to i64, !dbg !7219
  %254 = getelementptr inbounds i16* %249, i64 %253, !dbg !7219
  %255 = load i16* %254, align 1, !dbg !7219
  %256 = zext i16 %255 to i32, !dbg !7219
  %257 = and i32 %256, 4096, !dbg !7219
  %258 = icmp eq i32 %257, 0, !dbg !7219
  br i1 %258, label %DO_DIGIT_CHECK, label %bb68, !dbg !7219

bb68:                                             ; preds = %bb67
  %259 = load i8* %base, align 1, !dbg !7219
  %260 = icmp eq i8 %259, 16, !dbg !7219
  br i1 %260, label %bb61, label %bb69, !dbg !7219

bb69:                                             ; preds = %bb68
  %261 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7219
  %262 = getelementptr inbounds %struct.scan_cookie* %261, i32 0, i32 0, !dbg !7219
  %263 = load i32* %262, align 8, !dbg !7219
  %264 = sub nsw i32 %263, 48, !dbg !7219
  %265 = load i8* %base, align 1, !dbg !7219
  %266 = zext i8 %265 to i32, !dbg !7219
  %267 = icmp slt i32 %264, %266, !dbg !7219
  br i1 %267, label %bb61, label %DO_DIGIT_CHECK, !dbg !7219

DO_DIGIT_CHECK:                                   ; preds = %bb54, %bb69, %bb67
  %268 = load i8* %seendigit, align 1, !dbg !7220
  %269 = icmp eq i8 %268, 0, !dbg !7220
  br i1 %269, label %bb70, label %bb81, !dbg !7220

bb70:                                             ; preds = %DO_DIGIT_CHECK
  %270 = load i8* %base, align 1, !dbg !7221
  %271 = icmp eq i8 %270, 16, !dbg !7221
  br i1 %271, label %DONE_DO_UNGET, label %bb71, !dbg !7221

bb71:                                             ; preds = %bb70
  %272 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7223
  %273 = getelementptr inbounds %struct.scan_cookie* %272, i32 0, i32 0, !dbg !7223
  %274 = load i32* %273, align 8, !dbg !7223
  %275 = or i32 %274, 32, !dbg !7223
  switch i32 %275, label %DONE_DO_UNGET [
    i32 105, label %bb72
    i32 110, label %bb73
  ], !dbg !7223

bb72:                                             ; preds = %bb71
  store i8* getelementptr inbounds ([11 x i8]* @nan_inf_str.3836, i64 0, i64 3), i8** %p, align 8, !dbg !7224
  br label %bb75, !dbg !7224

bb73:                                             ; preds = %bb71
  store i8* getelementptr inbounds ([11 x i8]* @nan_inf_str.3836, i64 0, i64 0), i8** %p, align 8, !dbg !7225
  br label %bb75, !dbg !7225

bb75:                                             ; preds = %bb73, %bb72
  %276 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7226
  %277 = getelementptr inbounds %struct.scan_cookie* %276, i32 0, i32 0, !dbg !7226
  %278 = load i32* %277, align 8, !dbg !7226
  %279 = trunc i32 %278 to i8, !dbg !7226
  %280 = load i8** %b, align 8, !dbg !7226
  store i8 %279, i8* %280, align 1, !dbg !7226
  %281 = load i8** %b, align 8, !dbg !7226
  %282 = getelementptr inbounds i8* %281, i64 1, !dbg !7226
  store i8* %282, i8** %b, align 8, !dbg !7226
  br label %bb76, !dbg !7226

bb76:                                             ; preds = %bb77, %bb75
  %283 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7227
  %284 = call i32 @__scan_getc(%struct.scan_cookie* %283) nounwind, !dbg !7227
  %285 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7228
  %286 = getelementptr inbounds %struct.scan_cookie* %285, i32 0, i32 0, !dbg !7228
  %287 = load i32* %286, align 8, !dbg !7228
  %288 = or i32 %287, 32, !dbg !7228
  %289 = load i8** %p, align 8, !dbg !7228
  %290 = load i8* %289, align 1, !dbg !7228
  %291 = zext i8 %290 to i32, !dbg !7228
  %292 = icmp eq i32 %288, %291, !dbg !7228
  br i1 %292, label %bb77, label %bb78, !dbg !7228

bb77:                                             ; preds = %bb76
  %293 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7229
  %294 = getelementptr inbounds %struct.scan_cookie* %293, i32 0, i32 0, !dbg !7229
  %295 = load i32* %294, align 8, !dbg !7229
  %296 = trunc i32 %295 to i8, !dbg !7229
  %297 = load i8** %b, align 8, !dbg !7229
  store i8 %296, i8* %297, align 1, !dbg !7229
  %298 = load i8** %b, align 8, !dbg !7229
  %299 = getelementptr inbounds i8* %298, i64 1, !dbg !7229
  store i8* %299, i8** %b, align 8, !dbg !7229
  %300 = load i8** %p, align 8, !dbg !7230
  %301 = getelementptr inbounds i8* %300, i64 1, !dbg !7230
  store i8* %301, i8** %p, align 8, !dbg !7230
  br label %bb76, !dbg !7230

bb78:                                             ; preds = %bb76
  %302 = load i8** %p, align 8, !dbg !7231
  %303 = load i8* %302, align 1, !dbg !7231
  %304 = icmp eq i8 %303, 0, !dbg !7231
  %305 = load i8** %p, align 8, !dbg !7231
  %306 = icmp eq i8* %305, getelementptr inbounds ([11 x i8]* @nan_inf_str.3836, i64 0, i64 5), !dbg !7231
  %or.cond = or i1 %304, %306
  br i1 %or.cond, label %GOT_FLOAT, label %DONE_DO_UNGET, !dbg !7231

bb81:                                             ; preds = %DO_DIGIT_CHECK
  %307 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7232
  %308 = getelementptr inbounds %struct.scan_cookie* %307, i32 0, i32 0, !dbg !7232
  %309 = load i32* %308, align 8, !dbg !7232
  %310 = or i32 %309, 32, !dbg !7232
  %311 = icmp eq i32 %310, 101, !dbg !7233
  br i1 %311, label %bb82, label %GOT_FLOAT, !dbg !7233

bb82:                                             ; preds = %bb81
  %312 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7234
  %313 = getelementptr inbounds %struct.scan_cookie* %312, i32 0, i32 0, !dbg !7234
  %314 = load i32* %313, align 8, !dbg !7234
  %315 = trunc i32 %314 to i8, !dbg !7234
  %316 = load i8** %b, align 8, !dbg !7234
  store i8 %315, i8* %316, align 1, !dbg !7234
  %317 = load i8** %b, align 8, !dbg !7234
  %318 = getelementptr inbounds i8* %317, i64 1, !dbg !7234
  store i8* %318, i8** %b, align 8, !dbg !7234
  %319 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7235
  %320 = call i32 @__scan_getc(%struct.scan_cookie* %319) nounwind, !dbg !7235
  %321 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7236
  %322 = getelementptr inbounds %struct.scan_cookie* %321, i32 0, i32 0, !dbg !7236
  %323 = load i32* %322, align 8, !dbg !7236
  %324 = icmp slt i32 %323, 0, !dbg !7236
  br i1 %324, label %DONE_DO_UNGET, label %bb83, !dbg !7236

bb83:                                             ; preds = %bb82
  %325 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7237
  %326 = getelementptr inbounds %struct.scan_cookie* %325, i32 0, i32 0, !dbg !7237
  %327 = load i32* %326, align 8, !dbg !7237
  %328 = icmp eq i32 %327, 43, !dbg !7237
  br i1 %328, label %bb85, label %bb84, !dbg !7237

bb84:                                             ; preds = %bb83
  %329 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7237
  %330 = getelementptr inbounds %struct.scan_cookie* %329, i32 0, i32 0, !dbg !7237
  %331 = load i32* %330, align 8, !dbg !7237
  %332 = icmp eq i32 %331, 45, !dbg !7237
  br i1 %332, label %bb85, label %bb86, !dbg !7237

bb85:                                             ; preds = %bb84, %bb83
  %333 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7238
  %334 = getelementptr inbounds %struct.scan_cookie* %333, i32 0, i32 0, !dbg !7238
  %335 = load i32* %334, align 8, !dbg !7238
  %336 = trunc i32 %335 to i8, !dbg !7238
  %337 = load i8** %b, align 8, !dbg !7238
  store i8 %336, i8* %337, align 1, !dbg !7238
  %338 = load i8** %b, align 8, !dbg !7238
  %339 = getelementptr inbounds i8* %338, i64 1, !dbg !7238
  store i8* %339, i8** %b, align 8, !dbg !7238
  %340 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7239
  %341 = call i32 @__scan_getc(%struct.scan_cookie* %340) nounwind, !dbg !7239
  br label %bb86, !dbg !7239

bb86:                                             ; preds = %bb85, %bb84
  store i8 0, i8* %seendigit, align 1, !dbg !7240
  store i8 0, i8* %nonzero, align 1, !dbg !7241
  %342 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7242
  %343 = getelementptr inbounds %struct.scan_cookie* %342, i32 0, i32 0, !dbg !7242
  %344 = load i32* %343, align 8, !dbg !7242
  %345 = icmp eq i32 %344, 48, !dbg !7242
  br i1 %345, label %bb87, label %bb93, !dbg !7242

bb87:                                             ; preds = %bb86
  store i8 1, i8* %seendigit, align 1, !dbg !7243
  %346 = load i8** %b, align 8, !dbg !7244
  store i8 48, i8* %346, align 1, !dbg !7244
  %347 = load i8** %b, align 8, !dbg !7244
  %348 = getelementptr inbounds i8* %347, i64 1, !dbg !7244
  store i8* %348, i8** %b, align 8, !dbg !7244
  br label %bb88, !dbg !7244

bb88:                                             ; preds = %bb88, %bb87
  %349 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7245
  %350 = call i32 @__scan_getc(%struct.scan_cookie* %349) nounwind, !dbg !7245
  %351 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7246
  %352 = getelementptr inbounds %struct.scan_cookie* %351, i32 0, i32 0, !dbg !7246
  %353 = load i32* %352, align 8, !dbg !7246
  %354 = icmp eq i32 %353, 48, !dbg !7246
  br i1 %354, label %bb88, label %bb93, !dbg !7246

bb90:                                             ; preds = %bb93
  %355 = icmp ule i8 %373, 19, !dbg !7247
  br i1 %355, label %bb91, label %bb92, !dbg !7247

bb91:                                             ; preds = %bb90
  %356 = load i8* %seendigit, align 1, !dbg !7248
  %357 = add i8 %356, 1, !dbg !7248
  store i8 %357, i8* %seendigit, align 1, !dbg !7248
  %358 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7249
  %359 = getelementptr inbounds %struct.scan_cookie* %358, i32 0, i32 0, !dbg !7249
  %360 = load i32* %359, align 8, !dbg !7249
  %361 = trunc i32 %360 to i8, !dbg !7249
  %362 = load i8** %b, align 8, !dbg !7249
  store i8 %361, i8* %362, align 1, !dbg !7249
  %363 = load i8** %b, align 8, !dbg !7249
  %364 = getelementptr inbounds i8* %363, i64 1, !dbg !7249
  store i8* %364, i8** %b, align 8, !dbg !7249
  br label %bb92, !dbg !7249

bb92:                                             ; preds = %bb91, %bb90
  %365 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7250
  %366 = call i32 @__scan_getc(%struct.scan_cookie* %365) nounwind, !dbg !7250
  br label %bb93, !dbg !7250

bb93:                                             ; preds = %bb86, %bb88, %bb92
  %367 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7251
  %368 = getelementptr inbounds %struct.scan_cookie* %367, i32 0, i32 0, !dbg !7251
  %369 = load i32* %368, align 8, !dbg !7251
  %370 = trunc i32 %369 to i8, !dbg !7251
  %371 = sub i8 %370, 48, !dbg !7251
  %372 = icmp ule i8 %371, 9, !dbg !7251
  %373 = load i8* %seendigit, align 1, !dbg !7247
  br i1 %372, label %bb90, label %bb94, !dbg !7251

bb94:                                             ; preds = %bb93
  %374 = icmp eq i8 %373, 0, !dbg !7252
  br i1 %374, label %DONE_DO_UNGET, label %GOT_FLOAT, !dbg !7252

GOT_FLOAT:                                        ; preds = %bb94, %bb81, %bb78
  %375 = load i8** %b, align 8, !dbg !7253
  store i8 0, i8* %375, align 1, !dbg !7253
  %buf95 = bitcast [167 x i8]* %buf to i8*, !dbg !7254
  %376 = load i32* %exp_adjust, align 4, !dbg !7254
  %377 = call x86_fp80 @__strtofpmax(i8* %buf95, i8** %e, i32 %376) nounwind, !dbg !7254
  store x86_fp80 %377, x86_fp80* %x, align 16, !dbg !7254
  %378 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7256
  %379 = getelementptr inbounds %struct.psfs_t* %378, i32 0, i32 9, !dbg !7256
  %380 = load i8* %379, align 8, !dbg !7256
  %381 = icmp ne i8 %380, 0, !dbg !7256
  br i1 %381, label %bb97, label %bb103, !dbg !7256

bb97:                                             ; preds = %GOT_FLOAT
  %382 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7257
  %383 = getelementptr inbounds %struct.psfs_t* %382, i32 0, i32 6, !dbg !7257
  %384 = load i32* %383, align 4, !dbg !7257
  %385 = and i32 %384, 2048, !dbg !7257
  %386 = icmp ne i32 %385, 0, !dbg !7257
  %387 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7258
  br i1 %386, label %bb98, label %bb99, !dbg !7257

bb98:                                             ; preds = %bb97
  %388 = getelementptr inbounds %struct.psfs_t* %387, i32 0, i32 3, !dbg !7258
  %389 = load i8** %388, align 8, !dbg !7258
  %390 = bitcast i8* %389 to x86_fp80*, !dbg !7258
  %391 = load x86_fp80* %x, align 16, !dbg !7258
  store x86_fp80 %391, x86_fp80* %390, align 16, !dbg !7258
  br label %bb102, !dbg !7258

bb99:                                             ; preds = %bb97
  %392 = getelementptr inbounds %struct.psfs_t* %387, i32 0, i32 6, !dbg !7259
  %393 = load i32* %392, align 4, !dbg !7259
  %394 = and i32 %393, 1024, !dbg !7259
  %395 = icmp ne i32 %394, 0, !dbg !7259
  %396 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7260
  %397 = getelementptr inbounds %struct.psfs_t* %396, i32 0, i32 3, !dbg !7260
  %398 = load i8** %397, align 8, !dbg !7260
  br i1 %395, label %bb100, label %bb101, !dbg !7259

bb100:                                            ; preds = %bb99
  %399 = bitcast i8* %398 to double*, !dbg !7260
  %400 = load x86_fp80* %x, align 16, !dbg !7260
  %401 = fptrunc x86_fp80 %400 to double, !dbg !7260
  store double %401, double* %399, align 8, !dbg !7260
  br label %bb102, !dbg !7260

bb101:                                            ; preds = %bb99
  %402 = bitcast i8* %398 to float*, !dbg !7261
  %403 = load x86_fp80* %x, align 16, !dbg !7261
  %404 = fptrunc x86_fp80 %403 to float, !dbg !7261
  store float %404, float* %402, align 4, !dbg !7261
  br label %bb102, !dbg !7261

bb102:                                            ; preds = %bb101, %bb100, %bb98
  %405 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7262
  %406 = getelementptr inbounds %struct.psfs_t* %405, i32 0, i32 5, !dbg !7262
  %407 = load i32* %406, align 8, !dbg !7262
  %408 = add nsw i32 %407, 1, !dbg !7262
  %409 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7262
  %410 = getelementptr inbounds %struct.psfs_t* %409, i32 0, i32 5, !dbg !7262
  store i32 %408, i32* %410, align 8, !dbg !7262
  br label %bb103, !dbg !7262

bb103:                                            ; preds = %bb102, %GOT_FLOAT
  %411 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7263
  call void @__scan_ungetc(%struct.scan_cookie* %411) nounwind, !dbg !7263
  store i32 0, i32* %0, align 4, !dbg !7264
  br label %bb104, !dbg !7264

DONE_DO_UNGET:                                    ; preds = %bb78, %bb71, %bb94, %bb82, %bb70, %bb54, %bb20
  %412 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7265
  call void @__scan_ungetc(%struct.scan_cookie* %412) nounwind, !dbg !7265
  br label %DONE, !dbg !7266

DONE:                                             ; preds = %DONE_DO_UNGET, %bb42
  store i32 -2, i32* %0, align 4, !dbg !7267
  br label %bb104, !dbg !7267

bb104:                                            ; preds = %DONE, %bb103, %bb49, %bb13, %bb10, %bb5
  %413 = load i32* %0, align 4, !dbg !7153
  store i32 %413, i32* %retval, align 4, !dbg !7153
  %retval105 = load i32* %retval, !dbg !7153
  ret i32 %retval105, !dbg !7153
}

define hidden %struct.exit_function* @__new_exitfn() nounwind {
entry:
  %retval = alloca %struct.exit_function*
  %0 = alloca %struct.exit_function*
  %efp = alloca %struct.exit_function*
  %"alloca point" = bitcast i32 0 to i32
  %1 = load i32* @__exit_count, align 4, !dbg !7268
  %2 = add nsw i32 %1, 1, !dbg !7268
  %3 = load i32* @__exit_slots, align 4, !dbg !7268
  %4 = icmp sgt i32 %2, %3, !dbg !7268
  br i1 %4, label %bb, label %bb3, !dbg !7268

bb:                                               ; preds = %entry
  %5 = load i32* @__exit_slots, align 4, !dbg !7270
  %6 = add nsw i32 %5, 20, !dbg !7270
  %7 = sext i32 %6 to i64, !dbg !7270
  %8 = mul i64 %7, 32, !dbg !7270
  %9 = load %struct.exit_function** @__exit_function_table, align 8, !dbg !7270
  %10 = bitcast %struct.exit_function* %9 to i8*, !dbg !7270
  %11 = call noalias i8* @realloc(i8* %10, i64 %8) nounwind, !dbg !7270
  %12 = bitcast i8* %11 to %struct.exit_function*, !dbg !7270
  store %struct.exit_function* %12, %struct.exit_function** %efp, align 8, !dbg !7270
  %13 = load %struct.exit_function** %efp, align 8, !dbg !7271
  %14 = icmp eq %struct.exit_function* %13, null, !dbg !7271
  br i1 %14, label %bb1, label %bb2, !dbg !7271

bb1:                                              ; preds = %bb
  store i32 12, i32* @errno, align 4, !dbg !7272
  br label %DONE, !dbg !7272

bb2:                                              ; preds = %bb
  %15 = load %struct.exit_function** %efp, align 8, !dbg !7273
  store %struct.exit_function* %15, %struct.exit_function** @__exit_function_table, align 8, !dbg !7273
  %16 = load i32* @__exit_slots, align 4, !dbg !7274
  %17 = add nsw i32 %16, 20, !dbg !7274
  store i32 %17, i32* @__exit_slots, align 4, !dbg !7274
  br label %bb3, !dbg !7274

bb3:                                              ; preds = %bb2, %entry
  store void (i32)* @__exit_handler, void (i32)** @__exit_cleanup, align 8, !dbg !7275
  %18 = load %struct.exit_function** @__exit_function_table, align 8, !dbg !7276
  %19 = load i32* @__exit_count, align 4, !dbg !7276
  %20 = sext i32 %19 to i64, !dbg !7276
  %21 = getelementptr inbounds %struct.exit_function* %18, i64 %20, !dbg !7276
  store %struct.exit_function* %21, %struct.exit_function** %efp, align 8, !dbg !7276
  %22 = add nsw i32 %19, 1, !dbg !7276
  store i32 %22, i32* @__exit_count, align 4, !dbg !7276
  %23 = load %struct.exit_function** %efp, align 8, !dbg !7277
  %24 = getelementptr inbounds %struct.exit_function* %23, i32 0, i32 0, !dbg !7277
  store i64 1, i64* %24, align 8, !dbg !7277
  br label %DONE, !dbg !7278

DONE:                                             ; preds = %bb3, %bb1
  %25 = load %struct.exit_function** %efp, align 8, !dbg !7279
  store %struct.exit_function* %25, %struct.exit_function** %0, align 8, !dbg !7279
  %26 = load %struct.exit_function** %0, align 8, !dbg !7279
  store %struct.exit_function* %26, %struct.exit_function** %retval, align 8, !dbg !7279
  %retval4 = load %struct.exit_function** %retval, !dbg !7279
  ret %struct.exit_function* %retval4, !dbg !7279
}

define hidden void @__exit_handler(i32 %status) nounwind {
entry:
  %status_addr = alloca i32, align 4
  %efp = alloca %struct.exit_function*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  br label %bb6, !dbg !7280

bb:                                               ; preds = %bb6
  %0 = load i32* @__exit_count, align 4, !dbg !7282
  %1 = sub nsw i32 %0, 1, !dbg !7282
  store i32 %1, i32* @__exit_count, align 4, !dbg !7282
  %2 = load i32* @__exit_count, align 4, !dbg !7282
  %3 = sext i32 %2 to i64, !dbg !7282
  %4 = getelementptr inbounds %struct.exit_function* %46, i64 %3, !dbg !7282
  store %struct.exit_function* %4, %struct.exit_function** %efp, align 8, !dbg !7282
  %5 = load %struct.exit_function** %efp, align 8, !dbg !7283
  %6 = getelementptr inbounds %struct.exit_function* %5, i32 0, i32 0, !dbg !7283
  %7 = load i64* %6, align 8, !dbg !7283
  switch i64 %7, label %bb6 [
    i64 2, label %bb1
    i64 3, label %bb4
  ], !dbg !7283

bb1:                                              ; preds = %bb
  %8 = load %struct.exit_function** %efp, align 8, !dbg !7284
  %9 = getelementptr inbounds %struct.exit_function* %8, i32 0, i32 1, !dbg !7284
  %10 = getelementptr inbounds %1* %9, i32 0, i32 0, !dbg !7284
  %11 = bitcast %2* %10 to %10*, !dbg !7284
  %12 = getelementptr inbounds %10* %11, i32 0, i32 0, !dbg !7284
  %13 = load void (i32, i8*)** %12, align 8, !dbg !7284
  %14 = icmp ne void (i32, i8*)* %13, null, !dbg !7284
  br i1 %14, label %bb2, label %bb6, !dbg !7284

bb2:                                              ; preds = %bb1
  %15 = load %struct.exit_function** %efp, align 8, !dbg !7285
  %16 = getelementptr inbounds %struct.exit_function* %15, i32 0, i32 1, !dbg !7285
  %17 = getelementptr inbounds %1* %16, i32 0, i32 0, !dbg !7285
  %18 = bitcast %2* %17 to %10*, !dbg !7285
  %19 = getelementptr inbounds %10* %18, i32 0, i32 0, !dbg !7285
  %20 = load void (i32, i8*)** %19, align 8, !dbg !7285
  %21 = load %struct.exit_function** %efp, align 8, !dbg !7285
  %22 = getelementptr inbounds %struct.exit_function* %21, i32 0, i32 1, !dbg !7285
  %23 = getelementptr inbounds %1* %22, i32 0, i32 0, !dbg !7285
  %24 = bitcast %2* %23 to %10*, !dbg !7285
  %25 = getelementptr inbounds %10* %24, i32 0, i32 1, !dbg !7285
  %26 = load i8** %25, align 8, !dbg !7285
  %27 = load i32* %status_addr, align 4, !dbg !7285
  call void %20(i32 %27, i8* %26) nounwind, !dbg !7285
  br label %bb6, !dbg !7285

bb4:                                              ; preds = %bb
  %28 = load %struct.exit_function** %efp, align 8, !dbg !7286
  %29 = getelementptr inbounds %struct.exit_function* %28, i32 0, i32 1, !dbg !7286
  %30 = getelementptr inbounds %1* %29, i32 0, i32 0, !dbg !7286
  %31 = getelementptr inbounds %2* %30, i32 0, i32 0, !dbg !7286
  %32 = load void (i8*)** %31, align 8, !dbg !7286
  %33 = icmp ne void (i8*)* %32, null, !dbg !7286
  br i1 %33, label %bb5, label %bb6, !dbg !7286

bb5:                                              ; preds = %bb4
  %34 = load %struct.exit_function** %efp, align 8, !dbg !7287
  %35 = getelementptr inbounds %struct.exit_function* %34, i32 0, i32 1, !dbg !7287
  %36 = getelementptr inbounds %1* %35, i32 0, i32 0, !dbg !7287
  %37 = getelementptr inbounds %2* %36, i32 0, i32 0, !dbg !7287
  %38 = load void (i8*)** %37, align 8, !dbg !7287
  %39 = load %struct.exit_function** %efp, align 8, !dbg !7287
  %40 = getelementptr inbounds %struct.exit_function* %39, i32 0, i32 1, !dbg !7287
  %41 = getelementptr inbounds %1* %40, i32 0, i32 0, !dbg !7287
  %42 = getelementptr inbounds %2* %41, i32 0, i32 1, !dbg !7287
  %43 = load i8** %42, align 8, !dbg !7287
  call void %38(i8* %43) nounwind, !dbg !7287
  br label %bb6, !dbg !7287

bb6:                                              ; preds = %bb1, %bb2, %bb5, %bb4, %bb, %entry
  %44 = load i32* @__exit_count, align 4, !dbg !7280
  %45 = icmp ne i32 %44, 0, !dbg !7280
  %46 = load %struct.exit_function** @__exit_function_table, align 8, !dbg !7282
  br i1 %45, label %bb, label %bb7, !dbg !7280

bb7:                                              ; preds = %bb6
  %47 = icmp ne %struct.exit_function* %46, null, !dbg !7288
  br i1 %47, label %bb8, label %return, !dbg !7288

bb8:                                              ; preds = %bb7
  %48 = load %struct.exit_function** @__exit_function_table, align 8, !dbg !7289
  %49 = bitcast %struct.exit_function* %48 to i8*, !dbg !7289
  call void @free(i8* %49) nounwind, !dbg !7289
  br label %return, !dbg !7289

return:                                           ; preds = %bb7, %bb8
  ret void, !dbg !7290
}

define hidden void @__init_scan_cookie(%struct.scan_cookie* %sc, %4* %fp) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %fp_addr = alloca %4*, align 8
  %iftmp.0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  store %4* %fp, %4** %fp_addr
  %0 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7291
  %1 = getelementptr inbounds %struct.scan_cookie* %0, i32 0, i32 2, !dbg !7291
  %2 = load %4** %fp_addr, align 8, !dbg !7291
  store %4* %2, %4** %1, align 8, !dbg !7291
  %3 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7293
  %4 = getelementptr inbounds %struct.scan_cookie* %3, i32 0, i32 3, !dbg !7293
  store i32 0, i32* %4, align 8, !dbg !7293
  %5 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7294
  %6 = getelementptr inbounds %struct.scan_cookie* %5, i32 0, i32 7, !dbg !7294
  store i8 0, i8* %6, align 1, !dbg !7294
  %7 = load %4** %fp_addr, align 8, !dbg !7295
  %8 = getelementptr inbounds %4* %7, i32 0, i32 0, !dbg !7295
  %9 = load i16* %8, align 8, !dbg !7295
  %10 = zext i16 %9 to i32, !dbg !7295
  %11 = and i32 %10, 2, !dbg !7295
  %12 = icmp ne i32 %11, 0, !dbg !7295
  br i1 %12, label %bb, label %bb1, !dbg !7295

bb:                                               ; preds = %entry
  %13 = load %4** %fp_addr, align 8, !dbg !7295
  %14 = getelementptr inbounds %4* %13, i32 0, i32 10, !dbg !7295
  %15 = getelementptr inbounds [2 x i32]* %14, i64 0, i64 1, !dbg !7295
  %16 = load i32* %15, align 4, !dbg !7295
  store i32 %16, i32* %iftmp.0, align 4, !dbg !7295
  br label %bb2, !dbg !7295

bb1:                                              ; preds = %entry
  store i32 0, i32* %iftmp.0, align 4, !dbg !7295
  br label %bb2, !dbg !7295

bb2:                                              ; preds = %bb1, %bb
  %17 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7295
  %18 = getelementptr inbounds %struct.scan_cookie* %17, i32 0, i32 5, !dbg !7295
  %19 = load i32* %iftmp.0, align 4, !dbg !7295
  store i32 %19, i32* %18, align 8, !dbg !7295
  %20 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7296
  %21 = getelementptr inbounds %struct.scan_cookie* %20, i32 0, i32 8, !dbg !7296
  store i8 0, i8* %21, align 2, !dbg !7296
  %22 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7297
  %23 = getelementptr inbounds %struct.scan_cookie* %22, i32 0, i32 9, !dbg !7297
  store i8 0, i8* %23, align 1, !dbg !7297
  %24 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7298
  %25 = getelementptr inbounds %struct.scan_cookie* %24, i32 0, i32 14, !dbg !7298
  store i8* getelementptr inbounds ([2 x i8]* @decpt_str, i64 0, i64 0), i8** %25, align 8, !dbg !7298
  %26 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7298
  %27 = getelementptr inbounds %struct.scan_cookie* %26, i32 0, i32 14, !dbg !7298
  %28 = load i8** %27, align 8, !dbg !7298
  %29 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7298
  %30 = getelementptr inbounds %struct.scan_cookie* %29, i32 0, i32 17, !dbg !7298
  store i8* %28, i8** %30, align 8, !dbg !7298
  %31 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7299
  %32 = getelementptr inbounds %struct.scan_cookie* %31, i32 0, i32 15, !dbg !7299
  store i32 1, i32* %32, align 8, !dbg !7299
  %33 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7300
  %34 = getelementptr inbounds %struct.scan_cookie* %33, i32 0, i32 16, !dbg !7300
  store i32 46, i32* %34, align 4, !dbg !7300
  ret void, !dbg !7301
}

define hidden i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %c = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %1 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7302
  %2 = getelementptr inbounds %struct.scan_cookie* %1, i32 0, i32 0, !dbg !7302
  store i32 -1, i32* %2, align 8, !dbg !7302
  %3 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7304
  %4 = getelementptr inbounds %struct.scan_cookie* %3, i32 0, i32 4, !dbg !7304
  %5 = load i32* %4, align 4, !dbg !7304
  %6 = sub nsw i32 %5, 1, !dbg !7304
  %7 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7304
  %8 = getelementptr inbounds %struct.scan_cookie* %7, i32 0, i32 4, !dbg !7304
  store i32 %6, i32* %8, align 4, !dbg !7304
  %9 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7304
  %10 = getelementptr inbounds %struct.scan_cookie* %9, i32 0, i32 4, !dbg !7304
  %11 = load i32* %10, align 4, !dbg !7304
  %12 = icmp slt i32 %11, 0, !dbg !7304
  %13 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7305
  %14 = getelementptr inbounds %struct.scan_cookie* %13, i32 0, i32 7, !dbg !7305
  %15 = load i8* %14, align 1, !dbg !7305
  br i1 %12, label %bb, label %bb1, !dbg !7304

bb:                                               ; preds = %entry
  %16 = or i8 %15, 2, !dbg !7305
  %17 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7305
  %18 = getelementptr inbounds %struct.scan_cookie* %17, i32 0, i32 7, !dbg !7305
  store i8 %16, i8* %18, align 1, !dbg !7305
  store i32 -1, i32* %0, align 4, !dbg !7306
  br label %bb7, !dbg !7306

bb1:                                              ; preds = %entry
  %19 = icmp eq i8 %15, 0, !dbg !7307
  %20 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7308
  br i1 %19, label %bb2, label %bb5, !dbg !7307

bb2:                                              ; preds = %bb1
  %21 = getelementptr inbounds %struct.scan_cookie* %20, i32 0, i32 13, !dbg !7308
  %22 = load i32 (%struct.scan_cookie*)** %21, align 8, !dbg !7308
  %23 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7308
  %24 = call i32 %22(%struct.scan_cookie* %23) nounwind, !dbg !7308
  store i32 %24, i32* %c, align 4, !dbg !7308
  %25 = load i32* %c, align 4, !dbg !7308
  %26 = icmp eq i32 %25, -1, !dbg !7308
  %27 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7309
  br i1 %26, label %bb3, label %bb4, !dbg !7308

bb3:                                              ; preds = %bb2
  %28 = getelementptr inbounds %struct.scan_cookie* %27, i32 0, i32 7, !dbg !7309
  %29 = load i8* %28, align 1, !dbg !7309
  %30 = or i8 %29, 2, !dbg !7309
  %31 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7309
  %32 = getelementptr inbounds %struct.scan_cookie* %31, i32 0, i32 7, !dbg !7309
  store i8 %30, i8* %32, align 1, !dbg !7309
  store i32 -1, i32* %0, align 4, !dbg !7310
  br label %bb7, !dbg !7310

bb4:                                              ; preds = %bb2
  %33 = getelementptr inbounds %struct.scan_cookie* %27, i32 0, i32 1, !dbg !7311
  %34 = load i32* %c, align 4, !dbg !7311
  store i32 %34, i32* %33, align 4, !dbg !7311
  br label %bb6, !dbg !7311

bb5:                                              ; preds = %bb1
  %35 = getelementptr inbounds %struct.scan_cookie* %20, i32 0, i32 7, !dbg !7312
  store i8 0, i8* %35, align 1, !dbg !7312
  br label %bb6, !dbg !7312

bb6:                                              ; preds = %bb5, %bb4
  %36 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7313
  %37 = getelementptr inbounds %struct.scan_cookie* %36, i32 0, i32 3, !dbg !7313
  %38 = load i32* %37, align 8, !dbg !7313
  %39 = add nsw i32 %38, 1, !dbg !7313
  %40 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7313
  %41 = getelementptr inbounds %struct.scan_cookie* %40, i32 0, i32 3, !dbg !7313
  store i32 %39, i32* %41, align 8, !dbg !7313
  %42 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7314
  %43 = getelementptr inbounds %struct.scan_cookie* %42, i32 0, i32 1, !dbg !7314
  %44 = load i32* %43, align 4, !dbg !7314
  %45 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7314
  %46 = getelementptr inbounds %struct.scan_cookie* %45, i32 0, i32 0, !dbg !7314
  store i32 %44, i32* %46, align 8, !dbg !7314
  %47 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7314
  %48 = getelementptr inbounds %struct.scan_cookie* %47, i32 0, i32 0, !dbg !7314
  %49 = load i32* %48, align 8, !dbg !7314
  store i32 %49, i32* %0, align 4, !dbg !7314
  br label %bb7, !dbg !7314

bb7:                                              ; preds = %bb6, %bb3, %bb
  %50 = load i32* %0, align 4, !dbg !7306
  store i32 %50, i32* %retval, align 4, !dbg !7306
  %retval8 = load i32* %retval, !dbg !7306
  ret i32 %retval8, !dbg !7306
}

define hidden void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %0 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7315
  %1 = getelementptr inbounds %struct.scan_cookie* %0, i32 0, i32 4, !dbg !7315
  %2 = load i32* %1, align 4, !dbg !7315
  %3 = add nsw i32 %2, 1, !dbg !7315
  %4 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7315
  %5 = getelementptr inbounds %struct.scan_cookie* %4, i32 0, i32 4, !dbg !7315
  store i32 %3, i32* %5, align 4, !dbg !7315
  %6 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7317
  %7 = getelementptr inbounds %struct.scan_cookie* %6, i32 0, i32 7, !dbg !7317
  %8 = load i8* %7, align 1, !dbg !7317
  %9 = icmp eq i8 %8, 2, !dbg !7317
  %10 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7318
  %11 = getelementptr inbounds %struct.scan_cookie* %10, i32 0, i32 7, !dbg !7318
  br i1 %9, label %bb, label %bb1, !dbg !7317

bb:                                               ; preds = %entry
  store i8 0, i8* %11, align 1, !dbg !7318
  %12 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7319
  %13 = getelementptr inbounds %struct.scan_cookie* %12, i32 0, i32 1, !dbg !7319
  %14 = load i32* %13, align 4, !dbg !7319
  %15 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7319
  %16 = getelementptr inbounds %struct.scan_cookie* %15, i32 0, i32 0, !dbg !7319
  store i32 %14, i32* %16, align 8, !dbg !7319
  br label %return, !dbg !7319

bb1:                                              ; preds = %entry
  %17 = load i8* %11, align 1, !dbg !7320
  %18 = icmp eq i8 %17, 0, !dbg !7320
  br i1 %18, label %bb2, label %return, !dbg !7320

bb2:                                              ; preds = %bb1
  %19 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7321
  %20 = getelementptr inbounds %struct.scan_cookie* %19, i32 0, i32 7, !dbg !7321
  store i8 1, i8* %20, align 1, !dbg !7321
  %21 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7322
  %22 = getelementptr inbounds %struct.scan_cookie* %21, i32 0, i32 3, !dbg !7322
  %23 = load i32* %22, align 8, !dbg !7322
  %24 = sub nsw i32 %23, 1, !dbg !7322
  %25 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7322
  %26 = getelementptr inbounds %struct.scan_cookie* %25, i32 0, i32 3, !dbg !7322
  store i32 %24, i32* %26, align 8, !dbg !7322
  br label %return, !dbg !7322

return:                                           ; preds = %bb, %bb1, %bb2
  ret void, !dbg !7323
}

define hidden i32 @__psfs_parse_spec(%struct.psfs_t* %psfs) nounwind {
entry:
  %psfs_addr = alloca %struct.psfs_t*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %p = alloca i8*
  %fmt0 = alloca i8*
  %i = alloca i32
  %j = alloca i32
  %fail = alloca i8
  %p_m_spec_chars = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.psfs_t* %psfs, %struct.psfs_t** %psfs_addr
  %1 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7324
  %2 = getelementptr inbounds %struct.psfs_t* %1, i32 0, i32 4, !dbg !7324
  %3 = load i8** %2, align 8, !dbg !7324
  store i8* %3, i8** %fmt0, align 8, !dbg !7324
  store i8 0, i8* %fail, align 1, !dbg !7326
  store i32 0, i32* %i, align 4, !dbg !7327
  %4 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7328
  %5 = getelementptr inbounds %struct.psfs_t* %4, i32 0, i32 4, !dbg !7328
  %6 = load i8** %5, align 8, !dbg !7328
  %7 = load i8* %6, align 1, !dbg !7328
  %8 = sub i8 %7, 48, !dbg !7328
  %9 = icmp ugt i8 %8, 9, !dbg !7328
  br i1 %9, label %bb, label %bb1, !dbg !7328

bb:                                               ; preds = %entry
  store i8 1, i8* %fail, align 1, !dbg !7329
  br label %DO_FLAGS, !dbg !7329

bb1:                                              ; preds = %bb3, %entry
  %10 = load i32* %i, align 4, !dbg !7330
  %11 = icmp sle i32 %10, 214748363, !dbg !7330
  br i1 %11, label %bb2, label %bb3, !dbg !7330

bb2:                                              ; preds = %bb1
  %12 = load i32* %i, align 4, !dbg !7331
  %13 = mul nsw i32 %12, 10, !dbg !7331
  %14 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7331
  %15 = getelementptr inbounds %struct.psfs_t* %14, i32 0, i32 4, !dbg !7331
  %16 = load i8** %15, align 8, !dbg !7331
  %17 = load i8* %16, align 1, !dbg !7331
  %18 = zext i8 %17 to i32, !dbg !7331
  %19 = sub nsw i32 %18, 48, !dbg !7331
  %20 = add nsw i32 %13, %19, !dbg !7331
  store i32 %20, i32* %i, align 4, !dbg !7331
  %21 = getelementptr inbounds i8* %16, i64 1, !dbg !7331
  %22 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7331
  %23 = getelementptr inbounds %struct.psfs_t* %22, i32 0, i32 4, !dbg !7331
  store i8* %21, i8** %23, align 8, !dbg !7331
  br label %bb3, !dbg !7331

bb3:                                              ; preds = %bb2, %bb1
  %24 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7332
  %25 = getelementptr inbounds %struct.psfs_t* %24, i32 0, i32 4, !dbg !7332
  %26 = load i8** %25, align 8, !dbg !7332
  %27 = load i8* %26, align 1, !dbg !7332
  %28 = sub i8 %27, 48, !dbg !7332
  %29 = icmp ule i8 %28, 9, !dbg !7332
  br i1 %29, label %bb1, label %bb4, !dbg !7332

bb4:                                              ; preds = %bb3
  %30 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7333
  %31 = getelementptr inbounds %struct.psfs_t* %30, i32 0, i32 4, !dbg !7333
  %32 = load i8** %31, align 8, !dbg !7333
  %33 = load i8* %32, align 1, !dbg !7333
  %34 = icmp ne i8 %33, 36, !dbg !7333
  %35 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7334
  br i1 %34, label %bb5, label %bb7, !dbg !7333

bb5:                                              ; preds = %bb4
  %36 = getelementptr inbounds %struct.psfs_t* %35, i32 0, i32 1, !dbg !7334
  %37 = load i32* %36, align 8, !dbg !7334
  %38 = icmp sge i32 %37, 0, !dbg !7334
  br i1 %38, label %ERROR_EINVAL, label %bb6, !dbg !7334

bb6:                                              ; preds = %bb5
  %39 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7335
  %40 = getelementptr inbounds %struct.psfs_t* %39, i32 0, i32 8, !dbg !7335
  %41 = load i32* %i, align 4, !dbg !7335
  store i32 %41, i32* %40, align 4, !dbg !7335
  %42 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7336
  %43 = getelementptr inbounds %struct.psfs_t* %42, i32 0, i32 1, !dbg !7336
  store i32 -2, i32* %43, align 8, !dbg !7336
  br label %DO_QUALIFIER, !dbg !7336

bb7:                                              ; preds = %bb4
  %44 = getelementptr inbounds %struct.psfs_t* %35, i32 0, i32 4, !dbg !7337
  %45 = load i8** %44, align 8, !dbg !7337
  %46 = getelementptr inbounds i8* %45, i64 1, !dbg !7337
  %47 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7337
  %48 = getelementptr inbounds %struct.psfs_t* %47, i32 0, i32 4, !dbg !7337
  store i8* %46, i8** %48, align 8, !dbg !7337
  br label %DO_FLAGS, !dbg !7338

DO_FLAGS:                                         ; preds = %bb9, %bb7, %bb
  store i8* getelementptr inbounds ([4 x i8]* @spec_flags, i64 0, i64 0), i8** %p, align 8, !dbg !7339
  store i32 16, i32* %j, align 4, !dbg !7340
  br label %bb8, !dbg !7340

bb8:                                              ; preds = %bb10, %DO_FLAGS
  %49 = load i8** %p, align 8, !dbg !7341
  %50 = load i8* %49, align 1, !dbg !7341
  %51 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7341
  %52 = getelementptr inbounds %struct.psfs_t* %51, i32 0, i32 4, !dbg !7341
  %53 = load i8** %52, align 8, !dbg !7341
  %54 = load i8* %53, align 1, !dbg !7341
  %55 = icmp eq i8 %50, %54, !dbg !7341
  br i1 %55, label %bb9, label %bb10, !dbg !7341

bb9:                                              ; preds = %bb8
  %56 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7342
  %57 = getelementptr inbounds %struct.psfs_t* %56, i32 0, i32 4, !dbg !7342
  %58 = load i8** %57, align 8, !dbg !7342
  %59 = getelementptr inbounds i8* %58, i64 1, !dbg !7342
  %60 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7342
  %61 = getelementptr inbounds %struct.psfs_t* %60, i32 0, i32 4, !dbg !7342
  store i8* %59, i8** %61, align 8, !dbg !7342
  %62 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7343
  %63 = getelementptr inbounds %struct.psfs_t* %62, i32 0, i32 10, !dbg !7343
  %64 = load i8* %63, align 1, !dbg !7343
  %65 = load i32* %j, align 4, !dbg !7343
  %66 = trunc i32 %65 to i8, !dbg !7343
  %67 = or i8 %64, %66, !dbg !7343
  %68 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7343
  %69 = getelementptr inbounds %struct.psfs_t* %68, i32 0, i32 10, !dbg !7343
  store i8 %67, i8* %69, align 1, !dbg !7343
  br label %DO_FLAGS, !dbg !7343

bb10:                                             ; preds = %bb8
  %70 = load i32* %j, align 4, !dbg !7344
  %71 = load i32* %j, align 4, !dbg !7344
  %72 = add nsw i32 %70, %71, !dbg !7344
  store i32 %72, i32* %j, align 4, !dbg !7344
  %73 = load i8** %p, align 8, !dbg !7345
  %74 = getelementptr inbounds i8* %73, i64 1, !dbg !7345
  store i8* %74, i8** %p, align 8, !dbg !7345
  %75 = load i8** %p, align 8, !dbg !7345
  %76 = load i8* %75, align 1, !dbg !7345
  %77 = icmp ne i8 %76, 0, !dbg !7345
  br i1 %77, label %bb8, label %bb11, !dbg !7345

bb11:                                             ; preds = %bb10
  %78 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7346
  %79 = getelementptr inbounds %struct.psfs_t* %78, i32 0, i32 10, !dbg !7346
  %80 = load i8* %79, align 1, !dbg !7346
  %81 = zext i8 %80 to i32, !dbg !7346
  %82 = and i32 %81, 16, !dbg !7346
  %83 = icmp ne i32 %82, 0, !dbg !7346
  br i1 %83, label %bb12, label %bb13, !dbg !7346

bb12:                                             ; preds = %bb11
  %84 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7347
  %85 = getelementptr inbounds %struct.psfs_t* %84, i32 0, i32 9, !dbg !7347
  store i8 0, i8* %85, align 8, !dbg !7347
  br label %DO_WIDTH, !dbg !7347

bb13:                                             ; preds = %bb11
  %86 = load i8* %fail, align 1, !dbg !7348
  %87 = icmp ne i8 %86, 0, !dbg !7348
  %88 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7349
  %89 = getelementptr inbounds %struct.psfs_t* %88, i32 0, i32 1, !dbg !7349
  %90 = load i32* %89, align 8, !dbg !7349
  br i1 %87, label %bb14, label %bb16, !dbg !7348

bb14:                                             ; preds = %bb13
  %91 = icmp sge i32 %90, 0, !dbg !7349
  br i1 %91, label %ERROR_EINVAL, label %bb15, !dbg !7349

bb15:                                             ; preds = %bb14
  %92 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7350
  %93 = getelementptr inbounds %struct.psfs_t* %92, i32 0, i32 1, !dbg !7350
  store i32 -2, i32* %93, align 8, !dbg !7350
  br label %DO_WIDTH, !dbg !7350

bb16:                                             ; preds = %bb13
  %94 = icmp eq i32 %90, -2, !dbg !7351
  br i1 %94, label %ERROR_EINVAL, label %bb17, !dbg !7351

bb17:                                             ; preds = %bb16
  %95 = load i32* %i, align 4, !dbg !7351
  %96 = sub nsw i32 %95, 1, !dbg !7351
  store i32 %96, i32* %i, align 4, !dbg !7351
  %97 = load i32* %i, align 4, !dbg !7351
  %98 = icmp ugt i32 %97, 8, !dbg !7351
  br i1 %98, label %ERROR_EINVAL, label %bb18, !dbg !7351

bb18:                                             ; preds = %bb17
  %99 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7352
  %100 = getelementptr inbounds %struct.psfs_t* %99, i32 0, i32 2, !dbg !7352
  %101 = load i32* %i, align 4, !dbg !7352
  store i32 %101, i32* %100, align 4, !dbg !7352
  br label %DO_WIDTH, !dbg !7353

DO_WIDTH:                                         ; preds = %bb18, %bb15, %bb12
  store i32 0, i32* %i, align 4, !dbg !7354
  br label %bb21, !dbg !7354

bb19:                                             ; preds = %bb21
  %102 = load i32* %i, align 4, !dbg !7355
  %103 = icmp sle i32 %102, 214748363, !dbg !7355
  br i1 %103, label %bb20, label %bb21, !dbg !7355

bb20:                                             ; preds = %bb19
  %104 = load i32* %i, align 4, !dbg !7356
  %105 = mul nsw i32 %104, 10, !dbg !7356
  %106 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7356
  %107 = getelementptr inbounds %struct.psfs_t* %106, i32 0, i32 4, !dbg !7356
  %108 = load i8** %107, align 8, !dbg !7356
  %109 = load i8* %108, align 1, !dbg !7356
  %110 = zext i8 %109 to i32, !dbg !7356
  %111 = sub nsw i32 %110, 48, !dbg !7356
  %112 = add nsw i32 %105, %111, !dbg !7356
  store i32 %112, i32* %i, align 4, !dbg !7356
  %113 = getelementptr inbounds i8* %108, i64 1, !dbg !7356
  %114 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7356
  %115 = getelementptr inbounds %struct.psfs_t* %114, i32 0, i32 4, !dbg !7356
  store i8* %113, i8** %115, align 8, !dbg !7356
  %116 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7357
  %117 = getelementptr inbounds %struct.psfs_t* %116, i32 0, i32 8, !dbg !7357
  %118 = load i32* %i, align 4, !dbg !7357
  store i32 %118, i32* %117, align 4, !dbg !7357
  br label %bb21, !dbg !7357

bb21:                                             ; preds = %bb20, %bb19, %DO_WIDTH
  %119 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7354
  %120 = getelementptr inbounds %struct.psfs_t* %119, i32 0, i32 4, !dbg !7354
  %121 = load i8** %120, align 8, !dbg !7354
  %122 = load i8* %121, align 1, !dbg !7354
  %123 = sub i8 %122, 48, !dbg !7354
  %124 = icmp ule i8 %123, 9, !dbg !7354
  br i1 %124, label %bb19, label %DO_QUALIFIER, !dbg !7354

DO_QUALIFIER:                                     ; preds = %bb21, %bb6
  store i8* getelementptr inbounds ([18 x i8]* @qual_chars, i64 0, i64 0), i8** %p, align 8, !dbg !7358
  br label %bb22, !dbg !7358

bb22:                                             ; preds = %bb24, %DO_QUALIFIER
  %125 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7359
  %126 = getelementptr inbounds %struct.psfs_t* %125, i32 0, i32 4, !dbg !7359
  %127 = load i8** %126, align 8, !dbg !7359
  %128 = load i8* %127, align 1, !dbg !7359
  %129 = load i8** %p, align 8, !dbg !7359
  %130 = load i8* %129, align 1, !dbg !7359
  %131 = icmp eq i8 %128, %130, !dbg !7359
  br i1 %131, label %bb23, label %bb24, !dbg !7359

bb23:                                             ; preds = %bb22
  %132 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7360
  %133 = getelementptr inbounds %struct.psfs_t* %132, i32 0, i32 4, !dbg !7360
  %134 = load i8** %133, align 8, !dbg !7360
  %135 = getelementptr inbounds i8* %134, i64 1, !dbg !7360
  %136 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7360
  %137 = getelementptr inbounds %struct.psfs_t* %136, i32 0, i32 4, !dbg !7360
  store i8* %135, i8** %137, align 8, !dbg !7360
  br label %bb25, !dbg !7360

bb24:                                             ; preds = %bb22
  %138 = load i8** %p, align 8, !dbg !7361
  %139 = getelementptr inbounds i8* %138, i64 1, !dbg !7361
  store i8* %139, i8** %p, align 8, !dbg !7361
  %140 = load i8** %p, align 8, !dbg !7361
  %141 = load i8* %140, align 1, !dbg !7361
  %142 = icmp ne i8 %141, 0, !dbg !7361
  br i1 %142, label %bb22, label %bb25, !dbg !7361

bb25:                                             ; preds = %bb24, %bb23
  %143 = load i8** %p, align 8, !dbg !7362
  %144 = ptrtoint i8* %143 to i64, !dbg !7362
  %145 = sub nsw i64 %144, ptrtoint ([18 x i8]* @qual_chars to i64), !dbg !7362
  %146 = icmp sle i64 %145, 1, !dbg !7362
  br i1 %146, label %bb26, label %bb28, !dbg !7362

bb26:                                             ; preds = %bb25
  %147 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7362
  %148 = getelementptr inbounds %struct.psfs_t* %147, i32 0, i32 4, !dbg !7362
  %149 = load i8** %148, align 8, !dbg !7362
  %150 = load i8* %149, align 1, !dbg !7362
  %151 = load i8** %p, align 8, !dbg !7362
  %152 = load i8* %151, align 1, !dbg !7362
  %153 = icmp eq i8 %150, %152, !dbg !7362
  br i1 %153, label %bb27, label %bb28, !dbg !7362

bb27:                                             ; preds = %bb26
  %154 = load i8** %p, align 8, !dbg !7363
  %155 = getelementptr inbounds i8* %154, i64 8, !dbg !7363
  store i8* %155, i8** %p, align 8, !dbg !7363
  %156 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7364
  %157 = getelementptr inbounds %struct.psfs_t* %156, i32 0, i32 4, !dbg !7364
  %158 = load i8** %157, align 8, !dbg !7364
  %159 = getelementptr inbounds i8* %158, i64 1, !dbg !7364
  %160 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7364
  %161 = getelementptr inbounds %struct.psfs_t* %160, i32 0, i32 4, !dbg !7364
  store i8* %159, i8** %161, align 8, !dbg !7364
  br label %bb28, !dbg !7364

bb28:                                             ; preds = %bb27, %bb26, %bb25
  %162 = load i8** %p, align 8, !dbg !7365
  %163 = getelementptr inbounds i8* %162, i64 8, !dbg !7365
  %164 = load i8* %163, align 1, !dbg !7365
  %165 = zext i8 %164 to i32, !dbg !7365
  %int_cast_to_i64 = zext i32 8 to i64
  %166 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %166, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb28
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb28
  %167 = shl i32 %165, 8, !dbg !7365
  %168 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7365
  %169 = getelementptr inbounds %struct.psfs_t* %168, i32 0, i32 6, !dbg !7365
  store i32 %167, i32* %169, align 4, !dbg !7365
  store i8* getelementptr inbounds ([23 x i8]* @spec_chars, i64 0, i64 0), i8** %p, align 8, !dbg !7366
  br label %bb29, !dbg !7366

bb29:                                             ; preds = %bb39, %klee_overshift_check.exit
  %170 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7367
  %171 = getelementptr inbounds %struct.psfs_t* %170, i32 0, i32 4, !dbg !7367
  %172 = load i8** %171, align 8, !dbg !7367
  %173 = load i8* %172, align 1, !dbg !7367
  %174 = load i8** %p, align 8, !dbg !7367
  %175 = load i8* %174, align 1, !dbg !7367
  %176 = icmp eq i8 %173, %175, !dbg !7367
  %177 = load i8** %p, align 8, !dbg !7368
  br i1 %176, label %bb30, label %bb39, !dbg !7367

bb30:                                             ; preds = %bb29
  %178 = ptrtoint i8* %177 to i64, !dbg !7368
  %179 = trunc i64 %178 to i32, !dbg !7368
  %180 = trunc i64 ptrtoint ([23 x i8]* @spec_chars to i64) to i32, !dbg !7368
  %181 = sub i32 %179, %180, !dbg !7368
  store i32 %181, i32* %p_m_spec_chars, align 4, !dbg !7368
  store i8* getelementptr inbounds ([8 x i8]* @spec_ranges, i64 0, i64 0), i8** %p, align 8, !dbg !7370
  br label %bb32, !dbg !7370

bb31:                                             ; preds = %bb32
  %182 = load i8** %p, align 8, !dbg !7370
  %183 = getelementptr inbounds i8* %182, i64 1, !dbg !7370
  store i8* %183, i8** %p, align 8, !dbg !7370
  br label %bb32, !dbg !7370

bb32:                                             ; preds = %bb31, %bb30
  %184 = load i8** %p, align 8, !dbg !7370
  %185 = load i8* %184, align 1, !dbg !7370
  %186 = zext i8 %185 to i32, !dbg !7370
  %187 = load i32* %p_m_spec_chars, align 4, !dbg !7370
  %188 = icmp slt i32 %186, %187, !dbg !7370
  br i1 %188, label %bb31, label %bb33, !dbg !7370

bb33:                                             ; preds = %bb32
  %189 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7371
  %190 = getelementptr inbounds %struct.psfs_t* %189, i32 0, i32 6, !dbg !7371
  %191 = load i32* %190, align 4, !dbg !7371
  %int_cast_to_i641 = zext i32 8 to i64
  %192 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %192, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %bb33
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %bb33
  %193 = ashr i32 %191, 8, !dbg !7371
  %194 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7371
  %195 = getelementptr inbounds %struct.psfs_t* %194, i32 0, i32 10, !dbg !7371
  %196 = load i8* %195, align 1, !dbg !7371
  %197 = zext i8 %196 to i32, !dbg !7371
  %198 = or i32 %193, %197, !dbg !7371
  %199 = load i8** %p, align 8, !dbg !7371
  %200 = ptrtoint i8* %199 to i64, !dbg !7371
  %201 = trunc i64 %200 to i32, !dbg !7371
  %202 = trunc i64 ptrtoint ([8 x i8]* @spec_ranges to i64) to i32, !dbg !7371
  %203 = sub i32 %201, %202, !dbg !7371
  %204 = sext i32 %203 to i64, !dbg !7371
  %205 = getelementptr inbounds [8 x i16]* @spec_allowed, i64 0, i64 %204, !dbg !7371
  %206 = load i16* %205, align 2, !dbg !7371
  %207 = zext i16 %206 to i32, !dbg !7371
  %not = xor i32 %207, -1, !dbg !7371
  %208 = and i32 %198, %not, !dbg !7371
  %209 = icmp ne i32 %208, 0, !dbg !7371
  br i1 %209, label %ERROR_EINVAL, label %bb35, !dbg !7371

bb35:                                             ; preds = %klee_overshift_check.exit3
  %210 = load i32* %p_m_spec_chars, align 4, !dbg !7372
  %211 = icmp sgt i32 %210, 18, !dbg !7372
  br i1 %211, label %bb36, label %bb38, !dbg !7372

bb36:                                             ; preds = %bb35
  %212 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7372
  %213 = getelementptr inbounds %struct.psfs_t* %212, i32 0, i32 6, !dbg !7372
  %214 = load i32* %213, align 4, !dbg !7372
  %215 = and i32 %214, 1024, !dbg !7372
  %216 = icmp ne i32 %215, 0, !dbg !7372
  br i1 %216, label %bb37, label %bb38, !dbg !7372

bb37:                                             ; preds = %bb36
  %217 = load i32* %p_m_spec_chars, align 4, !dbg !7373
  %218 = sub nsw i32 %217, 3, !dbg !7373
  store i32 %218, i32* %p_m_spec_chars, align 4, !dbg !7373
  br label %bb38, !dbg !7373

bb38:                                             ; preds = %bb37, %bb36, %bb35
  %219 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7374
  %220 = getelementptr inbounds %struct.psfs_t* %219, i32 0, i32 7, !dbg !7374
  %221 = load i32* %p_m_spec_chars, align 4, !dbg !7374
  store i32 %221, i32* %220, align 8, !dbg !7374
  %222 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7375
  %223 = getelementptr inbounds %struct.psfs_t* %222, i32 0, i32 4, !dbg !7375
  %224 = load i8** %223, align 8, !dbg !7375
  %225 = ptrtoint i8* %224 to i64, !dbg !7375
  %226 = trunc i64 %225 to i32, !dbg !7375
  %227 = load i8** %fmt0, align 8, !dbg !7375
  %228 = ptrtoint i8* %227 to i64, !dbg !7375
  %229 = trunc i64 %228 to i32, !dbg !7375
  %230 = sub i32 %226, %229, !dbg !7375
  store i32 %230, i32* %0, align 4, !dbg !7375
  br label %bb41, !dbg !7375

bb39:                                             ; preds = %bb29
  %231 = getelementptr inbounds i8* %177, i64 1, !dbg !7376
  store i8* %231, i8** %p, align 8, !dbg !7376
  %232 = load i8** %p, align 8, !dbg !7376
  %233 = load i8* %232, align 1, !dbg !7376
  %234 = icmp eq i8 %233, 0, !dbg !7376
  br i1 %234, label %ERROR_EINVAL, label %bb29, !dbg !7376

ERROR_EINVAL:                                     ; preds = %bb39, %klee_overshift_check.exit3, %bb17, %bb16, %bb14, %bb5
  store i32 22, i32* @errno, align 4, !dbg !7377
  store i32 -1, i32* %0, align 4, !dbg !7378
  br label %bb41, !dbg !7378

bb41:                                             ; preds = %ERROR_EINVAL, %bb38
  %235 = load i32* %0, align 4, !dbg !7375
  store i32 %235, i32* %retval, align 4, !dbg !7375
  %retval42 = load i32* %retval, !dbg !7375
  ret i32 %retval42, !dbg !7375
}

define hidden i32 @__stdio_adjust_position(%4* noalias %stream, i64* %pos) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %pos_addr = alloca i64*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i8*
  %0 = alloca i32
  %oldpos = alloca i64
  %corr = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i64* %pos, i64** %pos_addr
  %1 = load %4** %stream_addr, align 8, !dbg !7379
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !7379
  %3 = load i16* %2, align 8, !dbg !7379
  %4 = zext i16 %3 to i32, !dbg !7379
  %5 = and i32 %4, 3, !dbg !7379
  store i32 %5, i32* %corr, align 4, !dbg !7379
  %6 = load i32* %corr, align 4, !dbg !7379
  %7 = icmp ne i32 %6, 0, !dbg !7379
  br i1 %7, label %bb, label %bb1, !dbg !7379

bb:                                               ; preds = %entry
  %8 = load i32* %corr, align 4, !dbg !7381
  %9 = sub nsw i32 %8, 1, !dbg !7381
  store i32 %9, i32* %corr, align 4, !dbg !7381
  br label %bb1, !dbg !7381

bb1:                                              ; preds = %bb, %entry
  %10 = load i32* %corr, align 4, !dbg !7382
  %11 = icmp ne i32 %10, 0, !dbg !7382
  br i1 %11, label %bb2, label %bb8, !dbg !7382

bb2:                                              ; preds = %bb1
  %12 = load %4** %stream_addr, align 8, !dbg !7382
  %13 = getelementptr inbounds %4* %12, i32 0, i32 0, !dbg !7382
  %14 = load i16* %13, align 8, !dbg !7382
  %15 = zext i16 %14 to i32, !dbg !7382
  %16 = and i32 %15, 2048, !dbg !7382
  %17 = icmp ne i32 %16, 0, !dbg !7382
  br i1 %17, label %bb3, label %bb8, !dbg !7382

bb3:                                              ; preds = %bb2
  %18 = load i32* %corr, align 4, !dbg !7383
  %19 = icmp sgt i32 %18, 1, !dbg !7383
  br i1 %19, label %bb5, label %bb4, !dbg !7383

bb4:                                              ; preds = %bb3
  %20 = load %4** %stream_addr, align 8, !dbg !7383
  %21 = getelementptr inbounds %4* %20, i32 0, i32 10, !dbg !7383
  %22 = getelementptr inbounds [2 x i32]* %21, i64 0, i64 1, !dbg !7383
  %23 = load i32* %22, align 4, !dbg !7383
  %24 = icmp ne i32 %23, 0, !dbg !7383
  br i1 %24, label %bb5, label %bb6, !dbg !7383

bb5:                                              ; preds = %bb4, %bb3
  store i32 -1, i32* %0, align 4, !dbg !7384
  br label %bb16, !dbg !7384

bb6:                                              ; preds = %bb4
  %25 = load %4** %stream_addr, align 8, !dbg !7385
  %26 = getelementptr inbounds %4* %25, i32 0, i32 1, !dbg !7385
  %27 = getelementptr inbounds [2 x i8]* %26, i64 0, i64 1, !dbg !7385
  %28 = load i8* %27, align 1, !dbg !7385
  %29 = zext i8 %28 to i32, !dbg !7385
  %30 = add nsw i32 %29, 1, !dbg !7385
  %31 = load i32* %corr, align 4, !dbg !7385
  %32 = sub nsw i32 %31, %30, !dbg !7385
  store i32 %32, i32* %corr, align 4, !dbg !7385
  %33 = load %4** %stream_addr, align 8, !dbg !7386
  %34 = getelementptr inbounds %4* %33, i32 0, i32 11, !dbg !7386
  %35 = getelementptr inbounds %struct.__mbstate_t* %34, i32 0, i32 0, !dbg !7386
  %36 = load i32* %35, align 8, !dbg !7386
  %37 = icmp sgt i32 %36, 0, !dbg !7386
  br i1 %37, label %bb7, label %bb8, !dbg !7386

bb7:                                              ; preds = %bb6
  %38 = load %4** %stream_addr, align 8, !dbg !7387
  %39 = getelementptr inbounds %4* %38, i32 0, i32 1, !dbg !7387
  %40 = getelementptr inbounds [2 x i8]* %39, i64 0, i64 0, !dbg !7387
  %41 = load i8* %40, align 1, !dbg !7387
  %42 = zext i8 %41 to i32, !dbg !7387
  %43 = load i32* %corr, align 4, !dbg !7387
  %44 = sub nsw i32 %43, %42, !dbg !7387
  store i32 %44, i32* %corr, align 4, !dbg !7387
  br label %bb8, !dbg !7387

bb8:                                              ; preds = %bb7, %bb6, %bb2, %bb1
  %45 = load %4** %stream_addr, align 8, !dbg !7388
  %46 = getelementptr inbounds %4* %45, i32 0, i32 0, !dbg !7388
  %47 = load i16* %46, align 8, !dbg !7388
  %48 = zext i16 %47 to i32, !dbg !7388
  %49 = and i32 %48, 64, !dbg !7388
  %50 = icmp ne i32 %49, 0, !dbg !7388
  %51 = load %4** %stream_addr, align 8, !dbg !7388
  br i1 %50, label %bb9, label %bb10, !dbg !7388

bb9:                                              ; preds = %bb8
  %52 = getelementptr inbounds %4* %51, i32 0, i32 3, !dbg !7388
  %53 = load i8** %52, align 8, !dbg !7388
  store i8* %53, i8** %iftmp.0, align 8, !dbg !7388
  br label %bb11, !dbg !7388

bb10:                                             ; preds = %bb8
  %54 = getelementptr inbounds %4* %51, i32 0, i32 6, !dbg !7388
  %55 = load i8** %54, align 8, !dbg !7388
  store i8* %55, i8** %iftmp.0, align 8, !dbg !7388
  br label %bb11, !dbg !7388

bb11:                                             ; preds = %bb10, %bb9
  %56 = load i8** %iftmp.0, align 8, !dbg !7388
  %57 = ptrtoint i8* %56 to i64, !dbg !7388
  %58 = trunc i64 %57 to i32, !dbg !7388
  %59 = load %4** %stream_addr, align 8, !dbg !7388
  %60 = getelementptr inbounds %4* %59, i32 0, i32 5, !dbg !7388
  %61 = load i8** %60, align 8, !dbg !7388
  %62 = ptrtoint i8* %61 to i64, !dbg !7388
  %63 = trunc i64 %62 to i32, !dbg !7388
  %64 = sub i32 %58, %63, !dbg !7388
  %65 = load i32* %corr, align 4, !dbg !7388
  %66 = add i32 %64, %65, !dbg !7388
  store i32 %66, i32* %corr, align 4, !dbg !7388
  %67 = load i64** %pos_addr, align 8, !dbg !7389
  %68 = load i64* %67, align 8, !dbg !7389
  store i64 %68, i64* %oldpos, align 8, !dbg !7389
  %69 = load i64** %pos_addr, align 8, !dbg !7390
  %70 = load i64* %69, align 8, !dbg !7390
  %71 = load i32* %corr, align 4, !dbg !7390
  %72 = sext i32 %71 to i64, !dbg !7390
  %73 = sub nsw i64 %70, %72, !dbg !7390
  %74 = load i64** %pos_addr, align 8, !dbg !7390
  store i64 %73, i64* %74, align 8, !dbg !7390
  %75 = load i64** %pos_addr, align 8, !dbg !7390
  %76 = load i64* %75, align 8, !dbg !7390
  %77 = load i64* %oldpos, align 8, !dbg !7390
  %78 = icmp sgt i64 %76, %77, !dbg !7390
  br i1 %78, label %bb12, label %bb13, !dbg !7390

bb12:                                             ; preds = %bb11
  %79 = load i32* %corr, align 4, !dbg !7391
  %80 = sub nsw i32 0, %79, !dbg !7391
  store i32 %80, i32* %corr, align 4, !dbg !7391
  br label %bb13, !dbg !7391

bb13:                                             ; preds = %bb12, %bb11
  %81 = load i32* %corr, align 4, !dbg !7392
  %82 = icmp slt i32 %81, 0, !dbg !7392
  br i1 %82, label %bb14, label %bb15, !dbg !7392

bb14:                                             ; preds = %bb13
  store i32 75, i32* @errno, align 4, !dbg !7393
  br label %bb15, !dbg !7393

bb15:                                             ; preds = %bb14, %bb13
  %83 = load i32* %corr, align 4, !dbg !7394
  store i32 %83, i32* %0, align 4, !dbg !7394
  br label %bb16, !dbg !7394

bb16:                                             ; preds = %bb15, %bb5
  %84 = load i32* %0, align 4, !dbg !7384
  store i32 %84, i32* %retval, align 4, !dbg !7384
  %retval17 = load i32* %retval, !dbg !7384
  ret i32 %retval17, !dbg !7384
}

define hidden i32 @__stdio_seek(%4* %stream, i64* %pos, i32 %whence) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %pos_addr = alloca i64*, align 8
  %whence_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %res = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i64* %pos, i64** %pos_addr
  store i32 %whence, i32* %whence_addr
  %1 = load i64** %pos_addr, align 8, !dbg !7395
  %2 = load i64* %1, align 8, !dbg !7395
  %3 = load %4** %stream_addr, align 8, !dbg !7395
  %4 = getelementptr inbounds %4* %3, i32 0, i32 2, !dbg !7395
  %5 = load i32* %4, align 4, !dbg !7395
  %6 = load i32* %whence_addr, align 4, !dbg !7395
  %7 = call i64 @lseek64(i32 %5, i64 %2, i32 %6) nounwind, !dbg !7395
  store i64 %7, i64* %res, align 8, !dbg !7395
  %8 = load i64* %res, align 8, !dbg !7397
  %9 = icmp sge i64 %8, 0, !dbg !7397
  br i1 %9, label %bb, label %bb1, !dbg !7397

bb:                                               ; preds = %entry
  %10 = load i64** %pos_addr, align 8, !dbg !7397
  %11 = load i64* %res, align 8, !dbg !7397
  store i64 %11, i64* %10, align 8, !dbg !7397
  store i32 0, i32* %iftmp.0, align 4, !dbg !7397
  br label %bb2, !dbg !7397

bb1:                                              ; preds = %entry
  %12 = load i64* %res, align 8, !dbg !7397
  %13 = trunc i64 %12 to i32, !dbg !7397
  store i32 %13, i32* %iftmp.0, align 4, !dbg !7397
  br label %bb2, !dbg !7397

bb2:                                              ; preds = %bb1, %bb
  %14 = load i32* %iftmp.0, align 4, !dbg !7397
  store i32 %14, i32* %0, align 4, !dbg !7397
  %15 = load i32* %0, align 4, !dbg !7397
  store i32 %15, i32* %retval, align 4, !dbg !7397
  %retval3 = load i32* %retval, !dbg !7397
  ret i32 %retval3, !dbg !7397
}

define i32 @__xpg_strerror_r(i32 %errnum, i8* %strerrbuf, i64 %buflen) nounwind {
entry:
  %errnum_addr = alloca i32, align 4
  %strerrbuf_addr = alloca i8*, align 8
  %buflen_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %s = alloca i8*
  %i = alloca i32
  %retval1 = alloca i32
  %buf = alloca [50 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i32 %errnum, i32* %errnum_addr
  store i8* %strerrbuf, i8** %strerrbuf_addr
  store i64 %buflen, i64* %buflen_addr
  store i32 22, i32* %retval1, align 4, !dbg !7398
  %1 = load i32* %errnum_addr, align 4, !dbg !7400
  store i32 %1, i32* %i, align 4, !dbg !7400
  %2 = load i32* %i, align 4, !dbg !7401
  %3 = icmp ule i32 %2, 124, !dbg !7401
  br i1 %3, label %bb, label %bb8, !dbg !7401

bb:                                               ; preds = %entry
  store i8* getelementptr inbounds ([2906 x i8]* @_string_syserrmsgs, i64 0, i64 0), i8** %s, align 8, !dbg !7402
  br label %bb5, !dbg !7402

bb2:                                              ; preds = %bb5
  %4 = icmp eq i8 %12, 0, !dbg !7403
  br i1 %4, label %bb3, label %bb4, !dbg !7403

bb3:                                              ; preds = %bb2
  %5 = load i32* %i, align 4, !dbg !7404
  %6 = sub nsw i32 %5, 1, !dbg !7404
  store i32 %6, i32* %i, align 4, !dbg !7404
  br label %bb4, !dbg !7404

bb4:                                              ; preds = %bb3, %bb2
  %7 = load i8** %s, align 8, !dbg !7402
  %8 = getelementptr inbounds i8* %7, i64 1, !dbg !7402
  store i8* %8, i8** %s, align 8, !dbg !7402
  br label %bb5, !dbg !7402

bb5:                                              ; preds = %bb4, %bb
  %9 = load i32* %i, align 4, !dbg !7402
  %10 = icmp ne i32 %9, 0, !dbg !7402
  %11 = load i8** %s, align 8, !dbg !7403
  %12 = load i8* %11, align 1, !dbg !7403
  br i1 %10, label %bb2, label %bb6, !dbg !7402

bb6:                                              ; preds = %bb5
  %13 = icmp ne i8 %12, 0, !dbg !7405
  br i1 %13, label %bb7, label %bb8, !dbg !7405

bb7:                                              ; preds = %bb6
  store i32 0, i32* %retval1, align 4, !dbg !7406
  br label %GOT_MESG, !dbg !7406

bb8:                                              ; preds = %bb6, %entry
  %14 = load i32* %errnum_addr, align 4, !dbg !7407
  %15 = sext i32 %14 to i64, !dbg !7407
  %buf9 = bitcast [50 x i8]* %buf to i8*, !dbg !7407
  %16 = getelementptr inbounds i8* %buf9, i64 50, !dbg !7407
  %17 = getelementptr inbounds i8* %16, i64 -1, !dbg !7407
  %18 = call i8* @_uintmaxtostr(i8* noalias %17, i64 %15, i32 -10, i32 0) nounwind, !dbg !7407
  %19 = getelementptr inbounds i8* %18, i64 -14, !dbg !7407
  store i8* %19, i8** %s, align 8, !dbg !7407
  %20 = load i8** %s, align 8, !dbg !7408
  %21 = call i8* @memcpy(i8* noalias %20, i8* noalias getelementptr inbounds ([14 x i8]* @unknown.1225, i64 0, i64 0), i64 14) nounwind, !dbg !7408
  br label %GOT_MESG, !dbg !7409

GOT_MESG:                                         ; preds = %bb8, %bb7
  %22 = load i8** %strerrbuf_addr, align 8, !dbg !7410
  %23 = icmp eq i8* %22, null, !dbg !7410
  br i1 %23, label %bb10, label %bb11, !dbg !7410

bb10:                                             ; preds = %GOT_MESG
  store i64 0, i64* %buflen_addr, align 8, !dbg !7411
  br label %bb11, !dbg !7411

bb11:                                             ; preds = %bb10, %GOT_MESG
  %24 = load i8** %s, align 8, !dbg !7412
  %25 = call i64 @strlen(i8* %24) nounwind readonly, !dbg !7412
  %26 = trunc i64 %25 to i32, !dbg !7412
  %27 = add i32 %26, 1, !dbg !7412
  store i32 %27, i32* %i, align 4, !dbg !7412
  %28 = load i32* %i, align 4, !dbg !7413
  %29 = sext i32 %28 to i64, !dbg !7413
  %30 = load i64* %buflen_addr, align 8, !dbg !7413
  %31 = icmp ugt i64 %29, %30, !dbg !7413
  br i1 %31, label %bb12, label %bb13, !dbg !7413

bb12:                                             ; preds = %bb11
  %32 = load i64* %buflen_addr, align 8, !dbg !7414
  %33 = trunc i64 %32 to i32, !dbg !7414
  store i32 %33, i32* %i, align 4, !dbg !7414
  store i32 34, i32* %retval1, align 4, !dbg !7415
  br label %bb13, !dbg !7415

bb13:                                             ; preds = %bb12, %bb11
  %34 = load i32* %i, align 4, !dbg !7416
  %35 = icmp ne i32 %34, 0, !dbg !7416
  br i1 %35, label %bb14, label %bb15, !dbg !7416

bb14:                                             ; preds = %bb13
  %36 = load i32* %i, align 4, !dbg !7417
  %37 = sext i32 %36 to i64, !dbg !7417
  %38 = load i8** %strerrbuf_addr, align 8, !dbg !7417
  %39 = load i8** %s, align 8, !dbg !7417
  %40 = call i8* @memcpy(i8* noalias %38, i8* noalias %39, i64 %37) nounwind, !dbg !7417
  %41 = load i32* %i, align 4, !dbg !7418
  %42 = sub nsw i32 %41, 1, !dbg !7418
  %43 = load i8** %strerrbuf_addr, align 8, !dbg !7418
  %44 = sext i32 %42 to i64, !dbg !7418
  %45 = getelementptr inbounds i8* %43, i64 %44, !dbg !7418
  store i8 0, i8* %45, align 1, !dbg !7418
  br label %bb15, !dbg !7418

bb15:                                             ; preds = %bb14, %bb13
  %46 = load i32* %retval1, align 4, !dbg !7419
  %47 = icmp ne i32 %46, 0, !dbg !7419
  br i1 %47, label %bb16, label %bb17, !dbg !7419

bb16:                                             ; preds = %bb15
  %48 = load i32* %retval1, align 4, !dbg !7420
  store i32 %48, i32* @errno, align 4, !dbg !7420
  br label %bb17, !dbg !7420

bb17:                                             ; preds = %bb16, %bb15
  %49 = load i32* %retval1, align 4, !dbg !7421
  store i32 %49, i32* %0, align 4, !dbg !7421
  %50 = load i32* %0, align 4, !dbg !7421
  store i32 %50, i32* %retval, align 4, !dbg !7421
  %retval18 = load i32* %retval, !dbg !7421
  ret i32 %retval18, !dbg !7421
}

define hidden i64 @_fpmaxtostr(%4* %fp, x86_fp80 %x, %struct.printf_info* %info, i64 (%4*, i64, i64, i64)* %fp_outfunc) nounwind {
entry:
  %fp_addr = alloca %4*, align 8
  %x_addr = alloca x86_fp80, align 16
  %info_addr = alloca %struct.printf_info*, align 8
  %fp_outfunc_addr = alloca i64 (%4*, i64, i64, i64)*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %e.6 = alloca i8*
  %round = alloca i32
  %o_exp = alloca i32
  %exp = alloca i32
  %width = alloca i32
  %preci = alloca i32
  %cnt = alloca i32
  %s = alloca i8*
  %e = alloca i8*
  %pc_fwi = alloca [24 x i64]
  %ppc = alloca i64*
  %ppc_last = alloca i64*
  %exp_buf = alloca [16 x i8]
  %buf = alloca [30 x i8]
  %sign_str = alloca [6 x i8]
  %o_mode = alloca i8
  %mode = alloca i8
  %i = alloca i32
  %j = alloca i32
  %exp_neg = alloca i32
  %i31 = alloca i32
  %j32 = alloca i32
  %digit_block = alloca i64
  %i48 = alloca i32
  %i67 = alloca i32
  %p = alloca i8*
  %j90 = alloca i32
  %exp_char = alloca i8
  %exp_sign = alloca i8
  %i97 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %fp, %4** %fp_addr
  store x86_fp80 %x, x86_fp80* %x_addr
  store %struct.printf_info* %info, %struct.printf_info** %info_addr
  store i64 (%4*, i64, i64, i64)* %fp_outfunc, i64 (%4*, i64, i64, i64)** %fp_outfunc_addr
  %1 = load %struct.printf_info** %info_addr, align 8, !dbg !7422
  %2 = getelementptr inbounds %struct.printf_info* %1, i32 0, i32 1, !dbg !7422
  %3 = load i32* %2, align 4, !dbg !7422
  store i32 %3, i32* %width, align 4, !dbg !7422
  %4 = load %struct.printf_info** %info_addr, align 8, !dbg !7424
  %5 = getelementptr inbounds %struct.printf_info* %4, i32 0, i32 0, !dbg !7424
  %6 = load i32* %5, align 4, !dbg !7424
  store i32 %6, i32* %preci, align 4, !dbg !7424
  %7 = load %struct.printf_info** %info_addr, align 8, !dbg !7425
  %8 = getelementptr inbounds %struct.printf_info* %7, i32 0, i32 2, !dbg !7425
  %9 = load i32* %8, align 4, !dbg !7425
  %10 = trunc i32 %9 to i8, !dbg !7425
  store i8 %10, i8* %mode, align 1, !dbg !7425
  %11 = getelementptr inbounds [16 x i8]* %exp_buf, i64 0, i64 0, !dbg !7426
  store i8 101, i8* %11, align 1, !dbg !7426
  %12 = load i8* %mode, align 1, !dbg !7427
  %13 = or i8 %12, 32, !dbg !7427
  %14 = icmp eq i8 %13, 97, !dbg !7427
  br i1 %14, label %bb, label %bb1, !dbg !7427

bb:                                               ; preds = %entry
  %15 = load i8* %mode, align 1, !dbg !7428
  %16 = add i8 %15, 6, !dbg !7428
  store i8 %16, i8* %mode, align 1, !dbg !7428
  br label %bb1, !dbg !7428

bb1:                                              ; preds = %bb, %entry
  %17 = load i32* %preci, align 4, !dbg !7429
  %18 = icmp slt i32 %17, 0, !dbg !7429
  br i1 %18, label %bb2, label %bb3, !dbg !7429

bb2:                                              ; preds = %bb1
  store i32 6, i32* %preci, align 4, !dbg !7430
  br label %bb3, !dbg !7430

bb3:                                              ; preds = %bb2, %bb1
  %19 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7431
  store i8 0, i8* %19, align 1, !dbg !7431
  %20 = load %struct.printf_info** %info_addr, align 8, !dbg !7432
  %21 = getelementptr inbounds %struct.printf_info* %20, i32 0, i32 3, !dbg !7432
  %22 = load i32* %21, align 4, !dbg !7432
  %int_cast_to_i644 = zext i32 30 to i64
  %23 = icmp ult i64 %int_cast_to_i644, 32
  br i1 %23, label %klee_overshift_check.exit, label %bb.i21

bb.i21:                                           ; preds = %bb3
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb3
  %24 = shl i32 %22, 30, !dbg !7432
  %int_cast_to_i645 = zext i32 31 to i64
  %25 = icmp ult i64 %int_cast_to_i645, 32
  br i1 %25, label %klee_overshift_check.exit23, label %bb.i22

bb.i22:                                           ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit23:                      ; preds = %klee_overshift_check.exit
  %26 = lshr i32 %24, 31, !dbg !7432
  %27 = trunc i32 %26 to i1, !dbg !7432
  %28 = icmp ne i1 %27, false, !dbg !7432
  br i1 %28, label %bb4, label %bb5, !dbg !7432

bb4:                                              ; preds = %klee_overshift_check.exit23
  %29 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7433
  store i8 43, i8* %29, align 1, !dbg !7433
  br label %bb7, !dbg !7433

bb5:                                              ; preds = %klee_overshift_check.exit23
  %30 = load %struct.printf_info** %info_addr, align 8, !dbg !7434
  %31 = getelementptr inbounds %struct.printf_info* %30, i32 0, i32 3, !dbg !7434
  %32 = load i32* %31, align 4, !dbg !7434
  %int_cast_to_i646 = zext i32 31 to i64
  %33 = icmp ult i64 %int_cast_to_i646, 32
  br i1 %33, label %klee_overshift_check.exit25, label %bb.i24

bb.i24:                                           ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit25:                      ; preds = %bb5
  %34 = shl i32 %32, 31, !dbg !7434
  %int_cast_to_i647 = zext i32 31 to i64
  %35 = icmp ult i64 %int_cast_to_i647, 32
  br i1 %35, label %klee_overshift_check.exit27, label %bb.i26

bb.i26:                                           ; preds = %klee_overshift_check.exit25
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit27:                      ; preds = %klee_overshift_check.exit25
  %36 = lshr i32 %34, 31, !dbg !7434
  %37 = trunc i32 %36 to i1, !dbg !7434
  %38 = icmp ne i1 %37, false, !dbg !7434
  br i1 %38, label %bb6, label %bb7, !dbg !7434

bb6:                                              ; preds = %klee_overshift_check.exit27
  %39 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7435
  store i8 32, i8* %39, align 1, !dbg !7435
  br label %bb7, !dbg !7435

bb7:                                              ; preds = %bb6, %klee_overshift_check.exit27, %bb4
  %sign_str8 = bitcast [6 x i8]* %sign_str to i8*, !dbg !7436
  %40 = getelementptr inbounds i8* %sign_str8, i64 1, !dbg !7436
  store i8 0, i8* %40, align 1, !dbg !7436
  %41 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7437
  store i64 0, i64* %41, align 8, !dbg !7437
  %42 = load x86_fp80* %x_addr, align 16, !dbg !7438
  %43 = load x86_fp80* %x_addr, align 16, !dbg !7438
  %44 = fcmp une x86_fp80 %42, %43, !dbg !7438
  br i1 %44, label %bb9, label %bb10, !dbg !7438

bb9:                                              ; preds = %bb7
  %45 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7439
  store i64 8, i64* %45, align 8, !dbg !7439
  br label %INF_NAN, !dbg !7439

bb10:                                             ; preds = %bb7
  %46 = load x86_fp80* %x_addr, align 16, !dbg !7440
  %47 = fcmp oeq x86_fp80 %46, 0xK00000000000000000000, !dbg !7440
  %48 = load x86_fp80* %x_addr, align 16, !dbg !7441
  br i1 %47, label %bb11, label %bb14, !dbg !7440

bb11:                                             ; preds = %bb10
  %49 = fdiv x86_fp80 0xK3FFF8000000000000000, %48, !dbg !7441
  %50 = fcmp olt x86_fp80 %49, 0xK00000000000000000000, !dbg !7441
  br i1 %50, label %bb12, label %bb13, !dbg !7441

bb12:                                             ; preds = %bb11
  %51 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7442
  store i8 45, i8* %51, align 1, !dbg !7442
  br label %bb13, !dbg !7442

bb13:                                             ; preds = %bb12, %bb11
  store i32 -1, i32* %exp, align 4, !dbg !7443
  br label %GENERATE_DIGITS, !dbg !7443

bb14:                                             ; preds = %bb10
  %52 = fcmp olt x86_fp80 %48, 0xK00000000000000000000, !dbg !7444
  br i1 %52, label %bb15, label %bb16, !dbg !7444

bb15:                                             ; preds = %bb14
  %53 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7445
  store i8 45, i8* %53, align 1, !dbg !7445
  %54 = load x86_fp80* %x_addr, align 16, !dbg !7446
  %55 = fsub x86_fp80 0xK80000000000000000000, %54, !dbg !7446
  store x86_fp80 %55, x86_fp80* %x_addr, align 16, !dbg !7446
  br label %bb16, !dbg !7446

bb16:                                             ; preds = %bb15, %bb14
  %56 = load x86_fp80* %x_addr, align 16, !dbg !7447
  %57 = fdiv x86_fp80 %56, 0xK40018000000000000000, !dbg !7447
  %58 = load x86_fp80* %x_addr, align 16, !dbg !7447
  %59 = fcmp oeq x86_fp80 %57, %58, !dbg !7447
  br i1 %59, label %INF_NAN, label %bb20, !dbg !7447

INF_NAN:                                          ; preds = %bb16, %bb9
  %60 = load %struct.printf_info** %info_addr, align 8, !dbg !7448
  %61 = getelementptr inbounds %struct.printf_info* %60, i32 0, i32 4, !dbg !7448
  store i32 32, i32* %61, align 4, !dbg !7448
  %pc_fwi17 = bitcast [24 x i64]* %pc_fwi to i64*, !dbg !7449
  %62 = getelementptr inbounds i64* %pc_fwi17, i64 6, !dbg !7449
  store i64* %62, i64** %ppc, align 8, !dbg !7449
  %63 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 3, !dbg !7450
  store i64 112, i64* %63, align 8, !dbg !7450
  %64 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 4, !dbg !7451
  store i64 3, i64* %64, align 8, !dbg !7451
  %65 = load i8* %mode, align 1, !dbg !7452
  %66 = icmp sle i8 %65, 96, !dbg !7452
  br i1 %66, label %bb18, label %bb19, !dbg !7452

bb18:                                             ; preds = %INF_NAN
  %67 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7453
  %68 = load i64* %67, align 8, !dbg !7453
  %69 = add nsw i64 %68, 4, !dbg !7453
  %70 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7453
  store i64 %69, i64* %70, align 8, !dbg !7453
  br label %bb19, !dbg !7453

bb19:                                             ; preds = %bb18, %INF_NAN
  %71 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7454
  %72 = load i64* %71, align 8, !dbg !7454
  %73 = getelementptr inbounds i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 0), i64 %72, !dbg !7454
  %74 = ptrtoint i8* %73 to i64, !dbg !7454
  %75 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7454
  store i64 %74, i64* %75, align 8, !dbg !7454
  br label %EXIT_SPECIAL, !dbg !7454

bb20:                                             ; preds = %bb16
  store i32 8, i32* %exp, align 4, !dbg !7455
  store i32 13, i32* %i, align 4, !dbg !7457
  store i32 4096, i32* %j, align 4, !dbg !7458
  store i32 0, i32* %exp_neg, align 4, !dbg !7459
  %76 = load x86_fp80* %x_addr, align 16, !dbg !7461
  %77 = fcmp olt x86_fp80 %76, 0xK4019BEBC200000000000, !dbg !7461
  br i1 %77, label %bb21, label %bb22, !dbg !7461

bb21:                                             ; preds = %bb20
  store i32 1, i32* %exp_neg, align 4, !dbg !7462
  br label %bb22, !dbg !7462

bb22:                                             ; preds = %klee_overshift_check.exit29, %bb21, %bb20
  %78 = load i32* %i, align 4, !dbg !7463
  %79 = sub nsw i32 %78, 1, !dbg !7463
  store i32 %79, i32* %i, align 4, !dbg !7463
  %80 = load i32* %exp_neg, align 4, !dbg !7464
  %81 = icmp ne i32 %80, 0, !dbg !7464
  %82 = load i32* %i, align 4, !dbg !7465
  %83 = sext i32 %82 to i64, !dbg !7465
  %84 = getelementptr inbounds [13 x x86_fp80]* @exp10_table, i64 0, i64 %83, !dbg !7465
  %85 = load x86_fp80* %84, align 16, !dbg !7465
  %86 = load x86_fp80* %x_addr, align 16, !dbg !7465
  br i1 %81, label %bb23, label %bb26, !dbg !7464

bb23:                                             ; preds = %bb22
  %87 = fmul x86_fp80 %85, %86, !dbg !7465
  %88 = fcmp olt x86_fp80 %87, 0xK401CEE6B280000000000, !dbg !7465
  br i1 %88, label %bb24, label %bb28, !dbg !7465

bb24:                                             ; preds = %bb23
  %89 = load i32* %i, align 4, !dbg !7466
  %90 = sext i32 %89 to i64, !dbg !7466
  %91 = getelementptr inbounds [13 x x86_fp80]* @exp10_table, i64 0, i64 %90, !dbg !7466
  %92 = load x86_fp80* %91, align 16, !dbg !7466
  %93 = load x86_fp80* %x_addr, align 16, !dbg !7466
  %94 = fmul x86_fp80 %92, %93, !dbg !7466
  store x86_fp80 %94, x86_fp80* %x_addr, align 16, !dbg !7466
  %95 = load i32* %exp, align 4, !dbg !7467
  %96 = load i32* %j, align 4, !dbg !7467
  %97 = sub nsw i32 %95, %96, !dbg !7467
  store i32 %97, i32* %exp, align 4, !dbg !7467
  br label %bb28, !dbg !7467

bb26:                                             ; preds = %bb22
  %98 = fdiv x86_fp80 %86, %85, !dbg !7468
  %99 = fcmp oge x86_fp80 %98, 0xK4019BEBC200000000000, !dbg !7468
  br i1 %99, label %bb27, label %bb28, !dbg !7468

bb27:                                             ; preds = %bb26
  %100 = load i32* %i, align 4, !dbg !7469
  %101 = sext i32 %100 to i64, !dbg !7469
  %102 = getelementptr inbounds [13 x x86_fp80]* @exp10_table, i64 0, i64 %101, !dbg !7469
  %103 = load x86_fp80* %102, align 16, !dbg !7469
  %104 = load x86_fp80* %x_addr, align 16, !dbg !7469
  %105 = fdiv x86_fp80 %104, %103, !dbg !7469
  store x86_fp80 %105, x86_fp80* %x_addr, align 16, !dbg !7469
  %106 = load i32* %exp, align 4, !dbg !7470
  %107 = load i32* %j, align 4, !dbg !7470
  %108 = add nsw i32 %106, %107, !dbg !7470
  store i32 %108, i32* %exp, align 4, !dbg !7470
  br label %bb28, !dbg !7470

bb28:                                             ; preds = %bb23, %bb24, %bb27, %bb26
  %109 = load i32* %j, align 4, !dbg !7471
  %int_cast_to_i648 = zext i32 1 to i64
  %110 = icmp ult i64 %int_cast_to_i648, 32
  br i1 %110, label %klee_overshift_check.exit29, label %bb.i28

bb.i28:                                           ; preds = %bb28
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit29:                      ; preds = %bb28
  %111 = ashr i32 %109, 1, !dbg !7471
  store i32 %111, i32* %j, align 4, !dbg !7471
  %112 = load i32* %i, align 4, !dbg !7472
  %113 = icmp ne i32 %112, 0, !dbg !7472
  br i1 %113, label %bb22, label %bb29, !dbg !7472

bb29:                                             ; preds = %klee_overshift_check.exit29
  %114 = load x86_fp80* %x_addr, align 16, !dbg !7473
  %115 = fcmp oge x86_fp80 %114, 0xK401CEE6B280000000000, !dbg !7473
  br i1 %115, label %bb30, label %GENERATE_DIGITS, !dbg !7473

bb30:                                             ; preds = %bb29
  %116 = load x86_fp80* getelementptr inbounds ([13 x x86_fp80]* @exp10_table, i64 0, i64 0), align 16, !dbg !7474
  %117 = load x86_fp80* %x_addr, align 16, !dbg !7474
  %118 = fdiv x86_fp80 %117, %116, !dbg !7474
  store x86_fp80 %118, x86_fp80* %x_addr, align 16, !dbg !7474
  %119 = load i32* %exp, align 4, !dbg !7475
  %120 = add nsw i32 %119, 1, !dbg !7475
  store i32 %120, i32* %exp, align 4, !dbg !7475
  br label %GENERATE_DIGITS, !dbg !7476

GENERATE_DIGITS:                                  ; preds = %bb30, %bb29, %bb13
  %buf33 = bitcast [30 x i8]* %buf to i8*, !dbg !7477
  %121 = getelementptr inbounds i8* %buf33, i64 2, !dbg !7477
  store i8* %121, i8** %s, align 8, !dbg !7477
  store i32 0, i32* %i31, align 4, !dbg !7479
  br label %bb34, !dbg !7479

bb34:                                             ; preds = %bb36, %GENERATE_DIGITS
  %122 = load x86_fp80* %x_addr, align 16, !dbg !7480
  %123 = fptoui x86_fp80 %122 to i64, !dbg !7480
  store i64 %123, i64* %digit_block, align 8, !dbg !7480
  %124 = load i64* %digit_block, align 8, !dbg !7482
  %125 = uitofp i64 %124 to x86_fp80, !dbg !7482
  %126 = load x86_fp80* %x_addr, align 16, !dbg !7482
  %127 = fsub x86_fp80 %126, %125, !dbg !7482
  %128 = fmul x86_fp80 %127, 0xK401CEE6B280000000000, !dbg !7482
  store x86_fp80 %128, x86_fp80* %x_addr, align 16, !dbg !7482
  %129 = load i8** %s, align 8, !dbg !7483
  %130 = getelementptr inbounds i8* %129, i64 9, !dbg !7483
  store i8* %130, i8** %s, align 8, !dbg !7483
  store i32 0, i32* %j32, align 4, !dbg !7484
  br label %bb35, !dbg !7484

bb35:                                             ; preds = %klee_div_zero_check.exit16, %bb34
  %131 = load i32* %j32, align 4, !dbg !7485
  %132 = add nsw i32 %131, 1, !dbg !7485
  store i32 %132, i32* %j32, align 4, !dbg !7485
  %133 = load i32* %j32, align 4, !dbg !7485
  %134 = sub nsw i32 0, %133, !dbg !7485
  %135 = load i64* %digit_block, align 8, !dbg !7485
  %int_cast_to_i64 = bitcast i64 10 to i64
  %136 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %137 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %137, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb35
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb35
  call void @klee_disable_symbex() nounwind
  %138 = urem i64 %135, 10, !dbg !7485
  %139 = trunc i64 %138 to i8, !dbg !7485
  %140 = add i8 %139, 48, !dbg !7485
  %141 = load i8** %s, align 8, !dbg !7485
  %142 = sext i32 %134 to i64, !dbg !7485
  %143 = getelementptr inbounds i8* %141, i64 %142, !dbg !7485
  store i8 %140, i8* %143, align 1, !dbg !7485
  %144 = load i64* %digit_block, align 8, !dbg !7486
  %int_cast_to_i641 = bitcast i64 10 to i64
  %145 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %146 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %146, label %bb.i15, label %klee_div_zero_check.exit16

bb.i15:                                           ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit16:                       ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %147 = udiv i64 %144, 10, !dbg !7486
  store i64 %147, i64* %digit_block, align 8, !dbg !7486
  %148 = load i32* %j32, align 4, !dbg !7487
  %149 = icmp sle i32 %148, 8, !dbg !7487
  br i1 %149, label %bb35, label %bb36, !dbg !7487

bb36:                                             ; preds = %klee_div_zero_check.exit16
  %150 = load i32* %i31, align 4, !dbg !7488
  %151 = add nsw i32 %150, 1, !dbg !7488
  store i32 %151, i32* %i31, align 4, !dbg !7488
  %152 = load i32* %i31, align 4, !dbg !7488
  %153 = icmp sle i32 %152, 2, !dbg !7488
  br i1 %153, label %bb34, label %bb37, !dbg !7488

bb37:                                             ; preds = %bb36
  %154 = load i8* %mode, align 1, !dbg !7489
  %155 = icmp sle i8 %154, 96, !dbg !7489
  br i1 %155, label %bb38, label %bb39, !dbg !7489

bb38:                                             ; preds = %bb37
  %156 = getelementptr inbounds [16 x i8]* %exp_buf, i64 0, i64 0, !dbg !7490
  %157 = load i8* %156, align 1, !dbg !7490
  %158 = sub i8 %157, 32, !dbg !7490
  %159 = getelementptr inbounds [16 x i8]* %exp_buf, i64 0, i64 0, !dbg !7490
  store i8 %158, i8* %159, align 1, !dbg !7490
  %160 = load i8* %mode, align 1, !dbg !7491
  %161 = add i8 %160, 32, !dbg !7491
  store i8 %161, i8* %mode, align 1, !dbg !7491
  br label %bb39, !dbg !7491

bb39:                                             ; preds = %bb38, %bb37
  %162 = load i8* %mode, align 1, !dbg !7492
  store i8 %162, i8* %o_mode, align 1, !dbg !7492
  %163 = load i8* %mode, align 1, !dbg !7493
  %164 = icmp eq i8 %163, 103, !dbg !7493
  br i1 %164, label %bb40, label %bb42, !dbg !7493

bb40:                                             ; preds = %bb39
  %165 = load i32* %preci, align 4, !dbg !7493
  %166 = icmp sgt i32 %165, 0, !dbg !7493
  br i1 %166, label %bb41, label %bb42, !dbg !7493

bb41:                                             ; preds = %bb40
  %167 = load i32* %preci, align 4, !dbg !7494
  %168 = sub nsw i32 %167, 1, !dbg !7494
  store i32 %168, i32* %preci, align 4, !dbg !7494
  br label %bb42, !dbg !7494

bb42:                                             ; preds = %bb41, %bb40, %bb39
  %169 = load i32* %preci, align 4, !dbg !7495
  store i32 %169, i32* %round, align 4, !dbg !7495
  %170 = load i8* %mode, align 1, !dbg !7496
  %171 = icmp eq i8 %170, 102, !dbg !7496
  br i1 %171, label %bb43, label %bb46, !dbg !7496

bb43:                                             ; preds = %bb42
  %172 = load i32* %round, align 4, !dbg !7497
  %173 = load i32* %exp, align 4, !dbg !7497
  %174 = add nsw i32 %172, %173, !dbg !7497
  store i32 %174, i32* %round, align 4, !dbg !7497
  %175 = load i32* %round, align 4, !dbg !7498
  %176 = icmp slt i32 %175, -1, !dbg !7498
  br i1 %176, label %bb44, label %bb46, !dbg !7498

bb44:                                             ; preds = %bb43
  %buf45 = bitcast [30 x i8]* %buf to i8*, !dbg !7499
  %177 = call i8* @memset(i8* %buf45, i32 48, i64 21) nounwind, !dbg !7499
  store i32 -1, i32* %exp, align 4, !dbg !7500
  store i32 -1, i32* %round, align 4, !dbg !7501
  br label %bb46, !dbg !7501

bb46:                                             ; preds = %bb44, %bb43, %bb42
  %buf47 = bitcast [30 x i8]* %buf to i8*, !dbg !7502
  store i8* %buf47, i8** %s, align 8, !dbg !7502
  %178 = load i8** %s, align 8, !dbg !7503
  store i8 0, i8* %178, align 1, !dbg !7503
  %179 = load i8** %s, align 8, !dbg !7503
  %180 = getelementptr inbounds i8* %179, i64 1, !dbg !7503
  store i8* %180, i8** %s, align 8, !dbg !7503
  %181 = load i8** %s, align 8, !dbg !7504
  store i8 48, i8* %181, align 1, !dbg !7504
  store i32 0, i32* %i48, align 4, !dbg !7505
  %182 = load i8** %s, align 8, !dbg !7507
  %183 = getelementptr inbounds i8* %182, i64 21, !dbg !7507
  %184 = getelementptr inbounds i8* %183, i64 1, !dbg !7507
  store i8* %184, i8** %e, align 8, !dbg !7507
  %185 = load i32* %round, align 4, !dbg !7508
  %186 = icmp sle i32 %185, 20, !dbg !7508
  br i1 %186, label %bb49, label %bb51, !dbg !7508

bb49:                                             ; preds = %bb46
  %187 = load i8** %s, align 8, !dbg !7509
  %188 = load i32* %round, align 4, !dbg !7509
  %189 = sext i32 %188 to i64, !dbg !7509
  %190 = getelementptr inbounds i8* %187, i64 %189, !dbg !7509
  %191 = getelementptr inbounds i8* %190, i64 2, !dbg !7509
  store i8* %191, i8** %e, align 8, !dbg !7509
  %192 = load i8** %e, align 8, !dbg !7510
  %193 = load i8* %192, align 1, !dbg !7510
  %194 = icmp sgt i8 %193, 52, !dbg !7510
  br i1 %194, label %bb50, label %bb51, !dbg !7510

bb50:                                             ; preds = %bb49
  store i32 1, i32* %i48, align 4, !dbg !7511
  br label %bb51, !dbg !7511

bb51:                                             ; preds = %bb52, %bb51, %bb50, %bb49, %bb46
  %195 = load i8** %e, align 8, !dbg !7512
  %196 = getelementptr inbounds i8* %195, i64 -1, !dbg !7512
  store i8* %196, i8** %e, align 8, !dbg !7512
  %197 = load i8** %e, align 8, !dbg !7512
  store i8* %197, i8** %e.6, align 8, !dbg !7512
  %198 = load i8** %e.6, align 8, !dbg !7512
  %199 = load i8* %198, align 1, !dbg !7512
  %200 = load i32* %i48, align 4, !dbg !7512
  %201 = trunc i32 %200 to i8, !dbg !7512
  %202 = add i8 %199, %201, !dbg !7512
  %203 = load i8** %e.6, align 8, !dbg !7512
  store i8 %202, i8* %203, align 1, !dbg !7512
  %204 = load i8** %e, align 8, !dbg !7513
  %205 = load i8* %204, align 1, !dbg !7513
  %206 = icmp eq i8 %205, 48, !dbg !7513
  br i1 %206, label %bb51, label %bb52, !dbg !7513

bb52:                                             ; preds = %bb51
  %207 = load i8** %e, align 8, !dbg !7513
  %208 = load i8* %207, align 1, !dbg !7513
  %209 = icmp sgt i8 %208, 57, !dbg !7513
  br i1 %209, label %bb51, label %bb53, !dbg !7513

bb53:                                             ; preds = %bb52
  %210 = load i32* %exp, align 4, !dbg !7514
  store i32 %210, i32* %o_exp, align 4, !dbg !7514
  %211 = load i8** %e, align 8, !dbg !7515
  %212 = load i8** %s, align 8, !dbg !7515
  %213 = icmp ule i8* %211, %212, !dbg !7515
  br i1 %213, label %bb54, label %bb55, !dbg !7515

bb54:                                             ; preds = %bb53
  %214 = load i32* %o_exp, align 4, !dbg !7516
  %215 = add nsw i32 %214, 1, !dbg !7516
  store i32 %215, i32* %o_exp, align 4, !dbg !7516
  %216 = load i8** %s, align 8, !dbg !7517
  store i8* %216, i8** %e, align 8, !dbg !7517
  br label %bb56, !dbg !7517

bb55:                                             ; preds = %bb53
  %217 = load i8** %s, align 8, !dbg !7518
  %218 = getelementptr inbounds i8* %217, i64 1, !dbg !7518
  store i8* %218, i8** %s, align 8, !dbg !7518
  br label %bb56, !dbg !7518

bb56:                                             ; preds = %bb55, %bb54
  %219 = load i8** %e, align 8, !dbg !7519
  %220 = getelementptr inbounds i8* %219, i64 1, !dbg !7519
  store i8* %220, i8** %e, align 8, !dbg !7519
  %221 = load i8** %e, align 8, !dbg !7519
  store i8 0, i8* %221, align 1, !dbg !7519
  %222 = load i8* %mode, align 1, !dbg !7520
  %223 = icmp eq i8 %222, 103, !dbg !7520
  br i1 %223, label %bb57, label %bb60, !dbg !7520

bb57:                                             ; preds = %bb56
  %224 = load i32* %o_exp, align 4, !dbg !7520
  %225 = icmp sge i32 %224, -4, !dbg !7520
  br i1 %225, label %bb58, label %bb60, !dbg !7520

bb58:                                             ; preds = %bb57
  %226 = load i32* %o_exp, align 4, !dbg !7520
  %227 = load i32* %round, align 4, !dbg !7520
  %228 = icmp sle i32 %226, %227, !dbg !7520
  br i1 %228, label %bb59, label %bb60, !dbg !7520

bb59:                                             ; preds = %bb58
  store i8 102, i8* %mode, align 1, !dbg !7521
  %229 = load i32* %round, align 4, !dbg !7522
  %230 = load i32* %o_exp, align 4, !dbg !7522
  %231 = sub nsw i32 %229, %230, !dbg !7522
  store i32 %231, i32* %preci, align 4, !dbg !7522
  br label %bb60, !dbg !7522

bb60:                                             ; preds = %bb59, %bb58, %bb57, %bb56
  %232 = load i32* %o_exp, align 4, !dbg !7523
  store i32 %232, i32* %exp, align 4, !dbg !7523
  %233 = load i8* %mode, align 1, !dbg !7524
  %234 = icmp ne i8 %233, 102, !dbg !7524
  br i1 %234, label %bb61, label %bb62, !dbg !7524

bb61:                                             ; preds = %bb60
  store i32 0, i32* %o_exp, align 4, !dbg !7525
  br label %bb62, !dbg !7525

bb62:                                             ; preds = %bb61, %bb60
  %235 = load i32* %o_exp, align 4, !dbg !7526
  %236 = icmp slt i32 %235, 0, !dbg !7526
  br i1 %236, label %bb63, label %bb64, !dbg !7526

bb63:                                             ; preds = %bb62
  %237 = load i8** %s, align 8, !dbg !7527
  %238 = getelementptr inbounds i8* %237, i64 -1, !dbg !7527
  store i8* %238, i8** %s, align 8, !dbg !7527
  %239 = load i8** %s, align 8, !dbg !7527
  store i8 48, i8* %239, align 1, !dbg !7527
  br label %bb64, !dbg !7527

bb64:                                             ; preds = %bb63, %bb62
  %240 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 3, !dbg !7528
  store i64 176, i64* %240, align 8, !dbg !7528
  %241 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 4, !dbg !7529
  store i64 1, i64* %241, align 8, !dbg !7529
  %sign_str65 = bitcast [6 x i8]* %sign_str to i8*, !dbg !7530
  %242 = getelementptr inbounds i8* %sign_str65, i64 4, !dbg !7530
  %243 = ptrtoint i8* %242 to i64, !dbg !7530
  %244 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7530
  store i64 %243, i64* %244, align 8, !dbg !7530
  %245 = load i8** %s, align 8, !dbg !7531
  %246 = load i8* %245, align 1, !dbg !7531
  %247 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 4, !dbg !7531
  store i8 %246, i8* %247, align 1, !dbg !7531
  %248 = load i8** %s, align 8, !dbg !7531
  %249 = getelementptr inbounds i8* %248, i64 1, !dbg !7531
  store i8* %249, i8** %s, align 8, !dbg !7531
  %250 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 5, !dbg !7532
  store i8 0, i8* %250, align 1, !dbg !7532
  %pc_fwi66 = bitcast [24 x i64]* %pc_fwi to i64*, !dbg !7533
  %251 = getelementptr inbounds i64* %pc_fwi66, i64 6, !dbg !7533
  store i64* %251, i64** %ppc, align 8, !dbg !7533
  %252 = load i8** %e, align 8, !dbg !7534
  %253 = ptrtoint i8* %252 to i64, !dbg !7534
  %254 = trunc i64 %253 to i32, !dbg !7534
  %255 = load i8** %s, align 8, !dbg !7534
  %256 = ptrtoint i8* %255 to i64, !dbg !7534
  %257 = trunc i64 %256 to i32, !dbg !7534
  %258 = sub i32 %254, %257, !dbg !7534
  store i32 %258, i32* %i67, align 4, !dbg !7534
  %259 = load i32* %o_exp, align 4, !dbg !7536
  %260 = icmp sge i32 %259, 0, !dbg !7536
  br i1 %260, label %bb68, label %bb75, !dbg !7536

bb68:                                             ; preds = %bb64
  %261 = load i64** %ppc, align 8, !dbg !7537
  %262 = getelementptr inbounds i64* %261, i64 0, !dbg !7537
  store i64 112, i64* %262, align 1, !dbg !7537
  %263 = load i8** %s, align 8, !dbg !7538
  %264 = ptrtoint i8* %263 to i64, !dbg !7538
  %265 = load i64** %ppc, align 8, !dbg !7538
  %266 = getelementptr inbounds i64* %265, i64 2, !dbg !7538
  store i64 %264, i64* %266, align 1, !dbg !7538
  %267 = load i32* %o_exp, align 4, !dbg !7539
  %268 = load i32* %i67, align 4, !dbg !7539
  %269 = icmp sge i32 %267, %268, !dbg !7539
  br i1 %269, label %bb69, label %bb72, !dbg !7539

bb69:                                             ; preds = %bb68
  %270 = load i32* %i67, align 4, !dbg !7540
  %271 = sext i32 %270 to i64, !dbg !7540
  %272 = load i64** %ppc, align 8, !dbg !7540
  %273 = getelementptr inbounds i64* %272, i64 1, !dbg !7540
  store i64 %271, i64* %273, align 1, !dbg !7540
  %274 = load i64** %ppc, align 8, !dbg !7541
  %275 = getelementptr inbounds i64* %274, i64 3, !dbg !7541
  store i64* %275, i64** %ppc, align 8, !dbg !7541
  %276 = load i32* %o_exp, align 4, !dbg !7542
  %277 = load i32* %i67, align 4, !dbg !7542
  %278 = sub nsw i32 %276, %277, !dbg !7542
  store i32 %278, i32* %o_exp, align 4, !dbg !7542
  store i32 0, i32* %i67, align 4, !dbg !7543
  %279 = load i32* %o_exp, align 4, !dbg !7544
  %280 = icmp sgt i32 %279, 0, !dbg !7544
  br i1 %280, label %bb70, label %bb74, !dbg !7544

bb70:                                             ; preds = %bb69
  %281 = load i64** %ppc, align 8, !dbg !7545
  %282 = getelementptr inbounds i64* %281, i64 0, !dbg !7545
  store i64 176, i64* %282, align 1, !dbg !7545
  %283 = load i32* %o_exp, align 4, !dbg !7546
  %284 = sext i32 %283 to i64, !dbg !7546
  %285 = load i64** %ppc, align 8, !dbg !7546
  %286 = getelementptr inbounds i64* %285, i64 1, !dbg !7546
  store i64 %284, i64* %286, align 1, !dbg !7546
  %287 = load i64** %ppc, align 8, !dbg !7547
  %288 = getelementptr inbounds i64* %287, i64 2, !dbg !7547
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 3) to i64), i64* %288, align 1, !dbg !7547
  %289 = load i64** %ppc, align 8, !dbg !7548
  %290 = getelementptr inbounds i64* %289, i64 3, !dbg !7548
  store i64* %290, i64** %ppc, align 8, !dbg !7548
  br label %bb74, !dbg !7548

bb72:                                             ; preds = %bb68
  %291 = load i32* %o_exp, align 4, !dbg !7549
  %292 = icmp sgt i32 %291, 0, !dbg !7549
  br i1 %292, label %bb73, label %bb74, !dbg !7549

bb73:                                             ; preds = %bb72
  %293 = load i32* %o_exp, align 4, !dbg !7550
  %294 = sext i32 %293 to i64, !dbg !7550
  %295 = load i64** %ppc, align 8, !dbg !7550
  %296 = getelementptr inbounds i64* %295, i64 1, !dbg !7550
  store i64 %294, i64* %296, align 1, !dbg !7550
  %297 = load i64** %ppc, align 8, !dbg !7551
  %298 = getelementptr inbounds i64* %297, i64 3, !dbg !7551
  store i64* %298, i64** %ppc, align 8, !dbg !7551
  %299 = load i8** %s, align 8, !dbg !7552
  %300 = load i32* %o_exp, align 4, !dbg !7552
  %301 = sext i32 %300 to i64, !dbg !7552
  %302 = getelementptr inbounds i8* %299, i64 %301, !dbg !7552
  store i8* %302, i8** %s, align 8, !dbg !7552
  %303 = load i32* %i67, align 4, !dbg !7553
  %304 = load i32* %o_exp, align 4, !dbg !7553
  %305 = sub nsw i32 %303, %304, !dbg !7553
  store i32 %305, i32* %i67, align 4, !dbg !7553
  br label %bb74, !dbg !7553

bb74:                                             ; preds = %bb69, %bb70, %bb73, %bb72
  store i32 -1, i32* %o_exp, align 4, !dbg !7554
  br label %bb75, !dbg !7554

bb75:                                             ; preds = %bb74, %bb64
  %306 = load %struct.printf_info** %info_addr, align 8, !dbg !7555
  %307 = getelementptr inbounds %struct.printf_info* %306, i32 0, i32 3, !dbg !7555
  %308 = load i32* %307, align 4, !dbg !7555
  %int_cast_to_i649 = zext i32 27 to i64
  %309 = icmp ult i64 %int_cast_to_i649, 32
  br i1 %309, label %klee_overshift_check.exit31, label %bb.i30

bb.i30:                                           ; preds = %bb75
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit31:                      ; preds = %bb75
  %310 = shl i32 %308, 27, !dbg !7555
  %int_cast_to_i6410 = zext i32 31 to i64
  %311 = icmp ult i64 %int_cast_to_i6410, 32
  br i1 %311, label %klee_overshift_check.exit33, label %bb.i32

bb.i32:                                           ; preds = %klee_overshift_check.exit31
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit33:                      ; preds = %klee_overshift_check.exit31
  %312 = lshr i32 %310, 31, !dbg !7555
  %313 = trunc i32 %312 to i1, !dbg !7555
  %314 = icmp ne i1 %313, false, !dbg !7555
  br i1 %314, label %bb79, label %bb76, !dbg !7555

bb76:                                             ; preds = %klee_overshift_check.exit33
  %315 = load i32* %i67, align 4, !dbg !7555
  %316 = icmp ne i32 %315, 0, !dbg !7555
  br i1 %316, label %bb79, label %bb77, !dbg !7555

bb77:                                             ; preds = %bb76
  %317 = load i8* %o_mode, align 1, !dbg !7555
  %318 = icmp eq i8 %317, 103, !dbg !7555
  br i1 %318, label %bb80, label %bb78, !dbg !7555

bb78:                                             ; preds = %bb77
  %319 = load i32* %preci, align 4, !dbg !7555
  %320 = icmp sgt i32 %319, 0, !dbg !7555
  br i1 %320, label %bb79, label %bb80, !dbg !7555

bb79:                                             ; preds = %bb78, %bb76, %klee_overshift_check.exit33
  %321 = load i64** %ppc, align 8, !dbg !7556
  %322 = getelementptr inbounds i64* %321, i64 0, !dbg !7556
  store i64 112, i64* %322, align 1, !dbg !7556
  %323 = load i64** %ppc, align 8, !dbg !7557
  %324 = getelementptr inbounds i64* %323, i64 1, !dbg !7557
  store i64 1, i64* %324, align 1, !dbg !7557
  %325 = load i64** %ppc, align 8, !dbg !7558
  %326 = getelementptr inbounds i64* %325, i64 2, !dbg !7558
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 16) to i64), i64* %326, align 1, !dbg !7558
  %327 = load i64** %ppc, align 8, !dbg !7559
  %328 = getelementptr inbounds i64* %327, i64 3, !dbg !7559
  store i64* %328, i64** %ppc, align 8, !dbg !7559
  br label %bb80, !dbg !7559

bb80:                                             ; preds = %bb79, %bb78, %bb77
  %329 = load i32* %o_exp, align 4, !dbg !7560
  %330 = add nsw i32 %329, 1, !dbg !7560
  store i32 %330, i32* %o_exp, align 4, !dbg !7560
  %331 = load i32* %o_exp, align 4, !dbg !7560
  %332 = icmp slt i32 %331, 0, !dbg !7560
  br i1 %332, label %bb81, label %bb82, !dbg !7560

bb81:                                             ; preds = %bb80
  %333 = load i64** %ppc, align 8, !dbg !7561
  %334 = getelementptr inbounds i64* %333, i64 0, !dbg !7561
  store i64 176, i64* %334, align 1, !dbg !7561
  %335 = load i32* %o_exp, align 4, !dbg !7562
  %336 = sub nsw i32 0, %335, !dbg !7562
  %337 = sext i32 %336 to i64, !dbg !7562
  %338 = load i64** %ppc, align 8, !dbg !7562
  %339 = getelementptr inbounds i64* %338, i64 1, !dbg !7562
  store i64 %337, i64* %339, align 1, !dbg !7562
  %340 = load i64** %ppc, align 8, !dbg !7563
  %341 = getelementptr inbounds i64* %340, i64 2, !dbg !7563
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 3) to i64), i64* %341, align 1, !dbg !7563
  %342 = load i64** %ppc, align 8, !dbg !7564
  %343 = getelementptr inbounds i64* %342, i64 3, !dbg !7564
  store i64* %343, i64** %ppc, align 8, !dbg !7564
  br label %bb82, !dbg !7564

bb82:                                             ; preds = %bb81, %bb80
  %344 = load i32* %i67, align 4, !dbg !7565
  %345 = icmp ne i32 %344, 0, !dbg !7565
  br i1 %345, label %bb83, label %bb84, !dbg !7565

bb83:                                             ; preds = %bb82
  %346 = load i64** %ppc, align 8, !dbg !7566
  %347 = getelementptr inbounds i64* %346, i64 0, !dbg !7566
  store i64 112, i64* %347, align 1, !dbg !7566
  %348 = load i32* %i67, align 4, !dbg !7567
  %349 = sext i32 %348 to i64, !dbg !7567
  %350 = load i64** %ppc, align 8, !dbg !7567
  %351 = getelementptr inbounds i64* %350, i64 1, !dbg !7567
  store i64 %349, i64* %351, align 1, !dbg !7567
  %352 = load i8** %s, align 8, !dbg !7568
  %353 = ptrtoint i8* %352 to i64, !dbg !7568
  %354 = load i64** %ppc, align 8, !dbg !7568
  %355 = getelementptr inbounds i64* %354, i64 2, !dbg !7568
  store i64 %353, i64* %355, align 1, !dbg !7568
  %356 = load i64** %ppc, align 8, !dbg !7569
  %357 = getelementptr inbounds i64* %356, i64 3, !dbg !7569
  store i64* %357, i64** %ppc, align 8, !dbg !7569
  br label %bb84, !dbg !7569

bb84:                                             ; preds = %bb83, %bb82
  %358 = load i8* %o_mode, align 1, !dbg !7570
  %359 = icmp ne i8 %358, 103, !dbg !7570
  br i1 %359, label %bb86, label %bb85, !dbg !7570

bb85:                                             ; preds = %bb84
  %360 = load %struct.printf_info** %info_addr, align 8, !dbg !7570
  %361 = getelementptr inbounds %struct.printf_info* %360, i32 0, i32 3, !dbg !7570
  %362 = load i32* %361, align 4, !dbg !7570
  %int_cast_to_i6411 = zext i32 27 to i64
  %363 = icmp ult i64 %int_cast_to_i6411, 32
  br i1 %363, label %klee_overshift_check.exit35, label %bb.i34

bb.i34:                                           ; preds = %bb85
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit35:                      ; preds = %bb85
  %364 = shl i32 %362, 27, !dbg !7570
  %int_cast_to_i6412 = zext i32 31 to i64
  %365 = icmp ult i64 %int_cast_to_i6412, 32
  br i1 %365, label %klee_overshift_check.exit37, label %bb.i36

bb.i36:                                           ; preds = %klee_overshift_check.exit35
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit37:                      ; preds = %klee_overshift_check.exit35
  %366 = lshr i32 %364, 31, !dbg !7570
  %367 = trunc i32 %366 to i1, !dbg !7570
  %368 = icmp ne i1 %367, false, !dbg !7570
  br i1 %368, label %bb86, label %bb88, !dbg !7570

bb86:                                             ; preds = %klee_overshift_check.exit37, %bb84
  %369 = load i32* %i67, align 4, !dbg !7571
  %370 = load i32* %o_exp, align 4, !dbg !7571
  %371 = sub nsw i32 %369, %370, !dbg !7571
  store i32 %371, i32* %i67, align 4, !dbg !7571
  %372 = load i32* %i67, align 4, !dbg !7572
  %373 = load i32* %preci, align 4, !dbg !7572
  %374 = icmp slt i32 %372, %373, !dbg !7572
  br i1 %374, label %bb87, label %bb88, !dbg !7572

bb87:                                             ; preds = %bb86
  %375 = load i32* %preci, align 4, !dbg !7573
  %376 = load i32* %i67, align 4, !dbg !7573
  %377 = sub nsw i32 %375, %376, !dbg !7573
  store i32 %377, i32* %i67, align 4, !dbg !7573
  %378 = load i64** %ppc, align 8, !dbg !7574
  %379 = getelementptr inbounds i64* %378, i64 0, !dbg !7574
  store i64 176, i64* %379, align 1, !dbg !7574
  %380 = load i32* %i67, align 4, !dbg !7575
  %381 = sext i32 %380 to i64, !dbg !7575
  %382 = load i64** %ppc, align 8, !dbg !7575
  %383 = getelementptr inbounds i64* %382, i64 1, !dbg !7575
  store i64 %381, i64* %383, align 1, !dbg !7575
  %384 = load i64** %ppc, align 8, !dbg !7576
  %385 = getelementptr inbounds i64* %384, i64 2, !dbg !7576
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 3) to i64), i64* %385, align 1, !dbg !7576
  %386 = load i64** %ppc, align 8, !dbg !7577
  %387 = getelementptr inbounds i64* %386, i64 3, !dbg !7577
  store i64* %387, i64** %ppc, align 8, !dbg !7577
  br label %bb88, !dbg !7577

bb88:                                             ; preds = %bb87, %bb86, %klee_overshift_check.exit37
  %388 = load i8* %mode, align 1, !dbg !7578
  %389 = icmp ne i8 %388, 102, !dbg !7578
  br i1 %389, label %bb89, label %EXIT_SPECIAL, !dbg !7578

bb89:                                             ; preds = %bb88
  %exp_buf91 = bitcast [16 x i8]* %exp_buf to i8*, !dbg !7579
  %390 = getelementptr inbounds i8* %exp_buf91, i64 16, !dbg !7579
  store i8* %390, i8** %p, align 8, !dbg !7579
  %391 = getelementptr inbounds [16 x i8]* %exp_buf, i64 0, i64 0, !dbg !7581
  %392 = load i8* %391, align 1, !dbg !7581
  store i8 %392, i8* %exp_char, align 1, !dbg !7581
  store i8 43, i8* %exp_sign, align 1, !dbg !7582
  %393 = load i32* %exp, align 4, !dbg !7583
  %394 = icmp slt i32 %393, 0, !dbg !7583
  br i1 %394, label %bb92, label %bb93, !dbg !7583

bb92:                                             ; preds = %bb89
  store i8 45, i8* %exp_sign, align 1, !dbg !7584
  %395 = load i32* %exp, align 4, !dbg !7585
  %396 = sub nsw i32 0, %395, !dbg !7585
  store i32 %396, i32* %exp, align 4, !dbg !7585
  br label %bb93, !dbg !7585

bb93:                                             ; preds = %bb92, %bb89
  %397 = load i8** %p, align 8, !dbg !7586
  %398 = getelementptr inbounds i8* %397, i64 -1, !dbg !7586
  store i8* %398, i8** %p, align 8, !dbg !7586
  %399 = load i8** %p, align 8, !dbg !7586
  store i8 0, i8* %399, align 1, !dbg !7586
  store i32 2, i32* %j90, align 4, !dbg !7587
  br label %bb94, !dbg !7587

bb94:                                             ; preds = %bb95, %klee_div_zero_check.exit20, %bb93
  %400 = load i8** %p, align 8, !dbg !7588
  %401 = getelementptr inbounds i8* %400, i64 -1, !dbg !7588
  store i8* %401, i8** %p, align 8, !dbg !7588
  %402 = load i32* %exp, align 4, !dbg !7588
  %int_cast_to_i642 = zext i32 10 to i64
  %403 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %404 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %404, label %bb.i17, label %klee_div_zero_check.exit18

bb.i17:                                           ; preds = %bb94
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit18:                       ; preds = %bb94
  call void @klee_disable_symbex() nounwind
  %405 = srem i32 %402, 10, !dbg !7588
  %406 = trunc i32 %405 to i8, !dbg !7588
  %407 = add i8 %406, 48, !dbg !7588
  %408 = load i8** %p, align 8, !dbg !7588
  store i8 %407, i8* %408, align 1, !dbg !7588
  %409 = load i32* %exp, align 4, !dbg !7589
  %int_cast_to_i643 = zext i32 10 to i64
  %410 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %411 = icmp eq i64 %int_cast_to_i643, 0
  br i1 %411, label %bb.i19, label %klee_div_zero_check.exit20

bb.i19:                                           ; preds = %klee_div_zero_check.exit18
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit20:                       ; preds = %klee_div_zero_check.exit18
  call void @klee_disable_symbex() nounwind
  %412 = sdiv i32 %409, 10, !dbg !7589
  store i32 %412, i32* %exp, align 4, !dbg !7589
  %413 = load i32* %j90, align 4, !dbg !7590
  %414 = add nsw i32 %413, 1, !dbg !7590
  store i32 %414, i32* %j90, align 4, !dbg !7590
  %415 = load i32* %j90, align 4, !dbg !7590
  %416 = icmp sle i32 %415, 3, !dbg !7590
  br i1 %416, label %bb94, label %bb95, !dbg !7590

bb95:                                             ; preds = %klee_div_zero_check.exit20
  %417 = load i32* %exp, align 4, !dbg !7590
  %418 = icmp ne i32 %417, 0, !dbg !7590
  br i1 %418, label %bb94, label %bb96, !dbg !7590

bb96:                                             ; preds = %bb95
  %419 = load i8** %p, align 8, !dbg !7591
  %420 = getelementptr inbounds i8* %419, i64 -1, !dbg !7591
  store i8* %420, i8** %p, align 8, !dbg !7591
  %421 = load i8** %p, align 8, !dbg !7591
  %422 = load i8* %exp_sign, align 1, !dbg !7591
  store i8 %422, i8* %421, align 1, !dbg !7591
  %423 = load i8** %p, align 8, !dbg !7592
  %424 = getelementptr inbounds i8* %423, i64 -1, !dbg !7592
  store i8* %424, i8** %p, align 8, !dbg !7592
  %425 = load i8** %p, align 8, !dbg !7592
  %426 = load i8* %exp_char, align 1, !dbg !7592
  store i8 %426, i8* %425, align 1, !dbg !7592
  %427 = load i64** %ppc, align 8, !dbg !7593
  %428 = getelementptr inbounds i64* %427, i64 0, !dbg !7593
  store i64 112, i64* %428, align 1, !dbg !7593
  %429 = load i32* %j90, align 4, !dbg !7594
  %430 = sext i32 %429 to i64, !dbg !7594
  %431 = load i64** %ppc, align 8, !dbg !7594
  %432 = getelementptr inbounds i64* %431, i64 1, !dbg !7594
  store i64 %430, i64* %432, align 1, !dbg !7594
  %433 = load i8** %p, align 8, !dbg !7595
  %434 = ptrtoint i8* %433 to i64, !dbg !7595
  %435 = load i64** %ppc, align 8, !dbg !7595
  %436 = getelementptr inbounds i64* %435, i64 2, !dbg !7595
  store i64 %434, i64* %436, align 1, !dbg !7595
  %437 = load i64** %ppc, align 8, !dbg !7596
  %438 = getelementptr inbounds i64* %437, i64 3, !dbg !7596
  store i64* %438, i64** %ppc, align 8, !dbg !7596
  br label %EXIT_SPECIAL, !dbg !7597

EXIT_SPECIAL:                                     ; preds = %bb96, %bb88, %bb19
  %439 = load i64** %ppc, align 8, !dbg !7598
  store i64* %439, i64** %ppc_last, align 8, !dbg !7598
  %pc_fwi98 = bitcast [24 x i64]* %pc_fwi to i64*, !dbg !7600
  %440 = getelementptr inbounds i64* %pc_fwi98, i64 4, !dbg !7600
  store i64* %440, i64** %ppc, align 8, !dbg !7600
  br label %bb99, !dbg !7600

bb99:                                             ; preds = %bb99, %EXIT_SPECIAL
  %441 = load i32* %width, align 4, !dbg !7601
  %442 = load i64** %ppc, align 8, !dbg !7601
  %443 = load i64* %442, align 8, !dbg !7601
  %444 = trunc i64 %443 to i32, !dbg !7601
  %445 = sub i32 %441, %444, !dbg !7601
  store i32 %445, i32* %width, align 4, !dbg !7601
  %446 = load i64** %ppc, align 8, !dbg !7602
  %447 = getelementptr inbounds i64* %446, i64 3, !dbg !7602
  store i64* %447, i64** %ppc, align 8, !dbg !7602
  %448 = load i64** %ppc, align 8, !dbg !7603
  %449 = load i64** %ppc_last, align 8, !dbg !7603
  %450 = icmp ult i64* %448, %449, !dbg !7603
  br i1 %450, label %bb99, label %bb100, !dbg !7603

bb100:                                            ; preds = %bb99
  %pc_fwi101 = bitcast [24 x i64]* %pc_fwi to i64*, !dbg !7604
  store i64* %pc_fwi101, i64** %ppc, align 8, !dbg !7604
  %451 = load i64** %ppc, align 8, !dbg !7605
  %452 = getelementptr inbounds i64* %451, i64 0, !dbg !7605
  store i64 160, i64* %452, align 1, !dbg !7605
  %453 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7606
  %454 = load i8* %453, align 1, !dbg !7606
  %455 = icmp ne i8 %454, 0, !dbg !7606
  %456 = zext i1 %455 to i32, !dbg !7606
  store i32 %456, i32* %i97, align 4, !dbg !7606
  %457 = load i32* %i97, align 4, !dbg !7606
  %458 = sext i32 %457 to i64, !dbg !7606
  %459 = load i64** %ppc, align 8, !dbg !7606
  %460 = getelementptr inbounds i64* %459, i64 1, !dbg !7606
  store i64 %458, i64* %460, align 1, !dbg !7606
  %sign_str102 = bitcast [6 x i8]* %sign_str to i8*, !dbg !7607
  %sign_str102103 = ptrtoint i8* %sign_str102 to i64, !dbg !7607
  %461 = load i64** %ppc, align 8, !dbg !7607
  %462 = getelementptr inbounds i64* %461, i64 2, !dbg !7607
  store i64 %sign_str102103, i64* %462, align 1, !dbg !7607
  %463 = load i32* %width, align 4, !dbg !7608
  %464 = load i32* %i97, align 4, !dbg !7608
  %465 = sub nsw i32 %463, %464, !dbg !7608
  store i32 %465, i32* %width, align 4, !dbg !7608
  %466 = load i32* %width, align 4, !dbg !7608
  %467 = icmp sgt i32 %466, 0, !dbg !7608
  br i1 %467, label %bb105, label %bb110, !dbg !7608

bb105:                                            ; preds = %bb100
  %468 = load %struct.printf_info** %info_addr, align 8, !dbg !7609
  %469 = getelementptr inbounds %struct.printf_info* %468, i32 0, i32 3, !dbg !7609
  %470 = load i32* %469, align 4, !dbg !7609
  %int_cast_to_i6413 = zext i32 28 to i64
  %471 = icmp ult i64 %int_cast_to_i6413, 32
  br i1 %471, label %klee_overshift_check.exit39, label %bb.i38

bb.i38:                                           ; preds = %bb105
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit39:                      ; preds = %bb105
  %472 = shl i32 %470, 28, !dbg !7609
  %int_cast_to_i6414 = zext i32 31 to i64
  %473 = icmp ult i64 %int_cast_to_i6414, 32
  br i1 %473, label %klee_overshift_check.exit41, label %bb.i40

bb.i40:                                           ; preds = %klee_overshift_check.exit39
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit41:                      ; preds = %klee_overshift_check.exit39
  %474 = lshr i32 %472, 31, !dbg !7609
  %475 = trunc i32 %474 to i1, !dbg !7609
  %476 = icmp ne i1 %475, false, !dbg !7609
  br i1 %476, label %bb106, label %bb107, !dbg !7609

bb106:                                            ; preds = %klee_overshift_check.exit41
  %477 = load i64** %ppc_last, align 8, !dbg !7610
  %478 = getelementptr inbounds i64* %477, i64 0, !dbg !7610
  store i64 160, i64* %478, align 1, !dbg !7610
  %479 = load i32* %width, align 4, !dbg !7611
  %480 = sext i32 %479 to i64, !dbg !7611
  %481 = load i64** %ppc_last, align 8, !dbg !7611
  %482 = getelementptr inbounds i64* %481, i64 1, !dbg !7611
  store i64 %480, i64* %482, align 1, !dbg !7611
  %483 = load i64** %ppc_last, align 8, !dbg !7612
  %484 = getelementptr inbounds i64* %483, i64 2, !dbg !7612
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 3) to i64), i64* %484, align 1, !dbg !7612
  %485 = load i64** %ppc_last, align 8, !dbg !7613
  %486 = getelementptr inbounds i64* %485, i64 3, !dbg !7613
  store i64* %486, i64** %ppc_last, align 8, !dbg !7613
  br label %bb110, !dbg !7613

bb107:                                            ; preds = %klee_overshift_check.exit41
  %487 = load %struct.printf_info** %info_addr, align 8, !dbg !7614
  %488 = getelementptr inbounds %struct.printf_info* %487, i32 0, i32 4, !dbg !7614
  %489 = load i32* %488, align 4, !dbg !7614
  %490 = icmp eq i32 %489, 48, !dbg !7614
  %491 = load i64** %ppc, align 8, !dbg !7615
  br i1 %490, label %bb108, label %bb109, !dbg !7614

bb108:                                            ; preds = %bb107
  %492 = getelementptr inbounds i64* %491, i64 4, !dbg !7615
  %493 = load i64* %492, align 1, !dbg !7615
  %494 = load i32* %width, align 4, !dbg !7615
  %495 = sext i32 %494 to i64, !dbg !7615
  %496 = add nsw i64 %493, %495, !dbg !7615
  %497 = load i64** %ppc, align 8, !dbg !7615
  %498 = getelementptr inbounds i64* %497, i64 4, !dbg !7615
  store i64 %496, i64* %498, align 1, !dbg !7615
  br label %bb110, !dbg !7615

bb109:                                            ; preds = %bb107
  %499 = getelementptr inbounds i64* %491, i64 1, !dbg !7616
  %500 = load i64* %499, align 1, !dbg !7616
  %501 = load i32* %width, align 4, !dbg !7616
  %502 = sext i32 %501 to i64, !dbg !7616
  %503 = add nsw i64 %500, %502, !dbg !7616
  %504 = load i64** %ppc, align 8, !dbg !7616
  %505 = getelementptr inbounds i64* %504, i64 1, !dbg !7616
  store i64 %503, i64* %505, align 1, !dbg !7616
  br label %bb110, !dbg !7616

bb110:                                            ; preds = %bb109, %bb108, %bb106, %bb100
  store i32 0, i32* %cnt, align 4, !dbg !7617
  br label %bb111, !dbg !7617

bb111:                                            ; preds = %bb113, %bb110
  %506 = load i64** %ppc, align 8, !dbg !7618
  %507 = getelementptr inbounds i64* %506, i64 2, !dbg !7618
  %508 = load i64* %507, align 1, !dbg !7618
  %509 = load i64** %ppc, align 8, !dbg !7618
  %510 = getelementptr inbounds i64* %509, i64 1, !dbg !7618
  %511 = load i64* %510, align 1, !dbg !7618
  %512 = load i64** %ppc, align 8, !dbg !7618
  %513 = load i64* %512, align 8, !dbg !7618
  %514 = load i64 (%4*, i64, i64, i64)** %fp_outfunc_addr, align 8, !dbg !7618
  %515 = load %4** %fp_addr, align 8, !dbg !7618
  %516 = call i64 %514(%4* %515, i64 %513, i64 %511, i64 %508) nounwind, !dbg !7618
  %517 = load i64** %ppc, align 8, !dbg !7618
  %518 = getelementptr inbounds i64* %517, i64 1, !dbg !7618
  %519 = load i64* %518, align 1, !dbg !7618
  %520 = icmp ne i64 %516, %519, !dbg !7618
  br i1 %520, label %bb112, label %bb113, !dbg !7618

bb112:                                            ; preds = %bb111
  store i64 -1, i64* %0, align 8, !dbg !7619
  br label %bb115, !dbg !7619

bb113:                                            ; preds = %bb111
  %521 = load i64** %ppc, align 8, !dbg !7620
  %522 = getelementptr inbounds i64* %521, i64 1, !dbg !7620
  %523 = load i64* %522, align 1, !dbg !7620
  %524 = trunc i64 %523 to i32, !dbg !7620
  %525 = load i32* %cnt, align 4, !dbg !7620
  %526 = add i32 %524, %525, !dbg !7620
  store i32 %526, i32* %cnt, align 4, !dbg !7620
  %527 = load i64** %ppc, align 8, !dbg !7621
  %528 = getelementptr inbounds i64* %527, i64 3, !dbg !7621
  store i64* %528, i64** %ppc, align 8, !dbg !7621
  %529 = load i64** %ppc, align 8, !dbg !7622
  %530 = load i64** %ppc_last, align 8, !dbg !7622
  %531 = icmp ult i64* %529, %530, !dbg !7622
  br i1 %531, label %bb111, label %bb114, !dbg !7622

bb114:                                            ; preds = %bb113
  %532 = load i32* %cnt, align 4, !dbg !7623
  %533 = sext i32 %532 to i64, !dbg !7623
  store i64 %533, i64* %0, align 8, !dbg !7623
  br label %bb115, !dbg !7623

bb115:                                            ; preds = %bb114, %bb112
  %534 = load i64* %0, align 8, !dbg !7619
  store i64 %534, i64* %retval, align 8, !dbg !7619
  %retval116 = load i64* %retval, !dbg !7619
  ret i64 %retval116, !dbg !7619
}

define hidden i64 @_load_inttype(i32 %desttype, i8* %src, i32 %uflag) nounwind {
entry:
  %desttype_addr = alloca i32, align 4
  %src_addr = alloca i8*, align 8
  %uflag_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %x = alloca i32
  %x14 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %desttype, i32* %desttype_addr
  store i8* %src, i8** %src_addr
  store i32 %uflag, i32* %uflag_addr
  %1 = load i32* %uflag_addr, align 4, !dbg !7624
  %2 = icmp sge i32 %1, 0, !dbg !7624
  %3 = load i32* %desttype_addr, align 4, !dbg !7626
  %4 = and i32 %3, 3072, !dbg !7626
  %5 = icmp ne i32 %4, 0, !dbg !7626
  %6 = load i8** %src_addr, align 8, !dbg !7627
  br i1 %2, label %bb, label %bb9, !dbg !7624

bb:                                               ; preds = %entry
  br i1 %5, label %bb1, label %bb4, !dbg !7626

bb1:                                              ; preds = %bb
  %7 = bitcast i8* %6 to i64*, !dbg !7627
  %8 = load i64* %7, align 8, !dbg !7627
  store i64 %8, i64* %0, align 8, !dbg !7627
  br label %bb19, !dbg !7627

bb4:                                              ; preds = %bb
  %9 = bitcast i8* %6 to i32*, !dbg !7628
  %10 = load i32* %9, align 4, !dbg !7628
  store i32 %10, i32* %x, align 4, !dbg !7628
  %11 = load i32* %desttype_addr, align 4, !dbg !7630
  %12 = icmp eq i32 %11, 256, !dbg !7630
  br i1 %12, label %bb5, label %bb6, !dbg !7630

bb5:                                              ; preds = %bb4
  %13 = load i32* %x, align 4, !dbg !7630
  %14 = trunc i32 %13 to i8, !dbg !7630
  %15 = zext i8 %14 to i32, !dbg !7630
  store i32 %15, i32* %x, align 4, !dbg !7630
  br label %bb6, !dbg !7630

bb6:                                              ; preds = %bb5, %bb4
  %16 = load i32* %desttype_addr, align 4, !dbg !7631
  %17 = icmp eq i32 %16, 512, !dbg !7631
  br i1 %17, label %bb7, label %bb8, !dbg !7631

bb7:                                              ; preds = %bb6
  %18 = load i32* %x, align 4, !dbg !7631
  %19 = trunc i32 %18 to i16, !dbg !7631
  %20 = zext i16 %19 to i32, !dbg !7631
  store i32 %20, i32* %x, align 4, !dbg !7631
  br label %bb8, !dbg !7631

bb8:                                              ; preds = %bb7, %bb6
  %21 = load i32* %x, align 4, !dbg !7632
  %22 = zext i32 %21 to i64, !dbg !7632
  store i64 %22, i64* %0, align 8, !dbg !7632
  br label %bb19, !dbg !7632

bb9:                                              ; preds = %entry
  br i1 %5, label %bb10, label %bb13, !dbg !7633

bb10:                                             ; preds = %bb9
  %23 = bitcast i8* %6 to i64*, !dbg !7634
  %24 = load i64* %23, align 8, !dbg !7634
  store i64 %24, i64* %0, align 8, !dbg !7634
  br label %bb19, !dbg !7634

bb13:                                             ; preds = %bb9
  %25 = bitcast i8* %6 to i32*, !dbg !7635
  %26 = load i32* %25, align 4, !dbg !7635
  store i32 %26, i32* %x14, align 4, !dbg !7635
  %27 = load i32* %desttype_addr, align 4, !dbg !7637
  %28 = icmp eq i32 %27, 256, !dbg !7637
  br i1 %28, label %bb15, label %bb16, !dbg !7637

bb15:                                             ; preds = %bb13
  %29 = load i32* %x14, align 4, !dbg !7637
  %30 = trunc i32 %29 to i8, !dbg !7637
  %31 = sext i8 %30 to i32, !dbg !7637
  store i32 %31, i32* %x14, align 4, !dbg !7637
  br label %bb16, !dbg !7637

bb16:                                             ; preds = %bb15, %bb13
  %32 = load i32* %desttype_addr, align 4, !dbg !7638
  %33 = icmp eq i32 %32, 512, !dbg !7638
  br i1 %33, label %bb17, label %bb18, !dbg !7638

bb17:                                             ; preds = %bb16
  %34 = load i32* %x14, align 4, !dbg !7638
  %35 = trunc i32 %34 to i16, !dbg !7638
  %36 = sext i16 %35 to i32, !dbg !7638
  store i32 %36, i32* %x14, align 4, !dbg !7638
  br label %bb18, !dbg !7638

bb18:                                             ; preds = %bb17, %bb16
  %37 = load i32* %x14, align 4, !dbg !7639
  %38 = sext i32 %37 to i64, !dbg !7639
  store i64 %38, i64* %0, align 8, !dbg !7639
  br label %bb19, !dbg !7639

bb19:                                             ; preds = %bb10, %bb1, %bb18, %bb8
  %39 = load i64* %0, align 8, !dbg !7627
  store i64 %39, i64* %retval, align 8, !dbg !7627
  %retval20 = load i64* %retval, !dbg !7627
  ret i64 %retval20, !dbg !7627
}

define hidden i32 @_ppfs_init(%struct.ppfs_t* %ppfs, i8* %fmt0) nounwind {
entry:
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %fmt0_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i32
  %p = alloca i32*
  %fmt = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  store i8* %fmt0, i8** %fmt0_addr
  %1 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7640
  %2 = bitcast %struct.ppfs_t* %1 to i8*, !dbg !7640
  %3 = call i8* @memset(i8* %2, i32 0, i64 256) nounwind, !dbg !7640
  %4 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7642
  %5 = getelementptr inbounds %struct.ppfs_t* %4, i32 0, i32 2, !dbg !7642
  %6 = load i32* %5, align 4, !dbg !7642
  %7 = sub nsw i32 %6, 1, !dbg !7642
  %8 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7642
  %9 = getelementptr inbounds %struct.ppfs_t* %8, i32 0, i32 2, !dbg !7642
  store i32 %7, i32* %9, align 4, !dbg !7642
  %10 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7643
  %11 = getelementptr inbounds %struct.ppfs_t* %10, i32 0, i32 0, !dbg !7643
  %12 = load i8** %fmt0_addr, align 8, !dbg !7643
  store i8* %12, i8** %11, align 16, !dbg !7643
  %13 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7644
  %14 = getelementptr inbounds %struct.ppfs_t* %13, i32 0, i32 6, !dbg !7644
  %15 = getelementptr inbounds [9 x i32]* %14, i64 0, i64 0, !dbg !7644
  store i32* %15, i32** %p, align 8, !dbg !7644
  store i32 9, i32* %r, align 4, !dbg !7646
  br label %bb, !dbg !7646

bb:                                               ; preds = %bb, %entry
  %16 = load i32** %p, align 8, !dbg !7647
  store i32 8, i32* %16, align 4, !dbg !7647
  %17 = load i32** %p, align 8, !dbg !7647
  %18 = getelementptr inbounds i32* %17, i64 1, !dbg !7647
  store i32* %18, i32** %p, align 8, !dbg !7647
  %19 = load i32* %r, align 4, !dbg !7648
  %20 = sub nsw i32 %19, 1, !dbg !7648
  store i32 %20, i32* %r, align 4, !dbg !7648
  %21 = load i32* %r, align 4, !dbg !7648
  %22 = icmp ne i32 %21, 0, !dbg !7648
  br i1 %22, label %bb, label %bb1, !dbg !7648

bb1:                                              ; preds = %bb
  %23 = load i8** %fmt0_addr, align 8, !dbg !7649
  store i8* %23, i8** %fmt, align 8, !dbg !7649
  br label %bb8, !dbg !7649

bb2:                                              ; preds = %bb8
  %24 = load i8** %fmt, align 8, !dbg !7651
  %25 = load i8* %24, align 1, !dbg !7651
  %26 = icmp ne i8 %25, 37, !dbg !7651
  br i1 %26, label %bb7, label %bb3, !dbg !7651

bb3:                                              ; preds = %bb2
  %27 = load i8** %fmt, align 8, !dbg !7651
  %28 = getelementptr inbounds i8* %27, i64 1, !dbg !7651
  store i8* %28, i8** %fmt, align 8, !dbg !7651
  %29 = load i8** %fmt, align 8, !dbg !7651
  %30 = load i8* %29, align 1, !dbg !7651
  %31 = icmp eq i8 %30, 37, !dbg !7651
  br i1 %31, label %bb7, label %bb4, !dbg !7651

bb4:                                              ; preds = %bb3
  %32 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7652
  %33 = getelementptr inbounds %struct.ppfs_t* %32, i32 0, i32 0, !dbg !7652
  %34 = load i8** %fmt, align 8, !dbg !7652
  store i8* %34, i8** %33, align 16, !dbg !7652
  %35 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7653
  %36 = call i32 @_ppfs_parsespec(%struct.ppfs_t* %35) nounwind, !dbg !7653
  store i32 %36, i32* %r, align 4, !dbg !7653
  %37 = load i32* %r, align 4, !dbg !7653
  %38 = icmp slt i32 %37, 0, !dbg !7653
  br i1 %38, label %bb5, label %bb6, !dbg !7653

bb5:                                              ; preds = %bb4
  store i32 -1, i32* %0, align 4, !dbg !7654
  br label %bb10, !dbg !7654

bb6:                                              ; preds = %bb4
  %39 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7655
  %40 = getelementptr inbounds %struct.ppfs_t* %39, i32 0, i32 0, !dbg !7655
  %41 = load i8** %40, align 16, !dbg !7655
  store i8* %41, i8** %fmt, align 8, !dbg !7655
  br label %bb8, !dbg !7655

bb7:                                              ; preds = %bb3, %bb2
  %42 = load i8** %fmt, align 8, !dbg !7656
  %43 = getelementptr inbounds i8* %42, i64 1, !dbg !7656
  store i8* %43, i8** %fmt, align 8, !dbg !7656
  br label %bb8, !dbg !7656

bb8:                                              ; preds = %bb7, %bb6, %bb1
  %44 = load i8** %fmt, align 8, !dbg !7657
  %45 = load i8* %44, align 1, !dbg !7657
  %46 = icmp ne i8 %45, 0, !dbg !7657
  br i1 %46, label %bb2, label %bb9, !dbg !7657

bb9:                                              ; preds = %bb8
  %47 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7658
  %48 = getelementptr inbounds %struct.ppfs_t* %47, i32 0, i32 0, !dbg !7658
  %49 = load i8** %fmt0_addr, align 8, !dbg !7658
  store i8* %49, i8** %48, align 16, !dbg !7658
  store i32 0, i32* %0, align 4, !dbg !7659
  br label %bb10, !dbg !7659

bb10:                                             ; preds = %bb9, %bb5
  %50 = load i32* %0, align 4, !dbg !7654
  store i32 %50, i32* %retval, align 4, !dbg !7654
  %retval11 = load i32* %retval, !dbg !7654
  ret i32 %retval11, !dbg !7654
}

define internal i32 @_promoted_size(i32 %argtype) nounwind {
entry:
  %argtype_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %p = alloca i16*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argtype, i32* %argtype_addr
  store i16* getelementptr inbounds ([12 x i16]* @type_codes, i64 1, i64 0), i16** %p, align 8, !dbg !7660
  br label %bb, !dbg !7660

bb:                                               ; preds = %bb1, %entry
  %1 = load i16** %p, align 8, !dbg !7662
  %2 = getelementptr inbounds i16* %1, i64 -1, !dbg !7662
  store i16* %2, i16** %p, align 8, !dbg !7662
  %3 = load i16** %p, align 8, !dbg !7662
  %4 = load i16* %3, align 2, !dbg !7662
  %5 = sext i16 %4 to i32, !dbg !7662
  %6 = load i32* %argtype_addr, align 4, !dbg !7662
  %7 = icmp eq i32 %5, %6, !dbg !7662
  br i1 %7, label %bb2, label %bb1, !dbg !7662

bb1:                                              ; preds = %bb
  %8 = load i16** %p, align 8, !dbg !7663
  %9 = icmp ugt i16* %8, getelementptr inbounds ([12 x i16]* @type_codes, i64 0, i64 0), !dbg !7663
  br i1 %9, label %bb, label %bb2, !dbg !7663

bb2:                                              ; preds = %bb1, %bb
  %10 = load i16** %p, align 8, !dbg !7664
  %11 = ptrtoint i16* %10 to i64, !dbg !7664
  %12 = sub nsw i64 %11, ptrtoint ([12 x i16]* @type_codes to i64), !dbg !7664
  %int_cast_to_i64 = bitcast i64 2 to i64
  %13 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %14 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %14, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %15 = sdiv exact i64 %12, 2, !dbg !7664
  %16 = trunc i64 %15 to i32, !dbg !7664
  %17 = sext i32 %16 to i64, !dbg !7664
  %18 = getelementptr inbounds [12 x i8]* @type_sizes, i64 0, i64 %17, !dbg !7664
  %19 = load i8* %18, align 1, !dbg !7664
  %20 = zext i8 %19 to i32, !dbg !7664
  store i32 %20, i32* %0, align 4, !dbg !7664
  %21 = load i32* %0, align 4, !dbg !7664
  store i32 %21, i32* %retval, align 4, !dbg !7664
  %retval3 = load i32* %retval, !dbg !7664
  ret i32 %retval3, !dbg !7664
}

define internal i32 @_is_equal_or_bigger_arg(i32 %curtype, i32 %newtype) nounwind {
entry:
  %curtype_addr = alloca i32, align 4
  %newtype_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %curtype, i32* %curtype_addr
  store i32 %newtype, i32* %newtype_addr
  %1 = load i32* %newtype_addr, align 4, !dbg !7665
  %2 = icmp eq i32 %1, 8, !dbg !7665
  br i1 %2, label %bb, label %bb1, !dbg !7665

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4, !dbg !7667
  br label %bb5, !dbg !7667

bb1:                                              ; preds = %entry
  %3 = load i32* %curtype_addr, align 4, !dbg !7668
  %4 = icmp eq i32 %3, 8, !dbg !7668
  br i1 %4, label %bb3, label %bb2, !dbg !7668

bb2:                                              ; preds = %bb1
  %5 = load i32* %curtype_addr, align 4, !dbg !7668
  %6 = load i32* %newtype_addr, align 4, !dbg !7668
  %7 = icmp eq i32 %5, %6, !dbg !7668
  br i1 %7, label %bb3, label %bb4, !dbg !7668

bb3:                                              ; preds = %bb2, %bb1
  store i32 1, i32* %0, align 4, !dbg !7669
  br label %bb5, !dbg !7669

bb4:                                              ; preds = %bb2
  %8 = load i32* %curtype_addr, align 4, !dbg !7670
  %9 = call i32 @_promoted_size(i32 %8) nounwind, !dbg !7670
  %10 = load i32* %newtype_addr, align 4, !dbg !7670
  %11 = call i32 @_promoted_size(i32 %10) nounwind, !dbg !7670
  %12 = icmp sle i32 %9, %11, !dbg !7670
  %13 = zext i1 %12 to i32, !dbg !7670
  store i32 %13, i32* %0, align 4, !dbg !7670
  br label %bb5, !dbg !7670

bb5:                                              ; preds = %bb4, %bb3, %bb
  %14 = load i32* %0, align 4, !dbg !7667
  store i32 %14, i32* %retval, align 4, !dbg !7667
  %retval6 = load i32* %retval, !dbg !7667
  ret i32 %retval6, !dbg !7667
}

define hidden i32 @_ppfs_parsespec(%struct.ppfs_t* %ppfs) nounwind {
entry:
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %retval = alloca i32
  %iftmp.15 = alloca i32
  %iftmp.14 = alloca i32
  %0 = alloca i32
  %fmt = alloca i8*
  %p = alloca i8*
  %preci = alloca i32
  %width = alloca i32
  %flags = alloca i32
  %dataargtype = alloca i32
  %i = alloca i32
  %dpoint = alloca i32
  %maxposarg = alloca i32
  %p_m_spec_chars = alloca i32
  %n = alloca i32
  %argtype = alloca [3 x i32]
  %argnumber = alloca [3 x i32]
  %buf = alloca [32 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  store i32 -1, i32* %preci, align 4, !dbg !7671
  %1 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 0, !dbg !7673
  store i32 0, i32* %1, align 4, !dbg !7673
  %2 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 1, !dbg !7674
  store i32 0, i32* %2, align 4, !dbg !7674
  %3 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 0, !dbg !7675
  store i32 8, i32* %3, align 4, !dbg !7675
  %4 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 1, !dbg !7676
  store i32 8, i32* %4, align 4, !dbg !7676
  %5 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7677
  %6 = getelementptr inbounds %struct.ppfs_t* %5, i32 0, i32 2, !dbg !7677
  %7 = load i32* %6, align 4, !dbg !7677
  store i32 %7, i32* %maxposarg, align 4, !dbg !7677
  store i32 0, i32* %dpoint, align 4, !dbg !7678
  %8 = load i32* %dpoint, align 4, !dbg !7678
  store i32 %8, i32* %width, align 4, !dbg !7678
  %9 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7679
  %10 = getelementptr inbounds %struct.ppfs_t* %9, i32 0, i32 1, !dbg !7679
  %11 = getelementptr inbounds %struct.printf_info* %10, i32 0, i32 3, !dbg !7679
  %12 = load i32* %11, align 4, !dbg !7679
  %13 = and i32 %12, 128, !dbg !7679
  store i32 %13, i32* %flags, align 4, !dbg !7679
  %14 = load i32* %flags, align 4, !dbg !7679
  %15 = icmp eq i32 %14, 0, !dbg !7679
  br i1 %15, label %bb, label %bb1, !dbg !7679

bb:                                               ; preds = %entry
  %16 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7680
  %17 = getelementptr inbounds %struct.ppfs_t* %16, i32 0, i32 0, !dbg !7680
  %18 = load i8** %17, align 16, !dbg !7680
  store i8* %18, i8** %fmt, align 8, !dbg !7680
  br label %width_precision, !dbg !7680

bb1:                                              ; preds = %entry
  %buf2 = bitcast [32 x i8]* %buf to i8*, !dbg !7681
  %19 = getelementptr inbounds i8* %buf2, i64 1, !dbg !7681
  store i8* %19, i8** %fmt, align 8, !dbg !7681
  store i32 0, i32* %i, align 4, !dbg !7682
  br label %bb3, !dbg !7682

bb3:                                              ; preds = %bb5, %bb1
  %20 = load i32* %i, align 4, !dbg !7683
  %21 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7683
  %22 = getelementptr inbounds %struct.ppfs_t* %21, i32 0, i32 0, !dbg !7683
  %23 = load i8** %22, align 16, !dbg !7683
  %24 = bitcast i8* %23 to i32*, !dbg !7683
  %25 = load i32* %i, align 4, !dbg !7683
  %26 = sub nsw i32 %25, 1, !dbg !7683
  %27 = sext i32 %26 to i64, !dbg !7683
  %28 = getelementptr inbounds i32* %24, i64 %27, !dbg !7683
  %29 = load i32* %28, align 1, !dbg !7683
  %30 = trunc i32 %29 to i8, !dbg !7683
  %31 = sext i32 %20 to i64, !dbg !7683
  %32 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 %31, !dbg !7683
  store i8 %30, i8* %32, align 1, !dbg !7683
  %33 = sext i32 %20 to i64, !dbg !7683
  %34 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 %33, !dbg !7683
  %35 = load i8* %34, align 1, !dbg !7683
  %36 = sext i8 %35 to i32, !dbg !7683
  %37 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7683
  %38 = getelementptr inbounds %struct.ppfs_t* %37, i32 0, i32 0, !dbg !7683
  %39 = load i8** %38, align 16, !dbg !7683
  %40 = bitcast i8* %39 to i32*, !dbg !7683
  %41 = load i32* %i, align 4, !dbg !7683
  %42 = sub nsw i32 %41, 1, !dbg !7683
  %43 = sext i32 %42 to i64, !dbg !7683
  %44 = getelementptr inbounds i32* %40, i64 %43, !dbg !7683
  %45 = load i32* %44, align 1, !dbg !7683
  %46 = icmp ne i32 %36, %45, !dbg !7683
  br i1 %46, label %bb4, label %bb5, !dbg !7683

bb4:                                              ; preds = %bb3
  store i32 -1, i32* %0, align 4, !dbg !7684
  br label %bb90, !dbg !7684

bb5:                                              ; preds = %bb3
  %47 = load i32* %i, align 4, !dbg !7685
  %48 = sext i32 %47 to i64, !dbg !7685
  %49 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 %48, !dbg !7685
  %50 = load i8* %49, align 1, !dbg !7685
  %51 = icmp ne i8 %50, 0, !dbg !7685
  %52 = zext i1 %51 to i8, !dbg !7685
  %53 = load i32* %i, align 4, !dbg !7685
  %54 = add nsw i32 %53, 1, !dbg !7685
  store i32 %54, i32* %i, align 4, !dbg !7685
  %toBool = icmp ne i8 %52, 0, !dbg !7685
  br i1 %toBool, label %bb3, label %bb6, !dbg !7685

bb6:                                              ; preds = %bb5
  %55 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 31, !dbg !7686
  store i8 0, i8* %55, align 1, !dbg !7686
  br label %width_precision, !dbg !7687

width_precision:                                  ; preds = %bb43, %klee_overshift_check.exit, %bb6, %bb
  %56 = load i8** %fmt, align 8, !dbg !7688
  store i8* %56, i8** %p, align 8, !dbg !7688
  %57 = load i8** %fmt, align 8, !dbg !7689
  %58 = load i8* %57, align 1, !dbg !7689
  %59 = icmp eq i8 %58, 42, !dbg !7689
  br i1 %59, label %bb7, label %bb8, !dbg !7689

bb7:                                              ; preds = %width_precision
  %60 = load i32* %dpoint, align 4, !dbg !7690
  %61 = sub nsw i32 0, %60, !dbg !7690
  %62 = sext i32 %61 to i64, !dbg !7690
  %63 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 %62, !dbg !7690
  store i32 0, i32* %63, align 4, !dbg !7690
  %64 = load i8** %fmt, align 8, !dbg !7691
  %65 = getelementptr inbounds i8* %64, i64 1, !dbg !7691
  store i8* %65, i8** %fmt, align 8, !dbg !7691
  br label %bb8, !dbg !7691

bb8:                                              ; preds = %bb7, %width_precision
  store i32 0, i32* %i, align 4, !dbg !7692
  br label %bb12, !dbg !7692

bb9:                                              ; preds = %bb12
  %66 = load i32* %i, align 4, !dbg !7693
  %67 = icmp sle i32 %66, 4094, !dbg !7693
  br i1 %67, label %bb10, label %bb11, !dbg !7693

bb10:                                             ; preds = %bb9
  %68 = load i32* %i, align 4, !dbg !7694
  %69 = mul nsw i32 %68, 10, !dbg !7694
  %70 = load i8** %fmt, align 8, !dbg !7694
  %71 = load i8* %70, align 1, !dbg !7694
  %72 = sext i8 %71 to i32, !dbg !7694
  %73 = sub nsw i32 %72, 48, !dbg !7694
  %74 = add nsw i32 %69, %73, !dbg !7694
  store i32 %74, i32* %i, align 4, !dbg !7694
  br label %bb11, !dbg !7694

bb11:                                             ; preds = %bb10, %bb9
  %75 = load i8** %fmt, align 8, !dbg !7695
  %76 = getelementptr inbounds i8* %75, i64 1, !dbg !7695
  store i8* %76, i8** %fmt, align 8, !dbg !7695
  br label %bb12, !dbg !7695

bb12:                                             ; preds = %bb11, %bb8
  %77 = load i16** @__ctype_b, align 8, !dbg !7696
  %78 = load i8** %fmt, align 8, !dbg !7696
  %79 = load i8* %78, align 1, !dbg !7696
  %80 = sext i8 %79 to i32, !dbg !7696
  %81 = sext i32 %80 to i64, !dbg !7696
  %82 = getelementptr inbounds i16* %77, i64 %81, !dbg !7696
  %83 = load i16* %82, align 1, !dbg !7696
  %84 = zext i16 %83 to i32, !dbg !7696
  %85 = and i32 %84, 2048, !dbg !7696
  %86 = icmp ne i32 %85, 0, !dbg !7696
  br i1 %86, label %bb9, label %bb13, !dbg !7696

bb13:                                             ; preds = %bb12
  %87 = load i8** %p, align 8, !dbg !7697
  %88 = getelementptr inbounds i8* %87, i64 -1, !dbg !7697
  %89 = load i8* %88, align 1, !dbg !7697
  %90 = icmp eq i8 %89, 37, !dbg !7697
  br i1 %90, label %bb14, label %PREC_WIDTH, !dbg !7697

bb14:                                             ; preds = %bb13
  %91 = load i8** %fmt, align 8, !dbg !7698
  %92 = load i8* %91, align 1, !dbg !7698
  %93 = icmp ne i8 %92, 36, !dbg !7698
  br i1 %93, label %bb21, label %bb15, !dbg !7698

bb15:                                             ; preds = %bb14
  %94 = load i32* %i, align 4, !dbg !7698
  %95 = icmp sle i32 %94, 0, !dbg !7698
  br i1 %95, label %bb21, label %bb16, !dbg !7698

bb16:                                             ; preds = %bb15
  %96 = load i8** %fmt, align 8, !dbg !7699
  %97 = getelementptr inbounds i8* %96, i64 1, !dbg !7699
  store i8* %97, i8** %fmt, align 8, !dbg !7699
  %98 = load i32* %maxposarg, align 4, !dbg !7700
  %99 = icmp eq i32 %98, 0, !dbg !7700
  br i1 %99, label %bb17, label %bb18, !dbg !7700

bb17:                                             ; preds = %bb16
  store i32 -1, i32* %0, align 4, !dbg !7701
  br label %bb90, !dbg !7701

bb18:                                             ; preds = %bb16
  %100 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 2, !dbg !7702
  %101 = load i32* %i, align 4, !dbg !7702
  store i32 %101, i32* %100, align 4, !dbg !7702
  %102 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 2, !dbg !7702
  %103 = load i32* %102, align 4, !dbg !7702
  %104 = load i32* %maxposarg, align 4, !dbg !7702
  %105 = icmp sgt i32 %103, %104, !dbg !7702
  br i1 %105, label %bb19, label %restart_flags, !dbg !7702

bb19:                                             ; preds = %bb18
  %106 = load i32* %i, align 4, !dbg !7703
  store i32 %106, i32* %maxposarg, align 4, !dbg !7703
  br label %restart_flags, !dbg !7703

bb21:                                             ; preds = %bb15, %bb14
  %107 = load i32* %maxposarg, align 4, !dbg !7704
  %108 = icmp sgt i32 %107, 0, !dbg !7704
  br i1 %108, label %bb22, label %bb23, !dbg !7704

bb22:                                             ; preds = %bb21
  store i32 -1, i32* %0, align 4, !dbg !7705
  br label %bb90, !dbg !7705

bb23:                                             ; preds = %bb21
  store i32 0, i32* %maxposarg, align 4, !dbg !7706
  %109 = load i8** %fmt, align 8, !dbg !7707
  %110 = load i8** %p, align 8, !dbg !7707
  %111 = icmp ugt i8* %109, %110, !dbg !7707
  br i1 %111, label %bb24, label %bb25, !dbg !7707

bb24:                                             ; preds = %bb23
  %112 = load i8** %p, align 8, !dbg !7707
  %113 = load i8* %112, align 1, !dbg !7707
  %114 = icmp ne i8 %113, 48, !dbg !7707
  br i1 %114, label %PREC_WIDTH, label %bb25, !dbg !7707

bb25:                                             ; preds = %bb24, %bb23
  %115 = load i8** %p, align 8, !dbg !7708
  store i8* %115, i8** %fmt, align 8, !dbg !7708
  br label %restart_flags, !dbg !7709

restart_flags:                                    ; preds = %bb18, %bb19, %bb28, %bb25
  store i32 1, i32* %i, align 4, !dbg !7710
  store i8* getelementptr inbounds ([8 x i8]* @spec_flags.3665, i64 0, i64 0), i8** %p, align 8, !dbg !7711
  br label %bb26, !dbg !7711

bb26:                                             ; preds = %bb29, %restart_flags
  %116 = load i8** %fmt, align 8, !dbg !7712
  %117 = load i8* %116, align 1, !dbg !7712
  %118 = load i8** %p, align 8, !dbg !7712
  %119 = load i8* %118, align 1, !dbg !7712
  %120 = icmp eq i8 %117, %119, !dbg !7712
  %121 = zext i1 %120 to i8, !dbg !7712
  %122 = load i8** %p, align 8, !dbg !7712
  %123 = getelementptr inbounds i8* %122, i64 1, !dbg !7712
  store i8* %123, i8** %p, align 8, !dbg !7712
  %toBool27 = icmp ne i8 %121, 0, !dbg !7712
  br i1 %toBool27, label %bb28, label %bb29, !dbg !7712

bb28:                                             ; preds = %bb26
  %124 = load i8** %fmt, align 8, !dbg !7713
  %125 = getelementptr inbounds i8* %124, i64 1, !dbg !7713
  store i8* %125, i8** %fmt, align 8, !dbg !7713
  %126 = load i32* %flags, align 4, !dbg !7714
  %127 = load i32* %i, align 4, !dbg !7714
  %128 = or i32 %126, %127, !dbg !7714
  store i32 %128, i32* %flags, align 4, !dbg !7714
  br label %restart_flags, !dbg !7714

bb29:                                             ; preds = %bb26
  %129 = load i32* %i, align 4, !dbg !7715
  %130 = load i32* %i, align 4, !dbg !7715
  %131 = add nsw i32 %129, %130, !dbg !7715
  store i32 %131, i32* %i, align 4, !dbg !7715
  %132 = load i8** %p, align 8, !dbg !7716
  %133 = load i8* %132, align 1, !dbg !7716
  %134 = icmp ne i8 %133, 0, !dbg !7716
  br i1 %134, label %bb26, label %bb30, !dbg !7716

bb30:                                             ; preds = %bb29
  store i32 0, i32* %i, align 4, !dbg !7717
  %135 = load i32* %flags, align 4, !dbg !7718
  %136 = and i32 %135, 10, !dbg !7718
  %int_cast_to_i64 = zext i32 1 to i64
  %137 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %137, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb30
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb30
  %138 = ashr i32 %136, 1, !dbg !7718
  %not = xor i32 %138, -1, !dbg !7718
  %139 = load i32* %flags, align 4, !dbg !7718
  %140 = and i32 %not, %139, !dbg !7718
  store i32 %140, i32* %flags, align 4, !dbg !7718
  %141 = load i8** %fmt, align 8, !dbg !7719
  %142 = getelementptr inbounds i8* %141, i64 -1, !dbg !7719
  %143 = load i8* %142, align 1, !dbg !7719
  %144 = icmp ne i8 %143, 37, !dbg !7719
  br i1 %144, label %width_precision, label %PREC_WIDTH, !dbg !7719

PREC_WIDTH:                                       ; preds = %klee_overshift_check.exit, %bb24, %bb13
  %145 = load i8** %p, align 8, !dbg !7720
  %146 = load i8* %145, align 1, !dbg !7720
  %147 = icmp eq i8 %146, 42, !dbg !7720
  br i1 %147, label %bb32, label %bb41, !dbg !7720

bb32:                                             ; preds = %PREC_WIDTH
  %148 = load i32* %maxposarg, align 4, !dbg !7721
  %149 = icmp ne i32 %148, 0, !dbg !7721
  br i1 %149, label %bb33, label %bb38, !dbg !7721

bb33:                                             ; preds = %bb32
  %150 = load i8** %fmt, align 8, !dbg !7722
  %151 = load i8* %150, align 1, !dbg !7722
  %152 = icmp ne i8 %151, 36, !dbg !7722
  %153 = zext i1 %152 to i8, !dbg !7722
  %154 = load i8** %fmt, align 8, !dbg !7722
  %155 = getelementptr inbounds i8* %154, i64 1, !dbg !7722
  store i8* %155, i8** %fmt, align 8, !dbg !7722
  %toBool34 = icmp ne i8 %153, 0, !dbg !7722
  br i1 %toBool34, label %bb36, label %bb35, !dbg !7722

bb35:                                             ; preds = %bb33
  %156 = load i32* %i, align 4, !dbg !7722
  %157 = icmp sle i32 %156, 0, !dbg !7722
  br i1 %157, label %bb36, label %bb37, !dbg !7722

bb36:                                             ; preds = %bb35, %bb33
  store i32 -1, i32* %0, align 4, !dbg !7723
  br label %bb90, !dbg !7723

bb37:                                             ; preds = %bb35
  %158 = load i32* %dpoint, align 4, !dbg !7724
  %159 = sub nsw i32 0, %158, !dbg !7724
  %160 = sext i32 %159 to i64, !dbg !7724
  %161 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 %160, !dbg !7724
  %162 = load i32* %i, align 4, !dbg !7724
  store i32 %162, i32* %161, align 4, !dbg !7724
  br label %bb40, !dbg !7724

bb38:                                             ; preds = %bb32
  %163 = load i8** %p, align 8, !dbg !7725
  %164 = getelementptr inbounds i8* %163, i64 1, !dbg !7725
  store i8* %164, i8** %p, align 8, !dbg !7725
  %165 = load i8** %p, align 8, !dbg !7725
  %166 = load i8** %fmt, align 8, !dbg !7725
  %167 = icmp ne i8* %165, %166, !dbg !7725
  br i1 %167, label %bb39, label %bb40, !dbg !7725

bb39:                                             ; preds = %bb38
  store i32 -1, i32* %0, align 4, !dbg !7726
  br label %bb90, !dbg !7726

bb40:                                             ; preds = %bb38, %bb37
  store i32 -2147483648, i32* %i, align 4, !dbg !7727
  br label %bb41, !dbg !7727

bb41:                                             ; preds = %bb40, %PREC_WIDTH
  %168 = load i32* %dpoint, align 4, !dbg !7728
  %169 = icmp eq i32 %168, 0, !dbg !7728
  %170 = load i32* %i, align 4, !dbg !7729
  br i1 %169, label %bb42, label %bb45, !dbg !7728

bb42:                                             ; preds = %bb41
  store i32 %170, i32* %width, align 4, !dbg !7729
  %171 = load i8** %fmt, align 8, !dbg !7730
  %172 = load i8* %171, align 1, !dbg !7730
  %173 = icmp eq i8 %172, 46, !dbg !7730
  br i1 %173, label %bb43, label %bb46, !dbg !7730

bb43:                                             ; preds = %bb42
  %174 = load i8** %fmt, align 8, !dbg !7731
  %175 = getelementptr inbounds i8* %174, i64 1, !dbg !7731
  store i8* %175, i8** %fmt, align 8, !dbg !7731
  store i32 -1, i32* %dpoint, align 4, !dbg !7732
  br label %width_precision, !dbg !7732

bb45:                                             ; preds = %bb41
  store i32 %170, i32* %preci, align 4, !dbg !7733
  br label %bb46, !dbg !7733

bb46:                                             ; preds = %bb42, %bb45
  store i8* getelementptr inbounds ([20 x i8]* @qual_chars.3670, i64 0, i64 0), i8** %p, align 8, !dbg !7734
  br label %bb47, !dbg !7734

bb47:                                             ; preds = %bb49, %bb46
  %176 = load i8** %fmt, align 8, !dbg !7735
  %177 = load i8* %176, align 1, !dbg !7735
  %178 = load i8** %p, align 8, !dbg !7735
  %179 = load i8* %178, align 1, !dbg !7735
  %180 = icmp eq i8 %177, %179, !dbg !7735
  br i1 %180, label %bb48, label %bb49, !dbg !7735

bb48:                                             ; preds = %bb47
  %181 = load i8** %fmt, align 8, !dbg !7736
  %182 = getelementptr inbounds i8* %181, i64 1, !dbg !7736
  store i8* %182, i8** %fmt, align 8, !dbg !7736
  br label %bb50, !dbg !7736

bb49:                                             ; preds = %bb47
  %183 = load i8** %p, align 8, !dbg !7737
  %184 = getelementptr inbounds i8* %183, i64 1, !dbg !7737
  store i8* %184, i8** %p, align 8, !dbg !7737
  %185 = load i8** %p, align 8, !dbg !7737
  %186 = load i8* %185, align 1, !dbg !7737
  %187 = icmp ne i8 %186, 0, !dbg !7737
  br i1 %187, label %bb47, label %bb50, !dbg !7737

bb50:                                             ; preds = %bb49, %bb48
  %188 = load i8** %p, align 8, !dbg !7738
  %189 = ptrtoint i8* %188 to i64, !dbg !7738
  %190 = sub nsw i64 %189, ptrtoint ([20 x i8]* @qual_chars.3670 to i64), !dbg !7738
  %191 = icmp sle i64 %190, 1, !dbg !7738
  br i1 %191, label %bb51, label %bb53, !dbg !7738

bb51:                                             ; preds = %bb50
  %192 = load i8** %fmt, align 8, !dbg !7738
  %193 = load i8* %192, align 1, !dbg !7738
  %194 = load i8** %p, align 8, !dbg !7738
  %195 = load i8* %194, align 1, !dbg !7738
  %196 = icmp eq i8 %193, %195, !dbg !7738
  br i1 %196, label %bb52, label %bb53, !dbg !7738

bb52:                                             ; preds = %bb51
  %197 = load i8** %p, align 8, !dbg !7739
  %198 = getelementptr inbounds i8* %197, i64 9, !dbg !7739
  store i8* %198, i8** %p, align 8, !dbg !7739
  %199 = load i8** %fmt, align 8, !dbg !7740
  %200 = getelementptr inbounds i8* %199, i64 1, !dbg !7740
  store i8* %200, i8** %fmt, align 8, !dbg !7740
  br label %bb53, !dbg !7740

bb53:                                             ; preds = %bb52, %bb51, %bb50
  %201 = load i8** %p, align 8, !dbg !7741
  %202 = getelementptr inbounds i8* %201, i64 9, !dbg !7741
  %203 = load i8* %202, align 1, !dbg !7741
  %204 = sext i8 %203 to i32, !dbg !7741
  %int_cast_to_i641 = zext i32 8 to i64
  %205 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %205, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %bb53
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %bb53
  %206 = shl i32 %204, 8, !dbg !7741
  store i32 %206, i32* %dataargtype, align 4, !dbg !7741
  %207 = load i8** %fmt, align 8, !dbg !7742
  %208 = load i8* %207, align 1, !dbg !7742
  %209 = icmp eq i8 %208, 0, !dbg !7742
  br i1 %209, label %bb54, label %bb55, !dbg !7742

bb54:                                             ; preds = %klee_overshift_check.exit3
  store i32 -1, i32* %0, align 4, !dbg !7743
  br label %bb90, !dbg !7743

bb55:                                             ; preds = %klee_overshift_check.exit3
  store i8* getelementptr inbounds ([21 x i8]* @spec_chars.3666, i64 0, i64 0), i8** %p, align 8, !dbg !7744
  br label %bb56, !dbg !7744

bb56:                                             ; preds = %bb63, %bb55
  %210 = load i8** %fmt, align 8, !dbg !7745
  %211 = load i8* %210, align 1, !dbg !7745
  %212 = load i8** %p, align 8, !dbg !7745
  %213 = load i8* %212, align 1, !dbg !7745
  %214 = icmp eq i8 %211, %213, !dbg !7745
  %215 = load i8** %p, align 8, !dbg !7746
  br i1 %214, label %bb57, label %bb63, !dbg !7745

bb57:                                             ; preds = %bb56
  %216 = ptrtoint i8* %215 to i64, !dbg !7746
  %217 = trunc i64 %216 to i32, !dbg !7746
  %218 = trunc i64 ptrtoint ([21 x i8]* @spec_chars.3666 to i64) to i32, !dbg !7746
  %219 = sub i32 %217, %218, !dbg !7746
  store i32 %219, i32* %p_m_spec_chars, align 4, !dbg !7746
  %220 = load i32* %p_m_spec_chars, align 4, !dbg !7747
  %221 = icmp sgt i32 %220, 17, !dbg !7747
  br i1 %221, label %bb58, label %bb60, !dbg !7747

bb58:                                             ; preds = %bb57
  %222 = load i32* %dataargtype, align 4, !dbg !7747
  %223 = and i32 %222, 1024, !dbg !7747
  %224 = icmp ne i32 %223, 0, !dbg !7747
  br i1 %224, label %bb59, label %bb60, !dbg !7747

bb59:                                             ; preds = %bb58
  %225 = load i32* %p_m_spec_chars, align 4, !dbg !7748
  %226 = sub nsw i32 %225, 2, !dbg !7748
  store i32 %226, i32* %p_m_spec_chars, align 4, !dbg !7748
  br label %bb60, !dbg !7748

bb60:                                             ; preds = %bb59, %bb58, %bb57
  %227 = load i32* %p_m_spec_chars, align 4, !dbg !7749
  %228 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7749
  %229 = getelementptr inbounds %struct.ppfs_t* %228, i32 0, i32 4, !dbg !7749
  store i32 %227, i32* %229, align 4, !dbg !7749
  store i8* getelementptr ([9 x i8]* @spec_ranges.3667, i64 2049638230412172401, i64 6), i8** %p, align 8, !dbg !7750
  br label %bb61, !dbg !7750

bb61:                                             ; preds = %bb61, %bb60
  %230 = load i8** %p, align 8, !dbg !7751
  %231 = getelementptr inbounds i8* %230, i64 1, !dbg !7751
  store i8* %231, i8** %p, align 8, !dbg !7751
  %232 = load i8** %p, align 8, !dbg !7751
  %233 = load i8* %232, align 1, !dbg !7751
  %234 = sext i8 %233 to i32, !dbg !7751
  %235 = load i32* %p_m_spec_chars, align 4, !dbg !7751
  %236 = icmp slt i32 %234, %235, !dbg !7751
  br i1 %236, label %bb61, label %bb62, !dbg !7751

bb62:                                             ; preds = %bb61
  %237 = load i8** %p, align 8, !dbg !7752
  %238 = ptrtoint i8* %237 to i64, !dbg !7752
  %239 = trunc i64 %238 to i32, !dbg !7752
  %240 = trunc i64 ptrtoint ([9 x i8]* @spec_ranges.3667 to i64) to i32, !dbg !7752
  %241 = sub i32 %239, %240, !dbg !7752
  store i32 %241, i32* %i, align 4, !dbg !7752
  %242 = load i32* %i, align 4, !dbg !7753
  %243 = sext i32 %242 to i64, !dbg !7753
  %244 = getelementptr inbounds [8 x i16]* @spec_or_mask.3668, i64 0, i64 %243, !dbg !7753
  %245 = load i16* %244, align 2, !dbg !7753
  %246 = sext i16 %245 to i32, !dbg !7753
  %247 = load i32* %dataargtype, align 4, !dbg !7753
  %248 = or i32 %246, %247, !dbg !7753
  %249 = load i32* %i, align 4, !dbg !7753
  %250 = sext i32 %249 to i64, !dbg !7753
  %251 = getelementptr inbounds [8 x i16]* @spec_and_mask.3669, i64 0, i64 %250, !dbg !7753
  %252 = load i16* %251, align 2, !dbg !7753
  %253 = sext i16 %252 to i32, !dbg !7753
  %254 = and i32 %248, %253, !dbg !7753
  %255 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 2, !dbg !7753
  store i32 %254, i32* %255, align 4, !dbg !7753
  store i8* getelementptr inbounds ([21 x i8]* @spec_chars.3666, i64 0, i64 0), i8** %p, align 8, !dbg !7754
  br label %bb64, !dbg !7754

bb63:                                             ; preds = %bb56
  %256 = getelementptr inbounds i8* %215, i64 1, !dbg !7755
  store i8* %256, i8** %p, align 8, !dbg !7755
  %257 = load i8** %p, align 8, !dbg !7755
  %258 = load i8* %257, align 1, !dbg !7755
  %259 = icmp ne i8 %258, 0, !dbg !7755
  br i1 %259, label %bb56, label %bb64, !dbg !7755

bb64:                                             ; preds = %bb63, %bb62
  %260 = load i8** %fmt, align 8, !dbg !7756
  %261 = load i8* %260, align 1, !dbg !7756
  %262 = sext i8 %261 to i32, !dbg !7756
  %263 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7756
  %264 = getelementptr inbounds %struct.ppfs_t* %263, i32 0, i32 1, !dbg !7756
  %265 = getelementptr inbounds %struct.printf_info* %264, i32 0, i32 2, !dbg !7756
  store i32 %262, i32* %265, align 8, !dbg !7756
  %266 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7757
  %267 = getelementptr inbounds %struct.ppfs_t* %266, i32 0, i32 1, !dbg !7757
  %268 = getelementptr inbounds %struct.printf_info* %267, i32 0, i32 0, !dbg !7757
  %269 = load i32* %preci, align 4, !dbg !7757
  store i32 %269, i32* %268, align 8, !dbg !7757
  %270 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7758
  %271 = getelementptr inbounds %struct.ppfs_t* %270, i32 0, i32 1, !dbg !7758
  %272 = getelementptr inbounds %struct.printf_info* %271, i32 0, i32 1, !dbg !7758
  %273 = load i32* %width, align 4, !dbg !7758
  store i32 %273, i32* %272, align 4, !dbg !7758
  %274 = load i32* %flags, align 4, !dbg !7759
  %275 = and i32 %274, 4, !dbg !7759
  %276 = icmp ne i32 %275, 0, !dbg !7759
  br i1 %276, label %bb65, label %bb66, !dbg !7759

bb65:                                             ; preds = %bb64
  store i32 48, i32* %iftmp.14, align 4, !dbg !7759
  br label %bb67, !dbg !7759

bb66:                                             ; preds = %bb64
  store i32 32, i32* %iftmp.14, align 4, !dbg !7759
  br label %bb67, !dbg !7759

bb67:                                             ; preds = %bb66, %bb65
  %277 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7759
  %278 = getelementptr inbounds %struct.ppfs_t* %277, i32 0, i32 1, !dbg !7759
  %279 = getelementptr inbounds %struct.printf_info* %278, i32 0, i32 4, !dbg !7759
  %280 = load i32* %iftmp.14, align 4, !dbg !7759
  store i32 %280, i32* %279, align 8, !dbg !7759
  %281 = load i32* %flags, align 4, !dbg !7760
  %282 = and i32 %281, -5, !dbg !7760
  %283 = load i32* %dataargtype, align 4, !dbg !7760
  %284 = and i32 %283, 3840, !dbg !7760
  %285 = or i32 %282, %284, !dbg !7760
  %286 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7760
  %287 = getelementptr inbounds %struct.ppfs_t* %286, i32 0, i32 1, !dbg !7760
  %288 = getelementptr inbounds %struct.printf_info* %287, i32 0, i32 3, !dbg !7760
  store i32 %285, i32* %288, align 4, !dbg !7760
  %289 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7761
  %290 = getelementptr inbounds %struct.ppfs_t* %289, i32 0, i32 3, !dbg !7761
  store i32 1, i32* %290, align 16, !dbg !7761
  %291 = load i8** %p, align 8, !dbg !7762
  %292 = load i8* %291, align 1, !dbg !7762
  %293 = icmp eq i8 %292, 0, !dbg !7762
  br i1 %293, label %bb68, label %bb69, !dbg !7762

bb68:                                             ; preds = %bb67
  store i32 -1, i32* %0, align 4, !dbg !7763
  br label %bb90, !dbg !7763

bb69:                                             ; preds = %bb67
  %294 = load i32* %maxposarg, align 4, !dbg !7764
  %295 = icmp sgt i32 %294, 0, !dbg !7764
  br i1 %295, label %bb70, label %bb81, !dbg !7764

bb70:                                             ; preds = %bb69
  store i32 0, i32* %i, align 4, !dbg !7765
  br label %bb71, !dbg !7765

bb71:                                             ; preds = %bb79, %bb70
  %296 = load i32* %i, align 4, !dbg !7766
  %297 = icmp sle i32 %296, 2, !dbg !7766
  br i1 %297, label %bb72, label %bb73, !dbg !7766

bb72:                                             ; preds = %bb71
  %298 = load i32* %i, align 4, !dbg !7766
  %299 = load i32* %i, align 4, !dbg !7766
  %300 = sext i32 %299 to i64, !dbg !7766
  %301 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 %300, !dbg !7766
  %302 = load i32* %301, align 4, !dbg !7766
  %303 = trunc i32 %302 to i8, !dbg !7766
  %304 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7766
  %305 = getelementptr inbounds %struct.ppfs_t* %304, i32 0, i32 5, !dbg !7766
  %306 = sext i32 %298 to i64, !dbg !7766
  %307 = getelementptr inbounds [4 x i8]* %305, i64 0, i64 %306, !dbg !7766
  store i8 %303, i8* %307, align 1, !dbg !7766
  %308 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7766
  %309 = getelementptr inbounds %struct.ppfs_t* %308, i32 0, i32 5, !dbg !7766
  %310 = sext i32 %298 to i64, !dbg !7766
  %311 = getelementptr inbounds [4 x i8]* %309, i64 0, i64 %310, !dbg !7766
  %312 = load i8* %311, align 1, !dbg !7766
  %313 = zext i8 %312 to i32, !dbg !7766
  store i32 %313, i32* %iftmp.15, align 4, !dbg !7766
  br label %bb74, !dbg !7766

bb73:                                             ; preds = %bb71
  %314 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 2, !dbg !7766
  %315 = load i32* %314, align 4, !dbg !7766
  %316 = load i32* %i, align 4, !dbg !7766
  %317 = sub nsw i32 %316, 2, !dbg !7766
  %318 = add nsw i32 %315, %317, !dbg !7766
  store i32 %318, i32* %iftmp.15, align 4, !dbg !7766
  br label %bb74, !dbg !7766

bb74:                                             ; preds = %bb73, %bb72
  %319 = load i32* %iftmp.15, align 4, !dbg !7766
  store i32 %319, i32* %n, align 4, !dbg !7766
  %320 = load i32* %n, align 4, !dbg !7767
  %321 = load i32* %maxposarg, align 4, !dbg !7767
  %322 = icmp sgt i32 %320, %321, !dbg !7767
  br i1 %322, label %bb75, label %bb77, !dbg !7767

bb75:                                             ; preds = %bb74
  %323 = load i32* %n, align 4, !dbg !7768
  store i32 %323, i32* %maxposarg, align 4, !dbg !7768
  %324 = load i32* %maxposarg, align 4, !dbg !7768
  %325 = icmp sgt i32 %324, 9, !dbg !7768
  br i1 %325, label %bb76, label %bb77, !dbg !7768

bb76:                                             ; preds = %bb75
  store i32 -1, i32* %0, align 4, !dbg !7769
  br label %bb90, !dbg !7769

bb77:                                             ; preds = %bb75, %bb74
  %326 = load i32* %n, align 4, !dbg !7770
  %327 = sub nsw i32 %326, 1, !dbg !7770
  store i32 %327, i32* %n, align 4, !dbg !7770
  %328 = load i32* %i, align 4, !dbg !7771
  %329 = sext i32 %328 to i64, !dbg !7771
  %330 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 %329, !dbg !7771
  %331 = load i32* %330, align 4, !dbg !7771
  %332 = load i32* %n, align 4, !dbg !7771
  %333 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7771
  %334 = getelementptr inbounds %struct.ppfs_t* %333, i32 0, i32 6, !dbg !7771
  %335 = sext i32 %332 to i64, !dbg !7771
  %336 = getelementptr inbounds [9 x i32]* %334, i64 0, i64 %335, !dbg !7771
  %337 = load i32* %336, align 4, !dbg !7771
  %338 = call i32 @_is_equal_or_bigger_arg(i32 %337, i32 %331) nounwind, !dbg !7771
  %339 = icmp ne i32 %338, 0, !dbg !7771
  br i1 %339, label %bb78, label %bb79, !dbg !7771

bb78:                                             ; preds = %bb77
  %340 = load i32* %n, align 4, !dbg !7772
  %341 = load i32* %i, align 4, !dbg !7772
  %342 = sext i32 %341 to i64, !dbg !7772
  %343 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 %342, !dbg !7772
  %344 = load i32* %343, align 4, !dbg !7772
  %345 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7772
  %346 = getelementptr inbounds %struct.ppfs_t* %345, i32 0, i32 6, !dbg !7772
  %347 = sext i32 %340 to i64, !dbg !7772
  %348 = getelementptr inbounds [9 x i32]* %346, i64 0, i64 %347, !dbg !7772
  store i32 %344, i32* %348, align 4, !dbg !7772
  br label %bb79, !dbg !7772

bb79:                                             ; preds = %bb78, %bb77
  %349 = load i32* %i, align 4, !dbg !7773
  %350 = add nsw i32 %349, 1, !dbg !7773
  store i32 %350, i32* %i, align 4, !dbg !7773
  %351 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7773
  %352 = getelementptr inbounds %struct.ppfs_t* %351, i32 0, i32 3, !dbg !7773
  %353 = load i32* %352, align 16, !dbg !7773
  %354 = add nsw i32 %353, 2, !dbg !7773
  %355 = load i32* %i, align 4, !dbg !7773
  %356 = icmp slt i32 %355, %354, !dbg !7773
  br i1 %356, label %bb71, label %bb83, !dbg !7773

bb81:                                             ; preds = %bb69
  %357 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7774
  %358 = getelementptr inbounds %struct.ppfs_t* %357, i32 0, i32 5, !dbg !7774
  %359 = getelementptr inbounds [4 x i8]* %358, i64 0, i64 2, !dbg !7774
  store i8 1, i8* %359, align 1, !dbg !7774
  %360 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7775
  %361 = getelementptr inbounds %struct.ppfs_t* %360, i32 0, i32 3, !dbg !7775
  %362 = load i32* %361, align 16, !dbg !7775
  %363 = sext i32 %362 to i64, !dbg !7775
  %364 = mul i64 %363, 4, !dbg !7775
  %365 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7775
  %366 = getelementptr inbounds %struct.ppfs_t* %365, i32 0, i32 6, !dbg !7775
  %367 = getelementptr inbounds [9 x i32]* %366, i64 0, i64 0, !dbg !7775
  %368 = bitcast i32* %367 to i8*, !dbg !7775
  %argtype82 = bitcast [3 x i32]* %argtype to i32*, !dbg !7775
  %369 = getelementptr inbounds i32* %argtype82, i64 2, !dbg !7775
  %370 = bitcast i32* %369 to i8*, !dbg !7775
  %371 = call i8* @memcpy(i8* noalias %368, i8* noalias %370, i64 %364) nounwind, !dbg !7775
  br label %bb83, !dbg !7775

bb83:                                             ; preds = %bb79, %bb81
  %372 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7776
  %373 = getelementptr inbounds %struct.ppfs_t* %372, i32 0, i32 2, !dbg !7776
  %374 = load i32* %maxposarg, align 4, !dbg !7776
  store i32 %374, i32* %373, align 4, !dbg !7776
  %375 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7777
  %376 = getelementptr inbounds %struct.ppfs_t* %375, i32 0, i32 1, !dbg !7777
  %377 = getelementptr inbounds %struct.printf_info* %376, i32 0, i32 3, !dbg !7777
  %378 = load i32* %377, align 4, !dbg !7777
  %379 = and i32 %378, 128, !dbg !7777
  store i32 %379, i32* %flags, align 4, !dbg !7777
  %380 = load i32* %flags, align 4, !dbg !7777
  %381 = icmp eq i32 %380, 0, !dbg !7777
  br i1 %381, label %bb84, label %bb85, !dbg !7777

bb84:                                             ; preds = %bb83
  %382 = load i8** %fmt, align 8, !dbg !7778
  %383 = getelementptr inbounds i8* %382, i64 1, !dbg !7778
  store i8* %383, i8** %fmt, align 8, !dbg !7778
  %384 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7778
  %385 = getelementptr inbounds %struct.ppfs_t* %384, i32 0, i32 0, !dbg !7778
  %386 = load i8** %fmt, align 8, !dbg !7778
  store i8* %386, i8** %385, align 16, !dbg !7778
  br label %bb89, !dbg !7778

bb85:                                             ; preds = %bb83
  %387 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7779
  %388 = getelementptr inbounds %struct.ppfs_t* %387, i32 0, i32 0, !dbg !7779
  %389 = load i8** %388, align 16, !dbg !7779
  %390 = bitcast i8* %389 to i32*, !dbg !7779
  %391 = load i8** %fmt, align 8, !dbg !7779
  %392 = ptrtoint i8* %391 to i64, !dbg !7779
  %buf86 = bitcast [32 x i8]* %buf to i8*, !dbg !7779
  %buf8687 = ptrtoint i8* %buf86 to i64, !dbg !7779
  %393 = sub nsw i64 %392, %buf8687, !dbg !7779
  %394 = getelementptr inbounds i32* %390, i64 %393, !dbg !7779
  %395 = bitcast i32* %394 to i8*, !dbg !7779
  %396 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7779
  %397 = getelementptr inbounds %struct.ppfs_t* %396, i32 0, i32 0, !dbg !7779
  store i8* %395, i8** %397, align 16, !dbg !7779
  br label %bb89, !dbg !7779

bb89:                                             ; preds = %bb85, %bb84
  %398 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7780
  %399 = getelementptr inbounds %struct.ppfs_t* %398, i32 0, i32 3, !dbg !7780
  %400 = load i32* %399, align 16, !dbg !7780
  %401 = add nsw i32 %400, 2, !dbg !7780
  store i32 %401, i32* %0, align 4, !dbg !7780
  br label %bb90, !dbg !7780

bb90:                                             ; preds = %bb89, %bb76, %bb68, %bb54, %bb39, %bb36, %bb22, %bb17, %bb4
  %402 = load i32* %0, align 4, !dbg !7684
  store i32 %402, i32* %retval, align 4, !dbg !7684
  %retval91 = load i32* %retval, !dbg !7684
  ret i32 %retval91, !dbg !7684
}

define hidden void @_ppfs_prepargs(%struct.ppfs_t* %ppfs, %struct.__va_list_tag* %arg) nounwind {
entry:
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  %0 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7781
  %1 = getelementptr inbounds %struct.ppfs_t* %0, i32 0, i32 7, !dbg !7781
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %1, i64 0, i64 0, !dbg !7781
  %3 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7781
  %4 = bitcast %struct.__va_list_tag* %2 to i8*, !dbg !7781
  %5 = bitcast %struct.__va_list_tag* %3 to i8*, !dbg !7781
  %vacopy.cast.dst = bitcast i8* %4 to i64*
  %vacopy.cast.src = bitcast i8* %5 to i64*
  %6 = load i64* %vacopy.cast.src
  store i64 %6, i64* %vacopy.cast.dst
  %7 = getelementptr i64* %vacopy.cast.dst, i64 1
  %8 = getelementptr i64* %vacopy.cast.src, i64 1
  %9 = load i64* %8
  store i64 %9, i64* %7
  %10 = getelementptr i64* %7, i64 1
  %11 = getelementptr i64* %8, i64 1
  %12 = load i64* %11
  store i64 %12, i64* %10
  %13 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7783
  %14 = getelementptr inbounds %struct.ppfs_t* %13, i32 0, i32 2, !dbg !7783
  %15 = load i32* %14, align 4, !dbg !7783
  store i32 %15, i32* %i, align 4, !dbg !7783
  %16 = load i32* %i, align 4, !dbg !7783
  %17 = icmp sgt i32 %16, 0, !dbg !7783
  br i1 %17, label %bb, label %return, !dbg !7783

bb:                                               ; preds = %entry
  %18 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7784
  %19 = getelementptr inbounds %struct.ppfs_t* %18, i32 0, i32 3, !dbg !7784
  %20 = load i32* %i, align 4, !dbg !7784
  store i32 %20, i32* %19, align 16, !dbg !7784
  %21 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7785
  %22 = getelementptr inbounds %struct.ppfs_t* %21, i32 0, i32 2, !dbg !7785
  store i32 0, i32* %22, align 4, !dbg !7785
  %23 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7785
  %24 = getelementptr inbounds %struct.ppfs_t* %23, i32 0, i32 2, !dbg !7785
  %25 = load i32* %24, align 4, !dbg !7785
  %26 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7785
  %27 = getelementptr inbounds %struct.ppfs_t* %26, i32 0, i32 1, !dbg !7785
  %28 = getelementptr inbounds %struct.printf_info* %27, i32 0, i32 0, !dbg !7785
  store i32 %25, i32* %28, align 8, !dbg !7785
  %29 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7785
  %30 = getelementptr inbounds %struct.ppfs_t* %29, i32 0, i32 1, !dbg !7785
  %31 = getelementptr inbounds %struct.printf_info* %30, i32 0, i32 0, !dbg !7785
  %32 = load i32* %31, align 8, !dbg !7785
  %33 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7785
  %34 = getelementptr inbounds %struct.ppfs_t* %33, i32 0, i32 1, !dbg !7785
  %35 = getelementptr inbounds %struct.printf_info* %34, i32 0, i32 1, !dbg !7785
  store i32 %32, i32* %35, align 4, !dbg !7785
  %36 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7786
  call void @_ppfs_setargs(%struct.ppfs_t* %36) nounwind, !dbg !7786
  %37 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7787
  %38 = getelementptr inbounds %struct.ppfs_t* %37, i32 0, i32 2, !dbg !7787
  %39 = load i32* %i, align 4, !dbg !7787
  store i32 %39, i32* %38, align 4, !dbg !7787
  br label %return, !dbg !7787

return:                                           ; preds = %entry, %bb
  ret void, !dbg !7788
}

declare void @llvm.va_copy(i8*, i8*) nounwind

define hidden void @_ppfs_setargs(%struct.ppfs_t* %ppfs) nounwind {
entry:
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %addr.17 = alloca i8*
  %addr.15 = alloca i8*
  %addr.13 = alloca i8*
  %addr.11 = alloca i8*
  %addr.9 = alloca i8*
  %addr.7 = alloca i8*
  %addr.5 = alloca i8*
  %addr.2 = alloca i8*
  %addr.0 = alloca i8*
  %p = alloca %union.argvalue_t*
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  %0 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7789
  %1 = getelementptr inbounds %struct.ppfs_t* %0, i32 0, i32 8, !dbg !7789
  %2 = getelementptr inbounds [9 x %union.argvalue_t]* %1, i64 0, i64 0, !dbg !7789
  store %union.argvalue_t* %2, %union.argvalue_t** %p, align 8, !dbg !7789
  %3 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7791
  %4 = getelementptr inbounds %struct.ppfs_t* %3, i32 0, i32 2, !dbg !7791
  %5 = load i32* %4, align 4, !dbg !7791
  %6 = icmp eq i32 %5, 0, !dbg !7791
  %7 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7792
  %8 = getelementptr inbounds %struct.ppfs_t* %7, i32 0, i32 1, !dbg !7792
  %9 = getelementptr inbounds %struct.printf_info* %8, i32 0, i32 1, !dbg !7792
  %10 = load i32* %9, align 4, !dbg !7792
  %11 = icmp eq i32 %10, -2147483648, !dbg !7792
  br i1 %6, label %bb, label %bb41, !dbg !7791

bb:                                               ; preds = %entry
  br i1 %11, label %bb1, label %bb5, !dbg !7792

bb1:                                              ; preds = %bb
  %12 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7793
  %13 = getelementptr inbounds %struct.ppfs_t* %12, i32 0, i32 7, !dbg !7793
  %14 = bitcast [1 x %struct.__va_list_tag]* %13 to %struct.__va_list_tag*, !dbg !7793
  %15 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 0, !dbg !7793
  %16 = load i32* %15, align 8, !dbg !7793
  %17 = icmp uge i32 %16, 48, !dbg !7793
  br i1 %17, label %bb3, label %bb2, !dbg !7793

bb2:                                              ; preds = %bb1
  %18 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 3, !dbg !7793
  %19 = load i8** %18, align 8, !dbg !7793
  %20 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 0, !dbg !7793
  %21 = load i32* %20, align 8, !dbg !7793
  %22 = inttoptr i32 %21 to i8*, !dbg !7793
  %23 = ptrtoint i8* %19 to i64, !dbg !7793
  %24 = ptrtoint i8* %22 to i64, !dbg !7793
  %25 = add i64 %23, %24, !dbg !7793
  %26 = inttoptr i64 %25 to i8*, !dbg !7793
  store i8* %26, i8** %addr.0, align 8, !dbg !7793
  %27 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 0, !dbg !7793
  %28 = load i32* %27, align 8, !dbg !7793
  %29 = add i32 %28, 8, !dbg !7793
  %30 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 0, !dbg !7793
  store i32 %29, i32* %30, align 8, !dbg !7793
  br label %bb4, !dbg !7793

bb3:                                              ; preds = %bb1
  %31 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 2, !dbg !7793
  %32 = load i8** %31, align 8, !dbg !7793
  store i8* %32, i8** %addr.0, align 8, !dbg !7793
  %33 = getelementptr inbounds i8* %32, i64 8, !dbg !7793
  %34 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 2, !dbg !7793
  store i8* %33, i8** %34, align 8, !dbg !7793
  br label %bb4, !dbg !7793

bb4:                                              ; preds = %bb3, %bb2
  %35 = load i8** %addr.0, align 8, !dbg !7793
  %36 = bitcast i8* %35 to i32*, !dbg !7793
  %37 = load i32* %36, align 4, !dbg !7793
  %38 = load %union.argvalue_t** %p, align 8, !dbg !7793
  %39 = getelementptr inbounds %union.argvalue_t* %38, i32 0, i32 0, !dbg !7793
  %40 = bitcast x86_fp80* %39 to i32*, !dbg !7793
  store i32 %37, i32* %40, align 16, !dbg !7793
  %41 = load %union.argvalue_t** %p, align 8, !dbg !7793
  %42 = getelementptr inbounds %union.argvalue_t* %41, i32 0, i32 0, !dbg !7793
  %43 = bitcast x86_fp80* %42 to i32*, !dbg !7793
  %44 = load i32* %43, align 16, !dbg !7793
  %45 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7793
  %46 = getelementptr inbounds %struct.ppfs_t* %45, i32 0, i32 1, !dbg !7793
  %47 = getelementptr inbounds %struct.printf_info* %46, i32 0, i32 1, !dbg !7793
  store i32 %44, i32* %47, align 4, !dbg !7793
  br label %bb5, !dbg !7793

bb5:                                              ; preds = %bb4, %bb
  %48 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7794
  %49 = getelementptr inbounds %struct.ppfs_t* %48, i32 0, i32 1, !dbg !7794
  %50 = getelementptr inbounds %struct.printf_info* %49, i32 0, i32 0, !dbg !7794
  %51 = load i32* %50, align 8, !dbg !7794
  %52 = icmp eq i32 %51, -2147483648, !dbg !7794
  br i1 %52, label %bb6, label %bb10, !dbg !7794

bb6:                                              ; preds = %bb5
  %53 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7795
  %54 = getelementptr inbounds %struct.ppfs_t* %53, i32 0, i32 7, !dbg !7795
  %55 = bitcast [1 x %struct.__va_list_tag]* %54 to %struct.__va_list_tag*, !dbg !7795
  %56 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 0, !dbg !7795
  %57 = load i32* %56, align 8, !dbg !7795
  %58 = icmp uge i32 %57, 48, !dbg !7795
  br i1 %58, label %bb8, label %bb7, !dbg !7795

bb7:                                              ; preds = %bb6
  %59 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 3, !dbg !7795
  %60 = load i8** %59, align 8, !dbg !7795
  %61 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 0, !dbg !7795
  %62 = load i32* %61, align 8, !dbg !7795
  %63 = inttoptr i32 %62 to i8*, !dbg !7795
  %64 = ptrtoint i8* %60 to i64, !dbg !7795
  %65 = ptrtoint i8* %63 to i64, !dbg !7795
  %66 = add i64 %64, %65, !dbg !7795
  %67 = inttoptr i64 %66 to i8*, !dbg !7795
  store i8* %67, i8** %addr.2, align 8, !dbg !7795
  %68 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 0, !dbg !7795
  %69 = load i32* %68, align 8, !dbg !7795
  %70 = add i32 %69, 8, !dbg !7795
  %71 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 0, !dbg !7795
  store i32 %70, i32* %71, align 8, !dbg !7795
  br label %bb9, !dbg !7795

bb8:                                              ; preds = %bb6
  %72 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 2, !dbg !7795
  %73 = load i8** %72, align 8, !dbg !7795
  store i8* %73, i8** %addr.2, align 8, !dbg !7795
  %74 = getelementptr inbounds i8* %73, i64 8, !dbg !7795
  %75 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 2, !dbg !7795
  store i8* %74, i8** %75, align 8, !dbg !7795
  br label %bb9, !dbg !7795

bb9:                                              ; preds = %bb8, %bb7
  %76 = load i8** %addr.2, align 8, !dbg !7795
  %77 = bitcast i8* %76 to i32*, !dbg !7795
  %78 = load i32* %77, align 4, !dbg !7795
  %79 = load %union.argvalue_t** %p, align 8, !dbg !7795
  %80 = getelementptr inbounds %union.argvalue_t* %79, i32 0, i32 0, !dbg !7795
  %81 = bitcast x86_fp80* %80 to i32*, !dbg !7795
  store i32 %78, i32* %81, align 16, !dbg !7795
  %82 = load %union.argvalue_t** %p, align 8, !dbg !7795
  %83 = getelementptr inbounds %union.argvalue_t* %82, i32 0, i32 0, !dbg !7795
  %84 = bitcast x86_fp80* %83 to i32*, !dbg !7795
  %85 = load i32* %84, align 16, !dbg !7795
  %86 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7795
  %87 = getelementptr inbounds %struct.ppfs_t* %86, i32 0, i32 1, !dbg !7795
  %88 = getelementptr inbounds %struct.printf_info* %87, i32 0, i32 0, !dbg !7795
  store i32 %85, i32* %88, align 8, !dbg !7795
  br label %bb10, !dbg !7795

bb10:                                             ; preds = %bb9, %bb5
  store i32 0, i32* %i, align 4, !dbg !7796
  br label %bb39, !dbg !7796

bb11:                                             ; preds = %bb39
  %89 = load i32* %i, align 4, !dbg !7797
  %90 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7797
  %91 = getelementptr inbounds %struct.ppfs_t* %90, i32 0, i32 6, !dbg !7797
  %92 = sext i32 %89 to i64, !dbg !7797
  %93 = getelementptr inbounds [9 x i32]* %91, i64 0, i64 %92, !dbg !7797
  %94 = load i32* %93, align 4, !dbg !7797
  %95 = load i32* %i, align 4, !dbg !7797
  %96 = add nsw i32 %95, 1, !dbg !7797
  store i32 %96, i32* %i, align 4, !dbg !7797
  switch i32 %94, label %bb33 [
    i32 0, label %bb20
    i32 1, label %bb20
    i32 2, label %bb24
    i32 7, label %bb28
    i32 8, label %bb39
    i32 256, label %bb20
    i32 512, label %bb20
    i32 1024, label %bb16
    i32 2048, label %bb12
    i32 2055, label %bb32
  ], !dbg !7797

bb12:                                             ; preds = %bb11
  %97 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7798
  %98 = getelementptr inbounds %struct.ppfs_t* %97, i32 0, i32 7, !dbg !7798
  %99 = bitcast [1 x %struct.__va_list_tag]* %98 to %struct.__va_list_tag*, !dbg !7798
  %100 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 0, !dbg !7798
  %101 = load i32* %100, align 8, !dbg !7798
  %102 = icmp uge i32 %101, 48, !dbg !7798
  br i1 %102, label %bb14, label %bb13, !dbg !7798

bb13:                                             ; preds = %bb12
  %103 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 3, !dbg !7798
  %104 = load i8** %103, align 8, !dbg !7798
  %105 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 0, !dbg !7798
  %106 = load i32* %105, align 8, !dbg !7798
  %107 = inttoptr i32 %106 to i8*, !dbg !7798
  %108 = ptrtoint i8* %104 to i64, !dbg !7798
  %109 = ptrtoint i8* %107 to i64, !dbg !7798
  %110 = add i64 %108, %109, !dbg !7798
  %111 = inttoptr i64 %110 to i8*, !dbg !7798
  store i8* %111, i8** %addr.5, align 8, !dbg !7798
  %112 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 0, !dbg !7798
  %113 = load i32* %112, align 8, !dbg !7798
  %114 = add i32 %113, 8, !dbg !7798
  %115 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 0, !dbg !7798
  store i32 %114, i32* %115, align 8, !dbg !7798
  br label %bb15, !dbg !7798

bb14:                                             ; preds = %bb12
  %116 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 2, !dbg !7798
  %117 = load i8** %116, align 8, !dbg !7798
  store i8* %117, i8** %addr.5, align 8, !dbg !7798
  %118 = getelementptr inbounds i8* %117, i64 8, !dbg !7798
  %119 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 2, !dbg !7798
  store i8* %118, i8** %119, align 8, !dbg !7798
  br label %bb15, !dbg !7798

bb15:                                             ; preds = %bb14, %bb13
  %120 = load i8** %addr.5, align 8, !dbg !7798
  %121 = bitcast i8* %120 to i64*, !dbg !7798
  %122 = load i64* %121, align 8, !dbg !7798
  %123 = load %union.argvalue_t** %p, align 8, !dbg !7798
  %124 = getelementptr inbounds %union.argvalue_t* %123, i32 0, i32 0, !dbg !7798
  %125 = bitcast x86_fp80* %124 to i64*, !dbg !7798
  store i64 %122, i64* %125, align 16, !dbg !7798
  br label %bb38, !dbg !7798

bb16:                                             ; preds = %bb11
  %126 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7799
  %127 = getelementptr inbounds %struct.ppfs_t* %126, i32 0, i32 7, !dbg !7799
  %128 = bitcast [1 x %struct.__va_list_tag]* %127 to %struct.__va_list_tag*, !dbg !7799
  %129 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 0, !dbg !7799
  %130 = load i32* %129, align 8, !dbg !7799
  %131 = icmp uge i32 %130, 48, !dbg !7799
  br i1 %131, label %bb18, label %bb17, !dbg !7799

bb17:                                             ; preds = %bb16
  %132 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 3, !dbg !7799
  %133 = load i8** %132, align 8, !dbg !7799
  %134 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 0, !dbg !7799
  %135 = load i32* %134, align 8, !dbg !7799
  %136 = inttoptr i32 %135 to i8*, !dbg !7799
  %137 = ptrtoint i8* %133 to i64, !dbg !7799
  %138 = ptrtoint i8* %136 to i64, !dbg !7799
  %139 = add i64 %137, %138, !dbg !7799
  %140 = inttoptr i64 %139 to i8*, !dbg !7799
  store i8* %140, i8** %addr.7, align 8, !dbg !7799
  %141 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 0, !dbg !7799
  %142 = load i32* %141, align 8, !dbg !7799
  %143 = add i32 %142, 8, !dbg !7799
  %144 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 0, !dbg !7799
  store i32 %143, i32* %144, align 8, !dbg !7799
  br label %bb19, !dbg !7799

bb18:                                             ; preds = %bb16
  %145 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 2, !dbg !7799
  %146 = load i8** %145, align 8, !dbg !7799
  store i8* %146, i8** %addr.7, align 8, !dbg !7799
  %147 = getelementptr inbounds i8* %146, i64 8, !dbg !7799
  %148 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 2, !dbg !7799
  store i8* %147, i8** %148, align 8, !dbg !7799
  br label %bb19, !dbg !7799

bb19:                                             ; preds = %bb18, %bb17
  %149 = load i8** %addr.7, align 8, !dbg !7799
  %150 = bitcast i8* %149 to i64*, !dbg !7799
  %151 = load i64* %150, align 8, !dbg !7799
  %152 = load %union.argvalue_t** %p, align 8, !dbg !7799
  %153 = getelementptr inbounds %union.argvalue_t* %152, i32 0, i32 0, !dbg !7799
  %154 = bitcast x86_fp80* %153 to i64*, !dbg !7799
  store i64 %151, i64* %154, align 16, !dbg !7799
  br label %bb38, !dbg !7799

bb20:                                             ; preds = %bb11, %bb11, %bb11, %bb11
  %155 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7800
  %156 = getelementptr inbounds %struct.ppfs_t* %155, i32 0, i32 7, !dbg !7800
  %157 = bitcast [1 x %struct.__va_list_tag]* %156 to %struct.__va_list_tag*, !dbg !7800
  %158 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 0, !dbg !7800
  %159 = load i32* %158, align 8, !dbg !7800
  %160 = icmp uge i32 %159, 48, !dbg !7800
  br i1 %160, label %bb22, label %bb21, !dbg !7800

bb21:                                             ; preds = %bb20
  %161 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 3, !dbg !7800
  %162 = load i8** %161, align 8, !dbg !7800
  %163 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 0, !dbg !7800
  %164 = load i32* %163, align 8, !dbg !7800
  %165 = inttoptr i32 %164 to i8*, !dbg !7800
  %166 = ptrtoint i8* %162 to i64, !dbg !7800
  %167 = ptrtoint i8* %165 to i64, !dbg !7800
  %168 = add i64 %166, %167, !dbg !7800
  %169 = inttoptr i64 %168 to i8*, !dbg !7800
  store i8* %169, i8** %addr.9, align 8, !dbg !7800
  %170 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 0, !dbg !7800
  %171 = load i32* %170, align 8, !dbg !7800
  %172 = add i32 %171, 8, !dbg !7800
  %173 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 0, !dbg !7800
  store i32 %172, i32* %173, align 8, !dbg !7800
  br label %bb23, !dbg !7800

bb22:                                             ; preds = %bb20
  %174 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 2, !dbg !7800
  %175 = load i8** %174, align 8, !dbg !7800
  store i8* %175, i8** %addr.9, align 8, !dbg !7800
  %176 = getelementptr inbounds i8* %175, i64 8, !dbg !7800
  %177 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 2, !dbg !7800
  store i8* %176, i8** %177, align 8, !dbg !7800
  br label %bb23, !dbg !7800

bb23:                                             ; preds = %bb22, %bb21
  %178 = load i8** %addr.9, align 8, !dbg !7800
  %179 = bitcast i8* %178 to i32*, !dbg !7800
  %180 = load i32* %179, align 4, !dbg !7800
  %181 = load %union.argvalue_t** %p, align 8, !dbg !7800
  %182 = getelementptr inbounds %union.argvalue_t* %181, i32 0, i32 0, !dbg !7800
  %183 = bitcast x86_fp80* %182 to i32*, !dbg !7800
  store i32 %180, i32* %183, align 16, !dbg !7800
  br label %bb38, !dbg !7800

bb24:                                             ; preds = %bb11
  %184 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7801
  %185 = getelementptr inbounds %struct.ppfs_t* %184, i32 0, i32 7, !dbg !7801
  %186 = bitcast [1 x %struct.__va_list_tag]* %185 to %struct.__va_list_tag*, !dbg !7801
  %187 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 0, !dbg !7801
  %188 = load i32* %187, align 8, !dbg !7801
  %189 = icmp uge i32 %188, 48, !dbg !7801
  br i1 %189, label %bb26, label %bb25, !dbg !7801

bb25:                                             ; preds = %bb24
  %190 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 3, !dbg !7801
  %191 = load i8** %190, align 8, !dbg !7801
  %192 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 0, !dbg !7801
  %193 = load i32* %192, align 8, !dbg !7801
  %194 = inttoptr i32 %193 to i8*, !dbg !7801
  %195 = ptrtoint i8* %191 to i64, !dbg !7801
  %196 = ptrtoint i8* %194 to i64, !dbg !7801
  %197 = add i64 %195, %196, !dbg !7801
  %198 = inttoptr i64 %197 to i8*, !dbg !7801
  store i8* %198, i8** %addr.11, align 8, !dbg !7801
  %199 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 0, !dbg !7801
  %200 = load i32* %199, align 8, !dbg !7801
  %201 = add i32 %200, 8, !dbg !7801
  %202 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 0, !dbg !7801
  store i32 %201, i32* %202, align 8, !dbg !7801
  br label %bb27, !dbg !7801

bb26:                                             ; preds = %bb24
  %203 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 2, !dbg !7801
  %204 = load i8** %203, align 8, !dbg !7801
  store i8* %204, i8** %addr.11, align 8, !dbg !7801
  %205 = getelementptr inbounds i8* %204, i64 8, !dbg !7801
  %206 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 2, !dbg !7801
  store i8* %205, i8** %206, align 8, !dbg !7801
  br label %bb27, !dbg !7801

bb27:                                             ; preds = %bb26, %bb25
  %207 = load i8** %addr.11, align 8, !dbg !7801
  %208 = bitcast i8* %207 to i32*, !dbg !7801
  %209 = load i32* %208, align 4, !dbg !7801
  %210 = load %union.argvalue_t** %p, align 8, !dbg !7801
  %211 = getelementptr inbounds %union.argvalue_t* %210, i32 0, i32 0, !dbg !7801
  %212 = bitcast x86_fp80* %211 to i32*, !dbg !7801
  store i32 %209, i32* %212, align 16, !dbg !7801
  br label %bb38, !dbg !7801

bb28:                                             ; preds = %bb11
  %213 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7802
  %214 = getelementptr inbounds %struct.ppfs_t* %213, i32 0, i32 7, !dbg !7802
  %215 = bitcast [1 x %struct.__va_list_tag]* %214 to %struct.__va_list_tag*, !dbg !7802
  %216 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 1, !dbg !7802
  %217 = load i32* %216, align 4, !dbg !7802
  %218 = icmp uge i32 %217, 176, !dbg !7802
  br i1 %218, label %bb30, label %bb29, !dbg !7802

bb29:                                             ; preds = %bb28
  %219 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 3, !dbg !7802
  %220 = load i8** %219, align 8, !dbg !7802
  %221 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 1, !dbg !7802
  %222 = load i32* %221, align 4, !dbg !7802
  %223 = inttoptr i32 %222 to i8*, !dbg !7802
  %224 = ptrtoint i8* %220 to i64, !dbg !7802
  %225 = ptrtoint i8* %223 to i64, !dbg !7802
  %226 = add i64 %224, %225, !dbg !7802
  %227 = inttoptr i64 %226 to i8*, !dbg !7802
  store i8* %227, i8** %addr.13, align 8, !dbg !7802
  %228 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 1, !dbg !7802
  %229 = load i32* %228, align 4, !dbg !7802
  %230 = add i32 %229, 16, !dbg !7802
  %231 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 1, !dbg !7802
  store i32 %230, i32* %231, align 4, !dbg !7802
  br label %bb31, !dbg !7802

bb30:                                             ; preds = %bb28
  %232 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 2, !dbg !7802
  %233 = load i8** %232, align 8, !dbg !7802
  store i8* %233, i8** %addr.13, align 8, !dbg !7802
  %234 = getelementptr inbounds i8* %233, i64 8, !dbg !7802
  %235 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 2, !dbg !7802
  store i8* %234, i8** %235, align 8, !dbg !7802
  br label %bb31, !dbg !7802

bb31:                                             ; preds = %bb30, %bb29
  %236 = load i8** %addr.13, align 8, !dbg !7802
  %237 = bitcast i8* %236 to double*, !dbg !7802
  %238 = load double* %237, align 8, !dbg !7802
  %239 = load %union.argvalue_t** %p, align 8, !dbg !7802
  %240 = getelementptr inbounds %union.argvalue_t* %239, i32 0, i32 0, !dbg !7802
  %241 = bitcast x86_fp80* %240 to double*, !dbg !7802
  store double %238, double* %241, align 16, !dbg !7802
  br label %bb38, !dbg !7802

bb32:                                             ; preds = %bb11
  %242 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7803
  %243 = getelementptr inbounds %struct.ppfs_t* %242, i32 0, i32 7, !dbg !7803
  %244 = bitcast [1 x %struct.__va_list_tag]* %243 to %struct.__va_list_tag*, !dbg !7803
  %245 = getelementptr inbounds %struct.__va_list_tag* %244, i32 0, i32 2, !dbg !7803
  %246 = load i8** %245, align 8, !dbg !7803
  %247 = getelementptr inbounds i8* %246, i64 15, !dbg !7803
  %248 = ptrtoint i8* %247 to i64, !dbg !7803
  %249 = and i64 %248, -16, !dbg !7803
  %250 = inttoptr i64 %249 to i8*, !dbg !7803
  store i8* %250, i8** %addr.15, align 8, !dbg !7803
  %251 = getelementptr inbounds i8* %250, i64 16, !dbg !7803
  %252 = getelementptr inbounds %struct.__va_list_tag* %244, i32 0, i32 2, !dbg !7803
  store i8* %251, i8** %252, align 8, !dbg !7803
  %253 = load i8** %addr.15, align 8, !dbg !7803
  %254 = bitcast i8* %253 to x86_fp80*, !dbg !7803
  %255 = load x86_fp80* %254, align 16, !dbg !7803
  %256 = load %union.argvalue_t** %p, align 8, !dbg !7803
  %257 = getelementptr inbounds %union.argvalue_t* %256, i32 0, i32 0, !dbg !7803
  store x86_fp80 %255, x86_fp80* %257, align 16, !dbg !7803
  br label %bb38, !dbg !7803

bb33:                                             ; preds = %bb11
  %258 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7804
  %259 = getelementptr inbounds %struct.ppfs_t* %258, i32 0, i32 7, !dbg !7804
  %260 = bitcast [1 x %struct.__va_list_tag]* %259 to %struct.__va_list_tag*, !dbg !7804
  %261 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 0, !dbg !7804
  %262 = load i32* %261, align 8, !dbg !7804
  %263 = icmp uge i32 %262, 48, !dbg !7804
  br i1 %263, label %bb35, label %bb34, !dbg !7804

bb34:                                             ; preds = %bb33
  %264 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 3, !dbg !7804
  %265 = load i8** %264, align 8, !dbg !7804
  %266 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 0, !dbg !7804
  %267 = load i32* %266, align 8, !dbg !7804
  %268 = inttoptr i32 %267 to i8*, !dbg !7804
  %269 = ptrtoint i8* %265 to i64, !dbg !7804
  %270 = ptrtoint i8* %268 to i64, !dbg !7804
  %271 = add i64 %269, %270, !dbg !7804
  %272 = inttoptr i64 %271 to i8*, !dbg !7804
  store i8* %272, i8** %addr.17, align 8, !dbg !7804
  %273 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 0, !dbg !7804
  %274 = load i32* %273, align 8, !dbg !7804
  %275 = add i32 %274, 8, !dbg !7804
  %276 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 0, !dbg !7804
  store i32 %275, i32* %276, align 8, !dbg !7804
  br label %bb36, !dbg !7804

bb35:                                             ; preds = %bb33
  %277 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 2, !dbg !7804
  %278 = load i8** %277, align 8, !dbg !7804
  store i8* %278, i8** %addr.17, align 8, !dbg !7804
  %279 = getelementptr inbounds i8* %278, i64 8, !dbg !7804
  %280 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 2, !dbg !7804
  store i8* %279, i8** %280, align 8, !dbg !7804
  br label %bb36, !dbg !7804

bb36:                                             ; preds = %bb35, %bb34
  %281 = load i8** %addr.17, align 8, !dbg !7804
  %282 = bitcast i8* %281 to i8**, !dbg !7804
  %283 = load i8** %282, align 8, !dbg !7804
  %284 = load %union.argvalue_t** %p, align 8, !dbg !7804
  %285 = getelementptr inbounds %union.argvalue_t* %284, i32 0, i32 0, !dbg !7804
  %286 = bitcast x86_fp80* %285 to i8**, !dbg !7804
  store i8* %283, i8** %286, align 16, !dbg !7804
  br label %bb38, !dbg !7804

bb38:                                             ; preds = %bb36, %bb32, %bb31, %bb27, %bb23, %bb19, %bb15
  %287 = load %union.argvalue_t** %p, align 8, !dbg !7805
  %288 = getelementptr inbounds %union.argvalue_t* %287, i64 1, !dbg !7805
  store %union.argvalue_t* %288, %union.argvalue_t** %p, align 8, !dbg !7805
  br label %bb39, !dbg !7805

bb39:                                             ; preds = %bb11, %bb38, %bb10
  %289 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7806
  %290 = getelementptr inbounds %struct.ppfs_t* %289, i32 0, i32 3, !dbg !7806
  %291 = load i32* %290, align 16, !dbg !7806
  %292 = load i32* %i, align 4, !dbg !7806
  %293 = icmp sgt i32 %291, %292, !dbg !7806
  br i1 %293, label %bb11, label %bb45, !dbg !7806

bb41:                                             ; preds = %entry
  br i1 %11, label %bb42, label %bb43, !dbg !7807

bb42:                                             ; preds = %bb41
  %294 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7808
  %295 = getelementptr inbounds %struct.ppfs_t* %294, i32 0, i32 5, !dbg !7808
  %296 = getelementptr inbounds [4 x i8]* %295, i64 0, i64 0, !dbg !7808
  %297 = load i8* %296, align 1, !dbg !7808
  %298 = zext i8 %297 to i32, !dbg !7808
  %299 = load %union.argvalue_t** %p, align 8, !dbg !7808
  %300 = sext i32 %298 to i64, !dbg !7808
  %301 = getelementptr inbounds %union.argvalue_t* %299, i64 %300, !dbg !7808
  %302 = getelementptr inbounds %union.argvalue_t* %301, i64 -1, !dbg !7808
  %303 = getelementptr inbounds %union.argvalue_t* %302, i32 0, i32 0, !dbg !7808
  %304 = bitcast x86_fp80* %303 to i32*, !dbg !7808
  %305 = load i32* %304, align 16, !dbg !7808
  %306 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7808
  %307 = getelementptr inbounds %struct.ppfs_t* %306, i32 0, i32 1, !dbg !7808
  %308 = getelementptr inbounds %struct.printf_info* %307, i32 0, i32 1, !dbg !7808
  store i32 %305, i32* %308, align 4, !dbg !7808
  br label %bb43, !dbg !7808

bb43:                                             ; preds = %bb42, %bb41
  %309 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7809
  %310 = getelementptr inbounds %struct.ppfs_t* %309, i32 0, i32 1, !dbg !7809
  %311 = getelementptr inbounds %struct.printf_info* %310, i32 0, i32 0, !dbg !7809
  %312 = load i32* %311, align 8, !dbg !7809
  %313 = icmp eq i32 %312, -2147483648, !dbg !7809
  br i1 %313, label %bb44, label %bb45, !dbg !7809

bb44:                                             ; preds = %bb43
  %314 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7810
  %315 = getelementptr inbounds %struct.ppfs_t* %314, i32 0, i32 5, !dbg !7810
  %316 = getelementptr inbounds [4 x i8]* %315, i64 0, i64 1, !dbg !7810
  %317 = load i8* %316, align 1, !dbg !7810
  %318 = zext i8 %317 to i32, !dbg !7810
  %319 = load %union.argvalue_t** %p, align 8, !dbg !7810
  %320 = sext i32 %318 to i64, !dbg !7810
  %321 = getelementptr inbounds %union.argvalue_t* %319, i64 %320, !dbg !7810
  %322 = getelementptr inbounds %union.argvalue_t* %321, i64 -1, !dbg !7810
  %323 = getelementptr inbounds %union.argvalue_t* %322, i32 0, i32 0, !dbg !7810
  %324 = bitcast x86_fp80* %323 to i32*, !dbg !7810
  %325 = load i32* %324, align 16, !dbg !7810
  %326 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7810
  %327 = getelementptr inbounds %struct.ppfs_t* %326, i32 0, i32 1, !dbg !7810
  %328 = getelementptr inbounds %struct.printf_info* %327, i32 0, i32 0, !dbg !7810
  store i32 %325, i32* %328, align 8, !dbg !7810
  br label %bb45, !dbg !7810

bb45:                                             ; preds = %bb39, %bb44, %bb43
  %329 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7811
  %330 = getelementptr inbounds %struct.ppfs_t* %329, i32 0, i32 1, !dbg !7811
  %331 = getelementptr inbounds %struct.printf_info* %330, i32 0, i32 1, !dbg !7811
  %332 = load i32* %331, align 4, !dbg !7811
  %333 = icmp slt i32 %332, 0, !dbg !7811
  br i1 %333, label %bb46, label %return, !dbg !7811

bb46:                                             ; preds = %bb45
  %334 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7812
  %335 = getelementptr inbounds %struct.ppfs_t* %334, i32 0, i32 1, !dbg !7812
  %336 = getelementptr inbounds %struct.printf_info* %335, i32 0, i32 1, !dbg !7812
  %337 = load i32* %336, align 4, !dbg !7812
  %338 = sub nsw i32 0, %337, !dbg !7812
  %339 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7812
  %340 = getelementptr inbounds %struct.ppfs_t* %339, i32 0, i32 1, !dbg !7812
  %341 = getelementptr inbounds %struct.printf_info* %340, i32 0, i32 1, !dbg !7812
  store i32 %338, i32* %341, align 4, !dbg !7812
  %342 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7813
  %343 = getelementptr inbounds %struct.ppfs_t* %342, i32 0, i32 1, !dbg !7813
  %344 = getelementptr inbounds %struct.printf_info* %343, i32 0, i32 3, !dbg !7813
  %345 = load i32* %344, align 4, !dbg !7813
  %346 = or i32 %345, 8, !dbg !7813
  %347 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7813
  %348 = getelementptr inbounds %struct.ppfs_t* %347, i32 0, i32 1, !dbg !7813
  %349 = getelementptr inbounds %struct.printf_info* %348, i32 0, i32 3, !dbg !7813
  store i32 %346, i32* %349, align 4, !dbg !7813
  %350 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7814
  %351 = getelementptr inbounds %struct.ppfs_t* %350, i32 0, i32 1, !dbg !7814
  %352 = getelementptr inbounds %struct.printf_info* %351, i32 0, i32 3, !dbg !7814
  %353 = load i32* %352, align 4, !dbg !7814
  %354 = and i32 %353, -2, !dbg !7814
  %355 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7814
  %356 = getelementptr inbounds %struct.ppfs_t* %355, i32 0, i32 1, !dbg !7814
  %357 = getelementptr inbounds %struct.printf_info* %356, i32 0, i32 3, !dbg !7814
  store i32 %354, i32* %357, align 4, !dbg !7814
  %358 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7815
  %359 = getelementptr inbounds %struct.ppfs_t* %358, i32 0, i32 1, !dbg !7815
  %360 = getelementptr inbounds %struct.printf_info* %359, i32 0, i32 4, !dbg !7815
  store i32 32, i32* %360, align 8, !dbg !7815
  br label %return, !dbg !7815

return:                                           ; preds = %bb45, %bb46
  ret void, !dbg !7816
}

define hidden void @_store_inttype(i8* %dest, i32 %desttype, i64 %val) nounwind {
entry:
  %dest_addr = alloca i8*, align 8
  %desttype_addr = alloca i32, align 4
  %val_addr = alloca i64, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dest, i8** %dest_addr
  store i32 %desttype, i32* %desttype_addr
  store i64 %val, i64* %val_addr
  %0 = load i32* %desttype_addr, align 4, !dbg !7817
  %1 = icmp eq i32 %0, 256, !dbg !7817
  br i1 %1, label %bb, label %bb1, !dbg !7817

bb:                                               ; preds = %entry
  %2 = load i8** %dest_addr, align 8, !dbg !7819
  %3 = load i64* %val_addr, align 8, !dbg !7819
  %4 = trunc i64 %3 to i8, !dbg !7819
  store i8 %4, i8* %2, align 1, !dbg !7819
  br label %return, !dbg !7819

bb1:                                              ; preds = %entry
  %5 = load i32* %desttype_addr, align 4, !dbg !7820
  %6 = icmp eq i32 %5, 2048, !dbg !7820
  br i1 %6, label %bb2, label %bb3, !dbg !7820

bb2:                                              ; preds = %bb1
  %7 = load i8** %dest_addr, align 8, !dbg !7821
  %8 = bitcast i8* %7 to i64*, !dbg !7821
  %9 = load i64* %val_addr, align 8, !dbg !7821
  store i64 %9, i64* %8, align 8, !dbg !7821
  br label %return, !dbg !7821

bb3:                                              ; preds = %bb1
  %10 = load i32* %desttype_addr, align 4, !dbg !7822
  %11 = icmp eq i32 %10, 512, !dbg !7822
  br i1 %11, label %bb4, label %bb5, !dbg !7822

bb4:                                              ; preds = %bb3
  %12 = load i8** %dest_addr, align 8, !dbg !7823
  %13 = bitcast i8* %12 to i16*, !dbg !7823
  %14 = load i64* %val_addr, align 8, !dbg !7823
  %15 = trunc i64 %14 to i16, !dbg !7823
  store i16 %15, i16* %13, align 2, !dbg !7823
  br label %return, !dbg !7823

bb5:                                              ; preds = %bb3
  %16 = load i32* %desttype_addr, align 4, !dbg !7824
  %17 = icmp eq i32 %16, 1024, !dbg !7824
  %18 = load i8** %dest_addr, align 8, !dbg !7825
  br i1 %17, label %bb6, label %bb7, !dbg !7824

bb6:                                              ; preds = %bb5
  %19 = bitcast i8* %18 to i64*, !dbg !7825
  %20 = load i64* %val_addr, align 8, !dbg !7825
  store i64 %20, i64* %19, align 8, !dbg !7825
  br label %return, !dbg !7825

bb7:                                              ; preds = %bb5
  %21 = bitcast i8* %18 to i32*, !dbg !7826
  %22 = load i64* %val_addr, align 8, !dbg !7826
  %23 = trunc i64 %22 to i32, !dbg !7826
  store i32 %23, i32* %21, align 4, !dbg !7826
  br label %return, !dbg !7826

return:                                           ; preds = %bb, %bb2, %bb4, %bb6, %bb7
  ret void, !dbg !7827
}

define hidden i8* @_uintmaxtostr(i8* noalias %bufend, i64 %uval, i32 %base, i32 %alphacase) nounwind {
entry:
  %bufend_addr = alloca i8*, align 8
  %uval_addr = alloca i64, align 8
  %base_addr = alloca i32, align 4
  %alphacase_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.12 = alloca i8
  %negative = alloca i32
  %digit = alloca i32
  %H = alloca i32
  %L = alloca i32
  %high = alloca i32
  %low = alloca i32
  %rh = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %bufend, i8** %bufend_addr
  store i64 %uval, i64* %uval_addr
  store i32 %base, i32* %base_addr
  store i32 %alphacase, i32* %alphacase_addr
  store i32 0, i32* %negative, align 4, !dbg !7828
  %1 = load i32* %base_addr, align 4, !dbg !7830
  %2 = icmp slt i32 %1, 0, !dbg !7830
  br i1 %2, label %bb, label %bb2, !dbg !7830

bb:                                               ; preds = %entry
  %3 = load i32* %base_addr, align 4, !dbg !7831
  %4 = sub nsw i32 0, %3, !dbg !7831
  store i32 %4, i32* %base_addr, align 4, !dbg !7831
  %5 = load i64* %uval_addr, align 8, !dbg !7832
  %6 = icmp slt i64 %5, 0, !dbg !7832
  br i1 %6, label %bb1, label %bb2, !dbg !7832

bb1:                                              ; preds = %bb
  %7 = load i64* %uval_addr, align 8, !dbg !7833
  %8 = sub i64 0, %7, !dbg !7833
  store i64 %8, i64* %uval_addr, align 8, !dbg !7833
  store i32 1, i32* %negative, align 4, !dbg !7834
  br label %bb2, !dbg !7834

bb2:                                              ; preds = %bb1, %bb, %entry
  %9 = load i8** %bufend_addr, align 8, !dbg !7835
  store i8 0, i8* %9, align 1, !dbg !7835
  %10 = load i32* %base_addr, align 4, !dbg !7836
  %int_cast_to_i64 = zext i32 %10 to i64
  %11 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %12 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %12, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %13 = udiv i32 -1, %10, !dbg !7836
  store i32 %13, i32* %H, align 4, !dbg !7836
  %14 = load i32* %base_addr, align 4, !dbg !7837
  %int_cast_to_i641 = zext i32 %14 to i64
  %15 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %16 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %16, label %bb.i11, label %klee_div_zero_check.exit12

bb.i11:                                           ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit12:                       ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %17 = urem i32 -1, %14, !dbg !7837
  %18 = add i32 %17, 1, !dbg !7837
  store i32 %18, i32* %L, align 4, !dbg !7837
  %19 = load i32* %base_addr, align 4, !dbg !7838
  %20 = load i32* %L, align 4, !dbg !7838
  %21 = icmp eq i32 %19, %20, !dbg !7838
  br i1 %21, label %bb3, label %bb4, !dbg !7838

bb3:                                              ; preds = %klee_div_zero_check.exit12
  %22 = load i32* %H, align 4, !dbg !7839
  %23 = add i32 %22, 1, !dbg !7839
  store i32 %23, i32* %H, align 4, !dbg !7839
  store i32 0, i32* %L, align 4, !dbg !7840
  br label %bb4, !dbg !7840

bb4:                                              ; preds = %bb3, %klee_div_zero_check.exit12
  %24 = load i64* %uval_addr, align 8, !dbg !7841
  %25 = trunc i64 %24 to i32, !dbg !7841
  store i32 %25, i32* %low, align 4, !dbg !7841
  %26 = load i64* %uval_addr, align 8, !dbg !7842
  %int_cast_to_i6410 = bitcast i64 32 to i64
  %27 = icmp ult i64 %int_cast_to_i6410, 64
  br i1 %27, label %klee_overshift_check.exit, label %bb.i29

bb.i29:                                           ; preds = %bb4
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb4
  %28 = lshr i64 %26, 32, !dbg !7842
  %29 = trunc i64 %28 to i32, !dbg !7842
  store i32 %29, i32* %high, align 4, !dbg !7842
  br label %bb5, !dbg !7842

bb5:                                              ; preds = %bb11, %klee_overshift_check.exit
  %30 = load i32* %high, align 4, !dbg !7843
  %31 = icmp ne i32 %30, 0, !dbg !7843
  %32 = zext i1 %31 to i64, !dbg !7843
  %33 = icmp ne i64 %32, 0, !dbg !7843
  %34 = load i32* %base_addr, align 4, !dbg !7844
  br i1 %33, label %bb6, label %bb7, !dbg !7843

bb6:                                              ; preds = %bb5
  %35 = load i32* %high, align 4, !dbg !7844
  %int_cast_to_i642 = zext i32 %34 to i64
  %36 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %37 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %37, label %bb.i13, label %klee_div_zero_check.exit14

bb.i13:                                           ; preds = %bb6
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit14:                       ; preds = %bb6
  call void @klee_disable_symbex() nounwind
  %38 = urem i32 %35, %34, !dbg !7844
  store i32 %38, i32* %rh, align 4, !dbg !7844
  %39 = load i32* %base_addr, align 4, !dbg !7845
  %40 = load i32* %high, align 4, !dbg !7845
  %int_cast_to_i643 = zext i32 %39 to i64
  %41 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %42 = icmp eq i64 %int_cast_to_i643, 0
  br i1 %42, label %bb.i15, label %klee_div_zero_check.exit16

bb.i15:                                           ; preds = %klee_div_zero_check.exit14
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit16:                       ; preds = %klee_div_zero_check.exit14
  call void @klee_disable_symbex() nounwind
  %43 = udiv i32 %40, %39, !dbg !7845
  store i32 %43, i32* %high, align 4, !dbg !7845
  %44 = load i32* %base_addr, align 4, !dbg !7846
  %45 = load i32* %low, align 4, !dbg !7846
  %int_cast_to_i644 = zext i32 %44 to i64
  %46 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %47 = icmp eq i64 %int_cast_to_i644, 0
  br i1 %47, label %bb.i17, label %klee_div_zero_check.exit18

bb.i17:                                           ; preds = %klee_div_zero_check.exit16
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit18:                       ; preds = %klee_div_zero_check.exit16
  call void @klee_disable_symbex() nounwind
  %48 = urem i32 %45, %44, !dbg !7846
  %49 = load i32* %L, align 4, !dbg !7846
  %50 = load i32* %rh, align 4, !dbg !7846
  %51 = mul i32 %49, %50, !dbg !7846
  %52 = add i32 %48, %51, !dbg !7846
  store i32 %52, i32* %digit, align 4, !dbg !7846
  %53 = load i32* %base_addr, align 4, !dbg !7847
  %54 = load i32* %low, align 4, !dbg !7847
  %int_cast_to_i645 = zext i32 %53 to i64
  %55 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %56 = icmp eq i64 %int_cast_to_i645, 0
  br i1 %56, label %bb.i19, label %klee_div_zero_check.exit20

bb.i19:                                           ; preds = %klee_div_zero_check.exit18
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit20:                       ; preds = %klee_div_zero_check.exit18
  call void @klee_disable_symbex() nounwind
  %57 = udiv i32 %54, %53, !dbg !7847
  %58 = load i32* %H, align 4, !dbg !7847
  %59 = load i32* %rh, align 4, !dbg !7847
  %60 = mul i32 %58, %59, !dbg !7847
  %61 = add i32 %57, %60, !dbg !7847
  %62 = load i32* %base_addr, align 4, !dbg !7847
  %63 = load i32* %digit, align 4, !dbg !7847
  %int_cast_to_i646 = zext i32 %62 to i64
  %64 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %65 = icmp eq i64 %int_cast_to_i646, 0
  br i1 %65, label %bb.i21, label %klee_div_zero_check.exit22

bb.i21:                                           ; preds = %klee_div_zero_check.exit20
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit22:                       ; preds = %klee_div_zero_check.exit20
  call void @klee_disable_symbex() nounwind
  %66 = udiv i32 %63, %62, !dbg !7847
  %67 = add i32 %61, %66, !dbg !7847
  store i32 %67, i32* %low, align 4, !dbg !7847
  %68 = load i32* %base_addr, align 4, !dbg !7848
  %69 = load i32* %digit, align 4, !dbg !7848
  %int_cast_to_i647 = zext i32 %68 to i64
  %70 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %71 = icmp eq i64 %int_cast_to_i647, 0
  br i1 %71, label %bb.i23, label %klee_div_zero_check.exit24

bb.i23:                                           ; preds = %klee_div_zero_check.exit22
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit24:                       ; preds = %klee_div_zero_check.exit22
  call void @klee_disable_symbex() nounwind
  %72 = urem i32 %69, %68, !dbg !7848
  store i32 %72, i32* %digit, align 4, !dbg !7848
  br label %bb8, !dbg !7848

bb7:                                              ; preds = %bb5
  %73 = load i32* %low, align 4, !dbg !7849
  %int_cast_to_i648 = zext i32 %34 to i64
  %74 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %75 = icmp eq i64 %int_cast_to_i648, 0
  br i1 %75, label %bb.i25, label %klee_div_zero_check.exit26

bb.i25:                                           ; preds = %bb7
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit26:                       ; preds = %bb7
  call void @klee_disable_symbex() nounwind
  %76 = urem i32 %73, %34, !dbg !7849
  store i32 %76, i32* %digit, align 4, !dbg !7849
  %77 = load i32* %base_addr, align 4, !dbg !7850
  %78 = load i32* %low, align 4, !dbg !7850
  %int_cast_to_i649 = zext i32 %77 to i64
  %79 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %80 = icmp eq i64 %int_cast_to_i649, 0
  br i1 %80, label %bb.i27, label %klee_div_zero_check.exit28

bb.i27:                                           ; preds = %klee_div_zero_check.exit26
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit28:                       ; preds = %klee_div_zero_check.exit26
  call void @klee_disable_symbex() nounwind
  %81 = udiv i32 %78, %77, !dbg !7850
  store i32 %81, i32* %low, align 4, !dbg !7850
  br label %bb8, !dbg !7850

bb8:                                              ; preds = %klee_div_zero_check.exit28, %klee_div_zero_check.exit24
  %82 = load i8** %bufend_addr, align 8, !dbg !7851
  %83 = getelementptr inbounds i8* %82, i64 -1, !dbg !7851
  store i8* %83, i8** %bufend_addr, align 8, !dbg !7851
  %84 = load i32* %digit, align 4, !dbg !7851
  %85 = icmp ule i32 %84, 9, !dbg !7851
  %86 = load i32* %digit, align 4, !dbg !7851
  %87 = trunc i32 %86 to i8, !dbg !7851
  br i1 %85, label %bb9, label %bb10, !dbg !7851

bb9:                                              ; preds = %bb8
  %88 = add i8 %87, 48, !dbg !7851
  store i8 %88, i8* %iftmp.12, align 1, !dbg !7851
  br label %bb11, !dbg !7851

bb10:                                             ; preds = %bb8
  %89 = load i32* %alphacase_addr, align 4, !dbg !7851
  %90 = trunc i32 %89 to i8, !dbg !7851
  %91 = add i8 %87, %90, !dbg !7851
  store i8 %91, i8* %iftmp.12, align 1, !dbg !7851
  br label %bb11, !dbg !7851

bb11:                                             ; preds = %bb10, %bb9
  %92 = load i8** %bufend_addr, align 8, !dbg !7851
  %93 = load i8* %iftmp.12, align 1, !dbg !7851
  store i8 %93, i8* %92, align 1, !dbg !7851
  %94 = load i32* %low, align 4, !dbg !7852
  %95 = load i32* %high, align 4, !dbg !7852
  %96 = or i32 %94, %95, !dbg !7852
  %97 = icmp ne i32 %96, 0, !dbg !7852
  br i1 %97, label %bb5, label %bb12, !dbg !7852

bb12:                                             ; preds = %bb11
  %98 = load i32* %negative, align 4, !dbg !7853
  %99 = icmp ne i32 %98, 0, !dbg !7853
  br i1 %99, label %bb13, label %bb14, !dbg !7853

bb13:                                             ; preds = %bb12
  %100 = load i8** %bufend_addr, align 8, !dbg !7854
  %101 = getelementptr inbounds i8* %100, i64 -1, !dbg !7854
  store i8* %101, i8** %bufend_addr, align 8, !dbg !7854
  %102 = load i8** %bufend_addr, align 8, !dbg !7854
  store i8 45, i8* %102, align 1, !dbg !7854
  br label %bb14, !dbg !7854

bb14:                                             ; preds = %bb13, %bb12
  %103 = load i8** %bufend_addr, align 8, !dbg !7855
  store i8* %103, i8** %0, align 8, !dbg !7855
  %104 = load i8** %0, align 8, !dbg !7855
  store i8* %104, i8** %retval, align 8, !dbg !7855
  %retval15 = load i8** %retval, !dbg !7855
  ret i8* %retval15, !dbg !7855
}

define i8* @strpbrk(i8* %s1, i8* %s2) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8** %s1_addr, align 8, !dbg !7856
  store i8* %1, i8** %s, align 8, !dbg !7856
  br label %bb6, !dbg !7856

bb:                                               ; preds = %bb6
  %2 = load i8** %s2_addr, align 8, !dbg !7858
  store i8* %2, i8** %p, align 8, !dbg !7858
  br label %bb4, !dbg !7858

bb1:                                              ; preds = %bb4
  %3 = load i8** %p, align 8, !dbg !7859
  %4 = load i8* %3, align 1, !dbg !7859
  %5 = load i8** %s, align 8, !dbg !7859
  %6 = load i8* %5, align 1, !dbg !7859
  %7 = icmp eq i8 %4, %6, !dbg !7859
  br i1 %7, label %bb2, label %bb3, !dbg !7859

bb2:                                              ; preds = %bb1
  %8 = load i8** %s, align 8, !dbg !7859
  store i8* %8, i8** %0, align 8, !dbg !7859
  br label %bb8, !dbg !7859

bb3:                                              ; preds = %bb1
  %9 = load i8** %p, align 8, !dbg !7858
  %10 = getelementptr inbounds i8* %9, i64 1, !dbg !7858
  store i8* %10, i8** %p, align 8, !dbg !7858
  br label %bb4, !dbg !7858

bb4:                                              ; preds = %bb3, %bb
  %11 = load i8** %p, align 8, !dbg !7858
  %12 = load i8* %11, align 1, !dbg !7858
  %13 = icmp ne i8 %12, 0, !dbg !7858
  br i1 %13, label %bb1, label %bb5, !dbg !7858

bb5:                                              ; preds = %bb4
  %14 = load i8** %s, align 8, !dbg !7856
  %15 = getelementptr inbounds i8* %14, i64 1, !dbg !7856
  store i8* %15, i8** %s, align 8, !dbg !7856
  br label %bb6, !dbg !7856

bb6:                                              ; preds = %bb5, %entry
  %16 = load i8** %s, align 8, !dbg !7856
  %17 = load i8* %16, align 1, !dbg !7856
  %18 = icmp ne i8 %17, 0, !dbg !7856
  br i1 %18, label %bb, label %bb7, !dbg !7856

bb7:                                              ; preds = %bb6
  store i8* null, i8** %0, align 8, !dbg !7860
  br label %bb8, !dbg !7860

bb8:                                              ; preds = %bb7, %bb2
  %19 = load i8** %0, align 8, !dbg !7859
  store i8* %19, i8** %retval, align 8, !dbg !7859
  %retval9 = load i8** %retval, !dbg !7859
  ret i8* %retval9, !dbg !7859
}

define i64 @strtol(i8* noalias %str, i8** noalias %endptr, i32 %base) nounwind {
entry:
  %str_addr = alloca i8*, align 8
  %endptr_addr = alloca i8**, align 8
  %base_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %str, i8** %str_addr
  store i8** %endptr, i8*** %endptr_addr
  store i32 %base, i32* %base_addr
  %1 = load i8** %str_addr, align 8, !dbg !7861
  %2 = load i8*** %endptr_addr, align 8, !dbg !7861
  %3 = load i32* %base_addr, align 4, !dbg !7861
  %4 = call i64 @_stdlib_strto_l(i8* noalias %1, i8** noalias %2, i32 %3, i32 1) nounwind, !dbg !7861
  store i64 %4, i64* %0, align 8, !dbg !7861
  %5 = load i64* %0, align 8, !dbg !7861
  store i64 %5, i64* %retval, align 8, !dbg !7861
  %retval1 = load i64* %retval, !dbg !7861
  ret i64 %retval1, !dbg !7861
}

define i32 @tcgetattr(i32 %fd, %struct.termios* %termios_p) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %termios_p_addr = alloca %struct.termios*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %k_termios = alloca %struct.__kernel_termios
  %retval1 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store %struct.termios* %termios_p, %struct.termios** %termios_p_addr
  %1 = load i32* %fd_addr, align 4, !dbg !7863
  %2 = call i32 (i32, i64, ...)* @ioctl(i32 %1, i64 21505, %struct.__kernel_termios* %k_termios) nounwind, !dbg !7863
  store i32 %2, i32* %retval1, align 4, !dbg !7863
  %3 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 0, !dbg !7865
  %4 = load i32* %3, align 4, !dbg !7865
  %5 = load %struct.termios** %termios_p_addr, align 8, !dbg !7865
  %6 = getelementptr inbounds %struct.termios* %5, i32 0, i32 0, !dbg !7865
  store i32 %4, i32* %6, align 4, !dbg !7865
  %7 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 1, !dbg !7866
  %8 = load i32* %7, align 4, !dbg !7866
  %9 = load %struct.termios** %termios_p_addr, align 8, !dbg !7866
  %10 = getelementptr inbounds %struct.termios* %9, i32 0, i32 1, !dbg !7866
  store i32 %8, i32* %10, align 4, !dbg !7866
  %11 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 2, !dbg !7867
  %12 = load i32* %11, align 4, !dbg !7867
  %13 = load %struct.termios** %termios_p_addr, align 8, !dbg !7867
  %14 = getelementptr inbounds %struct.termios* %13, i32 0, i32 2, !dbg !7867
  store i32 %12, i32* %14, align 4, !dbg !7867
  %15 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 3, !dbg !7868
  %16 = load i32* %15, align 4, !dbg !7868
  %17 = load %struct.termios** %termios_p_addr, align 8, !dbg !7868
  %18 = getelementptr inbounds %struct.termios* %17, i32 0, i32 3, !dbg !7868
  store i32 %16, i32* %18, align 4, !dbg !7868
  %19 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 4, !dbg !7869
  %20 = load i8* %19, align 4, !dbg !7869
  %21 = load %struct.termios** %termios_p_addr, align 8, !dbg !7869
  %22 = getelementptr inbounds %struct.termios* %21, i32 0, i32 4, !dbg !7869
  store i8 %20, i8* %22, align 4, !dbg !7869
  %23 = load %struct.termios** %termios_p_addr, align 8, !dbg !7870
  %24 = getelementptr inbounds %struct.termios* %23, i32 0, i32 5, !dbg !7870
  %25 = getelementptr inbounds [32 x i8]* %24, i64 0, i64 0, !dbg !7870
  %26 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 5, !dbg !7870
  %27 = getelementptr inbounds [19 x i8]* %26, i64 0, i64 0, !dbg !7870
  %28 = call i8* @mempcpy(i8* noalias %25, i8* noalias %27, i64 19) nounwind, !dbg !7870
  %29 = call i8* @memset(i8* %28, i32 0, i64 13) nounwind, !dbg !7870
  %30 = load i32* %retval1, align 4, !dbg !7871
  store i32 %30, i32* %0, align 4, !dbg !7871
  %31 = load i32* %0, align 4, !dbg !7871
  store i32 %31, i32* %retval, align 4, !dbg !7871
  %retval2 = load i32* %retval, !dbg !7871
  ret i32 %retval2, !dbg !7871
}

define i64 @wcrtomb(i8* noalias %s, i32 %wc, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %wc_addr = alloca i32, align 4
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %wcbuf = alloca [1 x i32]
  %pwc = alloca i32*
  %r = alloca i64
  %buf = alloca [16 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %wc, i32* %wc_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load i8** %s_addr, align 8, !dbg !7872
  %2 = icmp eq i8* %1, null, !dbg !7872
  br i1 %2, label %bb, label %bb2, !dbg !7872

bb:                                               ; preds = %entry
  %buf1 = bitcast [16 x i8]* %buf to i8*, !dbg !7874
  store i8* %buf1, i8** %s_addr, align 8, !dbg !7874
  store i32 0, i32* %wc_addr, align 4, !dbg !7875
  br label %bb2, !dbg !7875

bb2:                                              ; preds = %bb, %entry
  %wcbuf3 = bitcast [1 x i32]* %wcbuf to i32*, !dbg !7876
  store i32* %wcbuf3, i32** %pwc, align 8, !dbg !7876
  %3 = getelementptr inbounds [1 x i32]* %wcbuf, i64 0, i64 0, !dbg !7877
  %4 = load i32* %wc_addr, align 4, !dbg !7877
  store i32 %4, i32* %3, align 4, !dbg !7877
  %5 = load i8** %s_addr, align 8, !dbg !7878
  %6 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !7878
  %7 = call i64 @wcsnrtombs(i8* noalias %5, i32** noalias %pwc, i64 1, i64 16, %struct.__mbstate_t* noalias %6) nounwind, !dbg !7878
  store i64 %7, i64* %r, align 8, !dbg !7878
  %8 = load i64* %r, align 8, !dbg !7879
  %9 = icmp ne i64 %8, 0, !dbg !7879
  br i1 %9, label %bb4, label %bb5, !dbg !7879

bb4:                                              ; preds = %bb2
  %10 = load i64* %r, align 8, !dbg !7879
  store i64 %10, i64* %iftmp.0, align 8, !dbg !7879
  br label %bb6, !dbg !7879

bb5:                                              ; preds = %bb2
  store i64 1, i64* %iftmp.0, align 8, !dbg !7879
  br label %bb6, !dbg !7879

bb6:                                              ; preds = %bb5, %bb4
  %11 = load i64* %iftmp.0, align 8, !dbg !7879
  store i64 %11, i64* %0, align 8, !dbg !7879
  %12 = load i64* %0, align 8, !dbg !7879
  store i64 %12, i64* %retval, align 8, !dbg !7879
  %retval7 = load i64* %retval, !dbg !7879
  ret i64 %retval7, !dbg !7879
}

define i64 @wcsnrtombs(i8* noalias %dst, i32** noalias %src, i64 %NWC, i64 %len, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %dst_addr = alloca i8*, align 8
  %src_addr = alloca i32**, align 8
  %NWC_addr = alloca i64, align 8
  %len_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %s = alloca i32*
  %count = alloca i64
  %incr = alloca i32
  %buf = alloca [16 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dst, i8** %dst_addr
  store i32** %src, i32*** %src_addr
  store i64 %NWC, i64* %NWC_addr
  store i64 %len, i64* %len_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  store i32 1, i32* %incr, align 4, !dbg !7880
  %1 = load i8** %dst_addr, align 8, !dbg !7882
  %2 = icmp eq i8* %1, null, !dbg !7882
  br i1 %2, label %bb1, label %bb, !dbg !7882

bb:                                               ; preds = %entry
  %3 = load i32*** %src_addr, align 8, !dbg !7882
  %4 = bitcast i32** %3 to i8*, !dbg !7882
  %5 = load i8** %dst_addr, align 8, !dbg !7882
  %6 = icmp eq i8* %5, %4, !dbg !7882
  br i1 %6, label %bb1, label %bb5, !dbg !7882

bb1:                                              ; preds = %bb, %entry
  %7 = load i8** %dst_addr, align 8, !dbg !7883
  %8 = icmp eq i8* %7, null, !dbg !7883
  br i1 %8, label %bb2, label %bb3, !dbg !7883

bb2:                                              ; preds = %bb1
  store i64 -1, i64* %len_addr, align 8, !dbg !7884
  br label %bb3, !dbg !7884

bb3:                                              ; preds = %bb2, %bb1
  %buf4 = bitcast [16 x i8]* %buf to i8*, !dbg !7885
  store i8* %buf4, i8** %dst_addr, align 8, !dbg !7885
  store i32 0, i32* %incr, align 4, !dbg !7886
  br label %bb5, !dbg !7886

bb5:                                              ; preds = %bb3, %bb
  %9 = load i64* %len_addr, align 8, !dbg !7887
  %10 = load i64* %NWC_addr, align 8, !dbg !7887
  %11 = icmp ugt i64 %9, %10, !dbg !7887
  br i1 %11, label %bb6, label %bb7, !dbg !7887

bb6:                                              ; preds = %bb5
  %12 = load i64* %NWC_addr, align 8, !dbg !7888
  store i64 %12, i64* %len_addr, align 8, !dbg !7888
  br label %bb7, !dbg !7888

bb7:                                              ; preds = %bb6, %bb5
  %13 = load i64* %len_addr, align 8, !dbg !7889
  store i64 %13, i64* %count, align 8, !dbg !7889
  %14 = load i32*** %src_addr, align 8, !dbg !7890
  %15 = load i32** %14, align 8, !dbg !7890
  store i32* %15, i32** %s, align 8, !dbg !7890
  br label %bb13, !dbg !7890

bb8:                                              ; preds = %bb13
  %16 = load i32** %s, align 8, !dbg !7891
  %17 = load i32* %16, align 4, !dbg !7891
  %18 = icmp ugt i32 %17, 127, !dbg !7891
  br i1 %18, label %bb9, label %bb10, !dbg !7891

bb9:                                              ; preds = %bb8
  store i32 84, i32* @errno, align 4, !dbg !7892
  store i64 -1, i64* %0, align 8, !dbg !7893
  br label %bb18, !dbg !7893

bb10:                                             ; preds = %bb8
  %19 = load i32** %s, align 8, !dbg !7894
  %20 = load i32* %19, align 4, !dbg !7894
  %21 = trunc i32 %20 to i8, !dbg !7894
  %22 = load i8** %dst_addr, align 8, !dbg !7894
  store i8 %21, i8* %22, align 1, !dbg !7894
  %23 = load i8** %dst_addr, align 8, !dbg !7894
  %24 = load i8* %23, align 1, !dbg !7894
  %25 = icmp eq i8 %24, 0, !dbg !7894
  br i1 %25, label %bb11, label %bb12, !dbg !7894

bb11:                                             ; preds = %bb10
  store i32* null, i32** %s, align 8, !dbg !7895
  br label %bb14, !dbg !7895

bb12:                                             ; preds = %bb10
  %26 = load i32** %s, align 8, !dbg !7896
  %27 = getelementptr inbounds i32* %26, i64 1, !dbg !7896
  store i32* %27, i32** %s, align 8, !dbg !7896
  %28 = load i8** %dst_addr, align 8, !dbg !7897
  %29 = load i32* %incr, align 4, !dbg !7897
  %30 = sext i32 %29 to i64, !dbg !7897
  %31 = getelementptr inbounds i8* %28, i64 %30, !dbg !7897
  store i8* %31, i8** %dst_addr, align 8, !dbg !7897
  %32 = load i64* %count, align 8, !dbg !7898
  %33 = sub i64 %32, 1, !dbg !7898
  store i64 %33, i64* %count, align 8, !dbg !7898
  br label %bb13, !dbg !7898

bb13:                                             ; preds = %bb12, %bb7
  %34 = load i64* %count, align 8, !dbg !7899
  %35 = icmp ne i64 %34, 0, !dbg !7899
  br i1 %35, label %bb8, label %bb14, !dbg !7899

bb14:                                             ; preds = %bb13, %bb11
  %buf15 = bitcast [16 x i8]* %buf to i8*, !dbg !7900
  %36 = load i8** %dst_addr, align 8, !dbg !7900
  %37 = icmp ne i8* %buf15, %36, !dbg !7900
  br i1 %37, label %bb16, label %bb17, !dbg !7900

bb16:                                             ; preds = %bb14
  %38 = load i32** %s, align 8, !dbg !7901
  %39 = load i32*** %src_addr, align 8, !dbg !7901
  store i32* %38, i32** %39, align 8, !dbg !7901
  br label %bb17, !dbg !7901

bb17:                                             ; preds = %bb16, %bb14
  %40 = load i64* %len_addr, align 8, !dbg !7902
  %41 = load i64* %count, align 8, !dbg !7902
  %42 = sub i64 %40, %41, !dbg !7902
  store i64 %42, i64* %0, align 8, !dbg !7902
  br label %bb18, !dbg !7902

bb18:                                             ; preds = %bb17, %bb9
  %43 = load i64* %0, align 8, !dbg !7893
  store i64 %43, i64* %retval, align 8, !dbg !7893
  %retval19 = load i64* %retval, !dbg !7893
  ret i64 %retval19, !dbg !7893
}

define hidden x86_fp80 @__strtofpmax(i8* %str, i8** %endptr, i32 %exponent_power) nounwind {
entry:
  %str_addr = alloca i8*, align 8
  %endptr_addr = alloca i8**, align 8
  %exponent_power_addr = alloca i32, align 4
  %retval = alloca x86_fp80
  %0 = alloca x86_fp80
  %number = alloca x86_fp80
  %p_base = alloca x86_fp80
  %pos0 = alloca i8*
  %pos1 = alloca i8*
  %pos = alloca i8*
  %exponent_temp = alloca i32
  %negative = alloca i32
  %num_digits = alloca i32
  %i = alloca i32
  %j = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %str, i8** %str_addr
  store i8** %endptr, i8*** %endptr_addr
  store i32 %exponent_power, i32* %exponent_power_addr
  store x86_fp80 0xK4002A000000000000000, x86_fp80* %p_base, align 16, !dbg !7903
  %1 = load i8** %str_addr, align 8, !dbg !7905
  store i8* %1, i8** %pos, align 8, !dbg !7905
  br label %bb1, !dbg !7905

bb:                                               ; preds = %bb1
  %2 = load i8** %pos, align 8, !dbg !7906
  %3 = getelementptr inbounds i8* %2, i64 1, !dbg !7906
  store i8* %3, i8** %pos, align 8, !dbg !7906
  br label %bb1, !dbg !7906

bb1:                                              ; preds = %bb, %entry
  %4 = load i16** @__ctype_b, align 8, !dbg !7907
  %5 = load i8** %pos, align 8, !dbg !7907
  %6 = load i8* %5, align 1, !dbg !7907
  %7 = sext i8 %6 to i32, !dbg !7907
  %8 = sext i32 %7 to i64, !dbg !7907
  %9 = getelementptr inbounds i16* %4, i64 %8, !dbg !7907
  %10 = load i16* %9, align 1, !dbg !7907
  %11 = zext i16 %10 to i32, !dbg !7907
  %12 = and i32 %11, 8192, !dbg !7907
  %13 = icmp ne i32 %12, 0, !dbg !7907
  br i1 %13, label %bb, label %bb2, !dbg !7907

bb2:                                              ; preds = %bb1
  store i32 0, i32* %negative, align 4, !dbg !7908
  %14 = load i8** %pos, align 8, !dbg !7909
  %15 = load i8* %14, align 1, !dbg !7909
  %16 = sext i8 %15 to i32, !dbg !7909
  switch i32 %16, label %bb5 [
    i32 43, label %bb4
    i32 45, label %bb3
  ], !dbg !7909

bb3:                                              ; preds = %bb2
  store i32 1, i32* %negative, align 4, !dbg !7910
  br label %bb4, !dbg !7910

bb4:                                              ; preds = %bb3, %bb2
  %17 = load i8** %pos, align 8, !dbg !7911
  %18 = getelementptr inbounds i8* %17, i64 1, !dbg !7911
  store i8* %18, i8** %pos, align 8, !dbg !7911
  br label %bb5, !dbg !7911

bb5:                                              ; preds = %bb4, %bb2
  store x86_fp80 0xK00000000000000000000, x86_fp80* %number, align 16, !dbg !7912
  store i32 -1, i32* %num_digits, align 4, !dbg !7913
  store i8* null, i8** %pos0, align 8, !dbg !7914
  br label %bb13, !dbg !7915

bb6:                                              ; preds = %bb13
  %19 = load i32* %num_digits, align 4, !dbg !7916
  %20 = icmp slt i32 %19, 0, !dbg !7916
  br i1 %20, label %bb7, label %bb8, !dbg !7916

bb7:                                              ; preds = %bb6
  %21 = load i32* %num_digits, align 4, !dbg !7917
  %22 = add nsw i32 %21, 1, !dbg !7917
  store i32 %22, i32* %num_digits, align 4, !dbg !7917
  br label %bb8, !dbg !7917

bb8:                                              ; preds = %bb7, %bb6
  %23 = load i32* %num_digits, align 4, !dbg !7918
  %24 = icmp ne i32 %23, 0, !dbg !7918
  br i1 %24, label %bb10, label %bb9, !dbg !7918

bb9:                                              ; preds = %bb8
  %25 = load i8** %pos, align 8, !dbg !7918
  %26 = load i8* %25, align 1, !dbg !7918
  %27 = icmp ne i8 %26, 48, !dbg !7918
  br i1 %27, label %bb10, label %bb12, !dbg !7918

bb10:                                             ; preds = %bb9, %bb8
  %28 = load i32* %num_digits, align 4, !dbg !7919
  %29 = add nsw i32 %28, 1, !dbg !7919
  store i32 %29, i32* %num_digits, align 4, !dbg !7919
  %30 = load i32* %num_digits, align 4, !dbg !7920
  %31 = icmp sle i32 %30, 21, !dbg !7920
  br i1 %31, label %bb11, label %bb12, !dbg !7920

bb11:                                             ; preds = %bb10
  %32 = load x86_fp80* %number, align 16, !dbg !7921
  %33 = load x86_fp80* %p_base, align 16, !dbg !7921
  %34 = fmul x86_fp80 %32, %33, !dbg !7921
  %35 = load i8** %pos, align 8, !dbg !7921
  %36 = load i8* %35, align 1, !dbg !7921
  %37 = sext i8 %36 to i32, !dbg !7921
  %38 = sub nsw i32 %37, 48, !dbg !7921
  %39 = sitofp i32 %38 to x86_fp80, !dbg !7921
  %40 = fadd x86_fp80 %34, %39, !dbg !7921
  store x86_fp80 %40, x86_fp80* %number, align 16, !dbg !7921
  br label %bb12, !dbg !7921

bb12:                                             ; preds = %bb11, %bb10, %bb9
  %41 = load i8** %pos, align 8, !dbg !7922
  %42 = getelementptr inbounds i8* %41, i64 1, !dbg !7922
  store i8* %42, i8** %pos, align 8, !dbg !7922
  br label %bb13, !dbg !7922

bb13:                                             ; preds = %bb5, %bb16, %bb12
  %43 = load i16** @__ctype_b, align 8, !dbg !7923
  %44 = load i8** %pos, align 8, !dbg !7923
  %45 = load i8* %44, align 1, !dbg !7923
  %46 = sext i8 %45 to i32, !dbg !7923
  %47 = sext i32 %46 to i64, !dbg !7923
  %48 = getelementptr inbounds i16* %43, i64 %47, !dbg !7923
  %49 = load i16* %48, align 1, !dbg !7923
  %50 = zext i16 %49 to i32, !dbg !7923
  %51 = and i32 %50, 2048, !dbg !7923
  %52 = icmp ne i32 %51, 0, !dbg !7923
  br i1 %52, label %bb6, label %bb14, !dbg !7923

bb14:                                             ; preds = %bb13
  %53 = load i8** %pos, align 8, !dbg !7924
  %54 = load i8* %53, align 1, !dbg !7924
  %55 = icmp eq i8 %54, 46, !dbg !7924
  br i1 %55, label %bb15, label %bb17, !dbg !7924

bb15:                                             ; preds = %bb14
  %56 = load i8** %pos0, align 8, !dbg !7924
  %57 = icmp eq i8* %56, null, !dbg !7924
  br i1 %57, label %bb16, label %bb17, !dbg !7924

bb16:                                             ; preds = %bb15
  %58 = load i8** %pos, align 8, !dbg !7925
  %59 = getelementptr inbounds i8* %58, i64 1, !dbg !7925
  store i8* %59, i8** %pos, align 8, !dbg !7925
  %60 = load i8** %pos, align 8, !dbg !7925
  store i8* %60, i8** %pos0, align 8, !dbg !7925
  br label %bb13, !dbg !7925

bb17:                                             ; preds = %bb15, %bb14
  %61 = load i32* %num_digits, align 4, !dbg !7926
  %62 = icmp slt i32 %61, 0, !dbg !7926
  br i1 %62, label %bb18, label %bb28, !dbg !7926

bb18:                                             ; preds = %bb17
  %63 = load i8** %pos0, align 8, !dbg !7927
  %64 = icmp eq i8* %63, null, !dbg !7927
  br i1 %64, label %bb19, label %bb27, !dbg !7927

bb19:                                             ; preds = %bb18
  store i32 0, i32* %i, align 4, !dbg !7928
  br label %bb20, !dbg !7928

bb20:                                             ; preds = %bb26, %bb19
  store i32 0, i32* %j, align 4, !dbg !7930
  br label %bb25, !dbg !7930

bb21:                                             ; preds = %bb25
  %65 = load i32* %j, align 4, !dbg !7932
  %66 = add nsw i32 %65, 1, !dbg !7932
  store i32 %66, i32* %j, align 4, !dbg !7932
  %67 = load i32* %i, align 4, !dbg !7933
  %68 = add nsw i32 %67, 1, !dbg !7933
  %69 = load i32* %j, align 4, !dbg !7933
  %70 = add nsw i32 %68, %69, !dbg !7933
  %71 = sext i32 %70 to i64, !dbg !7933
  %72 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %71, !dbg !7933
  %73 = load i8* %72, align 1, !dbg !7933
  %74 = icmp eq i8 %73, 0, !dbg !7933
  br i1 %74, label %bb22, label %bb25, !dbg !7933

bb22:                                             ; preds = %bb21
  %75 = load i32* %i, align 4, !dbg !7934
  %76 = sitofp i32 %75 to double, !dbg !7934
  %77 = fdiv double %76, 0.000000e+00, !dbg !7934
  %78 = fpext double %77 to x86_fp80, !dbg !7934
  store x86_fp80 %78, x86_fp80* %number, align 16, !dbg !7934
  %79 = load i32* %negative, align 4, !dbg !7935
  %80 = icmp ne i32 %79, 0, !dbg !7935
  br i1 %80, label %bb23, label %bb24, !dbg !7935

bb23:                                             ; preds = %bb22
  %81 = load x86_fp80* %number, align 16, !dbg !7936
  %82 = fsub x86_fp80 0xK80000000000000000000, %81, !dbg !7936
  store x86_fp80 %82, x86_fp80* %number, align 16, !dbg !7936
  br label %bb24, !dbg !7936

bb24:                                             ; preds = %bb23, %bb22
  %83 = load i32* %i, align 4, !dbg !7937
  %84 = sext i32 %83 to i64, !dbg !7937
  %85 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %84, !dbg !7937
  %86 = load i8* %85, align 1, !dbg !7937
  %87 = sext i8 %86 to i32, !dbg !7937
  %88 = sub nsw i32 %87, 2, !dbg !7937
  %89 = load i8** %pos, align 8, !dbg !7937
  %90 = sext i32 %88 to i64, !dbg !7937
  %91 = getelementptr inbounds i8* %89, i64 %90, !dbg !7937
  store i8* %91, i8** %pos, align 8, !dbg !7937
  br label %DONE, !dbg !7937

bb25:                                             ; preds = %bb21, %bb20
  %92 = load i16** @__ctype_tolower, align 8, !dbg !7938
  %93 = load i8** %pos, align 8, !dbg !7938
  %94 = load i32* %j, align 4, !dbg !7938
  %95 = sext i32 %94 to i64, !dbg !7938
  %96 = getelementptr inbounds i8* %93, i64 %95, !dbg !7938
  %97 = load i8* %96, align 1, !dbg !7938
  %98 = sext i8 %97 to i32, !dbg !7938
  %99 = sext i32 %98 to i64, !dbg !7938
  %100 = getelementptr inbounds i16* %92, i64 %99, !dbg !7938
  %101 = load i16* %100, align 1, !dbg !7938
  %102 = load i32* %i, align 4, !dbg !7938
  %103 = add nsw i32 %102, 1, !dbg !7938
  %104 = load i32* %j, align 4, !dbg !7938
  %105 = add nsw i32 %103, %104, !dbg !7938
  %106 = sext i32 %105 to i64, !dbg !7938
  %107 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %106, !dbg !7938
  %108 = load i8* %107, align 1, !dbg !7938
  %109 = sext i8 %108 to i16, !dbg !7938
  %110 = icmp eq i16 %101, %109, !dbg !7938
  br i1 %110, label %bb21, label %bb26, !dbg !7938

bb26:                                             ; preds = %bb25
  %111 = load i32* %i, align 4, !dbg !7939
  %112 = sext i32 %111 to i64, !dbg !7939
  %113 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %112, !dbg !7939
  %114 = load i8* %113, align 1, !dbg !7939
  %115 = sext i8 %114 to i32, !dbg !7939
  %116 = load i32* %i, align 4, !dbg !7939
  %117 = add nsw i32 %115, %116, !dbg !7939
  store i32 %117, i32* %i, align 4, !dbg !7939
  %118 = load i32* %i, align 4, !dbg !7940
  %119 = sext i32 %118 to i64, !dbg !7940
  %120 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %119, !dbg !7940
  %121 = load i8* %120, align 1, !dbg !7940
  %122 = icmp ne i8 %121, 0, !dbg !7940
  br i1 %122, label %bb20, label %bb27, !dbg !7940

bb27:                                             ; preds = %bb26, %bb18
  %123 = load i8** %str_addr, align 8, !dbg !7941
  store i8* %123, i8** %pos, align 8, !dbg !7941
  br label %DONE, !dbg !7941

bb28:                                             ; preds = %bb17
  %124 = load i32* %num_digits, align 4, !dbg !7942
  %125 = icmp sgt i32 %124, 21, !dbg !7942
  br i1 %125, label %bb29, label %bb30, !dbg !7942

bb29:                                             ; preds = %bb28
  %126 = load i32* %num_digits, align 4, !dbg !7943
  %127 = sub nsw i32 %126, 21, !dbg !7943
  %128 = load i32* %exponent_power_addr, align 4, !dbg !7943
  %129 = add nsw i32 %127, %128, !dbg !7943
  store i32 %129, i32* %exponent_power_addr, align 4, !dbg !7943
  br label %bb30, !dbg !7943

bb30:                                             ; preds = %bb29, %bb28
  %130 = load i8** %pos0, align 8, !dbg !7944
  %131 = icmp ne i8* %130, null, !dbg !7944
  br i1 %131, label %bb31, label %bb32, !dbg !7944

bb31:                                             ; preds = %bb30
  %132 = load i8** %pos0, align 8, !dbg !7945
  %133 = ptrtoint i8* %132 to i64, !dbg !7945
  %134 = trunc i64 %133 to i32, !dbg !7945
  %135 = load i8** %pos, align 8, !dbg !7945
  %136 = ptrtoint i8* %135 to i64, !dbg !7945
  %137 = trunc i64 %136 to i32, !dbg !7945
  %138 = sub i32 %134, %137, !dbg !7945
  %139 = load i32* %exponent_power_addr, align 4, !dbg !7945
  %140 = add i32 %138, %139, !dbg !7945
  store i32 %140, i32* %exponent_power_addr, align 4, !dbg !7945
  br label %bb32, !dbg !7945

bb32:                                             ; preds = %bb31, %bb30
  %141 = load i32* %negative, align 4, !dbg !7946
  %142 = icmp ne i32 %141, 0, !dbg !7946
  br i1 %142, label %bb33, label %bb34, !dbg !7946

bb33:                                             ; preds = %bb32
  %143 = load x86_fp80* %number, align 16, !dbg !7947
  %144 = fsub x86_fp80 0xK80000000000000000000, %143, !dbg !7947
  store x86_fp80 %144, x86_fp80* %number, align 16, !dbg !7947
  br label %bb34, !dbg !7947

bb34:                                             ; preds = %bb33, %bb32
  %145 = load i8** %pos, align 8, !dbg !7948
  %146 = load i8* %145, align 1, !dbg !7948
  %147 = or i8 %146, 32, !dbg !7948
  %148 = icmp eq i8 %147, 101, !dbg !7948
  br i1 %148, label %bb35, label %bb46, !dbg !7948

bb35:                                             ; preds = %bb34
  %149 = load i8** %pos, align 8, !dbg !7949
  store i8* %149, i8** %pos1, align 8, !dbg !7949
  store i32 1, i32* %negative, align 4, !dbg !7950
  %150 = load i8** %pos, align 8, !dbg !7951
  %151 = getelementptr inbounds i8* %150, i64 1, !dbg !7951
  store i8* %151, i8** %pos, align 8, !dbg !7951
  %152 = load i8** %pos, align 8, !dbg !7951
  %153 = load i8* %152, align 1, !dbg !7951
  %154 = sext i8 %153 to i32, !dbg !7951
  switch i32 %154, label %bb38 [
    i32 43, label %bb37
    i32 45, label %bb36
  ], !dbg !7951

bb36:                                             ; preds = %bb35
  store i32 -1, i32* %negative, align 4, !dbg !7952
  br label %bb37, !dbg !7952

bb37:                                             ; preds = %bb36, %bb35
  %155 = load i8** %pos, align 8, !dbg !7953
  %156 = getelementptr inbounds i8* %155, i64 1, !dbg !7953
  store i8* %156, i8** %pos, align 8, !dbg !7953
  br label %bb38, !dbg !7953

bb38:                                             ; preds = %bb37, %bb35
  %157 = load i8** %pos, align 8, !dbg !7954
  store i8* %157, i8** %pos0, align 8, !dbg !7954
  store i32 0, i32* %exponent_temp, align 4, !dbg !7955
  br label %bb42, !dbg !7955

bb39:                                             ; preds = %bb42
  %158 = load i32* %exponent_temp, align 4, !dbg !7956
  %159 = icmp sle i32 %158, 4972, !dbg !7956
  br i1 %159, label %bb40, label %bb41, !dbg !7956

bb40:                                             ; preds = %bb39
  %160 = load i32* %exponent_temp, align 4, !dbg !7957
  %161 = mul nsw i32 %160, 10, !dbg !7957
  %162 = load i8** %pos, align 8, !dbg !7957
  %163 = load i8* %162, align 1, !dbg !7957
  %164 = sext i8 %163 to i32, !dbg !7957
  %165 = sub nsw i32 %164, 48, !dbg !7957
  %166 = add nsw i32 %161, %165, !dbg !7957
  store i32 %166, i32* %exponent_temp, align 4, !dbg !7957
  br label %bb41, !dbg !7957

bb41:                                             ; preds = %bb40, %bb39
  %167 = load i8** %pos, align 8, !dbg !7958
  %168 = getelementptr inbounds i8* %167, i64 1, !dbg !7958
  store i8* %168, i8** %pos, align 8, !dbg !7958
  br label %bb42, !dbg !7958

bb42:                                             ; preds = %bb41, %bb38
  %169 = load i16** @__ctype_b, align 8, !dbg !7959
  %170 = load i8** %pos, align 8, !dbg !7959
  %171 = load i8* %170, align 1, !dbg !7959
  %172 = sext i8 %171 to i32, !dbg !7959
  %173 = sext i32 %172 to i64, !dbg !7959
  %174 = getelementptr inbounds i16* %169, i64 %173, !dbg !7959
  %175 = load i16* %174, align 1, !dbg !7959
  %176 = zext i16 %175 to i32, !dbg !7959
  %177 = and i32 %176, 2048, !dbg !7959
  %178 = icmp ne i32 %177, 0, !dbg !7959
  br i1 %178, label %bb39, label %bb43, !dbg !7959

bb43:                                             ; preds = %bb42
  %179 = load i8** %pos, align 8, !dbg !7960
  %180 = load i8** %pos0, align 8, !dbg !7960
  %181 = icmp eq i8* %179, %180, !dbg !7960
  br i1 %181, label %bb44, label %bb45, !dbg !7960

bb44:                                             ; preds = %bb43
  %182 = load i8** %pos1, align 8, !dbg !7961
  store i8* %182, i8** %pos, align 8, !dbg !7961
  br label %bb45, !dbg !7961

bb45:                                             ; preds = %bb44, %bb43
  %183 = load i32* %negative, align 4, !dbg !7962
  %184 = load i32* %exponent_temp, align 4, !dbg !7962
  %185 = mul nsw i32 %183, %184, !dbg !7962
  %186 = load i32* %exponent_power_addr, align 4, !dbg !7962
  %187 = add nsw i32 %185, %186, !dbg !7962
  store i32 %187, i32* %exponent_power_addr, align 4, !dbg !7962
  br label %bb46, !dbg !7962

bb46:                                             ; preds = %bb45, %bb34
  %188 = load x86_fp80* %number, align 16, !dbg !7963
  %189 = fcmp oeq x86_fp80 %188, 0xK00000000000000000000, !dbg !7963
  br i1 %189, label %DONE, label %bb47, !dbg !7963

bb47:                                             ; preds = %bb46
  %190 = load i32* %exponent_power_addr, align 4, !dbg !7964
  store i32 %190, i32* %exponent_temp, align 4, !dbg !7964
  %191 = load i32* %exponent_temp, align 4, !dbg !7965
  %192 = icmp slt i32 %191, 0, !dbg !7965
  br i1 %192, label %bb48, label %bb55, !dbg !7965

bb48:                                             ; preds = %bb47
  %193 = load i32* %exponent_temp, align 4, !dbg !7966
  %194 = sub nsw i32 0, %193, !dbg !7966
  store i32 %194, i32* %exponent_temp, align 4, !dbg !7966
  br label %bb55, !dbg !7966

bb50:                                             ; preds = %bb55
  %195 = load i32* %exponent_temp, align 4, !dbg !7967
  %196 = and i32 %195, 1, !dbg !7967
  %197 = trunc i32 %196 to i8, !dbg !7967
  %toBool = icmp ne i8 %197, 0, !dbg !7967
  br i1 %toBool, label %bb51, label %bb54, !dbg !7967

bb51:                                             ; preds = %bb50
  %198 = load i32* %exponent_power_addr, align 4, !dbg !7968
  %199 = icmp slt i32 %198, 0, !dbg !7968
  %200 = load x86_fp80* %number, align 16, !dbg !7969
  %201 = load x86_fp80* %p_base, align 16, !dbg !7969
  br i1 %199, label %bb52, label %bb53, !dbg !7968

bb52:                                             ; preds = %bb51
  %202 = fdiv x86_fp80 %200, %201, !dbg !7969
  store x86_fp80 %202, x86_fp80* %number, align 16, !dbg !7969
  br label %bb54, !dbg !7969

bb53:                                             ; preds = %bb51
  %203 = fmul x86_fp80 %200, %201, !dbg !7970
  store x86_fp80 %203, x86_fp80* %number, align 16, !dbg !7970
  br label %bb54, !dbg !7970

bb54:                                             ; preds = %bb53, %bb52, %bb50
  %204 = load i32* %exponent_temp, align 4, !dbg !7971
  %int_cast_to_i64 = zext i32 1 to i64
  %205 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %205, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb54
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb54
  %206 = ashr i32 %204, 1, !dbg !7971
  store i32 %206, i32* %exponent_temp, align 4, !dbg !7971
  %207 = load x86_fp80* %p_base, align 16, !dbg !7972
  %208 = load x86_fp80* %p_base, align 16, !dbg !7972
  %209 = fmul x86_fp80 %207, %208, !dbg !7972
  store x86_fp80 %209, x86_fp80* %p_base, align 16, !dbg !7972
  br label %bb55, !dbg !7972

bb55:                                             ; preds = %bb47, %bb48, %klee_overshift_check.exit
  %210 = load i32* %exponent_temp, align 4, !dbg !7973
  %211 = icmp ne i32 %210, 0, !dbg !7973
  br i1 %211, label %bb50, label %bb56, !dbg !7973

bb56:                                             ; preds = %bb55
  %212 = load x86_fp80* %number, align 16, !dbg !7974
  %213 = fdiv x86_fp80 %212, 0xK40018000000000000000, !dbg !7974
  %214 = load x86_fp80* %number, align 16, !dbg !7974
  %215 = fcmp oeq x86_fp80 %213, %214, !dbg !7974
  br i1 %215, label %bb57, label %DONE, !dbg !7974

bb57:                                             ; preds = %bb56
  store i32 34, i32* @errno, align 4, !dbg !7975
  br label %DONE, !dbg !7976

DONE:                                             ; preds = %bb57, %bb56, %bb46, %bb27, %bb24
  %216 = load i8*** %endptr_addr, align 8, !dbg !7977
  %217 = icmp ne i8** %216, null, !dbg !7977
  br i1 %217, label %bb58, label %bb59, !dbg !7977

bb58:                                             ; preds = %DONE
  %218 = load i8*** %endptr_addr, align 8, !dbg !7978
  %219 = load i8** %pos, align 8, !dbg !7978
  store i8* %219, i8** %218, align 8, !dbg !7978
  br label %bb59, !dbg !7978

bb59:                                             ; preds = %bb58, %DONE
  %220 = load x86_fp80* %number, align 16, !dbg !7979
  store x86_fp80 %220, x86_fp80* %0, align 16, !dbg !7979
  %221 = load x86_fp80* %0, align 16, !dbg !7979
  store x86_fp80 %221, x86_fp80* %retval, align 16, !dbg !7979
  %retval60 = load x86_fp80* %retval, !dbg !7979
  ret x86_fp80 %retval60, !dbg !7979
}

define i32 @main(i32, i8**) {
entry:
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
}

define i32 @open(i8* %pathname, i32 %flags, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = and i32 %flags, 64, !dbg !7980
  %1 = icmp eq i32 %0, 0, !dbg !7980
  br i1 %1, label %bb8, label %bb, !dbg !7980

bb:                                               ; preds = %entry
  %ap12 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !7981
  call void @llvm.va_start(i8* %ap12), !dbg !7981
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !7982
  %3 = load i32* %2, align 8, !dbg !7982
  %4 = icmp ugt i32 %3, 47, !dbg !7982
  br i1 %4, label %bb4, label %bb3, !dbg !7982

bb3:                                              ; preds = %bb
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !7982
  %6 = load i8** %5, align 8, !dbg !7982
  %tmp = zext i32 %3 to i64
  %7 = ptrtoint i8* %6 to i64, !dbg !7982
  %8 = add i64 %7, %tmp, !dbg !7982
  %9 = inttoptr i64 %8 to i8*, !dbg !7982
  %10 = add i32 %3, 8, !dbg !7982
  store i32 %10, i32* %2, align 8, !dbg !7982
  br label %bb5, !dbg !7982

bb4:                                              ; preds = %bb
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !7982
  %12 = load i8** %11, align 8, !dbg !7982
  %13 = getelementptr inbounds i8* %12, i64 8, !dbg !7982
  store i8* %13, i8** %11, align 8, !dbg !7982
  br label %bb5, !dbg !7982

bb5:                                              ; preds = %bb4, %bb3
  %addr.27.0 = phi i8* [ %12, %bb4 ], [ %9, %bb3 ]
  %14 = bitcast i8* %addr.27.0 to i32*, !dbg !7982
  %15 = load i32* %14, align 4, !dbg !7982
  call void @llvm.va_end(i8* %ap12), !dbg !7983
  br label %bb8, !dbg !7983

bb8:                                              ; preds = %bb5, %entry
  %mode.0 = phi i32 [ %15, %bb5 ], [ 0, %entry ]
  %16 = call i32 @__fd_open(i8* %pathname, i32 %flags, i32 %mode.0) nounwind, !dbg !7984
  ret i32 %16, !dbg !7984
}

declare void @llvm.dbg.value(metadata, i64, metadata) nounwind readnone

define weak i32 @fstat64(i32 %fd, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call i32 @__fd_fstat(i32 %fd, %struct.stat* %buf) nounwind, !dbg !7985
  ret i32 %0, !dbg !7985
}

define i32 @fstat(i32 %fd, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_fstat(i32 %fd, %struct.stat* %tmp) nounwind, !dbg !7987
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !7988
  %2 = load i64* %1, align 8, !dbg !7988
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !7988
  store i64 %2, i64* %3, align 8, !dbg !7988
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !7991
  %5 = load i64* %4, align 8, !dbg !7991
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !7991
  store i64 %5, i64* %6, align 8, !dbg !7991
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !7992
  %8 = load i32* %7, align 8, !dbg !7992
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !7992
  store i32 %8, i32* %9, align 8, !dbg !7992
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !7993
  %11 = load i64* %10, align 8, !dbg !7993
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !7993
  store i64 %11, i64* %12, align 8, !dbg !7993
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !7994
  %14 = load i32* %13, align 4, !dbg !7994
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !7994
  store i32 %14, i32* %15, align 4, !dbg !7994
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !7995
  %17 = load i32* %16, align 8, !dbg !7995
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !7995
  store i32 %17, i32* %18, align 8, !dbg !7995
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !7996
  %20 = load i64* %19, align 8, !dbg !7996
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !7996
  store i64 %20, i64* %21, align 8, !dbg !7996
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !7997
  %23 = load i64* %22, align 8, !dbg !7997
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !7997
  store i64 %23, i64* %24, align 8, !dbg !7997
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !7998
  %26 = load i64* %25, align 8, !dbg !7998
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !7998
  store i64 %26, i64* %27, align 8, !dbg !7998
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !7999
  %29 = load i64* %28, align 8, !dbg !7999
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !7999
  store i64 %29, i64* %30, align 8, !dbg !7999
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !8000
  %32 = load i64* %31, align 8, !dbg !8000
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !8000
  store i64 %32, i64* %33, align 8, !dbg !8000
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !8001
  %35 = load i64* %34, align 8, !dbg !8001
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !8001
  store i64 %35, i64* %36, align 8, !dbg !8001
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !8002
  %38 = load i64* %37, align 8, !dbg !8002
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !8002
  store i64 %38, i64* %39, align 8, !dbg !8002
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !8003
  %41 = load i64* %40, align 8, !dbg !8003
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !8003
  store i64 %41, i64* %42, align 8, !dbg !8003
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !8004
  %44 = load i64* %43, align 8, !dbg !8004
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !8004
  store i64 %44, i64* %45, align 8, !dbg !8004
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !8005
  %47 = load i64* %46, align 8, !dbg !8005
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !8005
  store i64 %47, i64* %48, align 8, !dbg !8005
  ret i32 %0, !dbg !8006
}

define i32 @__fxstat(i32 %vers, i32 %fd, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_fstat(i32 %fd, %struct.stat* %tmp) nounwind, !dbg !8007
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !8008
  %2 = load i64* %1, align 8, !dbg !8008
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !8008
  store i64 %2, i64* %3, align 8, !dbg !8008
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !8010
  %5 = load i64* %4, align 8, !dbg !8010
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !8010
  store i64 %5, i64* %6, align 8, !dbg !8010
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !8011
  %8 = load i32* %7, align 8, !dbg !8011
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !8011
  store i32 %8, i32* %9, align 8, !dbg !8011
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !8012
  %11 = load i64* %10, align 8, !dbg !8012
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !8012
  store i64 %11, i64* %12, align 8, !dbg !8012
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !8013
  %14 = load i32* %13, align 4, !dbg !8013
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !8013
  store i32 %14, i32* %15, align 4, !dbg !8013
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !8014
  %17 = load i32* %16, align 8, !dbg !8014
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !8014
  store i32 %17, i32* %18, align 8, !dbg !8014
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !8015
  %20 = load i64* %19, align 8, !dbg !8015
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !8015
  store i64 %20, i64* %21, align 8, !dbg !8015
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !8016
  %23 = load i64* %22, align 8, !dbg !8016
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !8016
  store i64 %23, i64* %24, align 8, !dbg !8016
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !8017
  %26 = load i64* %25, align 8, !dbg !8017
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !8017
  store i64 %26, i64* %27, align 8, !dbg !8017
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !8018
  %29 = load i64* %28, align 8, !dbg !8018
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !8018
  store i64 %29, i64* %30, align 8, !dbg !8018
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !8019
  %32 = load i64* %31, align 8, !dbg !8019
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !8019
  store i64 %32, i64* %33, align 8, !dbg !8019
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !8020
  %35 = load i64* %34, align 8, !dbg !8020
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !8020
  store i64 %35, i64* %36, align 8, !dbg !8020
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !8021
  %38 = load i64* %37, align 8, !dbg !8021
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !8021
  store i64 %38, i64* %39, align 8, !dbg !8021
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !8022
  %41 = load i64* %40, align 8, !dbg !8022
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !8022
  store i64 %41, i64* %42, align 8, !dbg !8022
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !8023
  %44 = load i64* %43, align 8, !dbg !8023
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !8023
  store i64 %44, i64* %45, align 8, !dbg !8023
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !8024
  %47 = load i64* %46, align 8, !dbg !8024
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !8024
  store i64 %47, i64* %48, align 8, !dbg !8024
  ret i32 %0, !dbg !8025
}

define weak i32 @lstat64(i8* %path, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call i32 @__fd_lstat(i8* %path, %struct.stat* %buf) nounwind, !dbg !8026
  ret i32 %0, !dbg !8026
}

define i32 @lstat(i8* %path, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_lstat(i8* %path, %struct.stat* %tmp) nounwind, !dbg !8028
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !8029
  %2 = load i64* %1, align 8, !dbg !8029
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !8029
  store i64 %2, i64* %3, align 8, !dbg !8029
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !8031
  %5 = load i64* %4, align 8, !dbg !8031
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !8031
  store i64 %5, i64* %6, align 8, !dbg !8031
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !8032
  %8 = load i32* %7, align 8, !dbg !8032
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !8032
  store i32 %8, i32* %9, align 8, !dbg !8032
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !8033
  %11 = load i64* %10, align 8, !dbg !8033
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !8033
  store i64 %11, i64* %12, align 8, !dbg !8033
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !8034
  %14 = load i32* %13, align 4, !dbg !8034
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !8034
  store i32 %14, i32* %15, align 4, !dbg !8034
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !8035
  %17 = load i32* %16, align 8, !dbg !8035
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !8035
  store i32 %17, i32* %18, align 8, !dbg !8035
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !8036
  %20 = load i64* %19, align 8, !dbg !8036
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !8036
  store i64 %20, i64* %21, align 8, !dbg !8036
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !8037
  %23 = load i64* %22, align 8, !dbg !8037
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !8037
  store i64 %23, i64* %24, align 8, !dbg !8037
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !8038
  %26 = load i64* %25, align 8, !dbg !8038
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !8038
  store i64 %26, i64* %27, align 8, !dbg !8038
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !8039
  %29 = load i64* %28, align 8, !dbg !8039
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !8039
  store i64 %29, i64* %30, align 8, !dbg !8039
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !8040
  %32 = load i64* %31, align 8, !dbg !8040
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !8040
  store i64 %32, i64* %33, align 8, !dbg !8040
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !8041
  %35 = load i64* %34, align 8, !dbg !8041
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !8041
  store i64 %35, i64* %36, align 8, !dbg !8041
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !8042
  %38 = load i64* %37, align 8, !dbg !8042
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !8042
  store i64 %38, i64* %39, align 8, !dbg !8042
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !8043
  %41 = load i64* %40, align 8, !dbg !8043
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !8043
  store i64 %41, i64* %42, align 8, !dbg !8043
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !8044
  %44 = load i64* %43, align 8, !dbg !8044
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !8044
  store i64 %44, i64* %45, align 8, !dbg !8044
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !8045
  %47 = load i64* %46, align 8, !dbg !8045
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !8045
  store i64 %47, i64* %48, align 8, !dbg !8045
  ret i32 %0, !dbg !8046
}

define i32 @__lxstat(i32 %vers, i8* %path, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_lstat(i8* %path, %struct.stat* %tmp) nounwind, !dbg !8047
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !8048
  %2 = load i64* %1, align 8, !dbg !8048
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !8048
  store i64 %2, i64* %3, align 8, !dbg !8048
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !8050
  %5 = load i64* %4, align 8, !dbg !8050
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !8050
  store i64 %5, i64* %6, align 8, !dbg !8050
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !8051
  %8 = load i32* %7, align 8, !dbg !8051
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !8051
  store i32 %8, i32* %9, align 8, !dbg !8051
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !8052
  %11 = load i64* %10, align 8, !dbg !8052
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !8052
  store i64 %11, i64* %12, align 8, !dbg !8052
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !8053
  %14 = load i32* %13, align 4, !dbg !8053
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !8053
  store i32 %14, i32* %15, align 4, !dbg !8053
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !8054
  %17 = load i32* %16, align 8, !dbg !8054
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !8054
  store i32 %17, i32* %18, align 8, !dbg !8054
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !8055
  %20 = load i64* %19, align 8, !dbg !8055
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !8055
  store i64 %20, i64* %21, align 8, !dbg !8055
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !8056
  %23 = load i64* %22, align 8, !dbg !8056
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !8056
  store i64 %23, i64* %24, align 8, !dbg !8056
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !8057
  %26 = load i64* %25, align 8, !dbg !8057
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !8057
  store i64 %26, i64* %27, align 8, !dbg !8057
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !8058
  %29 = load i64* %28, align 8, !dbg !8058
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !8058
  store i64 %29, i64* %30, align 8, !dbg !8058
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !8059
  %32 = load i64* %31, align 8, !dbg !8059
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !8059
  store i64 %32, i64* %33, align 8, !dbg !8059
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !8060
  %35 = load i64* %34, align 8, !dbg !8060
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !8060
  store i64 %35, i64* %36, align 8, !dbg !8060
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !8061
  %38 = load i64* %37, align 8, !dbg !8061
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !8061
  store i64 %38, i64* %39, align 8, !dbg !8061
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !8062
  %41 = load i64* %40, align 8, !dbg !8062
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !8062
  store i64 %41, i64* %42, align 8, !dbg !8062
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !8063
  %44 = load i64* %43, align 8, !dbg !8063
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !8063
  store i64 %44, i64* %45, align 8, !dbg !8063
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !8064
  %47 = load i64* %46, align 8, !dbg !8064
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !8064
  store i64 %47, i64* %48, align 8, !dbg !8064
  ret i32 %0, !dbg !8065
}

define weak i32 @stat64(i8* %path, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call i32 @__fd_stat(i8* %path, %struct.stat* %buf) nounwind, !dbg !8066
  ret i32 %0, !dbg !8066
}

define i32 @stat(i8* %path, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_stat(i8* %path, %struct.stat* %tmp) nounwind, !dbg !8068
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !8069
  %2 = load i64* %1, align 8, !dbg !8069
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !8069
  store i64 %2, i64* %3, align 8, !dbg !8069
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !8071
  %5 = load i64* %4, align 8, !dbg !8071
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !8071
  store i64 %5, i64* %6, align 8, !dbg !8071
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !8072
  %8 = load i32* %7, align 8, !dbg !8072
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !8072
  store i32 %8, i32* %9, align 8, !dbg !8072
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !8073
  %11 = load i64* %10, align 8, !dbg !8073
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !8073
  store i64 %11, i64* %12, align 8, !dbg !8073
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !8074
  %14 = load i32* %13, align 4, !dbg !8074
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !8074
  store i32 %14, i32* %15, align 4, !dbg !8074
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !8075
  %17 = load i32* %16, align 8, !dbg !8075
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !8075
  store i32 %17, i32* %18, align 8, !dbg !8075
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !8076
  %20 = load i64* %19, align 8, !dbg !8076
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !8076
  store i64 %20, i64* %21, align 8, !dbg !8076
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !8077
  %23 = load i64* %22, align 8, !dbg !8077
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !8077
  store i64 %23, i64* %24, align 8, !dbg !8077
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !8078
  %26 = load i64* %25, align 8, !dbg !8078
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !8078
  store i64 %26, i64* %27, align 8, !dbg !8078
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !8079
  %29 = load i64* %28, align 8, !dbg !8079
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !8079
  store i64 %29, i64* %30, align 8, !dbg !8079
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !8080
  %32 = load i64* %31, align 8, !dbg !8080
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !8080
  store i64 %32, i64* %33, align 8, !dbg !8080
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !8081
  %35 = load i64* %34, align 8, !dbg !8081
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !8081
  store i64 %35, i64* %36, align 8, !dbg !8081
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !8082
  %38 = load i64* %37, align 8, !dbg !8082
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !8082
  store i64 %38, i64* %39, align 8, !dbg !8082
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !8083
  %41 = load i64* %40, align 8, !dbg !8083
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !8083
  store i64 %41, i64* %42, align 8, !dbg !8083
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !8084
  %44 = load i64* %43, align 8, !dbg !8084
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !8084
  store i64 %44, i64* %45, align 8, !dbg !8084
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !8085
  %47 = load i64* %46, align 8, !dbg !8085
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !8085
  store i64 %47, i64* %48, align 8, !dbg !8085
  ret i32 %0, !dbg !8086
}

define i32 @__xstat(i32 %vers, i8* %path, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_stat(i8* %path, %struct.stat* %tmp) nounwind, !dbg !8087
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !8088
  %2 = load i64* %1, align 8, !dbg !8088
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !8088
  store i64 %2, i64* %3, align 8, !dbg !8088
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !8090
  %5 = load i64* %4, align 8, !dbg !8090
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !8090
  store i64 %5, i64* %6, align 8, !dbg !8090
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !8091
  %8 = load i32* %7, align 8, !dbg !8091
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !8091
  store i32 %8, i32* %9, align 8, !dbg !8091
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !8092
  %11 = load i64* %10, align 8, !dbg !8092
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !8092
  store i64 %11, i64* %12, align 8, !dbg !8092
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !8093
  %14 = load i32* %13, align 4, !dbg !8093
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !8093
  store i32 %14, i32* %15, align 4, !dbg !8093
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !8094
  %17 = load i32* %16, align 8, !dbg !8094
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !8094
  store i32 %17, i32* %18, align 8, !dbg !8094
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !8095
  %20 = load i64* %19, align 8, !dbg !8095
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !8095
  store i64 %20, i64* %21, align 8, !dbg !8095
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !8096
  %23 = load i64* %22, align 8, !dbg !8096
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !8096
  store i64 %23, i64* %24, align 8, !dbg !8096
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !8097
  %26 = load i64* %25, align 8, !dbg !8097
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !8097
  store i64 %26, i64* %27, align 8, !dbg !8097
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !8098
  %29 = load i64* %28, align 8, !dbg !8098
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !8098
  store i64 %29, i64* %30, align 8, !dbg !8098
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !8099
  %32 = load i64* %31, align 8, !dbg !8099
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !8099
  store i64 %32, i64* %33, align 8, !dbg !8099
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !8100
  %35 = load i64* %34, align 8, !dbg !8100
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !8100
  store i64 %35, i64* %36, align 8, !dbg !8100
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !8101
  %38 = load i64* %37, align 8, !dbg !8101
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !8101
  store i64 %38, i64* %39, align 8, !dbg !8101
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !8102
  %41 = load i64* %40, align 8, !dbg !8102
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !8102
  store i64 %41, i64* %42, align 8, !dbg !8102
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !8103
  %44 = load i64* %43, align 8, !dbg !8103
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !8103
  store i64 %44, i64* %45, align 8, !dbg !8103
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !8104
  %47 = load i64* %46, align 8, !dbg !8104
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !8104
  store i64 %47, i64* %48, align 8, !dbg !8104
  ret i32 %0, !dbg !8105
}

define weak i64 @lseek64(i32 %fd, i64 %off, i32 %whence) nounwind {
entry:
  %0 = tail call i64 @__fd_lseek(i32 %fd, i64 %off, i32 %whence) nounwind, !dbg !8106
  ret i64 %0, !dbg !8106
}

define i64 @lseek(i32 %fd, i64 %off, i32 %whence) nounwind {
entry:
  %0 = tail call i64 @__fd_lseek(i32 %fd, i64 %off, i32 %whence) nounwind, !dbg !8108
  ret i64 %0, !dbg !8108
}

define weak i32 @open64(i8* %pathname, i32 %flags, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = and i32 %flags, 64, !dbg !8110
  %1 = icmp eq i32 %0, 0, !dbg !8110
  br i1 %1, label %bb8, label %bb, !dbg !8110

bb:                                               ; preds = %entry
  %ap12 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !8111
  call void @llvm.va_start(i8* %ap12), !dbg !8111
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !8112
  %3 = load i32* %2, align 8, !dbg !8112
  %4 = icmp ugt i32 %3, 47, !dbg !8112
  br i1 %4, label %bb4, label %bb3, !dbg !8112

bb3:                                              ; preds = %bb
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !8112
  %6 = load i8** %5, align 8, !dbg !8112
  %tmp = zext i32 %3 to i64
  %7 = ptrtoint i8* %6 to i64, !dbg !8112
  %8 = add i64 %7, %tmp, !dbg !8112
  %9 = inttoptr i64 %8 to i8*, !dbg !8112
  %10 = add i32 %3, 8, !dbg !8112
  store i32 %10, i32* %2, align 8, !dbg !8112
  br label %bb5, !dbg !8112

bb4:                                              ; preds = %bb
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !8112
  %12 = load i8** %11, align 8, !dbg !8112
  %13 = getelementptr inbounds i8* %12, i64 8, !dbg !8112
  store i8* %13, i8** %11, align 8, !dbg !8112
  br label %bb5, !dbg !8112

bb5:                                              ; preds = %bb4, %bb3
  %addr.32.0 = phi i8* [ %12, %bb4 ], [ %9, %bb3 ]
  %14 = bitcast i8* %addr.32.0 to i32*, !dbg !8112
  %15 = load i32* %14, align 4, !dbg !8112
  call void @llvm.va_end(i8* %ap12), !dbg !8113
  br label %bb8, !dbg !8113

bb8:                                              ; preds = %bb5, %entry
  %mode.0 = phi i32 [ %15, %bb5 ], [ 0, %entry ]
  %16 = call i32 @__fd_open(i8* %pathname, i32 %flags, i32 %mode.0) nounwind, !dbg !8114
  ret i32 %16, !dbg !8114
}

define i64 @getdents(i32 %fd, %struct.dirent* %dirp, i64 %nbytes) nounwind {
entry:
  %0 = trunc i64 %nbytes to i32, !dbg !8115
  %1 = tail call i32 @__fd_getdents(i32 %fd, %struct.dirent* %dirp, i32 %0) nounwind, !dbg !8115
  %2 = sext i32 %1 to i64, !dbg !8115
  %3 = icmp sgt i32 %1, 0, !dbg !8116
  br i1 %3, label %bb, label %bb3, !dbg !8116

bb:                                               ; preds = %entry
  %4 = bitcast %struct.dirent* %dirp to i8*, !dbg !8117
  %5 = getelementptr inbounds i8* %4, i64 %2, !dbg !8117
  %6 = bitcast i8* %5 to %struct.dirent*, !dbg !8117
  %7 = icmp ugt %struct.dirent* %6, %dirp, !dbg !8118
  br i1 %7, label %bb1, label %bb3, !dbg !8118

bb1:                                              ; preds = %bb1, %bb
  %dp64.05 = phi %struct.dirent* [ %13, %bb1 ], [ %dirp, %bb ]
  %8 = getelementptr inbounds %struct.dirent* %dp64.05, i64 0, i32 2, !dbg !8119
  %9 = bitcast %struct.dirent* %dp64.05 to i8*, !dbg !8120
  %10 = load i16* %8, align 8, !dbg !8120
  %11 = zext i16 %10 to i64, !dbg !8120
  %12 = getelementptr inbounds i8* %9, i64 %11, !dbg !8120
  %13 = bitcast i8* %12 to %struct.dirent*, !dbg !8120
  %14 = icmp ult i8* %12, %5, !dbg !8118
  br i1 %14, label %bb1, label %bb3, !dbg !8118

bb3:                                              ; preds = %bb1, %bb, %entry
  ret i64 %2, !dbg !8121
}

define i32 @statfs(i8* %path, %struct.statfs* %buf32) nounwind {
entry:
  %0 = tail call i32 @__fd_statfs(i8* %path, %struct.statfs* %buf32) nounwind, !dbg !8122
  ret i32 %0, !dbg !8122
}

define i32 @ftruncate(i32 %fd, i64 %length) nounwind {
entry:
  %0 = tail call i32 @__fd_ftruncate(i32 %fd, i64 %length) nounwind, !dbg !8124
  ret i32 %0, !dbg !8124
}

define void @klee_init_env(i32* nocapture %argcPtr, i8*** nocapture %argvPtr) nounwind {
entry:
  %new_argv = alloca [1024 x i8*], align 8
  %stream_fill_info = alloca [100 x %struct.fill_info_t], align 8
  %dgram_fill_info = alloca [100 x %struct.fill_info_t], align 8
  %sym_arg_name = alloca [5 x i8], align 1
  %0 = load i32* %argcPtr, align 4, !dbg !8126
  %1 = load i8*** %argvPtr, align 8, !dbg !8127
  %2 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 0, !dbg !8128
  store i8 97, i8* %2, align 1, !dbg !8128
  %3 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 1, !dbg !8128
  store i8 114, i8* %3, align 1, !dbg !8128
  %4 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 2, !dbg !8128
  store i8 103, i8* %4, align 1, !dbg !8128
  %5 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 3, !dbg !8128
  store i8 0, i8* %5, align 1, !dbg !8128
  %6 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 4, !dbg !8129
  store i8 0, i8* %6, align 1, !dbg !8129
  %7 = icmp eq i32 %0, 2, !dbg !8130
  br i1 %7, label %bb, label %bb99, !dbg !8130

bb:                                               ; preds = %entry
  %8 = call i32 @klee_shadow_enabled() nounwind, !dbg !8130
  %9 = icmp eq i32 %8, 0, !dbg !8130
  br i1 %9, label %bb1, label %bb99, !dbg !8130

bb1:                                              ; preds = %bb
  %10 = getelementptr inbounds i8** %1, i64 1, !dbg !8130
  %11 = load i8** %10, align 8, !dbg !8130
  br label %bb3.i, !dbg !8131

bb.i:                                             ; preds = %bb3.i
  %12 = icmp eq i8 %13, 0, !dbg !8133
  br i1 %12, label %bb2, label %bb2.i, !dbg !8133

bb2.i:                                            ; preds = %bb.i
  %indvar.next.i = add i64 %indvar.i, 1
  br label %bb3.i, !dbg !8134

bb3.i:                                            ; preds = %bb2.i, %bb1
  %indvar.i = phi i64 [ %indvar.next.i, %bb2.i ], [ 0, %bb1 ]
  %a_addr.0.i = getelementptr i8* %11, i64 %indvar.i
  %b_addr.0.i = getelementptr [7 x i8]* @.str5275, i64 0, i64 %indvar.i
  %13 = load i8* %a_addr.0.i, align 1, !dbg !8131
  %14 = load i8* %b_addr.0.i, align 1, !dbg !8131
  %15 = icmp eq i8 %13, %14, !dbg !8131
  br i1 %15, label %bb.i, label %bb99, !dbg !8131

bb2:                                              ; preds = %bb.i
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([593 x i8]* @.str6276, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8135

bb3:                                              ; preds = %bb99
  %16 = sext i32 %k.0 to i64, !dbg !8138
  %17 = getelementptr inbounds i8** %1, i64 %16, !dbg !8138
  %18 = load i8** %17, align 8, !dbg !8138
  br label %bb3.i112, !dbg !8139

bb.i106:                                          ; preds = %bb3.i112
  %19 = icmp eq i8 %20, 0, !dbg !8140
  br i1 %19, label %bb5, label %bb2.i108, !dbg !8140

bb2.i108:                                         ; preds = %bb.i106
  %indvar.next.i107 = add i64 %indvar.i109, 1
  br label %bb3.i112, !dbg !8141

bb3.i112:                                         ; preds = %bb2.i108, %bb3
  %indvar.i109 = phi i64 [ %indvar.next.i107, %bb2.i108 ], [ 0, %bb3 ]
  %a_addr.0.i111 = getelementptr i8* %18, i64 %indvar.i109
  %b_addr.0.i110 = getelementptr [10 x i8]* @.str7277, i64 0, i64 %indvar.i109
  %20 = load i8* %a_addr.0.i111, align 1, !dbg !8139
  %21 = load i8* %b_addr.0.i110, align 1, !dbg !8139
  %22 = icmp eq i8 %20, %21, !dbg !8139
  br i1 %22, label %bb.i106, label %bb3.i122, !dbg !8139

bb.i116:                                          ; preds = %bb3.i122
  %23 = icmp eq i8 %24, 0, !dbg !8140
  br i1 %23, label %bb5, label %bb2.i118, !dbg !8140

bb2.i118:                                         ; preds = %bb.i116
  %indvar.next.i117 = add i64 %indvar.i119, 1
  br label %bb3.i122, !dbg !8141

bb3.i122:                                         ; preds = %bb2.i118, %bb3.i112
  %indvar.i119 = phi i64 [ %indvar.next.i117, %bb2.i118 ], [ 0, %bb3.i112 ]
  %a_addr.0.i121 = getelementptr i8* %18, i64 %indvar.i119
  %b_addr.0.i120 = getelementptr [9 x i8]* @.str8278, i64 0, i64 %indvar.i119
  %24 = load i8* %a_addr.0.i121, align 1, !dbg !8139
  %25 = load i8* %b_addr.0.i120, align 1, !dbg !8139
  %26 = icmp eq i8 %24, %25, !dbg !8139
  br i1 %26, label %bb.i116, label %bb3.i139, !dbg !8139

bb5:                                              ; preds = %bb.i116, %bb.i106
  %27 = add nsw i32 %k.0, 1, !dbg !8142
  %28 = icmp eq i32 %27, %0, !dbg !8142
  br i1 %28, label %bb6, label %bb7, !dbg !8142

bb6:                                              ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([48 x i8]* @.str9279, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !8143

bb7:                                              ; preds = %bb5
  %29 = sext i32 %27 to i64, !dbg !8145
  %30 = getelementptr inbounds i8** %1, i64 %29, !dbg !8145
  %31 = load i8** %30, align 8, !dbg !8145
  %32 = add i32 %k.0, 2, !dbg !8145
  %33 = load i8* %31, align 1, !dbg !8146
  switch i8 %33, label %bb9.preheader.i [
    i8 0, label %bb.i127
    i8 48, label %bb2.i128
  ]

bb.i127:                                          ; preds = %bb7
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([48 x i8]* @.str9279, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !8147

bb2.i128:                                         ; preds = %bb7
  %34 = getelementptr inbounds i8* %31, i64 1, !dbg !8148
  %35 = load i8* %34, align 1, !dbg !8148
  switch i8 %35, label %bb9.preheader.i [
    i8 120, label %bb5.i
    i8 88, label %bb5.i
  ]

bb5.i:                                            ; preds = %bb2.i128, %bb2.i128
  %36 = getelementptr inbounds i8* %31, i64 2, !dbg !8149
  br label %bb9.preheader.i, !dbg !8149

bb9.preheader.i:                                  ; preds = %bb5.i, %bb2.i128, %bb7
  %base.0.ph.i = phi i64 [ 10, %bb2.i128 ], [ 16, %bb5.i ], [ 10, %bb7 ]
  %s_addr.0.ph.i = phi i8* [ %31, %bb2.i128 ], [ %36, %bb5.i ], [ %31, %bb7 ]
  br label %bb9.i

bb6.i:                                            ; preds = %bb9.i
  %37 = add i8 %53, -48, !dbg !8150
  %38 = icmp ult i8 %37, 10, !dbg !8150
  br i1 %38, label %bb.i143, label %bb1.i, !dbg !8150

bb.i143:                                          ; preds = %bb6.i
  %39 = sext i8 %53 to i32, !dbg !8150
  %40 = add nsw i32 %39, -48, !dbg !8150
  br label %__getxdigit.exit, !dbg !8150

bb1.i:                                            ; preds = %bb6.i
  %41 = add i8 %53, -65, !dbg !8150
  %42 = icmp ult i8 %41, 6, !dbg !8150
  br i1 %42, label %bb2.i144, label %bb3.i145, !dbg !8150

bb2.i144:                                         ; preds = %bb1.i
  %43 = sext i8 %53 to i32, !dbg !8150
  %44 = add nsw i32 %43, -55, !dbg !8150
  br label %__getxdigit.exit, !dbg !8150

bb3.i145:                                         ; preds = %bb1.i
  %45 = add i8 %53, -97, !dbg !8150
  %46 = icmp ult i8 %45, 6, !dbg !8150
  br i1 %46, label %bb4.i, label %bb8.i, !dbg !8150

bb4.i:                                            ; preds = %bb3.i145
  %47 = sext i8 %53 to i32, !dbg !8150
  %48 = add nsw i32 %47, -87, !dbg !8150
  br label %__getxdigit.exit, !dbg !8150

__getxdigit.exit:                                 ; preds = %bb4.i, %bb2.i144, %bb.i143
  %iftmp.12.0.i = phi i32 [ %40, %bb.i143 ], [ %44, %bb2.i144 ], [ %48, %bb4.i ]
  %49 = icmp eq i32 %iftmp.12.0.i, -1, !dbg !8153
  br i1 %49, label %bb8.i, label %bb7.i, !dbg !8153

bb7.i:                                            ; preds = %__getxdigit.exit
  %50 = mul nsw i64 %res.0.ph.i, %base.0.ph.i, !dbg !8154
  %51 = sext i32 %iftmp.12.0.i to i64, !dbg !8154
  %52 = add nsw i64 %51, %50, !dbg !8154
  %indvar.next1718 = add i64 %indvar1717, 1
  br label %bb9.i, !dbg !8154

bb8.i:                                            ; preds = %__getxdigit.exit, %bb3.i145
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([48 x i8]* @.str9279, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !8155

bb9.i:                                            ; preds = %bb7.i, %bb9.preheader.i
  %indvar1717 = phi i64 [ 0, %bb9.preheader.i ], [ %indvar.next1718, %bb7.i ]
  %res.0.ph.i = phi i64 [ 0, %bb9.preheader.i ], [ %52, %bb7.i ]
  %s_addr.0.ph14.i = getelementptr i8* %s_addr.0.ph.i, i64 %indvar1717
  %53 = load i8* %s_addr.0.ph14.i, align 1, !dbg !8157
  %54 = icmp eq i8 %53, 0, !dbg !8157
  br i1 %54, label %__str_to_int.exit, label %bb6.i, !dbg !8157

__str_to_int.exit:                                ; preds = %bb9.i
  %55 = trunc i64 %res.0.ph.i to i32, !dbg !8145
  %56 = trunc i32 %sym_arg_num.1 to i8, !dbg !8158
  %57 = add i8 %56, 48, !dbg !8158
  store i8 %57, i8* %5, align 1, !dbg !8158
  %58 = call fastcc i8* @__get_sym_str(i32 %55, i8* %2) nounwind, !dbg !8159
  %59 = icmp eq i32 %704, 1024, !dbg !8160
  br i1 %59, label %bb.i131, label %__add_arg.exit132, !dbg !8160

bb.i131:                                          ; preds = %__str_to_int.exit
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([37 x i8]* @.str3274, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !8162

__add_arg.exit132:                                ; preds = %__str_to_int.exit
  %60 = add i32 %sym_arg_num.1, 1, !dbg !8158
  %61 = sext i32 %704 to i64, !dbg !8164
  %62 = getelementptr inbounds [1024 x i8*]* %new_argv, i64 0, i64 %61, !dbg !8164
  store i8* %58, i8** %62, align 8, !dbg !8164
  %63 = add nsw i32 %704, 1, !dbg !8165
  br label %bb99, !dbg !8159

bb.i133:                                          ; preds = %bb3.i139
  %64 = icmp eq i8 %65, 0, !dbg !8166
  br i1 %64, label %bb12, label %bb2.i135, !dbg !8166

bb2.i135:                                         ; preds = %bb.i133
  %indvar.next.i134 = add i64 %indvar.i136, 1
  br label %bb3.i139, !dbg !8168

bb3.i139:                                         ; preds = %bb2.i135, %bb3.i122
  %indvar.i136 = phi i64 [ %indvar.next.i134, %bb2.i135 ], [ 0, %bb3.i122 ]
  %a_addr.0.i138 = getelementptr i8* %18, i64 %indvar.i136
  %b_addr.0.i137 = getelementptr [11 x i8]* @.str10280, i64 0, i64 %indvar.i136
  %65 = load i8* %a_addr.0.i138, align 1, !dbg !8169
  %66 = load i8* %b_addr.0.i137, align 1, !dbg !8169
  %67 = icmp eq i8 %65, %66, !dbg !8169
  br i1 %67, label %bb.i133, label %bb3.i153, !dbg !8169

bb.i147:                                          ; preds = %bb3.i153
  %68 = icmp eq i8 %69, 0, !dbg !8166
  br i1 %68, label %bb12, label %bb2.i149, !dbg !8166

bb2.i149:                                         ; preds = %bb.i147
  %indvar.next.i148 = add i64 %indvar.i150, 1
  br label %bb3.i153, !dbg !8168

bb3.i153:                                         ; preds = %bb2.i149, %bb3.i139
  %indvar.i150 = phi i64 [ %indvar.next.i148, %bb2.i149 ], [ 0, %bb3.i139 ]
  %a_addr.0.i152 = getelementptr i8* %18, i64 %indvar.i150
  %b_addr.0.i151 = getelementptr [10 x i8]* @.str11281, i64 0, i64 %indvar.i150
  %69 = load i8* %a_addr.0.i152, align 1, !dbg !8169
  %70 = load i8* %b_addr.0.i151, align 1, !dbg !8169
  %71 = icmp eq i8 %69, %70, !dbg !8169
  br i1 %71, label %bb.i147, label %bb3.i233, !dbg !8169

bb12:                                             ; preds = %bb.i147, %bb.i133
  %72 = add nsw i32 %k.0, 3, !dbg !8170
  %73 = icmp slt i32 %72, %0, !dbg !8170
  br i1 %73, label %bb15, label %bb14, !dbg !8170

bb14:                                             ; preds = %bb12
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12282, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8171

bb15:                                             ; preds = %bb12
  %74 = add nsw i32 %k.0, 1, !dbg !8173
  %75 = sext i32 %74 to i64, !dbg !8174
  %76 = getelementptr inbounds i8** %1, i64 %75, !dbg !8174
  %77 = load i8** %76, align 8, !dbg !8174
  %78 = add i32 %k.0, 2, !dbg !8174
  %79 = load i8* %77, align 1, !dbg !8175
  switch i8 %79, label %bb9.preheader.i173 [
    i8 0, label %bb.i168
    i8 48, label %bb2.i169
  ]

bb.i168:                                          ; preds = %bb15
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12282, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8176

bb2.i169:                                         ; preds = %bb15
  %80 = getelementptr inbounds i8* %77, i64 1, !dbg !8177
  %81 = load i8* %80, align 1, !dbg !8177
  switch i8 %81, label %bb9.preheader.i173 [
    i8 120, label %bb5.i170
    i8 88, label %bb5.i170
  ]

bb5.i170:                                         ; preds = %bb2.i169, %bb2.i169
  %82 = getelementptr inbounds i8* %77, i64 2, !dbg !8178
  br label %bb9.preheader.i173, !dbg !8178

bb9.preheader.i173:                               ; preds = %bb5.i170, %bb2.i169, %bb15
  %base.0.ph.i171 = phi i64 [ 10, %bb2.i169 ], [ 16, %bb5.i170 ], [ 10, %bb15 ]
  %s_addr.0.ph.i172 = phi i8* [ %77, %bb2.i169 ], [ %82, %bb5.i170 ], [ %77, %bb15 ]
  br label %bb9.i184

bb6.i174:                                         ; preds = %bb9.i184
  %83 = add i8 %99, -48, !dbg !8179
  %84 = icmp ult i8 %83, 10, !dbg !8179
  br i1 %84, label %bb.i348, label %bb1.i349, !dbg !8179

bb.i348:                                          ; preds = %bb6.i174
  %85 = sext i8 %99 to i32, !dbg !8179
  %86 = add nsw i32 %85, -48, !dbg !8179
  br label %__getxdigit.exit355, !dbg !8179

bb1.i349:                                         ; preds = %bb6.i174
  %87 = add i8 %99, -65, !dbg !8179
  %88 = icmp ult i8 %87, 6, !dbg !8179
  br i1 %88, label %bb2.i350, label %bb3.i351, !dbg !8179

bb2.i350:                                         ; preds = %bb1.i349
  %89 = sext i8 %99 to i32, !dbg !8179
  %90 = add nsw i32 %89, -55, !dbg !8179
  br label %__getxdigit.exit355, !dbg !8179

bb3.i351:                                         ; preds = %bb1.i349
  %91 = add i8 %99, -97, !dbg !8179
  %92 = icmp ult i8 %91, 6, !dbg !8179
  br i1 %92, label %bb4.i352, label %bb8.i180, !dbg !8179

bb4.i352:                                         ; preds = %bb3.i351
  %93 = sext i8 %99 to i32, !dbg !8179
  %94 = add nsw i32 %93, -87, !dbg !8179
  br label %__getxdigit.exit355, !dbg !8179

__getxdigit.exit355:                              ; preds = %bb4.i352, %bb2.i350, %bb.i348
  %iftmp.12.0.i353 = phi i32 [ %86, %bb.i348 ], [ %90, %bb2.i350 ], [ %94, %bb4.i352 ]
  %95 = icmp eq i32 %iftmp.12.0.i353, -1, !dbg !8181
  br i1 %95, label %bb8.i180, label %bb7.i176, !dbg !8181

bb7.i176:                                         ; preds = %__getxdigit.exit355
  %96 = mul nsw i64 %res.0.ph.i177, %base.0.ph.i171, !dbg !8182
  %97 = sext i32 %iftmp.12.0.i353 to i64, !dbg !8182
  %98 = add nsw i64 %97, %96, !dbg !8182
  %indvar.next1683 = add i64 %indvar1682, 1
  br label %bb9.i184, !dbg !8182

bb8.i180:                                         ; preds = %__getxdigit.exit355, %bb3.i351
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12282, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8183

bb9.i184:                                         ; preds = %bb7.i176, %bb9.preheader.i173
  %indvar1682 = phi i64 [ 0, %bb9.preheader.i173 ], [ %indvar.next1683, %bb7.i176 ]
  %res.0.ph.i177 = phi i64 [ 0, %bb9.preheader.i173 ], [ %98, %bb7.i176 ]
  %s_addr.0.ph14.i178 = getelementptr i8* %s_addr.0.ph.i172, i64 %indvar1682
  %99 = load i8* %s_addr.0.ph14.i178, align 1, !dbg !8185
  %100 = icmp eq i8 %99, 0, !dbg !8185
  br i1 %100, label %__str_to_int.exit185, label %bb6.i174, !dbg !8185

__str_to_int.exit185:                             ; preds = %bb9.i184
  %101 = trunc i64 %res.0.ph.i177 to i32, !dbg !8174
  %102 = sext i32 %78 to i64, !dbg !8186
  %103 = getelementptr inbounds i8** %1, i64 %102, !dbg !8186
  %104 = load i8** %103, align 8, !dbg !8186
  %105 = load i8* %104, align 1, !dbg !8187
  switch i8 %105, label %bb9.preheader.i192 [
    i8 0, label %bb.i187
    i8 48, label %bb2.i188
  ]

bb.i187:                                          ; preds = %__str_to_int.exit185
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12282, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8188

bb2.i188:                                         ; preds = %__str_to_int.exit185
  %106 = getelementptr inbounds i8* %104, i64 1, !dbg !8189
  %107 = load i8* %106, align 1, !dbg !8189
  switch i8 %107, label %bb9.preheader.i192 [
    i8 120, label %bb5.i189
    i8 88, label %bb5.i189
  ]

bb5.i189:                                         ; preds = %bb2.i188, %bb2.i188
  %108 = getelementptr inbounds i8* %104, i64 2, !dbg !8190
  br label %bb9.preheader.i192, !dbg !8190

bb9.preheader.i192:                               ; preds = %bb5.i189, %bb2.i188, %__str_to_int.exit185
  %base.0.ph.i190 = phi i64 [ 10, %bb2.i188 ], [ 16, %bb5.i189 ], [ 10, %__str_to_int.exit185 ]
  %s_addr.0.ph.i191 = phi i8* [ %104, %bb2.i188 ], [ %108, %bb5.i189 ], [ %104, %__str_to_int.exit185 ]
  br label %bb9.i203

bb6.i193:                                         ; preds = %bb9.i203
  %109 = add i8 %125, -48, !dbg !8191
  %110 = icmp ult i8 %109, 10, !dbg !8191
  br i1 %110, label %bb.i255, label %bb1.i256, !dbg !8191

bb.i255:                                          ; preds = %bb6.i193
  %111 = sext i8 %125 to i32, !dbg !8191
  %112 = add nsw i32 %111, -48, !dbg !8191
  br label %__getxdigit.exit262, !dbg !8191

bb1.i256:                                         ; preds = %bb6.i193
  %113 = add i8 %125, -65, !dbg !8191
  %114 = icmp ult i8 %113, 6, !dbg !8191
  br i1 %114, label %bb2.i257, label %bb3.i258, !dbg !8191

bb2.i257:                                         ; preds = %bb1.i256
  %115 = sext i8 %125 to i32, !dbg !8191
  %116 = add nsw i32 %115, -55, !dbg !8191
  br label %__getxdigit.exit262, !dbg !8191

bb3.i258:                                         ; preds = %bb1.i256
  %117 = add i8 %125, -97, !dbg !8191
  %118 = icmp ult i8 %117, 6, !dbg !8191
  br i1 %118, label %bb4.i259, label %bb8.i199, !dbg !8191

bb4.i259:                                         ; preds = %bb3.i258
  %119 = sext i8 %125 to i32, !dbg !8191
  %120 = add nsw i32 %119, -87, !dbg !8191
  br label %__getxdigit.exit262, !dbg !8191

__getxdigit.exit262:                              ; preds = %bb4.i259, %bb2.i257, %bb.i255
  %iftmp.12.0.i260 = phi i32 [ %112, %bb.i255 ], [ %116, %bb2.i257 ], [ %120, %bb4.i259 ]
  %121 = icmp eq i32 %iftmp.12.0.i260, -1, !dbg !8193
  br i1 %121, label %bb8.i199, label %bb7.i195, !dbg !8193

bb7.i195:                                         ; preds = %__getxdigit.exit262
  %122 = mul nsw i64 %res.0.ph.i196, %base.0.ph.i190, !dbg !8194
  %123 = sext i32 %iftmp.12.0.i260 to i64, !dbg !8194
  %124 = add nsw i64 %123, %122, !dbg !8194
  %indvar.next1686 = add i64 %indvar1685, 1
  br label %bb9.i203, !dbg !8194

bb8.i199:                                         ; preds = %__getxdigit.exit262, %bb3.i258
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12282, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8195

bb9.i203:                                         ; preds = %bb7.i195, %bb9.preheader.i192
  %indvar1685 = phi i64 [ 0, %bb9.preheader.i192 ], [ %indvar.next1686, %bb7.i195 ]
  %res.0.ph.i196 = phi i64 [ 0, %bb9.preheader.i192 ], [ %124, %bb7.i195 ]
  %s_addr.0.ph14.i197 = getelementptr i8* %s_addr.0.ph.i191, i64 %indvar1685
  %125 = load i8* %s_addr.0.ph14.i197, align 1, !dbg !8197
  %126 = icmp eq i8 %125, 0, !dbg !8197
  br i1 %126, label %__str_to_int.exit204, label %bb6.i193, !dbg !8197

__str_to_int.exit204:                             ; preds = %bb9.i203
  %127 = trunc i64 %res.0.ph.i196 to i32, !dbg !8186
  %128 = sext i32 %72 to i64, !dbg !8198
  %129 = getelementptr inbounds i8** %1, i64 %128, !dbg !8198
  %130 = load i8** %129, align 8, !dbg !8198
  %131 = add i32 %k.0, 4, !dbg !8198
  %132 = load i8* %130, align 1, !dbg !8199
  switch i8 %132, label %bb9.preheader.i211 [
    i8 0, label %bb.i206
    i8 48, label %bb2.i207
  ]

bb.i206:                                          ; preds = %__str_to_int.exit204
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12282, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8200

bb2.i207:                                         ; preds = %__str_to_int.exit204
  %133 = getelementptr inbounds i8* %130, i64 1, !dbg !8201
  %134 = load i8* %133, align 1, !dbg !8201
  switch i8 %134, label %bb9.preheader.i211 [
    i8 120, label %bb5.i208
    i8 88, label %bb5.i208
  ]

bb5.i208:                                         ; preds = %bb2.i207, %bb2.i207
  %135 = getelementptr inbounds i8* %130, i64 2, !dbg !8202
  br label %bb9.preheader.i211, !dbg !8202

bb9.preheader.i211:                               ; preds = %bb5.i208, %bb2.i207, %__str_to_int.exit204
  %base.0.ph.i209 = phi i64 [ 10, %bb2.i207 ], [ 16, %bb5.i208 ], [ 10, %__str_to_int.exit204 ]
  %s_addr.0.ph.i210 = phi i8* [ %130, %bb2.i207 ], [ %135, %bb5.i208 ], [ %130, %__str_to_int.exit204 ]
  br label %bb9.i222

bb6.i212:                                         ; preds = %bb9.i222
  %136 = add i8 %152, -48, !dbg !8203
  %137 = icmp ult i8 %136, 10, !dbg !8203
  br i1 %137, label %bb.i237, label %bb1.i238, !dbg !8203

bb.i237:                                          ; preds = %bb6.i212
  %138 = sext i8 %152 to i32, !dbg !8203
  %139 = add nsw i32 %138, -48, !dbg !8203
  br label %__getxdigit.exit244, !dbg !8203

bb1.i238:                                         ; preds = %bb6.i212
  %140 = add i8 %152, -65, !dbg !8203
  %141 = icmp ult i8 %140, 6, !dbg !8203
  br i1 %141, label %bb2.i239, label %bb3.i240, !dbg !8203

bb2.i239:                                         ; preds = %bb1.i238
  %142 = sext i8 %152 to i32, !dbg !8203
  %143 = add nsw i32 %142, -55, !dbg !8203
  br label %__getxdigit.exit244, !dbg !8203

bb3.i240:                                         ; preds = %bb1.i238
  %144 = add i8 %152, -97, !dbg !8203
  %145 = icmp ult i8 %144, 6, !dbg !8203
  br i1 %145, label %bb4.i241, label %bb8.i218, !dbg !8203

bb4.i241:                                         ; preds = %bb3.i240
  %146 = sext i8 %152 to i32, !dbg !8203
  %147 = add nsw i32 %146, -87, !dbg !8203
  br label %__getxdigit.exit244, !dbg !8203

__getxdigit.exit244:                              ; preds = %bb4.i241, %bb2.i239, %bb.i237
  %iftmp.12.0.i242 = phi i32 [ %139, %bb.i237 ], [ %143, %bb2.i239 ], [ %147, %bb4.i241 ]
  %148 = icmp eq i32 %iftmp.12.0.i242, -1, !dbg !8205
  br i1 %148, label %bb8.i218, label %bb7.i214, !dbg !8205

bb7.i214:                                         ; preds = %__getxdigit.exit244
  %149 = mul nsw i64 %res.0.ph.i215, %base.0.ph.i209, !dbg !8206
  %150 = sext i32 %iftmp.12.0.i242 to i64, !dbg !8206
  %151 = add nsw i64 %150, %149, !dbg !8206
  %indvar.next1689 = add i64 %indvar1688, 1
  br label %bb9.i222, !dbg !8206

bb8.i218:                                         ; preds = %__getxdigit.exit244, %bb3.i240
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12282, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8207

bb9.i222:                                         ; preds = %bb7.i214, %bb9.preheader.i211
  %indvar1688 = phi i64 [ 0, %bb9.preheader.i211 ], [ %indvar.next1689, %bb7.i214 ]
  %res.0.ph.i215 = phi i64 [ 0, %bb9.preheader.i211 ], [ %151, %bb7.i214 ]
  %s_addr.0.ph14.i216 = getelementptr i8* %s_addr.0.ph.i210, i64 %indvar1688
  %152 = load i8* %s_addr.0.ph14.i216, align 1, !dbg !8209
  %153 = icmp eq i8 %152, 0, !dbg !8209
  br i1 %153, label %__str_to_int.exit223, label %bb6.i212, !dbg !8209

__str_to_int.exit223:                             ; preds = %bb9.i222
  %154 = trunc i64 %res.0.ph.i215 to i32, !dbg !8198
  %155 = add i32 %127, 1, !dbg !8210
  %156 = call i32 @klee_range(i32 %101, i32 %155, i8* getelementptr inbounds ([7 x i8]* @.str13283, i64 0, i64 0)) nounwind, !dbg !8210
  %tmp1692 = icmp sgt i32 %156, 0
  %.op = xor i32 %156, -1
  %tmp1693 = select i1 %tmp1692, i32 %.op, i32 -1
  %tmp1694 = add i32 %704, -1025
  %tmp1695 = icmp ugt i32 %tmp1693, %tmp1694
  %umax = select i1 %tmp1695, i32 %tmp1693, i32 %tmp1694
  %tmp = add i32 %sym_arg_num.1, -1
  %sym_arg_num.0 = sub i32 %tmp, %umax
  %tmp1697 = add i32 %704, -1
  %tmp1698 = sub i32 %tmp1697, %umax
  %tmp833 = sext i32 %704 to i64
  %tmp836 = zext i32 %704 to i64
  %tmp839 = zext i32 %sym_arg_num.1 to i64
  %tmp840 = add i64 %tmp839, 48
  br label %bb19, !dbg !8211

bb16:                                             ; preds = %bb19
  %tmp841 = add i64 %tmp840, %indvar1699
  %tmp837 = add i64 %tmp836, %indvar1699
  %tmp1710 = trunc i64 %tmp841 to i8
  %tmp1703 = trunc i64 %tmp837 to i32
  store i8 %tmp1710, i8* %5, align 1, !dbg !8212
  %157 = call fastcc i8* @__get_sym_str(i32 %154, i8* %2) nounwind, !dbg !8213
  %158 = icmp eq i32 %tmp1703, 1024, !dbg !8214
  br i1 %158, label %bb.i225, label %__add_arg.exit226, !dbg !8214

bb.i225:                                          ; preds = %bb16
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([37 x i8]* @.str3274, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !8215

__add_arg.exit226:                                ; preds = %bb16
  store i8* %157, i8** %scevgep, align 8, !dbg !8217
  %indvar.next1700 = add i64 %indvar1699, 1
  br label %bb19, !dbg !8211

bb19:                                             ; preds = %__add_arg.exit226, %__str_to_int.exit223
  %indvar1699 = phi i64 [ %indvar.next1700, %__add_arg.exit226 ], [ 0, %__str_to_int.exit223 ]
  %tmp834 = add i64 %tmp833, %indvar1699
  %scevgep = getelementptr [1024 x i8*]* %new_argv, i64 0, i64 %tmp834
  %i.0 = trunc i64 %indvar1699 to i32
  %159 = icmp slt i32 %i.0, %156, !dbg !8211
  br i1 %159, label %bb16, label %bb99, !dbg !8211

bb.i227:                                          ; preds = %bb3.i233
  %160 = icmp eq i8 %161, 0, !dbg !8218
  br i1 %160, label %bb22, label %bb2.i229, !dbg !8218

bb2.i229:                                         ; preds = %bb.i227
  %indvar.next.i228 = add i64 %indvar.i230, 1
  br label %bb3.i233, !dbg !8220

bb3.i233:                                         ; preds = %bb2.i229, %bb3.i153
  %indvar.i230 = phi i64 [ %indvar.next.i228, %bb2.i229 ], [ 0, %bb3.i153 ]
  %a_addr.0.i232 = getelementptr i8* %18, i64 %indvar.i230
  %b_addr.0.i231 = getelementptr [12 x i8]* @.str14284, i64 0, i64 %indvar.i230
  %161 = load i8* %a_addr.0.i232, align 1, !dbg !8221
  %162 = load i8* %b_addr.0.i231, align 1, !dbg !8221
  %163 = icmp eq i8 %161, %162, !dbg !8221
  br i1 %163, label %bb.i227, label %bb3.i251, !dbg !8221

bb.i245:                                          ; preds = %bb3.i251
  %164 = icmp eq i8 %165, 0, !dbg !8218
  br i1 %164, label %bb22, label %bb2.i247, !dbg !8218

bb2.i247:                                         ; preds = %bb.i245
  %indvar.next.i246 = add i64 %indvar.i248, 1
  br label %bb3.i251, !dbg !8220

bb3.i251:                                         ; preds = %bb2.i247, %bb3.i233
  %indvar.i248 = phi i64 [ %indvar.next.i246, %bb2.i247 ], [ 0, %bb3.i233 ]
  %a_addr.0.i250 = getelementptr i8* %18, i64 %indvar.i248
  %b_addr.0.i249 = getelementptr [11 x i8]* @.str15285, i64 0, i64 %indvar.i248
  %165 = load i8* %a_addr.0.i250, align 1, !dbg !8221
  %166 = load i8* %b_addr.0.i249, align 1, !dbg !8221
  %167 = icmp eq i8 %165, %166, !dbg !8221
  br i1 %167, label %bb.i245, label %bb3.i308, !dbg !8221

bb22:                                             ; preds = %bb.i245, %bb.i227
  %168 = add nsw i32 %k.0, 2, !dbg !8222
  %169 = icmp slt i32 %168, %0, !dbg !8222
  br i1 %169, label %bb25, label %bb24, !dbg !8222

bb24:                                             ; preds = %bb22
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16286, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8223

bb25:                                             ; preds = %bb22
  %170 = add nsw i32 %k.0, 1, !dbg !8225
  %171 = sext i32 %170 to i64, !dbg !8226
  %172 = getelementptr inbounds i8** %1, i64 %171, !dbg !8226
  %173 = load i8** %172, align 8, !dbg !8226
  %174 = load i8* %173, align 1, !dbg !8227
  switch i8 %174, label %bb9.preheader.i269 [
    i8 0, label %bb.i264
    i8 48, label %bb2.i265
  ]

bb.i264:                                          ; preds = %bb25
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16286, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8228

bb2.i265:                                         ; preds = %bb25
  %175 = getelementptr inbounds i8* %173, i64 1, !dbg !8229
  %176 = load i8* %175, align 1, !dbg !8229
  switch i8 %176, label %bb9.preheader.i269 [
    i8 120, label %bb5.i266
    i8 88, label %bb5.i266
  ]

bb5.i266:                                         ; preds = %bb2.i265, %bb2.i265
  %177 = getelementptr inbounds i8* %173, i64 2, !dbg !8230
  br label %bb9.preheader.i269, !dbg !8230

bb9.preheader.i269:                               ; preds = %bb5.i266, %bb2.i265, %bb25
  %base.0.ph.i267 = phi i64 [ 10, %bb2.i265 ], [ 16, %bb5.i266 ], [ 10, %bb25 ]
  %s_addr.0.ph.i268 = phi i8* [ %173, %bb2.i265 ], [ %177, %bb5.i266 ], [ %173, %bb25 ]
  br label %bb9.i280

bb6.i270:                                         ; preds = %bb9.i280
  %178 = add i8 %194, -48, !dbg !8231
  %179 = icmp ult i8 %178, 10, !dbg !8231
  br i1 %179, label %bb.i330, label %bb1.i331, !dbg !8231

bb.i330:                                          ; preds = %bb6.i270
  %180 = sext i8 %194 to i32, !dbg !8231
  %181 = add nsw i32 %180, -48, !dbg !8231
  br label %__getxdigit.exit337, !dbg !8231

bb1.i331:                                         ; preds = %bb6.i270
  %182 = add i8 %194, -65, !dbg !8231
  %183 = icmp ult i8 %182, 6, !dbg !8231
  br i1 %183, label %bb2.i332, label %bb3.i333, !dbg !8231

bb2.i332:                                         ; preds = %bb1.i331
  %184 = sext i8 %194 to i32, !dbg !8231
  %185 = add nsw i32 %184, -55, !dbg !8231
  br label %__getxdigit.exit337, !dbg !8231

bb3.i333:                                         ; preds = %bb1.i331
  %186 = add i8 %194, -97, !dbg !8231
  %187 = icmp ult i8 %186, 6, !dbg !8231
  br i1 %187, label %bb4.i334, label %bb8.i276, !dbg !8231

bb4.i334:                                         ; preds = %bb3.i333
  %188 = sext i8 %194 to i32, !dbg !8231
  %189 = add nsw i32 %188, -87, !dbg !8231
  br label %__getxdigit.exit337, !dbg !8231

__getxdigit.exit337:                              ; preds = %bb4.i334, %bb2.i332, %bb.i330
  %iftmp.12.0.i335 = phi i32 [ %181, %bb.i330 ], [ %185, %bb2.i332 ], [ %189, %bb4.i334 ]
  %190 = icmp eq i32 %iftmp.12.0.i335, -1, !dbg !8233
  br i1 %190, label %bb8.i276, label %bb7.i272, !dbg !8233

bb7.i272:                                         ; preds = %__getxdigit.exit337
  %191 = mul nsw i64 %res.0.ph.i273, %base.0.ph.i267, !dbg !8234
  %192 = sext i32 %iftmp.12.0.i335 to i64, !dbg !8234
  %193 = add nsw i64 %192, %191, !dbg !8234
  %indvar.next1677 = add i64 %indvar1676, 1
  br label %bb9.i280, !dbg !8234

bb8.i276:                                         ; preds = %__getxdigit.exit337, %bb3.i333
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16286, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8235

bb9.i280:                                         ; preds = %bb7.i272, %bb9.preheader.i269
  %indvar1676 = phi i64 [ 0, %bb9.preheader.i269 ], [ %indvar.next1677, %bb7.i272 ]
  %res.0.ph.i273 = phi i64 [ 0, %bb9.preheader.i269 ], [ %193, %bb7.i272 ]
  %s_addr.0.ph14.i274 = getelementptr i8* %s_addr.0.ph.i268, i64 %indvar1676
  %194 = load i8* %s_addr.0.ph14.i274, align 1, !dbg !8237
  %195 = icmp eq i8 %194, 0, !dbg !8237
  br i1 %195, label %__str_to_int.exit281, label %bb6.i270, !dbg !8237

__str_to_int.exit281:                             ; preds = %bb9.i280
  %196 = trunc i64 %res.0.ph.i273 to i32, !dbg !8226
  %197 = sext i32 %168 to i64, !dbg !8238
  %198 = getelementptr inbounds i8** %1, i64 %197, !dbg !8238
  %199 = load i8** %198, align 8, !dbg !8238
  %200 = add i32 %k.0, 3, !dbg !8238
  %201 = load i8* %199, align 1, !dbg !8239
  switch i8 %201, label %bb9.preheader.i288 [
    i8 0, label %bb.i283
    i8 48, label %bb2.i284
  ]

bb.i283:                                          ; preds = %__str_to_int.exit281
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16286, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8240

bb2.i284:                                         ; preds = %__str_to_int.exit281
  %202 = getelementptr inbounds i8* %199, i64 1, !dbg !8241
  %203 = load i8* %202, align 1, !dbg !8241
  switch i8 %203, label %bb9.preheader.i288 [
    i8 120, label %bb5.i285
    i8 88, label %bb5.i285
  ]

bb5.i285:                                         ; preds = %bb2.i284, %bb2.i284
  %204 = getelementptr inbounds i8* %199, i64 2, !dbg !8242
  br label %bb9.preheader.i288, !dbg !8242

bb9.preheader.i288:                               ; preds = %bb5.i285, %bb2.i284, %__str_to_int.exit281
  %base.0.ph.i286 = phi i64 [ 10, %bb2.i284 ], [ 16, %bb5.i285 ], [ 10, %__str_to_int.exit281 ]
  %s_addr.0.ph.i287 = phi i8* [ %199, %bb2.i284 ], [ %204, %bb5.i285 ], [ %199, %__str_to_int.exit281 ]
  br label %bb9.i299

bb6.i289:                                         ; preds = %bb9.i299
  %205 = add i8 %221, -48, !dbg !8243
  %206 = icmp ult i8 %205, 10, !dbg !8243
  br i1 %206, label %bb.i312, label %bb1.i313, !dbg !8243

bb.i312:                                          ; preds = %bb6.i289
  %207 = sext i8 %221 to i32, !dbg !8243
  %208 = add nsw i32 %207, -48, !dbg !8243
  br label %__getxdigit.exit319, !dbg !8243

bb1.i313:                                         ; preds = %bb6.i289
  %209 = add i8 %221, -65, !dbg !8243
  %210 = icmp ult i8 %209, 6, !dbg !8243
  br i1 %210, label %bb2.i314, label %bb3.i315, !dbg !8243

bb2.i314:                                         ; preds = %bb1.i313
  %211 = sext i8 %221 to i32, !dbg !8243
  %212 = add nsw i32 %211, -55, !dbg !8243
  br label %__getxdigit.exit319, !dbg !8243

bb3.i315:                                         ; preds = %bb1.i313
  %213 = add i8 %221, -97, !dbg !8243
  %214 = icmp ult i8 %213, 6, !dbg !8243
  br i1 %214, label %bb4.i316, label %bb8.i295, !dbg !8243

bb4.i316:                                         ; preds = %bb3.i315
  %215 = sext i8 %221 to i32, !dbg !8243
  %216 = add nsw i32 %215, -87, !dbg !8243
  br label %__getxdigit.exit319, !dbg !8243

__getxdigit.exit319:                              ; preds = %bb4.i316, %bb2.i314, %bb.i312
  %iftmp.12.0.i317 = phi i32 [ %208, %bb.i312 ], [ %212, %bb2.i314 ], [ %216, %bb4.i316 ]
  %217 = icmp eq i32 %iftmp.12.0.i317, -1, !dbg !8245
  br i1 %217, label %bb8.i295, label %bb7.i291, !dbg !8245

bb7.i291:                                         ; preds = %__getxdigit.exit319
  %218 = mul nsw i64 %res.0.ph.i292, %base.0.ph.i286, !dbg !8246
  %219 = sext i32 %iftmp.12.0.i317 to i64, !dbg !8246
  %220 = add nsw i64 %219, %218, !dbg !8246
  %indvar.next1680 = add i64 %indvar1679, 1
  br label %bb9.i299, !dbg !8246

bb8.i295:                                         ; preds = %__getxdigit.exit319, %bb3.i315
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16286, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8247

bb9.i299:                                         ; preds = %bb7.i291, %bb9.preheader.i288
  %indvar1679 = phi i64 [ 0, %bb9.preheader.i288 ], [ %indvar.next1680, %bb7.i291 ]
  %res.0.ph.i292 = phi i64 [ 0, %bb9.preheader.i288 ], [ %220, %bb7.i291 ]
  %s_addr.0.ph14.i293 = getelementptr i8* %s_addr.0.ph.i287, i64 %indvar1679
  %221 = load i8* %s_addr.0.ph14.i293, align 1, !dbg !8249
  %222 = icmp eq i8 %221, 0, !dbg !8249
  br i1 %222, label %__str_to_int.exit300, label %bb6.i289, !dbg !8249

__str_to_int.exit300:                             ; preds = %bb9.i299
  %223 = trunc i64 %res.0.ph.i292 to i32, !dbg !8238
  br label %bb99, !dbg !8238

bb.i302:                                          ; preds = %bb3.i308
  %224 = icmp eq i8 %225, 0, !dbg !8250
  br i1 %224, label %bb28, label %bb2.i304, !dbg !8250

bb2.i304:                                         ; preds = %bb.i302
  %indvar.next.i303 = add i64 %indvar.i305, 1
  br label %bb3.i308, !dbg !8252

bb3.i308:                                         ; preds = %bb2.i304, %bb3.i251
  %indvar.i305 = phi i64 [ %indvar.next.i303, %bb2.i304 ], [ 0, %bb3.i251 ]
  %a_addr.0.i307 = getelementptr i8* %18, i64 %indvar.i305
  %b_addr.0.i306 = getelementptr [13 x i8]* @.str17287, i64 0, i64 %indvar.i305
  %225 = load i8* %a_addr.0.i307, align 1, !dbg !8253
  %226 = load i8* %b_addr.0.i306, align 1, !dbg !8253
  %227 = icmp eq i8 %225, %226, !dbg !8253
  br i1 %227, label %bb.i302, label %bb3.i326, !dbg !8253

bb.i320:                                          ; preds = %bb3.i326
  %228 = icmp eq i8 %229, 0, !dbg !8250
  br i1 %228, label %bb28, label %bb2.i322, !dbg !8250

bb2.i322:                                         ; preds = %bb.i320
  %indvar.next.i321 = add i64 %indvar.i323, 1
  br label %bb3.i326, !dbg !8252

bb3.i326:                                         ; preds = %bb2.i322, %bb3.i308
  %indvar.i323 = phi i64 [ %indvar.next.i321, %bb2.i322 ], [ 0, %bb3.i308 ]
  %a_addr.0.i325 = getelementptr i8* %18, i64 %indvar.i323
  %b_addr.0.i324 = getelementptr [12 x i8]* @.str18288, i64 0, i64 %indvar.i323
  %229 = load i8* %a_addr.0.i325, align 1, !dbg !8253
  %230 = load i8* %b_addr.0.i324, align 1, !dbg !8253
  %231 = icmp eq i8 %229, %230, !dbg !8253
  br i1 %231, label %bb.i320, label %bb3.i344, !dbg !8253

bb28:                                             ; preds = %bb.i320, %bb.i302
  %232 = add nsw i32 %k.0, 1, !dbg !8254
  br label %bb99, !dbg !8254

bb.i338:                                          ; preds = %bb3.i344
  %233 = icmp eq i8 %234, 0, !dbg !8255
  br i1 %233, label %bb31, label %bb2.i340, !dbg !8255

bb2.i340:                                         ; preds = %bb.i338
  %indvar.next.i339 = add i64 %indvar.i341, 1
  br label %bb3.i344, !dbg !8257

bb3.i344:                                         ; preds = %bb2.i340, %bb3.i326
  %indvar.i341 = phi i64 [ %indvar.next.i339, %bb2.i340 ], [ 0, %bb3.i326 ]
  %a_addr.0.i343 = getelementptr i8* %18, i64 %indvar.i341
  %b_addr.0.i342 = getelementptr [18 x i8]* @.str19289, i64 0, i64 %indvar.i341
  %234 = load i8* %a_addr.0.i343, align 1, !dbg !8258
  %235 = load i8* %b_addr.0.i342, align 1, !dbg !8258
  %236 = icmp eq i8 %234, %235, !dbg !8258
  br i1 %236, label %bb.i338, label %bb3.i362, !dbg !8258

bb.i356:                                          ; preds = %bb3.i362
  %237 = icmp eq i8 %238, 0, !dbg !8255
  br i1 %237, label %bb31, label %bb2.i358, !dbg !8255

bb2.i358:                                         ; preds = %bb.i356
  %indvar.next.i357 = add i64 %indvar.i359, 1
  br label %bb3.i362, !dbg !8257

bb3.i362:                                         ; preds = %bb2.i358, %bb3.i344
  %indvar.i359 = phi i64 [ %indvar.next.i357, %bb2.i358 ], [ 0, %bb3.i344 ]
  %a_addr.0.i361 = getelementptr i8* %18, i64 %indvar.i359
  %b_addr.0.i360 = getelementptr [17 x i8]* @.str20290, i64 0, i64 %indvar.i359
  %238 = load i8* %a_addr.0.i361, align 1, !dbg !8258
  %239 = load i8* %b_addr.0.i360, align 1, !dbg !8258
  %240 = icmp eq i8 %238, %239, !dbg !8258
  br i1 %240, label %bb.i356, label %bb3.i373, !dbg !8258

bb31:                                             ; preds = %bb.i356, %bb.i338
  %241 = add nsw i32 %k.0, 1, !dbg !8259
  br label %bb99, !dbg !8259

bb.i367:                                          ; preds = %bb3.i373
  %242 = icmp eq i8 %243, 0, !dbg !8260
  br i1 %242, label %bb34, label %bb2.i369, !dbg !8260

bb2.i369:                                         ; preds = %bb.i367
  %indvar.next.i368 = add i64 %indvar.i370, 1
  br label %bb3.i373, !dbg !8262

bb3.i373:                                         ; preds = %bb2.i369, %bb3.i362
  %indvar.i370 = phi i64 [ %indvar.next.i368, %bb2.i369 ], [ 0, %bb3.i362 ]
  %a_addr.0.i372 = getelementptr i8* %18, i64 %indvar.i370
  %b_addr.0.i371 = getelementptr [10 x i8]* @.str21291, i64 0, i64 %indvar.i370
  %243 = load i8* %a_addr.0.i372, align 1, !dbg !8263
  %244 = load i8* %b_addr.0.i371, align 1, !dbg !8263
  %245 = icmp eq i8 %243, %244, !dbg !8263
  br i1 %245, label %bb.i367, label %bb3.i412, !dbg !8263

bb.i406:                                          ; preds = %bb3.i412
  %246 = icmp eq i8 %247, 0, !dbg !8260
  br i1 %246, label %bb34, label %bb2.i408, !dbg !8260

bb2.i408:                                         ; preds = %bb.i406
  %indvar.next.i407 = add i64 %indvar.i409, 1
  br label %bb3.i412, !dbg !8262

bb3.i412:                                         ; preds = %bb2.i408, %bb3.i373
  %indvar.i409 = phi i64 [ %indvar.next.i407, %bb2.i408 ], [ 0, %bb3.i373 ]
  %a_addr.0.i411 = getelementptr i8* %18, i64 %indvar.i409
  %b_addr.0.i410 = getelementptr [9 x i8]* @.str22292, i64 0, i64 %indvar.i409
  %247 = load i8* %a_addr.0.i411, align 1, !dbg !8263
  %248 = load i8* %b_addr.0.i410, align 1, !dbg !8263
  %249 = icmp eq i8 %247, %248, !dbg !8263
  br i1 %249, label %bb.i406, label %bb3.i430, !dbg !8263

bb34:                                             ; preds = %bb.i406, %bb.i367
  %250 = add nsw i32 %k.0, 1, !dbg !8264
  br label %bb99, !dbg !8264

bb.i424:                                          ; preds = %bb3.i430
  %251 = icmp eq i8 %252, 0, !dbg !8265
  br i1 %251, label %bb37, label %bb2.i426, !dbg !8265

bb2.i426:                                         ; preds = %bb.i424
  %indvar.next.i425 = add i64 %indvar.i427, 1
  br label %bb3.i430, !dbg !8267

bb3.i430:                                         ; preds = %bb2.i426, %bb3.i412
  %indvar.i427 = phi i64 [ %indvar.next.i425, %bb2.i426 ], [ 0, %bb3.i412 ]
  %a_addr.0.i429 = getelementptr i8* %18, i64 %indvar.i427
  %b_addr.0.i428 = getelementptr [11 x i8]* @.str23293, i64 0, i64 %indvar.i427
  %252 = load i8* %a_addr.0.i429, align 1, !dbg !8268
  %253 = load i8* %b_addr.0.i428, align 1, !dbg !8268
  %254 = icmp eq i8 %252, %253, !dbg !8268
  br i1 %254, label %bb.i424, label %bb3.i459, !dbg !8268

bb.i453:                                          ; preds = %bb3.i459
  %255 = icmp eq i8 %256, 0, !dbg !8265
  br i1 %255, label %bb37, label %bb2.i455, !dbg !8265

bb2.i455:                                         ; preds = %bb.i453
  %indvar.next.i454 = add i64 %indvar.i456, 1
  br label %bb3.i459, !dbg !8267

bb3.i459:                                         ; preds = %bb2.i455, %bb3.i430
  %indvar.i456 = phi i64 [ %indvar.next.i454, %bb2.i455 ], [ 0, %bb3.i430 ]
  %a_addr.0.i458 = getelementptr i8* %18, i64 %indvar.i456
  %b_addr.0.i457 = getelementptr [10 x i8]* @.str24294, i64 0, i64 %indvar.i456
  %256 = load i8* %a_addr.0.i458, align 1, !dbg !8268
  %257 = load i8* %b_addr.0.i457, align 1, !dbg !8268
  %258 = icmp eq i8 %256, %257, !dbg !8268
  br i1 %258, label %bb.i453, label %bb3.i497, !dbg !8268

bb37:                                             ; preds = %bb.i453, %bb.i424
  %259 = add nsw i32 %k.0, 1, !dbg !8269
  %260 = icmp eq i32 %259, %0, !dbg !8269
  br i1 %260, label %bb39, label %bb40, !dbg !8269

bb39:                                             ; preds = %bb37
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([54 x i8]* @.str25295, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8270

bb40:                                             ; preds = %bb37
  %261 = sext i32 %259 to i64, !dbg !8272
  %262 = getelementptr inbounds i8** %1, i64 %261, !dbg !8272
  %263 = load i8** %262, align 8, !dbg !8272
  %264 = add i32 %k.0, 2, !dbg !8272
  %265 = load i8* %263, align 1, !dbg !8273
  switch i8 %265, label %bb9.preheader.i477 [
    i8 0, label %bb.i472
    i8 48, label %bb2.i473
  ]

bb.i472:                                          ; preds = %bb40
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([54 x i8]* @.str25295, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8274

bb2.i473:                                         ; preds = %bb40
  %266 = getelementptr inbounds i8* %263, i64 1, !dbg !8275
  %267 = load i8* %266, align 1, !dbg !8275
  switch i8 %267, label %bb9.preheader.i477 [
    i8 120, label %bb5.i474
    i8 88, label %bb5.i474
  ]

bb5.i474:                                         ; preds = %bb2.i473, %bb2.i473
  %268 = getelementptr inbounds i8* %263, i64 2, !dbg !8276
  br label %bb9.preheader.i477, !dbg !8276

bb9.preheader.i477:                               ; preds = %bb5.i474, %bb2.i473, %bb40
  %base.0.ph.i475 = phi i64 [ 10, %bb2.i473 ], [ 16, %bb5.i474 ], [ 10, %bb40 ]
  %s_addr.0.ph.i476 = phi i8* [ %263, %bb2.i473 ], [ %268, %bb5.i474 ], [ %263, %bb40 ]
  br label %bb9.i488

bb6.i478:                                         ; preds = %bb9.i488
  %269 = add i8 %285, -48, !dbg !8277
  %270 = icmp ult i8 %269, 10, !dbg !8277
  br i1 %270, label %bb.i501, label %bb1.i502, !dbg !8277

bb.i501:                                          ; preds = %bb6.i478
  %271 = sext i8 %285 to i32, !dbg !8277
  %272 = add nsw i32 %271, -48, !dbg !8277
  br label %__getxdigit.exit508, !dbg !8277

bb1.i502:                                         ; preds = %bb6.i478
  %273 = add i8 %285, -65, !dbg !8277
  %274 = icmp ult i8 %273, 6, !dbg !8277
  br i1 %274, label %bb2.i503, label %bb3.i504, !dbg !8277

bb2.i503:                                         ; preds = %bb1.i502
  %275 = sext i8 %285 to i32, !dbg !8277
  %276 = add nsw i32 %275, -55, !dbg !8277
  br label %__getxdigit.exit508, !dbg !8277

bb3.i504:                                         ; preds = %bb1.i502
  %277 = add i8 %285, -97, !dbg !8277
  %278 = icmp ult i8 %277, 6, !dbg !8277
  br i1 %278, label %bb4.i505, label %bb8.i484, !dbg !8277

bb4.i505:                                         ; preds = %bb3.i504
  %279 = sext i8 %285 to i32, !dbg !8277
  %280 = add nsw i32 %279, -87, !dbg !8277
  br label %__getxdigit.exit508, !dbg !8277

__getxdigit.exit508:                              ; preds = %bb4.i505, %bb2.i503, %bb.i501
  %iftmp.12.0.i506 = phi i32 [ %272, %bb.i501 ], [ %276, %bb2.i503 ], [ %280, %bb4.i505 ]
  %281 = icmp eq i32 %iftmp.12.0.i506, -1, !dbg !8279
  br i1 %281, label %bb8.i484, label %bb7.i480, !dbg !8279

bb7.i480:                                         ; preds = %__getxdigit.exit508
  %282 = mul nsw i64 %res.0.ph.i481, %base.0.ph.i475, !dbg !8280
  %283 = sext i32 %iftmp.12.0.i506 to i64, !dbg !8280
  %284 = add nsw i64 %283, %282, !dbg !8280
  %indvar.next1674 = add i64 %indvar1673, 1
  br label %bb9.i488, !dbg !8280

bb8.i484:                                         ; preds = %__getxdigit.exit508, %bb3.i504
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([54 x i8]* @.str25295, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8281

bb9.i488:                                         ; preds = %bb7.i480, %bb9.preheader.i477
  %indvar1673 = phi i64 [ 0, %bb9.preheader.i477 ], [ %indvar.next1674, %bb7.i480 ]
  %res.0.ph.i481 = phi i64 [ 0, %bb9.preheader.i477 ], [ %284, %bb7.i480 ]
  %s_addr.0.ph14.i482 = getelementptr i8* %s_addr.0.ph.i476, i64 %indvar1673
  %285 = load i8* %s_addr.0.ph14.i482, align 1, !dbg !8283
  %286 = icmp eq i8 %285, 0, !dbg !8283
  br i1 %286, label %__str_to_int.exit489, label %bb6.i478, !dbg !8283

__str_to_int.exit489:                             ; preds = %bb9.i488
  %287 = trunc i64 %res.0.ph.i481 to i32, !dbg !8272
  br label %bb99, !dbg !8272

bb.i491:                                          ; preds = %bb3.i497
  %288 = icmp eq i8 %289, 0, !dbg !8284
  br i1 %288, label %bb43, label %bb2.i493, !dbg !8284

bb2.i493:                                         ; preds = %bb.i491
  %indvar.next.i492 = add i64 %indvar.i494, 1
  br label %bb3.i497, !dbg !8286

bb3.i497:                                         ; preds = %bb2.i493, %bb3.i459
  %indvar.i494 = phi i64 [ %indvar.next.i492, %bb2.i493 ], [ 0, %bb3.i459 ]
  %a_addr.0.i496 = getelementptr i8* %18, i64 %indvar.i494
  %b_addr.0.i495 = getelementptr [14 x i8]* @.str26296, i64 0, i64 %indvar.i494
  %289 = load i8* %a_addr.0.i496, align 1, !dbg !8287
  %290 = load i8* %b_addr.0.i495, align 1, !dbg !8287
  %291 = icmp eq i8 %289, %290, !dbg !8287
  br i1 %291, label %bb.i491, label %bb3.i515, !dbg !8287

bb.i509:                                          ; preds = %bb3.i515
  %292 = icmp eq i8 %293, 0, !dbg !8284
  br i1 %292, label %bb43, label %bb2.i511, !dbg !8284

bb2.i511:                                         ; preds = %bb.i509
  %indvar.next.i510 = add i64 %indvar.i512, 1
  br label %bb3.i515, !dbg !8286

bb3.i515:                                         ; preds = %bb2.i511, %bb3.i497
  %indvar.i512 = phi i64 [ %indvar.next.i510, %bb2.i511 ], [ 0, %bb3.i497 ]
  %a_addr.0.i514 = getelementptr i8* %18, i64 %indvar.i512
  %b_addr.0.i513 = getelementptr [13 x i8]* @.str27297, i64 0, i64 %indvar.i512
  %293 = load i8* %a_addr.0.i514, align 1, !dbg !8287
  %294 = load i8* %b_addr.0.i513, align 1, !dbg !8287
  %295 = icmp eq i8 %293, %294, !dbg !8287
  br i1 %295, label %bb.i509, label %bb3.i565, !dbg !8287

bb43:                                             ; preds = %bb.i509, %bb.i491
  %296 = add nsw i32 %k.0, 2, !dbg !8288
  %297 = icmp slt i32 %296, %0, !dbg !8288
  br i1 %297, label %bb46, label %bb45, !dbg !8288

bb45:                                             ; preds = %bb43
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28298, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8289

bb46:                                             ; preds = %bb43
  %298 = add nsw i32 %k.0, 1, !dbg !8291
  %299 = sext i32 %298 to i64, !dbg !8292
  %300 = getelementptr inbounds i8** %1, i64 %299, !dbg !8292
  %301 = load i8** %300, align 8, !dbg !8292
  %302 = load i8* %301, align 1, !dbg !8293
  switch i8 %302, label %bb9.preheader.i526 [
    i8 0, label %bb.i521
    i8 48, label %bb2.i522
  ]

bb.i521:                                          ; preds = %bb46
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28298, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8294

bb2.i522:                                         ; preds = %bb46
  %303 = getelementptr inbounds i8* %301, i64 1, !dbg !8295
  %304 = load i8* %303, align 1, !dbg !8295
  switch i8 %304, label %bb9.preheader.i526 [
    i8 120, label %bb5.i523
    i8 88, label %bb5.i523
  ]

bb5.i523:                                         ; preds = %bb2.i522, %bb2.i522
  %305 = getelementptr inbounds i8* %301, i64 2, !dbg !8296
  br label %bb9.preheader.i526, !dbg !8296

bb9.preheader.i526:                               ; preds = %bb5.i523, %bb2.i522, %bb46
  %base.0.ph.i524 = phi i64 [ 10, %bb2.i522 ], [ 16, %bb5.i523 ], [ 10, %bb46 ]
  %s_addr.0.ph.i525 = phi i8* [ %301, %bb2.i522 ], [ %305, %bb5.i523 ], [ %301, %bb46 ]
  br label %bb9.i537

bb6.i527:                                         ; preds = %bb9.i537
  %306 = add i8 %322, -48, !dbg !8297
  %307 = icmp ult i8 %306, 10, !dbg !8297
  br i1 %307, label %bb.i587, label %bb1.i588, !dbg !8297

bb.i587:                                          ; preds = %bb6.i527
  %308 = sext i8 %322 to i32, !dbg !8297
  %309 = add nsw i32 %308, -48, !dbg !8297
  br label %__getxdigit.exit594, !dbg !8297

bb1.i588:                                         ; preds = %bb6.i527
  %310 = add i8 %322, -65, !dbg !8297
  %311 = icmp ult i8 %310, 6, !dbg !8297
  br i1 %311, label %bb2.i589, label %bb3.i590, !dbg !8297

bb2.i589:                                         ; preds = %bb1.i588
  %312 = sext i8 %322 to i32, !dbg !8297
  %313 = add nsw i32 %312, -55, !dbg !8297
  br label %__getxdigit.exit594, !dbg !8297

bb3.i590:                                         ; preds = %bb1.i588
  %314 = add i8 %322, -97, !dbg !8297
  %315 = icmp ult i8 %314, 6, !dbg !8297
  br i1 %315, label %bb4.i591, label %bb8.i533, !dbg !8297

bb4.i591:                                         ; preds = %bb3.i590
  %316 = sext i8 %322 to i32, !dbg !8297
  %317 = add nsw i32 %316, -87, !dbg !8297
  br label %__getxdigit.exit594, !dbg !8297

__getxdigit.exit594:                              ; preds = %bb4.i591, %bb2.i589, %bb.i587
  %iftmp.12.0.i592 = phi i32 [ %309, %bb.i587 ], [ %313, %bb2.i589 ], [ %317, %bb4.i591 ]
  %318 = icmp eq i32 %iftmp.12.0.i592, -1, !dbg !8299
  br i1 %318, label %bb8.i533, label %bb7.i529, !dbg !8299

bb7.i529:                                         ; preds = %__getxdigit.exit594
  %319 = mul nsw i64 %res.0.ph.i530, %base.0.ph.i524, !dbg !8300
  %320 = sext i32 %iftmp.12.0.i592 to i64, !dbg !8300
  %321 = add nsw i64 %320, %319, !dbg !8300
  %indvar.next1668 = add i64 %indvar1667, 1
  br label %bb9.i537, !dbg !8300

bb8.i533:                                         ; preds = %__getxdigit.exit594, %bb3.i590
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28298, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8301

bb9.i537:                                         ; preds = %bb7.i529, %bb9.preheader.i526
  %indvar1667 = phi i64 [ 0, %bb9.preheader.i526 ], [ %indvar.next1668, %bb7.i529 ]
  %res.0.ph.i530 = phi i64 [ 0, %bb9.preheader.i526 ], [ %321, %bb7.i529 ]
  %s_addr.0.ph14.i531 = getelementptr i8* %s_addr.0.ph.i525, i64 %indvar1667
  %322 = load i8* %s_addr.0.ph14.i531, align 1, !dbg !8303
  %323 = icmp eq i8 %322, 0, !dbg !8303
  br i1 %323, label %__str_to_int.exit538, label %bb6.i527, !dbg !8303

__str_to_int.exit538:                             ; preds = %bb9.i537
  %324 = trunc i64 %res.0.ph.i530 to i32, !dbg !8292
  %325 = sext i32 %296 to i64, !dbg !8304
  %326 = getelementptr inbounds i8** %1, i64 %325, !dbg !8304
  %327 = load i8** %326, align 8, !dbg !8304
  %328 = add i32 %k.0, 3, !dbg !8304
  %329 = load i8* %327, align 1, !dbg !8305
  switch i8 %329, label %bb9.preheader.i545 [
    i8 0, label %bb.i540
    i8 48, label %bb2.i541
  ]

bb.i540:                                          ; preds = %__str_to_int.exit538
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28298, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8306

bb2.i541:                                         ; preds = %__str_to_int.exit538
  %330 = getelementptr inbounds i8* %327, i64 1, !dbg !8307
  %331 = load i8* %330, align 1, !dbg !8307
  switch i8 %331, label %bb9.preheader.i545 [
    i8 120, label %bb5.i542
    i8 88, label %bb5.i542
  ]

bb5.i542:                                         ; preds = %bb2.i541, %bb2.i541
  %332 = getelementptr inbounds i8* %327, i64 2, !dbg !8308
  br label %bb9.preheader.i545, !dbg !8308

bb9.preheader.i545:                               ; preds = %bb5.i542, %bb2.i541, %__str_to_int.exit538
  %base.0.ph.i543 = phi i64 [ 10, %bb2.i541 ], [ 16, %bb5.i542 ], [ 10, %__str_to_int.exit538 ]
  %s_addr.0.ph.i544 = phi i8* [ %327, %bb2.i541 ], [ %332, %bb5.i542 ], [ %327, %__str_to_int.exit538 ]
  br label %bb9.i556

bb6.i546:                                         ; preds = %bb9.i556
  %333 = add i8 %349, -48, !dbg !8309
  %334 = icmp ult i8 %333, 10, !dbg !8309
  br i1 %334, label %bb.i569, label %bb1.i570, !dbg !8309

bb.i569:                                          ; preds = %bb6.i546
  %335 = sext i8 %349 to i32, !dbg !8309
  %336 = add nsw i32 %335, -48, !dbg !8309
  br label %__getxdigit.exit576, !dbg !8309

bb1.i570:                                         ; preds = %bb6.i546
  %337 = add i8 %349, -65, !dbg !8309
  %338 = icmp ult i8 %337, 6, !dbg !8309
  br i1 %338, label %bb2.i571, label %bb3.i572, !dbg !8309

bb2.i571:                                         ; preds = %bb1.i570
  %339 = sext i8 %349 to i32, !dbg !8309
  %340 = add nsw i32 %339, -55, !dbg !8309
  br label %__getxdigit.exit576, !dbg !8309

bb3.i572:                                         ; preds = %bb1.i570
  %341 = add i8 %349, -97, !dbg !8309
  %342 = icmp ult i8 %341, 6, !dbg !8309
  br i1 %342, label %bb4.i573, label %bb8.i552, !dbg !8309

bb4.i573:                                         ; preds = %bb3.i572
  %343 = sext i8 %349 to i32, !dbg !8309
  %344 = add nsw i32 %343, -87, !dbg !8309
  br label %__getxdigit.exit576, !dbg !8309

__getxdigit.exit576:                              ; preds = %bb4.i573, %bb2.i571, %bb.i569
  %iftmp.12.0.i574 = phi i32 [ %336, %bb.i569 ], [ %340, %bb2.i571 ], [ %344, %bb4.i573 ]
  %345 = icmp eq i32 %iftmp.12.0.i574, -1, !dbg !8311
  br i1 %345, label %bb8.i552, label %bb7.i548, !dbg !8311

bb7.i548:                                         ; preds = %__getxdigit.exit576
  %346 = mul nsw i64 %res.0.ph.i549, %base.0.ph.i543, !dbg !8312
  %347 = sext i32 %iftmp.12.0.i574 to i64, !dbg !8312
  %348 = add nsw i64 %347, %346, !dbg !8312
  %indvar.next1671 = add i64 %indvar1670, 1
  br label %bb9.i556, !dbg !8312

bb8.i552:                                         ; preds = %__getxdigit.exit576, %bb3.i572
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28298, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8313

bb9.i556:                                         ; preds = %bb7.i548, %bb9.preheader.i545
  %indvar1670 = phi i64 [ 0, %bb9.preheader.i545 ], [ %indvar.next1671, %bb7.i548 ]
  %res.0.ph.i549 = phi i64 [ 0, %bb9.preheader.i545 ], [ %348, %bb7.i548 ]
  %s_addr.0.ph14.i550 = getelementptr i8* %s_addr.0.ph.i544, i64 %indvar1670
  %349 = load i8* %s_addr.0.ph14.i550, align 1, !dbg !8315
  %350 = icmp eq i8 %349, 0, !dbg !8315
  br i1 %350, label %__str_to_int.exit557, label %bb6.i546, !dbg !8315

__str_to_int.exit557:                             ; preds = %bb9.i556
  %351 = trunc i64 %res.0.ph.i549 to i32, !dbg !8304
  br label %bb99, !dbg !8304

bb.i559:                                          ; preds = %bb3.i565
  %352 = icmp eq i8 %353, 0, !dbg !8316
  br i1 %352, label %bb49, label %bb2.i561, !dbg !8316

bb2.i561:                                         ; preds = %bb.i559
  %indvar.next.i560 = add i64 %indvar.i562, 1
  br label %bb3.i565, !dbg !8318

bb3.i565:                                         ; preds = %bb2.i561, %bb3.i515
  %indvar.i562 = phi i64 [ %indvar.next.i560, %bb2.i561 ], [ 0, %bb3.i515 ]
  %a_addr.0.i564 = getelementptr i8* %18, i64 %indvar.i562
  %b_addr.0.i563 = getelementptr [16 x i8]* @.str29299, i64 0, i64 %indvar.i562
  %353 = load i8* %a_addr.0.i564, align 1, !dbg !8319
  %354 = load i8* %b_addr.0.i563, align 1, !dbg !8319
  %355 = icmp eq i8 %353, %354, !dbg !8319
  br i1 %355, label %bb.i559, label %bb3.i583, !dbg !8319

bb.i577:                                          ; preds = %bb3.i583
  %356 = icmp eq i8 %357, 0, !dbg !8316
  br i1 %356, label %bb49, label %bb2.i579, !dbg !8316

bb2.i579:                                         ; preds = %bb.i577
  %indvar.next.i578 = add i64 %indvar.i580, 1
  br label %bb3.i583, !dbg !8318

bb3.i583:                                         ; preds = %bb2.i579, %bb3.i565
  %indvar.i580 = phi i64 [ %indvar.next.i578, %bb2.i579 ], [ 0, %bb3.i565 ]
  %a_addr.0.i582 = getelementptr i8* %18, i64 %indvar.i580
  %b_addr.0.i581 = getelementptr [15 x i8]* @.str30300, i64 0, i64 %indvar.i580
  %357 = load i8* %a_addr.0.i582, align 1, !dbg !8319
  %358 = load i8* %b_addr.0.i581, align 1, !dbg !8319
  %359 = icmp eq i8 %357, %358, !dbg !8319
  br i1 %359, label %bb.i577, label %bb3.i640, !dbg !8319

bb49:                                             ; preds = %bb.i577, %bb.i559
  %360 = add nsw i32 %k.0, 2, !dbg !8320
  %361 = icmp slt i32 %360, %0, !dbg !8320
  br i1 %361, label %bb52, label %bb51, !dbg !8320

bb51:                                             ; preds = %bb49
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31301, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8321

bb52:                                             ; preds = %bb49
  %362 = add nsw i32 %k.0, 1, !dbg !8323
  %363 = sext i32 %362 to i64, !dbg !8324
  %364 = getelementptr inbounds i8** %1, i64 %363, !dbg !8324
  %365 = load i8** %364, align 8, !dbg !8324
  %366 = load i8* %365, align 1, !dbg !8325
  switch i8 %366, label %bb9.preheader.i601 [
    i8 0, label %bb.i596
    i8 48, label %bb2.i597
  ]

bb.i596:                                          ; preds = %bb52
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31301, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8326

bb2.i597:                                         ; preds = %bb52
  %367 = getelementptr inbounds i8* %365, i64 1, !dbg !8327
  %368 = load i8* %367, align 1, !dbg !8327
  switch i8 %368, label %bb9.preheader.i601 [
    i8 120, label %bb5.i598
    i8 88, label %bb5.i598
  ]

bb5.i598:                                         ; preds = %bb2.i597, %bb2.i597
  %369 = getelementptr inbounds i8* %365, i64 2, !dbg !8328
  br label %bb9.preheader.i601, !dbg !8328

bb9.preheader.i601:                               ; preds = %bb5.i598, %bb2.i597, %bb52
  %base.0.ph.i599 = phi i64 [ 10, %bb2.i597 ], [ 16, %bb5.i598 ], [ 10, %bb52 ]
  %s_addr.0.ph.i600 = phi i8* [ %365, %bb2.i597 ], [ %369, %bb5.i598 ], [ %365, %bb52 ]
  br label %bb9.i612

bb6.i602:                                         ; preds = %bb9.i612
  %370 = add i8 %386, -48, !dbg !8329
  %371 = icmp ult i8 %370, 10, !dbg !8329
  br i1 %371, label %bb.i662, label %bb1.i663, !dbg !8329

bb.i662:                                          ; preds = %bb6.i602
  %372 = sext i8 %386 to i32, !dbg !8329
  %373 = add nsw i32 %372, -48, !dbg !8329
  br label %__getxdigit.exit669, !dbg !8329

bb1.i663:                                         ; preds = %bb6.i602
  %374 = add i8 %386, -65, !dbg !8329
  %375 = icmp ult i8 %374, 6, !dbg !8329
  br i1 %375, label %bb2.i664, label %bb3.i665, !dbg !8329

bb2.i664:                                         ; preds = %bb1.i663
  %376 = sext i8 %386 to i32, !dbg !8329
  %377 = add nsw i32 %376, -55, !dbg !8329
  br label %__getxdigit.exit669, !dbg !8329

bb3.i665:                                         ; preds = %bb1.i663
  %378 = add i8 %386, -97, !dbg !8329
  %379 = icmp ult i8 %378, 6, !dbg !8329
  br i1 %379, label %bb4.i666, label %bb8.i608, !dbg !8329

bb4.i666:                                         ; preds = %bb3.i665
  %380 = sext i8 %386 to i32, !dbg !8329
  %381 = add nsw i32 %380, -87, !dbg !8329
  br label %__getxdigit.exit669, !dbg !8329

__getxdigit.exit669:                              ; preds = %bb4.i666, %bb2.i664, %bb.i662
  %iftmp.12.0.i667 = phi i32 [ %373, %bb.i662 ], [ %377, %bb2.i664 ], [ %381, %bb4.i666 ]
  %382 = icmp eq i32 %iftmp.12.0.i667, -1, !dbg !8331
  br i1 %382, label %bb8.i608, label %bb7.i604, !dbg !8331

bb7.i604:                                         ; preds = %__getxdigit.exit669
  %383 = mul nsw i64 %res.0.ph.i605, %base.0.ph.i599, !dbg !8332
  %384 = sext i32 %iftmp.12.0.i667 to i64, !dbg !8332
  %385 = add nsw i64 %384, %383, !dbg !8332
  %indvar.next1662 = add i64 %indvar1661, 1
  br label %bb9.i612, !dbg !8332

bb8.i608:                                         ; preds = %__getxdigit.exit669, %bb3.i665
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31301, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8333

bb9.i612:                                         ; preds = %bb7.i604, %bb9.preheader.i601
  %indvar1661 = phi i64 [ 0, %bb9.preheader.i601 ], [ %indvar.next1662, %bb7.i604 ]
  %res.0.ph.i605 = phi i64 [ 0, %bb9.preheader.i601 ], [ %385, %bb7.i604 ]
  %s_addr.0.ph14.i606 = getelementptr i8* %s_addr.0.ph.i600, i64 %indvar1661
  %386 = load i8* %s_addr.0.ph14.i606, align 1, !dbg !8335
  %387 = icmp eq i8 %386, 0, !dbg !8335
  br i1 %387, label %__str_to_int.exit613, label %bb6.i602, !dbg !8335

__str_to_int.exit613:                             ; preds = %bb9.i612
  %388 = trunc i64 %res.0.ph.i605 to i32, !dbg !8324
  %389 = sext i32 %360 to i64, !dbg !8336
  %390 = getelementptr inbounds i8** %1, i64 %389, !dbg !8336
  %391 = load i8** %390, align 8, !dbg !8336
  %392 = add i32 %k.0, 3, !dbg !8336
  %393 = load i8* %391, align 1, !dbg !8337
  switch i8 %393, label %bb9.preheader.i620 [
    i8 0, label %bb.i615
    i8 48, label %bb2.i616
  ]

bb.i615:                                          ; preds = %__str_to_int.exit613
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31301, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8338

bb2.i616:                                         ; preds = %__str_to_int.exit613
  %394 = getelementptr inbounds i8* %391, i64 1, !dbg !8339
  %395 = load i8* %394, align 1, !dbg !8339
  switch i8 %395, label %bb9.preheader.i620 [
    i8 120, label %bb5.i617
    i8 88, label %bb5.i617
  ]

bb5.i617:                                         ; preds = %bb2.i616, %bb2.i616
  %396 = getelementptr inbounds i8* %391, i64 2, !dbg !8340
  br label %bb9.preheader.i620, !dbg !8340

bb9.preheader.i620:                               ; preds = %bb5.i617, %bb2.i616, %__str_to_int.exit613
  %base.0.ph.i618 = phi i64 [ 10, %bb2.i616 ], [ 16, %bb5.i617 ], [ 10, %__str_to_int.exit613 ]
  %s_addr.0.ph.i619 = phi i8* [ %391, %bb2.i616 ], [ %396, %bb5.i617 ], [ %391, %__str_to_int.exit613 ]
  br label %bb9.i631

bb6.i621:                                         ; preds = %bb9.i631
  %397 = add i8 %413, -48, !dbg !8341
  %398 = icmp ult i8 %397, 10, !dbg !8341
  br i1 %398, label %bb.i644, label %bb1.i645, !dbg !8341

bb.i644:                                          ; preds = %bb6.i621
  %399 = sext i8 %413 to i32, !dbg !8341
  %400 = add nsw i32 %399, -48, !dbg !8341
  br label %__getxdigit.exit651, !dbg !8341

bb1.i645:                                         ; preds = %bb6.i621
  %401 = add i8 %413, -65, !dbg !8341
  %402 = icmp ult i8 %401, 6, !dbg !8341
  br i1 %402, label %bb2.i646, label %bb3.i647, !dbg !8341

bb2.i646:                                         ; preds = %bb1.i645
  %403 = sext i8 %413 to i32, !dbg !8341
  %404 = add nsw i32 %403, -55, !dbg !8341
  br label %__getxdigit.exit651, !dbg !8341

bb3.i647:                                         ; preds = %bb1.i645
  %405 = add i8 %413, -97, !dbg !8341
  %406 = icmp ult i8 %405, 6, !dbg !8341
  br i1 %406, label %bb4.i648, label %bb8.i627, !dbg !8341

bb4.i648:                                         ; preds = %bb3.i647
  %407 = sext i8 %413 to i32, !dbg !8341
  %408 = add nsw i32 %407, -87, !dbg !8341
  br label %__getxdigit.exit651, !dbg !8341

__getxdigit.exit651:                              ; preds = %bb4.i648, %bb2.i646, %bb.i644
  %iftmp.12.0.i649 = phi i32 [ %400, %bb.i644 ], [ %404, %bb2.i646 ], [ %408, %bb4.i648 ]
  %409 = icmp eq i32 %iftmp.12.0.i649, -1, !dbg !8343
  br i1 %409, label %bb8.i627, label %bb7.i623, !dbg !8343

bb7.i623:                                         ; preds = %__getxdigit.exit651
  %410 = mul nsw i64 %res.0.ph.i624, %base.0.ph.i618, !dbg !8344
  %411 = sext i32 %iftmp.12.0.i649 to i64, !dbg !8344
  %412 = add nsw i64 %411, %410, !dbg !8344
  %indvar.next1665 = add i64 %indvar1664, 1
  br label %bb9.i631, !dbg !8344

bb8.i627:                                         ; preds = %__getxdigit.exit651, %bb3.i647
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31301, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8345

bb9.i631:                                         ; preds = %bb7.i623, %bb9.preheader.i620
  %indvar1664 = phi i64 [ 0, %bb9.preheader.i620 ], [ %indvar.next1665, %bb7.i623 ]
  %res.0.ph.i624 = phi i64 [ 0, %bb9.preheader.i620 ], [ %412, %bb7.i623 ]
  %s_addr.0.ph14.i625 = getelementptr i8* %s_addr.0.ph.i619, i64 %indvar1664
  %413 = load i8* %s_addr.0.ph14.i625, align 1, !dbg !8347
  %414 = icmp eq i8 %413, 0, !dbg !8347
  br i1 %414, label %__str_to_int.exit632, label %bb6.i621, !dbg !8347

__str_to_int.exit632:                             ; preds = %bb9.i631
  %415 = trunc i64 %res.0.ph.i624 to i32, !dbg !8336
  br label %bb99, !dbg !8336

bb.i634:                                          ; preds = %bb3.i640
  %416 = icmp eq i8 %417, 0, !dbg !8348
  br i1 %416, label %bb55, label %bb2.i636, !dbg !8348

bb2.i636:                                         ; preds = %bb.i634
  %indvar.next.i635 = add i64 %indvar.i637, 1
  br label %bb3.i640, !dbg !8350

bb3.i640:                                         ; preds = %bb2.i636, %bb3.i583
  %indvar.i637 = phi i64 [ %indvar.next.i635, %bb2.i636 ], [ 0, %bb3.i583 ]
  %a_addr.0.i639 = getelementptr i8* %18, i64 %indvar.i637
  %b_addr.0.i638 = getelementptr [19 x i8]* @.str32302, i64 0, i64 %indvar.i637
  %417 = load i8* %a_addr.0.i639, align 1, !dbg !8351
  %418 = load i8* %b_addr.0.i638, align 1, !dbg !8351
  %419 = icmp eq i8 %417, %418, !dbg !8351
  br i1 %419, label %bb.i634, label %bb3.i658, !dbg !8351

bb.i652:                                          ; preds = %bb3.i658
  %420 = icmp eq i8 %421, 0, !dbg !8348
  br i1 %420, label %bb55, label %bb2.i654, !dbg !8348

bb2.i654:                                         ; preds = %bb.i652
  %indvar.next.i653 = add i64 %indvar.i655, 1
  br label %bb3.i658, !dbg !8350

bb3.i658:                                         ; preds = %bb2.i654, %bb3.i640
  %indvar.i655 = phi i64 [ %indvar.next.i653, %bb2.i654 ], [ 0, %bb3.i640 ]
  %a_addr.0.i657 = getelementptr i8* %18, i64 %indvar.i655
  %b_addr.0.i656 = getelementptr [18 x i8]* @.str33303, i64 0, i64 %indvar.i655
  %421 = load i8* %a_addr.0.i657, align 1, !dbg !8351
  %422 = load i8* %b_addr.0.i656, align 1, !dbg !8351
  %423 = icmp eq i8 %421, %422, !dbg !8351
  br i1 %423, label %bb.i652, label %bb3.i676, !dbg !8351

bb55:                                             ; preds = %bb.i652, %bb.i634
  %424 = add nsw i32 %k.0, 1, !dbg !8352
  br label %bb99, !dbg !8352

bb.i670:                                          ; preds = %bb3.i676
  %425 = icmp eq i8 %426, 0, !dbg !8353
  br i1 %425, label %bb58, label %bb2.i672, !dbg !8353

bb2.i672:                                         ; preds = %bb.i670
  %indvar.next.i671 = add i64 %indvar.i673, 1
  br label %bb3.i676, !dbg !8355

bb3.i676:                                         ; preds = %bb2.i672, %bb3.i658
  %indvar.i673 = phi i64 [ %indvar.next.i671, %bb2.i672 ], [ 0, %bb3.i658 ]
  %a_addr.0.i675 = getelementptr i8* %18, i64 %indvar.i673
  %b_addr.0.i674 = getelementptr [15 x i8]* @.str34304, i64 0, i64 %indvar.i673
  %426 = load i8* %a_addr.0.i675, align 1, !dbg !8356
  %427 = load i8* %b_addr.0.i674, align 1, !dbg !8356
  %428 = icmp eq i8 %426, %427, !dbg !8356
  br i1 %428, label %bb.i670, label %bb3.i715, !dbg !8356

bb.i709:                                          ; preds = %bb3.i715
  %429 = icmp eq i8 %430, 0, !dbg !8353
  br i1 %429, label %bb58, label %bb2.i711, !dbg !8353

bb2.i711:                                         ; preds = %bb.i709
  %indvar.next.i710 = add i64 %indvar.i712, 1
  br label %bb3.i715, !dbg !8355

bb3.i715:                                         ; preds = %bb2.i711, %bb3.i676
  %indvar.i712 = phi i64 [ %indvar.next.i710, %bb2.i711 ], [ 0, %bb3.i676 ]
  %a_addr.0.i714 = getelementptr i8* %18, i64 %indvar.i712
  %b_addr.0.i713 = getelementptr [14 x i8]* @.str35305, i64 0, i64 %indvar.i712
  %430 = load i8* %a_addr.0.i714, align 1, !dbg !8356
  %431 = load i8* %b_addr.0.i713, align 1, !dbg !8356
  %432 = icmp eq i8 %430, %431, !dbg !8356
  br i1 %432, label %bb.i709, label %bb3.i850, !dbg !8356

bb58:                                             ; preds = %bb.i709, %bb.i670
  %433 = icmp ugt i32 %n_stream_fill_info.0, 99, !dbg !8357
  br i1 %433, label %bb60, label %bb61, !dbg !8357

bb60:                                             ; preds = %bb58
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([32 x i8]* @.str37307, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8358

bb61:                                             ; preds = %bb58
  %434 = add nsw i32 %k.0, 2, !dbg !8360
  %435 = icmp slt i32 %434, %0, !dbg !8360
  br i1 %435, label %bb63, label %bb62, !dbg !8360

bb62:                                             ; preds = %bb61
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36306, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8361

bb63:                                             ; preds = %bb61
  %436 = add nsw i32 %k.0, 1, !dbg !8363
  %437 = sext i32 %436 to i64, !dbg !8364
  %438 = getelementptr inbounds i8** %1, i64 %437, !dbg !8364
  %439 = load i8** %438, align 8, !dbg !8364
  %440 = load i8* %439, align 1, !dbg !8365
  switch i8 %440, label %bb9.preheader.i734 [
    i8 0, label %bb.i729
    i8 48, label %bb2.i730
  ]

bb.i729:                                          ; preds = %bb63
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36306, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8366

bb2.i730:                                         ; preds = %bb63
  %441 = getelementptr inbounds i8* %439, i64 1, !dbg !8367
  %442 = load i8* %441, align 1, !dbg !8367
  switch i8 %442, label %bb9.preheader.i734 [
    i8 120, label %bb5.i731
    i8 88, label %bb5.i731
  ]

bb5.i731:                                         ; preds = %bb2.i730, %bb2.i730
  %443 = getelementptr inbounds i8* %439, i64 2, !dbg !8368
  br label %bb9.preheader.i734, !dbg !8368

bb9.preheader.i734:                               ; preds = %bb5.i731, %bb2.i730, %bb63
  %base.0.ph.i732 = phi i64 [ 10, %bb2.i730 ], [ 16, %bb5.i731 ], [ 10, %bb63 ]
  %s_addr.0.ph.i733 = phi i8* [ %439, %bb2.i730 ], [ %443, %bb5.i731 ], [ %439, %bb63 ]
  br label %bb9.i745

bb6.i735:                                         ; preds = %bb9.i745
  %444 = add i8 %460, -48, !dbg !8369
  %445 = icmp ult i8 %444, 10, !dbg !8369
  br i1 %445, label %bb.i758, label %bb1.i759, !dbg !8369

bb.i758:                                          ; preds = %bb6.i735
  %446 = sext i8 %460 to i32, !dbg !8369
  %447 = add nsw i32 %446, -48, !dbg !8369
  br label %__getxdigit.exit765, !dbg !8369

bb1.i759:                                         ; preds = %bb6.i735
  %448 = add i8 %460, -65, !dbg !8369
  %449 = icmp ult i8 %448, 6, !dbg !8369
  br i1 %449, label %bb2.i760, label %bb3.i761, !dbg !8369

bb2.i760:                                         ; preds = %bb1.i759
  %450 = sext i8 %460 to i32, !dbg !8369
  %451 = add nsw i32 %450, -55, !dbg !8369
  br label %__getxdigit.exit765, !dbg !8369

bb3.i761:                                         ; preds = %bb1.i759
  %452 = add i8 %460, -97, !dbg !8369
  %453 = icmp ult i8 %452, 6, !dbg !8369
  br i1 %453, label %bb4.i762, label %bb8.i741, !dbg !8369

bb4.i762:                                         ; preds = %bb3.i761
  %454 = sext i8 %460 to i32, !dbg !8369
  %455 = add nsw i32 %454, -87, !dbg !8369
  br label %__getxdigit.exit765, !dbg !8369

__getxdigit.exit765:                              ; preds = %bb4.i762, %bb2.i760, %bb.i758
  %iftmp.12.0.i763 = phi i32 [ %447, %bb.i758 ], [ %451, %bb2.i760 ], [ %455, %bb4.i762 ]
  %456 = icmp eq i32 %iftmp.12.0.i763, -1, !dbg !8371
  br i1 %456, label %bb8.i741, label %bb7.i737, !dbg !8371

bb7.i737:                                         ; preds = %__getxdigit.exit765
  %457 = mul nsw i64 %res.0.ph.i738, %base.0.ph.i732, !dbg !8372
  %458 = sext i32 %iftmp.12.0.i763 to i64, !dbg !8372
  %459 = add nsw i64 %458, %457, !dbg !8372
  %indvar.next1653 = add i64 %indvar1652, 1
  br label %bb9.i745, !dbg !8372

bb8.i741:                                         ; preds = %__getxdigit.exit765, %bb3.i761
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36306, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8373

bb9.i745:                                         ; preds = %bb7.i737, %bb9.preheader.i734
  %indvar1652 = phi i64 [ 0, %bb9.preheader.i734 ], [ %indvar.next1653, %bb7.i737 ]
  %res.0.ph.i738 = phi i64 [ 0, %bb9.preheader.i734 ], [ %459, %bb7.i737 ]
  %s_addr.0.ph14.i739 = getelementptr i8* %s_addr.0.ph.i733, i64 %indvar1652
  %460 = load i8* %s_addr.0.ph14.i739, align 1, !dbg !8375
  %461 = icmp eq i8 %460, 0, !dbg !8375
  br i1 %461, label %__str_to_int.exit746, label %bb6.i735, !dbg !8375

__str_to_int.exit746:                             ; preds = %bb9.i745
  %462 = trunc i64 %res.0.ph.i738 to i32, !dbg !8364
  %463 = zext i32 %n_stream_fill_info.0 to i64, !dbg !8364
  %464 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 0, !dbg !8364
  store i32 %462, i32* %464, align 8, !dbg !8364
  %465 = sext i32 %434 to i64, !dbg !8376
  %466 = getelementptr inbounds i8** %1, i64 %465, !dbg !8376
  %467 = load i8** %466, align 8, !dbg !8376
  br label %bb3.i754, !dbg !8377

bb.i748:                                          ; preds = %bb3.i754
  %468 = icmp eq i8 %469, 0, !dbg !8378
  br i1 %468, label %bb64, label %bb2.i750, !dbg !8378

bb2.i750:                                         ; preds = %bb.i748
  %indvar.next.i749 = add i64 %indvar.i751, 1
  br label %bb3.i754, !dbg !8379

bb3.i754:                                         ; preds = %bb2.i750, %__str_to_int.exit746
  %indvar.i751 = phi i64 [ %indvar.next.i749, %bb2.i750 ], [ 0, %__str_to_int.exit746 ]
  %a_addr.0.i753 = getelementptr i8* %467, i64 %indvar.i751
  %b_addr.0.i752 = getelementptr [4 x i8]* @.str38308, i64 0, i64 %indvar.i751
  %469 = load i8* %a_addr.0.i753, align 1, !dbg !8377
  %470 = load i8* %b_addr.0.i752, align 1, !dbg !8377
  %471 = icmp eq i8 %469, %470, !dbg !8377
  br i1 %471, label %bb.i748, label %bb3.i811, !dbg !8377

bb64:                                             ; preds = %bb.i748
  %472 = add i32 %k.0, 4, !dbg !8380
  %473 = icmp slt i32 %472, %0, !dbg !8380
  br i1 %473, label %bb66, label %bb65, !dbg !8380

bb65:                                             ; preds = %bb64
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36306, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8381

bb66:                                             ; preds = %bb64
  %474 = add i32 %k.0, 3, !dbg !8383
  %475 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 1, !dbg !8384
  store i32 0, i32* %475, align 4, !dbg !8384
  %476 = sext i32 %474 to i64, !dbg !8385
  %477 = getelementptr inbounds i8** %1, i64 %476, !dbg !8385
  %478 = load i8** %477, align 8, !dbg !8385
  %479 = load i8* %478, align 1, !dbg !8386
  switch i8 %479, label %bb9.preheader.i772 [
    i8 0, label %bb.i767
    i8 48, label %bb2.i768
  ]

bb.i767:                                          ; preds = %bb66
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36306, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8387

bb2.i768:                                         ; preds = %bb66
  %480 = getelementptr inbounds i8* %478, i64 1, !dbg !8388
  %481 = load i8* %480, align 1, !dbg !8388
  switch i8 %481, label %bb9.preheader.i772 [
    i8 120, label %bb5.i769
    i8 88, label %bb5.i769
  ]

bb5.i769:                                         ; preds = %bb2.i768, %bb2.i768
  %482 = getelementptr inbounds i8* %478, i64 2, !dbg !8389
  br label %bb9.preheader.i772, !dbg !8389

bb9.preheader.i772:                               ; preds = %bb5.i769, %bb2.i768, %bb66
  %base.0.ph.i770 = phi i64 [ 10, %bb2.i768 ], [ 16, %bb5.i769 ], [ 10, %bb66 ]
  %s_addr.0.ph.i771 = phi i8* [ %478, %bb2.i768 ], [ %482, %bb5.i769 ], [ %478, %bb66 ]
  br label %bb9.i783

bb6.i773:                                         ; preds = %bb9.i783
  %483 = add i8 %499, -48, !dbg !8390
  %484 = icmp ult i8 %483, 10, !dbg !8390
  br i1 %484, label %bb.i834, label %bb1.i835, !dbg !8390

bb.i834:                                          ; preds = %bb6.i773
  %485 = sext i8 %499 to i32, !dbg !8390
  %486 = add nsw i32 %485, -48, !dbg !8390
  br label %__getxdigit.exit841, !dbg !8390

bb1.i835:                                         ; preds = %bb6.i773
  %487 = add i8 %499, -65, !dbg !8390
  %488 = icmp ult i8 %487, 6, !dbg !8390
  br i1 %488, label %bb2.i836, label %bb3.i837, !dbg !8390

bb2.i836:                                         ; preds = %bb1.i835
  %489 = sext i8 %499 to i32, !dbg !8390
  %490 = add nsw i32 %489, -55, !dbg !8390
  br label %__getxdigit.exit841, !dbg !8390

bb3.i837:                                         ; preds = %bb1.i835
  %491 = add i8 %499, -97, !dbg !8390
  %492 = icmp ult i8 %491, 6, !dbg !8390
  br i1 %492, label %bb4.i838, label %bb8.i779, !dbg !8390

bb4.i838:                                         ; preds = %bb3.i837
  %493 = sext i8 %499 to i32, !dbg !8390
  %494 = add nsw i32 %493, -87, !dbg !8390
  br label %__getxdigit.exit841, !dbg !8390

__getxdigit.exit841:                              ; preds = %bb4.i838, %bb2.i836, %bb.i834
  %iftmp.12.0.i839 = phi i32 [ %486, %bb.i834 ], [ %490, %bb2.i836 ], [ %494, %bb4.i838 ]
  %495 = icmp eq i32 %iftmp.12.0.i839, -1, !dbg !8392
  br i1 %495, label %bb8.i779, label %bb7.i775, !dbg !8392

bb7.i775:                                         ; preds = %__getxdigit.exit841
  %496 = mul nsw i64 %res.0.ph.i776, %base.0.ph.i770, !dbg !8393
  %497 = sext i32 %iftmp.12.0.i839 to i64, !dbg !8393
  %498 = add nsw i64 %497, %496, !dbg !8393
  %indvar.next1656 = add i64 %indvar1655, 1
  br label %bb9.i783, !dbg !8393

bb8.i779:                                         ; preds = %__getxdigit.exit841, %bb3.i837
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36306, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8394

bb9.i783:                                         ; preds = %bb7.i775, %bb9.preheader.i772
  %indvar1655 = phi i64 [ 0, %bb9.preheader.i772 ], [ %indvar.next1656, %bb7.i775 ]
  %res.0.ph.i776 = phi i64 [ 0, %bb9.preheader.i772 ], [ %498, %bb7.i775 ]
  %s_addr.0.ph14.i777 = getelementptr i8* %s_addr.0.ph.i771, i64 %indvar1655
  %499 = load i8* %s_addr.0.ph14.i777, align 1, !dbg !8396
  %500 = icmp eq i8 %499, 0, !dbg !8396
  br i1 %500, label %__str_to_int.exit784, label %bb6.i773, !dbg !8396

__str_to_int.exit784:                             ; preds = %bb9.i783
  %501 = trunc i64 %res.0.ph.i776 to i32, !dbg !8385
  %502 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 2, !dbg !8385
  store i32 %501, i32* %502, align 8, !dbg !8385
  %503 = sext i32 %472 to i64, !dbg !8397
  %504 = getelementptr inbounds i8** %1, i64 %503, !dbg !8397
  %505 = load i8** %504, align 8, !dbg !8397
  %506 = add i32 %k.0, 5, !dbg !8397
  %507 = load i8* %505, align 1, !dbg !8398
  switch i8 %507, label %bb9.preheader.i791 [
    i8 0, label %bb.i786
    i8 48, label %bb2.i787
  ]

bb.i786:                                          ; preds = %__str_to_int.exit784
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36306, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8399

bb2.i787:                                         ; preds = %__str_to_int.exit784
  %508 = getelementptr inbounds i8* %505, i64 1, !dbg !8400
  %509 = load i8* %508, align 1, !dbg !8400
  switch i8 %509, label %bb9.preheader.i791 [
    i8 120, label %bb5.i788
    i8 88, label %bb5.i788
  ]

bb5.i788:                                         ; preds = %bb2.i787, %bb2.i787
  %510 = getelementptr inbounds i8* %505, i64 2, !dbg !8401
  br label %bb9.preheader.i791, !dbg !8401

bb9.preheader.i791:                               ; preds = %bb5.i788, %bb2.i787, %__str_to_int.exit784
  %base.0.ph.i789 = phi i64 [ 10, %bb2.i787 ], [ 16, %bb5.i788 ], [ 10, %__str_to_int.exit784 ]
  %s_addr.0.ph.i790 = phi i8* [ %505, %bb2.i787 ], [ %510, %bb5.i788 ], [ %505, %__str_to_int.exit784 ]
  br label %bb9.i802

bb6.i792:                                         ; preds = %bb9.i802
  %511 = add i8 %527, -48, !dbg !8402
  %512 = icmp ult i8 %511, 10, !dbg !8402
  br i1 %512, label %bb.i815, label %bb1.i816, !dbg !8402

bb.i815:                                          ; preds = %bb6.i792
  %513 = sext i8 %527 to i32, !dbg !8402
  %514 = add nsw i32 %513, -48, !dbg !8402
  br label %__getxdigit.exit822, !dbg !8402

bb1.i816:                                         ; preds = %bb6.i792
  %515 = add i8 %527, -65, !dbg !8402
  %516 = icmp ult i8 %515, 6, !dbg !8402
  br i1 %516, label %bb2.i817, label %bb3.i818, !dbg !8402

bb2.i817:                                         ; preds = %bb1.i816
  %517 = sext i8 %527 to i32, !dbg !8402
  %518 = add nsw i32 %517, -55, !dbg !8402
  br label %__getxdigit.exit822, !dbg !8402

bb3.i818:                                         ; preds = %bb1.i816
  %519 = add i8 %527, -97, !dbg !8402
  %520 = icmp ult i8 %519, 6, !dbg !8402
  br i1 %520, label %bb4.i819, label %bb8.i798, !dbg !8402

bb4.i819:                                         ; preds = %bb3.i818
  %521 = sext i8 %527 to i32, !dbg !8402
  %522 = add nsw i32 %521, -87, !dbg !8402
  br label %__getxdigit.exit822, !dbg !8402

__getxdigit.exit822:                              ; preds = %bb4.i819, %bb2.i817, %bb.i815
  %iftmp.12.0.i820 = phi i32 [ %514, %bb.i815 ], [ %518, %bb2.i817 ], [ %522, %bb4.i819 ]
  %523 = icmp eq i32 %iftmp.12.0.i820, -1, !dbg !8404
  br i1 %523, label %bb8.i798, label %bb7.i794, !dbg !8404

bb7.i794:                                         ; preds = %__getxdigit.exit822
  %524 = mul nsw i64 %res.0.ph.i795, %base.0.ph.i789, !dbg !8405
  %525 = sext i32 %iftmp.12.0.i820 to i64, !dbg !8405
  %526 = add nsw i64 %525, %524, !dbg !8405
  %indvar.next1659 = add i64 %indvar1658, 1
  br label %bb9.i802, !dbg !8405

bb8.i798:                                         ; preds = %__getxdigit.exit822, %bb3.i818
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36306, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8406

bb9.i802:                                         ; preds = %bb7.i794, %bb9.preheader.i791
  %indvar1658 = phi i64 [ 0, %bb9.preheader.i791 ], [ %indvar.next1659, %bb7.i794 ]
  %res.0.ph.i795 = phi i64 [ 0, %bb9.preheader.i791 ], [ %526, %bb7.i794 ]
  %s_addr.0.ph14.i796 = getelementptr i8* %s_addr.0.ph.i790, i64 %indvar1658
  %527 = load i8* %s_addr.0.ph14.i796, align 1, !dbg !8408
  %528 = icmp eq i8 %527, 0, !dbg !8408
  br i1 %528, label %__str_to_int.exit803, label %bb6.i792, !dbg !8408

__str_to_int.exit803:                             ; preds = %bb9.i802
  %529 = trunc i64 %res.0.ph.i795 to i32, !dbg !8397
  %530 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 3, i32 0, !dbg !8397
  %531 = bitcast i8** %530 to i32*, !dbg !8397
  store i32 %529, i32* %531, align 8, !dbg !8397
  %532 = add i32 %n_stream_fill_info.0, 1, !dbg !8409
  br label %bb99, !dbg !8409

bb.i805:                                          ; preds = %bb3.i811
  %533 = icmp eq i8 %534, 0, !dbg !8410
  br i1 %533, label %bb68, label %bb2.i807, !dbg !8410

bb2.i807:                                         ; preds = %bb.i805
  %indvar.next.i806 = add i64 %indvar.i808, 1
  br label %bb3.i811, !dbg !8412

bb3.i811:                                         ; preds = %bb2.i807, %bb3.i754
  %indvar.i808 = phi i64 [ %indvar.next.i806, %bb2.i807 ], [ 0, %bb3.i754 ]
  %a_addr.0.i810 = getelementptr i8* %467, i64 %indvar.i808
  %b_addr.0.i809 = getelementptr [5 x i8]* @.str39309, i64 0, i64 %indvar.i808
  %534 = load i8* %a_addr.0.i810, align 1, !dbg !8413
  %535 = load i8* %b_addr.0.i809, align 1, !dbg !8413
  %536 = icmp eq i8 %534, %535, !dbg !8413
  br i1 %536, label %bb.i805, label %bb3.i830, !dbg !8413

bb68:                                             ; preds = %bb.i805
  %537 = add i32 %k.0, 3, !dbg !8414
  %538 = icmp slt i32 %537, %0, !dbg !8415
  br i1 %538, label %bb70, label %bb69, !dbg !8415

bb69:                                             ; preds = %bb68
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36306, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8416

bb70:                                             ; preds = %bb68
  %539 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 1, !dbg !8418
  store i32 1, i32* %539, align 4, !dbg !8418
  %540 = sext i32 %537 to i64, !dbg !8419
  %541 = getelementptr inbounds i8** %1, i64 %540, !dbg !8419
  %542 = load i8** %541, align 8, !dbg !8419
  %543 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 3, i32 0, !dbg !8419
  store i8* %542, i8** %543, align 8, !dbg !8419
  %544 = add i32 %k.0, 4, !dbg !8419
  %545 = call fastcc i64 @__convert_escape_sequences(i8* %542) nounwind, !dbg !8420
  %546 = trunc i64 %545 to i32, !dbg !8420
  %547 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 2, !dbg !8420
  store i32 %546, i32* %547, align 8, !dbg !8420
  %548 = add i32 %n_stream_fill_info.0, 1, !dbg !8421
  br label %bb99, !dbg !8421

bb.i824:                                          ; preds = %bb3.i830
  %549 = icmp eq i8 %550, 0, !dbg !8422
  br i1 %549, label %bb72, label %bb2.i826, !dbg !8422

bb2.i826:                                         ; preds = %bb.i824
  %indvar.next.i825 = add i64 %indvar.i827, 1
  br label %bb3.i830, !dbg !8424

bb3.i830:                                         ; preds = %bb2.i826, %bb3.i811
  %indvar.i827 = phi i64 [ %indvar.next.i825, %bb2.i826 ], [ 0, %bb3.i811 ]
  %a_addr.0.i829 = getelementptr i8* %467, i64 %indvar.i827
  %b_addr.0.i828 = getelementptr [5 x i8]* @.str40310, i64 0, i64 %indvar.i827
  %550 = load i8* %a_addr.0.i829, align 1, !dbg !8425
  %551 = load i8* %b_addr.0.i828, align 1, !dbg !8425
  %552 = icmp eq i8 %550, %551, !dbg !8425
  br i1 %552, label %bb.i824, label %bb75, !dbg !8425

bb72:                                             ; preds = %bb.i824
  %553 = add i32 %k.0, 3, !dbg !8426
  %554 = icmp slt i32 %553, %0, !dbg !8427
  br i1 %554, label %bb74, label %bb73, !dbg !8427

bb73:                                             ; preds = %bb72
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36306, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8428

bb74:                                             ; preds = %bb72
  %555 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 1, !dbg !8430
  store i32 2, i32* %555, align 4, !dbg !8430
  %556 = sext i32 %553 to i64, !dbg !8431
  %557 = getelementptr inbounds i8** %1, i64 %556, !dbg !8431
  %558 = load i8** %557, align 8, !dbg !8431
  %559 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 3, i32 0, !dbg !8431
  store i8* %558, i8** %559, align 8, !dbg !8431
  %560 = add i32 %k.0, 4, !dbg !8431
  %561 = add i32 %n_stream_fill_info.0, 1, !dbg !8432
  br label %bb99, !dbg !8432

bb75:                                             ; preds = %bb3.i830
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36306, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8433

bb.i844:                                          ; preds = %bb3.i850
  %562 = icmp eq i8 %563, 0, !dbg !8435
  br i1 %562, label %bb78, label %bb2.i846, !dbg !8435

bb2.i846:                                         ; preds = %bb.i844
  %indvar.next.i845 = add i64 %indvar.i847, 1
  br label %bb3.i850, !dbg !8437

bb3.i850:                                         ; preds = %bb2.i846, %bb3.i715
  %indvar.i847 = phi i64 [ %indvar.next.i845, %bb2.i846 ], [ 0, %bb3.i715 ]
  %a_addr.0.i849 = getelementptr i8* %18, i64 %indvar.i847
  %b_addr.0.i848 = getelementptr [17 x i8]* @.str41311, i64 0, i64 %indvar.i847
  %563 = load i8* %a_addr.0.i849, align 1, !dbg !8438
  %564 = load i8* %b_addr.0.i848, align 1, !dbg !8438
  %565 = icmp eq i8 %563, %564, !dbg !8438
  br i1 %565, label %bb.i844, label %bb3.i861, !dbg !8438

bb.i855:                                          ; preds = %bb3.i861
  %566 = icmp eq i8 %567, 0, !dbg !8435
  br i1 %566, label %bb78, label %bb2.i857, !dbg !8435

bb2.i857:                                         ; preds = %bb.i855
  %indvar.next.i856 = add i64 %indvar.i858, 1
  br label %bb3.i861, !dbg !8437

bb3.i861:                                         ; preds = %bb2.i857, %bb3.i850
  %indvar.i858 = phi i64 [ %indvar.next.i856, %bb2.i857 ], [ 0, %bb3.i850 ]
  %a_addr.0.i860 = getelementptr i8* %18, i64 %indvar.i858
  %b_addr.0.i859 = getelementptr [16 x i8]* @.str42312, i64 0, i64 %indvar.i858
  %567 = load i8* %a_addr.0.i860, align 1, !dbg !8438
  %568 = load i8* %b_addr.0.i859, align 1, !dbg !8438
  %569 = icmp eq i8 %567, %568, !dbg !8438
  br i1 %569, label %bb.i855, label %bb97, !dbg !8438

bb78:                                             ; preds = %bb.i855, %bb.i844
  %570 = icmp ugt i32 %n_dgram_fill_info.0, 99, !dbg !8439
  br i1 %570, label %bb81, label %bb82, !dbg !8439

bb81:                                             ; preds = %bb78
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([34 x i8]* @.str44314, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8440

bb82:                                             ; preds = %bb78
  %571 = add nsw i32 %k.0, 2, !dbg !8442
  %572 = icmp slt i32 %571, %0, !dbg !8442
  br i1 %572, label %bb84, label %bb83, !dbg !8442

bb83:                                             ; preds = %bb82
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43313, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8443

bb84:                                             ; preds = %bb82
  %573 = add nsw i32 %k.0, 1, !dbg !8445
  %574 = sext i32 %573 to i64, !dbg !8446
  %575 = getelementptr inbounds i8** %1, i64 %574, !dbg !8446
  %576 = load i8** %575, align 8, !dbg !8446
  %577 = load i8* %576, align 1, !dbg !8447
  switch i8 %577, label %bb9.preheader.i695 [
    i8 0, label %bb.i690
    i8 48, label %bb2.i691
  ]

bb.i690:                                          ; preds = %bb84
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43313, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8448

bb2.i691:                                         ; preds = %bb84
  %578 = getelementptr inbounds i8* %576, i64 1, !dbg !8449
  %579 = load i8* %578, align 1, !dbg !8449
  switch i8 %579, label %bb9.preheader.i695 [
    i8 120, label %bb5.i692
    i8 88, label %bb5.i692
  ]

bb5.i692:                                         ; preds = %bb2.i691, %bb2.i691
  %580 = getelementptr inbounds i8* %576, i64 2, !dbg !8450
  br label %bb9.preheader.i695, !dbg !8450

bb9.preheader.i695:                               ; preds = %bb5.i692, %bb2.i691, %bb84
  %base.0.ph.i693 = phi i64 [ 10, %bb2.i691 ], [ 16, %bb5.i692 ], [ 10, %bb84 ]
  %s_addr.0.ph.i694 = phi i8* [ %576, %bb2.i691 ], [ %580, %bb5.i692 ], [ %576, %bb84 ]
  br label %bb9.i706

bb6.i696:                                         ; preds = %bb9.i706
  %581 = add i8 %597, -48, !dbg !8451
  %582 = icmp ult i8 %581, 10, !dbg !8451
  br i1 %582, label %bb.i719, label %bb1.i720, !dbg !8451

bb.i719:                                          ; preds = %bb6.i696
  %583 = sext i8 %597 to i32, !dbg !8451
  %584 = add nsw i32 %583, -48, !dbg !8451
  br label %__getxdigit.exit726, !dbg !8451

bb1.i720:                                         ; preds = %bb6.i696
  %585 = add i8 %597, -65, !dbg !8451
  %586 = icmp ult i8 %585, 6, !dbg !8451
  br i1 %586, label %bb2.i721, label %bb3.i722, !dbg !8451

bb2.i721:                                         ; preds = %bb1.i720
  %587 = sext i8 %597 to i32, !dbg !8451
  %588 = add nsw i32 %587, -55, !dbg !8451
  br label %__getxdigit.exit726, !dbg !8451

bb3.i722:                                         ; preds = %bb1.i720
  %589 = add i8 %597, -97, !dbg !8451
  %590 = icmp ult i8 %589, 6, !dbg !8451
  br i1 %590, label %bb4.i723, label %bb8.i702, !dbg !8451

bb4.i723:                                         ; preds = %bb3.i722
  %591 = sext i8 %597 to i32, !dbg !8451
  %592 = add nsw i32 %591, -87, !dbg !8451
  br label %__getxdigit.exit726, !dbg !8451

__getxdigit.exit726:                              ; preds = %bb4.i723, %bb2.i721, %bb.i719
  %iftmp.12.0.i724 = phi i32 [ %584, %bb.i719 ], [ %588, %bb2.i721 ], [ %592, %bb4.i723 ]
  %593 = icmp eq i32 %iftmp.12.0.i724, -1, !dbg !8453
  br i1 %593, label %bb8.i702, label %bb7.i698, !dbg !8453

bb7.i698:                                         ; preds = %__getxdigit.exit726
  %594 = mul nsw i64 %res.0.ph.i699, %base.0.ph.i693, !dbg !8454
  %595 = sext i32 %iftmp.12.0.i724 to i64, !dbg !8454
  %596 = add nsw i64 %595, %594, !dbg !8454
  %indvar.next = add i64 %indvar, 1
  br label %bb9.i706, !dbg !8454

bb8.i702:                                         ; preds = %__getxdigit.exit726, %bb3.i722
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43313, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8455

bb9.i706:                                         ; preds = %bb7.i698, %bb9.preheader.i695
  %indvar = phi i64 [ 0, %bb9.preheader.i695 ], [ %indvar.next, %bb7.i698 ]
  %res.0.ph.i699 = phi i64 [ 0, %bb9.preheader.i695 ], [ %596, %bb7.i698 ]
  %s_addr.0.ph14.i700 = getelementptr i8* %s_addr.0.ph.i694, i64 %indvar
  %597 = load i8* %s_addr.0.ph14.i700, align 1, !dbg !8457
  %598 = icmp eq i8 %597, 0, !dbg !8457
  br i1 %598, label %__str_to_int.exit707, label %bb6.i696, !dbg !8457

__str_to_int.exit707:                             ; preds = %bb9.i706
  %599 = trunc i64 %res.0.ph.i699 to i32, !dbg !8446
  %600 = zext i32 %n_dgram_fill_info.0 to i64, !dbg !8446
  %601 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 0, !dbg !8446
  store i32 %599, i32* %601, align 8, !dbg !8446
  %602 = sext i32 %571 to i64, !dbg !8458
  %603 = getelementptr inbounds i8** %1, i64 %602, !dbg !8458
  %604 = load i8** %603, align 8, !dbg !8458
  br label %bb3.i686, !dbg !8459

bb.i680:                                          ; preds = %bb3.i686
  %605 = icmp eq i8 %606, 0, !dbg !8460
  br i1 %605, label %bb85, label %bb2.i682, !dbg !8460

bb2.i682:                                         ; preds = %bb.i680
  %indvar.next.i681 = add i64 %indvar.i683, 1
  br label %bb3.i686, !dbg !8461

bb3.i686:                                         ; preds = %bb2.i682, %__str_to_int.exit707
  %indvar.i683 = phi i64 [ %indvar.next.i681, %bb2.i682 ], [ 0, %__str_to_int.exit707 ]
  %a_addr.0.i685 = getelementptr i8* %604, i64 %indvar.i683
  %b_addr.0.i684 = getelementptr [4 x i8]* @.str38308, i64 0, i64 %indvar.i683
  %606 = load i8* %a_addr.0.i685, align 1, !dbg !8459
  %607 = load i8* %b_addr.0.i684, align 1, !dbg !8459
  %608 = icmp eq i8 %606, %607, !dbg !8459
  br i1 %608, label %bb.i680, label %bb3.i383, !dbg !8459

bb85:                                             ; preds = %bb.i680
  %609 = add i32 %k.0, 4, !dbg !8462
  %610 = icmp slt i32 %609, %0, !dbg !8462
  br i1 %610, label %bb87, label %bb86, !dbg !8462

bb86:                                             ; preds = %bb85
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43313, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8463

bb87:                                             ; preds = %bb85
  %611 = add i32 %k.0, 3, !dbg !8465
  %612 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 1, !dbg !8466
  store i32 0, i32* %612, align 4, !dbg !8466
  %613 = sext i32 %611 to i64, !dbg !8467
  %614 = getelementptr inbounds i8** %1, i64 %613, !dbg !8467
  %615 = load i8** %614, align 8, !dbg !8467
  %616 = load i8* %615, align 1, !dbg !8468
  switch i8 %616, label %bb9.preheader.i439 [
    i8 0, label %bb.i434
    i8 48, label %bb2.i435
  ]

bb.i434:                                          ; preds = %bb87
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43313, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8469

bb2.i435:                                         ; preds = %bb87
  %617 = getelementptr inbounds i8* %615, i64 1, !dbg !8470
  %618 = load i8* %617, align 1, !dbg !8470
  switch i8 %618, label %bb9.preheader.i439 [
    i8 120, label %bb5.i436
    i8 88, label %bb5.i436
  ]

bb5.i436:                                         ; preds = %bb2.i435, %bb2.i435
  %619 = getelementptr inbounds i8* %615, i64 2, !dbg !8471
  br label %bb9.preheader.i439, !dbg !8471

bb9.preheader.i439:                               ; preds = %bb5.i436, %bb2.i435, %bb87
  %base.0.ph.i437 = phi i64 [ 10, %bb2.i435 ], [ 16, %bb5.i436 ], [ 10, %bb87 ]
  %s_addr.0.ph.i438 = phi i8* [ %615, %bb2.i435 ], [ %619, %bb5.i436 ], [ %615, %bb87 ]
  br label %bb9.i450

bb6.i440:                                         ; preds = %bb9.i450
  %620 = add i8 %636, -48, !dbg !8472
  %621 = icmp ult i8 %620, 10, !dbg !8472
  br i1 %621, label %bb.i463, label %bb1.i464, !dbg !8472

bb.i463:                                          ; preds = %bb6.i440
  %622 = sext i8 %636 to i32, !dbg !8472
  %623 = add nsw i32 %622, -48, !dbg !8472
  br label %__getxdigit.exit470, !dbg !8472

bb1.i464:                                         ; preds = %bb6.i440
  %624 = add i8 %636, -65, !dbg !8472
  %625 = icmp ult i8 %624, 6, !dbg !8472
  br i1 %625, label %bb2.i465, label %bb3.i466, !dbg !8472

bb2.i465:                                         ; preds = %bb1.i464
  %626 = sext i8 %636 to i32, !dbg !8472
  %627 = add nsw i32 %626, -55, !dbg !8472
  br label %__getxdigit.exit470, !dbg !8472

bb3.i466:                                         ; preds = %bb1.i464
  %628 = add i8 %636, -97, !dbg !8472
  %629 = icmp ult i8 %628, 6, !dbg !8472
  br i1 %629, label %bb4.i467, label %bb8.i446, !dbg !8472

bb4.i467:                                         ; preds = %bb3.i466
  %630 = sext i8 %636 to i32, !dbg !8472
  %631 = add nsw i32 %630, -87, !dbg !8472
  br label %__getxdigit.exit470, !dbg !8472

__getxdigit.exit470:                              ; preds = %bb4.i467, %bb2.i465, %bb.i463
  %iftmp.12.0.i468 = phi i32 [ %623, %bb.i463 ], [ %627, %bb2.i465 ], [ %631, %bb4.i467 ]
  %632 = icmp eq i32 %iftmp.12.0.i468, -1, !dbg !8474
  br i1 %632, label %bb8.i446, label %bb7.i442, !dbg !8474

bb7.i442:                                         ; preds = %__getxdigit.exit470
  %633 = mul nsw i64 %res.0.ph.i443, %base.0.ph.i437, !dbg !8475
  %634 = sext i32 %iftmp.12.0.i468 to i64, !dbg !8475
  %635 = add nsw i64 %634, %633, !dbg !8475
  %indvar.next1647 = add i64 %indvar1646, 1
  br label %bb9.i450, !dbg !8475

bb8.i446:                                         ; preds = %__getxdigit.exit470, %bb3.i466
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43313, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8476

bb9.i450:                                         ; preds = %bb7.i442, %bb9.preheader.i439
  %indvar1646 = phi i64 [ 0, %bb9.preheader.i439 ], [ %indvar.next1647, %bb7.i442 ]
  %res.0.ph.i443 = phi i64 [ 0, %bb9.preheader.i439 ], [ %635, %bb7.i442 ]
  %s_addr.0.ph14.i444 = getelementptr i8* %s_addr.0.ph.i438, i64 %indvar1646
  %636 = load i8* %s_addr.0.ph14.i444, align 1, !dbg !8478
  %637 = icmp eq i8 %636, 0, !dbg !8478
  br i1 %637, label %__str_to_int.exit451, label %bb6.i440, !dbg !8478

__str_to_int.exit451:                             ; preds = %bb9.i450
  %638 = trunc i64 %res.0.ph.i443 to i32, !dbg !8467
  %639 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 2, !dbg !8467
  store i32 %638, i32* %639, align 8, !dbg !8467
  %640 = sext i32 %609 to i64, !dbg !8479
  %641 = getelementptr inbounds i8** %1, i64 %640, !dbg !8479
  %642 = load i8** %641, align 8, !dbg !8479
  %643 = add i32 %k.0, 5, !dbg !8479
  %644 = load i8* %642, align 1, !dbg !8480
  switch i8 %644, label %bb9.preheader.i392 [
    i8 0, label %bb.i387
    i8 48, label %bb2.i388
  ]

bb.i387:                                          ; preds = %__str_to_int.exit451
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43313, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8481

bb2.i388:                                         ; preds = %__str_to_int.exit451
  %645 = getelementptr inbounds i8* %642, i64 1, !dbg !8482
  %646 = load i8* %645, align 1, !dbg !8482
  switch i8 %646, label %bb9.preheader.i392 [
    i8 120, label %bb5.i389
    i8 88, label %bb5.i389
  ]

bb5.i389:                                         ; preds = %bb2.i388, %bb2.i388
  %647 = getelementptr inbounds i8* %642, i64 2, !dbg !8483
  br label %bb9.preheader.i392, !dbg !8483

bb9.preheader.i392:                               ; preds = %bb5.i389, %bb2.i388, %__str_to_int.exit451
  %base.0.ph.i390 = phi i64 [ 10, %bb2.i388 ], [ 16, %bb5.i389 ], [ 10, %__str_to_int.exit451 ]
  %s_addr.0.ph.i391 = phi i8* [ %642, %bb2.i388 ], [ %647, %bb5.i389 ], [ %642, %__str_to_int.exit451 ]
  br label %bb9.i403

bb6.i393:                                         ; preds = %bb9.i403
  %648 = add i8 %664, -48, !dbg !8484
  %649 = icmp ult i8 %648, 10, !dbg !8484
  br i1 %649, label %bb.i416, label %bb1.i417, !dbg !8484

bb.i416:                                          ; preds = %bb6.i393
  %650 = sext i8 %664 to i32, !dbg !8484
  %651 = add nsw i32 %650, -48, !dbg !8484
  br label %__getxdigit.exit423, !dbg !8484

bb1.i417:                                         ; preds = %bb6.i393
  %652 = add i8 %664, -65, !dbg !8484
  %653 = icmp ult i8 %652, 6, !dbg !8484
  br i1 %653, label %bb2.i418, label %bb3.i419, !dbg !8484

bb2.i418:                                         ; preds = %bb1.i417
  %654 = sext i8 %664 to i32, !dbg !8484
  %655 = add nsw i32 %654, -55, !dbg !8484
  br label %__getxdigit.exit423, !dbg !8484

bb3.i419:                                         ; preds = %bb1.i417
  %656 = add i8 %664, -97, !dbg !8484
  %657 = icmp ult i8 %656, 6, !dbg !8484
  br i1 %657, label %bb4.i420, label %bb8.i399, !dbg !8484

bb4.i420:                                         ; preds = %bb3.i419
  %658 = sext i8 %664 to i32, !dbg !8484
  %659 = add nsw i32 %658, -87, !dbg !8484
  br label %__getxdigit.exit423, !dbg !8484

__getxdigit.exit423:                              ; preds = %bb4.i420, %bb2.i418, %bb.i416
  %iftmp.12.0.i421 = phi i32 [ %651, %bb.i416 ], [ %655, %bb2.i418 ], [ %659, %bb4.i420 ]
  %660 = icmp eq i32 %iftmp.12.0.i421, -1, !dbg !8486
  br i1 %660, label %bb8.i399, label %bb7.i395, !dbg !8486

bb7.i395:                                         ; preds = %__getxdigit.exit423
  %661 = mul nsw i64 %res.0.ph.i396, %base.0.ph.i390, !dbg !8487
  %662 = sext i32 %iftmp.12.0.i421 to i64, !dbg !8487
  %663 = add nsw i64 %662, %661, !dbg !8487
  %indvar.next1650 = add i64 %indvar1649, 1
  br label %bb9.i403, !dbg !8487

bb8.i399:                                         ; preds = %__getxdigit.exit423, %bb3.i419
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43313, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8488

bb9.i403:                                         ; preds = %bb7.i395, %bb9.preheader.i392
  %indvar1649 = phi i64 [ 0, %bb9.preheader.i392 ], [ %indvar.next1650, %bb7.i395 ]
  %res.0.ph.i396 = phi i64 [ 0, %bb9.preheader.i392 ], [ %663, %bb7.i395 ]
  %s_addr.0.ph14.i397 = getelementptr i8* %s_addr.0.ph.i391, i64 %indvar1649
  %664 = load i8* %s_addr.0.ph14.i397, align 1, !dbg !8490
  %665 = icmp eq i8 %664, 0, !dbg !8490
  br i1 %665, label %__str_to_int.exit404, label %bb6.i393, !dbg !8490

__str_to_int.exit404:                             ; preds = %bb9.i403
  %666 = trunc i64 %res.0.ph.i396 to i32, !dbg !8479
  %667 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 3, i32 0, !dbg !8479
  %668 = bitcast i8** %667 to i32*, !dbg !8479
  store i32 %666, i32* %668, align 8, !dbg !8479
  %669 = add i32 %n_dgram_fill_info.0, 1, !dbg !8491
  br label %bb99, !dbg !8491

bb.i377:                                          ; preds = %bb3.i383
  %670 = icmp eq i8 %671, 0, !dbg !8492
  br i1 %670, label %bb89, label %bb2.i379, !dbg !8492

bb2.i379:                                         ; preds = %bb.i377
  %indvar.next.i378 = add i64 %indvar.i380, 1
  br label %bb3.i383, !dbg !8494

bb3.i383:                                         ; preds = %bb2.i379, %bb3.i686
  %indvar.i380 = phi i64 [ %indvar.next.i378, %bb2.i379 ], [ 0, %bb3.i686 ]
  %a_addr.0.i382 = getelementptr i8* %604, i64 %indvar.i380
  %b_addr.0.i381 = getelementptr [5 x i8]* @.str39309, i64 0, i64 %indvar.i380
  %671 = load i8* %a_addr.0.i382, align 1, !dbg !8495
  %672 = load i8* %b_addr.0.i381, align 1, !dbg !8495
  %673 = icmp eq i8 %671, %672, !dbg !8495
  br i1 %673, label %bb.i377, label %bb3.i163, !dbg !8495

bb89:                                             ; preds = %bb.i377
  %674 = add i32 %k.0, 3, !dbg !8496
  %675 = icmp slt i32 %674, %0, !dbg !8497
  br i1 %675, label %bb91, label %bb90, !dbg !8497

bb90:                                             ; preds = %bb89
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43313, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8498

bb91:                                             ; preds = %bb89
  %676 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 1, !dbg !8500
  store i32 1, i32* %676, align 4, !dbg !8500
  %677 = sext i32 %674 to i64, !dbg !8501
  %678 = getelementptr inbounds i8** %1, i64 %677, !dbg !8501
  %679 = load i8** %678, align 8, !dbg !8501
  %680 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 3, i32 0, !dbg !8501
  store i8* %679, i8** %680, align 8, !dbg !8501
  %681 = add i32 %k.0, 4, !dbg !8501
  %682 = call fastcc i64 @__convert_escape_sequences(i8* %679) nounwind, !dbg !8502
  %683 = trunc i64 %682 to i32, !dbg !8502
  %684 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 2, !dbg !8502
  store i32 %683, i32* %684, align 8, !dbg !8502
  %685 = add i32 %n_dgram_fill_info.0, 1, !dbg !8503
  br label %bb99, !dbg !8503

bb.i157:                                          ; preds = %bb3.i163
  %686 = icmp eq i8 %687, 0, !dbg !8504
  br i1 %686, label %bb93, label %bb2.i159, !dbg !8504

bb2.i159:                                         ; preds = %bb.i157
  %indvar.next.i158 = add i64 %indvar.i160, 1
  br label %bb3.i163, !dbg !8506

bb3.i163:                                         ; preds = %bb2.i159, %bb3.i383
  %indvar.i160 = phi i64 [ %indvar.next.i158, %bb2.i159 ], [ 0, %bb3.i383 ]
  %a_addr.0.i162 = getelementptr i8* %604, i64 %indvar.i160
  %b_addr.0.i161 = getelementptr [5 x i8]* @.str40310, i64 0, i64 %indvar.i160
  %687 = load i8* %a_addr.0.i162, align 1, !dbg !8507
  %688 = load i8* %b_addr.0.i161, align 1, !dbg !8507
  %689 = icmp eq i8 %687, %688, !dbg !8507
  br i1 %689, label %bb.i157, label %bb96, !dbg !8507

bb93:                                             ; preds = %bb.i157
  %690 = add i32 %k.0, 3, !dbg !8508
  %691 = icmp slt i32 %690, %0, !dbg !8509
  br i1 %691, label %bb95, label %bb94, !dbg !8509

bb94:                                             ; preds = %bb93
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43313, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8510

bb95:                                             ; preds = %bb93
  %692 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 1, !dbg !8512
  store i32 2, i32* %692, align 4, !dbg !8512
  %693 = sext i32 %690 to i64, !dbg !8513
  %694 = getelementptr inbounds i8** %1, i64 %693, !dbg !8513
  %695 = load i8** %694, align 8, !dbg !8513
  %696 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 3, i32 0, !dbg !8513
  store i8* %695, i8** %696, align 8, !dbg !8513
  %697 = add i32 %k.0, 4, !dbg !8513
  %698 = add i32 %n_dgram_fill_info.0, 1, !dbg !8514
  br label %bb99, !dbg !8514

bb96:                                             ; preds = %bb3.i163
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43313, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8515

bb97:                                             ; preds = %bb3.i861
  %699 = icmp eq i32 %704, 1024, !dbg !8517
  br i1 %699, label %bb.i105, label %__add_arg.exit, !dbg !8517

bb.i105:                                          ; preds = %bb97
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([37 x i8]* @.str3274, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !8519

__add_arg.exit:                                   ; preds = %bb97
  %700 = add nsw i32 %k.0, 1, !dbg !8518
  %701 = sext i32 %704 to i64, !dbg !8521
  %702 = getelementptr inbounds [1024 x i8*]* %new_argv, i64 0, i64 %701, !dbg !8521
  store i8* %18, i8** %702, align 8, !dbg !8521
  %703 = add nsw i32 %704, 1, !dbg !8522
  br label %bb99, !dbg !8518

bb99:                                             ; preds = %__add_arg.exit, %bb95, %bb91, %__str_to_int.exit404, %bb74, %bb70, %__str_to_int.exit803, %bb55, %__str_to_int.exit632, %__str_to_int.exit557, %__str_to_int.exit489, %bb34, %bb31, %bb28, %__str
  %704 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %63, %__add_arg.exit132 ], [ %704, %__str_to_int.exit300 ], [ %704, %bb28 ], [ %704, %bb31 ], [ %704, %bb34 ], [ %704, %__str_to_int.exit489 ], [ %704, %__str_to_int.exit557 ], [ %704, %__str_t
  %save_all_writes_flag.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %save_all_writes_flag.0, %__add_arg.exit132 ], [ %save_all_writes_flag.0, %__str_to_int.exit300 ], [ %save_all_writes_flag.0, %bb28 ], [ 1, %bb31 ], [ %save_all_writes_flag.0
  %sym_stdout_flag.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_stdout_flag.0, %__add_arg.exit132 ], [ %sym_stdout_flag.0, %__str_to_int.exit300 ], [ 1, %bb28 ], [ %sym_stdout_flag.0, %bb31 ], [ %sym_stdout_flag.0, %bb34 ], [ %sym_stdout_
  %sym_dgram_len.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_dgram_len.0, %__add_arg.exit132 ], [ %sym_dgram_len.0, %__str_to_int.exit300 ], [ %sym_dgram_len.0, %bb28 ], [ %sym_dgram_len.0, %bb31 ], [ %sym_dgram_len.0, %bb34 ], [ %sym_dg
  %sym_dgrams.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_dgrams.0, %__add_arg.exit132 ], [ %sym_dgrams.0, %__str_to_int.exit300 ], [ %sym_dgrams.0, %bb28 ], [ %sym_dgrams.0, %bb31 ], [ %sym_dgrams.0, %bb34 ], [ %sym_dgrams.0, %__str_to_
  %sym_stream_len.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_stream_len.0, %__add_arg.exit132 ], [ %sym_stream_len.0, %__str_to_int.exit300 ], [ %sym_stream_len.0, %bb28 ], [ %sym_stream_len.0, %bb31 ], [ %sym_stream_len.0, %bb34 ], [ %
  %sym_streams.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_streams.0, %__add_arg.exit132 ], [ %sym_streams.0, %__str_to_int.exit300 ], [ %sym_streams.0, %bb28 ], [ %sym_streams.0, %bb31 ], [ %sym_streams.0, %bb34 ], [ %sym_streams.0, %__
  %sym_file_len.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_file_len.0, %__add_arg.exit132 ], [ %223, %__str_to_int.exit300 ], [ %sym_file_len.0, %bb28 ], [ %sym_file_len.0, %bb31 ], [ %sym_file_len.0, %bb34 ], [ %sym_file_len.0, %__str_
  %sym_files.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_files.0, %__add_arg.exit132 ], [ %196, %__str_to_int.exit300 ], [ %sym_files.0, %bb28 ], [ %sym_files.0, %bb31 ], [ %sym_files.0, %bb34 ], [ %sym_files.0, %__str_to_int.exit489 ], 
  %one_line_streams_flag.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %one_line_streams_flag.0, %__add_arg.exit132 ], [ %one_line_streams_flag.0, %__str_to_int.exit300 ], [ %one_line_streams_flag.0, %bb28 ], [ %one_line_streams_flag.0, %bb31 ]
  %n_stream_fill_info.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %n_stream_fill_info.0, %__add_arg.exit132 ], [ %n_stream_fill_info.0, %__str_to_int.exit300 ], [ %n_stream_fill_info.0, %bb28 ], [ %n_stream_fill_info.0, %bb31 ], [ %n_stream_f
  %n_dgram_fill_info.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %n_dgram_fill_info.0, %__add_arg.exit132 ], [ %n_dgram_fill_info.0, %__str_to_int.exit300 ], [ %n_dgram_fill_info.0, %bb28 ], [ %n_dgram_fill_info.0, %bb31 ], [ %n_dgram_fill_in
  %fd_fail.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %fd_fail.0, %__add_arg.exit132 ], [ %fd_fail.0, %__str_to_int.exit300 ], [ %fd_fail.0, %bb28 ], [ %fd_fail.0, %bb31 ], [ 1, %bb34 ], [ %287, %__str_to_int.exit489 ], [ %fd_fail.0, %__str_
  %sym_arg_num.1 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %60, %__add_arg.exit132 ], [ %sym_arg_num.1, %__str_to_int.exit300 ], [ %sym_arg_num.1, %bb28 ], [ %sym_arg_num.1, %bb31 ], [ %sym_arg_num.1, %bb34 ], [ %sym_arg_num.1, %__str_to_int.
  %k.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %32, %__add_arg.exit132 ], [ %200, %__str_to_int.exit300 ], [ %232, %bb28 ], [ %241, %bb31 ], [ %250, %bb34 ], [ %264, %__str_to_int.exit489 ], [ %328, %__str_to_int.exit557 ], [ %392, %__str_t
  %705 = icmp slt i32 %k.0, %0, !dbg !8523
  br i1 %705, label %bb3, label %bb100, !dbg !8523

bb100:                                            ; preds = %bb99
  %706 = add nsw i32 %704, 1, !dbg !8524
  %707 = sext i32 %706 to i64, !dbg !8524
  %int_cast_to_i64 = bitcast i64 3 to i64
  %708 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %708, label %klee_overshift_check.exit, label %bb.i2

bb.i2:                                            ; preds = %bb100
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb100
  %709 = shl nsw i64 %707, 3, !dbg !8524
  %710 = call noalias i8* @malloc(i64 %709) nounwind, !dbg !8524
  %711 = bitcast i8* %710 to i8**, !dbg !8524
  call void @klee_mark_global(i8* %710) nounwind, !dbg !8525
  %712 = sext i32 %704 to i64, !dbg !8526
  %int_cast_to_i641 = bitcast i64 3 to i64
  %713 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %713, label %klee_overshift_check.exit4, label %bb.i3

bb.i3:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit4:                       ; preds = %klee_overshift_check.exit
  %714 = shl nsw i64 %712, 3, !dbg !8526
  %new_argv101102 = bitcast [1024 x i8*]* %new_argv to i8*, !dbg !8526
  %715 = call i8* @memcpy(i8* %710, i8* %new_argv101102, i64 %714)
  %716 = getelementptr inbounds i8** %711, i64 %712, !dbg !8527
  store i8* null, i8** %716, align 8, !dbg !8527
  store i32 %704, i32* %argcPtr, align 4, !dbg !8528
  store i8** %711, i8*** %argvPtr, align 8, !dbg !8529
  %stream_fill_info103 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 0, !dbg !8530
  %dgram_fill_info104 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 0, !dbg !8530
  call void @klee_init_fds(i32 %sym_files.0, i32 %sym_file_len.0, i32 %sym_stdout_flag.0, i32 %save_all_writes_flag.0, i32 %sym_streams.0, i32 %sym_stream_len.0, i32 %sym_dgrams.0, i32 %sym_dgram_len.0, i32 %fd_fail.0, i32 %one_line_streams_flag.0, %stru
  ret void, !dbg !8531
}

define internal fastcc i8* @__get_sym_str(i32 %numChars, i8* %name) nounwind {
entry:
  %0 = add nsw i32 %numChars, 1, !dbg !8532
  %1 = sext i32 %0 to i64, !dbg !8532
  %2 = tail call noalias i8* @malloc(i64 %1) nounwind, !dbg !8532
  tail call void @klee_mark_global(i8* %2) nounwind, !dbg !8533
  tail call void @klee_make_symbolic(i8* %2, i64 %1, i8* %name) nounwind, !dbg !8534
  %3 = icmp sgt i32 %numChars, 0, !dbg !8535
  br i1 %3, label %bb.lr.ph, label %bb2, !dbg !8535

bb.lr.ph:                                         ; preds = %entry
  %tmp1 = zext i32 %numChars to i64
  br label %bb

bb:                                               ; preds = %bb, %bb.lr.ph
  %indvar = phi i64 [ 0, %bb.lr.ph ], [ %indvar.next, %bb ]
  %scevgep = getelementptr i8* %2, i64 %indvar
  %4 = load i8* %scevgep, align 1, !dbg !8536
  %5 = add i8 %4, -32, !dbg !8537
  %6 = icmp ult i8 %5, 95, !dbg !8537
  %7 = zext i1 %6 to i64, !dbg !8536
  tail call void @klee_prefer_cex(i8* %2, i64 %7) nounwind, !dbg !8536
  %indvar.next = add i64 %indvar, 1
  %exitcond2 = icmp eq i64 %indvar.next, %tmp1
  br i1 %exitcond2, label %bb2, label %bb, !dbg !8535

bb2:                                              ; preds = %bb, %entry
  %8 = sext i32 %numChars to i64, !dbg !8539
  %9 = getelementptr inbounds i8* %2, i64 %8, !dbg !8539
  store i8 0, i8* %9, align 1, !dbg !8539
  ret i8* %2, !dbg !8540
}

declare void @klee_mark_global(i8*)

declare void @klee_make_symbolic(i8*, i64, i8*)

declare void @klee_prefer_cex(i8*, i64)

declare void @klee_report_error(i8*, i32, i8*, i8*) noreturn

define internal fastcc i64 @__convert_escape_sequences(i8* nocapture %s) nounwind {
entry:
  br label %bb21, !dbg !8541

bb1:                                              ; preds = %bb21
  store i8 %70, i8* %d.0, align 1, !dbg !8542
  %0 = getelementptr inbounds i8* %s_addr.0, i64 1, !dbg !8542
  br label %bb21.backedge, !dbg !8542

bb21.backedge:                                    ; preds = %bb19, %klee_overshift_check.exit9, %bb15, %klee_overshift_check.exit7, %klee_overshift_check.exit5, %bb10, %bb9, %bb8, %bb7, %bb6, %bb5, %bb4, %bb3, %bb1
  %s_addr.0.be = phi i8* [ %0, %bb1 ], [ %4, %bb3 ], [ %63, %klee_overshift_check.exit9 ], [ %48, %bb19 ], [ %4, %bb10 ], [ %4, %bb9 ], [ %4, %bb8 ], [ %4, %bb7 ], [ %4, %bb6 ], [ %4, %bb5 ], [ %4, %bb4 ], [ %21, %klee_overshift_check.exit5 ], [ %14, %kl
  %indvar.next = add i64 %69, 1
  br label %bb21

bb2:                                              ; preds = %bb21
  %1 = getelementptr inbounds i8* %s_addr.0, i64 1, !dbg !8543
  %2 = load i8* %1, align 1, !dbg !8544
  %3 = sext i8 %2 to i32, !dbg !8544
  %4 = getelementptr inbounds i8* %s_addr.0, i64 2, !dbg !8544
  switch i32 %3, label %bb3 [
    i32 48, label %bb11
    i32 49, label %bb11
    i32 50, label %bb11
    i32 51, label %bb11
    i32 52, label %bb11
    i32 53, label %bb11
    i32 54, label %bb11
    i32 55, label %bb11
    i32 97, label %bb4
    i32 98, label %bb5
    i32 102, label %bb6
    i32 110, label %bb7
    i32 114, label %bb8
    i32 116, label %bb9
    i32 118, label %bb10
    i32 120, label %bb16
  ], !dbg !8544

bb3:                                              ; preds = %bb2
  store i8 %2, i8* %d.0, align 1, !dbg !8545
  br label %bb21.backedge, !dbg !8545

bb4:                                              ; preds = %bb2
  store i8 7, i8* %d.0, align 1, !dbg !8546
  br label %bb21.backedge, !dbg !8546

bb5:                                              ; preds = %bb2
  store i8 8, i8* %d.0, align 1, !dbg !8547
  br label %bb21.backedge, !dbg !8547

bb6:                                              ; preds = %bb2
  store i8 12, i8* %d.0, align 1, !dbg !8548
  br label %bb21.backedge, !dbg !8548

bb7:                                              ; preds = %bb2
  store i8 10, i8* %d.0, align 1, !dbg !8549
  br label %bb21.backedge, !dbg !8549

bb8:                                              ; preds = %bb2
  store i8 13, i8* %d.0, align 1, !dbg !8550
  br label %bb21.backedge, !dbg !8550

bb9:                                              ; preds = %bb2
  store i8 9, i8* %d.0, align 1, !dbg !8551
  br label %bb21.backedge, !dbg !8551

bb10:                                             ; preds = %bb2
  store i8 11, i8* %d.0, align 1, !dbg !8552
  br label %bb21.backedge, !dbg !8552

bb11:                                             ; preds = %bb2, %bb2, %bb2, %bb2, %bb2, %bb2, %bb2, %bb2
  %5 = add i8 %2, -48, !dbg !8553
  %6 = add nsw i32 %3, -48, !dbg !8553
  %7 = icmp ult i8 %5, 8, !dbg !8553
  %. = select i1 %7, i32 %6, i32 -1
  %8 = load i8* %4, align 1, !dbg !8556
  %9 = add i8 %8, -48, !dbg !8557
  %10 = icmp ult i8 %9, 8, !dbg !8557
  br i1 %10, label %__getodigit.exit26, label %bb15, !dbg !8557

__getodigit.exit26:                               ; preds = %bb11
  %11 = sext i8 %8 to i32, !dbg !8557
  %12 = add nsw i32 %11, -48, !dbg !8557
  %13 = icmp sgt i32 %12, -1, !dbg !8556
  br i1 %13, label %bb12, label %bb15, !dbg !8556

bb12:                                             ; preds = %__getodigit.exit26
  %14 = getelementptr inbounds i8* %s_addr.0, i64 3, !dbg !8558
  %15 = load i8* %14, align 1, !dbg !8559
  %16 = add i8 %15, -48, !dbg !8560
  %17 = icmp ult i8 %16, 8, !dbg !8560
  br i1 %17, label %__getodigit.exit38, label %bb14, !dbg !8560

__getodigit.exit38:                               ; preds = %bb12
  %18 = sext i8 %15 to i32, !dbg !8560
  %19 = add nsw i32 %18, -48, !dbg !8560
  %20 = icmp sgt i32 %19, -1, !dbg !8559
  br i1 %20, label %bb13, label %bb14, !dbg !8559

bb13:                                             ; preds = %__getodigit.exit38
  %21 = getelementptr inbounds i8* %s_addr.0, i64 4, !dbg !8561
  %int_cast_to_i64 = zext i32 6 to i64
  %22 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %22, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb13
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb13
  %23 = shl nsw i32 %., 6, !dbg !8562
  %int_cast_to_i641 = zext i32 3 to i64
  %24 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %24, label %klee_overshift_check.exit5, label %bb.i4

bb.i4:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit5:                       ; preds = %klee_overshift_check.exit
  %25 = shl nsw i32 %12, 3, !dbg !8562
  %26 = or i32 %25, %23
  %27 = or i32 %26, %19
  %28 = trunc i32 %27 to i8, !dbg !8562
  store i8 %28, i8* %d.0, align 1, !dbg !8562
  br label %bb21.backedge, !dbg !8562

bb14:                                             ; preds = %__getodigit.exit38, %bb12
  %int_cast_to_i642 = zext i32 3 to i64
  %29 = icmp ult i64 %int_cast_to_i642, 32
  br i1 %29, label %klee_overshift_check.exit7, label %bb.i6

bb.i6:                                            ; preds = %bb14
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit7:                       ; preds = %bb14
  %30 = shl nsw i32 %., 3, !dbg !8563
  %31 = or i32 %12, %30
  %32 = trunc i32 %31 to i8, !dbg !8563
  store i8 %32, i8* %d.0, align 1, !dbg !8563
  br label %bb21.backedge, !dbg !8563

bb15:                                             ; preds = %__getodigit.exit26, %bb11
  %33 = trunc i32 %. to i8, !dbg !8564
  store i8 %33, i8* %d.0, align 1, !dbg !8564
  br label %bb21.backedge, !dbg !8564

bb16:                                             ; preds = %bb2
  %34 = load i8* %4, align 1, !dbg !8565
  %35 = add i8 %34, -48, !dbg !8566
  %36 = icmp ult i8 %35, 10, !dbg !8566
  br i1 %36, label %bb.i28, label %bb1.i29, !dbg !8566

bb.i28:                                           ; preds = %bb16
  %37 = sext i8 %34 to i32, !dbg !8566
  %38 = add nsw i32 %37, -48, !dbg !8566
  br label %__getxdigit.exit34, !dbg !8566

bb1.i29:                                          ; preds = %bb16
  %39 = add i8 %34, -65, !dbg !8566
  %40 = icmp ult i8 %39, 6, !dbg !8566
  br i1 %40, label %bb2.i30, label %bb3.i31, !dbg !8566

bb2.i30:                                          ; preds = %bb1.i29
  %41 = sext i8 %34 to i32, !dbg !8566
  %42 = add nsw i32 %41, -55, !dbg !8566
  br label %__getxdigit.exit34, !dbg !8566

bb3.i31:                                          ; preds = %bb1.i29
  %43 = add i8 %34, -97, !dbg !8566
  %44 = icmp ult i8 %43, 6, !dbg !8566
  br i1 %44, label %bb4.i32, label %bb20, !dbg !8566

bb4.i32:                                          ; preds = %bb3.i31
  %45 = sext i8 %34 to i32, !dbg !8566
  %46 = add nsw i32 %45, -87, !dbg !8566
  br label %__getxdigit.exit34, !dbg !8566

__getxdigit.exit34:                               ; preds = %bb4.i32, %bb2.i30, %bb.i28
  %iftmp.12.0.i33 = phi i32 [ %38, %bb.i28 ], [ %42, %bb2.i30 ], [ %46, %bb4.i32 ]
  %47 = icmp sgt i32 %iftmp.12.0.i33, -1, !dbg !8565
  br i1 %47, label %bb17, label %bb20, !dbg !8565

bb17:                                             ; preds = %__getxdigit.exit34
  %48 = getelementptr inbounds i8* %s_addr.0, i64 3, !dbg !8567
  %49 = load i8* %48, align 1, !dbg !8568
  %50 = add i8 %49, -48, !dbg !8569
  %51 = icmp ult i8 %50, 10, !dbg !8569
  br i1 %51, label %bb.i27, label %bb1.i, !dbg !8569

bb.i27:                                           ; preds = %bb17
  %52 = sext i8 %49 to i32, !dbg !8569
  %53 = add nsw i32 %52, -48, !dbg !8569
  br label %__getxdigit.exit, !dbg !8569

bb1.i:                                            ; preds = %bb17
  %54 = add i8 %49, -65, !dbg !8569
  %55 = icmp ult i8 %54, 6, !dbg !8569
  br i1 %55, label %bb2.i, label %bb3.i, !dbg !8569

bb2.i:                                            ; preds = %bb1.i
  %56 = sext i8 %49 to i32, !dbg !8569
  %57 = add nsw i32 %56, -55, !dbg !8569
  br label %__getxdigit.exit, !dbg !8569

bb3.i:                                            ; preds = %bb1.i
  %58 = add i8 %49, -97, !dbg !8569
  %59 = icmp ult i8 %58, 6, !dbg !8569
  br i1 %59, label %bb4.i, label %bb19, !dbg !8569

bb4.i:                                            ; preds = %bb3.i
  %60 = sext i8 %49 to i32, !dbg !8569
  %61 = add nsw i32 %60, -87, !dbg !8569
  br label %__getxdigit.exit, !dbg !8569

__getxdigit.exit:                                 ; preds = %bb4.i, %bb2.i, %bb.i27
  %iftmp.12.0.i = phi i32 [ %53, %bb.i27 ], [ %57, %bb2.i ], [ %61, %bb4.i ]
  %62 = icmp sgt i32 %iftmp.12.0.i, -1, !dbg !8568
  br i1 %62, label %bb18, label %bb19, !dbg !8568

bb18:                                             ; preds = %__getxdigit.exit
  %63 = getelementptr inbounds i8* %s_addr.0, i64 4, !dbg !8570
  %int_cast_to_i643 = zext i32 4 to i64
  %64 = icmp ult i64 %int_cast_to_i643, 32
  br i1 %64, label %klee_overshift_check.exit9, label %bb.i8

bb.i8:                                            ; preds = %bb18
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit9:                       ; preds = %bb18
  %65 = shl nsw i32 %iftmp.12.0.i33, 4, !dbg !8571
  %66 = or i32 %iftmp.12.0.i, %65
  %67 = trunc i32 %66 to i8, !dbg !8571
  store i8 %67, i8* %d.0, align 1, !dbg !8571
  br label %bb21.backedge, !dbg !8571

bb19:                                             ; preds = %__getxdigit.exit, %bb3.i
  %68 = trunc i32 %iftmp.12.0.i33 to i8, !dbg !8572
  store i8 %68, i8* %d.0, align 1, !dbg !8572
  br label %bb21.backedge, !dbg !8572

bb20:                                             ; preds = %__getxdigit.exit34, %bb3.i31
  tail call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str271, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([24 x i8]* @.str2273, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1272, i64 0, i64 0)) noreturn nounwind
  unreachable, !dbg !8573

bb21:                                             ; preds = %bb21.backedge, %entry
  %69 = phi i64 [ %indvar.next, %bb21.backedge ], [ 0, %entry ]
  %s_addr.0 = phi i8* [ %s_addr.0.be, %bb21.backedge ], [ %s, %entry ]
  %d.0 = getelementptr i8* %s, i64 %69
  %70 = load i8* %s_addr.0, align 1, !dbg !8575
  switch i8 %70, label %bb1 [
    i8 0, label %bb22
    i8 92, label %bb2
  ]

bb22:                                             ; preds = %bb21
  ret i64 %69, !dbg !8576
}

declare i32 @klee_shadow_enabled()

define i32 @kill(i32 %pid, i32 %sig) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([17 x i8]* @.str2318, i64 0, i64 0)) nounwind, !dbg !8577
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !8579
  store i32 1, i32* %0, align 4, !dbg !8579
  ret i32 -1, !dbg !8580
}

define i32 @fork() nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str316, i64 0, i64 0)) nounwind, !dbg !8581
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !8583
  store i32 12, i32* %0, align 4, !dbg !8583
  ret i32 -1, !dbg !8584
}

declare void @klee_warning(i8*)

define i32 @vfork() nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str316, i64 0, i64 0)) nounwind, !dbg !8585
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !8588
  store i32 12, i32* %0, align 4, !dbg !8588
  ret i32 -1, !dbg !8586
}

define weak i32 @execve(i8* %file, i8** %argv, i8** %envp) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1317, i64 0, i64 0)) nounwind, !dbg !8589
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !8589
  store i32 13, i32* %0, align 4, !dbg !8589
  ret i32 -1, !dbg !8590
}

define weak i32 @execvp(i8* %file, i8** %argv) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1317, i64 0, i64 0)) nounwind, !dbg !8592
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !8592
  store i32 13, i32* %0, align 4, !dbg !8592
  ret i32 -1, !dbg !8593
}

define weak i32 @execv(i8* %path, i8** %argv) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1317, i64 0, i64 0)) nounwind, !dbg !8595
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !8595
  store i32 13, i32* %0, align 4, !dbg !8595
  ret i32 -1, !dbg !8596
}

define weak i32 @execle(i8* %path, i8* %arg, ...) nounwind {
entry:
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1317, i64 0, i64 0)) nounwind, !dbg !8598
  %0 = call i32* @__errno_location() nounwind readnone, !dbg !8598
  store i32 13, i32* %0, align 4, !dbg !8598
  ret i32 -1, !dbg !8599
}

define weak i32 @execlp(i8* %file, i8* %arg, ...) nounwind {
entry:
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1317, i64 0, i64 0)) nounwind, !dbg !8601
  %0 = call i32* @__errno_location() nounwind readnone, !dbg !8601
  store i32 13, i32* %0, align 4, !dbg !8601
  ret i32 -1, !dbg !8602
}

define weak i32 @execl(i8* %path, i8* %arg, ...) nounwind {
entry:
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1317, i64 0, i64 0)) nounwind, !dbg !8604
  %0 = call i32* @__errno_location() nounwind readnone, !dbg !8604
  store i32 13, i32* %0, align 4, !dbg !8604
  ret i32 -1, !dbg !8605
}

define void @longjmp(%struct.__jmp_buf_tag* nocapture %env, i32 %val) noreturn nounwind {
entry:
  tail call void @klee_report_error(i8* getelementptr inbounds ([10 x i8]* @.str3319, i64 0, i64 0), i32 35, i8* getelementptr inbounds ([20 x i8]* @.str4320, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str5321, i64 0, i64 0)) noreturn nounwin
  unreachable, !dbg !8607
}

define weak i32 @_setjmp(%struct.__jmp_buf_tag* %__env) nounwind {
entry:
  tail call void @klee_warning_once(i8* getelementptr inbounds ([9 x i8]* @.str6322, i64 0, i64 0)) nounwind, !dbg !8609
  ret i32 0, !dbg !8611
}

declare void @klee_warning_once(i8*)

define %struct.exe_file_t* @__get_file(i32 %fd) nounwind readonly {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8612
  br i1 %0, label %bb, label %bb3, !dbg !8612

bb:                                               ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8613
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8614
  %3 = load i32* %2, align 4, !dbg !8614
  %4 = and i32 %3, 1
  %toBool = icmp eq i32 %4, 0, !dbg !8614
  br i1 %toBool, label %bb3, label %bb1, !dbg !8614

bb1:                                              ; preds = %bb
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8613
  br label %bb3, !dbg !8615

bb3:                                              ; preds = %bb1, %bb, %entry
  %.0 = phi %struct.exe_file_t* [ %5, %bb1 ], [ null, %bb ], [ null, %entry ]
  ret %struct.exe_file_t* %.0, !dbg !8615
}

define i32 @umask(i32 %mask) nounwind {
entry:
  %0 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 1), align 8, !dbg !8616
  %1 = and i32 %mask, 511, !dbg !8617
  store i32 %1, i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 1), align 8, !dbg !8617
  ret i32 %0, !dbg !8618
}

define i64 @sendfile(i32 %out_fd, i32 %in_fd, i64* %offset, i64 %count) nounwind {
entry:
  %0 = icmp ult i32 %out_fd, 32, !dbg !8619
  br i1 %0, label %bb.i, label %__get_file.exit, !dbg !8619

bb.i:                                             ; preds = %entry
  %1 = sext i32 %out_fd to i64, !dbg !8621
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8622
  %3 = load i32* %2, align 4, !dbg !8622
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8622
  br i1 %toBool.i, label %__get_file.exit, label %bb1.i, !dbg !8622

bb1.i:                                            ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8621
  br label %__get_file.exit, !dbg !8623

__get_file.exit:                                  ; preds = %bb1.i, %bb.i, %entry
  %.0.i = phi %struct.exe_file_t* [ %5, %bb1.i ], [ null, %bb.i ], [ null, %entry ]
  %6 = icmp ult i32 %in_fd, 32, !dbg !8624
  br i1 %6, label %bb.i8, label %__get_file.exit11, !dbg !8624

bb.i8:                                            ; preds = %__get_file.exit
  %7 = sext i32 %in_fd to i64, !dbg !8626
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %7, i32 1, !dbg !8627
  %9 = load i32* %8, align 4, !dbg !8627
  %10 = and i32 %9, 1
  %toBool.i7 = icmp eq i32 %10, 0, !dbg !8627
  br i1 %toBool.i7, label %__get_file.exit11, label %bb1.i9, !dbg !8627

bb1.i9:                                           ; preds = %bb.i8
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %7, !dbg !8626
  br label %__get_file.exit11, !dbg !8628

__get_file.exit11:                                ; preds = %bb1.i9, %bb.i8, %__get_file.exit
  %.0.i10 = phi %struct.exe_file_t* [ %11, %bb1.i9 ], [ null, %bb.i8 ], [ null, %__get_file.exit ]
  %12 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 3, !dbg !8629
  %13 = load %struct.exe_disk_file_t** %12, align 8, !dbg !8629
  %14 = icmp eq %struct.exe_disk_file_t* %13, null, !dbg !8629
  br i1 %14, label %bb, label %bb1, !dbg !8629

bb:                                               ; preds = %__get_file.exit11
  %15 = getelementptr inbounds %struct.exe_file_t* %.0.i10, i64 0, i32 3, !dbg !8629
  %16 = load %struct.exe_disk_file_t** %15, align 8, !dbg !8629
  %17 = icmp eq %struct.exe_disk_file_t* %16, null, !dbg !8629
  br i1 %17, label %bb2, label %bb1, !dbg !8629

bb1:                                              ; preds = %bb, %__get_file.exit11
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !8630
  store i32 22, i32* %18, align 4, !dbg !8630
  br label %bb5, !dbg !8631

bb2:                                              ; preds = %bb
  %19 = getelementptr inbounds %struct.exe_file_t* %.0.i10, i64 0, i32 0, !dbg !8632
  %20 = load i32* %19, align 8, !dbg !8632
  %21 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 0, !dbg !8632
  %22 = load i32* %21, align 8, !dbg !8632
  %23 = tail call i64 (i64, ...)* @syscall(i64 40, i32 %22, i32 %20, i64* %offset, i64 %count) nounwind, !dbg !8632
  %24 = icmp slt i64 %23, 0, !dbg !8633
  br i1 %24, label %bb3, label %bb5, !dbg !8633

bb3:                                              ; preds = %bb2
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !8634
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !8634
  store i32 %26, i32* %25, align 4, !dbg !8634
  br label %bb5, !dbg !8634

bb5:                                              ; preds = %bb3, %bb2, %bb1
  %.0 = phi i64 [ -1, %bb1 ], [ %23, %bb3 ], [ %23, %bb2 ]
  ret i64 %.0, !dbg !8631
}

declare i64 @syscall(i64, ...) nounwind

declare i32 @klee_get_errno()

define i64 @sendfile64(i32 %out_fd, i32 %in_fd, i64* %offset, i64 %count) nounwind {
entry:
  %0 = tail call i64 @sendfile(i32 %out_fd, i32 %in_fd, i64* %offset, i64 %count) nounwind, !dbg !8635
  ret i64 %0, !dbg !8635
}

define i32 @fsync(i32 %fd) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8637
  br i1 %0, label %bb.i, label %bb, !dbg !8637

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8639
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8640
  %3 = load i32* %2, align 4, !dbg !8640
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8640
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8640

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8639
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8641
  br i1 %6, label %bb, label %bb1, !dbg !8641

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8642
  store i32 9, i32* %7, align 4, !dbg !8642
  br label %bb6, !dbg !8643

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8644
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8644
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8644
  br i1 %10, label %bb3, label %bb6, !dbg !8644

bb3:                                              ; preds = %bb1
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8645
  %12 = load i32* %11, align 8, !dbg !8645
  %13 = tail call i64 (i64, ...)* @syscall(i64 74, i32 %12) nounwind, !dbg !8645
  %14 = trunc i64 %13 to i32, !dbg !8645
  %15 = icmp eq i32 %14, -1, !dbg !8646
  br i1 %15, label %bb4, label %bb6, !dbg !8646

bb4:                                              ; preds = %bb3
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !8647
  %17 = tail call i32 @klee_get_errno() nounwind, !dbg !8647
  store i32 %17, i32* %16, align 4, !dbg !8647
  br label %bb6, !dbg !8647

bb6:                                              ; preds = %bb4, %bb3, %bb1, %bb
  %.0 = phi i32 [ -1, %bb ], [ 0, %bb1 ], [ -1, %bb4 ], [ %14, %bb3 ]
  ret i32 %.0, !dbg !8643
}

define i32 @chroot(i8* nocapture %path) nounwind {
entry:
  %0 = load i8* %path, align 1, !dbg !8648
  switch i8 %0, label %bb4 [
    i8 0, label %bb
    i8 47, label %bb2
  ]

bb:                                               ; preds = %entry
  %1 = tail call i32* @__errno_location() nounwind readnone, !dbg !8650
  store i32 2, i32* %1, align 4, !dbg !8650
  br label %bb5, !dbg !8651

bb2:                                              ; preds = %entry
  %2 = getelementptr inbounds i8* %path, i64 1, !dbg !8652
  %3 = load i8* %2, align 1, !dbg !8652
  %4 = icmp eq i8 %3, 0, !dbg !8652
  br i1 %4, label %bb5, label %bb4, !dbg !8652

bb4:                                              ; preds = %bb2, %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str325, i64 0, i64 0)) nounwind, !dbg !8653
  %5 = tail call i32* @__errno_location() nounwind readnone, !dbg !8654
  store i32 2, i32* %5, align 4, !dbg !8654
  br label %bb5, !dbg !8655

bb5:                                              ; preds = %bb4, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb4 ], [ 0, %bb2 ]
  ret i32 %.0, !dbg !8651
}

define i32 @fstatfs(i32 %fd, %struct.statfs* %buf) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8656
  br i1 %0, label %bb.i, label %bb, !dbg !8656

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8658
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8659
  %3 = load i32* %2, align 4, !dbg !8659
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8659
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8659

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8658
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8660
  br i1 %6, label %bb, label %bb1, !dbg !8660

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8661
  store i32 9, i32* %7, align 4, !dbg !8661
  br label %bb6, !dbg !8662

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8663
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8663
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8663
  br i1 %10, label %bb3, label %bb2, !dbg !8663

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([32 x i8]* @.str1326, i64 0, i64 0)) nounwind, !dbg !8664
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !8665
  store i32 9, i32* %11, align 4, !dbg !8665
  br label %bb6, !dbg !8666

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8667
  %13 = load i32* %12, align 8, !dbg !8667
  %14 = tail call i64 (i64, ...)* @syscall(i64 138, i32 %13, %struct.statfs* %buf) nounwind, !dbg !8667
  %15 = trunc i64 %14 to i32, !dbg !8667
  %16 = icmp eq i32 %15, -1, !dbg !8668
  br i1 %16, label %bb4, label %bb6, !dbg !8668

bb4:                                              ; preds = %bb3
  %17 = tail call i32* @__errno_location() nounwind readnone, !dbg !8669
  %18 = tail call i32 @klee_get_errno() nounwind, !dbg !8669
  store i32 %18, i32* %17, align 4, !dbg !8669
  br label %bb6, !dbg !8669

bb6:                                              ; preds = %bb4, %bb3, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %15, %bb3 ]
  ret i32 %.0, !dbg !8662
}

define i32 @fcntl(i32 %fd, i32 %cmd, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = icmp ult i32 %fd, 32, !dbg !8670
  br i1 %0, label %bb.i, label %bb, !dbg !8670

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8672
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8673
  %3 = load i32* %2, align 4, !dbg !8673
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8673
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8673

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8672
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8674
  br i1 %6, label %bb, label %bb1, !dbg !8674

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = call i32* @__errno_location() nounwind readnone, !dbg !8675
  store i32 9, i32* %7, align 4, !dbg !8675
  br label %bb35, !dbg !8676

bb1:                                              ; preds = %__get_file.exit
  switch i32 %cmd, label %bb8 [
    i32 3, label %bb21
    i32 1, label %bb21
    i32 11, label %bb21
    i32 9, label %bb21
  ]

bb8:                                              ; preds = %bb1
  %cmd.off = add i32 %cmd, -1025
  %8 = icmp ult i32 %cmd.off, 2
  br i1 %8, label %bb21, label %bb13, !dbg !8677

bb13:                                             ; preds = %bb8
  %ap1415 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !8678
  call void @llvm.va_start(i8* %ap1415), !dbg !8678
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !8679
  %10 = load i32* %9, align 8, !dbg !8679
  %11 = icmp ugt i32 %10, 47, !dbg !8679
  br i1 %11, label %bb17, label %bb16, !dbg !8679

bb16:                                             ; preds = %bb13
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !8679
  %13 = load i8** %12, align 8, !dbg !8679
  %tmp = zext i32 %10 to i64
  %14 = ptrtoint i8* %13 to i64, !dbg !8679
  %15 = add i64 %14, %tmp, !dbg !8679
  %16 = inttoptr i64 %15 to i8*, !dbg !8679
  %17 = add i32 %10, 8, !dbg !8679
  store i32 %17, i32* %9, align 8, !dbg !8679
  br label %bb18, !dbg !8679

bb17:                                             ; preds = %bb13
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !8679
  %19 = load i8** %18, align 8, !dbg !8679
  %20 = getelementptr inbounds i8* %19, i64 8, !dbg !8679
  store i8* %20, i8** %18, align 8, !dbg !8679
  br label %bb18, !dbg !8679

bb18:                                             ; preds = %bb17, %bb16
  %addr.76.0 = phi i8* [ %19, %bb17 ], [ %16, %bb16 ]
  %21 = bitcast i8* %addr.76.0 to i32*, !dbg !8679
  %22 = load i32* %21, align 4, !dbg !8679
  call void @llvm.va_end(i8* %ap1415), !dbg !8680
  br label %bb21, !dbg !8680

bb21:                                             ; preds = %bb18, %bb8, %bb1, %bb1, %bb1, %bb1
  %arg.0 = phi i32 [ %22, %bb18 ], [ 0, %bb1 ], [ 0, %bb1 ], [ 0, %bb8 ], [ 0, %bb1 ], [ 0, %bb1 ]
  %23 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8681
  %24 = load %struct.exe_disk_file_t** %23, align 8, !dbg !8681
  %25 = icmp eq %struct.exe_disk_file_t* %24, null, !dbg !8681
  br i1 %25, label %bb32, label %bb22, !dbg !8681

bb22:                                             ; preds = %bb21
  switch i32 %cmd, label %bb31 [
    i32 1, label %bb23
    i32 2, label %bb26
    i32 3, label %bb35
    i32 4, label %bb35
  ], !dbg !8682

bb23:                                             ; preds = %bb22
  %26 = load i32* %2, align 4, !dbg !8683
  %int_cast_to_i64 = zext i32 1 to i64
  %27 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %27, label %klee_overshift_check.exit, label %bb.i1

bb.i1:                                            ; preds = %bb23
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb23
  %28 = lshr i32 %26, 1
  %.lobit = and i32 %28, 1
  br label %bb35

bb26:                                             ; preds = %bb22
  %29 = load i32* %2, align 4, !dbg !8684
  %30 = and i32 %29, -3, !dbg !8684
  store i32 %30, i32* %2, align 4, !dbg !8684
  %31 = and i32 %arg.0, 1
  %toBool27 = icmp eq i32 %31, 0, !dbg !8685
  br i1 %toBool27, label %bb35, label %bb28, !dbg !8685

bb28:                                             ; preds = %bb26
  %32 = or i32 %29, 2, !dbg !8686
  store i32 %32, i32* %2, align 4, !dbg !8686
  br label %bb35, !dbg !8686

bb31:                                             ; preds = %bb22
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str2328, i64 0, i64 0)) nounwind, !dbg !8687
  %33 = call i32* @__errno_location() nounwind readnone, !dbg !8688
  store i32 22, i32* %33, align 4, !dbg !8688
  br label %bb35, !dbg !8689

bb32:                                             ; preds = %bb21
  %34 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8690
  %35 = load i32* %34, align 8, !dbg !8690
  %36 = call i64 (i64, ...)* @syscall(i64 72, i32 %35, i32 %cmd, i32 %arg.0) nounwind, !dbg !8690
  %37 = trunc i64 %36 to i32, !dbg !8690
  %38 = icmp eq i32 %37, -1, !dbg !8691
  br i1 %38, label %bb33, label %bb35, !dbg !8691

bb33:                                             ; preds = %bb32
  %39 = call i32* @__errno_location() nounwind readnone, !dbg !8692
  %40 = call i32 @klee_get_errno() nounwind, !dbg !8692
  store i32 %40, i32* %39, align 4, !dbg !8692
  br label %bb35, !dbg !8692

bb35:                                             ; preds = %bb33, %bb32, %bb31, %bb28, %bb26, %klee_overshift_check.exit, %bb22, %bb22, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb31 ], [ %.lobit, %klee_overshift_check.exit ], [ 0, %bb26 ], [ 0, %bb28 ], [ 0, %bb22 ], [ 0, %bb22 ], [ -1, %bb33 ], [ %37, %bb32 ]
  ret i32 %.0, !dbg !8676
}

define i32 @futimens(i32 %fd, %struct.timespec* %times) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8693
  br i1 %0, label %bb.i, label %bb3, !dbg !8693

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8695
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8696
  %3 = load i32* %2, align 4, !dbg !8696
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8696
  br i1 %toBool.i, label %bb3, label %__get_file.exit, !dbg !8696

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8695
  %cond = icmp eq %struct.exe_file_t* %5, null
  br i1 %cond, label %bb3, label %bb

bb:                                               ; preds = %__get_file.exit
  %6 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8697
  %7 = load %struct.exe_disk_file_t** %6, align 8, !dbg !8697
  %8 = icmp eq %struct.exe_disk_file_t* %7, null, !dbg !8697
  br i1 %8, label %bb4, label %bb1, !dbg !8697

bb1:                                              ; preds = %bb
  tail call void @klee_warning(i8* getelementptr inbounds ([54 x i8]* @.str3329, i64 0, i64 0)) nounwind, !dbg !8698
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !8699
  store i32 2, i32* %9, align 4, !dbg !8699
  br label %bb7, !dbg !8700

bb3:                                              ; preds = %__get_file.exit, %bb.i, %entry
  %10 = tail call i32* @__errno_location() nounwind readnone, !dbg !8701
  store i32 9, i32* %10, align 4, !dbg !8701
  br label %bb7, !dbg !8702

bb4:                                              ; preds = %bb
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8703
  %12 = load i32* %11, align 8, !dbg !8703
  %13 = sext i32 %12 to i64, !dbg !8703
  %14 = tail call i64 (i64, ...)* @syscall(i64 280, i64 %13, i64 0, %struct.timespec* %times, i64 0) nounwind, !dbg !8703
  %15 = trunc i64 %14 to i32, !dbg !8703
  %16 = icmp eq i32 %15, -1, !dbg !8704
  br i1 %16, label %bb5, label %bb7, !dbg !8704

bb5:                                              ; preds = %bb4
  %17 = tail call i32* @__errno_location() nounwind readnone, !dbg !8705
  %18 = tail call i32 @klee_get_errno() nounwind, !dbg !8705
  store i32 %18, i32* %17, align 4, !dbg !8705
  br label %bb7, !dbg !8705

bb7:                                              ; preds = %bb5, %bb4, %bb3, %bb1
  %.0 = phi i32 [ -1, %bb1 ], [ -1, %bb3 ], [ -1, %bb5 ], [ %15, %bb4 ]
  ret i32 %.0, !dbg !8700
}

define i32 @fchown(i32 %fd, i32 %owner, i32 %group) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8706
  br i1 %0, label %bb.i, label %bb, !dbg !8706

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8708
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8709
  %3 = load i32* %2, align 4, !dbg !8709
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8709
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8709

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8708
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8710
  br i1 %6, label %bb, label %bb1, !dbg !8710

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8711
  store i32 9, i32* %7, align 4, !dbg !8711
  br label %bb6, !dbg !8712

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8713
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8713
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8713
  br i1 %10, label %bb3, label %bb2, !dbg !8713

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([32 x i8]* @.str4330, i64 0, i64 0)) nounwind, !dbg !8714
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !8717
  store i32 1, i32* %11, align 4, !dbg !8717
  br label %bb6, !dbg !8716

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8718
  %13 = load i32* %12, align 8, !dbg !8718
  %14 = tail call i64 (i64, ...)* @syscall(i64 93, i32 %13, i32 %owner, i32 %group) nounwind, !dbg !8718
  %15 = trunc i64 %14 to i32, !dbg !8718
  %16 = icmp eq i32 %15, -1, !dbg !8719
  br i1 %16, label %bb4, label %bb6, !dbg !8719

bb4:                                              ; preds = %bb3
  %17 = tail call i32* @__errno_location() nounwind readnone, !dbg !8720
  %18 = tail call i32 @klee_get_errno() nounwind, !dbg !8720
  store i32 %18, i32* %17, align 4, !dbg !8720
  br label %bb6, !dbg !8720

bb6:                                              ; preds = %bb4, %bb3, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %15, %bb3 ]
  ret i32 %.0, !dbg !8712
}

define i32 @fchdir(i32 %fd) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8721
  br i1 %0, label %bb.i, label %bb, !dbg !8721

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8723
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8724
  %3 = load i32* %2, align 4, !dbg !8724
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8724
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8724

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8723
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8725
  br i1 %6, label %bb, label %bb1, !dbg !8725

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8726
  store i32 9, i32* %7, align 4, !dbg !8726
  br label %bb6, !dbg !8727

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8728
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8728
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8728
  br i1 %10, label %bb3, label %bb2, !dbg !8728

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str5331, i64 0, i64 0)) nounwind, !dbg !8729
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !8730
  store i32 2, i32* %11, align 4, !dbg !8730
  br label %bb6, !dbg !8731

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8732
  %13 = load i32* %12, align 8, !dbg !8732
  %14 = tail call i64 (i64, ...)* @syscall(i64 81, i32 %13) nounwind, !dbg !8732
  %15 = trunc i64 %14 to i32, !dbg !8732
  %16 = icmp eq i32 %15, -1, !dbg !8733
  br i1 %16, label %bb4, label %bb6, !dbg !8733

bb4:                                              ; preds = %bb3
  %17 = tail call i32* @__errno_location() nounwind readnone, !dbg !8734
  %18 = tail call i32 @klee_get_errno() nounwind, !dbg !8734
  store i32 %18, i32* %17, align 4, !dbg !8734
  br label %bb6, !dbg !8734

bb6:                                              ; preds = %bb4, %bb3, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %15, %bb3 ]
  ret i32 %.0, !dbg !8727
}

define i32 @ioctl(i32 %fd, i64 %request, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = icmp ult i32 %fd, 32, !dbg !8735
  br i1 %0, label %bb.i, label %bb, !dbg !8735

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8737
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8738
  %3 = load i32* %2, align 4, !dbg !8738
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8738
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8738

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8737
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8739
  br i1 %6, label %bb, label %bb1, !dbg !8739

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = call i32* @__errno_location() nounwind readnone, !dbg !8740
  store i32 9, i32* %7, align 4, !dbg !8740
  br label %bb49, !dbg !8741

bb1:                                              ; preds = %__get_file.exit
  %ap23 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !8742
  call void @llvm.va_start(i8* %ap23), !dbg !8742
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !8743
  %9 = load i32* %8, align 8, !dbg !8743
  %10 = icmp ugt i32 %9, 47, !dbg !8743
  br i1 %10, label %bb5, label %bb4, !dbg !8743

bb4:                                              ; preds = %bb1
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !8743
  %12 = load i8** %11, align 8, !dbg !8743
  %tmp = zext i32 %9 to i64
  %13 = ptrtoint i8* %12 to i64, !dbg !8743
  %14 = add i64 %13, %tmp, !dbg !8743
  %15 = inttoptr i64 %14 to i8*, !dbg !8743
  %16 = add i32 %9, 8, !dbg !8743
  store i32 %16, i32* %8, align 8, !dbg !8743
  br label %bb6, !dbg !8743

bb5:                                              ; preds = %bb1
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !8743
  %18 = load i8** %17, align 8, !dbg !8743
  %19 = getelementptr inbounds i8* %18, i64 8, !dbg !8743
  store i8* %19, i8** %17, align 8, !dbg !8743
  br label %bb6, !dbg !8743

bb6:                                              ; preds = %bb5, %bb4
  %addr.99.0 = phi i8* [ %18, %bb5 ], [ %15, %bb4 ]
  %20 = bitcast i8* %addr.99.0 to i8**, !dbg !8743
  %21 = load i8** %20, align 8, !dbg !8743
  call void @llvm.va_end(i8* %ap23), !dbg !8744
  %22 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8745
  %23 = load %struct.exe_disk_file_t** %22, align 8, !dbg !8745
  %24 = icmp eq %struct.exe_disk_file_t* %23, null, !dbg !8745
  br i1 %24, label %bb46, label %bb9, !dbg !8745

bb9:                                              ; preds = %bb6
  %25 = getelementptr inbounds %struct.exe_disk_file_t* %23, i64 0, i32 3, !dbg !8746
  %26 = load %struct.stat** %25, align 8, !dbg !8746
  switch i64 %request, label %bb45 [
    i64 21505, label %bb10
    i64 21506, label %bb13
    i64 21507, label %bb16
    i64 21508, label %bb19
    i64 21523, label %bb22
    i64 21524, label %bb25
    i64 21531, label %bb28
    i64 35093, label %bb38
    i64 35111, label %bb36
    i64 35123, label %bb35
    i64 2150657282, label %bb34
  ], !dbg !8747

bb10:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([41 x i8]* @.str6332, i64 0, i64 0)) nounwind, !dbg !8748
  %27 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8749
  %28 = load i32* %27, align 8, !dbg !8749
  %29 = and i32 %28, 61440, !dbg !8749
  %30 = icmp eq i32 %29, 8192, !dbg !8749
  br i1 %30, label %bb11, label %bb12, !dbg !8749

bb11:                                             ; preds = %bb10
  %31 = bitcast i8* %21 to i32*, !dbg !8750
  store i32 27906, i32* %31, align 4, !dbg !8750
  %32 = getelementptr inbounds i8* %21, i64 4
  %33 = bitcast i8* %32 to i32*, !dbg !8751
  store i32 5, i32* %33, align 4, !dbg !8751
  %34 = getelementptr inbounds i8* %21, i64 8
  %35 = bitcast i8* %34 to i32*, !dbg !8752
  store i32 1215, i32* %35, align 4, !dbg !8752
  %36 = getelementptr inbounds i8* %21, i64 12
  %37 = bitcast i8* %36 to i32*, !dbg !8753
  store i32 35287, i32* %37, align 4, !dbg !8753
  %38 = getelementptr inbounds i8* %21, i64 16
  store i8 0, i8* %38, align 4, !dbg !8754
  %39 = getelementptr inbounds i8* %21, i64 17
  store i8 3, i8* %39, align 1, !dbg !8755
  %40 = getelementptr inbounds i8* %21, i64 18, !dbg !8756
  store i8 28, i8* %40, align 1, !dbg !8756
  %41 = getelementptr inbounds i8* %21, i64 19, !dbg !8757
  store i8 127, i8* %41, align 1, !dbg !8757
  %42 = getelementptr inbounds i8* %21, i64 20, !dbg !8758
  store i8 21, i8* %42, align 1, !dbg !8758
  %43 = getelementptr inbounds i8* %21, i64 21, !dbg !8759
  store i8 4, i8* %43, align 1, !dbg !8759
  %44 = getelementptr inbounds i8* %21, i64 22, !dbg !8760
  store i8 0, i8* %44, align 1, !dbg !8760
  %45 = getelementptr inbounds i8* %21, i64 23, !dbg !8761
  store i8 1, i8* %45, align 1, !dbg !8761
  %46 = getelementptr inbounds i8* %21, i64 24, !dbg !8762
  store i8 -1, i8* %46, align 1, !dbg !8762
  %47 = getelementptr inbounds i8* %21, i64 25, !dbg !8763
  store i8 17, i8* %47, align 1, !dbg !8763
  %48 = getelementptr inbounds i8* %21, i64 26, !dbg !8764
  store i8 19, i8* %48, align 1, !dbg !8764
  %49 = getelementptr inbounds i8* %21, i64 27, !dbg !8765
  store i8 26, i8* %49, align 1, !dbg !8765
  %50 = getelementptr inbounds i8* %21, i64 28, !dbg !8766
  store i8 -1, i8* %50, align 1, !dbg !8766
  %51 = getelementptr inbounds i8* %21, i64 29, !dbg !8767
  store i8 18, i8* %51, align 1, !dbg !8767
  %52 = getelementptr inbounds i8* %21, i64 30, !dbg !8768
  store i8 15, i8* %52, align 1, !dbg !8768
  %53 = getelementptr inbounds i8* %21, i64 31, !dbg !8769
  store i8 23, i8* %53, align 1, !dbg !8769
  %54 = getelementptr inbounds i8* %21, i64 32, !dbg !8770
  store i8 22, i8* %54, align 1, !dbg !8770
  %55 = getelementptr inbounds i8* %21, i64 33, !dbg !8771
  store i8 -1, i8* %55, align 1, !dbg !8771
  %56 = getelementptr inbounds i8* %21, i64 34, !dbg !8772
  store i8 0, i8* %56, align 1, !dbg !8772
  %57 = getelementptr inbounds i8* %21, i64 35, !dbg !8773
  store i8 0, i8* %57, align 1, !dbg !8773
  br label %bb49, !dbg !8774

bb12:                                             ; preds = %bb10
  %58 = call i32* @__errno_location() nounwind readnone, !dbg !8775
  store i32 25, i32* %58, align 4, !dbg !8775
  br label %bb49, !dbg !8776

bb13:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([42 x i8]* @.str7333, i64 0, i64 0)) nounwind, !dbg !8777
  %59 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8778
  %60 = load i32* %59, align 8, !dbg !8778
  %61 = and i32 %60, 61440, !dbg !8778
  %62 = icmp eq i32 %61, 8192, !dbg !8778
  br i1 %62, label %bb49, label %bb15, !dbg !8778

bb15:                                             ; preds = %bb13
  %63 = call i32* @__errno_location() nounwind readnone, !dbg !8779
  store i32 25, i32* %63, align 4, !dbg !8779
  br label %bb49, !dbg !8780

bb16:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8]* @.str8334, i64 0, i64 0)) nounwind, !dbg !8781
  %64 = icmp eq i32 %fd, 0, !dbg !8782
  br i1 %64, label %bb49, label %bb18, !dbg !8782

bb18:                                             ; preds = %bb16
  %65 = call i32* @__errno_location() nounwind readnone, !dbg !8783
  store i32 25, i32* %65, align 4, !dbg !8783
  br label %bb49, !dbg !8784

bb19:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8]* @.str9335, i64 0, i64 0)) nounwind, !dbg !8785
  %66 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8786
  %67 = load i32* %66, align 8, !dbg !8786
  %68 = and i32 %67, 61440, !dbg !8786
  %69 = icmp eq i32 %68, 8192, !dbg !8786
  br i1 %69, label %bb49, label %bb21, !dbg !8786

bb21:                                             ; preds = %bb19
  %70 = call i32* @__errno_location() nounwind readnone, !dbg !8787
  store i32 25, i32* %70, align 4, !dbg !8787
  br label %bb49, !dbg !8788

bb22:                                             ; preds = %bb9
  %71 = bitcast i8* %21 to i16*, !dbg !8789
  store i16 24, i16* %71, align 2, !dbg !8789
  %72 = getelementptr inbounds i8* %21, i64 2
  %73 = bitcast i8* %72 to i16*, !dbg !8790
  store i16 80, i16* %73, align 2, !dbg !8790
  call void @klee_warning_once(i8* getelementptr inbounds ([45 x i8]* @.str10336, i64 0, i64 0)) nounwind, !dbg !8791
  %74 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8792
  %75 = load i32* %74, align 8, !dbg !8792
  %76 = and i32 %75, 61440, !dbg !8792
  %77 = icmp eq i32 %76, 8192, !dbg !8792
  br i1 %77, label %bb49, label %bb24, !dbg !8792

bb24:                                             ; preds = %bb22
  %78 = call i32* @__errno_location() nounwind readnone, !dbg !8793
  store i32 25, i32* %78, align 4, !dbg !8793
  br label %bb49, !dbg !8794

bb25:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([46 x i8]* @.str11337, i64 0, i64 0)) nounwind, !dbg !8795
  %79 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8796
  %80 = load i32* %79, align 8, !dbg !8796
  %81 = and i32 %80, 61440, !dbg !8796
  %82 = icmp eq i32 %81, 8192, !dbg !8796
  %83 = call i32* @__errno_location() nounwind readnone, !dbg !8797
  br i1 %82, label %bb26, label %bb27, !dbg !8796

bb26:                                             ; preds = %bb25
  store i32 22, i32* %83, align 4, !dbg !8797
  br label %bb49, !dbg !8798

bb27:                                             ; preds = %bb25
  store i32 25, i32* %83, align 4, !dbg !8799
  br label %bb49, !dbg !8800

bb28:                                             ; preds = %bb9
  %84 = bitcast i8* %21 to i32*, !dbg !8801
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8]* @.str12338, i64 0, i64 0)) nounwind, !dbg !8802
  %85 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8803
  %86 = load i32* %85, align 8, !dbg !8803
  %87 = and i32 %86, 61440, !dbg !8803
  %88 = icmp eq i32 %87, 8192, !dbg !8803
  br i1 %88, label %bb29, label %bb33, !dbg !8803

bb29:                                             ; preds = %bb28
  %89 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 2, !dbg !8804
  %90 = load i64* %89, align 8, !dbg !8804
  %91 = load %struct.exe_disk_file_t** %22, align 8, !dbg !8804
  %92 = getelementptr inbounds %struct.exe_disk_file_t* %91, i64 0, i32 0, !dbg !8804
  %93 = load i32* %92, align 8, !dbg !8804
  %94 = zext i32 %93 to i64, !dbg !8804
  %95 = icmp slt i64 %90, %94, !dbg !8804
  br i1 %95, label %bb30, label %bb32, !dbg !8804

bb30:                                             ; preds = %bb29
  %96 = trunc i64 %90 to i32, !dbg !8805
  %97 = sub i32 %93, %96, !dbg !8805
  br label %bb32, !dbg !8805

bb32:                                             ; preds = %bb30, %bb29
  %storemerge = phi i32 [ %97, %bb30 ], [ 0, %bb29 ]
  store i32 %storemerge, i32* %84, align 4
  br label %bb49, !dbg !8806

bb33:                                             ; preds = %bb28
  %98 = call i32* @__errno_location() nounwind readnone, !dbg !8807
  store i32 25, i32* %98, align 4, !dbg !8807
  br label %bb49, !dbg !8808

bb34:                                             ; preds = %bb9
  call void @klee_warning(i8* getelementptr inbounds ([44 x i8]* @.str13339, i64 0, i64 0)) nounwind, !dbg !8809
  %99 = call i32* @__errno_location() nounwind readnone, !dbg !8810
  store i32 22, i32* %99, align 4, !dbg !8810
  br label %bb49, !dbg !8811

bb35:                                             ; preds = %bb9
  %100 = getelementptr inbounds i8* %21, i64 16
  %101 = bitcast i8* %100 to i32*, !dbg !8812
  store i32 0, i32* %101, align 8, !dbg !8812
  br label %bb49, !dbg !8813

bb36:                                             ; preds = %bb9
  %102 = getelementptr inbounds i8* %21, i64 18
  %103 = call i8* @memset(i8* %102, i32 221, i64 14)
  br label %bb49, !dbg !8814

bb38:                                             ; preds = %bb9
  %104 = getelementptr inbounds i8* %21, i64 16
  %105 = bitcast i8* %104 to i16*, !dbg !8815
  %106 = load i16* %105, align 8, !dbg !8815
  %107 = zext i16 %106 to i32, !dbg !8815
  switch i32 %107, label %bb40 [
    i32 2, label %bb41
    i32 10, label %bb43
  ], !dbg !8815

bb40:                                             ; preds = %bb38
  store i16 2, i16* %105, align 8, !dbg !8816
  br label %bb41, !dbg !8816

bb41:                                             ; preds = %bb40, %bb38
  %108 = getelementptr inbounds i8* %21, i64 20
  %109 = bitcast i8* %108 to i32*
  store i32 -572662307, i32* %109, align 4
  br label %bb49, !dbg !8817

bb43:                                             ; preds = %bb38
  %110 = getelementptr inbounds i8* %21, i64 24
  %111 = call i8* @memset(i8* %110, i32 221, i64 16)
  br label %bb49, !dbg !8818

bb45:                                             ; preds = %bb9
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str2328, i64 0, i64 0)) nounwind, !dbg !8819
  %112 = call i32* @__errno_location() nounwind readnone, !dbg !8820
  store i32 22, i32* %112, align 4, !dbg !8820
  br label %bb49, !dbg !8821

bb46:                                             ; preds = %bb6
  %113 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8822
  %114 = load i32* %113, align 8, !dbg !8822
  %115 = call i64 (i64, ...)* @syscall(i64 16, i32 %114, i64 %request, i8* %21) nounwind, !dbg !8822
  %116 = trunc i64 %115 to i32, !dbg !8822
  %117 = icmp eq i32 %116, -1, !dbg !8823
  br i1 %117, label %bb47, label %bb49, !dbg !8823

bb47:                                             ; preds = %bb46
  %118 = call i32* @__errno_location() nounwind readnone, !dbg !8824
  %119 = call i32 @klee_get_errno() nounwind, !dbg !8824
  store i32 %119, i32* %118, align 4, !dbg !8824
  br label %bb49, !dbg !8824

bb49:                                             ; preds = %bb47, %bb46, %bb45, %bb43, %bb41, %bb36, %bb35, %bb34, %bb33, %bb32, %bb27, %bb26, %bb24, %bb22, %bb21, %bb19, %bb18, %bb16, %bb15, %bb13, %bb12, %bb11, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb45 ], [ -1, %bb34 ], [ 0, %bb35 ], [ 0, %bb36 ], [ 0, %bb41 ], [ 0, %bb43 ], [ 0, %bb32 ], [ -1, %bb33 ], [ -1, %bb26 ], [ -1, %bb27 ], [ -1, %bb24 ], [ -1, %bb21 ], [ -1, %bb18 ], [ -1, %bb15 ], [ 0, %bb11 ], [ -1, 
  ret i32 %.0, !dbg !8741
}

define void @__undo_get_new_fd(%struct.exe_file_t* nocapture %f) nounwind {
entry:
  %0 = bitcast %struct.exe_file_t* %f to i8*, !dbg !8825
  %1 = call i8* @memset(i8* %0, i32 0, i64 56)
  ret void, !dbg !8827
}

define i32 @__get_new_fd(%struct.exe_file_t** nocapture %pf) nounwind {
entry:
  br label %bb2, !dbg !8828

bb:                                               ; preds = %bb2
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %0 = load i32* %scevgep, align 4, !dbg !8829
  %1 = and i32 %0, 1, !dbg !8829
  %2 = icmp eq i32 %1, 0, !dbg !8829
  br i1 %2, label %bb5, label %bb1, !dbg !8829

bb1:                                              ; preds = %bb
  %indvar.next = add i64 %indvar, 1
  br label %bb2, !dbg !8828

bb2:                                              ; preds = %bb1, %entry
  %indvar = phi i64 [ %indvar.next, %bb1 ], [ 0, %entry ]
  %fd.0 = trunc i64 %indvar to i32
  %3 = icmp slt i32 %fd.0, 32, !dbg !8828
  br i1 %3, label %bb, label %bb3, !dbg !8828

bb3:                                              ; preds = %bb2
  %4 = icmp eq i32 %fd.0, 32, !dbg !8830
  br i1 %4, label %bb4, label %bb5, !dbg !8830

bb4:                                              ; preds = %bb3
  %5 = tail call i32* @__errno_location() nounwind readnone, !dbg !8831
  store i32 23, i32* %5, align 4, !dbg !8831
  br label %bb6, !dbg !8832

bb5:                                              ; preds = %bb3, %bb
  %6 = sext i32 %fd.0 to i64, !dbg !8833
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, !dbg !8833
  store %struct.exe_file_t* %7, %struct.exe_file_t** %pf, align 8, !dbg !8833
  %8 = bitcast %struct.exe_file_t* %7 to i8*, !dbg !8834
  %9 = call i8* @memset(i8* %8, i32 0, i64 56)
  %10 = load %struct.exe_file_t** %pf, align 8, !dbg !8835
  %11 = getelementptr inbounds %struct.exe_file_t* %10, i64 0, i32 0, !dbg !8835
  store i32 -1, i32* %11, align 8, !dbg !8835
  %12 = load %struct.exe_file_t** %pf, align 8, !dbg !8836
  %13 = getelementptr inbounds %struct.exe_file_t* %12, i64 0, i32 1, !dbg !8836
  store i32 1, i32* %13, align 4, !dbg !8836
  br label %bb6, !dbg !8837

bb6:                                              ; preds = %bb5, %bb4
  %.0 = phi i32 [ -1, %bb4 ], [ %fd.0, %bb5 ]
  ret i32 %.0, !dbg !8832
}

define i32 @select(i32 %nfds, %struct.__sigset_t* %read, %struct.__sigset_t* %write, %struct.__sigset_t* %except, %struct.timespec* nocapture %timeout) nounwind {
entry:
  %in_read = alloca %struct.__sigset_t, align 8
  %in_write = alloca %struct.__sigset_t, align 8
  %in_except = alloca %struct.__sigset_t, align 8
  %os_read = alloca %struct.__sigset_t, align 8
  %os_write = alloca %struct.__sigset_t, align 8
  %os_except = alloca %struct.__sigset_t, align 8
  %tv = alloca %struct.timespec, align 8
  %0 = icmp eq %struct.__sigset_t* %read, null, !dbg !8838
  %in_read3 = bitcast %struct.__sigset_t* %in_read to i8*, !dbg !8839
  br i1 %0, label %bb2, label %bb, !dbg !8838

bb:                                               ; preds = %entry
  %1 = bitcast %struct.__sigset_t* %read to i8*, !dbg !8840
  %2 = call i8* @memcpy(i8* %in_read3, i8* %1, i64 128)
  %3 = call i8* @memset(i8* %1, i32 0, i64 128)
  br label %bb4, !dbg !8841

bb2:                                              ; preds = %entry
  %4 = call i8* @memset(i8* %in_read3, i32 0, i64 128)
  br label %bb4, !dbg !8839

bb4:                                              ; preds = %bb2, %bb
  %5 = icmp eq %struct.__sigset_t* %write, null, !dbg !8842
  %in_write8 = bitcast %struct.__sigset_t* %in_write to i8*, !dbg !8843
  br i1 %5, label %bb7, label %bb5, !dbg !8842

bb5:                                              ; preds = %bb4
  %6 = bitcast %struct.__sigset_t* %write to i8*, !dbg !8844
  %7 = call i8* @memcpy(i8* %in_write8, i8* %6, i64 128)
  %8 = call i8* @memset(i8* %6, i32 0, i64 128)
  br label %bb9, !dbg !8845

bb7:                                              ; preds = %bb4
  %9 = call i8* @memset(i8* %in_write8, i32 0, i64 128)
  br label %bb9, !dbg !8843

bb9:                                              ; preds = %bb7, %bb5
  %10 = icmp eq %struct.__sigset_t* %except, null, !dbg !8846
  %in_except13 = bitcast %struct.__sigset_t* %in_except to i8*, !dbg !8847
  br i1 %10, label %bb12, label %bb10, !dbg !8846

bb10:                                             ; preds = %bb9
  %11 = bitcast %struct.__sigset_t* %except to i8*, !dbg !8848
  %12 = call i8* @memcpy(i8* %in_except13, i8* %11, i64 128)
  %13 = call i8* @memset(i8* %11, i32 0, i64 128)
  br label %bb14, !dbg !8849

bb12:                                             ; preds = %bb9
  %14 = call i8* @memset(i8* %in_except13, i32 0, i64 128)
  br label %bb14, !dbg !8847

bb14:                                             ; preds = %bb12, %bb10
  %os_read15 = bitcast %struct.__sigset_t* %os_read to i8*, !dbg !8850
  %15 = call i8* @memset(i8* %os_read15, i32 0, i64 128)
  %os_write16 = bitcast %struct.__sigset_t* %os_write to i8*, !dbg !8851
  %16 = call i8* @memset(i8* %os_write16, i32 0, i64 128)
  %os_except17 = bitcast %struct.__sigset_t* %os_except to i8*, !dbg !8852
  %17 = call i8* @memset(i8* %os_except17, i32 0, i64 128)
  br label %bb47, !dbg !8853

bb18:                                             ; preds = %bb47
  %int_cast_to_i64 = zext i32 64 to i64
  %18 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %19 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %19, label %bb.i20, label %klee_div_zero_check.exit

bb.i20:                                           ; preds = %bb18
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb18
  call void @klee_disable_symbex() nounwind
  %20 = sdiv i32 %i.0, 64, !dbg !8854
  %21 = sext i32 %20 to i64, !dbg !8854
  %22 = getelementptr inbounds %struct.__sigset_t* %in_read, i64 0, i32 0, i64 %21, !dbg !8854
  %23 = load i64* %22, align 8, !dbg !8854
  %24 = and i32 %i.0, 63
  %int_cast_to_i6410 = zext i32 %24 to i64
  %25 = icmp ult i64 %int_cast_to_i6410, 32
  br i1 %25, label %klee_overshift_check.exit, label %bb.i39

bb.i39:                                           ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %klee_div_zero_check.exit
  %26 = shl i32 1, %24, !dbg !8854
  %27 = sext i32 %26 to i64, !dbg !8854
  %28 = and i64 %23, %27, !dbg !8854
  %29 = icmp eq i64 %28, 0, !dbg !8854
  br i1 %29, label %bb19, label %bb21, !dbg !8854

bb19:                                             ; preds = %klee_overshift_check.exit
  %30 = getelementptr inbounds %struct.__sigset_t* %in_write, i64 0, i32 0, i64 %21, !dbg !8854
  %31 = load i64* %30, align 8, !dbg !8854
  %32 = and i64 %31, %27, !dbg !8854
  %33 = icmp eq i64 %32, 0, !dbg !8854
  br i1 %33, label %bb20, label %bb21, !dbg !8854

bb20:                                             ; preds = %bb19
  %34 = getelementptr inbounds %struct.__sigset_t* %in_except, i64 0, i32 0, i64 %21, !dbg !8854
  %35 = load i64* %34, align 8, !dbg !8854
  %36 = and i64 %35, %27, !dbg !8854
  %37 = icmp eq i64 %36, 0, !dbg !8854
  br i1 %37, label %bb46, label %bb21, !dbg !8854

bb21:                                             ; preds = %bb20, %bb19, %klee_overshift_check.exit
  %38 = icmp ult i32 %i.0, 32, !dbg !8855
  br i1 %38, label %bb.i, label %bb22, !dbg !8855

bb.i:                                             ; preds = %bb21
  %39 = load i32* %scevgep91, align 4, !dbg !8857
  %40 = and i32 %39, 1
  %toBool.i = icmp eq i32 %40, 0, !dbg !8857
  %41 = icmp eq %struct.exe_file_t* %scevgep89, null, !dbg !8858
  %or.cond = or i1 %toBool.i, %41
  br i1 %or.cond, label %bb22, label %bb23, !dbg !8857

bb22:                                             ; preds = %bb.i, %bb21
  %42 = call i32* @__errno_location() nounwind readnone, !dbg !8859
  store i32 9, i32* %42, align 4, !dbg !8859
  br label %bb68, !dbg !8860

bb23:                                             ; preds = %bb.i
  %43 = load %struct.exe_disk_file_t** %scevgep92, align 8, !dbg !8861
  %44 = icmp eq %struct.exe_disk_file_t* %43, null, !dbg !8861
  br i1 %44, label %bb38, label %bb24, !dbg !8861

bb24:                                             ; preds = %bb23
  br i1 %29, label %bb34, label %bb25, !dbg !8862

bb25:                                             ; preds = %bb24
  %45 = and i32 %39, 16, !dbg !8863
  %46 = icmp eq i32 %45, 0, !dbg !8863
  br i1 %46, label %bb33, label %bb27, !dbg !8863

bb27:                                             ; preds = %bb25
  %47 = and i32 %39, 32, !dbg !8864
  %48 = icmp eq i32 %47, 0, !dbg !8864
  br i1 %48, label %bb29, label %bb28, !dbg !8864

bb28:                                             ; preds = %bb27
  %49 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 12), align 4, !dbg !8865
  %50 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 11), align 8, !dbg !8865
  %51 = icmp ult i32 %49, %50, !dbg !8865
  %52 = zext i1 %51 to i32, !dbg !8865
  br label %bb32, !dbg !8865

bb29:                                             ; preds = %bb27
  %53 = and i32 %39, 64, !dbg !8866
  %54 = icmp eq i32 %53, 0, !dbg !8866
  br i1 %54, label %bb33, label %bb30, !dbg !8866

bb30:                                             ; preds = %bb29
  %55 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !8867
  %56 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 8), align 8, !dbg !8867
  %57 = icmp ult i32 %55, %56, !dbg !8867
  %58 = zext i1 %57 to i32, !dbg !8867
  br label %bb32, !dbg !8867

bb32:                                             ; preds = %bb30, %bb28
  %flags.0 = phi i32 [ %52, %bb28 ], [ %58, %bb30 ]
  %toBool = icmp eq i32 %flags.0, 0, !dbg !8868
  br i1 %toBool, label %bb34, label %bb33, !dbg !8868

bb33:                                             ; preds = %bb32, %bb29, %bb25
  %flags.076 = phi i32 [ %flags.0, %bb32 ], [ 1, %bb25 ], [ 1, %bb29 ]
  %59 = getelementptr inbounds %struct.__sigset_t* %read, i64 0, i32 0, i64 %21, !dbg !8868
  %60 = load i64* %59, align 8, !dbg !8868
  %61 = or i64 %60, %27, !dbg !8868
  store i64 %61, i64* %59, align 8, !dbg !8868
  br label %bb34, !dbg !8868

bb34:                                             ; preds = %bb33, %bb32, %bb24
  %flags.1 = phi i32 [ %flags.076, %bb33 ], [ 0, %bb24 ], [ 0, %bb32 ]
  %62 = getelementptr inbounds %struct.__sigset_t* %in_write, i64 0, i32 0, i64 %21, !dbg !8869
  %63 = load i64* %62, align 8, !dbg !8869
  %64 = and i64 %63, %27, !dbg !8869
  %65 = icmp eq i64 %64, 0, !dbg !8869
  br i1 %65, label %bb36, label %bb35, !dbg !8869

bb35:                                             ; preds = %bb34
  %66 = or i32 %flags.1, 2, !dbg !8870
  %67 = getelementptr inbounds %struct.__sigset_t* %write, i64 0, i32 0, i64 %21, !dbg !8870
  %68 = load i64* %67, align 8, !dbg !8870
  %69 = or i64 %68, %27, !dbg !8870
  store i64 %69, i64* %67, align 8, !dbg !8870
  br label %bb36, !dbg !8870

bb36:                                             ; preds = %bb35, %bb34
  %flags.2 = phi i32 [ %66, %bb35 ], [ %flags.1, %bb34 ]
  %not. = icmp ne i32 %flags.2, 0
  %70 = zext i1 %not. to i32
  %count.1. = add i32 %70, %count.1
  br label %bb46

bb38:                                             ; preds = %bb23
  br i1 %29, label %bb40, label %bb39, !dbg !8871

bb39:                                             ; preds = %bb38
  %71 = load i32* %scevgep8990, align 8, !dbg !8871
  %int_cast_to_i641 = zext i32 64 to i64
  %72 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %73 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %73, label %bb.i21, label %klee_div_zero_check.exit22

bb.i21:                                           ; preds = %bb39
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit22:                       ; preds = %bb39
  call void @klee_disable_symbex() nounwind
  %74 = sdiv i32 %71, 64, !dbg !8871
  %75 = sext i32 %74 to i64, !dbg !8871
  %76 = getelementptr inbounds %struct.__sigset_t* %os_read, i64 0, i32 0, i64 %75, !dbg !8871
  %77 = load i64* %76, align 8, !dbg !8871
  %78 = and i32 %71, 63
  %int_cast_to_i6411 = zext i32 %78 to i64
  %79 = icmp ult i64 %int_cast_to_i6411, 32
  br i1 %79, label %klee_overshift_check.exit41, label %bb.i40

bb.i40:                                           ; preds = %klee_div_zero_check.exit22
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit41:                      ; preds = %klee_div_zero_check.exit22
  %80 = shl i32 1, %78, !dbg !8871
  %81 = sext i32 %80 to i64, !dbg !8871
  %82 = or i64 %81, %77, !dbg !8871
  store i64 %82, i64* %76, align 8, !dbg !8871
  br label %bb40, !dbg !8871

bb40:                                             ; preds = %klee_overshift_check.exit41, %bb38
  %83 = getelementptr inbounds %struct.__sigset_t* %in_write, i64 0, i32 0, i64 %21, !dbg !8872
  %84 = load i64* %83, align 8, !dbg !8872
  %85 = and i64 %84, %27, !dbg !8872
  %86 = icmp eq i64 %85, 0, !dbg !8872
  %.pre.pre = load i32* %scevgep8990, align 8
  br i1 %86, label %bb42, label %bb41, !dbg !8872

bb41:                                             ; preds = %bb40
  %int_cast_to_i642 = zext i32 64 to i64
  %87 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %88 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %88, label %bb.i23, label %klee_div_zero_check.exit24

bb.i23:                                           ; preds = %bb41
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit24:                       ; preds = %bb41
  call void @klee_disable_symbex() nounwind
  %89 = sdiv i32 %.pre.pre, 64, !dbg !8872
  %90 = sext i32 %89 to i64, !dbg !8872
  %91 = getelementptr inbounds %struct.__sigset_t* %os_write, i64 0, i32 0, i64 %90, !dbg !8872
  %92 = load i64* %91, align 8, !dbg !8872
  %93 = and i32 %.pre.pre, 63
  %int_cast_to_i6412 = zext i32 %93 to i64
  %94 = icmp ult i64 %int_cast_to_i6412, 32
  br i1 %94, label %klee_overshift_check.exit43, label %bb.i42

bb.i42:                                           ; preds = %klee_div_zero_check.exit24
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit43:                      ; preds = %klee_div_zero_check.exit24
  %95 = shl i32 1, %93, !dbg !8872
  %96 = sext i32 %95 to i64, !dbg !8872
  %97 = or i64 %96, %92, !dbg !8872
  store i64 %97, i64* %91, align 8, !dbg !8872
  br label %bb42, !dbg !8872

bb42:                                             ; preds = %klee_overshift_check.exit43, %bb40
  %98 = getelementptr inbounds %struct.__sigset_t* %in_except, i64 0, i32 0, i64 %21, !dbg !8873
  %99 = load i64* %98, align 8, !dbg !8873
  %100 = and i64 %99, %27, !dbg !8873
  %101 = icmp eq i64 %100, 0, !dbg !8873
  br i1 %101, label %bb44, label %bb43, !dbg !8873

bb43:                                             ; preds = %bb42
  %int_cast_to_i643 = zext i32 64 to i64
  %102 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %103 = icmp eq i64 %int_cast_to_i643, 0
  br i1 %103, label %bb.i25, label %klee_div_zero_check.exit26

bb.i25:                                           ; preds = %bb43
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit26:                       ; preds = %bb43
  call void @klee_disable_symbex() nounwind
  %104 = sdiv i32 %.pre.pre, 64, !dbg !8873
  %105 = sext i32 %104 to i64, !dbg !8873
  %106 = getelementptr inbounds %struct.__sigset_t* %os_except, i64 0, i32 0, i64 %105, !dbg !8873
  %107 = load i64* %106, align 8, !dbg !8873
  %108 = and i32 %.pre.pre, 63
  %int_cast_to_i6413 = zext i32 %108 to i64
  %109 = icmp ult i64 %int_cast_to_i6413, 32
  br i1 %109, label %klee_overshift_check.exit45, label %bb.i44

bb.i44:                                           ; preds = %klee_div_zero_check.exit26
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit45:                      ; preds = %klee_div_zero_check.exit26
  %110 = shl i32 1, %108, !dbg !8873
  %111 = sext i32 %110 to i64, !dbg !8873
  %112 = or i64 %107, %111, !dbg !8873
  store i64 %112, i64* %106, align 8, !dbg !8873
  br label %bb44, !dbg !8873

bb44:                                             ; preds = %klee_overshift_check.exit45, %bb42
  %113 = add nsw i32 %.pre.pre, 1, !dbg !8874
  %114 = icmp slt i32 %.pre.pre, %os_nfds.1, !dbg !8874
  %os_nfds.1. = select i1 %114, i32 %os_nfds.1, i32 %113
  br label %bb46

bb46:                                             ; preds = %bb44, %bb36, %bb20
  %count.0 = phi i32 [ %count.1, %bb20 ], [ %count.1., %bb36 ], [ %count.1, %bb44 ]
  %os_nfds.0 = phi i32 [ %os_nfds.1, %bb20 ], [ %os_nfds.1, %bb36 ], [ %os_nfds.1., %bb44 ]
  %indvar.next87 = add i64 %indvar86, 1
  br label %bb47, !dbg !8853

bb47:                                             ; preds = %bb46, %bb14
  %indvar86 = phi i64 [ %indvar.next87, %bb46 ], [ 0, %bb14 ]
  %count.1 = phi i32 [ %count.0, %bb46 ], [ 0, %bb14 ]
  %os_nfds.1 = phi i32 [ %os_nfds.0, %bb46 ], [ 0, %bb14 ]
  %scevgep92 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar86, i32 3
  %scevgep91 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar86, i32 1
  %scevgep89 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar86
  %scevgep8990 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar86, i32 0
  %i.0 = trunc i64 %indvar86 to i32
  %115 = icmp slt i32 %i.0, %nfds, !dbg !8853
  br i1 %115, label %bb18, label %bb48, !dbg !8853

bb48:                                             ; preds = %bb47
  %116 = icmp sgt i32 %os_nfds.1, 0, !dbg !8875
  br i1 %116, label %bb49, label %bb68, !dbg !8875

bb49:                                             ; preds = %bb48
  %117 = getelementptr inbounds %struct.timespec* %tv, i64 0, i32 0, !dbg !8876
  store i64 0, i64* %117, align 8, !dbg !8876
  %118 = getelementptr inbounds %struct.timespec* %tv, i64 0, i32 1, !dbg !8876
  store i64 0, i64* %118, align 8, !dbg !8876
  %119 = call i64 (i64, ...)* @syscall(i64 23, i32 %os_nfds.1, %struct.__sigset_t* %os_read, %struct.__sigset_t* %os_write, %struct.__sigset_t* %os_except, %struct.timespec* %tv) nounwind, !dbg !8877
  %120 = trunc i64 %119 to i32, !dbg !8877
  %121 = icmp eq i32 %120, -1, !dbg !8878
  br i1 %121, label %bb50, label %bb52, !dbg !8878

bb50:                                             ; preds = %bb49
  %122 = icmp eq i32 %count.1, 0, !dbg !8879
  br i1 %122, label %bb51, label %bb68, !dbg !8879

bb51:                                             ; preds = %bb50
  %123 = call i32* @__errno_location() nounwind readnone, !dbg !8880
  %124 = call i32 @klee_get_errno() nounwind, !dbg !8880
  store i32 %124, i32* %123, align 4, !dbg !8880
  br label %bb68, !dbg !8881

bb52:                                             ; preds = %bb49
  %125 = add nsw i32 %120, %count.1, !dbg !8882
  %126 = icmp sgt i32 %nfds, 0, !dbg !8883
  br i1 %126, label %bb53.lr.ph, label %bb68, !dbg !8883

bb53.lr.ph:                                       ; preds = %bb52
  %tmp3 = zext i32 %nfds to i64
  br label %bb53

bb53:                                             ; preds = %bb65, %bb53.lr.ph
  %indvar = phi i64 [ 0, %bb53.lr.ph ], [ %indvar.next, %bb65 ]
  %scevgep82 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 3
  %scevgep81 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 0
  %i.177 = trunc i64 %indvar to i32
  %127 = icmp ult i32 %i.177, 32, !dbg !8884
  br i1 %127, label %bb.i71, label %bb65, !dbg !8884

bb.i71:                                           ; preds = %bb53
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar
  %scevgep83 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %128 = load i32* %scevgep83, align 4, !dbg !8886
  %129 = and i32 %128, 1
  %toBool.i70 = icmp eq i32 %129, 0, !dbg !8886
  %130 = icmp eq %struct.exe_file_t* %scevgep, null, !dbg !8887
  %or.cond93 = or i1 %toBool.i70, %130
  br i1 %or.cond93, label %bb65, label %bb55, !dbg !8886

bb55:                                             ; preds = %bb.i71
  %131 = load %struct.exe_disk_file_t** %scevgep82, align 8, !dbg !8887
  %132 = icmp eq %struct.exe_disk_file_t* %131, null, !dbg !8887
  br i1 %132, label %bb56, label %bb65, !dbg !8887

bb56:                                             ; preds = %bb55
  br i1 %0, label %bb59, label %bb57, !dbg !8888

bb57:                                             ; preds = %bb56
  %133 = load i32* %scevgep81, align 8, !dbg !8888
  %int_cast_to_i644 = zext i32 64 to i64
  %134 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %135 = icmp eq i64 %int_cast_to_i644, 0
  br i1 %135, label %bb.i27, label %klee_div_zero_check.exit28

bb.i27:                                           ; preds = %bb57
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit28:                       ; preds = %bb57
  call void @klee_disable_symbex() nounwind
  %136 = sdiv i32 %133, 64, !dbg !8888
  %137 = sext i32 %136 to i64, !dbg !8888
  %138 = getelementptr inbounds %struct.__sigset_t* %os_read, i64 0, i32 0, i64 %137, !dbg !8888
  %139 = load i64* %138, align 8, !dbg !8888
  %140 = and i32 %133, 63
  %int_cast_to_i6414 = zext i32 %140 to i64
  %141 = icmp ult i64 %int_cast_to_i6414, 32
  br i1 %141, label %klee_overshift_check.exit47, label %bb.i46

bb.i46:                                           ; preds = %klee_div_zero_check.exit28
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit47:                      ; preds = %klee_div_zero_check.exit28
  %142 = shl i32 1, %140, !dbg !8888
  %143 = sext i32 %142 to i64, !dbg !8888
  %144 = and i64 %143, %139, !dbg !8888
  %145 = icmp eq i64 %144, 0, !dbg !8888
  br i1 %145, label %bb59, label %bb58, !dbg !8888

bb58:                                             ; preds = %klee_overshift_check.exit47
  %int_cast_to_i645 = zext i32 64 to i64
  %146 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %147 = icmp eq i64 %int_cast_to_i645, 0
  br i1 %147, label %bb.i29, label %klee_div_zero_check.exit30

bb.i29:                                           ; preds = %bb58
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit30:                       ; preds = %bb58
  call void @klee_disable_symbex() nounwind
  %148 = sdiv i32 %i.177, 64, !dbg !8888
  %149 = sext i32 %148 to i64, !dbg !8888
  %150 = getelementptr inbounds %struct.__sigset_t* %read, i64 0, i32 0, i64 %149, !dbg !8888
  %151 = load i64* %150, align 8, !dbg !8888
  %152 = and i32 %i.177, 63
  %int_cast_to_i6415 = zext i32 %152 to i64
  %153 = icmp ult i64 %int_cast_to_i6415, 32
  br i1 %153, label %klee_overshift_check.exit49, label %bb.i48

bb.i48:                                           ; preds = %klee_div_zero_check.exit30
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit49:                      ; preds = %klee_div_zero_check.exit30
  %154 = shl i32 1, %152, !dbg !8888
  %155 = sext i32 %154 to i64, !dbg !8888
  %156 = or i64 %151, %155, !dbg !8888
  store i64 %156, i64* %150, align 8, !dbg !8888
  br label %bb59, !dbg !8888

bb59:                                             ; preds = %klee_overshift_check.exit49, %klee_overshift_check.exit47, %bb56
  br i1 %5, label %bb62, label %bb60, !dbg !8889

bb60:                                             ; preds = %bb59
  %157 = load i32* %scevgep81, align 8, !dbg !8889
  %int_cast_to_i646 = zext i32 64 to i64
  %158 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %159 = icmp eq i64 %int_cast_to_i646, 0
  br i1 %159, label %bb.i31, label %klee_div_zero_check.exit32

bb.i31:                                           ; preds = %bb60
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit32:                       ; preds = %bb60
  call void @klee_disable_symbex() nounwind
  %160 = sdiv i32 %157, 64, !dbg !8889
  %161 = sext i32 %160 to i64, !dbg !8889
  %162 = getelementptr inbounds %struct.__sigset_t* %os_write, i64 0, i32 0, i64 %161, !dbg !8889
  %163 = load i64* %162, align 8, !dbg !8889
  %164 = and i32 %157, 63
  %int_cast_to_i6416 = zext i32 %164 to i64
  %165 = icmp ult i64 %int_cast_to_i6416, 32
  br i1 %165, label %klee_overshift_check.exit51, label %bb.i50

bb.i50:                                           ; preds = %klee_div_zero_check.exit32
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit51:                      ; preds = %klee_div_zero_check.exit32
  %166 = shl i32 1, %164, !dbg !8889
  %167 = sext i32 %166 to i64, !dbg !8889
  %168 = and i64 %167, %163, !dbg !8889
  %169 = icmp eq i64 %168, 0, !dbg !8889
  br i1 %169, label %bb62, label %bb61, !dbg !8889

bb61:                                             ; preds = %klee_overshift_check.exit51
  %int_cast_to_i647 = zext i32 64 to i64
  %170 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %171 = icmp eq i64 %int_cast_to_i647, 0
  br i1 %171, label %bb.i33, label %klee_div_zero_check.exit34

bb.i33:                                           ; preds = %bb61
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit34:                       ; preds = %bb61
  call void @klee_disable_symbex() nounwind
  %172 = sdiv i32 %i.177, 64, !dbg !8889
  %173 = sext i32 %172 to i64, !dbg !8889
  %174 = getelementptr inbounds %struct.__sigset_t* %write, i64 0, i32 0, i64 %173, !dbg !8889
  %175 = load i64* %174, align 8, !dbg !8889
  %176 = and i32 %i.177, 63
  %int_cast_to_i6417 = zext i32 %176 to i64
  %177 = icmp ult i64 %int_cast_to_i6417, 32
  br i1 %177, label %klee_overshift_check.exit53, label %bb.i52

bb.i52:                                           ; preds = %klee_div_zero_check.exit34
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit53:                      ; preds = %klee_div_zero_check.exit34
  %178 = shl i32 1, %176, !dbg !8889
  %179 = sext i32 %178 to i64, !dbg !8889
  %180 = or i64 %175, %179, !dbg !8889
  store i64 %180, i64* %174, align 8, !dbg !8889
  br label %bb62, !dbg !8889

bb62:                                             ; preds = %klee_overshift_check.exit53, %klee_overshift_check.exit51, %bb59
  br i1 %10, label %bb65, label %bb63, !dbg !8890

bb63:                                             ; preds = %bb62
  %181 = load i32* %scevgep81, align 8, !dbg !8890
  %int_cast_to_i648 = zext i32 64 to i64
  %182 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %183 = icmp eq i64 %int_cast_to_i648, 0
  br i1 %183, label %bb.i35, label %klee_div_zero_check.exit36

bb.i35:                                           ; preds = %bb63
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit36:                       ; preds = %bb63
  call void @klee_disable_symbex() nounwind
  %184 = sdiv i32 %181, 64, !dbg !8890
  %185 = sext i32 %184 to i64, !dbg !8890
  %186 = getelementptr inbounds %struct.__sigset_t* %os_except, i64 0, i32 0, i64 %185, !dbg !8890
  %187 = load i64* %186, align 8, !dbg !8890
  %188 = and i32 %181, 63
  %int_cast_to_i6418 = zext i32 %188 to i64
  %189 = icmp ult i64 %int_cast_to_i6418, 32
  br i1 %189, label %klee_overshift_check.exit55, label %bb.i54

bb.i54:                                           ; preds = %klee_div_zero_check.exit36
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit55:                      ; preds = %klee_div_zero_check.exit36
  %190 = shl i32 1, %188, !dbg !8890
  %191 = sext i32 %190 to i64, !dbg !8890
  %192 = and i64 %191, %187, !dbg !8890
  %193 = icmp eq i64 %192, 0, !dbg !8890
  br i1 %193, label %bb65, label %bb64, !dbg !8890

bb64:                                             ; preds = %klee_overshift_check.exit55
  %int_cast_to_i649 = zext i32 64 to i64
  %194 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %195 = icmp eq i64 %int_cast_to_i649, 0
  br i1 %195, label %bb.i37, label %klee_div_zero_check.exit38

bb.i37:                                           ; preds = %bb64
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit38:                       ; preds = %bb64
  call void @klee_disable_symbex() nounwind
  %196 = sdiv i32 %i.177, 64, !dbg !8890
  %197 = sext i32 %196 to i64, !dbg !8890
  %198 = getelementptr inbounds %struct.__sigset_t* %except, i64 0, i32 0, i64 %197, !dbg !8890
  %199 = load i64* %198, align 8, !dbg !8890
  %200 = and i32 %i.177, 63
  %int_cast_to_i6419 = zext i32 %200 to i64
  %201 = icmp ult i64 %int_cast_to_i6419, 32
  br i1 %201, label %klee_overshift_check.exit57, label %bb.i56

bb.i56:                                           ; preds = %klee_div_zero_check.exit38
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit57:                      ; preds = %klee_div_zero_check.exit38
  %202 = shl i32 1, %200, !dbg !8890
  %203 = sext i32 %202 to i64, !dbg !8890
  %204 = or i64 %199, %203, !dbg !8890
  store i64 %204, i64* %198, align 8, !dbg !8890
  br label %bb65, !dbg !8890

bb65:                                             ; preds = %klee_overshift_check.exit57, %klee_overshift_check.exit55, %bb62, %bb55, %bb.i71, %bb53
  %indvar.next = add i64 %indvar, 1
  %exitcond4 = icmp eq i64 %indvar.next, %tmp3
  br i1 %exitcond4, label %bb68, label %bb53, !dbg !8883

bb68:                                             ; preds = %bb65, %bb52, %bb51, %bb50, %bb48, %bb22
  %.0 = phi i32 [ -1, %bb22 ], [ -1, %bb51 ], [ %count.1, %bb50 ], [ %count.1, %bb48 ], [ %125, %bb52 ], [ %125, %bb65 ]
  ret i32 %.0, !dbg !8860
}

define i32 @close(i32 %fd) nounwind {
entry:
  %0 = load i32* @n_calls.5871, align 4, !dbg !8891
  %1 = add nsw i32 %0, 1, !dbg !8891
  store i32 %1, i32* @n_calls.5871, align 4, !dbg !8891
  %2 = icmp ult i32 %fd, 32, !dbg !8892
  br i1 %2, label %bb.i, label %bb, !dbg !8892

bb.i:                                             ; preds = %entry
  %3 = sext i32 %fd to i64, !dbg !8894
  %4 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 1, !dbg !8895
  %5 = load i32* %4, align 4, !dbg !8895
  %6 = and i32 %5, 1
  %toBool.i = icmp eq i32 %6, 0, !dbg !8895
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8895

__get_file.exit:                                  ; preds = %bb.i
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, !dbg !8894
  %8 = icmp eq %struct.exe_file_t* %7, null, !dbg !8896
  br i1 %8, label %bb, label %bb1, !dbg !8896

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !8897
  store i32 9, i32* %9, align 4, !dbg !8897
  br label %bb9, !dbg !8898

bb1:                                              ; preds = %__get_file.exit
  %10 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !8899
  %11 = icmp eq i32 %10, 0, !dbg !8899
  br i1 %11, label %bb4, label %bb2, !dbg !8899

bb2:                                              ; preds = %bb1
  %12 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 17), align 8, !dbg !8899
  %13 = load i32* %12, align 4, !dbg !8899
  %14 = icmp eq i32 %13, %1, !dbg !8899
  br i1 %14, label %bb3, label %bb4, !dbg !8899

bb3:                                              ; preds = %bb2
  %15 = add i32 %10, -1, !dbg !8900
  store i32 %15, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !8900
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !8901
  store i32 5, i32* %16, align 4, !dbg !8901
  br label %bb9, !dbg !8902

bb4:                                              ; preds = %bb2, %bb1
  %17 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 3, !dbg !8903
  %18 = load %struct.exe_disk_file_t** %17, align 8, !dbg !8903
  %19 = icmp eq %struct.exe_disk_file_t* %18, null, !dbg !8903
  br i1 %19, label %bb5, label %bb8, !dbg !8903

bb5:                                              ; preds = %bb4
  %20 = and i32 %5, 16, !dbg !8903
  %21 = icmp eq i32 %20, 0, !dbg !8903
  br i1 %21, label %bb8, label %bb6, !dbg !8903

bb6:                                              ; preds = %bb5
  %22 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 0, !dbg !8904
  %23 = load i32* %22, align 8, !dbg !8904
  %24 = tail call i64 (i64, ...)* @syscall(i64 3, i32 %23) nounwind, !dbg !8904
  %25 = trunc i64 %24 to i32, !dbg !8904
  br label %bb8, !dbg !8904

bb8:                                              ; preds = %bb6, %bb5, %bb4
  %r.0 = phi i32 [ %25, %bb6 ], [ 0, %bb4 ], [ 0, %bb5 ]
  %26 = bitcast %struct.exe_file_t* %7 to i8*, !dbg !8905
  %27 = call i8* @memset(i8* %26, i32 0, i64 56)
  br label %bb9, !dbg !8906

bb9:                                              ; preds = %bb8, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ %r.0, %bb8 ]
  ret i32 %.0, !dbg !8898
}

define i32 @dup2(i32 %oldfd, i32 %newfd) nounwind {
entry:
  %0 = icmp ult i32 %oldfd, 32, !dbg !8907
  br i1 %0, label %bb.i, label %bb, !dbg !8907

bb.i:                                             ; preds = %entry
  %1 = sext i32 %oldfd to i64, !dbg !8909
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8910
  %3 = load i32* %2, align 4, !dbg !8910
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8910
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8910

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8909
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8911
  %7 = icmp ugt i32 %newfd, 31, !dbg !8911
  %8 = or i1 %6, %7, !dbg !8911
  br i1 %8, label %bb, label %bb10, !dbg !8911

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !8912
  store i32 9, i32* %9, align 4, !dbg !8912
  br label %bb17, !dbg !8913

bb4:                                              ; preds = %bb10
  %scevgep1920 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 0
  %10 = load i32* %scevgep1920, align 8, !dbg !8914
  %11 = icmp eq i32 %10, %newfd, !dbg !8914
  br i1 %11, label %bb11, label %bb6, !dbg !8914

bb6:                                              ; preds = %bb4
  %12 = icmp eq i32 %idx.1, -1, !dbg !8915
  br i1 %12, label %bb7, label %bb9, !dbg !8915

bb7:                                              ; preds = %bb6
  %13 = load i32* %scevgep, align 4, !dbg !8915
  %14 = and i32 %13, 1, !dbg !8915
  %15 = icmp eq i32 %14, 0, !dbg !8915
  br i1 %15, label %bb8, label %bb9, !dbg !8915

bb8:                                              ; preds = %bb7
  br label %bb9, !dbg !8916

bb9:                                              ; preds = %bb8, %bb7, %bb6
  %idx.0 = phi i32 [ %i.0, %bb8 ], [ -1, %bb7 ], [ %idx.1, %bb6 ]
  %indvar.next = add i64 %indvar, 1
  br label %bb10, !dbg !8917

bb10:                                             ; preds = %bb9, %__get_file.exit
  %indvar = phi i64 [ %indvar.next, %bb9 ], [ 0, %__get_file.exit ]
  %idx.1 = phi i32 [ %idx.0, %bb9 ], [ -1, %__get_file.exit ]
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %i.0 = trunc i64 %indvar to i32
  %16 = icmp slt i32 %i.0, 32, !dbg !8917
  br i1 %16, label %bb4, label %bb11, !dbg !8917

bb11:                                             ; preds = %bb10, %bb4
  %idx.2 = phi i32 [ %idx.1, %bb10 ], [ %i.0, %bb4 ]
  %17 = icmp eq i32 %idx.2, -1, !dbg !8918
  br i1 %17, label %bb12, label %bb13, !dbg !8918

bb12:                                             ; preds = %bb11
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !8919
  store i32 24, i32* %18, align 4, !dbg !8919
  br label %bb17, !dbg !8920

bb13:                                             ; preds = %bb11
  %19 = sext i32 %idx.2 to i64, !dbg !8921
  %20 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %19, !dbg !8921
  %21 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %19, i32 1, !dbg !8922
  %22 = load i32* %21, align 4, !dbg !8922
  %23 = and i32 %22, 1
  %toBool14 = icmp eq i32 %23, 0, !dbg !8922
  br i1 %toBool14, label %bb16, label %bb15, !dbg !8922

bb15:                                             ; preds = %bb13
  %24 = tail call i32 @close(i32 %newfd) nounwind, !dbg !8922
  br label %bb16, !dbg !8922

bb16:                                             ; preds = %bb15, %bb13
  %25 = bitcast %struct.exe_file_t* %20 to i8*, !dbg !8923
  %26 = bitcast %struct.exe_file_t* %5 to i8*, !dbg !8923
  %27 = call i8* @memcpy(i8* %25, i8* %26, i64 56)
  %28 = load i32* %21, align 4, !dbg !8924
  %29 = and i32 %28, -3, !dbg !8924
  store i32 %29, i32* %21, align 4, !dbg !8924
  br label %bb17, !dbg !8925

bb17:                                             ; preds = %bb16, %bb12, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb12 ], [ %newfd, %bb16 ]
  ret i32 %.0, !dbg !8913
}

define i32 @dup(i32 %oldfd) nounwind {
entry:
  %0 = icmp ult i32 %oldfd, 32, !dbg !8926
  br i1 %0, label %bb.i, label %bb, !dbg !8926

bb.i:                                             ; preds = %entry
  %1 = sext i32 %oldfd to i64, !dbg !8928
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8929
  %3 = load i32* %2, align 4, !dbg !8929
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8929
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8929

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8928
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8930
  br i1 %6, label %bb, label %bb4, !dbg !8930

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8931
  store i32 9, i32* %7, align 4, !dbg !8931
  br label %bb8, !dbg !8932

bb2:                                              ; preds = %bb4
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %8 = load i32* %scevgep, align 4, !dbg !8933
  %9 = and i32 %8, 1, !dbg !8933
  %10 = icmp eq i32 %9, 0, !dbg !8933
  br i1 %10, label %bb7, label %bb3, !dbg !8933

bb3:                                              ; preds = %bb2
  %indvar.next = add i64 %indvar, 1
  br label %bb4, !dbg !8934

bb4:                                              ; preds = %bb3, %__get_file.exit
  %indvar = phi i64 [ %indvar.next, %bb3 ], [ 0, %__get_file.exit ]
  %fd.0 = trunc i64 %indvar to i32
  %11 = icmp slt i32 %fd.0, 32, !dbg !8934
  br i1 %11, label %bb2, label %bb5, !dbg !8934

bb5:                                              ; preds = %bb4
  %12 = icmp eq i32 %fd.0, 32, !dbg !8935
  br i1 %12, label %bb6, label %bb7, !dbg !8935

bb6:                                              ; preds = %bb5
  %13 = tail call i32* @__errno_location() nounwind readnone, !dbg !8936
  store i32 24, i32* %13, align 4, !dbg !8936
  br label %bb8, !dbg !8937

bb7:                                              ; preds = %bb5, %bb2
  %14 = tail call i32 @dup2(i32 %oldfd, i32 %fd.0) nounwind, !dbg !8938
  br label %bb8, !dbg !8938

bb8:                                              ; preds = %bb7, %bb6, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb6 ], [ %14, %bb7 ]
  ret i32 %.0, !dbg !8932
}

define i32 @__fd_getdents(i32 %fd, %struct.dirent* %dirp, i32 %count) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8939
  br i1 %0, label %bb.i, label %bb, !dbg !8939

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8941
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8942
  %3 = load i32* %2, align 4, !dbg !8942
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8942
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8942

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8941
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8943
  br i1 %6, label %bb, label %bb1, !dbg !8943

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8944
  store i32 9, i32* %7, align 4, !dbg !8944
  br label %bb19, !dbg !8945

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8946
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8946
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8946
  br i1 %10, label %bb3, label %bb2, !dbg !8946

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([52 x i8]* @.str14340, i64 0, i64 0)) nounwind, !dbg !8947
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !8948
  store i32 22, i32* %11, align 4, !dbg !8948
  br label %bb19, !dbg !8949

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 2, !dbg !8950
  %13 = load i64* %12, align 8, !dbg !8950
  %14 = icmp ult i64 %13, 4096, !dbg !8950
  br i1 %14, label %bb4, label %bb11, !dbg !8950

bb4:                                              ; preds = %bb3
  %int_cast_to_i64 = bitcast i64 280 to i64
  %15 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %16 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %16, label %bb.i2, label %klee_div_zero_check.exit

bb.i2:                                            ; preds = %bb4
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb4
  call void @klee_disable_symbex() nounwind
  %17 = udiv i64 %13, 280, !dbg !8951
  %18 = mul i64 %17, 280, !dbg !8952
  %19 = icmp eq i64 %18, %13, !dbg !8952
  br i1 %19, label %bb5, label %bb6, !dbg !8952

bb5:                                              ; preds = %klee_div_zero_check.exit
  %20 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 0), align 8, !dbg !8952
  %21 = zext i32 %20 to i64, !dbg !8952
  %22 = icmp ult i64 %21, %17, !dbg !8952
  br i1 %22, label %bb6, label %bb8.preheader, !dbg !8952

bb8.preheader:                                    ; preds = %bb5
  %23 = icmp ugt i64 %21, %17, !dbg !8953
  br i1 %23, label %bb7.lr.ph, label %bb9, !dbg !8953

bb7.lr.ph:                                        ; preds = %bb8.preheader
  %tmp1 = add i64 %17, 1
  %tmp5 = add i64 %18, 280
  %tmp8 = add i64 %17, 65
  br label %bb7

bb6:                                              ; preds = %bb5, %klee_div_zero_check.exit
  %24 = tail call i32* @__errno_location() nounwind readnone, !dbg !8954
  store i32 22, i32* %24, align 4, !dbg !8954
  br label %bb19, !dbg !8955

bb7:                                              ; preds = %klee_overshift_check.exit, %bb7.lr.ph
  %indvar = phi i64 [ 0, %bb7.lr.ph ], [ %38, %klee_overshift_check.exit ]
  %tmp51 = add i64 %tmp1, %indvar
  %tmp3 = mul i64 %indvar, 280
  %tmp49 = add i64 %tmp5, %tmp3
  %tmp7 = add i64 %17, %indvar
  %tmp9 = add i64 %tmp8, %indvar
  %tmp42 = trunc i64 %tmp9 to i8
  %scevgep36 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 4, i64 1
  %scevgep35 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 4, i64 0
  %scevgep32 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 1
  %scevgep31 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 3
  %scevgep30 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 2
  %scevgep29 = getelementptr inbounds %struct.dirent* %dirp, i64 %indvar, i32 0
  %25 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 6), align 8, !dbg !8956
  %scevgep = getelementptr %struct.exe_disk_file_t* %25, i64 %tmp7, i32 3
  %26 = load %struct.stat** %scevgep, align 8, !dbg !8957
  %27 = getelementptr inbounds %struct.stat* %26, i64 0, i32 1, !dbg !8957
  %28 = load i64* %27, align 8, !dbg !8957
  store i64 %28, i64* %scevgep29, align 8, !dbg !8957
  store i16 280, i16* %scevgep30, align 8, !dbg !8958
  %29 = load %struct.stat** %scevgep, align 8, !dbg !8959
  %30 = getelementptr inbounds %struct.stat* %29, i64 0, i32 3, !dbg !8959
  %31 = load i32* %30, align 8, !dbg !8959
  %int_cast_to_i641 = zext i32 12 to i64
  %32 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %32, label %klee_overshift_check.exit, label %bb.i3

bb.i3:                                            ; preds = %bb7
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb7
  %33 = lshr i32 %31, 12
  %.tr = trunc i32 %33 to i8
  %34 = and i8 %.tr, 15, !dbg !8959
  store i8 %34, i8* %scevgep31, align 2, !dbg !8959
  store i8 %tmp42, i8* %scevgep35, align 1, !dbg !8960
  store i8 0, i8* %scevgep36, align 1, !dbg !8961
  store i64 %tmp49, i64* %scevgep32, align 8, !dbg !8962
  %35 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 0), align 8, !dbg !8953
  %36 = zext i32 %35 to i64, !dbg !8953
  %37 = icmp sgt i64 %36, %tmp51, !dbg !8953
  %38 = add i64 %indvar, 1
  br i1 %37, label %bb7, label %bb8.bb9_crit_edge, !dbg !8953

bb8.bb9_crit_edge:                                ; preds = %klee_overshift_check.exit
  %tmp18 = add i64 %tmp3, 280
  %scevgep34 = getelementptr %struct.dirent* %dirp, i64 %38
  br label %bb9

bb9:                                              ; preds = %bb8.bb9_crit_edge, %bb8.preheader
  %dirp_addr.0.lcssa = phi %struct.dirent* [ %scevgep34, %bb8.bb9_crit_edge ], [ %dirp, %bb8.preheader ]
  %bytes.0.lcssa = phi i64 [ %tmp18, %bb8.bb9_crit_edge ], [ 0, %bb8.preheader ]
  %39 = icmp ugt i32 %count, 4096, !dbg !8963
  %40 = zext i32 %count to i64
  %41 = select i1 %39, i64 4096, i64 %40, !dbg !8963
  %42 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 0, !dbg !8964
  store i64 0, i64* %42, align 8, !dbg !8964
  %43 = trunc i64 %41 to i16, !dbg !8965
  %44 = trunc i64 %bytes.0.lcssa to i16, !dbg !8965
  %45 = sub i16 %43, %44, !dbg !8965
  %46 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 2, !dbg !8965
  store i16 %45, i16* %46, align 8, !dbg !8965
  %47 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 3, !dbg !8966
  store i8 0, i8* %47, align 2, !dbg !8966
  %48 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 4, i64 0, !dbg !8967
  store i8 0, i8* %48, align 1, !dbg !8967
  %49 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 1, !dbg !8968
  store i64 4096, i64* %49, align 8, !dbg !8968
  %50 = zext i16 %45 to i64, !dbg !8969
  %51 = add nsw i64 %50, %bytes.0.lcssa, !dbg !8969
  store i64 %41, i64* %12, align 8, !dbg !8970
  %52 = trunc i64 %51 to i32, !dbg !8971
  br label %bb19, !dbg !8971

bb11:                                             ; preds = %bb3
  %53 = trunc i64 %13 to i32, !dbg !8972
  %54 = add i32 %53, -4096, !dbg !8972
  %55 = zext i32 %count to i64, !dbg !8973
  %56 = bitcast %struct.dirent* %dirp to i8*, !dbg !8973
  %57 = call i8* @memset(i8* %56, i32 0, i64 %55)
  %58 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8974
  %59 = load i32* %58, align 8, !dbg !8974
  %60 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %59, i32 %54, i32 0) nounwind, !dbg !8974
  %61 = trunc i64 %60 to i32, !dbg !8974
  %62 = icmp eq i32 %61, -1, !dbg !8975
  br i1 %62, label %bb12, label %bb13, !dbg !8975

bb12:                                             ; preds = %bb11
  tail call void @__assert_fail(i8* getelementptr inbounds ([18 x i8]* @.str15341, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16342, i64 0, i64 0), i32 1436, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.6593, i64 0, i64 0)) 
  unreachable, !dbg !8975

bb13:                                             ; preds = %bb11
  %63 = load i32* %58, align 8, !dbg !8976
  %64 = tail call i64 (i64, ...)* @syscall(i64 217, i32 %63, %struct.dirent* %dirp, i32 %count) nounwind, !dbg !8976
  %65 = trunc i64 %64 to i32, !dbg !8976
  %66 = icmp eq i32 %65, -1, !dbg !8977
  br i1 %66, label %bb14, label %bb15, !dbg !8977

bb14:                                             ; preds = %bb13
  %67 = tail call i32* @__errno_location() nounwind readnone, !dbg !8978
  %68 = tail call i32 @klee_get_errno() nounwind, !dbg !8978
  store i32 %68, i32* %67, align 4, !dbg !8978
  br label %bb19, !dbg !8978

bb15:                                             ; preds = %bb13
  %69 = load i32* %58, align 8, !dbg !8979
  %70 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %69, i32 0, i32 1) nounwind, !dbg !8979
  %71 = add nsw i64 %70, 4096, !dbg !8979
  store i64 %71, i64* %12, align 8, !dbg !8979
  %72 = icmp sgt i32 %65, 0, !dbg !8980
  br i1 %72, label %bb16, label %bb19, !dbg !8980

bb16:                                             ; preds = %bb16, %bb15
  %pos.023 = phi i32 [ %82, %bb16 ], [ 0, %bb15 ]
  %73 = sext i32 %pos.023 to i64, !dbg !8981
  %.sum = add i64 %73, 8
  %74 = getelementptr inbounds i8* %56, i64 %.sum
  %75 = bitcast i8* %74 to i64*, !dbg !8982
  %76 = load i64* %75, align 8, !dbg !8982
  %77 = add nsw i64 %76, 4096, !dbg !8982
  store i64 %77, i64* %75, align 8, !dbg !8982
  %.sum22 = add i64 %73, 16
  %78 = getelementptr inbounds i8* %56, i64 %.sum22
  %79 = bitcast i8* %78 to i16*, !dbg !8983
  %80 = load i16* %79, align 8, !dbg !8983
  %81 = zext i16 %80 to i32, !dbg !8983
  %82 = add nsw i32 %81, %pos.023, !dbg !8983
  %83 = icmp slt i32 %82, %65, !dbg !8980
  br i1 %83, label %bb16, label %bb19, !dbg !8980

bb19:                                             ; preds = %bb16, %bb15, %bb14, %bb9, %bb6, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb6 ], [ %52, %bb9 ], [ -1, %bb14 ], [ %65, %bb15 ], [ %65, %bb16 ]
  ret i32 %.0, !dbg !8945
}

define i64 @__fd_gather_write(%struct.exe_file_t* nocapture %f, %struct.iovec* %iov, i32 %iovcnt) nounwind {
entry:
  %0 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 3, !dbg !8984
  %1 = load %struct.exe_disk_file_t** %0, align 8, !dbg !8984
  %2 = icmp eq %struct.exe_disk_file_t* %1, null, !dbg !8984
  br i1 %2, label %bb16, label %bb14.preheader, !dbg !8984

bb14.preheader:                                   ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 2, !dbg !8985
  %tmp4 = zext i32 %iovcnt to i64
  br label %bb14

bb:                                               ; preds = %bb14
  %4 = load i64* %scevgep28, align 8, !dbg !8986
  %5 = load %struct.exe_disk_file_t** %0, align 8, !dbg !8987
  %6 = getelementptr inbounds %struct.exe_disk_file_t* %5, i64 0, i32 4, !dbg !8987
  %7 = load %struct.exe_sockaddr_t** %6, align 8, !dbg !8987
  %8 = icmp eq %struct.exe_sockaddr_t* %7, null, !dbg !8987
  br i1 %8, label %bb2, label %bb1, !dbg !8987

bb1:                                              ; preds = %bb
  %9 = load i8** %scevgep27, align 8, !dbg !8988
  tail call void @klee_check_memory_access(i8* %9, i64 %4) nounwind, !dbg !8988
  br label %skip, !dbg !8988

bb2:                                              ; preds = %bb
  %10 = load i64* %3, align 8, !dbg !8985
  %11 = add i64 %10, %4, !dbg !8985
  %12 = getelementptr inbounds %struct.exe_disk_file_t* %5, i64 0, i32 0, !dbg !8985
  %13 = load i32* %12, align 8, !dbg !8985
  %14 = zext i32 %13 to i64, !dbg !8985
  %15 = icmp ugt i64 %11, %14, !dbg !8985
  br i1 %15, label %bb3, label %bb8, !dbg !8985

bb3:                                              ; preds = %bb2
  %16 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 3), align 8, !dbg !8989
  %17 = icmp eq i32 %16, 0, !dbg !8989
  br i1 %17, label %bb5, label %bb4, !dbg !8989

bb4:                                              ; preds = %bb3
  tail call void @__assert_fail(i8* getelementptr inbounds ([2 x i8]* @.str17343, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16342, i64 0, i64 0), i32 2246, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7291, i64 0, i64 0)) n
  unreachable, !dbg !8990

bb5:                                              ; preds = %bb3
  %18 = icmp slt i64 %10, %14, !dbg !8991
  br i1 %18, label %bb6, label %bb10, !dbg !8991

bb6:                                              ; preds = %bb5
  %19 = sub nsw i64 %14, %10, !dbg !8992
  br label %bb8, !dbg !8992

bb8:                                              ; preds = %bb6, %bb2
  %this_len.0 = phi i64 [ %19, %bb6 ], [ %4, %bb2 ]
  %20 = icmp eq i64 %this_len.0, 0, !dbg !8993
  br i1 %20, label %bb10, label %bb9, !dbg !8993

bb9:                                              ; preds = %bb8
  %21 = load i8** %scevgep27, align 8, !dbg !8994
  %22 = getelementptr inbounds %struct.exe_disk_file_t* %5, i64 0, i32 1, !dbg !8994
  %23 = load i8** %22, align 8, !dbg !8994
  %24 = getelementptr inbounds i8* %23, i64 %10, !dbg !8994
  %25 = call i8* @memcpy(i8* %24, i8* %21, i64 %this_len.0)
  %.pre = load i64* %scevgep28, align 8
  br label %bb10, !dbg !8994

bb10:                                             ; preds = %bb9, %bb8, %bb5
  %26 = phi i64 [ %4, %bb8 ], [ %.pre, %bb9 ], [ %4, %bb5 ]
  %this_len.021 = phi i64 [ 0, %bb8 ], [ %this_len.0, %bb9 ], [ 0, %bb5 ]
  %27 = icmp eq i64 %26, %this_len.021, !dbg !8995
  br i1 %27, label %bb12, label %bb11, !dbg !8995

bb11:                                             ; preds = %bb10
  tail call void @klee_warning_once(i8* getelementptr inbounds ([23 x i8]* @.str18344, i64 0, i64 0)) nounwind, !dbg !8996
  br label %bb12, !dbg !8996

bb12:                                             ; preds = %bb11, %bb10
  %28 = load %struct.exe_disk_file_t** %0, align 8, !dbg !8997
  %29 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !8997
  %30 = icmp eq %struct.exe_disk_file_t* %28, %29, !dbg !8997
  br i1 %30, label %bb13, label %skip, !dbg !8997

bb13:                                             ; preds = %bb12
  %31 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 8, !dbg !8998
  %32 = trunc i64 %this_len.021 to i32, !dbg !8998
  %33 = add i32 %31, %32, !dbg !8998
  store i32 %33, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 8, !dbg !8998
  br label %skip, !dbg !8999

skip:                                             ; preds = %bb13, %bb12, %bb1
  %34 = load i64* %scevgep28, align 8, !dbg !9000
  %35 = add i64 %34, %total.0, !dbg !9000
  %36 = load i64* %3, align 8, !dbg !9001
  %37 = add i64 %36, %34, !dbg !9001
  store i64 %37, i64* %3, align 8, !dbg !9001
  %indvar.next = add i64 %indvar, 1
  br label %bb14, !dbg !9002

bb14:                                             ; preds = %skip, %bb14.preheader
  %indvar = phi i64 [ 0, %bb14.preheader ], [ %indvar.next, %skip ]
  %total.0 = phi i64 [ 0, %bb14.preheader ], [ %35, %skip ]
  %scevgep28 = getelementptr %struct.iovec* %iov, i64 %indvar, i32 1
  %scevgep27 = getelementptr inbounds %struct.iovec* %iov, i64 %indvar, i32 0
  %tmp5 = sub i64 %tmp4, %indvar
  %iovcnt_addr.0 = trunc i64 %tmp5 to i32
  %38 = icmp sgt i32 %iovcnt_addr.0, 0, !dbg !9002
  br i1 %38, label %bb, label %bb19, !dbg !9002

bb16:                                             ; preds = %entry
  %39 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 0, !dbg !9003
  %40 = load i32* %39, align 8, !dbg !9003
  %41 = tail call i64 (i64, ...)* @syscall(i64 20, i32 %40, %struct.iovec* %iov, i32 %iovcnt) nounwind, !dbg !9003
  %42 = trunc i64 %41 to i32, !dbg !9003
  %43 = icmp slt i32 %42, 0, !dbg !9004
  br i1 %43, label %bb17, label %bb18, !dbg !9004

bb17:                                             ; preds = %bb16
  %44 = tail call i32* @__errno_location() nounwind readnone, !dbg !9005
  %45 = tail call i32 @klee_get_errno() nounwind, !dbg !9005
  store i32 %45, i32* %44, align 4, !dbg !9005
  br label %bb18, !dbg !9005

bb18:                                             ; preds = %bb17, %bb16
  %46 = sext i32 %42 to i64, !dbg !9006
  br label %bb19, !dbg !9006

bb19:                                             ; preds = %bb18, %bb14
  %.0 = phi i64 [ %46, %bb18 ], [ %total.0, %bb14 ]
  ret i64 %.0, !dbg !9007
}

declare void @klee_check_memory_access(i8*, i64)

define i64 @writev(i32 %fd, %struct.iovec* %iov, i32 %iovcnt) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !9008
  br i1 %0, label %bb.i, label %bb, !dbg !9008

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !9010
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !9011
  %3 = load i32* %2, align 4, !dbg !9011
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !9011
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !9011

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !9010
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !9012
  br i1 %6, label %bb, label %bb1, !dbg !9012

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !9013
  store i32 9, i32* %7, align 4, !dbg !9013
  br label %bb6, !dbg !9014

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !9015
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !9015
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !9015
  br i1 %10, label %bb2, label %bb5, !dbg !9015

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !9016
  %12 = load i32* %11, align 8, !dbg !9016
  %13 = tail call i64 (i64, ...)* @syscall(i64 20, i32 %12, %struct.iovec* %iov, i32 %iovcnt) nounwind, !dbg !9016
  %14 = trunc i64 %13 to i32, !dbg !9016
  %15 = icmp eq i32 %14, -1, !dbg !9017
  br i1 %15, label %bb3, label %bb4, !dbg !9017

bb3:                                              ; preds = %bb2
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !9018
  %17 = tail call i32 @klee_get_errno() nounwind, !dbg !9018
  store i32 %17, i32* %16, align 4, !dbg !9018
  br label %bb6, !dbg !9019

bb4:                                              ; preds = %bb2
  %18 = sext i32 %14 to i64, !dbg !9020
  br label %bb6, !dbg !9020

bb5:                                              ; preds = %bb1
  %19 = tail call i64 @__fd_gather_write(%struct.exe_file_t* %5, %struct.iovec* %iov, i32 %iovcnt) nounwind, !dbg !9021
  br label %bb6, !dbg !9021

bb6:                                              ; preds = %bb5, %bb4, %bb3, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb3 ], [ %18, %bb4 ], [ %19, %bb5 ]
  ret i64 %.0, !dbg !9014
}

define i32 @__fd_fstat(i32 %fd, %struct.stat* %buf) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !9022
  br i1 %0, label %bb.i, label %bb, !dbg !9022

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !9024
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !9025
  %3 = load i32* %2, align 4, !dbg !9025
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !9025
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !9025

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !9024
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !9026
  br i1 %6, label %bb, label %bb1, !dbg !9026

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !9027
  store i32 9, i32* %7, align 4, !dbg !9027
  br label %bb6, !dbg !9028

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !9029
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !9029
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !9029
  br i1 %10, label %bb2, label %bb5, !dbg !9029

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !9030
  %12 = load i32* %11, align 8, !dbg !9030
  %13 = tail call i64 (i64, ...)* @syscall(i64 5, i32 %12, %struct.stat* %buf) nounwind, !dbg !9030
  %14 = trunc i64 %13 to i32, !dbg !9030
  %15 = icmp eq i32 %14, -1, !dbg !9031
  br i1 %15, label %bb3, label %bb6, !dbg !9031

bb3:                                              ; preds = %bb2
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !9032
  %17 = tail call i32 @klee_get_errno() nounwind, !dbg !9032
  store i32 %17, i32* %16, align 4, !dbg !9032
  br label %bb6, !dbg !9032

bb5:                                              ; preds = %bb1
  %18 = getelementptr inbounds %struct.exe_disk_file_t* %9, i64 0, i32 3, !dbg !9033
  %19 = load %struct.stat** %18, align 8, !dbg !9033
  %20 = bitcast %struct.stat* %buf to i8*, !dbg !9033
  %21 = bitcast %struct.stat* %19 to i8*, !dbg !9033
  %22 = call i8* @memcpy(i8* %20, i8* %21, i64 144)
  br label %bb6, !dbg !9034

bb6:                                              ; preds = %bb5, %bb3, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ 0, %bb5 ], [ -1, %bb3 ], [ %14, %bb2 ]
  ret i32 %.0, !dbg !9028
}

define i64 @__fd_scatter_read(%struct.exe_file_t* nocapture %f, %struct.iovec* %iov, i32 %iovcnt) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([57 x i8]* @.str19345, i64 0, i64 0)) nounwind, !dbg !9035
  %0 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 3, !dbg !9036
  %1 = load %struct.exe_disk_file_t** %0, align 8, !dbg !9036
  %2 = icmp eq %struct.exe_disk_file_t* %1, null, !dbg !9036
  br i1 %2, label %bb9, label %bb, !dbg !9036

bb:                                               ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 2, !dbg !9037
  %4 = load i64* %3, align 8, !dbg !9037
  %5 = icmp slt i64 %4, 0, !dbg !9037
  br i1 %5, label %bb1, label %bb2, !dbg !9037

bb1:                                              ; preds = %bb
  tail call void @__assert_fail(i8* getelementptr inbounds ([12 x i8]* @.str20346, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16342, i64 0, i64 0), i32 2186, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7229, i64 0, i64 0)) 
  unreachable, !dbg !9037

bb2:                                              ; preds = %bb
  %6 = getelementptr inbounds %struct.exe_disk_file_t* %1, i64 0, i32 0, !dbg !9038
  %7 = load i32* %6, align 8, !dbg !9038
  %8 = zext i32 %7 to i64, !dbg !9038
  %9 = icmp sge i64 %8, %4, !dbg !9038
  %10 = icmp sgt i32 %iovcnt, 0, !dbg !9039
  %or.cond = and i1 %9, %10
  br i1 %or.cond, label %bb4.lr.ph, label %bb22, !dbg !9038

bb4.lr.ph:                                        ; preds = %bb2
  %tmp2 = zext i32 %iovcnt to i64
  %tmp3 = add i64 %tmp2, -1
  br label %bb4

bb4:                                              ; preds = %bb4.bb4_crit_edge, %bb4.lr.ph
  %11 = phi i32 [ %7, %bb4.lr.ph ], [ %.pre36, %bb4.bb4_crit_edge ]
  %12 = phi %struct.exe_disk_file_t* [ %1, %bb4.lr.ph ], [ %.pre, %bb4.bb4_crit_edge ]
  %13 = phi i64 [ %4, %bb4.lr.ph ], [ %26, %bb4.bb4_crit_edge ]
  %indvar = phi i64 [ 0, %bb4.lr.ph ], [ %indvar.next, %bb4.bb4_crit_edge ]
  %total.025 = phi i64 [ 0, %bb4.lr.ph ], [ %24, %bb4.bb4_crit_edge ]
  %scevgep2930 = getelementptr inbounds %struct.iovec* %iov, i64 %indvar, i32 0
  %scevgep = getelementptr %struct.iovec* %iov, i64 %indvar, i32 1
  %14 = load i64* %scevgep, align 8, !dbg !9040
  %15 = add i64 %14, %13, !dbg !9041
  %16 = zext i32 %11 to i64, !dbg !9041
  %17 = sub nsw i64 %16, %13, !dbg !9042
  %18 = icmp ugt i64 %15, %16, !dbg !9041
  %. = select i1 %18, i64 %17, i64 %14
  %19 = getelementptr inbounds %struct.exe_disk_file_t* %12, i64 0, i32 1, !dbg !9043
  %20 = load i8** %19, align 8, !dbg !9043
  %21 = getelementptr inbounds i8* %20, i64 %13, !dbg !9043
  %22 = load i8** %scevgep2930, align 8, !dbg !9043
  %23 = call i8* @memcpy(i8* %22, i8* %21, i64 %.)
  %24 = add i64 %., %total.025, !dbg !9044
  %25 = load i64* %3, align 8, !dbg !9045
  %26 = add i64 %25, %., !dbg !9045
  store i64 %26, i64* %3, align 8, !dbg !9045
  %exitcond4 = icmp eq i64 %indvar, %tmp3
  br i1 %exitcond4, label %bb22, label %bb4.bb4_crit_edge, !dbg !9039

bb4.bb4_crit_edge:                                ; preds = %bb4
  %indvar.next = add i64 %indvar, 1
  %.pre = load %struct.exe_disk_file_t** %0, align 8
  %.phi.trans.insert = getelementptr inbounds %struct.exe_disk_file_t* %.pre, i64 0, i32 0
  %.pre36 = load i32* %.phi.trans.insert, align 8
  br label %bb4

bb9:                                              ; preds = %entry
  %27 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 0, !dbg !9046
  %28 = load i32* %27, align 8, !dbg !9046
  %29 = tail call i64 (i64, ...)* @syscall(i64 19, i32 %28, %struct.iovec* %iov, i32 %iovcnt) nounwind, !dbg !9046
  %30 = icmp slt i64 %29, 0, !dbg !9047
  br i1 %30, label %bb10, label %bb11, !dbg !9047

bb10:                                             ; preds = %bb9
  %31 = tail call i32* @__errno_location() nounwind readnone, !dbg !9048
  %32 = tail call i32 @klee_get_errno() nounwind, !dbg !9048
  store i32 %32, i32* %31, align 4, !dbg !9048
  br label %bb22, !dbg !9048

bb11:                                             ; preds = %bb9
  %33 = tail call i32 @klee_zest_enabled() nounwind, !dbg !9049
  %34 = icmp eq i32 %33, 0, !dbg !9049
  br i1 %34, label %bb22, label %bb20, !dbg !9049

bb14:                                             ; preds = %bb20
  %scevgep35 = getelementptr %struct.iovec* %iov, i64 %indvar31, i32 1
  %35 = load i64* %scevgep35, align 8, !dbg !9050
  %36 = icmp ugt i64 %cb.1, %35, !dbg !9050
  %this_len13.0 = select i1 %36, i64 %35, i64 %cb.1
  %37 = tail call noalias i8* @malloc(i64 %this_len13.0) nounwind, !dbg !9051
  %38 = icmp eq i8* %37, null, !dbg !9052
  br i1 %38, label %bb18, label %bb19, !dbg !9052

bb18:                                             ; preds = %bb14
  tail call void @__assert_fail(i8* getelementptr inbounds ([33 x i8]* @.str21347, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16342, i64 0, i64 0), i32 2218, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7229, i64 0, i64 0)) 
  unreachable, !dbg !9053

bb19:                                             ; preds = %bb14
  %39 = sub i64 %cb.1, %35, !dbg !9054
  %.24 = select i1 %36, i64 %39, i64 0
  %40 = load i8** %scevgep3334, align 8, !dbg !9055
  %41 = call i8* @memcpy(i8* %37, i8* %40, i64 %this_len13.0)
  tail call void @klee_make_symbolic(i8* %37, i64 %this_len13.0, i8* getelementptr inbounds ([11 x i8]* @.str22348, i64 0, i64 0)) nounwind, !dbg !9056
  %42 = load i8** %scevgep3334, align 8, !dbg !9057
  %43 = call i8* @memcpy(i8* %42, i8* %37, i64 %this_len13.0)
  tail call void @free(i8* %37) nounwind, !dbg !9058
  %indvar.next32 = add i64 %indvar31, 1
  br label %bb20, !dbg !9059

bb20:                                             ; preds = %bb19, %bb11
  %indvar31 = phi i64 [ %indvar.next32, %bb19 ], [ 0, %bb11 ]
  %cb.1 = phi i64 [ %.24, %bb19 ], [ %29, %bb11 ]
  %scevgep3334 = getelementptr inbounds %struct.iovec* %iov, i64 %indvar31, i32 0
  %44 = icmp eq i64 %cb.1, 0, !dbg !9060
  br i1 %44, label %bb22, label %bb14, !dbg !9060

bb22:                                             ; preds = %bb20, %bb11, %bb10, %bb4, %bb2
  %.0 = phi i64 [ 0, %bb2 ], [ %29, %bb11 ], [ %29, %bb10 ], [ %24, %bb4 ], [ %29, %bb20 ]
  ret i64 %.0, !dbg !9061
}

declare i32 @klee_zest_enabled()

define i32 @munmap(i8* nocapture %addr, i64 %length) nounwind {
entry:
  tail call void @free(i8* %addr) nounwind, !dbg !9062
  ret i32 0, !dbg !9064
}

define weak i32 @pipe(i32* %filedes) nounwind {
entry:
  %os_filedes = alloca [2 x i32], align 4
  br label %bb2.i, !dbg !9065

bb.i:                                             ; preds = %bb2.i
  %scevgep.i = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar.i, i32 1
  %0 = load i32* %scevgep.i, align 4, !dbg !9067
  %1 = and i32 %0, 1, !dbg !9067
  %2 = icmp eq i32 %1, 0, !dbg !9067
  br i1 %2, label %__get_new_fd.exit, label %bb1.i, !dbg !9067

bb1.i:                                            ; preds = %bb.i
  %indvar.next.i = add i64 %indvar.i, 1
  br label %bb2.i, !dbg !9065

bb2.i:                                            ; preds = %bb1.i, %entry
  %indvar.i = phi i64 [ %indvar.next.i, %bb1.i ], [ 0, %entry ]
  %fd.0.i = trunc i64 %indvar.i to i32
  %3 = icmp slt i32 %fd.0.i, 32, !dbg !9065
  br i1 %3, label %bb.i, label %bb3.i, !dbg !9065

bb3.i:                                            ; preds = %bb2.i
  %4 = icmp eq i32 %fd.0.i, 32, !dbg !9068
  br i1 %4, label %__get_new_fd.exit.thread, label %__get_new_fd.exit, !dbg !9068

__get_new_fd.exit.thread:                         ; preds = %bb3.i
  %5 = call i32* @__errno_location() nounwind readnone, !dbg !9069
  store i32 23, i32* %5, align 4, !dbg !9069
  store i32 -1, i32* %filedes, align 4, !dbg !9066
  br label %bb

__get_new_fd.exit:                                ; preds = %bb3.i, %bb.i
  %6 = sext i32 %fd.0.i to i64, !dbg !9070
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, !dbg !9070
  %8 = bitcast %struct.exe_file_t* %7 to i8*, !dbg !9071
  %9 = call i8* @memset(i8* %8, i32 0, i64 56)
  %10 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 0, !dbg !9072
  store i32 -1, i32* %10, align 8, !dbg !9072
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 1, !dbg !9073
  store i32 1, i32* %11, align 4, !dbg !9073
  store i32 %fd.0.i, i32* %filedes, align 4, !dbg !9066
  %12 = icmp slt i32 %fd.0.i, 0, !dbg !9066
  br i1 %12, label %__get_new_fd.exit.bb_crit_edge, label %bb2.i15, !dbg !9066

__get_new_fd.exit.bb_crit_edge:                   ; preds = %__get_new_fd.exit
  %.pre = call i32* @__errno_location() nounwind readnone, !dbg !9074
  br label %bb

bb:                                               ; preds = %__get_new_fd.exit.bb_crit_edge, %__get_new_fd.exit.thread
  %.pre-phi = phi i32* [ %.pre, %__get_new_fd.exit.bb_crit_edge ], [ %5, %__get_new_fd.exit.thread ]
  %13 = call i32 @klee_get_errno() nounwind, !dbg !9074
  store i32 %13, i32* %.pre-phi, align 4, !dbg !9074
  %14 = load i32* %filedes, align 4, !dbg !9075
  br label %bb7, !dbg !9075

bb.i10:                                           ; preds = %bb2.i15
  %scevgep.i9 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar.i13, i32 1
  %15 = load i32* %scevgep.i9, align 4, !dbg !9076
  %16 = and i32 %15, 1, !dbg !9076
  %17 = icmp eq i32 %16, 0, !dbg !9076
  br i1 %17, label %__get_new_fd.exit20, label %bb1.i12, !dbg !9076

bb1.i12:                                          ; preds = %bb.i10
  %indvar.next.i11 = add i64 %indvar.i13, 1
  br label %bb2.i15, !dbg !9078

bb2.i15:                                          ; preds = %bb1.i12, %__get_new_fd.exit
  %indvar.i13 = phi i64 [ %indvar.next.i11, %bb1.i12 ], [ 0, %__get_new_fd.exit ]
  %fd.0.i14 = trunc i64 %indvar.i13 to i32
  %18 = icmp slt i32 %fd.0.i14, 32, !dbg !9078
  br i1 %18, label %bb.i10, label %bb3.i16, !dbg !9078

bb3.i16:                                          ; preds = %bb2.i15
  %19 = icmp eq i32 %fd.0.i14, 32, !dbg !9079
  br i1 %19, label %__get_new_fd.exit20.thread, label %__get_new_fd.exit20, !dbg !9079

__get_new_fd.exit20.thread:                       ; preds = %bb3.i16
  %20 = call i32* @__errno_location() nounwind readnone, !dbg !9080
  store i32 23, i32* %20, align 4, !dbg !9080
  %21 = getelementptr inbounds i32* %filedes, i64 1, !dbg !9077
  store i32 -1, i32* %21, align 4, !dbg !9077
  br label %bb2

__get_new_fd.exit20:                              ; preds = %bb3.i16, %bb.i10
  %22 = sext i32 %fd.0.i14 to i64, !dbg !9081
  %23 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %22, !dbg !9081
  %24 = bitcast %struct.exe_file_t* %23 to i8*, !dbg !9082
  %25 = call i8* @memset(i8* %24, i32 0, i64 56)
  %26 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %22, i32 0, !dbg !9083
  store i32 -1, i32* %26, align 8, !dbg !9083
  %27 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %22, i32 1, !dbg !9084
  store i32 1, i32* %27, align 4, !dbg !9084
  %28 = getelementptr inbounds i32* %filedes, i64 1, !dbg !9077
  store i32 %fd.0.i14, i32* %28, align 4, !dbg !9077
  %29 = icmp slt i32 %fd.0.i14, 0, !dbg !9077
  br i1 %29, label %__get_new_fd.exit20.bb2_crit_edge, label %bb3, !dbg !9077

__get_new_fd.exit20.bb2_crit_edge:                ; preds = %__get_new_fd.exit20
  %.pre29 = call i32* @__errno_location() nounwind readnone, !dbg !9085
  br label %bb2

bb2:                                              ; preds = %__get_new_fd.exit20.bb2_crit_edge, %__get_new_fd.exit20.thread
  %.pre-phi30 = phi i32* [ %.pre29, %__get_new_fd.exit20.bb2_crit_edge ], [ %20, %__get_new_fd.exit20.thread ]
  %30 = phi i32* [ %28, %__get_new_fd.exit20.bb2_crit_edge ], [ %21, %__get_new_fd.exit20.thread ]
  %31 = call i32 @klee_get_errno() nounwind, !dbg !9085
  store i32 %31, i32* %.pre-phi30, align 4, !dbg !9085
  %32 = load i32* %30, align 4, !dbg !9086
  br label %bb7, !dbg !9086

bb3:                                              ; preds = %__get_new_fd.exit20
  %os_filedes4 = getelementptr inbounds [2 x i32]* %os_filedes, i64 0, i64 0, !dbg !9087
  %33 = call i64 (i64, ...)* @syscall(i64 22, i32* %os_filedes4) nounwind, !dbg !9087
  %34 = trunc i64 %33 to i32, !dbg !9087
  %35 = icmp slt i32 %34, 0, !dbg !9088
  br i1 %35, label %bb5, label %bb6, !dbg !9088

bb5:                                              ; preds = %bb3
  %36 = call i32* @__errno_location() nounwind readnone, !dbg !9089
  %37 = call i32 @klee_get_errno() nounwind, !dbg !9089
  store i32 %37, i32* %36, align 4, !dbg !9089
  br label %bb7, !dbg !9090

bb6:                                              ; preds = %bb3
  %38 = load i32* %os_filedes4, align 4, !dbg !9091
  store i32 %38, i32* %10, align 8, !dbg !9091
  store i32 5, i32* %11, align 4, !dbg !9091
  %39 = getelementptr inbounds [2 x i32]* %os_filedes, i64 0, i64 1, !dbg !9092
  %40 = load i32* %39, align 4, !dbg !9092
  store i32 %40, i32* %26, align 8, !dbg !9092
  store i32 9, i32* %27, align 4, !dbg !9092
  %41 = load i32* %28, align 4, !dbg !9093
  %42 = load i32* %filedes, align 4, !dbg !9093
  %43 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !9093
  %44 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %43, i8* noalias getelementptr inbounds ([47 x i8]* @.str23349, i64 0, i64 0), i32 %42, i32 %41, i32 %38, i32 %40)
  br label %bb7, !dbg !9094

bb7:                                              ; preds = %bb6, %bb5, %bb2, %bb
  %.0 = phi i32 [ %14, %bb ], [ %32, %bb2 ], [ %34, %bb5 ], [ 0, %bb6 ]
  ret i32 %.0, !dbg !9075
}

declare i64 @klee_get_valuel(i64)

declare void @klee_assume(i64)

define internal fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 %flags, i8 zeroext %cp_treat_symbolic) nounwind {
entry:
  %0 = icmp eq i8* %pathname, null, !dbg !9095
  br i1 %0, label %bb59, label %bb, !dbg !9095

bb:                                               ; preds = %entry
  %1 = load i8* %pathname, align 1, !dbg !9095
  %2 = icmp eq i8 %1, 0, !dbg !9095
  br i1 %2, label %bb59, label %bb2, !dbg !9095

bb2:                                              ; preds = %bb
  %3 = tail call i32 @klee_zest_enabled() nounwind, !dbg !9096
  %4 = icmp eq i32 %3, 1, !dbg !9096
  %5 = zext i1 %4 to i8, !dbg !9096
  store i8 %5, i8* @UseConcretePath, align 1, !dbg !9096
  %6 = getelementptr inbounds i8* %pathname, i64 1, !dbg !9097
  %7 = load i8* %6, align 1, !dbg !9097
  %8 = icmp eq i8 %7, 0, !dbg !9097
  br i1 %8, label %bb3, label %bb11, !dbg !9097

bb3:                                              ; preds = %bb2
  %9 = tail call i32 @klee_shadow_enabled() nounwind, !dbg !9097
  %10 = icmp eq i32 %9, 0, !dbg !9097
  br i1 %10, label %bb4, label %bb3.bb11_crit_edge, !dbg !9097

bb3.bb11_crit_edge:                               ; preds = %bb3
  %.pre = load i8* @UseConcretePath, align 1
  br label %bb11

bb4:                                              ; preds = %bb3
  %11 = load i8* %pathname, align 1, !dbg !9098
  %12 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 0), align 8, !dbg !9099
  %13 = sext i8 %11 to i32, !dbg !9100
  br label %bb10, !dbg !9099

bb5:                                              ; preds = %bb10
  %int_cast_to_i64 = zext i32 24 to i64
  %14 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %14, label %klee_overshift_check.exit, label %bb.i4

bb.i4:                                            ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb5
  %sext = shl i32 %28, 24
  %int_cast_to_i641 = zext i32 24 to i64
  %15 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %15, label %klee_overshift_check.exit6, label %bb.i5

bb.i5:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit6:                       ; preds = %klee_overshift_check.exit
  %16 = ashr exact i32 %sext, 24, !dbg !9100
  %17 = add nsw i32 %16, 65, !dbg !9100
  %18 = icmp eq i32 %13, %17, !dbg !9100
  br i1 %18, label %bb6, label %bb9, !dbg !9100

bb6:                                              ; preds = %klee_overshift_check.exit6
  %19 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 6), align 8, !dbg !9101
  %20 = zext i32 %28 to i64, !dbg !9101
  %21 = getelementptr inbounds %struct.exe_disk_file_t* %19, i64 %20, i32 3, !dbg !9102
  %22 = load %struct.stat** %21, align 8, !dbg !9102
  %23 = getelementptr inbounds %struct.stat* %22, i64 0, i32 1, !dbg !9102
  %24 = load i64* %23, align 8, !dbg !9102
  %25 = icmp eq i64 %24, 0, !dbg !9102
  br i1 %25, label %bb59, label %bb8, !dbg !9102

bb8:                                              ; preds = %bb6
  %26 = getelementptr inbounds %struct.exe_disk_file_t* %19, i64 %20, !dbg !9101
  br label %bb59, !dbg !9103

bb9:                                              ; preds = %klee_overshift_check.exit6
  %27 = add i32 %28, 1, !dbg !9099
  br label %bb10, !dbg !9099

bb10:                                             ; preds = %bb9, %bb4
  %28 = phi i32 [ 0, %bb4 ], [ %27, %bb9 ]
  %29 = icmp ugt i32 %12, %28, !dbg !9099
  br i1 %29, label %bb5, label %bb59, !dbg !9099

bb11:                                             ; preds = %bb3.bb11_crit_edge, %bb2
  %30 = phi i8 [ %.pre, %bb3.bb11_crit_edge ], [ %5, %bb2 ]
  %toBool = icmp eq i8 %30, 0, !dbg !9104
  %toBool13 = icmp eq i8 %cp_treat_symbolic, 0, !dbg !9104
  %or.cond = or i1 %toBool, %toBool13
  br i1 %or.cond, label %bb59, label %bb14, !dbg !9104

bb14:                                             ; preds = %bb11
  %31 = load i8* %pathname, align 1, !dbg !9105
  %32 = sext i8 %31 to i64, !dbg !9105
  %33 = tail call i32 @klee_is_symbolic(i64 %32) nounwind, !dbg !9105
  %34 = icmp eq i32 %33, 0, !dbg !9105
  br i1 %34, label %bb19, label %bb16, !dbg !9105

bb16:                                             ; preds = %bb14
  %35 = tail call i32 @klee_shadow_enabled() nounwind, !dbg !9106
  %36 = icmp eq i32 %35, 0, !dbg !9106
  br i1 %36, label %bb17, label %bb41, !dbg !9106

bb17:                                             ; preds = %bb16
  %37 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !9107
  %38 = tail call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %37, i8* noalias getelementptr inbounds ([32 x i8]* @.str24350, i64 0, i64 0), i8* %pathname) nounwind, !dbg 
  br label %bb41, !dbg !9107

bb19:                                             ; preds = %bb14
  %39 = tail call i8* @strchr(i8* %pathname, i32 46) nounwind readonly, !dbg !9108
  %40 = icmp eq i8* %39, null, !dbg !9109
  br i1 %40, label %bb56, label %bb37, !dbg !9109

bb37:                                             ; preds = %bb19
  %41 = tail call i32 @strcmp(i8* %39, i8* getelementptr inbounds ([6 x i8]* @.str25351, i64 0, i64 0)) nounwind readonly, !dbg !9110
  %phitmp = icmp eq i32 %41, 0
  br i1 %phitmp, label %bb38, label %bb56, !dbg !9110

bb38:                                             ; preds = %bb37
  %42 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !9111
  %43 = tail call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %42, i8* noalias getelementptr inbounds ([40 x i8]* @.str26352, i64 0, i64 0), i8* %pathname) nounwind, !dbg 
  br label %bb41, !dbg !9111

bb41:                                             ; preds = %bb38, %bb17, %bb16
  %44 = tail call i32 @klee_shadow_enabled() nounwind, !dbg !9112
  %45 = icmp eq i32 %44, 0, !dbg !9113
  br i1 %45, label %bb43, label %bb42, !dbg !9113

bb42:                                             ; preds = %bb41
  %46 = tail call i64 @strlen(i8* %pathname) nounwind readonly, !dbg !9114
  %int_cast_to_i642 = bitcast i64 32 to i64
  %47 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %47, label %klee_overshift_check.exit8, label %bb.i7

bb.i7:                                            ; preds = %bb42
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit8:                       ; preds = %bb42
  %48 = shl i64 %46, 32
  %sext63 = add i64 %48, 4294967296
  %int_cast_to_i643 = bitcast i64 32 to i64
  %49 = icmp ult i64 %int_cast_to_i643, 64
  br i1 %49, label %klee_overshift_check.exit10, label %bb.i9

bb.i9:                                            ; preds = %klee_overshift_check.exit8
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit10:                      ; preds = %klee_overshift_check.exit8
  %50 = ashr exact i64 %sext63, 32, !dbg !9115
  %51 = tail call noalias i8* @malloc(i64 %50) nounwind, !dbg !9115
  %52 = call i8* @memcpy(i8* %51, i8* %pathname, i64 %50)
  br label %bb43, !dbg !9116

bb43:                                             ; preds = %klee_overshift_check.exit10, %bb41
  %toConcretize.0 = phi i8* [ %51, %klee_overshift_check.exit10 ], [ %pathname, %bb41 ]
  %53 = ptrtoint i8* %toConcretize.0 to i64, !dbg !9117
  %54 = tail call i64 @klee_get_valuel(i64 %53) nounwind, !dbg !9117
  %55 = inttoptr i64 %54 to i8*, !dbg !9117
  %56 = icmp eq i8* %55, %toConcretize.0, !dbg !9120
  %57 = zext i1 %56 to i64, !dbg !9120
  tail call void @klee_assume(i64 %57) nounwind, !dbg !9120
  br label %bb.i, !dbg !9121

bb.i:                                             ; preds = %bb13.i, %bb43
  %sc.0.i = phi i8* [ %55, %bb43 ], [ %sc.1.i, %bb13.i ]
  %58 = phi i32 [ 0, %bb43 ], [ %75, %bb13.i ]
  %59 = load i8* %sc.0.i, align 1, !dbg !9122
  %60 = load i8* @UseConcretePath, align 1, !dbg !9123
  %toBool3not.i = icmp eq i8 %60, 0, !dbg !9123
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9123

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %58, -1
  %61 = and i32 %tmp.i, %58, !dbg !9123
  %62 = icmp eq i32 %61, 0, !dbg !9123
  br i1 %62, label %bb8.i, label %bb12.i, !dbg !9123

bb8.i:                                            ; preds = %bb7.i
  switch i8 %59, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9124
  br label %bb50.preheader, !dbg !9124

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9125
  %63 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9125
  br label %bb13.i, !dbg !9125

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %64 = sext i8 %59 to i64, !dbg !9126
  %65 = tail call i64 @klee_get_valuel(i64 %64) nounwind, !dbg !9126
  %66 = trunc i64 %65 to i8, !dbg !9126
  %67 = icmp eq i8 %66, %59, !dbg !9127
  %68 = zext i1 %67 to i64, !dbg !9127
  tail call void @klee_assume(i64 %68) nounwind, !dbg !9127
  store i8 %66, i8* %sc.0.i, align 1, !dbg !9128
  %69 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9128
  %70 = icmp eq i8 %66, 0, !dbg !9129
  br i1 %70, label %bb50.preheader, label %bb13.i, !dbg !9129

bb50.preheader:                                   ; preds = %bb12.i, %bb9.i
  %71 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 2), align 8, !dbg !9130
  %72 = icmp eq i32 %71, 0, !dbg !9130
  br i1 %72, label %bb52, label %bb44.lr.ph, !dbg !9130

bb44.lr.ph:                                       ; preds = %bb50.preheader
  %73 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 8, !dbg !9131
  %tmp = icmp ugt i32 %71, 1
  %.op = add i32 %71, -1
  %74 = zext i32 %.op to i64
  %.op76 = add i64 %74, 1
  %tmp70 = select i1 %tmp, i64 %.op76, i64 1
  br label %bb44

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %69, %bb12.i ], [ %63, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %75 = add i32 %58, 1, !dbg !9121
  br label %bb.i, !dbg !9121

bb44:                                             ; preds = %bb49, %bb44.lr.ph
  %indvar = phi i64 [ 0, %bb44.lr.ph ], [ %indvar.next, %bb49 ]
  %df15.165 = phi %struct.exe_disk_file_t* [ null, %bb44.lr.ph ], [ %df15.0, %bb49 ]
  %scevgep71 = getelementptr %struct.exe_disk_file_t* %73, i64 %indvar, i32 2
  %scevgep = getelementptr %struct.exe_disk_file_t* %73, i64 %indvar
  %76 = load i8** %scevgep71, align 8, !dbg !9131
  %77 = icmp eq i8* %76, null, !dbg !9131
  br i1 %77, label %bb49, label %bb45, !dbg !9131

bb45:                                             ; preds = %bb44
  %78 = tail call i32 @strcmp(i8* %76, i8* %pathname) nounwind readonly, !dbg !9132
  %79 = icmp eq i32 %78, 0, !dbg !9132
  br i1 %79, label %bb48, label %bb49, !dbg !9132

bb48:                                             ; preds = %bb45
  br label %bb49, !dbg !9133

bb49:                                             ; preds = %bb48, %bb45, %bb44
  %df15.0 = phi %struct.exe_disk_file_t* [ %scevgep, %bb48 ], [ %df15.165, %bb45 ], [ %df15.165, %bb44 ]
  %indvar.next = add i64 %indvar, 1
  %exitcond3 = icmp eq i64 %indvar.next, %tmp70
  br i1 %exitcond3, label %bb51, label %bb44, !dbg !9130

bb51:                                             ; preds = %bb49
  %80 = icmp eq %struct.exe_disk_file_t* %df15.0, null, !dbg !9134
  br i1 %80, label %bb52, label %bb53, !dbg !9134

bb52:                                             ; preds = %bb51, %bb50.preheader
  %81 = tail call %struct.exe_disk_file_t* @klee_init_cp_file(i8* %toConcretize.0, i32 %flags) nounwind, !dbg !9135
  br label %bb53, !dbg !9135

bb53:                                             ; preds = %bb52, %bb51
  %df15.2 = phi %struct.exe_disk_file_t* [ %81, %bb52 ], [ %df15.0, %bb51 ]
  br i1 %45, label %bb59, label %bb54, !dbg !9136

bb54:                                             ; preds = %bb53
  tail call void @free(i8* %toConcretize.0) nounwind, !dbg !9137
  br label %bb59, !dbg !9137

bb56:                                             ; preds = %bb37, %bb19
  %82 = tail call i32 @klee_shadow_enabled() nounwind, !dbg !9112
  %83 = icmp eq i32 %82, 0, !dbg !9113
  br i1 %83, label %bb57, label %bb59, !dbg !9138

bb57:                                             ; preds = %bb56
  %84 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !9139
  %85 = tail call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %84, i8* noalias getelementptr inbounds ([32 x i8]* @.str27353, i64 0, i64 0), i8* %pathname) nounwind, !dbg 
  br label %bb59, !dbg !9139

bb59:                                             ; preds = %bb57, %bb56, %bb54, %bb53, %bb11, %bb10, %bb8, %bb6, %bb, %entry
  %.0 = phi %struct.exe_disk_file_t* [ %26, %bb8 ], [ null, %bb ], [ null, %entry ], [ null, %bb6 ], [ %df15.2, %bb53 ], [ %df15.2, %bb54 ], [ null, %bb11 ], [ null, %bb57 ], [ null, %bb56 ], [ null, %bb10 ]
  ret %struct.exe_disk_file_t* %.0, !dbg !9140
}

declare i32 @klee_is_symbolic(i64)

define i32 @utime(i8* %path, i8* %times) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9141
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9144
  br i1 %1, label %bb1, label %bb, !dbg !9144

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([40 x i8]* @.str28354, i64 0, i64 0)) nounwind, !dbg !9145
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9146
  store i32 2, i32* %2, align 4, !dbg !9146
  br label %bb4, !dbg !9147

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !9148
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !9148
  %5 = inttoptr i64 %4 to i8*, !dbg !9148
  %6 = icmp eq i8* %5, %path, !dbg !9151
  %7 = zext i1 %6 to i64, !dbg !9151
  tail call void @klee_assume(i64 %7) nounwind, !dbg !9151
  br label %bb.i, !dbg !9152

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !9153
  %10 = load i8* @UseConcretePath, align 1, !dbg !9154
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !9154
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9154

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !9154
  %12 = icmp eq i32 %11, 0, !dbg !9154
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !9154

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9155
  br label %__concretize_string.exit, !dbg !9155

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9156
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9156
  br label %bb13.i, !dbg !9156

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !9157
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !9157
  %16 = trunc i64 %15 to i8, !dbg !9157
  %17 = icmp eq i8 %16, %9, !dbg !9158
  %18 = zext i1 %17 to i64, !dbg !9158
  tail call void @klee_assume(i64 %18) nounwind, !dbg !9158
  store i8 %16, i8* %sc.0.i, align 1, !dbg !9159
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9159
  %20 = icmp eq i8 %16, 0, !dbg !9160
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !9160

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !9152
  br label %bb.i, !dbg !9152

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 132, i8* %path, i8* %times) nounwind, !dbg !9150
  %23 = trunc i64 %22 to i32, !dbg !9150
  %24 = icmp eq i32 %23, -1, !dbg !9161
  br i1 %24, label %bb2, label %bb4, !dbg !9161

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !9162
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !9162
  store i32 %26, i32* %25, align 4, !dbg !9162
  br label %bb4, !dbg !9162

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9147
}

define i64 @readlink(i8* %path, i8* %buf, i64 %bufsize) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9163
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9165
  br i1 %1, label %bb12, label %bb, !dbg !9165

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !9166
  %3 = load %struct.stat** %2, align 8, !dbg !9166
  %4 = getelementptr inbounds %struct.stat* %3, i64 0, i32 3, !dbg !9166
  %5 = load i32* %4, align 8, !dbg !9166
  %6 = and i32 %5, 61440, !dbg !9166
  %7 = icmp eq i32 %6, 40960, !dbg !9166
  br i1 %7, label %bb1, label %bb11, !dbg !9166

bb1:                                              ; preds = %bb
  %8 = load i8* %path, align 1, !dbg !9167
  store i8 %8, i8* %buf, align 1, !dbg !9167
  %9 = icmp ugt i64 %bufsize, 1, !dbg !9168
  br i1 %9, label %bb3, label %bb9, !dbg !9168

bb3:                                              ; preds = %bb1
  %10 = getelementptr inbounds i8* %buf, i64 1, !dbg !9168
  store i8 46, i8* %10, align 1, !dbg !9168
  %11 = icmp ugt i64 %bufsize, 2, !dbg !9169
  br i1 %11, label %bb5, label %bb9, !dbg !9169

bb5:                                              ; preds = %bb3
  %12 = getelementptr inbounds i8* %buf, i64 2, !dbg !9169
  store i8 108, i8* %12, align 1, !dbg !9169
  %13 = icmp ugt i64 %bufsize, 3, !dbg !9170
  br i1 %13, label %bb7, label %bb9, !dbg !9170

bb7:                                              ; preds = %bb5
  %14 = getelementptr inbounds i8* %buf, i64 3, !dbg !9170
  store i8 110, i8* %14, align 1, !dbg !9170
  %15 = icmp ugt i64 %bufsize, 4, !dbg !9171
  br i1 %15, label %bb8, label %bb9, !dbg !9171

bb8:                                              ; preds = %bb7
  %16 = getelementptr inbounds i8* %buf, i64 4, !dbg !9171
  store i8 107, i8* %16, align 1, !dbg !9171
  br label %bb9, !dbg !9171

bb9:                                              ; preds = %bb8, %bb7, %bb5, %bb3, %bb1
  %17 = icmp ugt i64 %bufsize, 5, !dbg !9172
  %min = select i1 %17, i64 5, i64 %bufsize, !dbg !9172
  br label %bb15, !dbg !9172

bb11:                                             ; preds = %bb
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !9173
  store i32 22, i32* %18, align 4, !dbg !9173
  br label %bb15, !dbg !9174

bb12:                                             ; preds = %entry
  %19 = tail call i64 (i64, ...)* @syscall(i64 89, i8* %path, i8* %buf, i64 %bufsize) nounwind, !dbg !9175
  %20 = trunc i64 %19 to i32, !dbg !9175
  %21 = icmp eq i32 %20, -1, !dbg !9176
  br i1 %21, label %bb13, label %bb14, !dbg !9176

bb13:                                             ; preds = %bb12
  %22 = tail call i32* @__errno_location() nounwind readnone, !dbg !9177
  %23 = tail call i32 @klee_get_errno() nounwind, !dbg !9177
  store i32 %23, i32* %22, align 4, !dbg !9177
  br label %bb14, !dbg !9177

bb14:                                             ; preds = %bb13, %bb12
  %24 = sext i32 %20 to i64, !dbg !9178
  br label %bb15, !dbg !9178

bb15:                                             ; preds = %bb14, %bb11, %bb9
  %.0 = phi i64 [ %min, %bb9 ], [ -1, %bb11 ], [ %24, %bb14 ]
  ret i64 %.0, !dbg !9172
}

define i32 @utimes(i8* %path, %struct.timespec* %times) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9179
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9181
  br i1 %1, label %bb1, label %bb, !dbg !9181

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([41 x i8]* @.str29355, i64 0, i64 0)) nounwind, !dbg !9182
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9183
  store i32 2, i32* %2, align 4, !dbg !9183
  br label %bb4, !dbg !9184

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !9185
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !9185
  %5 = inttoptr i64 %4 to i8*, !dbg !9185
  %6 = icmp eq i8* %5, %path, !dbg !9188
  %7 = zext i1 %6 to i64, !dbg !9188
  tail call void @klee_assume(i64 %7) nounwind, !dbg !9188
  br label %bb.i, !dbg !9189

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !9190
  %10 = load i8* @UseConcretePath, align 1, !dbg !9191
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !9191
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9191

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !9191
  %12 = icmp eq i32 %11, 0, !dbg !9191
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !9191

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9192
  br label %__concretize_string.exit, !dbg !9192

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9193
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9193
  br label %bb13.i, !dbg !9193

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !9194
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !9194
  %16 = trunc i64 %15 to i8, !dbg !9194
  %17 = icmp eq i8 %16, %9, !dbg !9195
  %18 = zext i1 %17 to i64, !dbg !9195
  tail call void @klee_assume(i64 %18) nounwind, !dbg !9195
  store i8 %16, i8* %sc.0.i, align 1, !dbg !9196
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9196
  %20 = icmp eq i8 %16, 0, !dbg !9197
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !9197

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !9189
  br label %bb.i, !dbg !9189

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 235, i8* %path, %struct.timespec* %times) nounwind, !dbg !9187
  %23 = trunc i64 %22 to i32, !dbg !9187
  %24 = icmp eq i32 %23, -1, !dbg !9198
  br i1 %24, label %bb2, label %bb4, !dbg !9198

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !9199
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !9199
  store i32 %26, i32* %25, align 4, !dbg !9199
  br label %bb4, !dbg !9199

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9184
}

define i32 @unlink(i8* %pathname) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !9200
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9202
  br i1 %1, label %bb5, label %bb, !dbg !9202

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !9203
  %3 = load %struct.stat** %2, align 8, !dbg !9203
  %4 = getelementptr inbounds %struct.stat* %3, i64 0, i32 3, !dbg !9203
  %5 = load i32* %4, align 8, !dbg !9203
  %6 = and i32 %5, 61440, !dbg !9203
  %7 = icmp eq i32 %6, 32768, !dbg !9203
  br i1 %7, label %bb1, label %bb2, !dbg !9203

bb1:                                              ; preds = %bb
  %8 = getelementptr inbounds %struct.stat* %3, i64 0, i32 1, !dbg !9204
  store i64 0, i64* %8, align 8, !dbg !9204
  br label %bb8, !dbg !9205

bb2:                                              ; preds = %bb
  %9 = icmp eq i32 %6, 16384, !dbg !9206
  %10 = tail call i32* @__errno_location() nounwind readnone, !dbg !9207
  br i1 %9, label %bb3, label %bb4, !dbg !9206

bb3:                                              ; preds = %bb2
  store i32 21, i32* %10, align 4, !dbg !9207
  br label %bb8, !dbg !9208

bb4:                                              ; preds = %bb2
  store i32 1, i32* %10, align 4, !dbg !9209
  br label %bb8, !dbg !9210

bb5:                                              ; preds = %entry
  %11 = ptrtoint i8* %pathname to i64, !dbg !9211
  %12 = tail call i64 @klee_get_valuel(i64 %11) nounwind, !dbg !9211
  %13 = inttoptr i64 %12 to i8*, !dbg !9211
  %14 = icmp eq i8* %13, %pathname, !dbg !9214
  %15 = zext i1 %14 to i64, !dbg !9214
  tail call void @klee_assume(i64 %15) nounwind, !dbg !9214
  br label %bb.i, !dbg !9215

bb.i:                                             ; preds = %bb13.i, %bb5
  %sc.0.i = phi i8* [ %13, %bb5 ], [ %sc.1.i, %bb13.i ]
  %16 = phi i32 [ 0, %bb5 ], [ %29, %bb13.i ]
  %17 = load i8* %sc.0.i, align 1, !dbg !9216
  %18 = load i8* @UseConcretePath, align 1, !dbg !9217
  %toBool3not.i = icmp eq i8 %18, 0, !dbg !9217
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9217

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %16, -1
  %19 = and i32 %tmp.i, %16, !dbg !9217
  %20 = icmp eq i32 %19, 0, !dbg !9217
  br i1 %20, label %bb8.i, label %bb12.i, !dbg !9217

bb8.i:                                            ; preds = %bb7.i
  switch i8 %17, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9218
  br label %__concretize_string.exit, !dbg !9218

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9219
  %21 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9219
  br label %bb13.i, !dbg !9219

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %22 = sext i8 %17 to i64, !dbg !9220
  %23 = tail call i64 @klee_get_valuel(i64 %22) nounwind, !dbg !9220
  %24 = trunc i64 %23 to i8, !dbg !9220
  %25 = icmp eq i8 %24, %17, !dbg !9221
  %26 = zext i1 %25 to i64, !dbg !9221
  tail call void @klee_assume(i64 %26) nounwind, !dbg !9221
  store i8 %24, i8* %sc.0.i, align 1, !dbg !9222
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9222
  %28 = icmp eq i8 %24, 0, !dbg !9223
  br i1 %28, label %__concretize_string.exit, label %bb13.i, !dbg !9223

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %27, %bb12.i ], [ %21, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %29 = add i32 %16, 1, !dbg !9215
  br label %bb.i, !dbg !9215

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %30 = tail call i64 (i64, ...)* @syscall(i64 87, i8* %pathname) nounwind, !dbg !9213
  %31 = trunc i64 %30 to i32, !dbg !9213
  %32 = icmp eq i32 %31, -1, !dbg !9224
  br i1 %32, label %bb6, label %bb8, !dbg !9224

bb6:                                              ; preds = %__concretize_string.exit
  %33 = tail call i32* @__errno_location() nounwind readnone, !dbg !9225
  %34 = tail call i32 @klee_get_errno() nounwind, !dbg !9225
  store i32 %34, i32* %33, align 4, !dbg !9225
  br label %bb8, !dbg !9225

bb8:                                              ; preds = %bb6, %__concretize_string.exit, %bb4, %bb3, %bb1
  %.0 = phi i32 [ 0, %bb1 ], [ -1, %bb3 ], [ -1, %bb4 ], [ -1, %bb6 ], [ %31, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9205
}

define i32 @rmdir(i8* %pathname) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !9226
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9228
  br i1 %1, label %bb3, label %bb, !dbg !9228

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !9229
  %3 = load %struct.stat** %2, align 8, !dbg !9229
  %4 = getelementptr inbounds %struct.stat* %3, i64 0, i32 3, !dbg !9229
  %5 = load i32* %4, align 8, !dbg !9229
  %6 = and i32 %5, 61440, !dbg !9229
  %7 = icmp eq i32 %6, 16384, !dbg !9229
  br i1 %7, label %bb1, label %bb2, !dbg !9229

bb1:                                              ; preds = %bb
  %8 = getelementptr inbounds %struct.stat* %3, i64 0, i32 1, !dbg !9230
  store i64 0, i64* %8, align 8, !dbg !9230
  br label %bb6, !dbg !9231

bb2:                                              ; preds = %bb
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !9232
  store i32 20, i32* %9, align 4, !dbg !9232
  br label %bb6, !dbg !9233

bb3:                                              ; preds = %entry
  %10 = ptrtoint i8* %pathname to i64, !dbg !9234
  %11 = tail call i64 @klee_get_valuel(i64 %10) nounwind, !dbg !9234
  %12 = inttoptr i64 %11 to i8*, !dbg !9234
  %13 = icmp eq i8* %12, %pathname, !dbg !9237
  %14 = zext i1 %13 to i64, !dbg !9237
  tail call void @klee_assume(i64 %14) nounwind, !dbg !9237
  br label %bb.i, !dbg !9238

bb.i:                                             ; preds = %bb13.i, %bb3
  %sc.0.i = phi i8* [ %12, %bb3 ], [ %sc.1.i, %bb13.i ]
  %15 = phi i32 [ 0, %bb3 ], [ %28, %bb13.i ]
  %16 = load i8* %sc.0.i, align 1, !dbg !9239
  %17 = load i8* @UseConcretePath, align 1, !dbg !9240
  %toBool3not.i = icmp eq i8 %17, 0, !dbg !9240
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9240

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %15, -1
  %18 = and i32 %tmp.i, %15, !dbg !9240
  %19 = icmp eq i32 %18, 0, !dbg !9240
  br i1 %19, label %bb8.i, label %bb12.i, !dbg !9240

bb8.i:                                            ; preds = %bb7.i
  switch i8 %16, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9241
  br label %__concretize_string.exit, !dbg !9241

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9242
  %20 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9242
  br label %bb13.i, !dbg !9242

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %21 = sext i8 %16 to i64, !dbg !9243
  %22 = tail call i64 @klee_get_valuel(i64 %21) nounwind, !dbg !9243
  %23 = trunc i64 %22 to i8, !dbg !9243
  %24 = icmp eq i8 %23, %16, !dbg !9244
  %25 = zext i1 %24 to i64, !dbg !9244
  tail call void @klee_assume(i64 %25) nounwind, !dbg !9244
  store i8 %23, i8* %sc.0.i, align 1, !dbg !9245
  %26 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9245
  %27 = icmp eq i8 %23, 0, !dbg !9246
  br i1 %27, label %__concretize_string.exit, label %bb13.i, !dbg !9246

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %26, %bb12.i ], [ %20, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %28 = add i32 %15, 1, !dbg !9238
  br label %bb.i, !dbg !9238

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %29 = tail call i64 (i64, ...)* @syscall(i64 84, i8* %pathname) nounwind, !dbg !9236
  %30 = trunc i64 %29 to i32, !dbg !9236
  %31 = icmp eq i32 %30, -1, !dbg !9247
  br i1 %31, label %bb4, label %bb6, !dbg !9247

bb4:                                              ; preds = %__concretize_string.exit
  %32 = tail call i32* @__errno_location() nounwind readnone, !dbg !9248
  %33 = tail call i32 @klee_get_errno() nounwind, !dbg !9248
  store i32 %33, i32* %32, align 4, !dbg !9248
  br label %bb6, !dbg !9248

bb6:                                              ; preds = %bb4, %__concretize_string.exit, %bb2, %bb1
  %.0 = phi i32 [ 0, %bb1 ], [ -1, %bb2 ], [ -1, %bb4 ], [ %30, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9231
}

define i32 @__fd_statfs(i8* %path, %struct.statfs* %buf) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9249
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9251
  br i1 %1, label %bb1, label %bb, !dbg !9251

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str5331, i64 0, i64 0)) nounwind, !dbg !9252
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9253
  store i32 2, i32* %2, align 4, !dbg !9253
  br label %bb4, !dbg !9254

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !9255
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !9255
  %5 = inttoptr i64 %4 to i8*, !dbg !9255
  %6 = icmp eq i8* %5, %path, !dbg !9258
  %7 = zext i1 %6 to i64, !dbg !9258
  tail call void @klee_assume(i64 %7) nounwind, !dbg !9258
  br label %bb.i, !dbg !9259

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !9260
  %10 = load i8* @UseConcretePath, align 1, !dbg !9261
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !9261
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9261

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !9261
  %12 = icmp eq i32 %11, 0, !dbg !9261
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !9261

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9262
  br label %__concretize_string.exit, !dbg !9262

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9263
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9263
  br label %bb13.i, !dbg !9263

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !9264
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !9264
  %16 = trunc i64 %15 to i8, !dbg !9264
  %17 = icmp eq i8 %16, %9, !dbg !9265
  %18 = zext i1 %17 to i64, !dbg !9265
  tail call void @klee_assume(i64 %18) nounwind, !dbg !9265
  store i8 %16, i8* %sc.0.i, align 1, !dbg !9266
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9266
  %20 = icmp eq i8 %16, 0, !dbg !9267
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !9267

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !9259
  br label %bb.i, !dbg !9259

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 137, i8* %path, %struct.statfs* %buf) nounwind, !dbg !9257
  %23 = trunc i64 %22 to i32, !dbg !9257
  %24 = icmp eq i32 %23, -1, !dbg !9268
  br i1 %24, label %bb2, label %bb4, !dbg !9268

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !9269
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !9269
  store i32 %26, i32* %25, align 4, !dbg !9269
  br label %bb4, !dbg !9269

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9254
}

define i32 @openat(i32 %fd, i8* %path, i32 %flags, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = icmp ult i32 %fd, 32, !dbg !9270
  br i1 %0, label %bb.i, label %bb4, !dbg !9270

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !9272
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !9273
  %3 = load i32* %2, align 4, !dbg !9273
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !9273
  br i1 %toBool.i, label %bb4, label %__get_file.exit, !dbg !9273

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !9272
  %cond = icmp eq %struct.exe_file_t* %5, null
  br i1 %cond, label %bb4, label %bb

bb:                                               ; preds = %__get_file.exit
  %6 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !9274
  %7 = load %struct.exe_disk_file_t** %6, align 8, !dbg !9274
  %8 = icmp eq %struct.exe_disk_file_t* %7, null, !dbg !9274
  br i1 %8, label %bb3, label %bb1, !dbg !9274

bb1:                                              ; preds = %bb
  call void @klee_warning(i8* getelementptr inbounds ([52 x i8]* @.str30356, i64 0, i64 0)) nounwind, !dbg !9275
  %9 = call i32* @__errno_location() nounwind readnone, !dbg !9276
  store i32 2, i32* %9, align 4, !dbg !9276
  br label %bb29, !dbg !9277

bb3:                                              ; preds = %bb
  %10 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !9278
  %11 = load i32* %10, align 8, !dbg !9278
  br label %bb4, !dbg !9278

bb4:                                              ; preds = %bb3, %__get_file.exit, %bb.i, %entry
  %fd_addr.0 = phi i32 [ %11, %bb3 ], [ %fd, %__get_file.exit ], [ %fd, %bb.i ], [ %fd, %entry ]
  br label %bb7, !dbg !9279

bb5:                                              ; preds = %bb7
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %12 = load i32* %scevgep, align 4, !dbg !9280
  %13 = and i32 %12, 1, !dbg !9280
  %14 = icmp eq i32 %13, 0, !dbg !9280
  br i1 %14, label %bb10, label %bb6, !dbg !9280

bb6:                                              ; preds = %bb5
  %indvar.next = add i64 %indvar, 1
  br label %bb7, !dbg !9279

bb7:                                              ; preds = %bb6, %bb4
  %indvar = phi i64 [ %indvar.next, %bb6 ], [ 0, %bb4 ]
  %fd_idx.0 = trunc i64 %indvar to i32
  %15 = icmp slt i32 %fd_idx.0, 32, !dbg !9279
  br i1 %15, label %bb5, label %bb8, !dbg !9279

bb8:                                              ; preds = %bb7
  %16 = icmp eq i32 %fd_idx.0, 32, !dbg !9281
  br i1 %16, label %bb9, label %bb10, !dbg !9281

bb9:                                              ; preds = %bb8
  %17 = call i32* @__errno_location() nounwind readnone, !dbg !9282
  store i32 24, i32* %17, align 4, !dbg !9282
  br label %bb29, !dbg !9283

bb10:                                             ; preds = %bb8, %bb5
  %18 = sext i32 %fd_idx.0 to i64, !dbg !9284
  %19 = and i32 %flags, 64, !dbg !9285
  %20 = icmp eq i32 %19, 0, !dbg !9285
  br i1 %20, label %bb19, label %bb11, !dbg !9285

bb11:                                             ; preds = %bb10
  %ap1213 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !9286
  call void @llvm.va_start(i8* %ap1213), !dbg !9286
  %21 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !9287
  %22 = load i32* %21, align 8, !dbg !9287
  %23 = icmp ugt i32 %22, 47, !dbg !9287
  br i1 %23, label %bb15, label %bb14, !dbg !9287

bb14:                                             ; preds = %bb11
  %24 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !9287
  %25 = load i8** %24, align 8, !dbg !9287
  %tmp = zext i32 %22 to i64
  %26 = ptrtoint i8* %25 to i64, !dbg !9287
  %27 = add i64 %26, %tmp, !dbg !9287
  %28 = inttoptr i64 %27 to i8*, !dbg !9287
  %29 = add i32 %22, 8, !dbg !9287
  store i32 %29, i32* %21, align 8, !dbg !9287
  br label %bb16, !dbg !9287

bb15:                                             ; preds = %bb11
  %30 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !9287
  %31 = load i8** %30, align 8, !dbg !9287
  %32 = getelementptr inbounds i8* %31, i64 8, !dbg !9287
  store i8* %32, i8** %30, align 8, !dbg !9287
  br label %bb16, !dbg !9287

bb16:                                             ; preds = %bb15, %bb14
  %addr.67.0 = phi i8* [ %31, %bb15 ], [ %28, %bb14 ]
  %33 = bitcast i8* %addr.67.0 to i32*, !dbg !9287
  %34 = load i32* %33, align 4, !dbg !9287
  call void @llvm.va_end(i8* %ap1213), !dbg !9288
  br label %bb19, !dbg !9288

bb19:                                             ; preds = %bb16, %bb10
  %mode.0 = phi i32 [ %34, %bb16 ], [ 0, %bb10 ]
  %35 = sext i32 %flags to i64, !dbg !9289
  %36 = ptrtoint i8* %path to i64, !dbg !9290
  %37 = call i64 @klee_get_valuel(i64 %36) nounwind, !dbg !9290
  %38 = inttoptr i64 %37 to i8*, !dbg !9290
  %39 = icmp eq i8* %38, %path, !dbg !9292
  %40 = zext i1 %39 to i64, !dbg !9292
  call void @klee_assume(i64 %40) nounwind, !dbg !9292
  br label %bb.i32, !dbg !9293

bb.i32:                                           ; preds = %bb13.i, %bb19
  %sc.0.i = phi i8* [ %38, %bb19 ], [ %sc.1.i, %bb13.i ]
  %41 = phi i32 [ 0, %bb19 ], [ %54, %bb13.i ]
  %42 = load i8* %sc.0.i, align 1, !dbg !9294
  %43 = load i8* @UseConcretePath, align 1, !dbg !9295
  %toBool3not.i = icmp eq i8 %43, 0, !dbg !9295
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9295

bb7.i:                                            ; preds = %bb.i32
  %tmp.i = add i32 %41, -1
  %44 = and i32 %tmp.i, %41, !dbg !9295
  %45 = icmp eq i32 %44, 0, !dbg !9295
  br i1 %45, label %bb8.i, label %bb12.i, !dbg !9295

bb8.i:                                            ; preds = %bb7.i
  switch i8 %42, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9296
  br label %__concretize_string.exit, !dbg !9296

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9297
  %46 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9297
  br label %bb13.i, !dbg !9297

bb12.i:                                           ; preds = %bb7.i, %bb.i32
  %47 = sext i8 %42 to i64, !dbg !9298
  %48 = call i64 @klee_get_valuel(i64 %47) nounwind, !dbg !9298
  %49 = trunc i64 %48 to i8, !dbg !9298
  %50 = icmp eq i8 %49, %42, !dbg !9299
  %51 = zext i1 %50 to i64, !dbg !9299
  call void @klee_assume(i64 %51) nounwind, !dbg !9299
  store i8 %49, i8* %sc.0.i, align 1, !dbg !9300
  %52 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9300
  %53 = icmp eq i8 %49, 0, !dbg !9301
  br i1 %53, label %__concretize_string.exit, label %bb13.i, !dbg !9301

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %52, %bb12.i ], [ %46, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %54 = add i32 %41, 1, !dbg !9293
  br label %bb.i32, !dbg !9293

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %55 = sext i32 %fd_addr.0 to i64, !dbg !9289
  %56 = call i64 (i64, ...)* @syscall(i64 257, i64 %55, i8* %path, i64 %35, i32 %mode.0) nounwind, !dbg !9289
  %57 = trunc i64 %56 to i32, !dbg !9289
  %cond31 = icmp eq i32 %57, -1
  br i1 %cond31, label %bb20, label %bb23

bb20:                                             ; preds = %__concretize_string.exit
  %58 = call i32* @__errno_location() nounwind readnone, !dbg !9302
  %59 = call i32 @klee_get_errno() nounwind, !dbg !9302
  store i32 %59, i32* %58, align 4, !dbg !9302
  br label %bb29

bb23:                                             ; preds = %__concretize_string.exit
  %60 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %18, i32 0, !dbg !9303
  store i32 %57, i32* %60, align 8, !dbg !9303
  %61 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %18, i32 1, !dbg !9304
  store i32 1, i32* %61, align 4, !dbg !9304
  %62 = and i32 %flags, 3, !dbg !9305
  switch i32 %62, label %bb27 [
    i32 0, label %bb24
    i32 1, label %bb26
  ]

bb24:                                             ; preds = %bb23
  store i32 5, i32* %61, align 4, !dbg !9306
  br label %bb29, !dbg !9306

bb26:                                             ; preds = %bb23
  store i32 9, i32* %61, align 4, !dbg !9307
  br label %bb29, !dbg !9307

bb27:                                             ; preds = %bb23
  store i32 13, i32* %61, align 4, !dbg !9308
  br label %bb29, !dbg !9308

bb29:                                             ; preds = %bb27, %bb26, %bb24, %bb20, %bb9, %bb1
  %.0 = phi i32 [ -1, %bb1 ], [ -1, %bb9 ], [ -1, %bb20 ], [ %fd_idx.0, %bb27 ], [ %fd_idx.0, %bb26 ], [ %fd_idx.0, %bb24 ]
  ret i32 %.0, !dbg !9277
}

define i32 @symlink(i8* %oldpath, i8* %newpath) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %oldpath, i32 0, i8 zeroext 1) nounwind, !dbg !9309
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9311
  br i1 %1, label %bb1, label %bb, !dbg !9311

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([42 x i8]* @.str31357, i64 0, i64 0)) nounwind, !dbg !9312
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9313
  store i32 2, i32* %2, align 4, !dbg !9313
  br label %bb6, !dbg !9314

bb1:                                              ; preds = %entry
  %3 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %newpath, i32 0, i8 zeroext 1) nounwind, !dbg !9315
  %4 = icmp eq %struct.exe_disk_file_t* %3, null, !dbg !9317
  br i1 %4, label %bb3, label %bb2, !dbg !9317

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([42 x i8]* @.str31357, i64 0, i64 0)) nounwind, !dbg !9318
  %5 = tail call i32* @__errno_location() nounwind readnone, !dbg !9319
  store i32 2, i32* %5, align 4, !dbg !9319
  br label %bb6, !dbg !9320

bb3:                                              ; preds = %bb1
  %6 = ptrtoint i8* %newpath to i64, !dbg !9321
  %7 = tail call i64 @klee_get_valuel(i64 %6) nounwind, !dbg !9321
  %8 = inttoptr i64 %7 to i8*, !dbg !9321
  %9 = icmp eq i8* %8, %newpath, !dbg !9324
  %10 = zext i1 %9 to i64, !dbg !9324
  tail call void @klee_assume(i64 %10) nounwind, !dbg !9324
  br label %bb.i, !dbg !9325

bb.i:                                             ; preds = %bb13.i, %bb3
  %sc.0.i = phi i8* [ %8, %bb3 ], [ %sc.1.i, %bb13.i ]
  %11 = phi i32 [ 0, %bb3 ], [ %24, %bb13.i ]
  %12 = load i8* %sc.0.i, align 1, !dbg !9326
  %13 = load i8* @UseConcretePath, align 1, !dbg !9327
  %toBool3not.i = icmp eq i8 %13, 0, !dbg !9327
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9327

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %11, -1
  %14 = and i32 %tmp.i, %11, !dbg !9327
  %15 = icmp eq i32 %14, 0, !dbg !9327
  br i1 %15, label %bb8.i, label %bb12.i, !dbg !9327

bb8.i:                                            ; preds = %bb7.i
  switch i8 %12, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9328
  br label %__concretize_string.exit, !dbg !9328

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9329
  %16 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9329
  br label %bb13.i, !dbg !9329

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %17 = sext i8 %12 to i64, !dbg !9330
  %18 = tail call i64 @klee_get_valuel(i64 %17) nounwind, !dbg !9330
  %19 = trunc i64 %18 to i8, !dbg !9330
  %20 = icmp eq i8 %19, %12, !dbg !9331
  %21 = zext i1 %20 to i64, !dbg !9331
  tail call void @klee_assume(i64 %21) nounwind, !dbg !9331
  store i8 %19, i8* %sc.0.i, align 1, !dbg !9332
  %22 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9332
  %23 = icmp eq i8 %19, 0, !dbg !9333
  br i1 %23, label %__concretize_string.exit, label %bb13.i, !dbg !9333

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %22, %bb12.i ], [ %16, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %24 = add i32 %11, 1, !dbg !9325
  br label %bb.i, !dbg !9325

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %25 = ptrtoint i8* %oldpath to i64, !dbg !9321
  %26 = tail call i64 @klee_get_valuel(i64 %25) nounwind, !dbg !9321
  %27 = inttoptr i64 %26 to i8*, !dbg !9321
  %28 = icmp eq i8* %27, %oldpath, !dbg !9324
  %29 = zext i1 %28 to i64, !dbg !9324
  tail call void @klee_assume(i64 %29) nounwind, !dbg !9324
  br label %bb.i10, !dbg !9325

bb.i10:                                           ; preds = %bb13.i18, %__concretize_string.exit
  %sc.0.i8 = phi i8* [ %27, %__concretize_string.exit ], [ %sc.1.i17, %bb13.i18 ]
  %30 = phi i32 [ 0, %__concretize_string.exit ], [ %43, %bb13.i18 ]
  %31 = load i8* %sc.0.i8, align 1, !dbg !9326
  %32 = load i8* @UseConcretePath, align 1, !dbg !9327
  %toBool3not.i9 = icmp eq i8 %32, 0, !dbg !9327
  br i1 %toBool3not.i9, label %bb7.i12, label %bb12.i16, !dbg !9327

bb7.i12:                                          ; preds = %bb.i10
  %tmp.i11 = add i32 %30, -1
  %33 = and i32 %tmp.i11, %30, !dbg !9327
  %34 = icmp eq i32 %33, 0, !dbg !9327
  br i1 %34, label %bb8.i13, label %bb12.i16, !dbg !9327

bb8.i13:                                          ; preds = %bb7.i12
  switch i8 %31, label %bb13.i18 [
    i8 0, label %bb9.i14
    i8 47, label %bb11.i15
  ]

bb9.i14:                                          ; preds = %bb8.i13
  store i8 0, i8* %sc.0.i8, align 1, !dbg !9328
  br label %__concretize_string.exit19, !dbg !9328

bb11.i15:                                         ; preds = %bb8.i13
  store i8 47, i8* %sc.0.i8, align 1, !dbg !9329
  %35 = getelementptr inbounds i8* %sc.0.i8, i64 1, !dbg !9329
  br label %bb13.i18, !dbg !9329

bb12.i16:                                         ; preds = %bb7.i12, %bb.i10
  %36 = sext i8 %31 to i64, !dbg !9330
  %37 = tail call i64 @klee_get_valuel(i64 %36) nounwind, !dbg !9330
  %38 = trunc i64 %37 to i8, !dbg !9330
  %39 = icmp eq i8 %38, %31, !dbg !9331
  %40 = zext i1 %39 to i64, !dbg !9331
  tail call void @klee_assume(i64 %40) nounwind, !dbg !9331
  store i8 %38, i8* %sc.0.i8, align 1, !dbg !9332
  %41 = getelementptr inbounds i8* %sc.0.i8, i64 1, !dbg !9332
  %42 = icmp eq i8 %38, 0, !dbg !9333
  br i1 %42, label %__concretize_string.exit19, label %bb13.i18, !dbg !9333

bb13.i18:                                         ; preds = %bb12.i16, %bb11.i15, %bb8.i13
  %sc.1.i17 = phi i8* [ %41, %bb12.i16 ], [ %35, %bb11.i15 ], [ %sc.0.i8, %bb8.i13 ]
  %43 = add i32 %30, 1, !dbg !9325
  br label %bb.i10, !dbg !9325

__concretize_string.exit19:                       ; preds = %bb12.i16, %bb9.i14
  %44 = tail call i64 (i64, ...)* @syscall(i64 88, i8* %oldpath, i8* %newpath) nounwind, !dbg !9323
  %45 = trunc i64 %44 to i32, !dbg !9323
  %46 = icmp eq i32 %45, -1, !dbg !9334
  br i1 %46, label %bb4, label %bb6, !dbg !9334

bb4:                                              ; preds = %__concretize_string.exit19
  %47 = tail call i32* @__errno_location() nounwind readnone, !dbg !9335
  %48 = tail call i32 @klee_get_errno() nounwind, !dbg !9335
  store i32 %48, i32* %47, align 4, !dbg !9335
  br label %bb6, !dbg !9335

bb6:                                              ; preds = %bb4, %__concretize_string.exit19, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %45, %__concretize_string.exit19 ]
  ret i32 %.0, !dbg !9314
}

define i32 @link(i8* %oldpath, i8* %newpath) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %oldpath, i32 0, i8 zeroext 1) nounwind, !dbg !9336
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9338
  br i1 %1, label %bb1, label %bb, !dbg !9338

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([39 x i8]* @.str32358, i64 0, i64 0)) nounwind, !dbg !9339
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9340
  store i32 2, i32* %2, align 4, !dbg !9340
  br label %bb6, !dbg !9341

bb1:                                              ; preds = %entry
  %3 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %newpath, i32 0, i8 zeroext 1) nounwind, !dbg !9342
  %4 = icmp eq %struct.exe_disk_file_t* %3, null, !dbg !9344
  br i1 %4, label %bb3, label %bb2, !dbg !9344

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([39 x i8]* @.str32358, i64 0, i64 0)) nounwind, !dbg !9345
  %5 = tail call i32* @__errno_location() nounwind readnone, !dbg !9346
  store i32 2, i32* %5, align 4, !dbg !9346
  br label %bb6, !dbg !9347

bb3:                                              ; preds = %bb1
  %6 = ptrtoint i8* %newpath to i64, !dbg !9348
  %7 = tail call i64 @klee_get_valuel(i64 %6) nounwind, !dbg !9348
  %8 = inttoptr i64 %7 to i8*, !dbg !9348
  %9 = icmp eq i8* %8, %newpath, !dbg !9351
  %10 = zext i1 %9 to i64, !dbg !9351
  tail call void @klee_assume(i64 %10) nounwind, !dbg !9351
  br label %bb.i, !dbg !9352

bb.i:                                             ; preds = %bb13.i, %bb3
  %sc.0.i = phi i8* [ %8, %bb3 ], [ %sc.1.i, %bb13.i ]
  %11 = phi i32 [ 0, %bb3 ], [ %24, %bb13.i ]
  %12 = load i8* %sc.0.i, align 1, !dbg !9353
  %13 = load i8* @UseConcretePath, align 1, !dbg !9354
  %toBool3not.i = icmp eq i8 %13, 0, !dbg !9354
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9354

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %11, -1
  %14 = and i32 %tmp.i, %11, !dbg !9354
  %15 = icmp eq i32 %14, 0, !dbg !9354
  br i1 %15, label %bb8.i, label %bb12.i, !dbg !9354

bb8.i:                                            ; preds = %bb7.i
  switch i8 %12, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9355
  br label %__concretize_string.exit, !dbg !9355

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9356
  %16 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9356
  br label %bb13.i, !dbg !9356

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %17 = sext i8 %12 to i64, !dbg !9357
  %18 = tail call i64 @klee_get_valuel(i64 %17) nounwind, !dbg !9357
  %19 = trunc i64 %18 to i8, !dbg !9357
  %20 = icmp eq i8 %19, %12, !dbg !9358
  %21 = zext i1 %20 to i64, !dbg !9358
  tail call void @klee_assume(i64 %21) nounwind, !dbg !9358
  store i8 %19, i8* %sc.0.i, align 1, !dbg !9359
  %22 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9359
  %23 = icmp eq i8 %19, 0, !dbg !9360
  br i1 %23, label %__concretize_string.exit, label %bb13.i, !dbg !9360

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %22, %bb12.i ], [ %16, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %24 = add i32 %11, 1, !dbg !9352
  br label %bb.i, !dbg !9352

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %25 = ptrtoint i8* %oldpath to i64, !dbg !9348
  %26 = tail call i64 @klee_get_valuel(i64 %25) nounwind, !dbg !9348
  %27 = inttoptr i64 %26 to i8*, !dbg !9348
  %28 = icmp eq i8* %27, %oldpath, !dbg !9351
  %29 = zext i1 %28 to i64, !dbg !9351
  tail call void @klee_assume(i64 %29) nounwind, !dbg !9351
  br label %bb.i10, !dbg !9352

bb.i10:                                           ; preds = %bb13.i18, %__concretize_string.exit
  %sc.0.i8 = phi i8* [ %27, %__concretize_string.exit ], [ %sc.1.i17, %bb13.i18 ]
  %30 = phi i32 [ 0, %__concretize_string.exit ], [ %43, %bb13.i18 ]
  %31 = load i8* %sc.0.i8, align 1, !dbg !9353
  %32 = load i8* @UseConcretePath, align 1, !dbg !9354
  %toBool3not.i9 = icmp eq i8 %32, 0, !dbg !9354
  br i1 %toBool3not.i9, label %bb7.i12, label %bb12.i16, !dbg !9354

bb7.i12:                                          ; preds = %bb.i10
  %tmp.i11 = add i32 %30, -1
  %33 = and i32 %tmp.i11, %30, !dbg !9354
  %34 = icmp eq i32 %33, 0, !dbg !9354
  br i1 %34, label %bb8.i13, label %bb12.i16, !dbg !9354

bb8.i13:                                          ; preds = %bb7.i12
  switch i8 %31, label %bb13.i18 [
    i8 0, label %bb9.i14
    i8 47, label %bb11.i15
  ]

bb9.i14:                                          ; preds = %bb8.i13
  store i8 0, i8* %sc.0.i8, align 1, !dbg !9355
  br label %__concretize_string.exit19, !dbg !9355

bb11.i15:                                         ; preds = %bb8.i13
  store i8 47, i8* %sc.0.i8, align 1, !dbg !9356
  %35 = getelementptr inbounds i8* %sc.0.i8, i64 1, !dbg !9356
  br label %bb13.i18, !dbg !9356

bb12.i16:                                         ; preds = %bb7.i12, %bb.i10
  %36 = sext i8 %31 to i64, !dbg !9357
  %37 = tail call i64 @klee_get_valuel(i64 %36) nounwind, !dbg !9357
  %38 = trunc i64 %37 to i8, !dbg !9357
  %39 = icmp eq i8 %38, %31, !dbg !9358
  %40 = zext i1 %39 to i64, !dbg !9358
  tail call void @klee_assume(i64 %40) nounwind, !dbg !9358
  store i8 %38, i8* %sc.0.i8, align 1, !dbg !9359
  %41 = getelementptr inbounds i8* %sc.0.i8, i64 1, !dbg !9359
  %42 = icmp eq i8 %38, 0, !dbg !9360
  br i1 %42, label %__concretize_string.exit19, label %bb13.i18, !dbg !9360

bb13.i18:                                         ; preds = %bb12.i16, %bb11.i15, %bb8.i13
  %sc.1.i17 = phi i8* [ %41, %bb12.i16 ], [ %35, %bb11.i15 ], [ %sc.0.i8, %bb8.i13 ]
  %43 = add i32 %30, 1, !dbg !9352
  br label %bb.i10, !dbg !9352

__concretize_string.exit19:                       ; preds = %bb12.i16, %bb9.i14
  %44 = tail call i64 (i64, ...)* @syscall(i64 86, i8* %oldpath, i8* %newpath) nounwind, !dbg !9350
  %45 = trunc i64 %44 to i32, !dbg !9350
  %46 = icmp eq i32 %45, -1, !dbg !9361
  br i1 %46, label %bb4, label %bb6, !dbg !9361

bb4:                                              ; preds = %__concretize_string.exit19
  %47 = tail call i32* @__errno_location() nounwind readnone, !dbg !9362
  %48 = tail call i32 @klee_get_errno() nounwind, !dbg !9362
  store i32 %48, i32* %47, align 4, !dbg !9362
  br label %bb6, !dbg !9362

bb6:                                              ; preds = %bb4, %__concretize_string.exit19, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %45, %__concretize_string.exit19 ]
  ret i32 %.0, !dbg !9341
}

define i32 @futimesat(i32 %fd, i8* %path, %struct.timespec* %times) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9363
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9365
  br i1 %1, label %bb1, label %bb, !dbg !9365

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([44 x i8]* @.str33359, i64 0, i64 0)) nounwind, !dbg !9366
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9367
  store i32 2, i32* %2, align 4, !dbg !9367
  br label %bb12, !dbg !9368

bb1:                                              ; preds = %entry
  %3 = icmp ult i32 %fd, 32, !dbg !9369
  br i1 %3, label %bb.i, label %bb6, !dbg !9369

bb.i:                                             ; preds = %bb1
  %4 = sext i32 %fd to i64, !dbg !9371
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 1, !dbg !9372
  %6 = load i32* %5, align 4, !dbg !9372
  %7 = and i32 %6, 1
  %toBool.i = icmp eq i32 %7, 0, !dbg !9372
  br i1 %toBool.i, label %bb6, label %__get_file.exit, !dbg !9372

__get_file.exit:                                  ; preds = %bb.i
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, !dbg !9371
  %cond = icmp eq %struct.exe_file_t* %8, null
  br i1 %cond, label %bb6, label %bb2

bb2:                                              ; preds = %__get_file.exit
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 3, !dbg !9373
  %10 = load %struct.exe_disk_file_t** %9, align 8, !dbg !9373
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !9373
  br i1 %11, label %bb5, label %bb3, !dbg !9373

bb3:                                              ; preds = %bb2
  tail call void @klee_warning(i8* getelementptr inbounds ([55 x i8]* @.str34360, i64 0, i64 0)) nounwind, !dbg !9374
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !9375
  store i32 2, i32* %12, align 4, !dbg !9375
  br label %bb12, !dbg !9376

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 0, !dbg !9377
  %14 = load i32* %13, align 8, !dbg !9377
  br label %bb6, !dbg !9377

bb6:                                              ; preds = %bb5, %__get_file.exit, %bb.i, %bb1
  %fd_addr.0 = phi i32 [ %14, %bb5 ], [ %fd, %__get_file.exit ], [ %fd, %bb.i ], [ %fd, %bb1 ]
  %15 = icmp eq i8* %path, null, !dbg !9378
  br i1 %15, label %bb9, label %bb7, !dbg !9378

bb7:                                              ; preds = %bb6
  %16 = ptrtoint i8* %path to i64, !dbg !9379
  %17 = tail call i64 @klee_get_valuel(i64 %16) nounwind, !dbg !9379
  %18 = inttoptr i64 %17 to i8*, !dbg !9379
  %19 = icmp eq i8* %18, %path, !dbg !9381
  %20 = zext i1 %19 to i64, !dbg !9381
  tail call void @klee_assume(i64 %20) nounwind, !dbg !9381
  br label %bb.i14, !dbg !9382

bb.i14:                                           ; preds = %bb13.i, %bb7
  %sc.0.i = phi i8* [ %18, %bb7 ], [ %sc.1.i, %bb13.i ]
  %21 = phi i32 [ 0, %bb7 ], [ %34, %bb13.i ]
  %22 = load i8* %sc.0.i, align 1, !dbg !9383
  %23 = load i8* @UseConcretePath, align 1, !dbg !9384
  %toBool3not.i = icmp eq i8 %23, 0, !dbg !9384
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9384

bb7.i:                                            ; preds = %bb.i14
  %tmp.i = add i32 %21, -1
  %24 = and i32 %tmp.i, %21, !dbg !9384
  %25 = icmp eq i32 %24, 0, !dbg !9384
  br i1 %25, label %bb8.i, label %bb12.i, !dbg !9384

bb8.i:                                            ; preds = %bb7.i
  switch i8 %22, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9385
  br label %bb9, !dbg !9385

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9386
  %26 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9386
  br label %bb13.i, !dbg !9386

bb12.i:                                           ; preds = %bb7.i, %bb.i14
  %27 = sext i8 %22 to i64, !dbg !9387
  %28 = tail call i64 @klee_get_valuel(i64 %27) nounwind, !dbg !9387
  %29 = trunc i64 %28 to i8, !dbg !9387
  %30 = icmp eq i8 %29, %22, !dbg !9388
  %31 = zext i1 %30 to i64, !dbg !9388
  tail call void @klee_assume(i64 %31) nounwind, !dbg !9388
  store i8 %29, i8* %sc.0.i, align 1, !dbg !9389
  %32 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9389
  %33 = icmp eq i8 %29, 0, !dbg !9390
  br i1 %33, label %bb9, label %bb13.i, !dbg !9390

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %32, %bb12.i ], [ %26, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %34 = add i32 %21, 1, !dbg !9382
  br label %bb.i14, !dbg !9382

bb9:                                              ; preds = %bb12.i, %bb9.i, %bb6
  %iftmp.64.0 = phi i8* [ null, %bb6 ], [ %path, %bb9.i ], [ %path, %bb12.i ]
  %35 = sext i32 %fd_addr.0 to i64, !dbg !9378
  %36 = tail call i64 (i64, ...)* @syscall(i64 261, i64 %35, i8* %iftmp.64.0, %struct.timespec* %times) nounwind, !dbg !9378
  %37 = trunc i64 %36 to i32, !dbg !9378
  %38 = icmp eq i32 %37, -1, !dbg !9391
  br i1 %38, label %bb10, label %bb12, !dbg !9391

bb10:                                             ; preds = %bb9
  %39 = tail call i32* @__errno_location() nounwind readnone, !dbg !9392
  %40 = tail call i32 @klee_get_errno() nounwind, !dbg !9392
  store i32 %40, i32* %39, align 4, !dbg !9392
  br label %bb12, !dbg !9392

bb12:                                             ; preds = %bb10, %bb9, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb10 ], [ %37, %bb9 ]
  ret i32 %.0, !dbg !9368
}

define i32 @unlinkat(i32 %fd, i8* %path, i32 %flags) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9393
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9395
  br i1 %1, label %bb1, label %bb, !dbg !9395

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([43 x i8]* @.str35361, i64 0, i64 0)) nounwind, !dbg !9396
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9397
  store i32 2, i32* %2, align 4, !dbg !9397
  br label %bb12, !dbg !9398

bb1:                                              ; preds = %entry
  %3 = icmp ult i32 %fd, 32, !dbg !9399
  br i1 %3, label %bb.i, label %bb6, !dbg !9399

bb.i:                                             ; preds = %bb1
  %4 = sext i32 %fd to i64, !dbg !9401
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 1, !dbg !9402
  %6 = load i32* %5, align 4, !dbg !9402
  %7 = and i32 %6, 1
  %toBool.i = icmp eq i32 %7, 0, !dbg !9402
  br i1 %toBool.i, label %bb6, label %__get_file.exit, !dbg !9402

__get_file.exit:                                  ; preds = %bb.i
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, !dbg !9401
  %cond = icmp eq %struct.exe_file_t* %8, null
  br i1 %cond, label %bb6, label %bb2

bb2:                                              ; preds = %__get_file.exit
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 3, !dbg !9403
  %10 = load %struct.exe_disk_file_t** %9, align 8, !dbg !9403
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !9403
  br i1 %11, label %bb5, label %bb3, !dbg !9403

bb3:                                              ; preds = %bb2
  tail call void @klee_warning(i8* getelementptr inbounds ([54 x i8]* @.str36362, i64 0, i64 0)) nounwind, !dbg !9404
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !9405
  store i32 2, i32* %12, align 4, !dbg !9405
  br label %bb12, !dbg !9406

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 0, !dbg !9407
  %14 = load i32* %13, align 8, !dbg !9407
  br label %bb6, !dbg !9407

bb6:                                              ; preds = %bb5, %__get_file.exit, %bb.i, %bb1
  %fd_addr.0 = phi i32 [ %14, %bb5 ], [ %fd, %__get_file.exit ], [ %fd, %bb.i ], [ %fd, %bb1 ]
  %15 = sext i32 %flags to i64, !dbg !9408
  %16 = icmp eq i8* %path, null, !dbg !9408
  br i1 %16, label %bb9, label %bb7, !dbg !9408

bb7:                                              ; preds = %bb6
  %17 = ptrtoint i8* %path to i64, !dbg !9409
  %18 = tail call i64 @klee_get_valuel(i64 %17) nounwind, !dbg !9409
  %19 = inttoptr i64 %18 to i8*, !dbg !9409
  %20 = icmp eq i8* %19, %path, !dbg !9411
  %21 = zext i1 %20 to i64, !dbg !9411
  tail call void @klee_assume(i64 %21) nounwind, !dbg !9411
  br label %bb.i14, !dbg !9412

bb.i14:                                           ; preds = %bb13.i, %bb7
  %sc.0.i = phi i8* [ %19, %bb7 ], [ %sc.1.i, %bb13.i ]
  %22 = phi i32 [ 0, %bb7 ], [ %35, %bb13.i ]
  %23 = load i8* %sc.0.i, align 1, !dbg !9413
  %24 = load i8* @UseConcretePath, align 1, !dbg !9414
  %toBool3not.i = icmp eq i8 %24, 0, !dbg !9414
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9414

bb7.i:                                            ; preds = %bb.i14
  %tmp.i = add i32 %22, -1
  %25 = and i32 %tmp.i, %22, !dbg !9414
  %26 = icmp eq i32 %25, 0, !dbg !9414
  br i1 %26, label %bb8.i, label %bb12.i, !dbg !9414

bb8.i:                                            ; preds = %bb7.i
  switch i8 %23, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9415
  br label %bb9, !dbg !9415

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9416
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9416
  br label %bb13.i, !dbg !9416

bb12.i:                                           ; preds = %bb7.i, %bb.i14
  %28 = sext i8 %23 to i64, !dbg !9417
  %29 = tail call i64 @klee_get_valuel(i64 %28) nounwind, !dbg !9417
  %30 = trunc i64 %29 to i8, !dbg !9417
  %31 = icmp eq i8 %30, %23, !dbg !9418
  %32 = zext i1 %31 to i64, !dbg !9418
  tail call void @klee_assume(i64 %32) nounwind, !dbg !9418
  store i8 %30, i8* %sc.0.i, align 1, !dbg !9419
  %33 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9419
  %34 = icmp eq i8 %30, 0, !dbg !9420
  br i1 %34, label %bb9, label %bb13.i, !dbg !9420

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %33, %bb12.i ], [ %27, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %35 = add i32 %22, 1, !dbg !9412
  br label %bb.i14, !dbg !9412

bb9:                                              ; preds = %bb12.i, %bb9.i, %bb6
  %iftmp.63.0 = phi i8* [ null, %bb6 ], [ %path, %bb9.i ], [ %path, %bb12.i ]
  %36 = sext i32 %fd_addr.0 to i64, !dbg !9408
  %37 = tail call i64 (i64, ...)* @syscall(i64 263, i64 %36, i8* %iftmp.63.0, i64 %15) nounwind, !dbg !9408
  %38 = trunc i64 %37 to i32, !dbg !9408
  %39 = icmp eq i32 %38, -1, !dbg !9421
  br i1 %39, label %bb10, label %bb12, !dbg !9421

bb10:                                             ; preds = %bb9
  %40 = tail call i32* @__errno_location() nounwind readnone, !dbg !9422
  %41 = tail call i32 @klee_get_errno() nounwind, !dbg !9422
  store i32 %41, i32* %40, align 4, !dbg !9422
  br label %bb12, !dbg !9422

bb12:                                             ; preds = %bb10, %bb9, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb10 ], [ %38, %bb9 ]
  ret i32 %.0, !dbg !9398
}

define i32 @fstatat(i32 %fd, i8* %path, %struct.stat* %buf, i32 %flags) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9423
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9425
  br i1 %1, label %bb1, label %bb, !dbg !9425

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([42 x i8]* @.str37363, i64 0, i64 0)) nounwind, !dbg !9426
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9427
  store i32 2, i32* %2, align 4, !dbg !9427
  br label %bb12, !dbg !9428

bb1:                                              ; preds = %entry
  %3 = icmp ult i32 %fd, 32, !dbg !9429
  br i1 %3, label %bb.i, label %bb6, !dbg !9429

bb.i:                                             ; preds = %bb1
  %4 = sext i32 %fd to i64, !dbg !9431
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 1, !dbg !9432
  %6 = load i32* %5, align 4, !dbg !9432
  %7 = and i32 %6, 1
  %toBool.i = icmp eq i32 %7, 0, !dbg !9432
  br i1 %toBool.i, label %bb6, label %__get_file.exit, !dbg !9432

__get_file.exit:                                  ; preds = %bb.i
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, !dbg !9431
  %cond = icmp eq %struct.exe_file_t* %8, null
  br i1 %cond, label %bb6, label %bb2

bb2:                                              ; preds = %__get_file.exit
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 3, !dbg !9433
  %10 = load %struct.exe_disk_file_t** %9, align 8, !dbg !9433
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !9433
  br i1 %11, label %bb5, label %bb3, !dbg !9433

bb3:                                              ; preds = %bb2
  tail call void @klee_warning(i8* getelementptr inbounds ([53 x i8]* @.str38364, i64 0, i64 0)) nounwind, !dbg !9434
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !9435
  store i32 2, i32* %12, align 4, !dbg !9435
  br label %bb12, !dbg !9436

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 0, !dbg !9437
  %14 = load i32* %13, align 8, !dbg !9437
  br label %bb6, !dbg !9437

bb6:                                              ; preds = %bb5, %__get_file.exit, %bb.i, %bb1
  %fd_addr.0 = phi i32 [ %14, %bb5 ], [ %fd, %__get_file.exit ], [ %fd, %bb.i ], [ %fd, %bb1 ]
  %15 = sext i32 %flags to i64, !dbg !9438
  %16 = icmp eq i8* %path, null, !dbg !9438
  br i1 %16, label %bb9, label %bb7, !dbg !9438

bb7:                                              ; preds = %bb6
  %17 = ptrtoint i8* %path to i64, !dbg !9439
  %18 = tail call i64 @klee_get_valuel(i64 %17) nounwind, !dbg !9439
  %19 = inttoptr i64 %18 to i8*, !dbg !9439
  %20 = icmp eq i8* %19, %path, !dbg !9441
  %21 = zext i1 %20 to i64, !dbg !9441
  tail call void @klee_assume(i64 %21) nounwind, !dbg !9441
  br label %bb.i14, !dbg !9442

bb.i14:                                           ; preds = %bb13.i, %bb7
  %sc.0.i = phi i8* [ %19, %bb7 ], [ %sc.1.i, %bb13.i ]
  %22 = phi i32 [ 0, %bb7 ], [ %35, %bb13.i ]
  %23 = load i8* %sc.0.i, align 1, !dbg !9443
  %24 = load i8* @UseConcretePath, align 1, !dbg !9444
  %toBool3not.i = icmp eq i8 %24, 0, !dbg !9444
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9444

bb7.i:                                            ; preds = %bb.i14
  %tmp.i = add i32 %22, -1
  %25 = and i32 %tmp.i, %22, !dbg !9444
  %26 = icmp eq i32 %25, 0, !dbg !9444
  br i1 %26, label %bb8.i, label %bb12.i, !dbg !9444

bb8.i:                                            ; preds = %bb7.i
  switch i8 %23, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9445
  br label %bb9, !dbg !9445

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9446
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9446
  br label %bb13.i, !dbg !9446

bb12.i:                                           ; preds = %bb7.i, %bb.i14
  %28 = sext i8 %23 to i64, !dbg !9447
  %29 = tail call i64 @klee_get_valuel(i64 %28) nounwind, !dbg !9447
  %30 = trunc i64 %29 to i8, !dbg !9447
  %31 = icmp eq i8 %30, %23, !dbg !9448
  %32 = zext i1 %31 to i64, !dbg !9448
  tail call void @klee_assume(i64 %32) nounwind, !dbg !9448
  store i8 %30, i8* %sc.0.i, align 1, !dbg !9449
  %33 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9449
  %34 = icmp eq i8 %30, 0, !dbg !9450
  br i1 %34, label %bb9, label %bb13.i, !dbg !9450

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %33, %bb12.i ], [ %27, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %35 = add i32 %22, 1, !dbg !9442
  br label %bb.i14, !dbg !9442

bb9:                                              ; preds = %bb12.i, %bb9.i, %bb6
  %iftmp.62.0 = phi i8* [ null, %bb6 ], [ %path, %bb9.i ], [ %path, %bb12.i ]
  %36 = sext i32 %fd_addr.0 to i64, !dbg !9438
  %37 = tail call i64 (i64, ...)* @syscall(i64 262, i64 %36, i8* %iftmp.62.0, %struct.stat* %buf, i64 %15) nounwind, !dbg !9438
  %38 = trunc i64 %37 to i32, !dbg !9438
  %39 = icmp eq i32 %38, -1, !dbg !9451
  br i1 %39, label %bb10, label %bb12, !dbg !9451

bb10:                                             ; preds = %bb9
  %40 = tail call i32* @__errno_location() nounwind readnone, !dbg !9452
  %41 = tail call i32 @klee_get_errno() nounwind, !dbg !9452
  store i32 %41, i32* %40, align 4, !dbg !9452
  br label %bb12, !dbg !9452

bb12:                                             ; preds = %bb10, %bb9, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb10 ], [ %38, %bb9 ]
  ret i32 %.0, !dbg !9428
}

define i32 @lchown(i8* %path, i32 %owner, i32 %group) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9453
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9455
  br i1 %1, label %bb1, label %bb, !dbg !9455

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([32 x i8]* @.str4330, i64 0, i64 0)) nounwind, !dbg !9456
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9458
  store i32 1, i32* %2, align 4, !dbg !9458
  br label %bb4, !dbg !9457

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !9459
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !9459
  %5 = inttoptr i64 %4 to i8*, !dbg !9459
  %6 = icmp eq i8* %5, %path, !dbg !9462
  %7 = zext i1 %6 to i64, !dbg !9462
  tail call void @klee_assume(i64 %7) nounwind, !dbg !9462
  br label %bb.i, !dbg !9463

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !9464
  %10 = load i8* @UseConcretePath, align 1, !dbg !9465
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !9465
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9465

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !9465
  %12 = icmp eq i32 %11, 0, !dbg !9465
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !9465

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9466
  br label %__concretize_string.exit, !dbg !9466

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9467
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9467
  br label %bb13.i, !dbg !9467

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !9468
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !9468
  %16 = trunc i64 %15 to i8, !dbg !9468
  %17 = icmp eq i8 %16, %9, !dbg !9469
  %18 = zext i1 %17 to i64, !dbg !9469
  tail call void @klee_assume(i64 %18) nounwind, !dbg !9469
  store i8 %16, i8* %sc.0.i, align 1, !dbg !9470
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9470
  %20 = icmp eq i8 %16, 0, !dbg !9471
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !9471

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !9463
  br label %bb.i, !dbg !9463

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 92, i8* %path, i32 %owner, i32 %group) nounwind, !dbg !9461
  %23 = trunc i64 %22 to i32, !dbg !9461
  %24 = icmp eq i32 %23, -1, !dbg !9472
  br i1 %24, label %bb2, label %bb4, !dbg !9472

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !9473
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !9473
  store i32 %26, i32* %25, align 4, !dbg !9473
  br label %bb4, !dbg !9473

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9457
}

define i32 @chown(i8* %path, i32 %owner, i32 %group) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9474
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9476
  br i1 %1, label %bb1, label %bb, !dbg !9476

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([32 x i8]* @.str4330, i64 0, i64 0)) nounwind, !dbg !9477
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9479
  store i32 1, i32* %2, align 4, !dbg !9479
  br label %bb4, !dbg !9478

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !9480
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !9480
  %5 = inttoptr i64 %4 to i8*, !dbg !9480
  %6 = icmp eq i8* %5, %path, !dbg !9483
  %7 = zext i1 %6 to i64, !dbg !9483
  tail call void @klee_assume(i64 %7) nounwind, !dbg !9483
  br label %bb.i, !dbg !9484

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !9485
  %10 = load i8* @UseConcretePath, align 1, !dbg !9486
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !9486
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9486

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !9486
  %12 = icmp eq i32 %11, 0, !dbg !9486
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !9486

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9487
  br label %__concretize_string.exit, !dbg !9487

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9488
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9488
  br label %bb13.i, !dbg !9488

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !9489
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !9489
  %16 = trunc i64 %15 to i8, !dbg !9489
  %17 = icmp eq i8 %16, %9, !dbg !9490
  %18 = zext i1 %17 to i64, !dbg !9490
  tail call void @klee_assume(i64 %18) nounwind, !dbg !9490
  store i8 %16, i8* %sc.0.i, align 1, !dbg !9491
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9491
  %20 = icmp eq i8 %16, 0, !dbg !9492
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !9492

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !9484
  br label %bb.i, !dbg !9484

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 94, i8* %path, i32 %owner, i32 %group) nounwind, !dbg !9482
  %23 = trunc i64 %22 to i32, !dbg !9482
  %24 = icmp eq i32 %23, -1, !dbg !9493
  br i1 %24, label %bb2, label %bb4, !dbg !9493

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !9494
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !9494
  store i32 %26, i32* %25, align 4, !dbg !9494
  br label %bb4, !dbg !9494

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9478
}

define i32 @chdir(i8* %path) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9495
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9497
  br i1 %1, label %bb1, label %bb, !dbg !9497

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str5331, i64 0, i64 0)) nounwind, !dbg !9498
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9499
  store i32 2, i32* %2, align 4, !dbg !9499
  br label %bb4, !dbg !9500

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !9501
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !9501
  %5 = inttoptr i64 %4 to i8*, !dbg !9501
  %6 = icmp eq i8* %5, %path, !dbg !9504
  %7 = zext i1 %6 to i64, !dbg !9504
  tail call void @klee_assume(i64 %7) nounwind, !dbg !9504
  br label %bb.i, !dbg !9505

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !9506
  %10 = load i8* @UseConcretePath, align 1, !dbg !9507
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !9507
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9507

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !9507
  %12 = icmp eq i32 %11, 0, !dbg !9507
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !9507

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9508
  br label %__concretize_string.exit, !dbg !9508

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9509
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9509
  br label %bb13.i, !dbg !9509

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !9510
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !9510
  %16 = trunc i64 %15 to i8, !dbg !9510
  %17 = icmp eq i8 %16, %9, !dbg !9511
  %18 = zext i1 %17 to i64, !dbg !9511
  tail call void @klee_assume(i64 %18) nounwind, !dbg !9511
  store i8 %16, i8* %sc.0.i, align 1, !dbg !9512
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9512
  %20 = icmp eq i8 %16, 0, !dbg !9513
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !9513

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !9505
  br label %bb.i, !dbg !9505

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 80, i8* %path) nounwind, !dbg !9503
  %23 = trunc i64 %22 to i32, !dbg !9503
  %24 = icmp eq i32 %23, -1, !dbg !9514
  br i1 %24, label %bb2, label %bb4, !dbg !9514

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !9515
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !9515
  store i32 %26, i32* %25, align 4, !dbg !9515
  br label %bb4, !dbg !9515

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9500
}

define i32 @euidaccess(i8* %pathname, i32 %mode) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !9516
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9518
  br i1 %1, label %bb1, label %bb4, !dbg !9518

bb1:                                              ; preds = %entry
  %2 = ptrtoint i8* %pathname to i64, !dbg !9519
  %3 = tail call i64 @klee_get_valuel(i64 %2) nounwind, !dbg !9519
  %4 = inttoptr i64 %3 to i8*, !dbg !9519
  %5 = icmp eq i8* %4, %pathname, !dbg !9522
  %6 = zext i1 %5 to i64, !dbg !9522
  tail call void @klee_assume(i64 %6) nounwind, !dbg !9522
  br label %bb.i, !dbg !9523

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %4, %bb1 ], [ %sc.1.i, %bb13.i ]
  %7 = phi i32 [ 0, %bb1 ], [ %20, %bb13.i ]
  %8 = load i8* %sc.0.i, align 1, !dbg !9524
  %9 = load i8* @UseConcretePath, align 1, !dbg !9525
  %toBool3not.i = icmp eq i8 %9, 0, !dbg !9525
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9525

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %7, -1
  %10 = and i32 %tmp.i, %7, !dbg !9525
  %11 = icmp eq i32 %10, 0, !dbg !9525
  br i1 %11, label %bb8.i, label %bb12.i, !dbg !9525

bb8.i:                                            ; preds = %bb7.i
  switch i8 %8, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9526
  br label %__concretize_string.exit, !dbg !9526

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9527
  %12 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9527
  br label %bb13.i, !dbg !9527

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %13 = sext i8 %8 to i64, !dbg !9528
  %14 = tail call i64 @klee_get_valuel(i64 %13) nounwind, !dbg !9528
  %15 = trunc i64 %14 to i8, !dbg !9528
  %16 = icmp eq i8 %15, %8, !dbg !9529
  %17 = zext i1 %16 to i64, !dbg !9529
  tail call void @klee_assume(i64 %17) nounwind, !dbg !9529
  store i8 %15, i8* %sc.0.i, align 1, !dbg !9530
  %18 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9530
  %19 = icmp eq i8 %15, 0, !dbg !9531
  br i1 %19, label %__concretize_string.exit, label %bb13.i, !dbg !9531

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %18, %bb12.i ], [ %12, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %20 = add i32 %7, 1, !dbg !9523
  br label %bb.i, !dbg !9523

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %21 = tail call i64 (i64, ...)* @syscall(i64 21, i8* %pathname, i32 %mode) nounwind, !dbg !9521
  %22 = trunc i64 %21 to i32, !dbg !9521
  %23 = icmp eq i32 %22, -1, !dbg !9532
  br i1 %23, label %bb2, label %bb4, !dbg !9532

bb2:                                              ; preds = %__concretize_string.exit
  %24 = tail call i32* @__errno_location() nounwind readnone, !dbg !9533
  %25 = tail call i32 @klee_get_errno() nounwind, !dbg !9533
  store i32 %25, i32* %24, align 4, !dbg !9533
  br label %bb4, !dbg !9533

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %entry
  %.0 = phi i32 [ 0, %entry ], [ -1, %bb2 ], [ %22, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9534
}

define i32 @access(i8* %pathname, i32 %mode) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !9535
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9537
  br i1 %1, label %bb1, label %bb4, !dbg !9537

bb1:                                              ; preds = %entry
  %2 = ptrtoint i8* %pathname to i64, !dbg !9538
  %3 = tail call i64 @klee_get_valuel(i64 %2) nounwind, !dbg !9538
  %4 = inttoptr i64 %3 to i8*, !dbg !9538
  %5 = icmp eq i8* %4, %pathname, !dbg !9541
  %6 = zext i1 %5 to i64, !dbg !9541
  tail call void @klee_assume(i64 %6) nounwind, !dbg !9541
  br label %bb.i, !dbg !9542

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %4, %bb1 ], [ %sc.1.i, %bb13.i ]
  %7 = phi i32 [ 0, %bb1 ], [ %20, %bb13.i ]
  %8 = load i8* %sc.0.i, align 1, !dbg !9543
  %9 = load i8* @UseConcretePath, align 1, !dbg !9544
  %toBool3not.i = icmp eq i8 %9, 0, !dbg !9544
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9544

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %7, -1
  %10 = and i32 %tmp.i, %7, !dbg !9544
  %11 = icmp eq i32 %10, 0, !dbg !9544
  br i1 %11, label %bb8.i, label %bb12.i, !dbg !9544

bb8.i:                                            ; preds = %bb7.i
  switch i8 %8, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9545
  br label %__concretize_string.exit, !dbg !9545

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9546
  %12 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9546
  br label %bb13.i, !dbg !9546

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %13 = sext i8 %8 to i64, !dbg !9547
  %14 = tail call i64 @klee_get_valuel(i64 %13) nounwind, !dbg !9547
  %15 = trunc i64 %14 to i8, !dbg !9547
  %16 = icmp eq i8 %15, %8, !dbg !9548
  %17 = zext i1 %16 to i64, !dbg !9548
  tail call void @klee_assume(i64 %17) nounwind, !dbg !9548
  store i8 %15, i8* %sc.0.i, align 1, !dbg !9549
  %18 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9549
  %19 = icmp eq i8 %15, 0, !dbg !9550
  br i1 %19, label %__concretize_string.exit, label %bb13.i, !dbg !9550

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %18, %bb12.i ], [ %12, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %20 = add i32 %7, 1, !dbg !9542
  br label %bb.i, !dbg !9542

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %21 = tail call i64 (i64, ...)* @syscall(i64 21, i8* %pathname, i32 %mode) nounwind, !dbg !9540
  %22 = trunc i64 %21 to i32, !dbg !9540
  %23 = icmp eq i32 %22, -1, !dbg !9551
  br i1 %23, label %bb2, label %bb4, !dbg !9551

bb2:                                              ; preds = %__concretize_string.exit
  %24 = tail call i32* @__errno_location() nounwind readnone, !dbg !9552
  %25 = tail call i32 @klee_get_errno() nounwind, !dbg !9552
  store i32 %25, i32* %24, align 4, !dbg !9552
  br label %bb4, !dbg !9552

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %entry
  %.0 = phi i32 [ 0, %entry ], [ -1, %bb2 ], [ %22, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9553
}

define i8* @getcwd(i8* %buf, i64 %size) nounwind {
entry:
  %0 = load i32* @n_calls.7064, align 4, !dbg !9554
  %1 = add nsw i32 %0, 1, !dbg !9554
  store i32 %1, i32* @n_calls.7064, align 4, !dbg !9554
  %2 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9555
  %3 = icmp eq i32 %2, 0, !dbg !9555
  br i1 %3, label %bb2, label %bb, !dbg !9555

bb:                                               ; preds = %entry
  %4 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 19), align 8, !dbg !9555
  %5 = load i32* %4, align 4, !dbg !9555
  %6 = icmp eq i32 %5, %1, !dbg !9555
  br i1 %6, label %bb1, label %bb2, !dbg !9555

bb1:                                              ; preds = %bb
  %7 = add i32 %2, -1, !dbg !9556
  store i32 %7, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9556
  %8 = tail call i32* @__errno_location() nounwind readnone, !dbg !9557
  store i32 34, i32* %8, align 4, !dbg !9557
  br label %bb9, !dbg !9558

bb2:                                              ; preds = %bb, %entry
  %9 = icmp eq i8* %buf, null, !dbg !9559
  br i1 %9, label %bb3, label %bb6, !dbg !9559

bb3:                                              ; preds = %bb2
  %10 = icmp eq i64 %size, 0, !dbg !9560
  %size_addr.0 = select i1 %10, i64 1024, i64 %size
  %11 = tail call noalias i8* @malloc(i64 %size_addr.0) nounwind, !dbg !9561
  br label %bb6, !dbg !9561

bb6:                                              ; preds = %bb3, %bb2
  %size_addr.1 = phi i64 [ %size_addr.0, %bb3 ], [ %size, %bb2 ]
  %buf_addr.0 = phi i8* [ %11, %bb3 ], [ %buf, %bb2 ]
  %12 = ptrtoint i8* %buf_addr.0 to i64, !dbg !9562
  %13 = tail call i64 @klee_get_valuel(i64 %12) nounwind, !dbg !9562
  %14 = inttoptr i64 %13 to i8*, !dbg !9562
  %15 = icmp eq i8* %14, %buf_addr.0, !dbg !9564
  %16 = zext i1 %15 to i64, !dbg !9564
  tail call void @klee_assume(i64 %16) nounwind, !dbg !9564
  %17 = tail call i64 @klee_get_valuel(i64 %size_addr.1) nounwind, !dbg !9565
  %18 = icmp eq i64 %17, %size_addr.1, !dbg !9567
  %19 = zext i1 %18 to i64, !dbg !9567
  tail call void @klee_assume(i64 %19) nounwind, !dbg !9567
  tail call void @klee_check_memory_access(i8* %14, i64 %17) nounwind, !dbg !9568
  %20 = tail call i64 (i64, ...)* @syscall(i64 79, i8* %14, i64 %17) nounwind, !dbg !9569
  %21 = trunc i64 %20 to i32, !dbg !9569
  %22 = icmp eq i32 %21, -1, !dbg !9570
  br i1 %22, label %bb7, label %bb9, !dbg !9570

bb7:                                              ; preds = %bb6
  %23 = tail call i32* @__errno_location() nounwind readnone, !dbg !9571
  %24 = tail call i32 @klee_get_errno() nounwind, !dbg !9571
  store i32 %24, i32* %23, align 4, !dbg !9571
  br label %bb9, !dbg !9572

bb9:                                              ; preds = %bb7, %bb6, %bb1
  %.0 = phi i8* [ null, %bb1 ], [ null, %bb7 ], [ %14, %bb6 ]
  ret i8* %.0, !dbg !9558
}

define i32 @__fd_ftruncate(i32 %fd, i64 %length) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !9573
  br i1 %0, label %bb.i, label %__get_file.exit.thread, !dbg !9573

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !9575
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !9576
  %3 = load i32* %2, align 4, !dbg !9576
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !9576
  br i1 %toBool.i, label %__get_file.exit.thread, label %__get_file.exit, !dbg !9576

__get_file.exit.thread:                           ; preds = %bb.i, %entry
  %5 = load i32* @n_calls.6554, align 4, !dbg !9577
  %6 = add nsw i32 %5, 1, !dbg !9577
  store i32 %6, i32* @n_calls.6554, align 4, !dbg !9577
  br label %bb

__get_file.exit:                                  ; preds = %bb.i
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !9575
  %8 = load i32* @n_calls.6554, align 4, !dbg !9577
  %9 = add nsw i32 %8, 1, !dbg !9577
  store i32 %9, i32* @n_calls.6554, align 4, !dbg !9577
  %10 = icmp eq %struct.exe_file_t* %7, null, !dbg !9578
  br i1 %10, label %bb, label %bb1, !dbg !9578

bb:                                               ; preds = %__get_file.exit, %__get_file.exit.thread
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !9579
  store i32 9, i32* %11, align 4, !dbg !9579
  br label %bb9, !dbg !9580

bb1:                                              ; preds = %__get_file.exit
  %12 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9581
  %13 = icmp eq i32 %12, 0, !dbg !9581
  br i1 %13, label %bb4, label %bb2, !dbg !9581

bb2:                                              ; preds = %bb1
  %14 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 18), align 8, !dbg !9581
  %15 = load i32* %14, align 4, !dbg !9581
  %16 = icmp eq i32 %15, %9, !dbg !9581
  br i1 %16, label %bb3, label %bb4, !dbg !9581

bb3:                                              ; preds = %bb2
  %17 = add i32 %12, -1, !dbg !9582
  store i32 %17, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9582
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !9583
  store i32 5, i32* %18, align 4, !dbg !9583
  br label %bb9, !dbg !9584

bb4:                                              ; preds = %bb2, %bb1
  %19 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !9585
  %20 = load %struct.exe_disk_file_t** %19, align 8, !dbg !9585
  %21 = icmp eq %struct.exe_disk_file_t* %20, null, !dbg !9585
  br i1 %21, label %bb6, label %bb5, !dbg !9585

bb5:                                              ; preds = %bb4
  tail call void @klee_warning(i8* getelementptr inbounds ([30 x i8]* @.str39365, i64 0, i64 0)) nounwind, !dbg !9586
  %22 = tail call i32* @__errno_location() nounwind readnone, !dbg !9587
  store i32 5, i32* %22, align 4, !dbg !9587
  br label %bb9, !dbg !9588

bb6:                                              ; preds = %bb4
  %23 = tail call i64 @klee_get_valuel(i64 %length) nounwind, !dbg !9589
  %24 = icmp eq i64 %23, %length, !dbg !9591
  %25 = zext i1 %24 to i64, !dbg !9591
  tail call void @klee_assume(i64 %25) nounwind, !dbg !9591
  %26 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !9592
  %27 = load i32* %26, align 8, !dbg !9592
  %28 = tail call i64 (i64, ...)* @syscall(i64 77, i32 %27, i64 %23) nounwind, !dbg !9592
  %29 = trunc i64 %28 to i32, !dbg !9592
  %30 = icmp eq i32 %29, -1, !dbg !9593
  br i1 %30, label %bb7, label %bb9, !dbg !9593

bb7:                                              ; preds = %bb6
  %31 = tail call i32* @__errno_location() nounwind readnone, !dbg !9594
  %32 = tail call i32 @klee_get_errno() nounwind, !dbg !9594
  store i32 %32, i32* %31, align 4, !dbg !9594
  br label %bb9, !dbg !9594

bb9:                                              ; preds = %bb7, %bb6, %bb5, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb5 ], [ -1, %bb7 ], [ %29, %bb6 ]
  ret i32 %.0, !dbg !9580
}

define i64 @__fd_lseek(i32 %fd, i64 %offset, i32 %whence) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !9595
  br i1 %0, label %bb.i, label %__get_file.exit, !dbg !9595

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !9597
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !9598
  %3 = load i32* %2, align 4, !dbg !9598
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !9598
  br i1 %toBool.i, label %__get_file.exit, label %bb1.i, !dbg !9598

bb1.i:                                            ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !9597
  br label %__get_file.exit, !dbg !9599

__get_file.exit:                                  ; preds = %bb1.i, %bb.i, %entry
  %.0.i = phi %struct.exe_file_t* [ %5, %bb1.i ], [ null, %bb.i ], [ null, %entry ]
  %6 = tail call i64 @klee_get_valuel(i64 %offset) nounwind, !dbg !9600
  %7 = icmp eq i64 %6, %offset, !dbg !9602
  %8 = zext i1 %7 to i64, !dbg !9602
  tail call void @klee_assume(i64 %8) nounwind, !dbg !9602
  %9 = icmp eq %struct.exe_file_t* %.0.i, null, !dbg !9603
  br i1 %9, label %bb, label %bb1, !dbg !9603

bb:                                               ; preds = %__get_file.exit
  %10 = tail call i32* @__errno_location() nounwind readnone, !dbg !9604
  store i32 9, i32* %10, align 4, !dbg !9604
  br label %bb19, !dbg !9605

bb1:                                              ; preds = %__get_file.exit
  %11 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 3, !dbg !9606
  %12 = load %struct.exe_disk_file_t** %11, align 8, !dbg !9606
  %13 = icmp eq %struct.exe_disk_file_t* %12, null, !dbg !9606
  br i1 %13, label %bb2, label %bb11, !dbg !9606

bb2:                                              ; preds = %bb1
  %14 = icmp eq i32 %whence, 0, !dbg !9607
  br i1 %14, label %bb3, label %bb4, !dbg !9607

bb3:                                              ; preds = %bb2
  %15 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 0, !dbg !9608
  %16 = load i32* %15, align 8, !dbg !9608
  %17 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %16, i64 %6, i32 0) nounwind, !dbg !9608
  br label %bb8, !dbg !9608

bb4:                                              ; preds = %bb2
  %18 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 2, !dbg !9609
  %19 = load i64* %18, align 8, !dbg !9609
  %20 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 0, !dbg !9609
  %21 = load i32* %20, align 8, !dbg !9609
  %22 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %21, i64 %19, i32 0) nounwind, !dbg !9609
  %23 = icmp eq i64 %22, -1, !dbg !9610
  br i1 %23, label %bb9, label %bb5, !dbg !9610

bb5:                                              ; preds = %bb4
  %24 = load i64* %18, align 8, !dbg !9611
  %25 = icmp eq i64 %24, %22, !dbg !9611
  br i1 %25, label %bb7, label %bb6, !dbg !9611

bb6:                                              ; preds = %bb5
  tail call void @__assert_fail(i8* getelementptr inbounds ([18 x i8]* @.str40366, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16342, i64 0, i64 0), i32 709, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.6098, i64 0, i64 0)) n
  unreachable, !dbg !9611

bb7:                                              ; preds = %bb5
  %26 = load i32* %20, align 8, !dbg !9612
  %27 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %26, i64 %6, i32 %whence) nounwind, !dbg !9612
  br label %bb8, !dbg !9612

bb8:                                              ; preds = %bb7, %bb3
  %new_off.0 = phi i64 [ %17, %bb3 ], [ %27, %bb7 ]
  %28 = icmp eq i64 %new_off.0, -1, !dbg !9613
  br i1 %28, label %bb9, label %bb10, !dbg !9613

bb9:                                              ; preds = %bb8, %bb4
  %29 = tail call i32* @__errno_location() nounwind readnone, !dbg !9614
  %30 = tail call i32 @klee_get_errno() nounwind, !dbg !9614
  store i32 %30, i32* %29, align 4, !dbg !9614
  br label %bb19, !dbg !9615

bb10:                                             ; preds = %bb8
  %31 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 2, !dbg !9616
  store i64 %new_off.0, i64* %31, align 8, !dbg !9616
  br label %bb19, !dbg !9617

bb11:                                             ; preds = %bb1
  switch i32 %whence, label %bb15 [
    i32 0, label %bb16
    i32 1, label %bb13
    i32 2, label %bb14
  ], !dbg !9618

bb13:                                             ; preds = %bb11
  %32 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 2, !dbg !9619
  %33 = load i64* %32, align 8, !dbg !9619
  %34 = add nsw i64 %33, %6, !dbg !9619
  br label %bb16, !dbg !9619

bb14:                                             ; preds = %bb11
  %35 = getelementptr inbounds %struct.exe_disk_file_t* %12, i64 0, i32 0, !dbg !9620
  %36 = load i32* %35, align 8, !dbg !9620
  %37 = zext i32 %36 to i64, !dbg !9620
  %38 = add nsw i64 %37, %6, !dbg !9620
  br label %bb16, !dbg !9620

bb15:                                             ; preds = %bb11
  %39 = tail call i32* @__errno_location() nounwind readnone, !dbg !9621
  store i32 22, i32* %39, align 4, !dbg !9621
  br label %bb19, !dbg !9622

bb16:                                             ; preds = %bb14, %bb13, %bb11
  %new_off.1 = phi i64 [ %38, %bb14 ], [ %34, %bb13 ], [ %6, %bb11 ]
  %40 = icmp slt i64 %new_off.1, 0, !dbg !9623
  br i1 %40, label %bb17, label %bb18, !dbg !9623

bb17:                                             ; preds = %bb16
  %41 = tail call i32* @__errno_location() nounwind readnone, !dbg !9624
  store i32 22, i32* %41, align 4, !dbg !9624
  br label %bb19, !dbg !9625

bb18:                                             ; preds = %bb16
  %42 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 2, !dbg !9626
  store i64 %new_off.1, i64* %42, align 8, !dbg !9626
  br label %bb19, !dbg !9627

bb19:                                             ; preds = %bb18, %bb17, %bb15, %bb10, %bb9, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb9 ], [ %new_off.0, %bb10 ], [ -1, %bb15 ], [ -1, %bb17 ], [ %new_off.1, %bb18 ]
  ret i64 %.0, !dbg !9605
}

define i64 @pread(i32 %fd, i8* %buf, i64 %count, i64 %offset) nounwind {
entry:
  %0 = load i32* @n_calls.5974, align 4, !dbg !9628
  %1 = add nsw i32 %0, 1, !dbg !9628
  store i32 %1, i32* @n_calls.5974, align 4, !dbg !9628
  %2 = icmp eq i64 %count, 0, !dbg !9629
  br i1 %2, label %bb19, label %bb1, !dbg !9629

bb1:                                              ; preds = %entry
  %3 = icmp eq i8* %buf, null, !dbg !9630
  br i1 %3, label %bb2, label %bb3, !dbg !9630

bb2:                                              ; preds = %bb1
  %4 = tail call i32* @__errno_location() nounwind readnone, !dbg !9631
  store i32 14, i32* %4, align 4, !dbg !9631
  br label %bb19, !dbg !9632

bb3:                                              ; preds = %bb1
  %5 = icmp slt i64 %offset, 0, !dbg !9633
  br i1 %5, label %bb4, label %bb5, !dbg !9633

bb4:                                              ; preds = %bb3
  %6 = tail call i32* @__errno_location() nounwind readnone, !dbg !9634
  store i32 22, i32* %6, align 4, !dbg !9634
  br label %bb19, !dbg !9635

bb5:                                              ; preds = %bb3
  %7 = icmp ult i32 %fd, 32, !dbg !9636
  br i1 %7, label %bb.i, label %bb6, !dbg !9636

bb.i:                                             ; preds = %bb5
  %8 = sext i32 %fd to i64, !dbg !9638
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %8, i32 1, !dbg !9639
  %10 = load i32* %9, align 4, !dbg !9639
  %11 = and i32 %10, 1
  %toBool.i = icmp eq i32 %11, 0, !dbg !9639
  br i1 %toBool.i, label %bb6, label %__get_file.exit, !dbg !9639

__get_file.exit:                                  ; preds = %bb.i
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %8, !dbg !9638
  %13 = icmp eq %struct.exe_file_t* %12, null, !dbg !9640
  br i1 %13, label %bb6, label %bb7, !dbg !9640

bb6:                                              ; preds = %__get_file.exit, %bb.i, %bb5
  %14 = tail call i32* @__errno_location() nounwind readnone, !dbg !9641
  store i32 9, i32* %14, align 4, !dbg !9641
  br label %bb19, !dbg !9642

bb7:                                              ; preds = %__get_file.exit
  %15 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9643
  %16 = icmp eq i32 %15, 0, !dbg !9643
  br i1 %16, label %bb10, label %bb8, !dbg !9643

bb8:                                              ; preds = %bb7
  %17 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 15), align 8, !dbg !9643
  %18 = load i32* %17, align 4, !dbg !9643
  %19 = icmp eq i32 %18, %1, !dbg !9643
  br i1 %19, label %bb9, label %bb10, !dbg !9643

bb9:                                              ; preds = %bb8
  %20 = add i32 %15, -1, !dbg !9644
  store i32 %20, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9644
  %21 = tail call i32* @__errno_location() nounwind readnone, !dbg !9645
  store i32 5, i32* %21, align 4, !dbg !9645
  br label %bb19, !dbg !9646

bb10:                                             ; preds = %bb8, %bb7
  %22 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %8, i32 3, !dbg !9647
  %23 = load %struct.exe_disk_file_t** %22, align 8, !dbg !9647
  %24 = icmp eq %struct.exe_disk_file_t* %23, null, !dbg !9647
  br i1 %24, label %bb11, label %bb14, !dbg !9647

bb11:                                             ; preds = %bb10
  %25 = ptrtoint i8* %buf to i64, !dbg !9648
  %26 = tail call i64 @klee_get_valuel(i64 %25) nounwind, !dbg !9648
  %27 = inttoptr i64 %26 to i8*, !dbg !9648
  %28 = icmp eq i8* %27, %buf, !dbg !9650
  %29 = zext i1 %28 to i64, !dbg !9650
  tail call void @klee_assume(i64 %29) nounwind, !dbg !9650
  %30 = tail call i64 @klee_get_valuel(i64 %count) nounwind, !dbg !9651
  %31 = icmp eq i64 %30, %count, !dbg !9653
  %32 = zext i1 %31 to i64, !dbg !9653
  tail call void @klee_assume(i64 %32) nounwind, !dbg !9653
  tail call void @klee_check_memory_access(i8* %27, i64 %30) nounwind, !dbg !9654
  %33 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %8, i32 0, !dbg !9655
  %34 = load i32* %33, align 8, !dbg !9655
  %35 = tail call i64 (i64, ...)* @syscall(i64 17, i32 %34, i8* %27, i64 %30, i64 %offset) nounwind, !dbg !9655
  %36 = trunc i64 %35 to i32, !dbg !9655
  %37 = icmp eq i32 %36, -1, !dbg !9656
  br i1 %37, label %bb12, label %bb13, !dbg !9656

bb12:                                             ; preds = %bb11
  %38 = tail call i32* @__errno_location() nounwind readnone, !dbg !9657
  %39 = tail call i32 @klee_get_errno() nounwind, !dbg !9657
  store i32 %39, i32* %38, align 4, !dbg !9657
  br label %bb19, !dbg !9658

bb13:                                             ; preds = %bb11
  %40 = sext i32 %36 to i64, !dbg !9659
  br label %bb19, !dbg !9659

bb14:                                             ; preds = %bb10
  %41 = getelementptr inbounds %struct.exe_disk_file_t* %23, i64 0, i32 0, !dbg !9660
  %42 = load i32* %41, align 8, !dbg !9660
  %43 = zext i32 %42 to i64, !dbg !9660
  %44 = icmp slt i64 %43, %offset, !dbg !9660
  br i1 %44, label %bb19, label %bb16, !dbg !9660

bb16:                                             ; preds = %bb14
  %45 = add i64 %offset, %count, !dbg !9661
  %46 = sub nsw i64 %43, %offset, !dbg !9662
  %47 = icmp ugt i64 %45, %43, !dbg !9661
  %.count = select i1 %47, i64 %46, i64 %count
  %48 = getelementptr inbounds %struct.exe_disk_file_t* %23, i64 0, i32 1, !dbg !9663
  %49 = load i8** %48, align 8, !dbg !9663
  %50 = getelementptr inbounds i8* %49, i64 %offset, !dbg !9663
  %51 = call i8* @memcpy(i8* %buf, i8* %50, i64 %.count)
  br label %bb19, !dbg !9664

bb19:                                             ; preds = %bb16, %bb14, %bb13, %bb12, %bb9, %bb6, %bb4, %bb2, %entry
  %.0 = phi i64 [ -1, %bb2 ], [ -1, %bb4 ], [ -1, %bb6 ], [ -1, %bb9 ], [ -1, %bb12 ], [ %40, %bb13 ], [ %.count, %bb16 ], [ 0, %entry ], [ 0, %bb14 ]
  ret i64 %.0, !dbg !9665
}

define i64 @read(i32 %fd, i8* %buf, i64 %count) nounwind {
entry:
  %0 = load i32* @n_calls.5898, align 4, !dbg !9666
  %1 = add nsw i32 %0, 1, !dbg !9666
  store i32 %1, i32* @n_calls.5898, align 4, !dbg !9666
  %2 = icmp eq i64 %count, 0, !dbg !9667
  br i1 %2, label %bb34, label %bb1, !dbg !9667

bb1:                                              ; preds = %entry
  %3 = icmp eq i8* %buf, null, !dbg !9668
  br i1 %3, label %bb2, label %bb3, !dbg !9668

bb2:                                              ; preds = %bb1
  %4 = tail call i32* @__errno_location() nounwind readnone, !dbg !9669
  store i32 14, i32* %4, align 4, !dbg !9669
  br label %bb34, !dbg !9670

bb3:                                              ; preds = %bb1
  %5 = icmp ult i32 %fd, 32, !dbg !9671
  br i1 %5, label %bb.i, label %bb4, !dbg !9671

bb.i:                                             ; preds = %bb3
  %6 = sext i32 %fd to i64, !dbg !9673
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 1, !dbg !9674
  %8 = load i32* %7, align 4, !dbg !9674
  %9 = and i32 %8, 1
  %toBool.i = icmp eq i32 %9, 0, !dbg !9674
  br i1 %toBool.i, label %bb4, label %__get_file.exit, !dbg !9674

__get_file.exit:                                  ; preds = %bb.i
  %10 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, !dbg !9673
  %11 = icmp eq %struct.exe_file_t* %10, null, !dbg !9675
  br i1 %11, label %bb4, label %bb5, !dbg !9675

bb4:                                              ; preds = %__get_file.exit, %bb.i, %bb3
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !9676
  store i32 9, i32* %12, align 4, !dbg !9676
  br label %bb34, !dbg !9677

bb5:                                              ; preds = %__get_file.exit
  %13 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9678
  %14 = icmp eq i32 %13, 0, !dbg !9678
  br i1 %14, label %bb8, label %bb6, !dbg !9678

bb6:                                              ; preds = %bb5
  %15 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 15), align 8, !dbg !9678
  %16 = load i32* %15, align 4, !dbg !9678
  %17 = icmp eq i32 %16, %1, !dbg !9678
  br i1 %17, label %bb7, label %bb8, !dbg !9678

bb7:                                              ; preds = %bb6
  %18 = add i32 %13, -1, !dbg !9679
  store i32 %18, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9679
  %19 = tail call i32* @__errno_location() nounwind readnone, !dbg !9680
  store i32 5, i32* %19, align 4, !dbg !9680
  br label %bb34, !dbg !9681

bb8:                                              ; preds = %bb6, %bb5
  %20 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 3, !dbg !9682
  %21 = load %struct.exe_disk_file_t** %20, align 8, !dbg !9682
  %22 = icmp eq %struct.exe_disk_file_t* %21, null, !dbg !9682
  br i1 %22, label %bb9, label %bb27, !dbg !9682

bb9:                                              ; preds = %bb8
  %23 = ptrtoint i8* %buf to i64, !dbg !9683
  %24 = tail call i64 @klee_get_valuel(i64 %23) nounwind, !dbg !9683
  %25 = inttoptr i64 %24 to i8*, !dbg !9683
  %26 = icmp eq i8* %25, %buf, !dbg !9685
  %27 = zext i1 %26 to i64, !dbg !9685
  tail call void @klee_assume(i64 %27) nounwind, !dbg !9685
  %28 = tail call i64 @klee_get_valuel(i64 %count) nounwind, !dbg !9686
  %29 = icmp eq i64 %28, %count, !dbg !9688
  %30 = zext i1 %29 to i64, !dbg !9688
  tail call void @klee_assume(i64 %30) nounwind, !dbg !9688
  tail call void @klee_check_memory_access(i8* %25, i64 %28) nounwind, !dbg !9689
  %31 = load i32* %7, align 4, !dbg !9690
  %32 = and i32 %31, 16, !dbg !9690
  %33 = icmp eq i32 %32, 0, !dbg !9690
  br i1 %33, label %bb13, label %bb10, !dbg !9690

bb10:                                             ; preds = %bb9
  %34 = tail call i32 @klee_zest_enabled() nounwind, !dbg !9690
  %35 = icmp eq i32 %34, 0, !dbg !9690
  br i1 %35, label %bb13, label %bb11, !dbg !9690

bb11:                                             ; preds = %bb10
  %36 = tail call noalias i8* @malloc(i64 %28) nounwind, !dbg !9691
  %37 = icmp eq i8* %36, null, !dbg !9692
  br i1 %37, label %bb12, label %bb13, !dbg !9692

bb12:                                             ; preds = %bb11
  tail call void @__assert_fail(i8* getelementptr inbounds ([33 x i8]* @.str21347, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16342, i64 0, i64 0), i32 498, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.5902, i64 0, i64 0)) no
  unreachable, !dbg !9693

bb13:                                             ; preds = %bb11, %bb10, %bb9
  %incoming.0 = phi i8* [ %36, %bb11 ], [ %25, %bb10 ], [ %25, %bb9 ]
  %38 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 0, !dbg !9694
  %39 = load i32* %38, align 8, !dbg !9694
  %40 = icmp eq i32 %39, 0, !dbg !9694
  br i1 %40, label %bb15, label %bb14, !dbg !9694

bb14:                                             ; preds = %bb13
  %41 = load i32* %7, align 4, !dbg !9694
  %42 = and i32 %41, 16, !dbg !9694
  %43 = icmp eq i32 %42, 0, !dbg !9694
  br i1 %43, label %bb16, label %bb15, !dbg !9694

bb15:                                             ; preds = %bb14, %bb13
  %44 = tail call i64 (i64, ...)* @syscall(i64 0, i32 %39, i8* %incoming.0, i64 %28) nounwind, !dbg !9695
  br label %bb17, !dbg !9695

bb16:                                             ; preds = %bb14
  %45 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 2, !dbg !9696
  %46 = load i64* %45, align 8, !dbg !9696
  %47 = tail call i64 (i64, ...)* @syscall(i64 17, i32 %39, i8* %25, i64 %28, i64 %46) nounwind, !dbg !9696
  br label %bb17, !dbg !9696

bb17:                                             ; preds = %bb16, %bb15
  %r.0.in = phi i64 [ %44, %bb15 ], [ %47, %bb16 ]
  %r.0 = trunc i64 %r.0.in to i32
  %48 = load i32* %7, align 4, !dbg !9697
  %49 = and i32 %48, 16, !dbg !9697
  %50 = icmp eq i32 %49, 0, !dbg !9697
  br i1 %50, label %bb22, label %bb18, !dbg !9697

bb18:                                             ; preds = %bb17
  %51 = tail call i32 @klee_zest_enabled() nounwind, !dbg !9697
  %52 = icmp eq i32 %51, 0, !dbg !9697
  br i1 %52, label %bb22, label %bb19, !dbg !9697

bb19:                                             ; preds = %bb18
  %53 = icmp eq i32 %r.0, -1, !dbg !9698
  br i1 %53, label %bb21, label %bb20, !dbg !9698

bb20:                                             ; preds = %bb19
  tail call void @klee_make_symbolic(i8* %incoming.0, i64 %28, i8* getelementptr inbounds ([10 x i8]* @.str41367, i64 0, i64 0)) nounwind, !dbg !9699
  %54 = sext i32 %r.0 to i64, !dbg !9700
  %55 = call i8* @memcpy(i8* %25, i8* %incoming.0, i64 %54)
  br label %bb21, !dbg !9700

bb21:                                             ; preds = %bb20, %bb19
  tail call void @free(i8* %incoming.0) nounwind, !dbg !9701
  br label %bb22, !dbg !9701

bb22:                                             ; preds = %bb21, %bb18, %bb17
  %56 = icmp eq i32 %r.0, -1, !dbg !9702
  br i1 %56, label %bb23, label %bb24, !dbg !9702

bb23:                                             ; preds = %bb22
  %57 = tail call i32* @__errno_location() nounwind readnone, !dbg !9703
  %58 = tail call i32 @klee_get_errno() nounwind, !dbg !9703
  store i32 %58, i32* %57, align 4, !dbg !9703
  br label %bb34, !dbg !9704

bb24:                                             ; preds = %bb22
  %59 = load i32* %38, align 8, !dbg !9705
  %60 = icmp eq i32 %59, 0, !dbg !9705
  br i1 %60, label %bb24.bb26_crit_edge, label %bb25, !dbg !9705

bb24.bb26_crit_edge:                              ; preds = %bb24
  %.pre = sext i32 %r.0 to i64, !dbg !9706
  br label %bb34

bb25:                                             ; preds = %bb24
  %61 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 2, !dbg !9707
  %62 = load i64* %61, align 8, !dbg !9707
  %63 = sext i32 %r.0 to i64, !dbg !9707
  %64 = add nsw i64 %62, %63, !dbg !9707
  store i64 %64, i64* %61, align 8, !dbg !9707
  br label %bb34, !dbg !9707

bb27:                                             ; preds = %bb8
  %65 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 2, !dbg !9708
  %66 = load i64* %65, align 8, !dbg !9708
  %67 = icmp slt i64 %66, 0, !dbg !9708
  br i1 %67, label %bb28, label %bb29, !dbg !9708

bb28:                                             ; preds = %bb27
  tail call void @__assert_fail(i8* getelementptr inbounds ([12 x i8]* @.str20346, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16342, i64 0, i64 0), i32 525, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.5902, i64 0, i64 0)) no
  unreachable, !dbg !9708

bb29:                                             ; preds = %bb27
  %68 = getelementptr inbounds %struct.exe_disk_file_t* %21, i64 0, i32 0, !dbg !9709
  %69 = load i32* %68, align 8, !dbg !9709
  %70 = zext i32 %69 to i64, !dbg !9709
  %71 = icmp slt i64 %70, %66, !dbg !9709
  br i1 %71, label %bb34, label %bb31, !dbg !9709

bb31:                                             ; preds = %bb29
  %72 = add i64 %66, %count, !dbg !9710
  %73 = sub nsw i64 %70, %66, !dbg !9711
  %74 = icmp ugt i64 %72, %70, !dbg !9710
  %.count = select i1 %74, i64 %73, i64 %count
  %75 = getelementptr inbounds %struct.exe_disk_file_t* %21, i64 0, i32 1, !dbg !9712
  %76 = load i8** %75, align 8, !dbg !9712
  %77 = getelementptr inbounds i8* %76, i64 %66, !dbg !9712
  %78 = call i8* @memcpy(i8* %buf, i8* %77, i64 %.count)
  %79 = load i64* %65, align 8, !dbg !9713
  %80 = add i64 %79, %.count, !dbg !9713
  store i64 %80, i64* %65, align 8, !dbg !9713
  br label %bb34, !dbg !9714

bb34:                                             ; preds = %bb31, %bb29, %bb25, %bb24.bb26_crit_edge, %bb23, %bb7, %bb4, %bb2, %entry
  %.0 = phi i64 [ -1, %bb2 ], [ -1, %bb4 ], [ -1, %bb7 ], [ -1, %bb23 ], [ %.count, %bb31 ], [ 0, %entry ], [ 0, %bb29 ], [ %.pre, %bb24.bb26_crit_edge ], [ %63, %bb25 ]
  ret i64 %.0, !dbg !9715
}

define i8* @mmap_simple(i32 %fd, i64 %length, i64 %off) nounwind {
entry:
  %0 = tail call noalias i8* @malloc(i64 %length) nounwind, !dbg !9716
  %1 = tail call i64 @__fd_lseek(i32 %fd, i64 %off, i32 0) nounwind, !dbg !9717
  br label %bb5, !dbg !9718

bb:                                               ; preds = %bb5
  %2 = sub i64 %length, %count.0, !dbg !9719
  %3 = tail call i64 @read(i32 %fd, i8* %0, i64 %2) nounwind, !dbg !9719
  switch i64 %3, label %bb4 [
    i64 0, label %bb1
    i64 -1, label %bb3
  ]

bb1:                                              ; preds = %bb
  tail call void @klee_warning(i8* getelementptr inbounds ([43 x i8]* @.str42368, i64 0, i64 0)) nounwind, !dbg !9720
  br label %bb6, !dbg !9720

bb3:                                              ; preds = %bb
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str43369, i64 0, i64 0)) nounwind, !dbg !9721
  br label %bb6, !dbg !9721

bb4:                                              ; preds = %bb
  %4 = add i64 %3, %count.0, !dbg !9722
  br label %bb5, !dbg !9722

bb5:                                              ; preds = %bb4, %entry
  %count.0 = phi i64 [ 0, %entry ], [ %4, %bb4 ]
  %5 = icmp ult i64 %count.0, %length, !dbg !9723
  br i1 %5, label %bb, label %bb6, !dbg !9723

bb6:                                              ; preds = %bb5, %bb3, %bb1
  ret i8* %0, !dbg !9724
}

define i8* @mmap(i8* %addr, i64 %length, i32 %prot, i32 %flags, i32 %fd, i64 %off) nounwind {
entry:
  %0 = icmp eq i8* %addr, null, !dbg !9725
  %1 = icmp eq i32 %prot, 1, !dbg !9725
  %2 = and i1 %0, %1, !dbg !9725
  br i1 %2, label %bb, label %bb3, !dbg !9725

bb:                                               ; preds = %entry
  %3 = tail call i8* @mmap_simple(i32 %fd, i64 %length, i64 %off) nounwind, !dbg !9726
  br label %bb4, !dbg !9726

bb3:                                              ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([30 x i8]* @.str44370, i64 0, i64 0)) nounwind, !dbg !9727
  br label %bb4, !dbg !9728

bb4:                                              ; preds = %bb3, %bb
  %.0 = phi i8* [ %3, %bb ], [ inttoptr (i64 -1 to i8*), %bb3 ]
  ret i8* %.0, !dbg !9726
}

define i8* @mmap64(i8* %addr, i64 %length, i32 %prot, i32 %flags, i32 %fd, i64 %off) nounwind {
entry:
  %0 = icmp eq i8* %addr, null, !dbg !9729
  %1 = icmp eq i32 %prot, 1, !dbg !9729
  %2 = and i1 %0, %1, !dbg !9729
  br i1 %2, label %bb, label %bb3, !dbg !9729

bb:                                               ; preds = %entry
  %int_cast_to_i64 = bitcast i64 12 to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb
  %4 = shl nsw i64 %off, 12, !dbg !9730
  %5 = tail call i8* @mmap_simple(i32 %fd, i64 %length, i64 %4) nounwind, !dbg !9730
  br label %bb4, !dbg !9730

bb3:                                              ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([30 x i8]* @.str44370, i64 0, i64 0)) nounwind, !dbg !9731
  br label %bb4, !dbg !9732

bb4:                                              ; preds = %bb3, %klee_overshift_check.exit
  %.0 = phi i8* [ %5, %klee_overshift_check.exit ], [ inttoptr (i64 -1 to i8*), %bb3 ]
  ret i8* %.0, !dbg !9730
}

define i32 @fchmod(i32 %fd, i32 %mode) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !9733
  br i1 %0, label %bb.i, label %bb, !dbg !9733

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !9735
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !9736
  %3 = load i32* %2, align 4, !dbg !9736
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !9736
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !9736

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !9735
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !9737
  br i1 %6, label %bb, label %bb1, !dbg !9737

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !9738
  store i32 9, i32* %7, align 4, !dbg !9738
  br label %bb9, !dbg !9739

bb1:                                              ; preds = %__get_file.exit
  %8 = load i32* @n_calls.6299, align 4, !dbg !9740
  %9 = add nsw i32 %8, 1, !dbg !9740
  store i32 %9, i32* @n_calls.6299, align 4, !dbg !9740
  %10 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9741
  %11 = icmp eq i32 %10, 0, !dbg !9741
  br i1 %11, label %bb4, label %bb2, !dbg !9741

bb2:                                              ; preds = %bb1
  %12 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 21), align 8, !dbg !9741
  %13 = load i32* %12, align 4, !dbg !9741
  %14 = icmp eq i32 %13, %9, !dbg !9741
  br i1 %14, label %bb3, label %bb4, !dbg !9741

bb3:                                              ; preds = %bb2
  %15 = add i32 %10, -1, !dbg !9742
  store i32 %15, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9742
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !9743
  store i32 5, i32* %16, align 4, !dbg !9743
  br label %bb9, !dbg !9744

bb4:                                              ; preds = %bb2, %bb1
  %17 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !9745
  %18 = load %struct.exe_disk_file_t** %17, align 8, !dbg !9745
  %19 = icmp eq %struct.exe_disk_file_t* %18, null, !dbg !9745
  br i1 %19, label %bb6, label %bb5, !dbg !9745

bb5:                                              ; preds = %bb4
  %20 = tail call i32 @geteuid() nounwind, !dbg !9746
  %21 = getelementptr inbounds %struct.exe_disk_file_t* %18, i64 0, i32 3, !dbg !9746
  %22 = load %struct.stat** %21, align 8, !dbg !9746
  %23 = getelementptr inbounds %struct.stat* %22, i64 0, i32 4, !dbg !9746
  %24 = load i32* %23, align 4, !dbg !9746
  %25 = icmp eq i32 %20, %24, !dbg !9746
  br i1 %25, label %bb.i11, label %bb3.i, !dbg !9746

bb.i11:                                           ; preds = %bb5
  %26 = tail call i32 @getgid() nounwind, !dbg !9749
  %27 = load %struct.stat** %21, align 8, !dbg !9749
  %28 = getelementptr inbounds %struct.stat* %27, i64 0, i32 5, !dbg !9749
  %29 = load i32* %28, align 8, !dbg !9749
  %30 = and i32 %mode, 3071, !dbg !9750
  %31 = icmp eq i32 %26, %29, !dbg !9749
  %mode..i = select i1 %31, i32 %mode, i32 %30
  %32 = getelementptr inbounds %struct.stat* %27, i64 0, i32 3, !dbg !9751
  %33 = load i32* %32, align 8, !dbg !9751
  %34 = and i32 %33, -4096, !dbg !9751
  %35 = and i32 %mode..i, 4095, !dbg !9751
  %36 = or i32 %35, %34, !dbg !9751
  store i32 %36, i32* %32, align 8, !dbg !9751
  br label %bb9, !dbg !9752

bb3.i:                                            ; preds = %bb5
  %37 = tail call i32* @__errno_location() nounwind readnone, !dbg !9753
  store i32 1, i32* %37, align 4, !dbg !9753
  br label %bb9, !dbg !9754

bb6:                                              ; preds = %bb4
  %38 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !9755
  %39 = load i32* %38, align 8, !dbg !9755
  %40 = tail call i64 (i64, ...)* @syscall(i64 91, i32 %39, i32 %mode) nounwind, !dbg !9755
  %41 = trunc i64 %40 to i32, !dbg !9755
  %42 = icmp eq i32 %41, -1, !dbg !9756
  br i1 %42, label %bb7, label %bb9, !dbg !9756

bb7:                                              ; preds = %bb6
  %43 = tail call i32* @__errno_location() nounwind readnone, !dbg !9757
  %44 = tail call i32 @klee_get_errno() nounwind, !dbg !9757
  store i32 %44, i32* %43, align 4, !dbg !9757
  br label %bb9, !dbg !9757

bb9:                                              ; preds = %bb7, %bb6, %bb3.i, %bb.i11, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb7 ], [ %41, %bb6 ], [ 0, %bb.i11 ], [ -1, %bb3.i ]
  ret i32 %.0, !dbg !9739
}

define i32 @chmod(i8* %path, i32 %mode) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9758
  %1 = load i32* @n_calls.6276, align 4, !dbg !9760
  %2 = add nsw i32 %1, 1, !dbg !9760
  store i32 %2, i32* @n_calls.6276, align 4, !dbg !9760
  %3 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9761
  %4 = icmp eq i32 %3, 0, !dbg !9761
  br i1 %4, label %bb2, label %bb, !dbg !9761

bb:                                               ; preds = %entry
  %5 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 20), align 8, !dbg !9761
  %6 = load i32* %5, align 4, !dbg !9761
  %7 = icmp eq i32 %6, %2, !dbg !9761
  br i1 %7, label %bb1, label %bb2, !dbg !9761

bb1:                                              ; preds = %bb
  %8 = add i32 %3, -1, !dbg !9762
  store i32 %8, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9762
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !9763
  store i32 5, i32* %9, align 4, !dbg !9763
  br label %bb7, !dbg !9764

bb2:                                              ; preds = %bb, %entry
  %10 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9765
  br i1 %10, label %bb4, label %bb3, !dbg !9765

bb3:                                              ; preds = %bb2
  %11 = tail call i32 @geteuid() nounwind, !dbg !9766
  %12 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !9766
  %13 = load %struct.stat** %12, align 8, !dbg !9766
  %14 = getelementptr inbounds %struct.stat* %13, i64 0, i32 4, !dbg !9766
  %15 = load i32* %14, align 4, !dbg !9766
  %16 = icmp eq i32 %11, %15, !dbg !9766
  br i1 %16, label %bb.i, label %bb3.i, !dbg !9766

bb.i:                                             ; preds = %bb3
  %17 = tail call i32 @getgid() nounwind, !dbg !9768
  %18 = load %struct.stat** %12, align 8, !dbg !9768
  %19 = getelementptr inbounds %struct.stat* %18, i64 0, i32 5, !dbg !9768
  %20 = load i32* %19, align 8, !dbg !9768
  %21 = and i32 %mode, 3071, !dbg !9769
  %22 = icmp eq i32 %17, %20, !dbg !9768
  %mode..i = select i1 %22, i32 %mode, i32 %21
  %23 = getelementptr inbounds %struct.stat* %18, i64 0, i32 3, !dbg !9770
  %24 = load i32* %23, align 8, !dbg !9770
  %25 = and i32 %24, -4096, !dbg !9770
  %26 = and i32 %mode..i, 4095, !dbg !9770
  %27 = or i32 %26, %25, !dbg !9770
  store i32 %27, i32* %23, align 8, !dbg !9770
  br label %bb7, !dbg !9771

bb3.i:                                            ; preds = %bb3
  %28 = tail call i32* @__errno_location() nounwind readnone, !dbg !9772
  store i32 1, i32* %28, align 4, !dbg !9772
  br label %bb7, !dbg !9773

bb4:                                              ; preds = %bb2
  %29 = ptrtoint i8* %path to i64, !dbg !9774
  %30 = tail call i64 @klee_get_valuel(i64 %29) nounwind, !dbg !9774
  %31 = inttoptr i64 %30 to i8*, !dbg !9774
  %32 = icmp eq i8* %31, %path, !dbg !9777
  %33 = zext i1 %32 to i64, !dbg !9777
  tail call void @klee_assume(i64 %33) nounwind, !dbg !9777
  br label %bb.i9, !dbg !9778

bb.i9:                                            ; preds = %bb13.i, %bb4
  %sc.0.i = phi i8* [ %31, %bb4 ], [ %sc.1.i, %bb13.i ]
  %34 = phi i32 [ 0, %bb4 ], [ %47, %bb13.i ]
  %35 = load i8* %sc.0.i, align 1, !dbg !9779
  %36 = load i8* @UseConcretePath, align 1, !dbg !9780
  %toBool3not.i = icmp eq i8 %36, 0, !dbg !9780
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9780

bb7.i:                                            ; preds = %bb.i9
  %tmp.i = add i32 %34, -1
  %37 = and i32 %tmp.i, %34, !dbg !9780
  %38 = icmp eq i32 %37, 0, !dbg !9780
  br i1 %38, label %bb8.i, label %bb12.i, !dbg !9780

bb8.i:                                            ; preds = %bb7.i
  switch i8 %35, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9781
  br label %__concretize_string.exit, !dbg !9781

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9782
  %39 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9782
  br label %bb13.i, !dbg !9782

bb12.i:                                           ; preds = %bb7.i, %bb.i9
  %40 = sext i8 %35 to i64, !dbg !9783
  %41 = tail call i64 @klee_get_valuel(i64 %40) nounwind, !dbg !9783
  %42 = trunc i64 %41 to i8, !dbg !9783
  %43 = icmp eq i8 %42, %35, !dbg !9784
  %44 = zext i1 %43 to i64, !dbg !9784
  tail call void @klee_assume(i64 %44) nounwind, !dbg !9784
  store i8 %42, i8* %sc.0.i, align 1, !dbg !9785
  %45 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9785
  %46 = icmp eq i8 %42, 0, !dbg !9786
  br i1 %46, label %__concretize_string.exit, label %bb13.i, !dbg !9786

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %45, %bb12.i ], [ %39, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %47 = add i32 %34, 1, !dbg !9778
  br label %bb.i9, !dbg !9778

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %48 = tail call i64 (i64, ...)* @syscall(i64 90, i8* %path, i32 %mode) nounwind, !dbg !9776
  %49 = trunc i64 %48 to i32, !dbg !9776
  %50 = icmp eq i32 %49, -1, !dbg !9787
  br i1 %50, label %bb5, label %bb7, !dbg !9787

bb5:                                              ; preds = %__concretize_string.exit
  %51 = tail call i32* @__errno_location() nounwind readnone, !dbg !9788
  %52 = tail call i32 @klee_get_errno() nounwind, !dbg !9788
  store i32 %52, i32* %51, align 4, !dbg !9788
  br label %bb7, !dbg !9788

bb7:                                              ; preds = %bb5, %__concretize_string.exit, %bb3.i, %bb.i, %bb1
  %.0 = phi i32 [ -1, %bb1 ], [ -1, %bb5 ], [ %49, %__concretize_string.exit ], [ 0, %bb.i ], [ -1, %bb3.i ]
  ret i32 %.0, !dbg !9764
}

define i32 @__fd_lstat(i8* %path, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9789
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9791
  br i1 %1, label %bb1, label %bb, !dbg !9791

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !9792
  %3 = load %struct.stat** %2, align 8, !dbg !9792
  %4 = bitcast %struct.stat* %buf to i8*, !dbg !9792
  %5 = bitcast %struct.stat* %3 to i8*, !dbg !9792
  %6 = call i8* @memcpy(i8* %4, i8* %5, i64 144)
  br label %bb4, !dbg !9793

bb1:                                              ; preds = %entry
  %7 = tail call i64 @strlen(i8* %path) nounwind readonly, !dbg !9794
  %8 = add i64 %7, 1, !dbg !9794
  %9 = tail call noalias i8* @malloc(i64 %8) nounwind, !dbg !9794
  %10 = tail call i8* @strcpy(i8* noalias %9, i8* noalias %path) nounwind, !dbg !9795
  %11 = ptrtoint i8* %9 to i64, !dbg !9796
  %12 = tail call i64 @klee_get_valuel(i64 %11) nounwind, !dbg !9796
  %13 = inttoptr i64 %12 to i8*, !dbg !9796
  %14 = icmp eq i8* %13, %9, !dbg !9799
  %15 = zext i1 %14 to i64, !dbg !9799
  tail call void @klee_assume(i64 %15) nounwind, !dbg !9799
  br label %bb.i, !dbg !9800

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %13, %bb1 ], [ %sc.1.i, %bb13.i ]
  %16 = phi i32 [ 0, %bb1 ], [ %29, %bb13.i ]
  %17 = load i8* %sc.0.i, align 1, !dbg !9801
  %18 = load i8* @UseConcretePath, align 1, !dbg !9802
  %toBool3not.i = icmp eq i8 %18, 0, !dbg !9802
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9802

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %16, -1
  %19 = and i32 %tmp.i, %16, !dbg !9802
  %20 = icmp eq i32 %19, 0, !dbg !9802
  br i1 %20, label %bb8.i, label %bb12.i, !dbg !9802

bb8.i:                                            ; preds = %bb7.i
  switch i8 %17, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9803
  br label %__concretize_string.exit, !dbg !9803

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9804
  %21 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9804
  br label %bb13.i, !dbg !9804

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %22 = sext i8 %17 to i64, !dbg !9805
  %23 = tail call i64 @klee_get_valuel(i64 %22) nounwind, !dbg !9805
  %24 = trunc i64 %23 to i8, !dbg !9805
  %25 = icmp eq i8 %24, %17, !dbg !9806
  %26 = zext i1 %25 to i64, !dbg !9806
  tail call void @klee_assume(i64 %26) nounwind, !dbg !9806
  store i8 %24, i8* %sc.0.i, align 1, !dbg !9807
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9807
  %28 = icmp eq i8 %24, 0, !dbg !9808
  br i1 %28, label %__concretize_string.exit, label %bb13.i, !dbg !9808

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %27, %bb12.i ], [ %21, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %29 = add i32 %16, 1, !dbg !9800
  br label %bb.i, !dbg !9800

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %30 = tail call i64 (i64, ...)* @syscall(i64 6, i8* %9, %struct.stat* %buf) nounwind, !dbg !9798
  %31 = trunc i64 %30 to i32, !dbg !9798
  %32 = icmp eq i32 %31, -1, !dbg !9809
  br i1 %32, label %bb2, label %bb3, !dbg !9809

bb2:                                              ; preds = %__concretize_string.exit
  %33 = tail call i32* @__errno_location() nounwind readnone, !dbg !9810
  %34 = tail call i32 @klee_get_errno() nounwind, !dbg !9810
  store i32 %34, i32* %33, align 4, !dbg !9810
  br label %bb3, !dbg !9810

bb3:                                              ; preds = %bb2, %__concretize_string.exit
  tail call void @free(i8* %9) nounwind, !dbg !9811
  br label %bb4, !dbg !9812

bb4:                                              ; preds = %bb3, %bb
  %.0 = phi i32 [ 0, %bb ], [ %31, %bb3 ]
  ret i32 %.0, !dbg !9793
}

define i32 @__fd_stat(i8* %path, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9813
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9815
  br i1 %1, label %bb1, label %bb, !dbg !9815

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !9816
  %3 = load %struct.stat** %2, align 8, !dbg !9816
  %4 = bitcast %struct.stat* %buf to i8*, !dbg !9816
  %5 = bitcast %struct.stat* %3 to i8*, !dbg !9816
  %6 = call i8* @memcpy(i8* %4, i8* %5, i64 144)
  br label %bb4, !dbg !9817

bb1:                                              ; preds = %entry
  %7 = tail call i64 @strlen(i8* %path) nounwind readonly, !dbg !9818
  %8 = add i64 %7, 1, !dbg !9818
  %9 = tail call noalias i8* @malloc(i64 %8) nounwind, !dbg !9818
  %10 = tail call i8* @strcpy(i8* noalias %9, i8* noalias %path) nounwind, !dbg !9819
  %11 = ptrtoint i8* %9 to i64, !dbg !9820
  %12 = tail call i64 @klee_get_valuel(i64 %11) nounwind, !dbg !9820
  %13 = inttoptr i64 %12 to i8*, !dbg !9820
  %14 = icmp eq i8* %13, %9, !dbg !9823
  %15 = zext i1 %14 to i64, !dbg !9823
  tail call void @klee_assume(i64 %15) nounwind, !dbg !9823
  br label %bb.i, !dbg !9824

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %13, %bb1 ], [ %sc.1.i, %bb13.i ]
  %16 = phi i32 [ 0, %bb1 ], [ %29, %bb13.i ]
  %17 = load i8* %sc.0.i, align 1, !dbg !9825
  %18 = load i8* @UseConcretePath, align 1, !dbg !9826
  %toBool3not.i = icmp eq i8 %18, 0, !dbg !9826
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9826

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %16, -1
  %19 = and i32 %tmp.i, %16, !dbg !9826
  %20 = icmp eq i32 %19, 0, !dbg !9826
  br i1 %20, label %bb8.i, label %bb12.i, !dbg !9826

bb8.i:                                            ; preds = %bb7.i
  switch i8 %17, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9827
  br label %__concretize_string.exit, !dbg !9827

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9828
  %21 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9828
  br label %bb13.i, !dbg !9828

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %22 = sext i8 %17 to i64, !dbg !9829
  %23 = tail call i64 @klee_get_valuel(i64 %22) nounwind, !dbg !9829
  %24 = trunc i64 %23 to i8, !dbg !9829
  %25 = icmp eq i8 %24, %17, !dbg !9830
  %26 = zext i1 %25 to i64, !dbg !9830
  tail call void @klee_assume(i64 %26) nounwind, !dbg !9830
  store i8 %24, i8* %sc.0.i, align 1, !dbg !9831
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9831
  %28 = icmp eq i8 %24, 0, !dbg !9832
  br i1 %28, label %__concretize_string.exit, label %bb13.i, !dbg !9832

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %27, %bb12.i ], [ %21, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %29 = add i32 %16, 1, !dbg !9824
  br label %bb.i, !dbg !9824

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %30 = tail call i64 (i64, ...)* @syscall(i64 4, i8* %9, %struct.stat* %buf) nounwind, !dbg !9822
  %31 = trunc i64 %30 to i32, !dbg !9822
  %32 = icmp eq i32 %31, -1, !dbg !9833
  br i1 %32, label %bb2, label %bb3, !dbg !9833

bb2:                                              ; preds = %__concretize_string.exit
  %33 = tail call i32* @__errno_location() nounwind readnone, !dbg !9834
  %34 = tail call i32 @klee_get_errno() nounwind, !dbg !9834
  store i32 %34, i32* %33, align 4, !dbg !9834
  br label %bb3, !dbg !9834

bb3:                                              ; preds = %bb2, %__concretize_string.exit
  tail call void @free(i8* %9) nounwind, !dbg !9835
  br label %bb4, !dbg !9836

bb4:                                              ; preds = %bb3, %bb
  %.0 = phi i32 [ 0, %bb ], [ %31, %bb3 ]
  ret i32 %.0, !dbg !9817
}

define i64 @write(i32 %fd, i8* %buf, i64 %count) nounwind {
entry:
  %0 = load i32* @n_calls.6018, align 4, !dbg !9837
  %1 = add nsw i32 %0, 1, !dbg !9837
  store i32 %1, i32* @n_calls.6018, align 4, !dbg !9837
  %2 = icmp ult i32 %fd, 32, !dbg !9838
  br i1 %2, label %bb.i, label %bb, !dbg !9838

bb.i:                                             ; preds = %entry
  %3 = sext i32 %fd to i64, !dbg !9840
  %4 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 1, !dbg !9841
  %5 = load i32* %4, align 4, !dbg !9841
  %6 = and i32 %5, 1
  %toBool.i = icmp eq i32 %6, 0, !dbg !9841
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !9841

__get_file.exit:                                  ; preds = %bb.i
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, !dbg !9840
  %8 = icmp eq %struct.exe_file_t* %7, null, !dbg !9842
  br i1 %8, label %bb, label %bb1, !dbg !9842

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !9843
  store i32 9, i32* %9, align 4, !dbg !9843
  br label %bb33, !dbg !9844

bb1:                                              ; preds = %__get_file.exit
  %10 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9845
  %11 = icmp eq i32 %10, 0, !dbg !9845
  br i1 %11, label %bb4, label %bb2, !dbg !9845

bb2:                                              ; preds = %bb1
  %12 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 16), align 8, !dbg !9845
  %13 = load i32* %12, align 4, !dbg !9845
  %14 = icmp eq i32 %13, %1, !dbg !9845
  br i1 %14, label %bb3, label %bb4, !dbg !9845

bb3:                                              ; preds = %bb2
  %15 = add i32 %10, -1, !dbg !9846
  store i32 %15, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9846
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !9847
  store i32 5, i32* %16, align 4, !dbg !9847
  br label %bb33, !dbg !9848

bb4:                                              ; preds = %bb2, %bb1
  %17 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 3, !dbg !9849
  %18 = load %struct.exe_disk_file_t** %17, align 8, !dbg !9849
  %19 = icmp eq %struct.exe_disk_file_t* %18, null, !dbg !9849
  br i1 %19, label %bb5, label %bb20, !dbg !9849

bb5:                                              ; preds = %bb4
  %20 = ptrtoint i8* %buf to i64, !dbg !9850
  %21 = tail call i64 @klee_get_valuel(i64 %20) nounwind, !dbg !9850
  %22 = inttoptr i64 %21 to i8*, !dbg !9850
  %23 = icmp eq i8* %22, %buf, !dbg !9852
  %24 = zext i1 %23 to i64, !dbg !9852
  tail call void @klee_assume(i64 %24) nounwind, !dbg !9852
  %25 = tail call i64 @klee_get_valuel(i64 %count) nounwind, !dbg !9853
  %26 = icmp eq i64 %25, %count, !dbg !9855
  %27 = zext i1 %26 to i64, !dbg !9855
  tail call void @klee_assume(i64 %27) nounwind, !dbg !9855
  tail call void @klee_check_memory_access(i8* %22, i64 %25) nounwind, !dbg !9856
  %28 = tail call i32 @klee_zest_enabled() nounwind, !dbg !9857
  %29 = icmp eq i32 %28, 1, !dbg !9857
  %30 = zext i1 %29 to i8, !dbg !9857
  store i8 %30, i8* @UseConcretePath, align 1, !dbg !9857
  %.not = xor i1 %29, true
  %31 = icmp eq i64 %25, 0, !dbg !9858
  %or.cond = or i1 %31, %.not
  br i1 %or.cond, label %bb10, label %bb7, !dbg !9858

bb7:                                              ; preds = %bb5
  %32 = tail call noalias i8* @malloc(i64 %25) nounwind, !dbg !9859
  %33 = icmp eq i8* %32, null, !dbg !9860
  br i1 %33, label %bb8, label %bb9, !dbg !9860

bb8:                                              ; preds = %bb7
  tail call void @__assert_fail(i8* getelementptr inbounds ([5 x i8]* @.str45371, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16342, i64 0, i64 0), i32 636, i8* getelementptr inbounds ([6 x i8]* @__PRETTY_FUNCTION__.6022, i64 0, i64 0)) nor
  unreachable, !dbg !9860

bb9:                                              ; preds = %bb7
  %34 = call i8* @memcpy(i8* %32, i8* %22, i64 %25)
  %35 = trunc i64 %25 to i32, !dbg !9861
  %36 = ptrtoint i8* %32 to i64, !dbg !9862
  %37 = tail call i64 @klee_get_valuel(i64 %36) nounwind, !dbg !9862
  %38 = inttoptr i64 %37 to i8*, !dbg !9862
  %39 = icmp eq i8* %38, %32, !dbg !9864
  %40 = zext i1 %39 to i64, !dbg !9864
  tail call void @klee_assume(i64 %40) nounwind, !dbg !9864
  %41 = icmp eq i32 %35, 0, !dbg !9865
  br i1 %41, label %bb10, label %bb.lr.ph.i, !dbg !9865

bb.lr.ph.i:                                       ; preds = %bb9
  %tmp1 = and i64 %25, 4294967295
  br label %bb.i35

bb.i35:                                           ; preds = %bb.i35, %bb.lr.ph.i
  %indvar.i = phi i64 [ 0, %bb.lr.ph.i ], [ %indvar.next.i, %bb.i35 ]
  %sc.04.i = getelementptr i8* %38, i64 %indvar.i
  %42 = load i8* %sc.04.i, align 1, !dbg !9866
  %43 = sext i8 %42 to i64, !dbg !9867
  %44 = tail call i64 @klee_get_valuel(i64 %43) nounwind, !dbg !9867
  %45 = trunc i64 %44 to i8, !dbg !9867
  %46 = icmp eq i8 %45, %42, !dbg !9868
  %47 = zext i1 %46 to i64, !dbg !9868
  tail call void @klee_assume(i64 %47) nounwind, !dbg !9868
  store i8 %45, i8* %sc.04.i, align 1, !dbg !9869
  %indvar.next.i = add i64 %indvar.i, 1
  %exitcond2 = icmp eq i64 %indvar.next.i, %tmp1
  br i1 %exitcond2, label %bb10, label %bb.i35, !dbg !9865

bb10:                                             ; preds = %bb.i35, %bb9, %bb5
  %cbuf.0 = phi i8* [ null, %bb5 ], [ %32, %bb9 ], [ %32, %bb.i35 ]
  %buf_addr.0 = phi i8* [ %22, %bb5 ], [ %32, %bb9 ], [ %32, %bb.i35 ]
  %48 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 0, !dbg !9870
  %49 = load i32* %48, align 8, !dbg !9870
  %50 = add i32 %49, -1, !dbg !9870
  %51 = icmp ult i32 %50, 2, !dbg !9870
  br i1 %51, label %bb11, label %bb12, !dbg !9870

bb11:                                             ; preds = %bb10
  %52 = tail call i64 (i64, ...)* @syscall(i64 1, i32 %49, i8* %buf_addr.0, i64 %25) nounwind, !dbg !9871
  br label %bb13, !dbg !9871

bb12:                                             ; preds = %bb10
  %53 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 2, !dbg !9872
  %54 = load i64* %53, align 8, !dbg !9872
  %55 = tail call i64 (i64, ...)* @syscall(i64 18, i32 %49, i8* %buf_addr.0, i64 %25, i64 %54) nounwind, !dbg !9872
  br label %bb13, !dbg !9872

bb13:                                             ; preds = %bb12, %bb11
  %r.0.in = phi i64 [ %52, %bb11 ], [ %55, %bb12 ]
  %r.0 = trunc i64 %r.0.in to i32
  tail call void @free(i8* %cbuf.0) nounwind, !dbg !9873
  %56 = icmp eq i32 %r.0, -1, !dbg !9874
  br i1 %56, label %bb14, label %bb15, !dbg !9874

bb14:                                             ; preds = %bb13
  %57 = tail call i32* @__errno_location() nounwind readnone, !dbg !9875
  %58 = tail call i32 @klee_get_errno() nounwind, !dbg !9875
  store i32 %58, i32* %57, align 4, !dbg !9875
  br label %bb33, !dbg !9876

bb15:                                             ; preds = %bb13
  %59 = icmp slt i32 %r.0, 0, !dbg !9877
  br i1 %59, label %bb16, label %bb17, !dbg !9877

bb16:                                             ; preds = %bb15
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8]* @.str46372, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16342, i64 0, i64 0), i32 650, i8* getelementptr inbounds ([6 x i8]* @__PRETTY_FUNCTION__.6022, i64 0, i64 0)) nor
  unreachable, !dbg !9877

bb17:                                             ; preds = %bb15
  %60 = load i32* %48, align 8, !dbg !9878
  %61 = add i32 %60, -1, !dbg !9878
  %62 = icmp ugt i32 %61, 1, !dbg !9878
  br i1 %62, label %bb18, label %bb17.bb19_crit_edge, !dbg !9878

bb17.bb19_crit_edge:                              ; preds = %bb17
  %.pre = sext i32 %r.0 to i64, !dbg !9879
  br label %bb33

bb18:                                             ; preds = %bb17
  %63 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 2, !dbg !9880
  %64 = load i64* %63, align 8, !dbg !9880
  %65 = sext i32 %r.0 to i64, !dbg !9880
  %66 = add nsw i64 %64, %65, !dbg !9880
  store i64 %66, i64* %63, align 8, !dbg !9880
  br label %bb33, !dbg !9880

bb20:                                             ; preds = %bb4
  %67 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 2, !dbg !9881
  %68 = load i64* %67, align 8, !dbg !9881
  %69 = add i64 %68, %count, !dbg !9881
  %70 = getelementptr inbounds %struct.exe_disk_file_t* %18, i64 0, i32 0, !dbg !9881
  %71 = load i32* %70, align 8, !dbg !9881
  %72 = zext i32 %71 to i64, !dbg !9881
  %73 = icmp ugt i64 %69, %72, !dbg !9881
  br i1 %73, label %bb22, label %bb26, !dbg !9881

bb22:                                             ; preds = %bb20
  %74 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 3), align 8, !dbg !9882
  %75 = icmp eq i32 %74, 0, !dbg !9882
  br i1 %75, label %bb24, label %bb23, !dbg !9882

bb23:                                             ; preds = %bb22
  tail call void @__assert_fail(i8* getelementptr inbounds ([2 x i8]* @.str17343, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16342, i64 0, i64 0), i32 663, i8* getelementptr inbounds ([6 x i8]* @__PRETTY_FUNCTION__.6022, i64 0, i64 0)) nor
  unreachable, !dbg !9883

bb24:                                             ; preds = %bb22
  %76 = icmp slt i64 %68, %72, !dbg !9884
  br i1 %76, label %bb25, label %bb28, !dbg !9884

bb25:                                             ; preds = %bb24
  %77 = sub nsw i64 %72, %68, !dbg !9885
  br label %bb26, !dbg !9885

bb26:                                             ; preds = %bb25, %bb20
  %actual_count.0 = phi i64 [ %77, %bb25 ], [ %count, %bb20 ]
  %78 = icmp eq i64 %actual_count.0, 0, !dbg !9886
  br i1 %78, label %bb28, label %bb27, !dbg !9886

bb27:                                             ; preds = %bb26
  %79 = getelementptr inbounds %struct.exe_disk_file_t* %18, i64 0, i32 1, !dbg !9887
  %80 = load i8** %79, align 8, !dbg !9887
  %81 = getelementptr inbounds i8* %80, i64 %68, !dbg !9887
  %82 = call i8* @memcpy(i8* %81, i8* %buf, i64 %actual_count.0)
  br label %bb28, !dbg !9887

bb28:                                             ; preds = %bb27, %bb26, %bb24
  %actual_count.036 = phi i64 [ 0, %bb26 ], [ %actual_count.0, %bb27 ], [ 0, %bb24 ]
  %83 = icmp eq i64 %actual_count.036, %count, !dbg !9888
  br i1 %83, label %bb30, label %bb29, !dbg !9888

bb29:                                             ; preds = %bb28
  %84 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !9889
  %85 = bitcast %struct.FILE* %84 to i8*, !dbg !9889
  %86 = tail call i64 bitcast (i64 (i8*, i64, i64, %4*)* @fwrite_unlocked to i64 (i8*, i64, i64, i8*)*)(i8* getelementptr inbounds ([33 x i8]* @.str47373, i64 0, i64 0), i64 1, i64 32, i8* %85) nounwind, !dbg !9889
  br label %bb30, !dbg !9889

bb30:                                             ; preds = %bb29, %bb28
  %87 = load %struct.exe_disk_file_t** %17, align 8, !dbg !9890
  %88 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !9890
  %89 = icmp eq %struct.exe_disk_file_t* %87, %88, !dbg !9890
  br i1 %89, label %bb31, label %bb32, !dbg !9890

bb31:                                             ; preds = %bb30
  %90 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 8, !dbg !9891
  %91 = trunc i64 %actual_count.036 to i32, !dbg !9891
  %92 = add i32 %90, %91, !dbg !9891
  store i32 %92, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 8, !dbg !9891
  br label %bb32, !dbg !9891

bb32:                                             ; preds = %bb31, %bb30
  %93 = load i64* %67, align 8, !dbg !9892
  %94 = add i64 %93, %count, !dbg !9892
  store i64 %94, i64* %67, align 8, !dbg !9892
  br label %bb33, !dbg !9893

bb33:                                             ; preds = %bb32, %bb18, %bb17.bb19_crit_edge, %bb14, %bb3, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb14 ], [ %count, %bb32 ], [ %.pre, %bb17.bb19_crit_edge ], [ %65, %bb18 ]
  ret i64 %.0, !dbg !9844
}

define i32 @__fd_open(i8* %pathname, i32 %flags, i32 %mode) nounwind {
entry:
  %buffer = alloca [1024 x i8], align 1
  br label %bb2, !dbg !9894

bb:                                               ; preds = %bb2
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %0 = load i32* %scevgep, align 4, !dbg !9895
  %1 = and i32 %0, 1, !dbg !9895
  %2 = icmp eq i32 %1, 0, !dbg !9895
  br i1 %2, label %bb5, label %bb1, !dbg !9895

bb1:                                              ; preds = %bb
  %indvar.next = add i64 %indvar, 1
  br label %bb2, !dbg !9894

bb2:                                              ; preds = %bb1, %entry
  %indvar = phi i64 [ %indvar.next, %bb1 ], [ 0, %entry ]
  %fd.0 = trunc i64 %indvar to i32
  %3 = icmp slt i32 %fd.0, 32, !dbg !9894
  br i1 %3, label %bb, label %bb3, !dbg !9894

bb3:                                              ; preds = %bb2
  %4 = icmp eq i32 %fd.0, 32, !dbg !9896
  br i1 %4, label %bb4, label %bb5, !dbg !9896

bb4:                                              ; preds = %bb3
  %5 = call i32* @__errno_location() nounwind readnone, !dbg !9897
  store i32 24, i32* %5, align 4, !dbg !9897
  br label %bb36, !dbg !9898

bb5:                                              ; preds = %bb3, %bb
  %6 = sext i32 %fd.0 to i64, !dbg !9899
  %7 = and i32 %flags, 3, !dbg !9900
  %8 = icmp eq i32 %7, 0, !dbg !9900
  %9 = zext i1 %8 to i8, !dbg !9900
  %10 = call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 %flags, i8 zeroext %9) nounwind, !dbg !9900
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !9901
  br i1 %11, label %bb16, label %bb6, !dbg !9901

bb6:                                              ; preds = %bb5
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 3, !dbg !9902
  store %struct.exe_disk_file_t* %10, %struct.exe_disk_file_t** %12, align 8, !dbg !9902
  %13 = and i32 %flags, 192
  switch i32 %13, label %bb12 [
    i32 192, label %bb8
    i32 128, label %bb11
  ]

bb8:                                              ; preds = %bb6
  %14 = call i32* @__errno_location() nounwind readnone, !dbg !9903
  store i32 17, i32* %14, align 4, !dbg !9903
  br label %bb36, !dbg !9904

bb11:                                             ; preds = %bb6
  %15 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !9905
  %16 = bitcast %struct.FILE* %15 to i8*, !dbg !9905
  %17 = call i64 bitcast (i64 (i8*, i64, i64, %4*)* @fwrite_unlocked to i64 (i8*, i64, i64, i8*)*)(i8* getelementptr inbounds ([47 x i8]* @.str48374, i64 0, i64 0), i64 1, i64 46, i8* %16) nounwind, !dbg !9905
  %18 = call i32* @__errno_location() nounwind readnone, !dbg !9906
  store i32 13, i32* %18, align 4, !dbg !9906
  br label %bb36, !dbg !9907

bb12:                                             ; preds = %bb6
  %19 = getelementptr inbounds %struct.exe_disk_file_t* %10, i64 0, i32 3, !dbg !9908
  %20 = load %struct.stat** %19, align 8, !dbg !9908
  %21 = getelementptr inbounds %struct.stat* %20, i64 0, i32 3, !dbg !9909
  %22 = load i32* %21, align 8, !dbg !9909
  %23 = and i32 %flags, 2, !dbg !9910
  %24 = icmp eq i32 %23, 0, !dbg !9910
  br i1 %24, label %bb9.i, label %bb7.i, !dbg !9911

bb7.i:                                            ; preds = %bb12
  %25 = and i32 %22, 292, !dbg !9911
  %26 = icmp eq i32 %25, 0, !dbg !9911
  br i1 %26, label %bb9.i, label %bb13, !dbg !9911

bb9.i:                                            ; preds = %bb7.i, %bb12
  br i1 %8, label %bb14, label %bb10.i, !dbg !9912

bb10.i:                                           ; preds = %bb9.i
  %27 = and i32 %22, 146, !dbg !9912
  %28 = icmp eq i32 %27, 0, !dbg !9912
  br i1 %28, label %bb13, label %bb14, !dbg !9912

bb13:                                             ; preds = %bb10.i, %bb7.i
  %29 = call i32* @__errno_location() nounwind readnone, !dbg !9913
  store i32 13, i32* %29, align 4, !dbg !9913
  br label %bb36, !dbg !9914

bb14:                                             ; preds = %bb10.i, %bb9.i
  %30 = and i32 %22, -512, !dbg !9915
  %31 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 1), align 8, !dbg !9915
  %not = xor i32 %31, -1, !dbg !9915
  %32 = and i32 %not, %mode, !dbg !9915
  %33 = or i32 %32, %30, !dbg !9915
  store i32 %33, i32* %21, align 8, !dbg !9915
  br label %bb30, !dbg !9915

bb16:                                             ; preds = %bb5
  %34 = ptrtoint i8* %pathname to i64, !dbg !9916
  %35 = call i64 @klee_get_valuel(i64 %34) nounwind, !dbg !9916
  %36 = inttoptr i64 %35 to i8*, !dbg !9916
  %37 = icmp eq i8* %36, %pathname, !dbg !9919
  %38 = zext i1 %37 to i64, !dbg !9919
  call void @klee_assume(i64 %38) nounwind, !dbg !9919
  br label %bb.i42, !dbg !9920

bb.i42:                                           ; preds = %bb13.i, %bb16
  %sc.0.i = phi i8* [ %36, %bb16 ], [ %sc.1.i, %bb13.i ]
  %39 = phi i32 [ 0, %bb16 ], [ %52, %bb13.i ]
  %40 = load i8* %sc.0.i, align 1, !dbg !9921
  %41 = load i8* @UseConcretePath, align 1, !dbg !9922
  %toBool3not.i = icmp eq i8 %41, 0, !dbg !9922
  br i1 %toBool3not.i, label %bb7.i43, label %bb12.i45, !dbg !9922

bb7.i43:                                          ; preds = %bb.i42
  %tmp.i = add i32 %39, -1
  %42 = and i32 %tmp.i, %39, !dbg !9922
  %43 = icmp eq i32 %42, 0, !dbg !9922
  br i1 %43, label %bb8.i, label %bb12.i45, !dbg !9922

bb8.i:                                            ; preds = %bb7.i43
  switch i8 %40, label %bb13.i [
    i8 0, label %bb9.i44
    i8 47, label %bb11.i
  ]

bb9.i44:                                          ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9923
  br label %__concretize_string.exit, !dbg !9923

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9924
  %44 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9924
  br label %bb13.i, !dbg !9924

bb12.i45:                                         ; preds = %bb7.i43, %bb.i42
  %45 = sext i8 %40 to i64, !dbg !9925
  %46 = call i64 @klee_get_valuel(i64 %45) nounwind, !dbg !9925
  %47 = trunc i64 %46 to i8, !dbg !9925
  %48 = icmp eq i8 %47, %40, !dbg !9926
  %49 = zext i1 %48 to i64, !dbg !9926
  call void @klee_assume(i64 %49) nounwind, !dbg !9926
  store i8 %47, i8* %sc.0.i, align 1, !dbg !9927
  %50 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9927
  %51 = icmp eq i8 %47, 0, !dbg !9928
  br i1 %51, label %__concretize_string.exit, label %bb13.i, !dbg !9928

bb13.i:                                           ; preds = %bb12.i45, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %50, %bb12.i45 ], [ %44, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %52 = add i32 %39, 1, !dbg !9920
  br label %bb.i42, !dbg !9920

__concretize_string.exit:                         ; preds = %bb12.i45, %bb9.i44
  %53 = call i32 @strncmp(i8* %pathname, i8* getelementptr inbounds ([15 x i8]* @.str49375, i64 0, i64 0), i64 14) nounwind readonly, !dbg !9929
  %54 = icmp eq i32 %53, 0, !dbg !9929
  br i1 %54, label %bb17, label %bb26, !dbg !9929

bb17:                                             ; preds = %__concretize_string.exit
  %55 = getelementptr inbounds i8* %pathname, i64 14, !dbg !9930
  %56 = call i64 @strtol(i8* noalias nocapture %55, i8** noalias null, i32 10) nounwind, !dbg !9931
  %57 = trunc i64 %56 to i32, !dbg !9931
  %58 = icmp ult i32 %57, 32, !dbg !9933
  br i1 %58, label %bb.i, label %bb25, !dbg !9933

bb.i:                                             ; preds = %bb17
  %59 = sext i32 %57 to i64, !dbg !9935
  %60 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %59, i32 1, !dbg !9936
  %61 = load i32* %60, align 4, !dbg !9936
  %62 = and i32 %61, 1
  %toBool.i = icmp eq i32 %62, 0, !dbg !9936
  br i1 %toBool.i, label %bb25, label %__get_file.exit, !dbg !9936

__get_file.exit:                                  ; preds = %bb.i
  %63 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %59, !dbg !9935
  %64 = icmp eq %struct.exe_file_t* %63, null, !dbg !9937
  br i1 %64, label %bb25, label %bb19, !dbg !9937

bb19:                                             ; preds = %__get_file.exit
  %65 = call i8* @strchr(i8* %55, i32 47) nounwind readonly, !dbg !9938
  %66 = icmp eq i8* %65, null, !dbg !9939
  %. = select i1 %66, i8* getelementptr inbounds ([1 x i8]* @.str50376, i64 0, i64 0), i8* %65
  %67 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %59, i32 0, !dbg !9939
  %68 = load i32* %67, align 8, !dbg !9939
  %buffer23 = getelementptr inbounds [1024 x i8]* %buffer, i64 0, i64 0, !dbg !9939
  %69 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %buffer23, i64 1023, i8* noalias getelementptr inbounds ([19 x i8]* @.str51377, i64 0, i64 0), i32 %68, i8* %.) nounwind, !dbg !9939
  %70 = getelementptr inbounds [1024 x i8]* %buffer, i64 0, i64 1023, !dbg !9940
  store i8 0, i8* %70, align 1, !dbg !9940
  %71 = call i64 (i64, ...)* @syscall(i64 2, i8* %buffer23, i32 %flags, i32 %mode) nounwind, !dbg !9941
  br label %bb27, !dbg !9941

bb25:                                             ; preds = %__get_file.exit, %bb.i, %bb17
  %72 = call i64 (i64, ...)* @syscall(i64 2, i8* %pathname, i32 %flags, i32 %mode) nounwind, !dbg !9942
  br label %bb27, !dbg !9942

bb26:                                             ; preds = %__concretize_string.exit
  %73 = call i64 (i64, ...)* @syscall(i64 2, i8* %pathname, i32 %flags, i32 %mode) nounwind, !dbg !9943
  br label %bb27, !dbg !9943

bb27:                                             ; preds = %bb26, %bb25, %bb19
  %os_fd.0.in = phi i64 [ %71, %bb19 ], [ %72, %bb25 ], [ %73, %bb26 ]
  %os_fd.0 = trunc i64 %os_fd.0.in to i32
  %74 = icmp eq i32 %os_fd.0, -1, !dbg !9944
  br i1 %74, label %bb28, label %bb29, !dbg !9944

bb28:                                             ; preds = %bb27
  %75 = call i32* @__errno_location() nounwind readnone, !dbg !9945
  %76 = call i32 @klee_get_errno() nounwind, !dbg !9945
  store i32 %76, i32* %75, align 4, !dbg !9945
  br label %bb36, !dbg !9946

bb29:                                             ; preds = %bb27
  %77 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 0, !dbg !9947
  store i32 %os_fd.0, i32* %77, align 8, !dbg !9947
  br label %bb30, !dbg !9947

bb30:                                             ; preds = %bb29, %bb14
  %78 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 1, !dbg !9948
  store i32 1, i32* %78, align 4, !dbg !9948
  br i1 %8, label %bb31, label %bb32, !dbg !9949

bb31:                                             ; preds = %bb30
  store i32 5, i32* %78, align 4, !dbg !9950
  br label %bb36, !dbg !9950

bb32:                                             ; preds = %bb30
  %79 = icmp eq i32 %7, 1, !dbg !9951
  br i1 %79, label %bb33, label %bb34, !dbg !9951

bb33:                                             ; preds = %bb32
  store i32 9, i32* %78, align 4, !dbg !9952
  br label %bb36, !dbg !9952

bb34:                                             ; preds = %bb32
  store i32 13, i32* %78, align 4, !dbg !9953
  br label %bb36, !dbg !9953

bb36:                                             ; preds = %bb34, %bb33, %bb31, %bb28, %bb13, %bb11, %bb8, %bb4
  %.0 = phi i32 [ -1, %bb4 ], [ -1, %bb8 ], [ -1, %bb11 ], [ -1, %bb13 ], [ -1, %bb28 ], [ %fd.0, %bb34 ], [ %fd.0, %bb33 ], [ %fd.0, %bb31 ]
  ret i32 %.0, !dbg !9898
}

define i32 @__fd_openat(i32 %basefd, i8* %pathname, i32 %flags, i32 %mode) nounwind {
entry:
  %0 = icmp eq i32 %basefd, -100, !dbg !9954
  br i1 %0, label %bb5, label %bb, !dbg !9954

bb:                                               ; preds = %entry
  %1 = icmp ult i32 %basefd, 32, !dbg !9955
  br i1 %1, label %bb.i, label %bb1, !dbg !9955

bb.i:                                             ; preds = %bb
  %2 = sext i32 %basefd to i64, !dbg !9957
  %3 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %2, i32 1, !dbg !9958
  %4 = load i32* %3, align 4, !dbg !9958
  %5 = and i32 %4, 1
  %toBool.i = icmp eq i32 %5, 0, !dbg !9958
  br i1 %toBool.i, label %bb1, label %__get_file.exit, !dbg !9958

__get_file.exit:                                  ; preds = %bb.i
  %6 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %2, !dbg !9957
  %7 = icmp eq %struct.exe_file_t* %6, null, !dbg !9959
  br i1 %7, label %bb1, label %bb2, !dbg !9959

bb1:                                              ; preds = %__get_file.exit, %bb.i, %bb
  %8 = tail call i32* @__errno_location() nounwind readnone, !dbg !9960
  store i32 9, i32* %8, align 4, !dbg !9960
  br label %bb21, !dbg !9961

bb2:                                              ; preds = %__get_file.exit
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %2, i32 3, !dbg !9962
  %10 = load %struct.exe_disk_file_t** %9, align 8, !dbg !9962
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !9962
  br i1 %11, label %bb4, label %bb3, !dbg !9962

bb3:                                              ; preds = %bb2
  tail call void @klee_warning(i8* getelementptr inbounds ([44 x i8]* @.str52378, i64 0, i64 0)) nounwind, !dbg !9963
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !9964
  store i32 2, i32* %12, align 4, !dbg !9964
  br label %bb21, !dbg !9965

bb4:                                              ; preds = %bb2
  %13 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %2, i32 0, !dbg !9966
  %14 = load i32* %13, align 8, !dbg !9966
  %phitmp = sext i32 %14 to i64
  br label %bb5, !dbg !9966

bb5:                                              ; preds = %bb4, %entry
  %basefd_addr.0 = phi i64 [ %phitmp, %bb4 ], [ -100, %entry ]
  %15 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !9967
  %16 = icmp eq %struct.exe_disk_file_t* %15, null, !dbg !9968
  br i1 %16, label %bb10, label %bb6, !dbg !9968

bb6:                                              ; preds = %bb5
  %17 = tail call i32 @__fd_open(i8* %pathname, i32 %flags, i32 %mode) nounwind, !dbg !9969
  br label %bb21, !dbg !9969

bb8:                                              ; preds = %bb10
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %18 = load i32* %scevgep, align 4, !dbg !9970
  %19 = and i32 %18, 1, !dbg !9970
  %20 = icmp eq i32 %19, 0, !dbg !9970
  br i1 %20, label %bb13, label %bb9, !dbg !9970

bb9:                                              ; preds = %bb8
  %indvar.next = add i64 %indvar, 1
  br label %bb10, !dbg !9971

bb10:                                             ; preds = %bb9, %bb5
  %indvar = phi i64 [ %indvar.next, %bb9 ], [ 0, %bb5 ]
  %fd.0 = trunc i64 %indvar to i32
  %21 = icmp slt i32 %fd.0, 32, !dbg !9971
  br i1 %21, label %bb8, label %bb11, !dbg !9971

bb11:                                             ; preds = %bb10
  %22 = icmp eq i32 %fd.0, 32, !dbg !9972
  br i1 %22, label %bb12, label %bb13, !dbg !9972

bb12:                                             ; preds = %bb11
  %23 = tail call i32* @__errno_location() nounwind readnone, !dbg !9973
  store i32 24, i32* %23, align 4, !dbg !9973
  br label %bb21, !dbg !9974

bb13:                                             ; preds = %bb11, %bb8
  %24 = sext i32 %fd.0 to i64, !dbg !9975
  %25 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %24, !dbg !9975
  %26 = bitcast %struct.exe_file_t* %25 to i8*, !dbg !9976
  %27 = call i8* @memset(i8* %26, i32 0, i64 56)
  %28 = sext i32 %flags to i64, !dbg !9977
  %29 = ptrtoint i8* %pathname to i64, !dbg !9978
  %30 = tail call i64 @klee_get_valuel(i64 %29) nounwind, !dbg !9978
  %31 = inttoptr i64 %30 to i8*, !dbg !9978
  %32 = icmp eq i8* %31, %pathname, !dbg !9980
  %33 = zext i1 %32 to i64, !dbg !9980
  tail call void @klee_assume(i64 %33) nounwind, !dbg !9980
  br label %bb.i23, !dbg !9981

bb.i23:                                           ; preds = %bb13.i, %bb13
  %sc.0.i = phi i8* [ %31, %bb13 ], [ %sc.1.i, %bb13.i ]
  %34 = phi i32 [ 0, %bb13 ], [ %47, %bb13.i ]
  %35 = load i8* %sc.0.i, align 1, !dbg !9982
  %36 = load i8* @UseConcretePath, align 1, !dbg !9983
  %toBool3not.i = icmp eq i8 %36, 0, !dbg !9983
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9983

bb7.i:                                            ; preds = %bb.i23
  %tmp.i = add i32 %34, -1
  %37 = and i32 %tmp.i, %34, !dbg !9983
  %38 = icmp eq i32 %37, 0, !dbg !9983
  br i1 %38, label %bb8.i, label %bb12.i, !dbg !9983

bb8.i:                                            ; preds = %bb7.i
  switch i8 %35, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9984
  br label %__concretize_string.exit, !dbg !9984

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9985
  %39 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9985
  br label %bb13.i, !dbg !9985

bb12.i:                                           ; preds = %bb7.i, %bb.i23
  %40 = sext i8 %35 to i64, !dbg !9986
  %41 = tail call i64 @klee_get_valuel(i64 %40) nounwind, !dbg !9986
  %42 = trunc i64 %41 to i8, !dbg !9986
  %43 = icmp eq i8 %42, %35, !dbg !9987
  %44 = zext i1 %43 to i64, !dbg !9987
  tail call void @klee_assume(i64 %44) nounwind, !dbg !9987
  store i8 %42, i8* %sc.0.i, align 1, !dbg !9988
  %45 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9988
  %46 = icmp eq i8 %42, 0, !dbg !9989
  br i1 %46, label %__concretize_string.exit, label %bb13.i, !dbg !9989

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %45, %bb12.i ], [ %39, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %47 = add i32 %34, 1, !dbg !9981
  br label %bb.i23, !dbg !9981

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %48 = tail call i64 (i64, ...)* @syscall(i64 257, i64 %basefd_addr.0, i8* %pathname, i64 %28, i32 %mode) nounwind, !dbg !9977
  %49 = trunc i64 %48 to i32, !dbg !9977
  %50 = icmp eq i32 %49, -1, !dbg !9990
  br i1 %50, label %bb14, label %bb15, !dbg !9990

bb14:                                             ; preds = %__concretize_string.exit
  %51 = tail call i32* @__errno_location() nounwind readnone, !dbg !9991
  %52 = tail call i32 @klee_get_errno() nounwind, !dbg !9991
  store i32 %52, i32* %51, align 4, !dbg !9991
  br label %bb21, !dbg !9992

bb15:                                             ; preds = %__concretize_string.exit
  %53 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %24, i32 0, !dbg !9993
  store i32 %49, i32* %53, align 8, !dbg !9993
  %54 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %24, i32 1, !dbg !9994
  store i32 1, i32* %54, align 4, !dbg !9994
  %55 = and i32 %flags, 3, !dbg !9995
  switch i32 %55, label %bb19 [
    i32 0, label %bb16
    i32 1, label %bb18
  ]

bb16:                                             ; preds = %bb15
  store i32 5, i32* %54, align 4, !dbg !9996
  br label %bb21, !dbg !9996

bb18:                                             ; preds = %bb15
  store i32 9, i32* %54, align 4, !dbg !9997
  br label %bb21, !dbg !9997

bb19:                                             ; preds = %bb15
  store i32 13, i32* %54, align 4, !dbg !9998
  br label %bb21, !dbg !9998

bb21:                                             ; preds = %bb19, %bb18, %bb16, %bb14, %bb12, %bb6, %bb3, %bb1
  %.0 = phi i32 [ -1, %bb1 ], [ -1, %bb3 ], [ %17, %bb6 ], [ -1, %bb12 ], [ -1, %bb14 ], [ %fd.0, %bb19 ], [ %fd.0, %bb18 ], [ %fd.0, %bb16 ]
  ret i32 %.0, !dbg !9961
}

define weak i32 @__syscall_rt_sigaction(i32 %signum, %struct.sigaction* %act, %struct.sigaction* %oldact, i64 %_something) nounwind {
entry:
  tail call void @klee_warning_once(i8* getelementptr inbounds ([18 x i8]* @.str20416, i64 0, i64 0)) nounwind, !dbg !9999
  ret i32 0, !dbg !10001
}

define weak i32 @_IO_getc(%struct.FILE* %f) nounwind {
entry:
  %0 = tail call i32 bitcast (i32 (%4*)* @__fgetc_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %f) nounwind, !dbg !10002
  ret i32 %0, !dbg !10002
}

define weak i32 @_IO_putc(i32 %c, %struct.FILE* %f) nounwind {
entry:
  %0 = tail call i32 bitcast (i32 (i32, %4*)* @__fputc_unlocked to i32 (i32, %struct.FILE*)*)(i32 %c, %struct.FILE* %f) nounwind, !dbg !10004
  ret i32 %0, !dbg !10004
}

define weak i32 @rename(i8* %oldpath, i8* %newpath) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([48 x i8]* @.str11407, i64 0, i64 0)) nounwind, !dbg !10006
  %0 = tail call i64 (i64, ...)* @syscall(i64 82, i8* %oldpath, i8* %newpath) nounwind, !dbg !10007
  %1 = trunc i64 %0 to i32, !dbg !10007
  %2 = icmp eq i32 %1, -1, !dbg !10008
  br i1 %2, label %bb, label %bb1, !dbg !10008

bb:                                               ; preds = %entry
  %3 = tail call i32* @__errno_location() nounwind readnone, !dbg !10009
  %4 = tail call i32 @klee_get_errno() nounwind, !dbg !10009
  store i32 %4, i32* %3, align 4, !dbg !10009
  br label %bb1, !dbg !10009

bb1:                                              ; preds = %bb, %entry
  ret i32 %1, !dbg !10010
}

define weak i32 @clock_gettime(i32 %clk_id, %struct.timespec* %res) nounwind {
entry:
  %tv = alloca %struct.timespec, align 8
  %0 = call i32 @gettimeofday(%struct.timespec* noalias %tv, %struct.__mbstate_t* noalias null) nounwind, !dbg !10011
  %1 = getelementptr inbounds %struct.timespec* %tv, i64 0, i32 0, !dbg !10012
  %2 = load i64* %1, align 8, !dbg !10012
  %3 = getelementptr inbounds %struct.timespec* %res, i64 0, i32 0, !dbg !10012
  store i64 %2, i64* %3, align 8, !dbg !10012
  %4 = getelementptr inbounds %struct.timespec* %tv, i64 0, i32 1, !dbg !10013
  %5 = load i64* %4, align 8, !dbg !10013
  %6 = mul nsw i64 %5, 1000, !dbg !10013
  %7 = getelementptr inbounds %struct.timespec* %res, i64 0, i32 1, !dbg !10013
  store i64 %6, i64* %7, align 8, !dbg !10013
  ret i32 0, !dbg !10014
}

define weak i32 @clock_settime(i32 %clk_id, %struct.timespec* %res) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([17 x i8]* @.str4401, i64 0, i64 0)) nounwind, !dbg !10015
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !10017
  store i32 1, i32* %0, align 4, !dbg !10017
  ret i32 -1, !dbg !10018
}

define i32 @strverscmp(i8* nocapture %__s1, i8* nocapture %__s2) nounwind readonly {
entry:
  %0 = tail call i32 @strcmp(i8* %__s1, i8* %__s2) nounwind readonly, !dbg !10019
  ret i32 %0, !dbg !10020
}

define weak i32 @gnu_dev_major(i64 %__dev) nounwind readnone {
entry:
  %int_cast_to_i64 = bitcast i64 8 to i64
  %0 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %0, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %1 = lshr i64 %__dev, 8, !dbg !10021
  %2 = trunc i64 %1 to i32, !dbg !10021
  %3 = and i32 %2, 4095, !dbg !10021
  %int_cast_to_i641 = bitcast i64 32 to i64
  %4 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %4, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %5 = lshr i64 %__dev, 32, !dbg !10021
  %6 = trunc i64 %5 to i32, !dbg !10021
  %7 = and i32 %6, -4096, !dbg !10021
  %8 = or i32 %3, %7, !dbg !10021
  ret i32 %8, !dbg !10021
}

define weak i32 @gnu_dev_minor(i64 %__dev) nounwind readnone {
entry:
  %0 = trunc i64 %__dev to i32, !dbg !10023
  %1 = and i32 %0, 255, !dbg !10023
  %int_cast_to_i64 = bitcast i64 12 to i64
  %2 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %2, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %3 = lshr i64 %__dev, 12, !dbg !10023
  %4 = trunc i64 %3 to i32, !dbg !10023
  %5 = and i32 %4, -256, !dbg !10023
  %6 = or i32 %5, %1, !dbg !10023
  ret i32 %6, !dbg !10023
}

define weak i64 @gnu_dev_makedev(i32 %__major, i32 %__minor) nounwind readnone {
entry:
  %0 = and i32 %__minor, 255, !dbg !10025
  %int_cast_to_i64 = zext i32 8 to i64
  %1 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %1, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %2 = shl i32 %__major, 8
  %3 = and i32 %2, 1048320, !dbg !10025
  %4 = or i32 %0, %3, !dbg !10025
  %5 = zext i32 %4 to i64, !dbg !10025
  %6 = zext i32 %__minor to i64, !dbg !10025
  %int_cast_to_i641 = bitcast i64 12 to i64
  %7 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %7, label %klee_overshift_check.exit4, label %bb.i3

bb.i3:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit4:                       ; preds = %klee_overshift_check.exit
  %8 = shl nuw nsw i64 %6, 12
  %9 = and i64 %8, 17592184995840, !dbg !10025
  %10 = zext i32 %__major to i64, !dbg !10025
  %int_cast_to_i642 = bitcast i64 32 to i64
  %11 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %11, label %klee_overshift_check.exit6, label %bb.i5

bb.i5:                                            ; preds = %klee_overshift_check.exit4
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit6:                       ; preds = %klee_overshift_check.exit4
  %12 = shl nuw i64 %10, 32
  %13 = and i64 %12, -17592186044416, !dbg !10025
  %14 = or i64 %5, %13, !dbg !10025
  %15 = or i64 %14, %9, !dbg !10025
  ret i64 %15, !dbg !10025
}

define i32 @getsockopt(i32 %sockfd, i32 %level, i32 %optname, i8* nocapture %optval, i32* nocapture %optlen) nounwind readnone {
entry:
  ret i32 0, !dbg !10027
}

define i32 @setsockopt(i32 %sockfd, i32 %level, i32 %optname, i8* nocapture %optval, i32 %optlen) nounwind readnone {
entry:
  ret i32 0, !dbg !10029
}

define i64 @__fd_attach_dgram(%struct.exe_file_t* nocapture %f) nounwind {
entry:
  %0 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 1, !dbg !10031
  %1 = load i32* %0, align 4, !dbg !10031
  %2 = and i32 %1, 32, !dbg !10031
  %3 = icmp eq i32 %2, 0, !dbg !10031
  br i1 %3, label %bb, label %bb9, !dbg !10031

bb:                                               ; preds = %entry
  %4 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 5, !dbg !10033
  %5 = load %struct.exe_sockaddr_t** %4, align 8, !dbg !10033
  %6 = getelementptr inbounds %struct.exe_sockaddr_t* %5, i64 0, i32 0, !dbg !10033
  %7 = load %struct.sockaddr_storage** %6, align 8, !dbg !10033
  %8 = icmp eq %struct.sockaddr_storage* %7, null, !dbg !10033
  br i1 %8, label %bb1, label %bb2, !dbg !10033

bb1:                                              ; preds = %bb
  tail call void @__assert_fail(i8* getelementptr inbounds ([19 x i8]* @.str397, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 840, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7471, i64 0, i64 0)) nor
  unreachable, !dbg !10033

bb2:                                              ; preds = %bb
  %9 = getelementptr inbounds %struct.sockaddr_storage* %7, i64 0, i32 0, !dbg !10033
  %10 = load i16* %9, align 2, !dbg !10033
  switch i16 %10, label %bb6 [
    i16 2, label %bb3
    i16 10, label %bb5
  ]

bb3:                                              ; preds = %bb2
  %11 = bitcast %struct.sockaddr_storage* %7 to %struct.sockaddr_in*, !dbg !10033
  %12 = getelementptr inbounds %struct.sockaddr_in* %11, i64 0, i32 1, !dbg !10033
  %13 = load i16* %12, align 2, !dbg !10033
  %14 = icmp eq i16 %13, 0, !dbg !10033
  %15 = zext i1 %14 to i8, !dbg !10033
  br label %bb7, !dbg !10033

bb5:                                              ; preds = %bb2
  %16 = bitcast %struct.sockaddr_storage* %7 to %struct.sockaddr_in6*, !dbg !10033
  %17 = getelementptr inbounds %struct.sockaddr_in6* %16, i64 0, i32 1, !dbg !10033
  %18 = load i16* %17, align 2, !dbg !10033
  %19 = icmp eq i16 %18, 0, !dbg !10033
  %20 = zext i1 %19 to i8, !dbg !10033
  br label %bb7, !dbg !10033

bb6:                                              ; preds = %bb2
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2399, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 840, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7471, i64 0, i64 0)) no
  unreachable, !dbg !10033

bb7:                                              ; preds = %bb5, %bb3
  %iftmp.121.0 = phi i8 [ %15, %bb3 ], [ %20, %bb5 ]
  %toBool = icmp eq i8 %iftmp.121.0, 0, !dbg !10033
  br i1 %toBool, label %bb12, label %bb8, !dbg !10033

bb8:                                              ; preds = %bb7
  %21 = tail call i32* @__errno_location() nounwind readnone, !dbg !10034
  store i32 107, i32* %21, align 4, !dbg !10034
  br label %bb12, !dbg !10035

bb9:                                              ; preds = %entry
  %22 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 2, !dbg !10036
  store i64 0, i64* %22, align 8, !dbg !10036
  %23 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 12), align 4, !dbg !10037
  %24 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 11), align 8, !dbg !10037
  %25 = icmp ult i32 %23, %24, !dbg !10037
  br i1 %25, label %__get_sym_dgram.exit, label %__get_sym_dgram.exit.thread, !dbg !10037

__get_sym_dgram.exit.thread:                      ; preds = %bb9
  %26 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 3, !dbg !10039
  store %struct.exe_disk_file_t* null, %struct.exe_disk_file_t** %26, align 8, !dbg !10039
  br label %bb10

__get_sym_dgram.exit:                             ; preds = %bb9
  %27 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 13), align 8, !dbg !10040
  %28 = zext i32 %23 to i64, !dbg !10040
  %29 = getelementptr inbounds %struct.exe_disk_file_t* %27, i64 %28, !dbg !10040
  %30 = add i32 %23, 1, !dbg !10040
  store i32 %30, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 12), align 4, !dbg !10040
  %31 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 3, !dbg !10039
  store %struct.exe_disk_file_t* %29, %struct.exe_disk_file_t** %31, align 8, !dbg !10039
  %32 = icmp eq %struct.exe_disk_file_t* %29, null, !dbg !10041
  br i1 %32, label %bb10, label %bb12, !dbg !10041

bb10:                                             ; preds = %__get_sym_dgram.exit, %__get_sym_dgram.exit.thread
  %33 = phi %struct.exe_disk_file_t** [ %26, %__get_sym_dgram.exit.thread ], [ %31, %__get_sym_dgram.exit ]
  store %struct.exe_disk_file_t* @dummy_dfile, %struct.exe_disk_file_t** %33, align 8, !dbg !10042
  %34 = tail call i32* @__errno_location() nounwind readnone, !dbg !10043
  store i32 111, i32* %34, align 4, !dbg !10043
  br label %bb12, !dbg !10044

bb12:                                             ; preds = %bb10, %__get_sym_dgram.exit, %bb8, %bb7
  %.0 = phi i64 [ -1, %bb8 ], [ -1, %bb10 ], [ 0, %bb7 ], [ 0, %__get_sym_dgram.exit ]
  ret i64 %.0, !dbg !10035
}

define weak %struct._cap_struct* @cap_get_file(i8* %path_p) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([31 x i8]* @.str3400, i64 0, i64 0)) nounwind, !dbg !10045
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !10047
  store i32 2, i32* %0, align 4, !dbg !10047
  ret %struct._cap_struct* null, !dbg !10048
}

define i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %fd) nounwind, !dbg !10049
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10050
  br i1 %1, label %bb, label %bb1, !dbg !10050

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10051
  store i32 9, i32* %2, align 4, !dbg !10051
  br label %bb14, !dbg !10052

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10053
  %4 = load i32* %3, align 4, !dbg !10053
  %5 = and i32 %4, 16, !dbg !10053
  %6 = icmp eq i32 %5, 0, !dbg !10053
  br i1 %6, label %bb2, label %bb3, !dbg !10053

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10054
  store i32 88, i32* %7, align 4, !dbg !10054
  br label %bb14, !dbg !10055

bb3:                                              ; preds = %bb1
  %8 = icmp eq %struct.msghdr* %msg, null, !dbg !10056
  br i1 %8, label %bb4, label %bb5, !dbg !10056

bb4:                                              ; preds = %bb3
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !10057
  store i32 14, i32* %9, align 4, !dbg !10057
  br label %bb14, !dbg !10058

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10059
  %11 = load %struct.exe_disk_file_t** %10, align 8, !dbg !10059
  %12 = icmp eq %struct.exe_disk_file_t* %11, null, !dbg !10059
  br i1 %12, label %bb6, label %bb7, !dbg !10059

bb6:                                              ; preds = %bb5
  tail call void @__assert_fail(i8* getelementptr inbounds ([25 x i8]* @.str5402, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 818, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7439, i64 0, i64 0)) no
  unreachable, !dbg !10060

bb7:                                              ; preds = %bb5
  %13 = tail call i64 @__fd_attach_dgram(%struct.exe_file_t* %0) nounwind, !dbg !10061
  %14 = icmp slt i64 %13, 0, !dbg !10061
  br i1 %14, label %bb14, label %bb9, !dbg !10061

bb9:                                              ; preds = %bb7
  %15 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !10062
  %16 = load i8** %15, align 8, !dbg !10062
  %17 = icmp eq i8* %16, null, !dbg !10062
  %.pre = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 1, !dbg !10063
  br i1 %17, label %bb11, label %bb10, !dbg !10062

bb10:                                             ; preds = %bb9
  %18 = load i32* %.pre, align 8, !dbg !10064
  %19 = zext i32 %18 to i64, !dbg !10064
  tail call void @klee_check_memory_access(i8* %16, i64 %19) nounwind, !dbg !10064
  %20 = load %struct.exe_disk_file_t** %10, align 8, !dbg !10065
  %21 = getelementptr inbounds %struct.exe_disk_file_t* %20, i64 0, i32 4, !dbg !10065
  %22 = load %struct.exe_sockaddr_t** %21, align 8, !dbg !10065
  %23 = getelementptr inbounds %struct.exe_sockaddr_t* %22, i64 0, i32 1, !dbg !10065
  %24 = load i32* %23, align 8, !dbg !10065
  %25 = zext i32 %24 to i64, !dbg !10065
  %26 = getelementptr inbounds %struct.exe_sockaddr_t* %22, i64 0, i32 0, !dbg !10065
  %27 = load %struct.sockaddr_storage** %26, align 8, !dbg !10065
  %28 = load i8** %15, align 8, !dbg !10065
  %29 = bitcast %struct.sockaddr_storage* %27 to i8*, !dbg !10065
  %30 = call i8* @memcpy(i8* %28, i8* %29, i64 %25)
  br label %bb11, !dbg !10065

bb11:                                             ; preds = %bb10, %bb9
  %31 = load %struct.exe_disk_file_t** %10, align 8, !dbg !10063
  %32 = getelementptr inbounds %struct.exe_disk_file_t* %31, i64 0, i32 4, !dbg !10063
  %33 = load %struct.exe_sockaddr_t** %32, align 8, !dbg !10063
  %34 = getelementptr inbounds %struct.exe_sockaddr_t* %33, i64 0, i32 1, !dbg !10063
  %35 = load i32* %34, align 8, !dbg !10063
  store i32 %35, i32* %.pre, align 8, !dbg !10063
  %36 = icmp eq i32 %flags, 0, !dbg !10066
  br i1 %36, label %bb13, label %bb12, !dbg !10066

bb12:                                             ; preds = %bb11
  tail call void @klee_warning(i8* getelementptr inbounds ([28 x i8]* @.str6403, i64 0, i64 0)) nounwind, !dbg !10067
  br label %bb13, !dbg !10067

bb13:                                             ; preds = %bb12, %bb11
  %37 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 3, !dbg !10068
  %38 = load i64* %37, align 8, !dbg !10068
  %39 = trunc i64 %38 to i32, !dbg !10068
  %40 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 2, !dbg !10068
  %41 = load %struct.iovec** %40, align 8, !dbg !10068
  %42 = tail call i64 @__fd_scatter_read(%struct.exe_file_t* %0, %struct.iovec* %41, i32 %39) nounwind, !dbg !10068
  br label %bb14, !dbg !10068

bb14:                                             ; preds = %bb13, %bb7, %bb4, %bb2, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %42, %bb13 ], [ -1, %bb7 ]
  ret i64 %.0, !dbg !10052
}

define i64 @recvmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind {
entry:
  %0 = tail call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind, !dbg !10069
  ret i64 %0, !dbg !10069
}

define i64 @__fd_recvfrom(i32 %fd, i8* %buf, i64 %len, i32 %flags, %struct.sockaddr* %from, i32* %fromlen) nounwind {
entry:
  %iov = alloca %struct.iovec, align 8
  %msg = alloca %struct.msghdr, align 8
  %0 = icmp ne %struct.sockaddr* %from, null, !dbg !10071
  %1 = icmp eq i32* %fromlen, null, !dbg !10071
  %2 = and i1 %0, %1, !dbg !10071
  br i1 %2, label %bb, label %bb3, !dbg !10071

bb:                                               ; preds = %entry
  %3 = call i32* @__errno_location() nounwind readnone, !dbg !10072
  store i32 14, i32* %3, align 4, !dbg !10072
  br label %bb9, !dbg !10073

bb3:                                              ; preds = %entry
  %4 = getelementptr inbounds %struct.iovec* %iov, i64 0, i32 0, !dbg !10074
  store i8* %buf, i8** %4, align 8, !dbg !10074
  %5 = getelementptr inbounds %struct.iovec* %iov, i64 0, i32 1, !dbg !10075
  store i64 %len, i64* %5, align 8, !dbg !10075
  %6 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !10076
  %7 = bitcast %struct.sockaddr* %from to i8*, !dbg !10076
  store i8* %7, i8** %6, align 8, !dbg !10076
  br i1 %1, label %bb6, label %bb4, !dbg !10077

bb4:                                              ; preds = %bb3
  %8 = load i32* %fromlen, align 4, !dbg !10077
  br label %bb6, !dbg !10077

bb6:                                              ; preds = %bb4, %bb3
  %iftmp.113.0 = phi i32 [ %8, %bb4 ], [ 0, %bb3 ]
  %9 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 1, !dbg !10077
  store i32 %iftmp.113.0, i32* %9, align 8, !dbg !10077
  %10 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 2, !dbg !10078
  store %struct.iovec* %iov, %struct.iovec** %10, align 8, !dbg !10078
  %11 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 3, !dbg !10079
  store i64 1, i64* %11, align 8, !dbg !10079
  %12 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 4, !dbg !10080
  store i8* null, i8** %12, align 8, !dbg !10080
  %13 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 5, !dbg !10081
  store i64 0, i64* %13, align 8, !dbg !10081
  %14 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 6, !dbg !10082
  store i32 %flags, i32* %14, align 8, !dbg !10082
  %15 = call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind, !dbg !10083
  br i1 %1, label %bb9, label %bb7, !dbg !10084

bb7:                                              ; preds = %bb6
  %16 = load i32* %9, align 8, !dbg !10084
  store i32 %16, i32* %fromlen, align 4, !dbg !10084
  br label %bb9, !dbg !10084

bb9:                                              ; preds = %bb7, %bb6, %bb
  %.0 = phi i64 [ -1, %bb ], [ %15, %bb6 ], [ %15, %bb7 ]
  ret i64 %.0, !dbg !10073
}

define i64 @recvfrom(i32 %fd, i8* %buf, i64 %len, i32 %flags, %struct.sockaddr* %from, i32* %fromlen) nounwind {
entry:
  %iov.i = alloca %struct.iovec, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %0 = icmp ne %struct.sockaddr* %from, null, !dbg !10085
  %1 = icmp eq i32* %fromlen, null, !dbg !10085
  %2 = and i1 %0, %1, !dbg !10085
  br i1 %2, label %bb.i, label %bb3.i, !dbg !10085

bb.i:                                             ; preds = %entry
  %3 = call i32* @__errno_location() nounwind readnone, !dbg !10088
  store i32 14, i32* %3, align 4, !dbg !10088
  br label %__fd_recvfrom.exit, !dbg !10089

bb3.i:                                            ; preds = %entry
  %4 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 0, !dbg !10090
  store i8* %buf, i8** %4, align 8, !dbg !10090
  %5 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 1, !dbg !10091
  store i64 %len, i64* %5, align 8, !dbg !10091
  %6 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !10092
  %7 = bitcast %struct.sockaddr* %from to i8*, !dbg !10092
  store i8* %7, i8** %6, align 8, !dbg !10092
  br i1 %1, label %bb6.i, label %bb4.i, !dbg !10093

bb4.i:                                            ; preds = %bb3.i
  %8 = load i32* %fromlen, align 4, !dbg !10093
  br label %bb6.i, !dbg !10093

bb6.i:                                            ; preds = %bb4.i, %bb3.i
  %iftmp.113.0.i = phi i32 [ %8, %bb4.i ], [ 0, %bb3.i ]
  %9 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !10093
  store i32 %iftmp.113.0.i, i32* %9, align 8, !dbg !10093
  %10 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !10094
  store %struct.iovec* %iov.i, %struct.iovec** %10, align 8, !dbg !10094
  %11 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !10095
  store i64 1, i64* %11, align 8, !dbg !10095
  %12 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !10096
  store i8* null, i8** %12, align 8, !dbg !10096
  %13 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !10097
  store i64 0, i64* %13, align 8, !dbg !10097
  %14 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !10098
  store i32 %flags, i32* %14, align 8, !dbg !10098
  %15 = call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg.i, i32 %flags) nounwind, !dbg !10099
  br i1 %1, label %__fd_recvfrom.exit, label %bb7.i, !dbg !10100

bb7.i:                                            ; preds = %bb6.i
  %16 = load i32* %9, align 8, !dbg !10100
  store i32 %16, i32* %fromlen, align 4, !dbg !10100
  br label %__fd_recvfrom.exit, !dbg !10100

__fd_recvfrom.exit:                               ; preds = %bb7.i, %bb6.i, %bb.i
  %.0.i = phi i64 [ -1, %bb.i ], [ %15, %bb6.i ], [ %15, %bb7.i ]
  ret i64 %.0.i, !dbg !10086
}

define i64 @__fd_recv(i32 %fd, i8* %buf, i64 %len, i32 %flags) nounwind {
__fd_recvfrom.exit:
  %iov.i = alloca %struct.iovec, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 0, !dbg !10101
  store i8* %buf, i8** %0, align 8, !dbg !10101
  %1 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 1, !dbg !10104
  store i64 %len, i64* %1, align 8, !dbg !10104
  %2 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !10105
  store i8* null, i8** %2, align 8, !dbg !10105
  %3 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !10106
  store i32 0, i32* %3, align 8, !dbg !10106
  %4 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !10107
  store %struct.iovec* %iov.i, %struct.iovec** %4, align 8, !dbg !10107
  %5 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !10108
  store i64 1, i64* %5, align 8, !dbg !10108
  %6 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !10109
  store i8* null, i8** %6, align 8, !dbg !10109
  %7 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !10110
  store i64 0, i64* %7, align 8, !dbg !10110
  %8 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !10111
  store i32 %flags, i32* %8, align 8, !dbg !10111
  %9 = call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg.i, i32 %flags) nounwind, !dbg !10112
  ret i64 %9, !dbg !10102
}

define i64 @recv(i32 %fd, i8* %buf, i64 %len, i32 %flags) nounwind {
entry:
  %iov.i.i = alloca %struct.iovec, align 8
  %msg.i.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.iovec* %iov.i.i, i64 0, i32 0, !dbg !10113
  store i8* %buf, i8** %0, align 8, !dbg !10113
  %1 = getelementptr inbounds %struct.iovec* %iov.i.i, i64 0, i32 1, !dbg !10117
  store i64 %len, i64* %1, align 8, !dbg !10117
  %2 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 0, !dbg !10118
  store i8* null, i8** %2, align 8, !dbg !10118
  %3 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 1, !dbg !10119
  store i32 0, i32* %3, align 8, !dbg !10119
  %4 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 2, !dbg !10120
  store %struct.iovec* %iov.i.i, %struct.iovec** %4, align 8, !dbg !10120
  %5 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 3, !dbg !10121
  store i64 1, i64* %5, align 8, !dbg !10121
  %6 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 4, !dbg !10122
  store i8* null, i8** %6, align 8, !dbg !10122
  %7 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 5, !dbg !10123
  store i64 0, i64* %7, align 8, !dbg !10123
  %8 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 6, !dbg !10124
  store i32 %flags, i32* %8, align 8, !dbg !10124
  %9 = call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg.i.i, i32 %flags) nounwind, !dbg !10125
  ret i64 %9, !dbg !10115
}

define i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %fd) nounwind, !dbg !10126
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10127
  br i1 %1, label %bb, label %bb1, !dbg !10127

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10128
  store i32 9, i32* %2, align 4, !dbg !10128
  br label %bb46, !dbg !10129

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10130
  %4 = load i32* %3, align 4, !dbg !10130
  %5 = and i32 %4, 16, !dbg !10130
  %6 = icmp eq i32 %5, 0, !dbg !10130
  br i1 %6, label %bb2, label %bb3, !dbg !10130

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10131
  store i32 88, i32* %7, align 4, !dbg !10131
  br label %bb46, !dbg !10132

bb3:                                              ; preds = %bb1
  %8 = icmp eq %struct.msghdr* %msg, null, !dbg !10133
  br i1 %8, label %bb4, label %bb5, !dbg !10133

bb4:                                              ; preds = %bb3
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !10134
  store i32 14, i32* %9, align 4, !dbg !10134
  br label %bb46, !dbg !10135

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10136
  %11 = load %struct.exe_disk_file_t** %10, align 8, !dbg !10136
  %12 = icmp eq %struct.exe_disk_file_t* %11, null, !dbg !10136
  br i1 %12, label %bb6, label %bb7, !dbg !10136

bb6:                                              ; preds = %bb5
  tail call void @__assert_fail(i8* getelementptr inbounds ([25 x i8]* @.str5402, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 759, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !10137

bb7:                                              ; preds = %bb5
  %13 = and i32 %4, 32, !dbg !10138
  %14 = icmp eq i32 %13, 0, !dbg !10138
  %15 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 5, !dbg !10139
  %16 = load %struct.exe_sockaddr_t** %15, align 8, !dbg !10139
  %17 = getelementptr inbounds %struct.exe_sockaddr_t* %16, i64 0, i32 0, !dbg !10139
  %18 = load %struct.sockaddr_storage** %17, align 8, !dbg !10139
  %19 = icmp eq %struct.sockaddr_storage* %18, null, !dbg !10139
  br i1 %14, label %bb8, label %bb19, !dbg !10138

bb8:                                              ; preds = %bb7
  br i1 %19, label %bb9, label %bb12, !dbg !10139

bb9:                                              ; preds = %bb8
  tail call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str7404, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 763, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !10139

bb12:                                             ; preds = %bb8
  %20 = getelementptr inbounds %struct.sockaddr_storage* %18, i64 0, i32 0, !dbg !10140
  %21 = load i16* %20, align 2, !dbg !10140
  switch i16 %21, label %bb16 [
    i16 2, label %bb13
    i16 10, label %bb15
  ]

bb13:                                             ; preds = %bb12
  %22 = bitcast %struct.sockaddr_storage* %18 to %struct.sockaddr_in*, !dbg !10140
  %23 = getelementptr inbounds %struct.sockaddr_in* %22, i64 0, i32 1, !dbg !10140
  %24 = load i16* %23, align 2, !dbg !10140
  %25 = icmp eq i16 %24, 0, !dbg !10140
  %26 = zext i1 %25 to i8, !dbg !10140
  br label %bb17, !dbg !10140

bb15:                                             ; preds = %bb12
  %27 = bitcast %struct.sockaddr_storage* %18 to %struct.sockaddr_in6*, !dbg !10140
  %28 = getelementptr inbounds %struct.sockaddr_in6* %27, i64 0, i32 1, !dbg !10140
  %29 = load i16* %28, align 2, !dbg !10140
  %30 = icmp eq i16 %29, 0, !dbg !10140
  %31 = zext i1 %30 to i8, !dbg !10140
  br label %bb17, !dbg !10140

bb16:                                             ; preds = %bb12
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2399, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 764, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !10140

bb17:                                             ; preds = %bb15, %bb13
  %iftmp.115.0 = phi i8 [ %26, %bb13 ], [ %31, %bb15 ]
  %toBool = icmp eq i8 %iftmp.115.0, 0, !dbg !10140
  br i1 %toBool, label %bb41, label %bb18, !dbg !10140

bb18:                                             ; preds = %bb17
  %32 = tail call i32* @__errno_location() nounwind readnone, !dbg !10141
  store i32 107, i32* %32, align 4, !dbg !10141
  br label %bb46, !dbg !10142

bb19:                                             ; preds = %bb7
  br i1 %19, label %bb20, label %bb21, !dbg !10143

bb20:                                             ; preds = %bb19
  tail call void @__assert_fail(i8* getelementptr inbounds ([19 x i8]* @.str397, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 770, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) nor
  unreachable, !dbg !10143

bb21:                                             ; preds = %bb19
  %33 = getelementptr inbounds %struct.sockaddr_storage* %18, i64 0, i32 0, !dbg !10143
  %34 = load i16* %33, align 2, !dbg !10143
  switch i16 %34, label %bb25 [
    i16 2, label %bb22
    i16 10, label %bb24
  ]

bb22:                                             ; preds = %bb21
  %35 = bitcast %struct.sockaddr_storage* %18 to %struct.sockaddr_in*, !dbg !10143
  %36 = getelementptr inbounds %struct.sockaddr_in* %35, i64 0, i32 1, !dbg !10143
  %37 = load i16* %36, align 2, !dbg !10143
  %38 = icmp eq i16 %37, 0, !dbg !10143
  %39 = zext i1 %38 to i8, !dbg !10143
  br label %bb26, !dbg !10143

bb24:                                             ; preds = %bb21
  %40 = bitcast %struct.sockaddr_storage* %18 to %struct.sockaddr_in6*, !dbg !10143
  %41 = getelementptr inbounds %struct.sockaddr_in6* %40, i64 0, i32 1, !dbg !10143
  %42 = load i16* %41, align 2, !dbg !10143
  %43 = icmp eq i16 %42, 0, !dbg !10143
  %44 = zext i1 %43 to i8, !dbg !10143
  br label %bb26, !dbg !10143

bb25:                                             ; preds = %bb21
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2399, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 770, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !10143

bb26:                                             ; preds = %bb24, %bb22
  %45 = phi i16 [ %37, %bb22 ], [ %42, %bb24 ]
  %iftmp.117.0 = phi i8 [ %39, %bb22 ], [ %44, %bb24 ]
  %toBool27 = icmp eq i8 %iftmp.117.0, 0, !dbg !10143
  br i1 %toBool27, label %bb32, label %bb28, !dbg !10143

bb28:                                             ; preds = %bb26
  %46 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !10143
  %47 = load i8** %46, align 8, !dbg !10143
  %48 = icmp eq i8* %47, null, !dbg !10143
  br i1 %48, label %bb29, label %bb32, !dbg !10143

bb29:                                             ; preds = %bb28
  %49 = tail call i32* @__errno_location() nounwind readnone, !dbg !10144
  store i32 107, i32* %49, align 4, !dbg !10144
  br label %bb46, !dbg !10145

bb32:                                             ; preds = %bb28, %bb26
  switch i16 %34, label %bb36 [
    i16 2, label %bb33
    i16 10, label %bb35
  ]

bb33:                                             ; preds = %bb32
  %50 = icmp ne i16 %45, 0, !dbg !10146
  %51 = zext i1 %50 to i8, !dbg !10146
  br label %bb37, !dbg !10146

bb35:                                             ; preds = %bb32
  %52 = icmp ne i16 %45, 0, !dbg !10146
  %53 = zext i1 %52 to i8, !dbg !10146
  br label %bb37, !dbg !10146

bb36:                                             ; preds = %bb32
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2399, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 775, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !10146

bb37:                                             ; preds = %bb35, %bb33
  %iftmp.119.0 = phi i8 [ %51, %bb33 ], [ %53, %bb35 ]
  %toBool38 = icmp eq i8 %iftmp.119.0, 0, !dbg !10146
  br i1 %toBool38, label %bb41, label %bb39, !dbg !10146

bb39:                                             ; preds = %bb37
  %54 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !10146
  %55 = load i8** %54, align 8, !dbg !10146
  %56 = icmp eq i8* %55, null, !dbg !10146
  br i1 %56, label %bb41, label %bb40, !dbg !10146

bb40:                                             ; preds = %bb39
  %57 = tail call i32* @__errno_location() nounwind readnone, !dbg !10147
  store i32 106, i32* %57, align 4, !dbg !10147
  br label %bb46, !dbg !10148

bb41:                                             ; preds = %bb39, %bb37, %bb17
  %58 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !10149
  %59 = load i8** %58, align 8, !dbg !10149
  %60 = icmp eq i8* %59, null, !dbg !10149
  br i1 %60, label %bb43, label %bb42, !dbg !10149

bb42:                                             ; preds = %bb41
  %61 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 1, !dbg !10150
  %62 = load i32* %61, align 8, !dbg !10150
  %63 = zext i32 %62 to i64, !dbg !10150
  tail call void @klee_check_memory_access(i8* %59, i64 %63) nounwind, !dbg !10150
  br label %bb43, !dbg !10150

bb43:                                             ; preds = %bb42, %bb41
  %64 = icmp eq i32 %flags, 0, !dbg !10151
  br i1 %64, label %bb45, label %bb44, !dbg !10151

bb44:                                             ; preds = %bb43
  tail call void @klee_warning(i8* getelementptr inbounds ([28 x i8]* @.str6403, i64 0, i64 0)) nounwind, !dbg !10152
  br label %bb45, !dbg !10152

bb45:                                             ; preds = %bb44, %bb43
  %65 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 3, !dbg !10153
  %66 = load i64* %65, align 8, !dbg !10153
  %67 = trunc i64 %66 to i32, !dbg !10153
  %68 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 2, !dbg !10153
  %69 = load %struct.iovec** %68, align 8, !dbg !10153
  %70 = tail call i64 @__fd_gather_write(%struct.exe_file_t* %0, %struct.iovec* %69, i32 %67) nounwind, !dbg !10153
  br label %bb46, !dbg !10153

bb46:                                             ; preds = %bb45, %bb40, %bb29, %bb18, %bb4, %bb2, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ -1, %bb18 ], [ %70, %bb45 ], [ -1, %bb29 ], [ -1, %bb40 ]
  ret i64 %.0, !dbg !10129
}

define i64 @sendmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind {
entry:
  %0 = tail call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind, !dbg !10154
  ret i64 %0, !dbg !10154
}

define i64 @__fd_sendto(i32 %fd, i8* %buf, i64 %len, i32 %flags, %struct.sockaddr* %to, i32 %tolen) nounwind {
entry:
  %iov = alloca %struct.iovec, align 8
  %msg = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.iovec* %iov, i64 0, i32 0, !dbg !10156
  store i8* %buf, i8** %0, align 8, !dbg !10156
  %1 = getelementptr inbounds %struct.iovec* %iov, i64 0, i32 1, !dbg !10157
  store i64 %len, i64* %1, align 8, !dbg !10157
  %2 = bitcast %struct.sockaddr* %to to i8*, !dbg !10158
  %3 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !10158
  store i8* %2, i8** %3, align 8, !dbg !10158
  %4 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 1, !dbg !10159
  store i32 %tolen, i32* %4, align 8, !dbg !10159
  %5 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 2, !dbg !10160
  store %struct.iovec* %iov, %struct.iovec** %5, align 8, !dbg !10160
  %6 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 3, !dbg !10161
  store i64 1, i64* %6, align 8, !dbg !10161
  %7 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 4, !dbg !10162
  store i8* null, i8** %7, align 8, !dbg !10162
  %8 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 5, !dbg !10163
  store i64 0, i64* %8, align 8, !dbg !10163
  %9 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 6, !dbg !10164
  store i32 %flags, i32* %9, align 8, !dbg !10164
  %10 = call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind, !dbg !10165
  ret i64 %10, !dbg !10165
}

define i64 @sendto(i32 %fd, i8* %buf, i64 %len, i32 %flags, %struct.sockaddr* %to, i32 %tolen) nounwind {
entry:
  %iov.i = alloca %struct.iovec, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 0, !dbg !10166
  store i8* %buf, i8** %0, align 8, !dbg !10166
  %1 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 1, !dbg !10169
  store i64 %len, i64* %1, align 8, !dbg !10169
  %2 = bitcast %struct.sockaddr* %to to i8*, !dbg !10170
  %3 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !10170
  store i8* %2, i8** %3, align 8, !dbg !10170
  %4 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !10171
  store i32 %tolen, i32* %4, align 8, !dbg !10171
  %5 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !10172
  store %struct.iovec* %iov.i, %struct.iovec** %5, align 8, !dbg !10172
  %6 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !10173
  store i64 1, i64* %6, align 8, !dbg !10173
  %7 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !10174
  store i8* null, i8** %7, align 8, !dbg !10174
  %8 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !10175
  store i64 0, i64* %8, align 8, !dbg !10175
  %9 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !10176
  store i32 %flags, i32* %9, align 8, !dbg !10176
  %10 = call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg.i, i32 %flags) nounwind, !dbg !10177
  ret i64 %10, !dbg !10167
}

define i64 @__fd_send(i32 %fd, i8* %buf, i64 %len, i32 %flags) nounwind {
entry:
  %iov.i = alloca %struct.iovec, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 0, !dbg !10178
  store i8* %buf, i8** %0, align 8, !dbg !10178
  %1 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 1, !dbg !10181
  store i64 %len, i64* %1, align 8, !dbg !10181
  %2 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !10182
  store i8* null, i8** %2, align 8, !dbg !10182
  %3 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !10183
  store i32 0, i32* %3, align 8, !dbg !10183
  %4 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !10184
  store %struct.iovec* %iov.i, %struct.iovec** %4, align 8, !dbg !10184
  %5 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !10185
  store i64 1, i64* %5, align 8, !dbg !10185
  %6 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !10186
  store i8* null, i8** %6, align 8, !dbg !10186
  %7 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !10187
  store i64 0, i64* %7, align 8, !dbg !10187
  %8 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !10188
  store i32 %flags, i32* %8, align 8, !dbg !10188
  %9 = call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg.i, i32 %flags) nounwind, !dbg !10189
  ret i64 %9, !dbg !10179
}

define i64 @send(i32 %fd, i8* %buf, i64 %len, i32 %flags) nounwind {
entry:
  %iov.i.i = alloca %struct.iovec, align 8
  %msg.i.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.iovec* %iov.i.i, i64 0, i32 0, !dbg !10190
  store i8* %buf, i8** %0, align 8, !dbg !10190
  %1 = getelementptr inbounds %struct.iovec* %iov.i.i, i64 0, i32 1, !dbg !10194
  store i64 %len, i64* %1, align 8, !dbg !10194
  %2 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 0, !dbg !10195
  store i8* null, i8** %2, align 8, !dbg !10195
  %3 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 1, !dbg !10196
  store i32 0, i32* %3, align 8, !dbg !10196
  %4 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 2, !dbg !10197
  store %struct.iovec* %iov.i.i, %struct.iovec** %4, align 8, !dbg !10197
  %5 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 3, !dbg !10198
  store i64 1, i64* %5, align 8, !dbg !10198
  %6 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 4, !dbg !10199
  store i8* null, i8** %6, align 8, !dbg !10199
  %7 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 5, !dbg !10200
  store i64 0, i64* %7, align 8, !dbg !10200
  %8 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 6, !dbg !10201
  store i32 %flags, i32* %8, align 8, !dbg !10201
  %9 = call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg.i.i, i32 %flags) nounwind, !dbg !10202
  ret i64 %9, !dbg !10192
}

define i32 @shutdown(i32 %sockfd, i32 %how) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10203
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10204
  br i1 %1, label %bb, label %bb1, !dbg !10204

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10205
  store i32 9, i32* %2, align 4, !dbg !10205
  br label %bb12, !dbg !10206

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10207
  %4 = load i32* %3, align 4, !dbg !10207
  %5 = and i32 %4, 16, !dbg !10207
  %6 = icmp eq i32 %5, 0, !dbg !10207
  br i1 %6, label %bb2, label %bb3, !dbg !10207

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10208
  store i32 88, i32* %7, align 4, !dbg !10208
  br label %bb12, !dbg !10209

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10210
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !10210
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !10210
  br i1 %10, label %bb9, label %bb4, !dbg !10210

bb4:                                              ; preds = %bb3
  switch i32 %how, label %bb8 [
    i32 0, label %bb5
    i32 1, label %bb6
    i32 2, label %bb7
  ], !dbg !10211

bb5:                                              ; preds = %bb4
  %11 = and i32 %4, -5, !dbg !10212
  store i32 %11, i32* %3, align 4, !dbg !10212
  br label %bb12, !dbg !10212

bb6:                                              ; preds = %bb4
  %12 = and i32 %4, -9, !dbg !10213
  store i32 %12, i32* %3, align 4, !dbg !10213
  br label %bb12, !dbg !10213

bb7:                                              ; preds = %bb4
  %13 = and i32 %4, -13, !dbg !10214
  store i32 %13, i32* %3, align 4, !dbg !10214
  br label %bb12, !dbg !10214

bb8:                                              ; preds = %bb4
  %14 = tail call i32* @__errno_location() nounwind readnone, !dbg !10215
  store i32 22, i32* %14, align 4, !dbg !10215
  br label %bb12, !dbg !10216

bb9:                                              ; preds = %bb3
  %15 = tail call i64 (i64, ...)* @syscall(i64 48, i32 %sockfd, i32 %how) nounwind, !dbg !10217
  %16 = trunc i64 %15 to i32, !dbg !10217
  %17 = icmp eq i32 %16, -1, !dbg !10218
  br i1 %17, label %bb10, label %bb12, !dbg !10218

bb10:                                             ; preds = %bb9
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !10219
  %19 = tail call i32 @klee_get_errno() nounwind, !dbg !10219
  store i32 %19, i32* %18, align 4, !dbg !10219
  br label %bb12, !dbg !10220

bb12:                                             ; preds = %bb10, %bb9, %bb8, %bb7, %bb6, %bb5, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb8 ], [ -1, %bb10 ], [ 0, %bb9 ], [ 0, %bb7 ], [ 0, %bb6 ], [ 0, %bb5 ]
  ret i32 %.0, !dbg !10206
}

define i32 @__fd_shutdown(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10221
  %1 = trunc i64 %0 to i32, !dbg !10221
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10222
  %3 = load i64* %2, align 8, !dbg !10222
  %4 = trunc i64 %3 to i32, !dbg !10222
  %5 = tail call i32 @shutdown(i32 %1, i32 %4) nounwind, !dbg !10223
  ret i32 %5, !dbg !10223
}

define i32 @getpeername(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10224
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10225
  br i1 %1, label %bb, label %bb1, !dbg !10225

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10226
  store i32 9, i32* %2, align 4, !dbg !10226
  br label %bb12, !dbg !10227

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10228
  %4 = load i32* %3, align 4, !dbg !10228
  %5 = and i32 %4, 16, !dbg !10228
  %6 = icmp eq i32 %5, 0, !dbg !10228
  br i1 %6, label %bb2, label %bb3, !dbg !10228

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10229
  store i32 88, i32* %7, align 4, !dbg !10229
  br label %bb12, !dbg !10230

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10231
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !10231
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !10231
  br i1 %10, label %bb9, label %bb4, !dbg !10231

bb4:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 5, !dbg !10232
  %12 = load %struct.exe_sockaddr_t** %11, align 8, !dbg !10232
  %13 = getelementptr inbounds %struct.exe_sockaddr_t* %12, i64 0, i32 0, !dbg !10232
  %14 = load %struct.sockaddr_storage** %13, align 8, !dbg !10232
  %15 = icmp eq %struct.sockaddr_storage* %14, null, !dbg !10232
  br i1 %15, label %bb5, label %bb6, !dbg !10232

bb5:                                              ; preds = %bb4
  tail call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str7404, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 587, i8* getelementptr inbounds ([12 x i8]* @__PRETTY_FUNCTION__.7179, i64 0, i64 0)) no
  unreachable, !dbg !10232

bb6:                                              ; preds = %bb4
  %16 = load i32* %addrlen, align 4, !dbg !10233
  %17 = getelementptr inbounds %struct.exe_sockaddr_t* %12, i64 0, i32 1, !dbg !10233
  %18 = load i32* %17, align 8, !dbg !10233
  %19 = icmp ult i32 %16, %18, !dbg !10233
  br i1 %19, label %bb7, label %bb8, !dbg !10233

bb7:                                              ; preds = %bb6
  %20 = tail call i32* @__errno_location() nounwind readnone, !dbg !10234
  store i32 22, i32* %20, align 4, !dbg !10234
  br label %bb12, !dbg !10235

bb8:                                              ; preds = %bb6
  %21 = zext i32 %18 to i64, !dbg !10236
  %22 = bitcast %struct.sockaddr* %addr to i8*, !dbg !10236
  %23 = bitcast %struct.sockaddr_storage* %14 to i8*, !dbg !10236
  %24 = call i8* @memcpy(i8* %22, i8* %23, i64 %21)
  %25 = load %struct.exe_sockaddr_t** %11, align 8, !dbg !10237
  %26 = getelementptr inbounds %struct.exe_sockaddr_t* %25, i64 0, i32 1, !dbg !10237
  %27 = load i32* %26, align 8, !dbg !10237
  store i32 %27, i32* %addrlen, align 4, !dbg !10237
  br label %bb12, !dbg !10237

bb9:                                              ; preds = %bb3
  %28 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10238
  %29 = load i32* %28, align 8, !dbg !10238
  %30 = tail call i64 (i64, ...)* @syscall(i64 52, i32 %29, %struct.sockaddr* %addr, i32* %addrlen) nounwind, !dbg !10238
  %31 = trunc i64 %30 to i32, !dbg !10238
  %32 = icmp slt i32 %31, 0, !dbg !10239
  br i1 %32, label %bb10, label %bb12, !dbg !10239

bb10:                                             ; preds = %bb9
  %33 = tail call i32* @__errno_location() nounwind readnone, !dbg !10240
  %34 = tail call i32 @klee_get_errno() nounwind, !dbg !10240
  store i32 %34, i32* %33, align 4, !dbg !10240
  br label %bb12, !dbg !10241

bb12:                                             ; preds = %bb10, %bb9, %bb8, %bb7, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb7 ], [ -1, %bb10 ], [ 0, %bb9 ], [ 0, %bb8 ]
  ret i32 %.0, !dbg !10227
}

define i32 @__fd_getpeername(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10242
  %1 = trunc i64 %0 to i32, !dbg !10242
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10243
  %3 = load i64* %2, align 8, !dbg !10243
  %4 = inttoptr i64 %3 to %struct.sockaddr*, !dbg !10243
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10244
  %6 = load i64* %5, align 8, !dbg !10244
  %7 = inttoptr i64 %6 to i32*, !dbg !10244
  %8 = tail call i32 @getpeername(i32 %1, %struct.sockaddr* %4, i32* %7) nounwind, !dbg !10245
  ret i32 %8, !dbg !10245
}

define i32 @getsockname(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10246
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10247
  br i1 %1, label %bb, label %bb1, !dbg !10247

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10248
  store i32 9, i32* %2, align 4, !dbg !10248
  br label %bb12, !dbg !10249

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10250
  %4 = load i32* %3, align 4, !dbg !10250
  %5 = and i32 %4, 16, !dbg !10250
  %6 = icmp eq i32 %5, 0, !dbg !10250
  br i1 %6, label %bb2, label %bb3, !dbg !10250

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10251
  store i32 88, i32* %7, align 4, !dbg !10251
  br label %bb12, !dbg !10252

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10253
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !10253
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !10253
  br i1 %10, label %bb9, label %bb4, !dbg !10253

bb4:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 0, !dbg !10254
  %12 = load %struct.sockaddr_storage** %11, align 8, !dbg !10254
  %13 = icmp eq %struct.sockaddr_storage* %12, null, !dbg !10254
  br i1 %13, label %bb5, label %bb6, !dbg !10254

bb5:                                              ; preds = %bb4
  tail call void @__assert_fail(i8* getelementptr inbounds ([14 x i8]* @.str8405, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 543, i8* getelementptr inbounds ([12 x i8]* @__PRETTY_FUNCTION__.7141, i64 0, i64 0)) no
  unreachable, !dbg !10254

bb6:                                              ; preds = %bb4
  %14 = load i32* %addrlen, align 4, !dbg !10255
  %15 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 1, !dbg !10255
  %16 = load i32* %15, align 8, !dbg !10255
  %17 = icmp ult i32 %14, %16, !dbg !10255
  br i1 %17, label %bb7, label %bb8, !dbg !10255

bb7:                                              ; preds = %bb6
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !10256
  store i32 22, i32* %18, align 4, !dbg !10256
  br label %bb12, !dbg !10257

bb8:                                              ; preds = %bb6
  %19 = zext i32 %16 to i64, !dbg !10258
  %20 = bitcast %struct.sockaddr* %addr to i8*, !dbg !10258
  %21 = bitcast %struct.sockaddr_storage* %12 to i8*, !dbg !10258
  %22 = call i8* @memcpy(i8* %20, i8* %21, i64 %19)
  %23 = load i32* %15, align 8, !dbg !10259
  store i32 %23, i32* %addrlen, align 4, !dbg !10259
  br label %bb12, !dbg !10259

bb9:                                              ; preds = %bb3
  %24 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10260
  %25 = load i32* %24, align 8, !dbg !10260
  %26 = tail call i64 (i64, ...)* @syscall(i64 51, i32 %25, %struct.sockaddr* %addr, i32* %addrlen) nounwind, !dbg !10260
  %27 = trunc i64 %26 to i32, !dbg !10260
  %28 = icmp slt i32 %27, 0, !dbg !10261
  br i1 %28, label %bb10, label %bb12, !dbg !10261

bb10:                                             ; preds = %bb9
  %29 = tail call i32* @__errno_location() nounwind readnone, !dbg !10262
  %30 = tail call i32 @klee_get_errno() nounwind, !dbg !10262
  store i32 %30, i32* %29, align 4, !dbg !10262
  br label %bb12, !dbg !10263

bb12:                                             ; preds = %bb10, %bb9, %bb8, %bb7, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb7 ], [ -1, %bb10 ], [ 0, %bb9 ], [ 0, %bb8 ]
  ret i32 %.0, !dbg !10249
}

define i32 @__fd_getsockname(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10264
  %1 = trunc i64 %0 to i32, !dbg !10264
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10265
  %3 = load i64* %2, align 8, !dbg !10265
  %4 = inttoptr i64 %3 to %struct.sockaddr*, !dbg !10265
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10266
  %6 = load i64* %5, align 8, !dbg !10266
  %7 = inttoptr i64 %6 to i32*, !dbg !10266
  %8 = tail call i32 @getsockname(i32 %1, %struct.sockaddr* %4, i32* %7) nounwind, !dbg !10267
  ret i32 %8, !dbg !10267
}

define i32 @listen(i32 %sockfd, i32 %backlog) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10268
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10269
  br i1 %1, label %bb, label %bb1, !dbg !10269

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10270
  store i32 9, i32* %2, align 4, !dbg !10270
  br label %bb10, !dbg !10271

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10272
  %4 = load i32* %3, align 4, !dbg !10272
  %5 = and i32 %4, 16, !dbg !10272
  %6 = icmp eq i32 %5, 0, !dbg !10272
  br i1 %6, label %bb2, label %bb3, !dbg !10272

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10273
  store i32 88, i32* %7, align 4, !dbg !10273
  br label %bb10, !dbg !10274

bb3:                                              ; preds = %bb1
  %8 = and i32 %4, 32, !dbg !10275
  %9 = icmp eq i32 %8, 0, !dbg !10275
  br i1 %9, label %bb5, label %bb4, !dbg !10275

bb4:                                              ; preds = %bb3
  %10 = tail call i32* @__errno_location() nounwind readnone, !dbg !10276
  store i32 95, i32* %10, align 4, !dbg !10276
  br label %bb10, !dbg !10277

bb5:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10278
  %12 = load %struct.exe_disk_file_t** %11, align 8, !dbg !10278
  %13 = icmp eq %struct.exe_disk_file_t* %12, null, !dbg !10278
  br i1 %13, label %bb7, label %bb9, !dbg !10278

bb7:                                              ; preds = %bb5
  %14 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10279
  %15 = load i32* %14, align 8, !dbg !10279
  %16 = tail call i64 (i64, ...)* @syscall(i64 50, i32 %15, i32 %backlog) nounwind, !dbg !10279
  %17 = trunc i64 %16 to i32, !dbg !10279
  %18 = icmp slt i32 %17, 0, !dbg !10280
  br i1 %18, label %bb8, label %bb9, !dbg !10280

bb8:                                              ; preds = %bb7
  %19 = tail call i32* @__errno_location() nounwind readnone, !dbg !10281
  %20 = tail call i32 @klee_get_errno() nounwind, !dbg !10281
  store i32 %20, i32* %19, align 4, !dbg !10281
  br label %bb9, !dbg !10281

bb9:                                              ; preds = %bb8, %bb7, %bb5
  %os_r.0 = phi i32 [ %17, %bb8 ], [ 0, %bb5 ], [ %17, %bb7 ]
  %21 = load i32* %3, align 4, !dbg !10282
  %22 = or i32 %21, 64, !dbg !10282
  store i32 %22, i32* %3, align 4, !dbg !10282
  br label %bb10, !dbg !10283

bb10:                                             ; preds = %bb9, %bb4, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %os_r.0, %bb9 ]
  ret i32 %.0, !dbg !10271
}

define i32 @__fd_listen(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10284
  %1 = trunc i64 %0 to i32, !dbg !10284
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10285
  %3 = load i64* %2, align 8, !dbg !10285
  %4 = trunc i64 %3 to i32, !dbg !10285
  %5 = tail call i32 @listen(i32 %1, i32 %4) nounwind, !dbg !10286
  ret i32 %5, !dbg !10286
}

define i32 @connect(i32 %sockfd, %struct.sockaddr* %addr, i32 %addrlen) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10287
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10288
  br i1 %1, label %bb, label %bb1, !dbg !10288

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10289
  store i32 9, i32* %2, align 4, !dbg !10289
  br label %bb40, !dbg !10290

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10291
  %4 = load i32* %3, align 4, !dbg !10291
  %5 = and i32 %4, 16, !dbg !10291
  %6 = icmp eq i32 %5, 0, !dbg !10291
  br i1 %6, label %bb2, label %bb3, !dbg !10291

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10292
  store i32 88, i32* %7, align 4, !dbg !10292
  br label %bb40, !dbg !10293

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10294
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !10294
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !10294
  br i1 %10, label %bb37, label %bb4, !dbg !10294

bb4:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 5, !dbg !10295
  %12 = load %struct.exe_sockaddr_t** %11, align 8, !dbg !10295
  %13 = getelementptr inbounds %struct.exe_sockaddr_t* %12, i64 0, i32 0, !dbg !10295
  %14 = load %struct.sockaddr_storage** %13, align 8, !dbg !10295
  %15 = icmp eq %struct.sockaddr_storage* %14, null, !dbg !10295
  br i1 %15, label %bb5, label %bb6, !dbg !10295

bb5:                                              ; preds = %bb4
  tail call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str7404, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 335, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) nor
  unreachable, !dbg !10295

bb6:                                              ; preds = %bb4
  %16 = and i32 %4, 32, !dbg !10296
  %17 = icmp eq i32 %16, 0, !dbg !10296
  br i1 %17, label %bb9, label %bb20, !dbg !10296

bb9:                                              ; preds = %bb6
  %18 = getelementptr inbounds %struct.sockaddr_storage* %14, i64 0, i32 0, !dbg !10297
  %19 = load i16* %18, align 2, !dbg !10297
  switch i16 %19, label %bb13 [
    i16 2, label %bb10
    i16 10, label %bb12
  ]

bb10:                                             ; preds = %bb9
  %20 = bitcast %struct.sockaddr_storage* %14 to %struct.sockaddr_in*, !dbg !10297
  %21 = getelementptr inbounds %struct.sockaddr_in* %20, i64 0, i32 1, !dbg !10297
  %22 = load i16* %21, align 2, !dbg !10297
  %23 = icmp ne i16 %22, 0, !dbg !10297
  %24 = zext i1 %23 to i8, !dbg !10297
  br label %bb14, !dbg !10297

bb12:                                             ; preds = %bb9
  %25 = bitcast %struct.sockaddr_storage* %14 to %struct.sockaddr_in6*, !dbg !10297
  %26 = getelementptr inbounds %struct.sockaddr_in6* %25, i64 0, i32 1, !dbg !10297
  %27 = load i16* %26, align 2, !dbg !10297
  %28 = icmp ne i16 %27, 0, !dbg !10297
  %29 = zext i1 %28 to i8, !dbg !10297
  br label %bb14, !dbg !10297

bb13:                                             ; preds = %bb9
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2399, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 337, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) nor
  unreachable, !dbg !10297

bb14:                                             ; preds = %bb12, %bb10
  %iftmp.73.0 = phi i8 [ %24, %bb10 ], [ %29, %bb12 ]
  %toBool17 = icmp eq i8 %iftmp.73.0, 1, !dbg !10297
  br i1 %toBool17, label %bb19, label %bb18, !dbg !10297

bb18:                                             ; preds = %bb14
  tail call void @__assert_fail(i8* getelementptr inbounds ([505 x i8]* @.str9406, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 337, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) no
  unreachable, !dbg !10297

bb19:                                             ; preds = %bb14
  %30 = tail call i32* @__errno_location() nounwind readnone, !dbg !10298
  store i32 106, i32* %30, align 4, !dbg !10298
  br label %bb40, !dbg !10299

bb20:                                             ; preds = %bb6
  %31 = getelementptr inbounds %struct.exe_sockaddr_t* %12, i64 0, i32 1, !dbg !10300
  %32 = load i32* %31, align 8, !dbg !10300
  %33 = icmp eq i32 %32, %addrlen, !dbg !10300
  br i1 %33, label %bb21, label %bb22, !dbg !10300

bb21:                                             ; preds = %bb20
  %34 = getelementptr inbounds %struct.sockaddr* %addr, i64 0, i32 0, !dbg !10300
  %35 = load i16* %34, align 2, !dbg !10300
  %36 = getelementptr inbounds %struct.sockaddr_storage* %14, i64 0, i32 0, !dbg !10300
  %37 = load i16* %36, align 8, !dbg !10300
  %38 = icmp eq i16 %35, %37, !dbg !10300
  br i1 %38, label %bb23, label %bb22, !dbg !10300

bb22:                                             ; preds = %bb21, %bb20
  %39 = tail call i32* @__errno_location() nounwind readnone, !dbg !10301
  store i32 22, i32* %39, align 4, !dbg !10301
  br label %bb40, !dbg !10302

bb23:                                             ; preds = %bb21
  switch i16 %35, label %bb27 [
    i16 2, label %bb24
    i16 10, label %bb26
  ]

bb24:                                             ; preds = %bb23
  %40 = getelementptr inbounds %struct.sockaddr* %addr, i64 0, i32 1
  %41 = bitcast [14 x i8]* %40 to i16*, !dbg !10303
  %42 = load i16* %41, align 2, !dbg !10303
  %43 = icmp eq i16 %42, 0, !dbg !10303
  %44 = zext i1 %43 to i8, !dbg !10303
  br label %bb28, !dbg !10303

bb26:                                             ; preds = %bb23
  %45 = getelementptr inbounds %struct.sockaddr* %addr, i64 0, i32 1
  %46 = bitcast [14 x i8]* %45 to i16*, !dbg !10303
  %47 = load i16* %46, align 2, !dbg !10303
  %48 = icmp eq i16 %47, 0, !dbg !10303
  %49 = zext i1 %48 to i8, !dbg !10303
  br label %bb28, !dbg !10303

bb27:                                             ; preds = %bb23
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2399, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 345, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) nor
  unreachable, !dbg !10303

bb28:                                             ; preds = %bb26, %bb24
  %iftmp.75.0 = phi i8 [ %44, %bb24 ], [ %49, %bb26 ]
  %toBool29 = icmp eq i8 %iftmp.75.0, 0, !dbg !10303
  br i1 %toBool29, label %bb31, label %bb30, !dbg !10303

bb30:                                             ; preds = %bb28
  %50 = tail call i32* @__errno_location() nounwind readnone, !dbg !10304
  store i32 99, i32* %50, align 4, !dbg !10304
  br label %bb31, !dbg !10304

bb31:                                             ; preds = %bb30, %bb28
  %51 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 0, !dbg !10305
  %52 = load %struct.sockaddr_storage** %51, align 8, !dbg !10305
  %53 = getelementptr inbounds %struct.sockaddr_storage* %52, i64 0, i32 0, !dbg !10305
  %54 = load i16* %53, align 2, !dbg !10305
  switch i16 %54, label %bb35 [
    i16 2, label %bb36
    i16 10, label %bb36
  ]

bb35:                                             ; preds = %bb31
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2399, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 348, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) nor
  unreachable, !dbg !10305

bb36:                                             ; preds = %bb31, %bb31
  %55 = zext i32 %addrlen to i64, !dbg !10306
  %56 = load %struct.exe_sockaddr_t** %11, align 8, !dbg !10306
  %57 = getelementptr inbounds %struct.exe_sockaddr_t* %56, i64 0, i32 0, !dbg !10306
  %58 = load %struct.sockaddr_storage** %57, align 8, !dbg !10306
  %59 = bitcast %struct.sockaddr_storage* %58 to i8*, !dbg !10306
  %60 = bitcast %struct.sockaddr* %addr to i8*, !dbg !10306
  %61 = call i8* @memcpy(i8* %59, i8* %60, i64 %55)
  br label %bb40, !dbg !10307

bb37:                                             ; preds = %bb3
  %62 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10308
  %63 = load i32* %62, align 8, !dbg !10308
  %64 = tail call i64 (i64, ...)* @syscall(i64 42, i32 %63, %struct.sockaddr* %addr, i32 %addrlen) nounwind, !dbg !10308
  %65 = trunc i64 %64 to i32, !dbg !10308
  %66 = icmp slt i32 %65, 0, !dbg !10309
  br i1 %66, label %bb38, label %bb40, !dbg !10309

bb38:                                             ; preds = %bb37
  %67 = tail call i32* @__errno_location() nounwind readnone, !dbg !10310
  %68 = tail call i32 @klee_get_errno() nounwind, !dbg !10310
  store i32 %68, i32* %67, align 4, !dbg !10310
  br label %bb40, !dbg !10310

bb40:                                             ; preds = %bb38, %bb37, %bb36, %bb22, %bb19, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb19 ], [ -1, %bb22 ], [ 0, %bb36 ], [ %65, %bb38 ], [ %65, %bb37 ]
  ret i32 %.0, !dbg !10290
}

define i32 @__fd_connect(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10311
  %1 = trunc i64 %0 to i32, !dbg !10311
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10312
  %3 = load i64* %2, align 8, !dbg !10312
  %4 = inttoptr i64 %3 to %struct.sockaddr*, !dbg !10312
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10313
  %6 = load i64* %5, align 8, !dbg !10313
  %7 = trunc i64 %6 to i32, !dbg !10313
  %8 = tail call i32 @connect(i32 %1, %struct.sockaddr* %4, i32 %7) nounwind, !dbg !10314
  ret i32 %8, !dbg !10314
}

define i32 @bind(i32 %sockfd, %struct.sockaddr* %addr, i32 %addrlen) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10315
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10316
  br i1 %1, label %bb, label %bb1, !dbg !10316

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10317
  store i32 9, i32* %2, align 4, !dbg !10317
  br label %bb28, !dbg !10318

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10319
  %4 = load i32* %3, align 4, !dbg !10319
  %5 = and i32 %4, 16, !dbg !10319
  %6 = icmp eq i32 %5, 0, !dbg !10319
  br i1 %6, label %bb2, label %bb3, !dbg !10319

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10320
  store i32 88, i32* %7, align 4, !dbg !10320
  br label %bb28, !dbg !10321

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10322
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !10322
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !10322
  br i1 %10, label %bb24, label %bb4, !dbg !10322

bb4:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 0, !dbg !10323
  %12 = load %struct.sockaddr_storage** %11, align 8, !dbg !10323
  %13 = icmp eq %struct.sockaddr_storage* %12, null, !dbg !10323
  br i1 %13, label %bb5, label %bb6, !dbg !10323

bb5:                                              ; preds = %bb4
  tail call void @__assert_fail(i8* getelementptr inbounds ([14 x i8]* @.str8405, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 283, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.6833, i64 0, i64 0)) nor
  unreachable, !dbg !10323

bb6:                                              ; preds = %bb4
  %14 = and i32 %4, 32, !dbg !10324
  %15 = icmp eq i32 %14, 0, !dbg !10324
  br i1 %15, label %bb9, label %bb16, !dbg !10324

bb9:                                              ; preds = %bb6
  %16 = getelementptr inbounds %struct.sockaddr_storage* %12, i64 0, i32 0, !dbg !10324
  %17 = load i16* %16, align 2, !dbg !10324
  switch i16 %17, label %bb13 [
    i16 2, label %bb10
    i16 10, label %bb12
  ]

bb10:                                             ; preds = %bb9
  %18 = bitcast %struct.sockaddr_storage* %12 to %struct.sockaddr_in*, !dbg !10324
  %19 = getelementptr inbounds %struct.sockaddr_in* %18, i64 0, i32 1, !dbg !10324
  %20 = load i16* %19, align 2, !dbg !10324
  %21 = icmp ne i16 %20, 0, !dbg !10324
  %22 = zext i1 %21 to i8, !dbg !10324
  br label %bb14, !dbg !10324

bb12:                                             ; preds = %bb9
  %23 = bitcast %struct.sockaddr_storage* %12 to %struct.sockaddr_in6*, !dbg !10324
  %24 = getelementptr inbounds %struct.sockaddr_in6* %23, i64 0, i32 1, !dbg !10324
  %25 = load i16* %24, align 2, !dbg !10324
  %26 = icmp ne i16 %25, 0, !dbg !10324
  %27 = zext i1 %26 to i8, !dbg !10324
  br label %bb14, !dbg !10324

bb13:                                             ; preds = %bb9
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2399, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 284, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.6833, i64 0, i64 0)) nor
  unreachable, !dbg !10324

bb14:                                             ; preds = %bb12, %bb10
  %iftmp.69.0 = phi i8 [ %22, %bb10 ], [ %27, %bb12 ]
  %toBool = icmp eq i8 %iftmp.69.0, 0, !dbg !10324
  br i1 %toBool, label %bb16, label %bb15, !dbg !10324

bb15:                                             ; preds = %bb14
  %28 = tail call i32* @__errno_location() nounwind readnone, !dbg !10325
  store i32 22, i32* %28, align 4, !dbg !10325
  br label %bb28, !dbg !10326

bb16:                                             ; preds = %bb14, %bb6
  %29 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 1, !dbg !10327
  %30 = load i32* %29, align 8, !dbg !10327
  %31 = icmp eq i32 %30, %addrlen, !dbg !10327
  br i1 %31, label %bb17, label %bb18, !dbg !10327

bb17:                                             ; preds = %bb16
  %32 = getelementptr inbounds %struct.sockaddr* %addr, i64 0, i32 0, !dbg !10327
  %33 = load i16* %32, align 2, !dbg !10327
  %34 = getelementptr inbounds %struct.sockaddr_storage* %12, i64 0, i32 0, !dbg !10327
  %35 = load i16* %34, align 8, !dbg !10327
  %36 = icmp eq i16 %33, %35, !dbg !10327
  br i1 %36, label %bb19, label %bb18, !dbg !10327

bb18:                                             ; preds = %bb17, %bb16
  %37 = tail call i32* @__errno_location() nounwind readnone, !dbg !10328
  store i32 22, i32* %37, align 4, !dbg !10328
  br label %bb28, !dbg !10329

bb19:                                             ; preds = %bb17
  %38 = zext i32 %addrlen to i64, !dbg !10330
  %39 = bitcast %struct.sockaddr_storage* %12 to i8*, !dbg !10330
  %40 = bitcast %struct.sockaddr* %addr to i8*, !dbg !10330
  %41 = call i8* @memcpy(i8* %39, i8* %40, i64 %38)
  %42 = load %struct.sockaddr_storage** %11, align 8, !dbg !10331
  %43 = getelementptr inbounds %struct.sockaddr_storage* %42, i64 0, i32 0, !dbg !10331
  %44 = load i16* %43, align 2, !dbg !10331
  switch i16 %44, label %bb23 [
    i16 2, label %bb28
    i16 10, label %bb28
  ]

bb23:                                             ; preds = %bb19
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2399, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 294, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.6833, i64 0, i64 0)) nor
  unreachable, !dbg !10331

bb24:                                             ; preds = %bb3
  %45 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10332
  %46 = load i32* %45, align 8, !dbg !10332
  %47 = tail call i64 (i64, ...)* @syscall(i64 49, i32 %46, %struct.sockaddr* %addr, i32 %addrlen) nounwind, !dbg !10332
  %48 = trunc i64 %47 to i32, !dbg !10332
  %49 = icmp slt i32 %48, 0, !dbg !10333
  br i1 %49, label %bb25, label %bb28, !dbg !10333

bb25:                                             ; preds = %bb24
  %50 = tail call i32* @__errno_location() nounwind readnone, !dbg !10334
  %51 = tail call i32 @klee_get_errno() nounwind, !dbg !10334
  store i32 %51, i32* %50, align 4, !dbg !10334
  br label %bb28, !dbg !10334

bb28:                                             ; preds = %bb25, %bb24, %bb19, %bb19, %bb18, %bb15, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb15 ], [ -1, %bb18 ], [ %48, %bb25 ], [ %48, %bb24 ], [ 0, %bb19 ], [ 0, %bb19 ]
  ret i32 %.0, !dbg !10318
}

define i32 @__fd_bind(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10335
  %1 = trunc i64 %0 to i32, !dbg !10335
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10336
  %3 = load i64* %2, align 8, !dbg !10336
  %4 = inttoptr i64 %3 to %struct.sockaddr*, !dbg !10336
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10337
  %6 = load i64* %5, align 8, !dbg !10337
  %7 = trunc i64 %6 to i32, !dbg !10337
  %8 = tail call i32 @bind(i32 %1, %struct.sockaddr* %4, i32 %7) nounwind, !dbg !10338
  ret i32 %8, !dbg !10338
}

define internal fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %a) nounwind {
entry:
  %0 = icmp eq %struct.exe_sockaddr_t* %a, null, !dbg !10339
  br i1 %0, label %bb, label %bb1, !dbg !10339

bb:                                               ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([2 x i8]* @.str12408, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 107, i8* getelementptr inbounds ([20 x i8]* @__PRETTY_FUNCTION__.6681, i64 0, i64 0)) no
  unreachable, !dbg !10339

bb1:                                              ; preds = %entry
  switch i32 %domain, label %bb11 [
    i32 2, label %bb2
    i32 10, label %bb5
    i32 17, label %bb8
  ], !dbg !10341

bb2:                                              ; preds = %bb1
  %1 = tail call noalias i8* @calloc(i64 1, i64 16) nounwind, !dbg !10342
  %2 = bitcast i8* %1 to %struct.sockaddr_storage*, !dbg !10342
  %3 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 0, !dbg !10342
  store %struct.sockaddr_storage* %2, %struct.sockaddr_storage** %3, align 8, !dbg !10342
  %4 = icmp eq i8* %1, null, !dbg !10342
  br i1 %4, label %bb12, label %bb4, !dbg !10342

bb4:                                              ; preds = %bb2
  %5 = bitcast i8* %1 to i16*, !dbg !10342
  store i16 2, i16* %5, align 8, !dbg !10342
  %6 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 1, !dbg !10342
  store i32 16, i32* %6, align 8, !dbg !10342
  br label %bb12, !dbg !10342

bb5:                                              ; preds = %bb1
  %7 = tail call noalias i8* @calloc(i64 1, i64 28) nounwind, !dbg !10343
  %8 = bitcast i8* %7 to %struct.sockaddr_storage*, !dbg !10343
  %9 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 0, !dbg !10343
  store %struct.sockaddr_storage* %8, %struct.sockaddr_storage** %9, align 8, !dbg !10343
  %10 = icmp eq i8* %7, null, !dbg !10343
  br i1 %10, label %bb12, label %bb7, !dbg !10343

bb7:                                              ; preds = %bb5
  %11 = bitcast i8* %7 to i16*, !dbg !10343
  store i16 2, i16* %11, align 8, !dbg !10343
  %12 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 1, !dbg !10343
  store i32 28, i32* %12, align 8, !dbg !10343
  br label %bb12, !dbg !10343

bb8:                                              ; preds = %bb1
  %13 = tail call noalias i8* @calloc(i64 1, i64 20) nounwind, !dbg !10344
  %14 = bitcast i8* %13 to %struct.sockaddr_storage*, !dbg !10344
  %15 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 0, !dbg !10344
  store %struct.sockaddr_storage* %14, %struct.sockaddr_storage** %15, align 8, !dbg !10344
  %16 = icmp eq i8* %13, null, !dbg !10344
  br i1 %16, label %bb12, label %bb10, !dbg !10344

bb10:                                             ; preds = %bb8
  %17 = bitcast i8* %13 to i16*, !dbg !10344
  store i16 2, i16* %17, align 8, !dbg !10344
  %18 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 1, !dbg !10344
  store i32 20, i32* %18, align 8, !dbg !10344
  br label %bb12, !dbg !10344

bb11:                                             ; preds = %bb1
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2399, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1398, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([20 x i8]* @__PRETTY_FUNCTION__.6681, i64 0, i64 0)) no
  unreachable, !dbg !10345

bb12:                                             ; preds = %bb10, %bb8, %bb7, %bb5, %bb4, %bb2
  %.0 = phi %struct.exe_sockaddr_t* [ %a, %bb10 ], [ %a, %bb7 ], [ %a, %bb4 ], [ null, %bb2 ], [ null, %bb5 ], [ null, %bb8 ]
  ret %struct.exe_sockaddr_t* %.0, !dbg !10342
}

define i32 @__fd_accept(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind {
entry:
  %connf = alloca %struct.exe_file_t*, align 8
  %fchild = alloca %struct.exe_file_t*, align 8
  %0 = call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10346
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10347
  br i1 %1, label %bb, label %bb1, !dbg !10347

bb:                                               ; preds = %entry
  %2 = call i32* @__errno_location() nounwind readnone, !dbg !10348
  store i32 9, i32* %2, align 4, !dbg !10348
  br label %bb24, !dbg !10349

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10350
  %4 = load i32* %3, align 4, !dbg !10350
  %5 = and i32 %4, 16, !dbg !10350
  %6 = icmp eq i32 %5, 0, !dbg !10350
  br i1 %6, label %bb2, label %bb3, !dbg !10350

bb2:                                              ; preds = %bb1
  %7 = call i32* @__errno_location() nounwind readnone, !dbg !10351
  store i32 88, i32* %7, align 4, !dbg !10351
  br label %bb24, !dbg !10352

bb3:                                              ; preds = %bb1
  %8 = and i32 %4, 32, !dbg !10353
  %9 = icmp eq i32 %8, 0, !dbg !10353
  br i1 %9, label %bb5, label %bb4, !dbg !10353

bb4:                                              ; preds = %bb3
  %10 = call i32* @__errno_location() nounwind readnone, !dbg !10354
  store i32 95, i32* %10, align 4, !dbg !10354
  br label %bb24, !dbg !10355

bb5:                                              ; preds = %bb3
  %11 = and i32 %4, 64, !dbg !10356
  %12 = icmp eq i32 %11, 0, !dbg !10356
  br i1 %12, label %bb6, label %bb7, !dbg !10356

bb6:                                              ; preds = %bb5
  %13 = call i32* @__errno_location() nounwind readnone, !dbg !10357
  store i32 22, i32* %13, align 4, !dbg !10357
  br label %bb24, !dbg !10358

bb7:                                              ; preds = %bb5
  %14 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10359
  %15 = load %struct.exe_disk_file_t** %14, align 8, !dbg !10359
  %16 = icmp eq %struct.exe_disk_file_t* %15, null, !dbg !10359
  br i1 %16, label %bb19, label %bb8, !dbg !10359

bb8:                                              ; preds = %bb7
  %17 = call i32 @__get_new_fd(%struct.exe_file_t** %connf) nounwind, !dbg !10360
  %18 = icmp slt i32 %17, 0, !dbg !10361
  br i1 %18, label %bb24, label %bb10, !dbg !10361

bb10:                                             ; preds = %bb8
  %19 = load %struct.exe_file_t** %connf, align 8, !dbg !10362
  %20 = getelementptr inbounds %struct.exe_file_t* %19, i64 0, i32 1, !dbg !10362
  %21 = load i32* %20, align 4, !dbg !10362
  %22 = or i32 %21, 16, !dbg !10362
  store i32 %22, i32* %20, align 4, !dbg !10362
  %23 = load %struct.exe_file_t** %connf, align 8, !dbg !10363
  %24 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10364
  %25 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 8), align 8, !dbg !10364
  %26 = icmp ult i32 %24, %25, !dbg !10364
  br i1 %26, label %bb1.i, label %__get_sym_stream.exit, !dbg !10364

bb1.i:                                            ; preds = %bb10
  %27 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 10), align 8, !dbg !10366
  %28 = zext i32 %24 to i64, !dbg !10366
  %29 = getelementptr inbounds %struct.exe_disk_file_t* %27, i64 %28, !dbg !10366
  %30 = add i32 %24, 1, !dbg !10366
  store i32 %30, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10366
  br label %__get_sym_stream.exit, !dbg !10366

__get_sym_stream.exit:                            ; preds = %bb1.i, %bb10
  %.0.i = phi %struct.exe_disk_file_t* [ %29, %bb1.i ], [ null, %bb10 ]
  %31 = getelementptr inbounds %struct.exe_file_t* %23, i64 0, i32 3, !dbg !10363
  store %struct.exe_disk_file_t* %.0.i, %struct.exe_disk_file_t** %31, align 8, !dbg !10363
  %32 = load %struct.exe_file_t** %connf, align 8, !dbg !10367
  %33 = getelementptr inbounds %struct.exe_file_t* %32, i64 0, i32 3, !dbg !10367
  %34 = load %struct.exe_disk_file_t** %33, align 8, !dbg !10367
  %35 = icmp eq %struct.exe_disk_file_t* %34, null, !dbg !10367
  br i1 %35, label %bb11, label %bb12, !dbg !10367

bb11:                                             ; preds = %__get_sym_stream.exit
  call void @klee_warning(i8* getelementptr inbounds ([25 x i8]* @.str13409, i64 0, i64 0)) nounwind, !dbg !10368
  %36 = load %struct.exe_file_t** %connf, align 8, !dbg !10369
  call void @__undo_get_new_fd(%struct.exe_file_t* %36) nounwind, !dbg !10369
  %37 = call i32* @__errno_location() nounwind readnone, !dbg !10370
  store i32 23, i32* %37, align 4, !dbg !10370
  br label %bb24, !dbg !10371

bb12:                                             ; preds = %__get_sym_stream.exit
  %38 = getelementptr inbounds %struct.exe_file_t* %32, i64 0, i32 4, !dbg !10372
  %39 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 6, !dbg !10372
  %40 = load i32* %39, align 8, !dbg !10372
  %41 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %40, %struct.exe_sockaddr_t* %38) nounwind, !dbg !10372
  %42 = icmp eq %struct.exe_sockaddr_t* %41, null, !dbg !10372
  br i1 %42, label %bb13, label %bb14, !dbg !10372

bb13:                                             ; preds = %bb12
  %43 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10373
  %44 = add i32 %43, -1, !dbg !10373
  store i32 %44, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10373
  %45 = load %struct.exe_file_t** %connf, align 8, !dbg !10374
  call void @__undo_get_new_fd(%struct.exe_file_t* %45) nounwind, !dbg !10374
  %46 = call i32* @__errno_location() nounwind readnone, !dbg !10375
  store i32 12, i32* %46, align 4, !dbg !10375
  br label %bb24, !dbg !10376

bb14:                                             ; preds = %bb12
  %47 = load %struct.exe_file_t** %connf, align 8, !dbg !10377
  %48 = getelementptr inbounds %struct.exe_file_t* %47, i64 0, i32 3, !dbg !10377
  %49 = load %struct.exe_disk_file_t** %48, align 8, !dbg !10377
  %50 = getelementptr inbounds %struct.exe_disk_file_t* %49, i64 0, i32 4, !dbg !10377
  %51 = load %struct.exe_sockaddr_t** %50, align 8, !dbg !10377
  %52 = getelementptr inbounds %struct.exe_file_t* %47, i64 0, i32 4, i32 1, !dbg !10377
  %53 = load i32* %52, align 8, !dbg !10377
  %54 = getelementptr inbounds %struct.exe_sockaddr_t* %51, i64 0, i32 1, !dbg !10377
  store i32 %53, i32* %54, align 8, !dbg !10377
  %55 = load %struct.exe_file_t** %connf, align 8, !dbg !10378
  %56 = getelementptr inbounds %struct.exe_file_t* %55, i64 0, i32 3, !dbg !10378
  %57 = load %struct.exe_disk_file_t** %56, align 8, !dbg !10378
  %58 = getelementptr inbounds %struct.exe_disk_file_t* %57, i64 0, i32 4, !dbg !10378
  %59 = load %struct.exe_sockaddr_t** %58, align 8, !dbg !10378
  %60 = getelementptr inbounds %struct.exe_sockaddr_t* %59, i64 0, i32 0, !dbg !10378
  %61 = load %struct.sockaddr_storage** %60, align 8, !dbg !10378
  %62 = getelementptr inbounds %struct.exe_file_t* %55, i64 0, i32 4, i32 0, !dbg !10378
  %63 = load %struct.sockaddr_storage** %62, align 8, !dbg !10378
  %64 = getelementptr inbounds %struct.sockaddr_storage* %63, i64 0, i32 0, !dbg !10378
  %65 = load i16* %64, align 8, !dbg !10378
  %66 = getelementptr inbounds %struct.sockaddr_storage* %61, i64 0, i32 0, !dbg !10378
  store i16 %65, i16* %66, align 8, !dbg !10378
  %67 = load %struct.exe_file_t** %connf, align 8, !dbg !10379
  %68 = getelementptr inbounds %struct.exe_file_t* %67, i64 0, i32 3, !dbg !10379
  %69 = load %struct.exe_disk_file_t** %68, align 8, !dbg !10379
  %70 = getelementptr inbounds %struct.exe_disk_file_t* %69, i64 0, i32 4, !dbg !10379
  %71 = load %struct.exe_sockaddr_t** %70, align 8, !dbg !10379
  %72 = getelementptr inbounds %struct.exe_file_t* %67, i64 0, i32 5, !dbg !10379
  store %struct.exe_sockaddr_t* %71, %struct.exe_sockaddr_t** %72, align 8, !dbg !10379
  %73 = icmp eq %struct.sockaddr* %addr, null, !dbg !10380
  br i1 %73, label %bb14.bb18_crit_edge, label %bb15, !dbg !10380

bb14.bb18_crit_edge:                              ; preds = %bb14
  %.pre = load %struct.exe_file_t** %connf, align 8
  br label %bb18

bb15:                                             ; preds = %bb14
  %74 = load i32* %addrlen, align 4, !dbg !10381
  %75 = zext i32 %74 to i64, !dbg !10381
  %76 = bitcast %struct.sockaddr* %addr to i8*, !dbg !10381
  call void @klee_check_memory_access(i8* %76, i64 %75) nounwind, !dbg !10381
  %77 = load i32* %addrlen, align 4, !dbg !10382
  %78 = load %struct.exe_file_t** %connf, align 8, !dbg !10382
  %79 = getelementptr inbounds %struct.exe_file_t* %78, i64 0, i32 5, !dbg !10382
  %80 = load %struct.exe_sockaddr_t** %79, align 8, !dbg !10382
  %81 = getelementptr inbounds %struct.exe_sockaddr_t* %80, i64 0, i32 1, !dbg !10382
  %82 = load i32* %81, align 8, !dbg !10382
  %83 = icmp ult i32 %77, %82, !dbg !10382
  br i1 %83, label %bb16, label %bb17, !dbg !10382

bb16:                                             ; preds = %bb15
  %84 = getelementptr inbounds %struct.exe_sockaddr_t* %80, i64 0, i32 0, !dbg !10383
  %85 = load %struct.sockaddr_storage** %84, align 8, !dbg !10383
  %86 = bitcast %struct.sockaddr_storage* %85 to i8*, !dbg !10383
  call void @free(i8* %86) nounwind, !dbg !10383
  %87 = load %struct.exe_file_t** %connf, align 8, !dbg !10384
  %88 = getelementptr inbounds %struct.exe_file_t* %87, i64 0, i32 4, i32 0, !dbg !10384
  %89 = load %struct.sockaddr_storage** %88, align 8, !dbg !10384
  %90 = bitcast %struct.sockaddr_storage* %89 to i8*, !dbg !10384
  call void @free(i8* %90) nounwind, !dbg !10384
  %91 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10385
  %92 = add i32 %91, -1, !dbg !10385
  store i32 %92, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10385
  %93 = load %struct.exe_file_t** %connf, align 8, !dbg !10386
  call void @__undo_get_new_fd(%struct.exe_file_t* %93) nounwind, !dbg !10386
  %94 = call i32* @__errno_location() nounwind readnone, !dbg !10387
  store i32 22, i32* %94, align 4, !dbg !10387
  br label %bb24, !dbg !10388

bb17:                                             ; preds = %bb15
  %95 = zext i32 %82 to i64, !dbg !10389
  %96 = getelementptr inbounds %struct.exe_sockaddr_t* %80, i64 0, i32 0, !dbg !10389
  %97 = load %struct.sockaddr_storage** %96, align 8, !dbg !10389
  %98 = bitcast %struct.sockaddr_storage* %97 to i8*, !dbg !10389
  %99 = call i8* @memcpy(i8* %76, i8* %98, i64 %95)
  %100 = load %struct.exe_sockaddr_t** %79, align 8, !dbg !10390
  %101 = getelementptr inbounds %struct.exe_sockaddr_t* %100, i64 0, i32 1, !dbg !10390
  %102 = load i32* %101, align 8, !dbg !10390
  store i32 %102, i32* %addrlen, align 4, !dbg !10390
  br label %bb18, !dbg !10390

bb18:                                             ; preds = %bb17, %bb14.bb18_crit_edge
  %103 = phi %struct.exe_file_t* [ %.pre, %bb14.bb18_crit_edge ], [ %78, %bb17 ]
  %104 = getelementptr inbounds %struct.exe_file_t* %103, i64 0, i32 1, !dbg !10391
  %105 = load i32* %104, align 4, !dbg !10391
  %106 = or i32 %105, 12, !dbg !10391
  store i32 %106, i32* %104, align 4, !dbg !10391
  br label %bb24, !dbg !10392

bb19:                                             ; preds = %bb7
  %107 = call i32 @__get_new_fd(%struct.exe_file_t** %fchild) nounwind, !dbg !10393
  %108 = icmp slt i32 %107, 0, !dbg !10394
  br i1 %108, label %bb20, label %bb21, !dbg !10394

bb20:                                             ; preds = %bb19
  %109 = call i32* @__errno_location() nounwind readnone, !dbg !10395
  store i32 12, i32* %109, align 4, !dbg !10395
  br label %bb24, !dbg !10396

bb21:                                             ; preds = %bb19
  %110 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10397
  %111 = load i32* %110, align 8, !dbg !10397
  %112 = call i64 (i64, ...)* @syscall(i64 43, i32 %111, %struct.sockaddr* %addr, i32* %addrlen) nounwind, !dbg !10397
  %113 = trunc i64 %112 to i32, !dbg !10397
  %114 = icmp slt i32 %113, 0, !dbg !10398
  br i1 %114, label %bb22, label %bb23, !dbg !10398

bb22:                                             ; preds = %bb21
  %115 = call i32* @__errno_location() nounwind readnone, !dbg !10399
  %116 = call i32 @klee_get_errno() nounwind, !dbg !10399
  store i32 %116, i32* %115, align 4, !dbg !10399
  %117 = load %struct.exe_file_t** %fchild, align 8, !dbg !10400
  call void @__undo_get_new_fd(%struct.exe_file_t* %117) nounwind, !dbg !10400
  br label %bb24, !dbg !10401

bb23:                                             ; preds = %bb21
  %118 = load %struct.exe_file_t** %fchild, align 8, !dbg !10402
  %119 = getelementptr inbounds %struct.exe_file_t* %118, i64 0, i32 1, !dbg !10402
  %120 = load i32* %119, align 4, !dbg !10402
  %121 = or i32 %120, 16, !dbg !10402
  store i32 %121, i32* %119, align 4, !dbg !10402
  %122 = load %struct.exe_file_t** %fchild, align 8, !dbg !10403
  %123 = getelementptr inbounds %struct.exe_file_t* %122, i64 0, i32 1, !dbg !10403
  %124 = load i32* %123, align 4, !dbg !10403
  %125 = or i32 %124, 12, !dbg !10403
  store i32 %125, i32* %123, align 4, !dbg !10403
  %126 = load %struct.exe_file_t** %fchild, align 8, !dbg !10404
  %127 = getelementptr inbounds %struct.exe_file_t* %126, i64 0, i32 0, !dbg !10404
  store i32 %113, i32* %127, align 8, !dbg !10404
  br label %bb24, !dbg !10405

bb24:                                             ; preds = %bb23, %bb22, %bb20, %bb18, %bb16, %bb13, %bb11, %bb8, %bb6, %bb4, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ -1, %bb6 ], [ -1, %bb11 ], [ -1, %bb13 ], [ -1, %bb16 ], [ %17, %bb18 ], [ -1, %bb20 ], [ %113, %bb22 ], [ %107, %bb23 ], [ %17, %bb8 ]
  ret i32 %.0, !dbg !10349
}

define i32 @accept(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind {
entry:
  %0 = tail call i32 @__fd_accept(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind, !dbg !10406
  ret i32 %0, !dbg !10406
}

define weak i32 @socket(i32 %domain, i32 %type, i32 %protocol) nounwind {
entry:
  %f = alloca %struct.exe_file_t*, align 8
  %0 = call i32 @klee_zest_enabled() nounwind, !dbg !10408
  %1 = icmp eq i32 %0, 0, !dbg !10408
  br i1 %1, label %bb5, label %bb, !dbg !10408

bb:                                               ; preds = %entry
  %2 = call i32 @__get_new_fd(%struct.exe_file_t** %f) nounwind, !dbg !10409
  %3 = icmp slt i32 %2, 0, !dbg !10410
  br i1 %3, label %bb1, label %bb2, !dbg !10410

bb1:                                              ; preds = %bb
  call void @klee_warning(i8* getelementptr inbounds ([25 x i8]* @.str14410, i64 0, i64 0)) nounwind, !dbg !10411
  %4 = call i32* @__errno_location() nounwind readnone, !dbg !10412
  store i32 24, i32* %4, align 4, !dbg !10412
  br label %bb28, !dbg !10413

bb2:                                              ; preds = %bb
  %5 = call i64 (i64, ...)* @syscall(i64 41, i32 %domain, i32 %type, i32 %protocol) nounwind, !dbg !10414
  %6 = trunc i64 %5 to i32, !dbg !10414
  %7 = icmp slt i32 %6, 0, !dbg !10415
  %8 = load %struct.exe_file_t** %f, align 8, !dbg !10416
  br i1 %7, label %bb3, label %bb4, !dbg !10415

bb3:                                              ; preds = %bb2
  call void @__undo_get_new_fd(%struct.exe_file_t* %8) nounwind, !dbg !10416
  %9 = call i32* @__errno_location() nounwind readnone, !dbg !10417
  %10 = call i32 @klee_get_errno() nounwind, !dbg !10417
  store i32 %10, i32* %9, align 4, !dbg !10417
  br label %bb28, !dbg !10418

bb4:                                              ; preds = %bb2
  %11 = getelementptr inbounds %struct.exe_file_t* %8, i64 0, i32 1, !dbg !10419
  %12 = load i32* %11, align 4, !dbg !10419
  %13 = or i32 %12, 16, !dbg !10419
  store i32 %13, i32* %11, align 4, !dbg !10419
  %14 = load %struct.exe_file_t** %f, align 8, !dbg !10420
  %15 = getelementptr inbounds %struct.exe_file_t* %14, i64 0, i32 1, !dbg !10420
  %16 = load i32* %15, align 4, !dbg !10420
  %17 = or i32 %16, 12, !dbg !10420
  store i32 %17, i32* %15, align 4, !dbg !10420
  %18 = load %struct.exe_file_t** %f, align 8, !dbg !10421
  %19 = getelementptr inbounds %struct.exe_file_t* %18, i64 0, i32 0, !dbg !10421
  store i32 %6, i32* %19, align 8, !dbg !10421
  br label %bb28, !dbg !10422

bb5:                                              ; preds = %entry
  switch i32 %domain, label %bb26 [
    i32 2, label %bb6
    i32 10, label %bb6
    i32 17, label %bb6
  ], !dbg !10423

bb6:                                              ; preds = %bb5, %bb5, %bb5
  switch i32 %type, label %bb25 [
    i32 1, label %bb7
    i32 2, label %bb16
    i32 3, label %bb16
    i32 10, label %bb16
  ], !dbg !10424

bb7:                                              ; preds = %bb6
  %20 = call i32 @__get_new_fd(%struct.exe_file_t** %f) nounwind, !dbg !10425
  %21 = icmp slt i32 %20, 0, !dbg !10426
  br i1 %21, label %bb28, label %bb9, !dbg !10426

bb9:                                              ; preds = %bb7
  %22 = load %struct.exe_file_t** %f, align 8, !dbg !10427
  %23 = getelementptr inbounds %struct.exe_file_t* %22, i64 0, i32 1, !dbg !10427
  %24 = load i32* %23, align 4, !dbg !10427
  %25 = or i32 %24, 16, !dbg !10427
  store i32 %25, i32* %23, align 4, !dbg !10427
  %26 = load %struct.exe_file_t** %f, align 8, !dbg !10428
  %27 = getelementptr inbounds %struct.exe_file_t* %26, i64 0, i32 4, !dbg !10428
  %28 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %27) nounwind, !dbg !10428
  %29 = icmp eq %struct.exe_sockaddr_t* %28, null, !dbg !10428
  %30 = load %struct.exe_file_t** %f, align 8, !dbg !10429
  br i1 %29, label %bb10, label %bb11, !dbg !10428

bb10:                                             ; preds = %bb9
  call void @__undo_get_new_fd(%struct.exe_file_t* %30) nounwind, !dbg !10429
  %31 = call i32* @__errno_location() nounwind readnone, !dbg !10430
  store i32 12, i32* %31, align 4, !dbg !10430
  br label %bb28, !dbg !10431

bb11:                                             ; preds = %bb9
  %32 = call noalias i8* @malloc(i64 16) nounwind, !dbg !10432
  %33 = bitcast i8* %32 to %struct.exe_sockaddr_t*, !dbg !10432
  %34 = getelementptr inbounds %struct.exe_file_t* %30, i64 0, i32 5, !dbg !10432
  store %struct.exe_sockaddr_t* %33, %struct.exe_sockaddr_t** %34, align 8, !dbg !10432
  %35 = load %struct.exe_file_t** %f, align 8, !dbg !10433
  %36 = getelementptr inbounds %struct.exe_file_t* %35, i64 0, i32 5, !dbg !10433
  %37 = load %struct.exe_sockaddr_t** %36, align 8, !dbg !10433
  %38 = icmp eq %struct.exe_sockaddr_t* %37, null, !dbg !10433
  br i1 %38, label %bb12, label %bb13, !dbg !10433

bb12:                                             ; preds = %bb11
  %39 = getelementptr inbounds %struct.exe_file_t* %35, i64 0, i32 4, i32 0, !dbg !10434
  %40 = load %struct.sockaddr_storage** %39, align 8, !dbg !10434
  %41 = bitcast %struct.sockaddr_storage* %40 to i8*, !dbg !10434
  call void @free(i8* %41) nounwind, !dbg !10434
  %42 = load %struct.exe_file_t** %f, align 8, !dbg !10435
  call void @__undo_get_new_fd(%struct.exe_file_t* %42) nounwind, !dbg !10435
  %43 = call i32* @__errno_location() nounwind readnone, !dbg !10436
  store i32 12, i32* %43, align 4, !dbg !10436
  br label %bb28, !dbg !10437

bb13:                                             ; preds = %bb11
  %44 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %37) nounwind, !dbg !10438
  %45 = icmp eq %struct.exe_sockaddr_t* %44, null, !dbg !10438
  %46 = load %struct.exe_file_t** %f, align 8, !dbg !10439
  br i1 %45, label %bb14, label %bb15, !dbg !10438

bb14:                                             ; preds = %bb13
  %47 = getelementptr inbounds %struct.exe_file_t* %46, i64 0, i32 5, !dbg !10439
  %48 = load %struct.exe_sockaddr_t** %47, align 8, !dbg !10439
  %49 = bitcast %struct.exe_sockaddr_t* %48 to i8*, !dbg !10439
  call void @free(i8* %49) nounwind, !dbg !10439
  %50 = load %struct.exe_file_t** %f, align 8, !dbg !10440
  %51 = getelementptr inbounds %struct.exe_file_t* %50, i64 0, i32 4, i32 0, !dbg !10440
  %52 = load %struct.sockaddr_storage** %51, align 8, !dbg !10440
  %53 = bitcast %struct.sockaddr_storage* %52 to i8*, !dbg !10440
  call void @free(i8* %53) nounwind, !dbg !10440
  %54 = load %struct.exe_file_t** %f, align 8, !dbg !10441
  call void @__undo_get_new_fd(%struct.exe_file_t* %54) nounwind, !dbg !10441
  %55 = call i32* @__errno_location() nounwind readnone, !dbg !10442
  store i32 12, i32* %55, align 4, !dbg !10442
  br label %bb28, !dbg !10443

bb15:                                             ; preds = %bb13
  %56 = getelementptr inbounds %struct.exe_file_t* %46, i64 0, i32 3, !dbg !10444
  store %struct.exe_disk_file_t* @dummy_dfile, %struct.exe_disk_file_t** %56, align 8, !dbg !10444
  %57 = load %struct.exe_file_t** %f, align 8, !dbg !10445
  %58 = getelementptr inbounds %struct.exe_file_t* %57, i64 0, i32 1, !dbg !10445
  %59 = load i32* %58, align 4, !dbg !10445
  %60 = or i32 %59, 12, !dbg !10445
  store i32 %60, i32* %58, align 4, !dbg !10445
  %61 = load %struct.exe_file_t** %f, align 8, !dbg !10446
  %62 = getelementptr inbounds %struct.exe_file_t* %61, i64 0, i32 6, !dbg !10446
  store i32 %domain, i32* %62, align 8, !dbg !10446
  br label %bb28, !dbg !10446

bb16:                                             ; preds = %bb6, %bb6, %bb6
  %63 = call i32 @__get_new_fd(%struct.exe_file_t** %f) nounwind, !dbg !10447
  %64 = icmp slt i32 %63, 0, !dbg !10448
  br i1 %64, label %bb28, label %bb18, !dbg !10448

bb18:                                             ; preds = %bb16
  %65 = load %struct.exe_file_t** %f, align 8, !dbg !10449
  %66 = getelementptr inbounds %struct.exe_file_t* %65, i64 0, i32 1, !dbg !10449
  %67 = load i32* %66, align 4, !dbg !10449
  %68 = or i32 %67, 48, !dbg !10449
  store i32 %68, i32* %66, align 4, !dbg !10449
  %69 = load %struct.exe_file_t** %f, align 8, !dbg !10450
  %70 = getelementptr inbounds %struct.exe_file_t* %69, i64 0, i32 4, !dbg !10450
  %71 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %70) nounwind, !dbg !10450
  %72 = icmp eq %struct.exe_sockaddr_t* %71, null, !dbg !10450
  %73 = load %struct.exe_file_t** %f, align 8, !dbg !10451
  br i1 %72, label %bb19, label %bb20, !dbg !10450

bb19:                                             ; preds = %bb18
  call void @__undo_get_new_fd(%struct.exe_file_t* %73) nounwind, !dbg !10451
  %74 = call i32* @__errno_location() nounwind readnone, !dbg !10452
  store i32 12, i32* %74, align 4, !dbg !10452
  br label %bb28, !dbg !10453

bb20:                                             ; preds = %bb18
  %75 = call noalias i8* @malloc(i64 16) nounwind, !dbg !10454
  %76 = bitcast i8* %75 to %struct.exe_sockaddr_t*, !dbg !10454
  %77 = getelementptr inbounds %struct.exe_file_t* %73, i64 0, i32 5, !dbg !10454
  store %struct.exe_sockaddr_t* %76, %struct.exe_sockaddr_t** %77, align 8, !dbg !10454
  %78 = load %struct.exe_file_t** %f, align 8, !dbg !10455
  %79 = getelementptr inbounds %struct.exe_file_t* %78, i64 0, i32 5, !dbg !10455
  %80 = load %struct.exe_sockaddr_t** %79, align 8, !dbg !10455
  %81 = icmp eq %struct.exe_sockaddr_t* %80, null, !dbg !10455
  br i1 %81, label %bb21, label %bb22, !dbg !10455

bb21:                                             ; preds = %bb20
  %82 = getelementptr inbounds %struct.exe_file_t* %78, i64 0, i32 4, i32 0, !dbg !10456
  %83 = load %struct.sockaddr_storage** %82, align 8, !dbg !10456
  %84 = bitcast %struct.sockaddr_storage* %83 to i8*, !dbg !10456
  call void @free(i8* %84) nounwind, !dbg !10456
  %85 = load %struct.exe_file_t** %f, align 8, !dbg !10457
  call void @__undo_get_new_fd(%struct.exe_file_t* %85) nounwind, !dbg !10457
  %86 = call i32* @__errno_location() nounwind readnone, !dbg !10458
  store i32 12, i32* %86, align 4, !dbg !10458
  br label %bb28, !dbg !10459

bb22:                                             ; preds = %bb20
  %87 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %80) nounwind, !dbg !10460
  %88 = icmp eq %struct.exe_sockaddr_t* %87, null, !dbg !10460
  %89 = load %struct.exe_file_t** %f, align 8, !dbg !10461
  br i1 %88, label %bb23, label %bb24, !dbg !10460

bb23:                                             ; preds = %bb22
  %90 = getelementptr inbounds %struct.exe_file_t* %89, i64 0, i32 5, !dbg !10461
  %91 = load %struct.exe_sockaddr_t** %90, align 8, !dbg !10461
  %92 = bitcast %struct.exe_sockaddr_t* %91 to i8*, !dbg !10461
  call void @free(i8* %92) nounwind, !dbg !10461
  %93 = load %struct.exe_file_t** %f, align 8, !dbg !10462
  %94 = getelementptr inbounds %struct.exe_file_t* %93, i64 0, i32 4, i32 0, !dbg !10462
  %95 = load %struct.sockaddr_storage** %94, align 8, !dbg !10462
  %96 = bitcast %struct.sockaddr_storage* %95 to i8*, !dbg !10462
  call void @free(i8* %96) nounwind, !dbg !10462
  %97 = load %struct.exe_file_t** %f, align 8, !dbg !10463
  call void @__undo_get_new_fd(%struct.exe_file_t* %97) nounwind, !dbg !10463
  %98 = call i32* @__errno_location() nounwind readnone, !dbg !10464
  store i32 12, i32* %98, align 4, !dbg !10464
  br label %bb28, !dbg !10465

bb24:                                             ; preds = %bb22
  %99 = getelementptr inbounds %struct.exe_file_t* %89, i64 0, i32 3, !dbg !10466
  store %struct.exe_disk_file_t* @dummy_dfile, %struct.exe_disk_file_t** %99, align 8, !dbg !10466
  %100 = load %struct.exe_file_t** %f, align 8, !dbg !10467
  %101 = getelementptr inbounds %struct.exe_file_t* %100, i64 0, i32 1, !dbg !10467
  %102 = load i32* %101, align 4, !dbg !10467
  %103 = or i32 %102, 12, !dbg !10467
  store i32 %103, i32* %101, align 4, !dbg !10467
  br label %bb28, !dbg !10467

bb25:                                             ; preds = %bb6
  call void @klee_warning(i8* getelementptr inbounds ([24 x i8]* @.str15411, i64 0, i64 0)) nounwind, !dbg !10468
  %104 = call i32* @__errno_location() nounwind readnone, !dbg !10469
  store i32 94, i32* %104, align 4, !dbg !10469
  br label %bb28, !dbg !10470

bb26:                                             ; preds = %bb5
  call void @klee_warning(i8* getelementptr inbounds ([28 x i8]* @.str16412, i64 0, i64 0)) nounwind, !dbg !10471
  %105 = call i32* @__errno_location() nounwind readnone, !dbg !10472
  store i32 93, i32* %105, align 4, !dbg !10472
  br label %bb28, !dbg !10473

bb28:                                             ; preds = %bb26, %bb25, %bb24, %bb23, %bb21, %bb19, %bb16, %bb15, %bb14, %bb12, %bb10, %bb7, %bb4, %bb3, %bb1
  %.0 = phi i32 [ %2, %bb1 ], [ %6, %bb3 ], [ %2, %bb4 ], [ -1, %bb26 ], [ -1, %bb25 ], [ -1, %bb19 ], [ -1, %bb21 ], [ -1, %bb23 ], [ -1, %bb10 ], [ -1, %bb12 ], [ -1, %bb14 ], [ %20, %bb7 ], [ %63, %bb16 ], [ %63, %bb24 ], [ %20, %bb15 ]
  ret i32 %.0, !dbg !10413
}

define i32 @__fd_socket(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10474
  %1 = trunc i64 %0 to i32, !dbg !10474
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10475
  %3 = load i64* %2, align 8, !dbg !10475
  %4 = trunc i64 %3 to i32, !dbg !10475
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10476
  %6 = load i64* %5, align 8, !dbg !10476
  %7 = trunc i64 %6 to i32, !dbg !10476
  %8 = tail call i32 @socket(i32 %1, i32 %4, i32 %7) nounwind, !dbg !10477
  ret i32 %8, !dbg !10477
}

define weak i32 @__socketcall(i32 %type, i64* %args) nounwind {
entry:
  %iov.i21 = alloca %struct.iovec, align 8
  %msg.i22 = alloca %struct.msghdr, align 8
  %iov.i = alloca %struct.iovec, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %iov.i.i19 = alloca %struct.iovec, align 8
  %msg.i.i20 = alloca %struct.msghdr, align 8
  %iov.i.i = alloca %struct.iovec, align 8
  %msg.i.i = alloca %struct.msghdr, align 8
  switch i32 %type, label %bb16 [
    i32 1, label %bb
    i32 2, label %bb1
    i32 3, label %bb2
    i32 4, label %bb3
    i32 5, label %bb4
    i32 6, label %bb5
    i32 7, label %bb6
    i32 17, label %bb15
    i32 9, label %bb7
    i32 10, label %bb8
    i32 11, label %bb9
    i32 12, label %bb10
    i32 13, label %bb11
    i32 14, label %bb12
    i32 15, label %bb13
    i32 16, label %bb14
  ], !dbg !10478

bb:                                               ; preds = %entry
  %0 = load i64* %args, align 8, !dbg !10480
  %1 = trunc i64 %0 to i32, !dbg !10480
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10482
  %3 = load i64* %2, align 8, !dbg !10482
  %4 = trunc i64 %3 to i32, !dbg !10482
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10483
  %6 = load i64* %5, align 8, !dbg !10483
  %7 = trunc i64 %6 to i32, !dbg !10483
  %8 = call i32 @socket(i32 %1, i32 %4, i32 %7) nounwind, !dbg !10484
  br label %bb17, !dbg !10481

bb1:                                              ; preds = %entry
  %9 = load i64* %args, align 8, !dbg !10485
  %10 = trunc i64 %9 to i32, !dbg !10485
  %11 = getelementptr inbounds i64* %args, i64 1, !dbg !10487
  %12 = load i64* %11, align 8, !dbg !10487
  %13 = inttoptr i64 %12 to %struct.sockaddr*, !dbg !10487
  %14 = getelementptr inbounds i64* %args, i64 2, !dbg !10488
  %15 = load i64* %14, align 8, !dbg !10488
  %16 = trunc i64 %15 to i32, !dbg !10488
  %17 = call i32 @bind(i32 %10, %struct.sockaddr* %13, i32 %16) nounwind, !dbg !10489
  br label %bb17, !dbg !10486

bb2:                                              ; preds = %entry
  %18 = load i64* %args, align 8, !dbg !10490
  %19 = trunc i64 %18 to i32, !dbg !10490
  %20 = getelementptr inbounds i64* %args, i64 1, !dbg !10492
  %21 = load i64* %20, align 8, !dbg !10492
  %22 = inttoptr i64 %21 to %struct.sockaddr*, !dbg !10492
  %23 = getelementptr inbounds i64* %args, i64 2, !dbg !10493
  %24 = load i64* %23, align 8, !dbg !10493
  %25 = trunc i64 %24 to i32, !dbg !10493
  %26 = call i32 @connect(i32 %19, %struct.sockaddr* %22, i32 %25) nounwind, !dbg !10494
  br label %bb17, !dbg !10491

bb3:                                              ; preds = %entry
  %27 = load i64* %args, align 8, !dbg !10495
  %28 = trunc i64 %27 to i32, !dbg !10495
  %29 = getelementptr inbounds i64* %args, i64 1, !dbg !10497
  %30 = load i64* %29, align 8, !dbg !10497
  %31 = trunc i64 %30 to i32, !dbg !10497
  %32 = call i32 @listen(i32 %28, i32 %31) nounwind, !dbg !10498
  br label %bb17, !dbg !10496

bb4:                                              ; preds = %entry
  %33 = getelementptr inbounds i64* %args, i64 2, !dbg !10499
  %34 = load i64* %33, align 8, !dbg !10499
  %35 = inttoptr i64 %34 to i32*, !dbg !10499
  %36 = getelementptr inbounds i64* %args, i64 1, !dbg !10499
  %37 = load i64* %36, align 8, !dbg !10499
  %38 = inttoptr i64 %37 to %struct.sockaddr*, !dbg !10499
  %39 = load i64* %args, align 8, !dbg !10499
  %40 = trunc i64 %39 to i32, !dbg !10499
  %41 = call i32 @__fd_accept(i32 %40, %struct.sockaddr* %38, i32* %35) nounwind, !dbg !10499
  br label %bb17, !dbg !10499

bb5:                                              ; preds = %entry
  %42 = load i64* %args, align 8, !dbg !10500
  %43 = trunc i64 %42 to i32, !dbg !10500
  %44 = getelementptr inbounds i64* %args, i64 1, !dbg !10502
  %45 = load i64* %44, align 8, !dbg !10502
  %46 = inttoptr i64 %45 to %struct.sockaddr*, !dbg !10502
  %47 = getelementptr inbounds i64* %args, i64 2, !dbg !10503
  %48 = load i64* %47, align 8, !dbg !10503
  %49 = inttoptr i64 %48 to i32*, !dbg !10503
  %50 = call i32 @getsockname(i32 %43, %struct.sockaddr* %46, i32* %49) nounwind, !dbg !10504
  br label %bb17, !dbg !10501

bb6:                                              ; preds = %entry
  %51 = load i64* %args, align 8, !dbg !10505
  %52 = trunc i64 %51 to i32, !dbg !10505
  %53 = getelementptr inbounds i64* %args, i64 1, !dbg !10507
  %54 = load i64* %53, align 8, !dbg !10507
  %55 = inttoptr i64 %54 to %struct.sockaddr*, !dbg !10507
  %56 = getelementptr inbounds i64* %args, i64 2, !dbg !10508
  %57 = load i64* %56, align 8, !dbg !10508
  %58 = inttoptr i64 %57 to i32*, !dbg !10508
  %59 = call i32 @getpeername(i32 %52, %struct.sockaddr* %55, i32* %58) nounwind, !dbg !10509
  br label %bb17, !dbg !10506

bb7:                                              ; preds = %entry
  %60 = getelementptr inbounds i64* %args, i64 3, !dbg !10510
  %61 = load i64* %60, align 8, !dbg !10510
  %62 = trunc i64 %61 to i32, !dbg !10510
  %63 = getelementptr inbounds i64* %args, i64 2, !dbg !10510
  %64 = load i64* %63, align 8, !dbg !10510
  %65 = getelementptr inbounds i64* %args, i64 1, !dbg !10510
  %66 = load i64* %65, align 8, !dbg !10510
  %67 = inttoptr i64 %66 to i8*, !dbg !10510
  %68 = load i64* %args, align 8, !dbg !10510
  %69 = trunc i64 %68 to i32, !dbg !10510
  %70 = getelementptr inbounds %struct.iovec* %iov.i.i, i64 0, i32 0, !dbg !10511
  store i8* %67, i8** %70, align 8, !dbg !10511
  %71 = getelementptr inbounds %struct.iovec* %iov.i.i, i64 0, i32 1, !dbg !10513
  store i64 %64, i64* %71, align 8, !dbg !10513
  %72 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 0, !dbg !10514
  store i8* null, i8** %72, align 8, !dbg !10514
  %73 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 1, !dbg !10515
  store i32 0, i32* %73, align 8, !dbg !10515
  %74 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 2, !dbg !10516
  store %struct.iovec* %iov.i.i, %struct.iovec** %74, align 8, !dbg !10516
  %75 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 3, !dbg !10517
  store i64 1, i64* %75, align 8, !dbg !10517
  %76 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 4, !dbg !10518
  store i8* null, i8** %76, align 8, !dbg !10518
  %77 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 5, !dbg !10519
  store i64 0, i64* %77, align 8, !dbg !10519
  %78 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 6, !dbg !10520
  store i32 %62, i32* %78, align 8, !dbg !10520
  %79 = call i64 @__fd_sendmsg(i32 %69, %struct.msghdr* %msg.i.i, i32 %62) nounwind, !dbg !10521
  %80 = trunc i64 %79 to i32, !dbg !10510
  br label %bb17, !dbg !10510

bb8:                                              ; preds = %entry
  %81 = getelementptr inbounds i64* %args, i64 3, !dbg !10522
  %82 = load i64* %81, align 8, !dbg !10522
  %83 = trunc i64 %82 to i32, !dbg !10522
  %84 = getelementptr inbounds i64* %args, i64 2, !dbg !10522
  %85 = load i64* %84, align 8, !dbg !10522
  %86 = getelementptr inbounds i64* %args, i64 1, !dbg !10522
  %87 = load i64* %86, align 8, !dbg !10522
  %88 = inttoptr i64 %87 to i8*, !dbg !10522
  %89 = load i64* %args, align 8, !dbg !10522
  %90 = trunc i64 %89 to i32, !dbg !10522
  %91 = getelementptr inbounds %struct.iovec* %iov.i.i19, i64 0, i32 0, !dbg !10523
  store i8* %88, i8** %91, align 8, !dbg !10523
  %92 = getelementptr inbounds %struct.iovec* %iov.i.i19, i64 0, i32 1, !dbg !10525
  store i64 %85, i64* %92, align 8, !dbg !10525
  %93 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 0, !dbg !10526
  store i8* null, i8** %93, align 8, !dbg !10526
  %94 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 1, !dbg !10527
  store i32 0, i32* %94, align 8, !dbg !10527
  %95 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 2, !dbg !10528
  store %struct.iovec* %iov.i.i19, %struct.iovec** %95, align 8, !dbg !10528
  %96 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 3, !dbg !10529
  store i64 1, i64* %96, align 8, !dbg !10529
  %97 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 4, !dbg !10530
  store i8* null, i8** %97, align 8, !dbg !10530
  %98 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 5, !dbg !10531
  store i64 0, i64* %98, align 8, !dbg !10531
  %99 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 6, !dbg !10532
  store i32 %83, i32* %99, align 8, !dbg !10532
  %100 = call i64 @__fd_recvmsg(i32 %90, %struct.msghdr* %msg.i.i20, i32 %83) nounwind, !dbg !10533
  %101 = trunc i64 %100 to i32, !dbg !10522
  br label %bb17, !dbg !10522

bb9:                                              ; preds = %entry
  %102 = getelementptr inbounds i64* %args, i64 5, !dbg !10534
  %103 = load i64* %102, align 8, !dbg !10534
  %104 = trunc i64 %103 to i32, !dbg !10534
  %105 = getelementptr inbounds i64* %args, i64 4, !dbg !10534
  %106 = load i64* %105, align 8, !dbg !10534
  %107 = getelementptr inbounds i64* %args, i64 3, !dbg !10534
  %108 = load i64* %107, align 8, !dbg !10534
  %109 = trunc i64 %108 to i32, !dbg !10534
  %110 = getelementptr inbounds i64* %args, i64 2, !dbg !10534
  %111 = load i64* %110, align 8, !dbg !10534
  %112 = getelementptr inbounds i64* %args, i64 1, !dbg !10534
  %113 = load i64* %112, align 8, !dbg !10534
  %114 = inttoptr i64 %113 to i8*, !dbg !10534
  %115 = load i64* %args, align 8, !dbg !10534
  %116 = trunc i64 %115 to i32, !dbg !10534
  %117 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 0, !dbg !10535
  store i8* %114, i8** %117, align 8, !dbg !10535
  %118 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 1, !dbg !10536
  store i64 %111, i64* %118, align 8, !dbg !10536
  %119 = inttoptr i64 %106 to i8*, !dbg !10537
  %120 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !10537
  store i8* %119, i8** %120, align 8, !dbg !10537
  %121 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !10538
  store i32 %104, i32* %121, align 8, !dbg !10538
  %122 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !10539
  store %struct.iovec* %iov.i, %struct.iovec** %122, align 8, !dbg !10539
  %123 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !10540
  store i64 1, i64* %123, align 8, !dbg !10540
  %124 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !10541
  store i8* null, i8** %124, align 8, !dbg !10541
  %125 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !10542
  store i64 0, i64* %125, align 8, !dbg !10542
  %126 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !10543
  store i32 %109, i32* %126, align 8, !dbg !10543
  %127 = call i64 @__fd_sendmsg(i32 %116, %struct.msghdr* %msg.i, i32 %109) nounwind, !dbg !10544
  %128 = trunc i64 %127 to i32, !dbg !10534
  br label %bb17, !dbg !10534

bb10:                                             ; preds = %entry
  %129 = getelementptr inbounds i64* %args, i64 5, !dbg !10545
  %130 = load i64* %129, align 8, !dbg !10545
  %131 = inttoptr i64 %130 to i32*, !dbg !10545
  %132 = getelementptr inbounds i64* %args, i64 4, !dbg !10545
  %133 = load i64* %132, align 8, !dbg !10545
  %134 = getelementptr inbounds i64* %args, i64 3, !dbg !10545
  %135 = load i64* %134, align 8, !dbg !10545
  %136 = trunc i64 %135 to i32, !dbg !10545
  %137 = load i64* %args, align 8, !dbg !10545
  %138 = trunc i64 %137 to i32, !dbg !10545
  %139 = icmp ne i64 %133, 0, !dbg !10546
  %140 = icmp eq i64 %130, 0, !dbg !10546
  %141 = and i1 %139, %140, !dbg !10546
  br i1 %141, label %bb.i, label %bb3.i, !dbg !10546

bb.i:                                             ; preds = %bb10
  %142 = call i32* @__errno_location() nounwind readnone, !dbg !10547
  store i32 14, i32* %142, align 4, !dbg !10547
  br label %__fd_recvfrom.exit, !dbg !10548

bb3.i:                                            ; preds = %bb10
  %143 = getelementptr inbounds i64* %args, i64 1, !dbg !10545
  %144 = load i64* %143, align 8, !dbg !10545
  %145 = getelementptr inbounds i64* %args, i64 2, !dbg !10545
  %146 = inttoptr i64 %144 to i8*, !dbg !10545
  %147 = load i64* %145, align 8, !dbg !10545
  %148 = getelementptr inbounds %struct.iovec* %iov.i21, i64 0, i32 0, !dbg !10549
  store i8* %146, i8** %148, align 8, !dbg !10549
  %149 = getelementptr inbounds %struct.iovec* %iov.i21, i64 0, i32 1, !dbg !10550
  store i64 %147, i64* %149, align 8, !dbg !10550
  %150 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 0, !dbg !10551
  %151 = inttoptr i64 %133 to i8*, !dbg !10551
  store i8* %151, i8** %150, align 8, !dbg !10551
  br i1 %140, label %bb6.i, label %bb4.i, !dbg !10552

bb4.i:                                            ; preds = %bb3.i
  %152 = load i32* %131, align 4, !dbg !10552
  br label %bb6.i, !dbg !10552

bb6.i:                                            ; preds = %bb4.i, %bb3.i
  %iftmp.113.0.i = phi i32 [ %152, %bb4.i ], [ 0, %bb3.i ]
  %153 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 1, !dbg !10552
  store i32 %iftmp.113.0.i, i32* %153, align 8, !dbg !10552
  %154 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 2, !dbg !10553
  store %struct.iovec* %iov.i21, %struct.iovec** %154, align 8, !dbg !10553
  %155 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 3, !dbg !10554
  store i64 1, i64* %155, align 8, !dbg !10554
  %156 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 4, !dbg !10555
  store i8* null, i8** %156, align 8, !dbg !10555
  %157 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 5, !dbg !10556
  store i64 0, i64* %157, align 8, !dbg !10556
  %158 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 6, !dbg !10557
  store i32 %136, i32* %158, align 8, !dbg !10557
  %159 = call i64 @__fd_recvmsg(i32 %138, %struct.msghdr* %msg.i22, i32 %136) nounwind, !dbg !10558
  br i1 %140, label %__fd_recvfrom.exit, label %bb7.i, !dbg !10559

bb7.i:                                            ; preds = %bb6.i
  %160 = load i32* %153, align 8, !dbg !10559
  store i32 %160, i32* %131, align 4, !dbg !10559
  br label %__fd_recvfrom.exit, !dbg !10559

__fd_recvfrom.exit:                               ; preds = %bb7.i, %bb6.i, %bb.i
  %.0.i = phi i64 [ -1, %bb.i ], [ %159, %bb6.i ], [ %159, %bb7.i ]
  %161 = trunc i64 %.0.i to i32, !dbg !10545
  br label %bb17, !dbg !10545

bb11:                                             ; preds = %entry
  %162 = load i64* %args, align 8, !dbg !10560
  %163 = trunc i64 %162 to i32, !dbg !10560
  %164 = getelementptr inbounds i64* %args, i64 1, !dbg !10562
  %165 = load i64* %164, align 8, !dbg !10562
  %166 = trunc i64 %165 to i32, !dbg !10562
  %167 = call i32 @shutdown(i32 %163, i32 %166) nounwind, !dbg !10563
  br label %bb17, !dbg !10561

bb12:                                             ; preds = %entry
  call void @klee_warning(i8* getelementptr inbounds ([20 x i8]* @.str17413, i64 0, i64 0)) nounwind, !dbg !10564
  br label %bb17, !dbg !10565

bb13:                                             ; preds = %entry
  call void @klee_warning(i8* getelementptr inbounds ([20 x i8]* @.str18414, i64 0, i64 0)) nounwind, !dbg !10566
  br label %bb17, !dbg !10567

bb14:                                             ; preds = %entry
  %168 = getelementptr inbounds i64* %args, i64 2, !dbg !10568
  %169 = load i64* %168, align 8, !dbg !10568
  %170 = trunc i64 %169 to i32, !dbg !10568
  %171 = getelementptr inbounds i64* %args, i64 1, !dbg !10568
  %172 = load i64* %171, align 8, !dbg !10568
  %173 = inttoptr i64 %172 to %struct.msghdr*, !dbg !10568
  %174 = load i64* %args, align 8, !dbg !10568
  %175 = trunc i64 %174 to i32, !dbg !10568
  %176 = call i64 @__fd_sendmsg(i32 %175, %struct.msghdr* %173, i32 %170) nounwind, !dbg !10568
  %177 = trunc i64 %176 to i32, !dbg !10568
  br label %bb17, !dbg !10568

bb15:                                             ; preds = %entry
  %178 = getelementptr inbounds i64* %args, i64 2, !dbg !10569
  %179 = load i64* %178, align 8, !dbg !10569
  %180 = trunc i64 %179 to i32, !dbg !10569
  %181 = getelementptr inbounds i64* %args, i64 1, !dbg !10569
  %182 = load i64* %181, align 8, !dbg !10569
  %183 = inttoptr i64 %182 to %struct.msghdr*, !dbg !10569
  %184 = load i64* %args, align 8, !dbg !10569
  %185 = trunc i64 %184 to i32, !dbg !10569
  %186 = call i64 @__fd_recvmsg(i32 %185, %struct.msghdr* %183, i32 %180) nounwind, !dbg !10569
  %187 = trunc i64 %186 to i32, !dbg !10569
  br label %bb17, !dbg !10569

bb16:                                             ; preds = %entry
  %188 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr inbounds ([46 x i8]* @.str19415, i64 0, i64 0), i32 %type) nounwind, !dbg !10570
  %189 = call i32* @__errno_location() nounwind readnone, !dbg !10571
  store i32 38, i32* %189, align 4, !dbg !10571
  br label %bb17, !dbg !10572

bb17:                                             ; preds = %bb16, %bb15, %bb14, %bb13, %bb12, %bb11, %__fd_recvfrom.exit, %bb9, %bb8, %bb7, %bb6, %bb5, %bb4, %bb3, %bb2, %bb1, %bb
  %.0 = phi i32 [ -1, %bb16 ], [ %177, %bb14 ], [ 0, %bb13 ], [ 0, %bb12 ], [ %167, %bb11 ], [ %161, %__fd_recvfrom.exit ], [ %128, %bb9 ], [ %101, %bb8 ], [ %80, %bb7 ], [ %187, %bb15 ], [ %59, %bb6 ], [ %50, %bb5 ], [ %41, %bb4 ], [ %32, %bb3 ], [ %26,
  ret i32 %.0, !dbg !10481
}

define weak i8* @canonicalize_file_name(i8* %name) nounwind {
entry:
  %0 = tail call i8* @realpath(i8* noalias %name, i8* noalias null) nounwind, !dbg !10573
  ret i8* %0, !dbg !10573
}

declare i32 @gettimeofday(%struct.timespec* noalias, %struct.__mbstate_t* noalias) nounwind

declare i32 @__xstat64(i32, i8*, %struct.stat*) nounwind

define i32 @native_read_file(i8* %path, i32 %flags, i8** nocapture %_buf) nounwind {
entry:
  %s = alloca %struct.stat, align 8
  %0 = call i32 @__xstat64(i32 1, i8* %path, %struct.stat* %s) nounwind, !dbg !10575
  %1 = icmp eq i32 %0, -1, !dbg !10577
  br i1 %1, label %bb8, label %bb1, !dbg !10577

bb1:                                              ; preds = %entry
  %2 = getelementptr inbounds %struct.stat* %s, i64 0, i32 8, !dbg !10578
  %3 = load i64* %2, align 8, !dbg !10578
  %4 = call noalias i8* @malloc(i64 %3) nounwind, !dbg !10578
  store i8* %4, i8** %_buf, align 8, !dbg !10578
  %5 = call i64 (i64, ...)* @syscall(i64 2, i8* %path, i32 %flags, i32 0) nounwind, !dbg !10579
  %6 = trunc i64 %5 to i32, !dbg !10579
  %7 = icmp eq i32 %6, -1, !dbg !10580
  br i1 %7, label %bb8, label %bb6, !dbg !10580

bb4:                                              ; preds = %bb6
  %8 = getelementptr inbounds i8* %4, i64 %13, !dbg !10581
  %9 = call i64 (i64, ...)* @syscall(i64 0, i32 %6, i8* %8, i64 %14) nounwind, !dbg !10581
  %10 = trunc i64 %9 to i32, !dbg !10581
  %11 = icmp slt i32 %10, 1, !dbg !10582
  br i1 %11, label %bb7, label %bb5, !dbg !10582

bb5:                                              ; preds = %bb4
  %12 = add nsw i32 %10, %cnt.0, !dbg !10583
  br label %bb6, !dbg !10583

bb6:                                              ; preds = %bb5, %bb1
  %cnt.0 = phi i32 [ %12, %bb5 ], [ 0, %bb1 ]
  %13 = sext i32 %cnt.0 to i64, !dbg !10584
  %14 = load i64* %2, align 8, !dbg !10584
  %15 = icmp slt i64 %13, %14, !dbg !10584
  br i1 %15, label %bb4, label %bb7, !dbg !10584

bb7:                                              ; preds = %bb6, %bb4
  %16 = call i64 (i64, ...)* @syscall(i64 3, i32 %6) nounwind, !dbg !10585
  %17 = load i64* %2, align 8, !dbg !10586
  %18 = trunc i64 %17 to i32, !dbg !10586
  br label %bb8, !dbg !10586

bb8:                                              ; preds = %bb7, %bb1, %entry
  %.0 = phi i32 [ %18, %bb7 ], [ -1, %entry ], [ -1, %bb1 ]
  ret i32 %.0, !dbg !10587
}

define void @__fill_blocks(%struct.exe_disk_file_t* nocapture %dfile, %struct.fill_info_t* nocapture %fill_info, i32 %n_fill_info, i32 %do_memset) nounwind {
entry:
  %file = alloca i8*, align 8
  %0 = icmp eq i32 %do_memset, 0, !dbg !10588
  %1 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10589
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 0, !dbg !10590
  br label %bb22, !dbg !10591

bb:                                               ; preds = %bb22
  %scevgep40 = getelementptr %struct.fill_info_t* %fill_info, i64 %indvar33, i32 1
  %3 = load i32* %scevgep40, align 4, !dbg !10592
  switch i32 %3, label %bb20 [
    i32 0, label %bb1
    i32 1, label %bb6
    i32 2, label %bb11
  ], !dbg !10592

bb1:                                              ; preds = %bb
  %4 = load i32* %scevgep39, align 8, !dbg !10593
  br i1 %0, label %bb5.preheader, label %bb2, !dbg !10588

bb5.preheader:                                    ; preds = %bb1
  %5 = icmp eq i32 %4, 0, !dbg !10593
  br i1 %5, label %bb21, label %bb4, !dbg !10593

bb2:                                              ; preds = %bb1
  %6 = zext i32 %4 to i64, !dbg !10589
  %7 = load i32* %scevgep3738, align 8, !dbg !10589
  %8 = load i8** %1, align 8, !dbg !10589
  %9 = load i32* %scevgep3536, align 8, !dbg !10589
  %10 = zext i32 %9 to i64, !dbg !10589
  %11 = getelementptr inbounds i8* %8, i64 %10, !dbg !10589
  %12 = trunc i32 %7 to i8, !dbg !10589
  %13 = zext i8 %12 to i32
  %14 = call i8* @memset(i8* %11, i32 %13, i64 %6)
  br label %bb21, !dbg !10589

bb4:                                              ; preds = %bb4, %bb5.preheader
  %j.028 = phi i32 [ %tmp32, %bb4 ], [ 0, %bb5.preheader ]
  %tmp32 = add i32 %j.028, 1
  %15 = load i8** %1, align 8, !dbg !10594
  %16 = load i32* %scevgep3536, align 8, !dbg !10594
  %17 = add i32 %16, %j.028, !dbg !10594
  %18 = zext i32 %17 to i64, !dbg !10594
  %19 = getelementptr inbounds i8* %15, i64 %18, !dbg !10594
  %20 = load i8* %19, align 1, !dbg !10594
  %21 = load i32* %scevgep3738, align 8, !dbg !10594
  %22 = trunc i32 %21 to i8, !dbg !10594
  %23 = icmp eq i8 %20, %22, !dbg !10594
  %24 = zext i1 %23 to i64, !dbg !10594
  call void @klee_assume(i64 %24) nounwind, !dbg !10594
  %25 = load i32* %scevgep39, align 8, !dbg !10593
  %26 = icmp ugt i32 %25, %tmp32, !dbg !10593
  br i1 %26, label %bb4, label %bb21, !dbg !10593

bb6:                                              ; preds = %bb
  %27 = load i32* %scevgep39, align 8, !dbg !10595
  br i1 %0, label %bb10.preheader, label %bb7, !dbg !10596

bb10.preheader:                                   ; preds = %bb6
  %28 = icmp eq i32 %27, 0, !dbg !10595
  br i1 %28, label %bb21, label %bb9, !dbg !10595

bb7:                                              ; preds = %bb6
  %29 = zext i32 %27 to i64, !dbg !10597
  %30 = load i8** %scevgep37, align 8, !dbg !10597
  %31 = load i8** %1, align 8, !dbg !10597
  %32 = load i32* %scevgep3536, align 8, !dbg !10597
  %33 = zext i32 %32 to i64, !dbg !10597
  %34 = getelementptr inbounds i8* %31, i64 %33, !dbg !10597
  %35 = call i8* @memcpy(i8* %34, i8* %30, i64 %29)
  br label %bb21, !dbg !10597

bb9:                                              ; preds = %bb9, %bb10.preheader
  %36 = phi i32 [ %tmp31, %bb9 ], [ 0, %bb10.preheader ]
  %tmp31 = add i32 %36, 1
  %37 = load i8** %1, align 8, !dbg !10598
  %38 = load i32* %scevgep3536, align 8, !dbg !10598
  %39 = add i32 %38, %36, !dbg !10598
  %40 = zext i32 %39 to i64, !dbg !10598
  %41 = getelementptr inbounds i8* %37, i64 %40, !dbg !10598
  %42 = load i8* %41, align 1, !dbg !10598
  %43 = load i8** %scevgep37, align 8, !dbg !10598
  %44 = zext i32 %36 to i64, !dbg !10598
  %45 = getelementptr inbounds i8* %43, i64 %44, !dbg !10598
  %46 = load i8* %45, align 1, !dbg !10598
  %47 = icmp eq i8 %42, %46, !dbg !10598
  %48 = zext i1 %47 to i64, !dbg !10598
  call void @klee_assume(i64 %48) nounwind, !dbg !10598
  %49 = load i32* %scevgep39, align 8, !dbg !10595
  %50 = icmp ugt i32 %49, %tmp31, !dbg !10595
  br i1 %50, label %bb9, label %bb21, !dbg !10595

bb11:                                             ; preds = %bb
  %51 = load i8** %scevgep37, align 8, !dbg !10599
  %52 = call i32 @native_read_file(i8* %51, i32 0, i8** %file) nounwind, !dbg !10599
  %53 = icmp slt i32 %52, 0, !dbg !10600
  br i1 %53, label %bb12, label %bb13, !dbg !10600

bb12:                                             ; preds = %bb11
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8]* @.str423, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1424, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.5216, i64 0, i64 0)) noreturn 
  unreachable, !dbg !10600

bb13:                                             ; preds = %bb11
  %54 = load i32* %2, align 8, !dbg !10590
  %55 = load i32* %scevgep3536, align 8, !dbg !10590
  %56 = add i32 %55, %52, !dbg !10590
  %57 = icmp ult i32 %54, %56, !dbg !10590
  br i1 %57, label %bb14, label %bb15, !dbg !10590

bb14:                                             ; preds = %bb13
  call void @__assert_fail(i8* getelementptr inbounds ([62 x i8]* @.str2425, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1424, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.5216, i64 0, i64 0)) noreturn
  unreachable, !dbg !10590

bb15:                                             ; preds = %bb13
  br i1 %0, label %bb19.preheader, label %bb16, !dbg !10601

bb19.preheader:                                   ; preds = %bb15
  %58 = icmp eq i32 %52, 0, !dbg !10602
  br i1 %58, label %bb21, label %bb18.lr.ph, !dbg !10602

bb18.lr.ph:                                       ; preds = %bb19.preheader
  %59 = load i8** %file, align 8, !dbg !10603
  %60 = load i8** %1, align 8, !dbg !10603
  %61 = zext i32 %55 to i64, !dbg !10603
  %62 = getelementptr inbounds i8* %60, i64 %61, !dbg !10603
  %63 = load i8* %62, align 1, !dbg !10603
  %64 = load i8* %59, align 1, !dbg !10603
  %65 = icmp eq i8 %63, %64, !dbg !10603
  %66 = zext i1 %65 to i64, !dbg !10603
  call void @klee_assume(i64 %66) nounwind, !dbg !10603
  %exitcond3 = icmp eq i32 %52, 1
  br i1 %exitcond3, label %bb21, label %bb18.bb18_crit_edge.lr.ph, !dbg !10602

bb18.bb18_crit_edge.lr.ph:                        ; preds = %bb18.lr.ph
  %tmp8 = zext i32 %52 to i64
  %tmp9 = add i64 %tmp8, -1
  br label %bb18.bb18_crit_edge

bb16:                                             ; preds = %bb15
  %67 = sext i32 %52 to i64, !dbg !10604
  %68 = load i8** %file, align 8, !dbg !10604
  %69 = load i8** %1, align 8, !dbg !10604
  %70 = zext i32 %55 to i64, !dbg !10604
  %71 = getelementptr inbounds i8* %69, i64 %70, !dbg !10604
  %72 = call i8* @memcpy(i8* %71, i8* %68, i64 %67)
  br label %bb21, !dbg !10604

bb18.bb18_crit_edge:                              ; preds = %bb18.bb18_crit_edge, %bb18.bb18_crit_edge.lr.ph
  %indvar = phi i64 [ 0, %bb18.bb18_crit_edge.lr.ph ], [ %tmp, %bb18.bb18_crit_edge ]
  %tmp = add i64 %indvar, 1
  %scevgep = getelementptr i8* %59, i64 %tmp
  %tmp12 = trunc i64 %tmp to i32
  %.pre = load i32* %scevgep3536, align 8
  %73 = load i8** %1, align 8, !dbg !10603
  %tmp30 = add i32 %.pre, %tmp12
  %74 = zext i32 %tmp30 to i64, !dbg !10603
  %75 = getelementptr inbounds i8* %73, i64 %74, !dbg !10603
  %76 = load i8* %75, align 1, !dbg !10603
  %77 = load i8* %scevgep, align 1, !dbg !10603
  %78 = icmp eq i8 %76, %77, !dbg !10603
  %79 = zext i1 %78 to i64, !dbg !10603
  call void @klee_assume(i64 %79) nounwind, !dbg !10603
  %exitcond10 = icmp eq i64 %tmp, %tmp9
  br i1 %exitcond10, label %bb21, label %bb18.bb18_crit_edge, !dbg !10602

bb20:                                             ; preds = %bb
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8]* @.str3426, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1424, i64 0, i64 0), i32 96, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.5216, i64 0, i64 0)) noreturn
  unreachable, !dbg !10605

bb21:                                             ; preds = %bb18.bb18_crit_edge, %bb16, %bb18.lr.ph, %bb19.preheader, %bb9, %bb7, %bb10.preheader, %bb4, %bb2, %bb5.preheader
  %indvar.next34 = add i64 %indvar33, 1
  br label %bb22, !dbg !10591

bb22:                                             ; preds = %bb21, %entry
  %indvar33 = phi i64 [ %indvar.next34, %bb21 ], [ 0, %entry ]
  %i.0 = trunc i64 %indvar33 to i32
  %scevgep39 = getelementptr %struct.fill_info_t* %fill_info, i64 %indvar33, i32 2
  %scevgep37 = getelementptr %struct.fill_info_t* %fill_info, i64 %indvar33, i32 3, i32 0
  %scevgep3738 = bitcast i8** %scevgep37 to i32*
  %scevgep3536 = getelementptr inbounds %struct.fill_info_t* %fill_info, i64 %indvar33, i32 0
  %80 = icmp ult i32 %i.0, %n_fill_info, !dbg !10591
  br i1 %80, label %bb, label %return, !dbg !10591

return:                                           ; preds = %bb22
  ret void, !dbg !10606
}

define internal fastcc void @__create_new_dfile(%struct.exe_disk_file_t* nocapture %dfile, i32 %size, i8* %contents, i8* %name, %struct.fill_info_t* nocapture %fill_info, i32 %n_fill_info, %struct.stat* nocapture %defaults, i32 %is_foreign) nounwind {
entry:
  %sname = alloca [256 x i8], align 1
  %src_name = alloca [256 x i8], align 1
  %originalStat = alloca %struct.stat, align 8
  %0 = call noalias i8* @malloc(i64 144) nounwind, !dbg !10607
  %1 = bitcast i8* %0 to %struct.stat*, !dbg !10607
  %2 = load i8* %name, align 1, !dbg !10608
  %3 = icmp eq i8 %2, 0, !dbg !10608
  %4 = getelementptr inbounds [256 x i8]* %sname, i64 0, i64 0, !dbg !10609
  br i1 %3, label %bb2, label %bb, !dbg !10608

bb:                                               ; preds = %bb, %entry
  %indvar57 = phi i64 [ %tmp4, %bb ], [ 0, %entry ]
  %5 = phi i8 [ %6, %bb ], [ %2, %entry ]
  %tmp4 = add i64 %indvar57, 1
  %scevgep6 = getelementptr [256 x i8]* %sname, i64 0, i64 %indvar57
  %scevgep60 = getelementptr i8* %name, i64 %tmp4
  store i8 %5, i8* %scevgep6, align 1, !dbg !10610
  %6 = load i8* %scevgep60, align 1, !dbg !10608
  %7 = icmp eq i8 %6, 0, !dbg !10608
  br i1 %7, label %bb2.loopexit, label %bb, !dbg !10608

bb2.loopexit:                                     ; preds = %bb
  %scevgep5 = getelementptr [256 x i8]* %sname, i64 0, i64 %tmp4
  br label %bb2

bb2:                                              ; preds = %bb2.loopexit, %entry
  %.lcssa50 = phi i8* [ %4, %entry ], [ %scevgep5, %bb2.loopexit ]
  %8 = call i8* @memcpy(i8* %.lcssa50, i8* getelementptr inbounds ([6 x i8]* @.str4427, i64 0, i64 0), i64 6)
  %9 = icmp eq i8* %contents, null, !dbg !10611
  %10 = icmp eq i32 %size, 0, !dbg !10611
  %11 = and i1 %9, %10, !dbg !10611
  br i1 %11, label %bb5, label %bb6, !dbg !10611

bb5:                                              ; preds = %bb2
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str5428, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1424, i64 0, i64 0), i32 112, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.5290, i64 0, i64 0)) noretur
  unreachable, !dbg !10611

bb6:                                              ; preds = %bb2
  %12 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 0, !dbg !10612
  store i32 %size, i32* %12, align 8, !dbg !10612
  %13 = zext i32 %size to i64, !dbg !10613
  %14 = call noalias i8* @malloc(i64 %13) nounwind, !dbg !10613
  br i1 %9, label %bb8, label %bb7, !dbg !10614

bb7:                                              ; preds = %bb6
  %15 = call i8* @memcpy(i8* %14, i8* %contents, i64 %13)
  %16 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10615
  store i8* %contents, i8** %16, align 8, !dbg !10615
  br label %bb9, !dbg !10615

bb8:                                              ; preds = %bb6
  %17 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10613
  store i8* %14, i8** %17, align 8, !dbg !10613
  br label %bb9, !dbg !10613

bb9:                                              ; preds = %bb8, %bb7
  %18 = phi i8* [ %contents, %bb7 ], [ %14, %bb8 ]
  %original_file.0 = phi i8* [ %14, %bb7 ], [ null, %bb8 ]
  %19 = icmp eq i32 %n_fill_info, 0, !dbg !10616
  br i1 %19, label %bb12, label %bb10, !dbg !10616

bb10:                                             ; preds = %bb9
  %20 = call i32 @klee_zest_enabled() nounwind, !dbg !10616
  %21 = icmp eq i32 %20, 0, !dbg !10616
  br i1 %21, label %bb10.bb12_crit_edge, label %bb11, !dbg !10616

bb10.bb12_crit_edge:                              ; preds = %bb10
  %.pre = load i32* %12, align 8
  %.phi.trans.insert = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1
  %.pre61 = load i8** %.phi.trans.insert, align 8
  br label %bb12

bb11:                                             ; preds = %bb10
  call void @__fill_blocks(%struct.exe_disk_file_t* %dfile, %struct.fill_info_t* %fill_info, i32 %n_fill_info, i32 1) nounwind, !dbg !10617
  %22 = load i32* %12, align 8, !dbg !10618
  %23 = zext i32 %22 to i64, !dbg !10618
  %24 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10618
  %25 = load i8** %24, align 8, !dbg !10618
  call void @klee_make_symbolic(i8* %25, i64 %23, i8* %name) nounwind, !dbg !10618
  br label %bb13, !dbg !10618

bb12:                                             ; preds = %bb10.bb12_crit_edge, %bb9
  %26 = phi i8* [ %.pre61, %bb10.bb12_crit_edge ], [ %18, %bb9 ]
  %27 = phi i32 [ %.pre, %bb10.bb12_crit_edge ], [ %size, %bb9 ]
  %28 = zext i32 %27 to i64, !dbg !10619
  call void @klee_make_symbolic(i8* %26, i64 %28, i8* %name) nounwind, !dbg !10619
  call void @__fill_blocks(%struct.exe_disk_file_t* %dfile, %struct.fill_info_t* %fill_info, i32 %n_fill_info, i32 0) nounwind, !dbg !10620
  br label %bb13, !dbg !10620

bb13:                                             ; preds = %bb12, %bb11
  br i1 %9, label %bb18, label %bb16.preheader, !dbg !10621

bb16.preheader:                                   ; preds = %bb13
  %29 = load i32* %12, align 8, !dbg !10622
  %30 = icmp eq i32 %29, 0, !dbg !10622
  br i1 %30, label %bb17, label %bb15.lr.ph, !dbg !10622

bb15.lr.ph:                                       ; preds = %bb16.preheader
  %31 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10623
  br label %bb15

bb15:                                             ; preds = %bb15, %bb15.lr.ph
  %32 = phi i32 [ 0, %bb15.lr.ph ], [ %tmp, %bb15 ]
  %tmp = add i32 %32, 1
  %33 = load i8** %31, align 8, !dbg !10623
  %34 = zext i32 %32 to i64, !dbg !10623
  %35 = getelementptr inbounds i8* %33, i64 %34, !dbg !10623
  %36 = load i8* %35, align 1, !dbg !10623
  %37 = getelementptr inbounds i8* %original_file.0, i64 %34, !dbg !10623
  %38 = load i8* %37, align 1, !dbg !10623
  %39 = icmp eq i8 %36, %38, !dbg !10623
  %40 = zext i1 %39 to i64, !dbg !10623
  call void @klee_prefer_cex(i8* %33, i64 %40) nounwind, !dbg !10623
  %41 = load i32* %12, align 8, !dbg !10622
  %42 = icmp ugt i32 %41, %tmp, !dbg !10622
  br i1 %42, label %bb15, label %bb17, !dbg !10622

bb17:                                             ; preds = %bb15, %bb16.preheader
  call void @free(i8* %original_file.0) nounwind, !dbg !10624
  br label %bb18, !dbg !10624

bb18:                                             ; preds = %bb17, %bb13
  %43 = call i32 @klee_shadow_enabled() nounwind, !dbg !10625
  %44 = icmp eq i32 %43, 0, !dbg !10625
  br i1 %44, label %bb21, label %bb19, !dbg !10625

bb19:                                             ; preds = %bb18
  %45 = call i32 @__xstat64(i32 1, i8* %name, %struct.stat* %1) nounwind, !dbg !10626
  %46 = icmp eq i32 %45, -1, !dbg !10627
  br i1 %46, label %bb20, label %bb21, !dbg !10627

bb20:                                             ; preds = %bb19
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8]* @.str6429, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1424, i64 0, i64 0), i32 143, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.5290, i64 0, i64 0)) noretur
  unreachable, !dbg !10627

bb21:                                             ; preds = %bb19, %bb18
  %47 = getelementptr inbounds i8* %0, i64 48
  %48 = bitcast i8* %47 to i64*, !dbg !10628
  store i64 %13, i64* %48, align 8, !dbg !10628
  call void @klee_make_symbolic(i8* %0, i64 144, i8* %4) nounwind, !dbg !10629
  %49 = getelementptr inbounds i8* %0, i64 8
  %50 = bitcast i8* %49 to i64*, !dbg !10630
  %51 = load i64* %50, align 8, !dbg !10630
  %52 = call i32 @klee_is_symbolic(i64 %51) nounwind, !dbg !10630
  %53 = icmp eq i32 %52, 0, !dbg !10630
  %54 = load i64* %50, align 8, !dbg !10630
  br i1 %53, label %bb23, label %bb25, !dbg !10630

bb23:                                             ; preds = %bb21
  %55 = and i64 %54, 2147483647, !dbg !10630
  %56 = icmp eq i64 %55, 0, !dbg !10630
  br i1 %56, label %bb24, label %bb25, !dbg !10630

bb24:                                             ; preds = %bb23
  %57 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 1, !dbg !10631
  %58 = load i64* %57, align 8, !dbg !10631
  store i64 %58, i64* %50, align 8, !dbg !10631
  br label %bb25, !dbg !10631

bb25:                                             ; preds = %bb24, %bb23, %bb21
  %59 = phi i64 [ %58, %bb24 ], [ %54, %bb23 ], [ %54, %bb21 ]
  %60 = and i64 %59, 2147483647, !dbg !10632
  %61 = icmp ne i64 %60, 0, !dbg !10632
  %62 = zext i1 %61 to i64, !dbg !10632
  call void @klee_assume(i64 %62) nounwind, !dbg !10632
  %63 = call i32 @klee_shadow_enabled() nounwind, !dbg !10633
  %64 = icmp eq i32 %63, 0, !dbg !10633
  %65 = getelementptr inbounds i8* %0, i64 56
  %66 = bitcast i8* %65 to i64*, !dbg !10634
  %67 = load i64* %66, align 8, !dbg !10634
  br i1 %64, label %bb29, label %bb26, !dbg !10633

bb26:                                             ; preds = %bb25
  %68 = icmp eq i64 %67, 4096, !dbg !10634
  %69 = zext i1 %68 to i64, !dbg !10634
  call void @klee_assume(i64 %69) nounwind, !dbg !10634
  %70 = call i32 @__xstat64(i32 1, i8* %name, %struct.stat* %originalStat) nounwind, !dbg !10635
  %71 = icmp eq i32 %70, -1, !dbg !10636
  br i1 %71, label %bb27, label %bb28, !dbg !10636

bb27:                                             ; preds = %bb26
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8]* @.str7430, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1424, i64 0, i64 0), i32 167, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.5290, i64 0, i64 0)) noretur
  unreachable, !dbg !10636

bb28:                                             ; preds = %bb26
  %72 = load i64* %50, align 8, !dbg !10637
  %73 = getelementptr inbounds %struct.stat* %originalStat, i64 0, i32 1, !dbg !10637
  %74 = load i64* %73, align 8, !dbg !10637
  %75 = icmp eq i64 %72, %74, !dbg !10637
  %76 = zext i1 %75 to i64, !dbg !10637
  call void @klee_assume(i64 %76) nounwind, !dbg !10637
  %77 = load i64* %48, align 8, !dbg !10638
  %78 = getelementptr inbounds %struct.stat* %originalStat, i64 0, i32 8, !dbg !10638
  %79 = load i64* %78, align 8, !dbg !10638
  %80 = icmp eq i64 %77, %79, !dbg !10638
  %81 = zext i1 %80 to i64, !dbg !10638
  call void @klee_assume(i64 %81) nounwind, !dbg !10638
  br label %bb30, !dbg !10638

bb29:                                             ; preds = %bb25
  %82 = icmp ult i64 %67, 65536, !dbg !10639
  %83 = zext i1 %82 to i64, !dbg !10639
  call void @klee_assume(i64 %83) nounwind, !dbg !10639
  br label %bb30, !dbg !10639

bb30:                                             ; preds = %bb29, %bb28
  %84 = bitcast i8* %0 to i64*, !dbg !10640
  %85 = load i64* %84, align 8, !dbg !10640
  %86 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 0, !dbg !10640
  %87 = load i64* %86, align 8, !dbg !10640
  %88 = icmp eq i64 %85, %87, !dbg !10640
  %89 = zext i1 %88 to i64, !dbg !10640
  call void @klee_prefer_cex(i8* %0, i64 %89) nounwind, !dbg !10640
  %90 = getelementptr inbounds i8* %0, i64 40
  %91 = bitcast i8* %90 to i64*, !dbg !10641
  %92 = load i64* %91, align 8, !dbg !10641
  %93 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 7, !dbg !10641
  %94 = load i64* %93, align 8, !dbg !10641
  %95 = icmp eq i64 %92, %94, !dbg !10641
  %96 = zext i1 %95 to i64, !dbg !10641
  call void @klee_prefer_cex(i8* %0, i64 %96) nounwind, !dbg !10641
  %97 = call i32 @klee_shadow_enabled() nounwind, !dbg !10642
  %98 = icmp eq i32 %97, 0, !dbg !10642
  %99 = getelementptr inbounds i8* %0, i64 24
  %100 = bitcast i8* %99 to i32*, !dbg !10643
  %101 = load i32* %100, align 8, !dbg !10643
  br i1 %98, label %bb32, label %bb31, !dbg !10642

bb31:                                             ; preds = %bb30
  %102 = getelementptr inbounds %struct.stat* %originalStat, i64 0, i32 3, !dbg !10643
  %103 = load i32* %102, align 8, !dbg !10643
  %104 = icmp eq i32 %101, %103, !dbg !10643
  %105 = zext i1 %104 to i64, !dbg !10643
  call void @klee_prefer_cex(i8* %0, i64 %105) nounwind, !dbg !10643
  br label %bb33, !dbg !10643

bb32:                                             ; preds = %bb30
  %106 = and i32 %101, -61952, !dbg !10644
  %107 = icmp eq i32 %106, 0, !dbg !10644
  %108 = zext i1 %107 to i64, !dbg !10644
  call void @klee_prefer_cex(i8* %0, i64 %108) nounwind, !dbg !10644
  %109 = load i32* %100, align 8, !dbg !10645
  %110 = and i32 %109, 448, !dbg !10645
  %111 = icmp eq i32 %110, 384, !dbg !10645
  %112 = zext i1 %111 to i64, !dbg !10645
  call void @klee_prefer_cex(i8* %0, i64 %112) nounwind, !dbg !10645
  %113 = load i32* %100, align 8, !dbg !10646
  %114 = and i32 %113, 56, !dbg !10646
  %115 = icmp eq i32 %114, 16, !dbg !10646
  %116 = zext i1 %115 to i64, !dbg !10646
  call void @klee_prefer_cex(i8* %0, i64 %116) nounwind, !dbg !10646
  %117 = load i32* %100, align 8, !dbg !10647
  %118 = and i32 %117, 7, !dbg !10647
  %119 = icmp eq i32 %118, 2, !dbg !10647
  %120 = zext i1 %119 to i64, !dbg !10647
  call void @klee_prefer_cex(i8* %0, i64 %120) nounwind, !dbg !10647
  %121 = load i32* %100, align 8, !dbg !10648
  %122 = and i32 %121, 61440, !dbg !10648
  %123 = icmp eq i32 %122, 32768, !dbg !10648
  %124 = zext i1 %123 to i64, !dbg !10648
  call void @klee_prefer_cex(i8* %0, i64 %124) nounwind, !dbg !10648
  br label %bb33, !dbg !10648

bb33:                                             ; preds = %bb32, %bb31
  %125 = getelementptr inbounds i8* %0, i64 16
  %126 = bitcast i8* %125 to i64*, !dbg !10649
  %127 = load i64* %126, align 8, !dbg !10649
  %128 = icmp eq i64 %127, 1, !dbg !10649
  %129 = zext i1 %128 to i64, !dbg !10649
  call void @klee_prefer_cex(i8* %0, i64 %129) nounwind, !dbg !10649
  %130 = getelementptr inbounds i8* %0, i64 28
  %131 = bitcast i8* %130 to i32*, !dbg !10650
  %132 = load i32* %131, align 4, !dbg !10650
  %133 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 4, !dbg !10650
  %134 = load i32* %133, align 4, !dbg !10650
  %135 = icmp eq i32 %132, %134, !dbg !10650
  %136 = zext i1 %135 to i64, !dbg !10650
  call void @klee_prefer_cex(i8* %0, i64 %136) nounwind, !dbg !10650
  %137 = getelementptr inbounds i8* %0, i64 32
  %138 = bitcast i8* %137 to i32*, !dbg !10651
  %139 = load i32* %138, align 8, !dbg !10651
  %140 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 5, !dbg !10651
  %141 = load i32* %140, align 8, !dbg !10651
  %142 = icmp eq i32 %139, %141, !dbg !10651
  %143 = zext i1 %142 to i64, !dbg !10651
  call void @klee_prefer_cex(i8* %0, i64 %143) nounwind, !dbg !10651
  %144 = load i64* %66, align 8, !dbg !10652
  %145 = icmp eq i64 %144, 4096, !dbg !10652
  %146 = zext i1 %145 to i64, !dbg !10652
  call void @klee_prefer_cex(i8* %0, i64 %146) nounwind, !dbg !10652
  %147 = getelementptr inbounds i8* %0, i64 72
  %148 = bitcast i8* %147 to i64*, !dbg !10653
  %149 = load i64* %148, align 8, !dbg !10653
  %150 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 11, i32 0, !dbg !10653
  %151 = load i64* %150, align 8, !dbg !10653
  %152 = icmp eq i64 %149, %151, !dbg !10653
  %153 = zext i1 %152 to i64, !dbg !10653
  call void @klee_prefer_cex(i8* %0, i64 %153) nounwind, !dbg !10653
  %154 = getelementptr inbounds i8* %0, i64 88
  %155 = bitcast i8* %154 to i64*, !dbg !10654
  %156 = load i64* %155, align 8, !dbg !10654
  %157 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 12, i32 0, !dbg !10654
  %158 = load i64* %157, align 8, !dbg !10654
  %159 = icmp eq i64 %156, %158, !dbg !10654
  %160 = zext i1 %159 to i64, !dbg !10654
  call void @klee_prefer_cex(i8* %0, i64 %160) nounwind, !dbg !10654
  %161 = getelementptr inbounds i8* %0, i64 104
  %162 = bitcast i8* %161 to i64*, !dbg !10655
  %163 = load i64* %162, align 8, !dbg !10655
  %164 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 13, i32 0, !dbg !10655
  %165 = load i64* %164, align 8, !dbg !10655
  %166 = icmp eq i64 %163, %165, !dbg !10655
  %167 = zext i1 %166 to i64, !dbg !10655
  call void @klee_prefer_cex(i8* %0, i64 %167) nounwind, !dbg !10655
  br i1 %9, label %bb39, label %bb34, !dbg !10656

bb34:                                             ; preds = %bb33
  %168 = load i64* %48, align 8, !dbg !10657
  %169 = icmp sgt i64 %168, %13, !dbg !10657
  %int_cast_to_i64 = bitcast i64 63 to i64
  %170 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %170, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb34
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb34
  %.lobit = lshr i64 %168, 63
  %171 = zext i1 %169 to i64
  %172 = or i64 %171, %.lobit
  %iftmp.35.0 = xor i64 %172, 1
  call void @klee_assume(i64 %iftmp.35.0) nounwind, !dbg !10657
  br label %bb40, !dbg !10657

bb39:                                             ; preds = %bb33
  %173 = load i32* %12, align 8, !dbg !10658
  %174 = zext i32 %173 to i64, !dbg !10658
  store i64 %174, i64* %48, align 8, !dbg !10658
  br label %bb40, !dbg !10658

bb40:                                             ; preds = %bb39, %klee_overshift_check.exit
  %175 = getelementptr inbounds i8* %0, i64 64
  %176 = bitcast i8* %175 to i64*, !dbg !10659
  store i64 8, i64* %176, align 8, !dbg !10659
  %177 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 3, !dbg !10660
  store %struct.stat* %1, %struct.stat** %177, align 8, !dbg !10660
  %178 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 4, !dbg !10661
  store %struct.exe_sockaddr_t* null, %struct.exe_sockaddr_t** %178, align 8, !dbg !10661
  %179 = icmp eq i32 %is_foreign, 0, !dbg !10662
  br i1 %179, label %return, label %bb41, !dbg !10662

bb41:                                             ; preds = %bb40
  %180 = load i32* %100, align 8, !dbg !10663
  %181 = and i32 %180, 61440, !dbg !10663
  %182 = icmp eq i32 %181, 49152, !dbg !10663
  %183 = zext i1 %182 to i64, !dbg !10663
  call void @klee_assume(i64 %183) nounwind, !dbg !10663
  %184 = load i8* %name, align 1, !dbg !10664
  %185 = icmp eq i8 %184, 0, !dbg !10664
  %186 = getelementptr inbounds [256 x i8]* %src_name, i64 0, i64 0, !dbg !10665
  br i1 %185, label %bb44, label %bb42, !dbg !10664

bb42:                                             ; preds = %bb42, %bb41
  %indvar = phi i64 [ %tmp10, %bb42 ], [ 0, %bb41 ]
  %187 = phi i8 [ %188, %bb42 ], [ %184, %bb41 ]
  %tmp10 = add i64 %indvar, 1
  %scevgep12 = getelementptr [256 x i8]* %src_name, i64 0, i64 %indvar
  %scevgep = getelementptr i8* %name, i64 %tmp10
  store i8 %187, i8* %scevgep12, align 1, !dbg !10666
  %188 = load i8* %scevgep, align 1, !dbg !10664
  %189 = icmp eq i8 %188, 0, !dbg !10664
  br i1 %189, label %bb44.loopexit, label %bb42, !dbg !10664

bb44.loopexit:                                    ; preds = %bb42
  %scevgep11 = getelementptr [256 x i8]* %src_name, i64 0, i64 %tmp10
  br label %bb44

bb44:                                             ; preds = %bb44.loopexit, %bb41
  %.lcssa = phi i8* [ %186, %bb41 ], [ %scevgep11, %bb44.loopexit ]
  %190 = call i8* @memcpy(i8* %.lcssa, i8* getelementptr inbounds ([5 x i8]* @.str8431, i64 0, i64 0), i64 5)
  %191 = call noalias i8* @calloc(i64 1, i64 16) nounwind, !dbg !10667
  %192 = bitcast i8* %191 to %struct.exe_sockaddr_t*, !dbg !10667
  store %struct.exe_sockaddr_t* %192, %struct.exe_sockaddr_t** %178, align 8, !dbg !10667
  %193 = call noalias i8* @malloc(i64 128) nounwind, !dbg !10668
  %194 = bitcast i8* %193 to %struct.sockaddr_storage*, !dbg !10668
  %195 = bitcast i8* %191 to %struct.sockaddr_storage**, !dbg !10668
  store %struct.sockaddr_storage* %194, %struct.sockaddr_storage** %195, align 8, !dbg !10668
  call void @klee_make_symbolic(i8* %193, i64 128, i8* %186) nounwind, !dbg !10669
  %196 = getelementptr inbounds i8* %193, i64 2
  %197 = bitcast i8* %196 to i16*, !dbg !10670
  %198 = load i16* %197, align 2, !dbg !10670
  %199 = icmp ne i16 %198, 0, !dbg !10670
  %200 = zext i1 %199 to i64, !dbg !10670
  call void @klee_assume(i64 %200) nounwind, !dbg !10670
  %201 = load i16* %197, align 2, !dbg !10671
  %202 = icmp ne i16 %201, 0, !dbg !10671
  %203 = zext i1 %202 to i64, !dbg !10671
  call void @klee_assume(i64 %203) nounwind, !dbg !10671
  br label %return, !dbg !10671

return:                                           ; preds = %bb44, %bb40
  ret void, !dbg !10672
}

define %struct.exe_disk_file_t* @klee_init_cp_file(i8* %path, i32 %flags) nounwind {
entry:
  %def = alloca %struct.stat, align 8
  %buf = alloca i8*, align 8
  %0 = call i32 @native_read_file(i8* %path, i32 %flags, i8** %buf) nounwind, !dbg !10673
  %1 = icmp slt i32 %0, 0, !dbg !10674
  br i1 %1, label %bb7, label %bb1, !dbg !10674

bb1:                                              ; preds = %entry
  %2 = call i32 @__xstat64(i32 1, i8* getelementptr inbounds ([2 x i8]* @.str9432, i64 0, i64 0), %struct.stat* %def) nounwind, !dbg !10675
  %3 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 2), align 8, !dbg !10677
  %4 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10678
  br label %bb5, !dbg !10677

bb2:                                              ; preds = %bb5
  %scevgep = getelementptr %struct.exe_disk_file_t* %4, i64 %20, i32 3
  %5 = load %struct.stat** %scevgep, align 8, !dbg !10678
  %6 = icmp eq %struct.stat* %5, null, !dbg !10678
  br i1 %6, label %bb3, label %bb4, !dbg !10678

bb3:                                              ; preds = %bb2
  %7 = load i8** %buf, align 8, !dbg !10679
  %8 = getelementptr inbounds %struct.exe_disk_file_t* %4, i64 %20, !dbg !10679
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %8, i32 %0, i8* %7, i8* %path, %struct.fill_info_t* null, i32 0, %struct.stat* %def, i32 0) nounwind, !dbg !10679
  %9 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10680
  %10 = call i64 @strlen(i8* %path) nounwind readonly, !dbg !10680
  %11 = add i64 %10, 1, !dbg !10680
  %12 = call noalias i8* @malloc(i64 %11) nounwind, !dbg !10680
  %13 = getelementptr inbounds %struct.exe_disk_file_t* %9, i64 %20, i32 2, !dbg !10680
  store i8* %12, i8** %13, align 8, !dbg !10680
  %14 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10681
  %15 = getelementptr inbounds %struct.exe_disk_file_t* %14, i64 %20, i32 2, !dbg !10681
  %16 = load i8** %15, align 8, !dbg !10681
  %17 = call i8* @strcpy(i8* noalias %16, i8* noalias %path) nounwind, !dbg !10681
  %18 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10682
  %19 = getelementptr inbounds %struct.exe_disk_file_t* %18, i64 %20, !dbg !10682
  br label %bb7, !dbg !10682

bb4:                                              ; preds = %bb2
  %indvar.next = add i64 %20, 1
  br label %bb5, !dbg !10677

bb5:                                              ; preds = %bb4, %bb1
  %20 = phi i64 [ %indvar.next, %bb4 ], [ 0, %bb1 ]
  %k.0 = trunc i64 %20 to i32
  %21 = icmp ugt i32 %3, %k.0, !dbg !10677
  br i1 %21, label %bb2, label %bb7, !dbg !10677

bb7:                                              ; preds = %bb5, %bb3, %entry
  %.0 = phi %struct.exe_disk_file_t* [ %19, %bb3 ], [ null, %entry ], [ null, %bb5 ]
  ret %struct.exe_disk_file_t* %.0, !dbg !10683
}

define void @klee_init_fds(i32 %n_files, i32 %file_length, i32 %sym_stdout_flag, i32 %save_all_writes_flag, i32 %n_streams, i32 %stream_len, i32 %n_dgrams, i32 %dgram_len, i32 %max_failures, i32 %one_line_streams, %struct.fill_info_t* %stream_fill_info, 
entry:
  %x.i = alloca i32, align 4
  %name = alloca [7 x i8], align 1
  %sname = alloca [8 x i8], align 1
  %dname = alloca [7 x i8], align 1
  %s = alloca %struct.stat, align 8
  %0 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 0, !dbg !10684
  store i8 63, i8* %0, align 1, !dbg !10684
  %1 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 1, !dbg !10684
  store i8 45, i8* %1, align 1, !dbg !10684
  %2 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 2, !dbg !10684
  store i8 100, i8* %2, align 1, !dbg !10684
  %3 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 3, !dbg !10684
  store i8 97, i8* %3, align 1, !dbg !10684
  %4 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 4, !dbg !10684
  store i8 116, i8* %4, align 1, !dbg !10684
  %5 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 5, !dbg !10684
  store i8 97, i8* %5, align 1, !dbg !10684
  %6 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 6, !dbg !10684
  store i8 0, i8* %6, align 1, !dbg !10684
  %7 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 0, !dbg !10685
  store i8 83, i8* %7, align 1, !dbg !10685
  %8 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 1, !dbg !10685
  store i8 84, i8* %8, align 1, !dbg !10685
  %9 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 2, !dbg !10685
  store i8 82, i8* %9, align 1, !dbg !10685
  %10 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 3, !dbg !10685
  store i8 69, i8* %10, align 1, !dbg !10685
  %11 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 4, !dbg !10685
  store i8 65, i8* %11, align 1, !dbg !10685
  %12 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 5, !dbg !10685
  store i8 77, i8* %12, align 1, !dbg !10685
  %13 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 6, !dbg !10685
  store i8 63, i8* %13, align 1, !dbg !10685
  %14 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 7, !dbg !10685
  store i8 0, i8* %14, align 1, !dbg !10685
  %15 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 0, !dbg !10686
  store i8 68, i8* %15, align 1, !dbg !10686
  %16 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 1, !dbg !10686
  store i8 71, i8* %16, align 1, !dbg !10686
  %17 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 2, !dbg !10686
  store i8 82, i8* %17, align 1, !dbg !10686
  %18 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 3, !dbg !10686
  store i8 65, i8* %18, align 1, !dbg !10686
  %19 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 4, !dbg !10686
  store i8 77, i8* %19, align 1, !dbg !10686
  %20 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 5, !dbg !10686
  store i8 63, i8* %20, align 1, !dbg !10686
  %21 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 6, !dbg !10686
  store i8 0, i8* %21, align 1, !dbg !10686
  %22 = call i32 @__xstat64(i32 1, i8* getelementptr inbounds ([2 x i8]* @.str9432, i64 0, i64 0), %struct.stat* %s) nounwind, !dbg !10687
  store %struct.fill_info_t* %stream_fill_info, %struct.fill_info_t** @__stream_fill_info, align 8, !dbg !10689
  store i32 %n_stream_fill_info, i32* @__n_stream_fill_info, align 4, !dbg !10690
  store %struct.fill_info_t* %dgram_fill_info, %struct.fill_info_t** @__dgram_fill_info, align 8, !dbg !10691
  store i32 %n_dgram_fill_info, i32* @__n_dgram_fill_info, align 4, !dbg !10692
  store i32 %n_files, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 0), align 32, !dbg !10693
  %23 = zext i32 %n_files to i64, !dbg !10694
  %24 = mul i64 %23, 40, !dbg !10694
  %25 = call noalias i8* @malloc(i64 %24) nounwind, !dbg !10694
  %26 = bitcast i8* %25 to %struct.exe_disk_file_t*, !dbg !10694
  store %struct.exe_disk_file_t* %26, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 6), align 8, !dbg !10694
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 1), align 4, !dbg !10695
  %27 = icmp eq i32 %n_files, 0, !dbg !10696
  br i1 %27, label %bb3, label %bb.preheader, !dbg !10696

bb.preheader:                                     ; preds = %entry
  store i8 65, i8* %0, align 1, !dbg !10697
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %26, i32 %file_length, i8* null, i8* %0, %struct.fill_info_t* null, i32 0, %struct.stat* %s, i32 0) nounwind, !dbg !10698
  %exitcond491 = icmp eq i32 %n_files, 1
  br i1 %exitcond491, label %bb3, label %bb.bb_crit_edge.lr.ph, !dbg !10696

bb.bb_crit_edge.lr.ph:                            ; preds = %bb.preheader
  %tmp5 = add i64 %23, -1
  br label %bb.bb_crit_edge

bb.bb_crit_edge:                                  ; preds = %bb.bb_crit_edge, %bb.bb_crit_edge.lr.ph
  %indvar3 = phi i64 [ 0, %bb.bb_crit_edge.lr.ph ], [ %tmp7, %bb.bb_crit_edge ]
  %tmp7 = add i64 %indvar3, 1
  %tmp9 = add i64 %indvar3, 66
  %tmp51 = trunc i64 %tmp9 to i8
  %.pre = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 6), align 8
  store i8 %tmp51, i8* %0, align 1, !dbg !10697
  %scevgep52 = getelementptr %struct.exe_disk_file_t* %.pre, i64 %tmp7
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %scevgep52, i32 %file_length, i8* null, i8* %0, %struct.fill_info_t* null, i32 0, %struct.stat* %s, i32 0) nounwind, !dbg !10698
  %exitcond6 = icmp eq i64 %tmp7, %tmp5
  br i1 %exitcond6, label %bb3, label %bb.bb_crit_edge, !dbg !10696

bb3:                                              ; preds = %bb.bb_crit_edge, %bb.preheader, %entry
  store i32 10, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 2), align 8, !dbg !10699
  %28 = call noalias i8* @malloc(i64 400) nounwind, !dbg !10700
  %29 = bitcast i8* %28 to %struct.exe_disk_file_t*, !dbg !10700
  store %struct.exe_disk_file_t* %29, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10700
  %30 = call i8* @memset(i8* %28, i32 0, i64 400)
  %31 = icmp eq i32 %file_length, 0, !dbg !10701
  br i1 %31, label %bb5, label %bb4, !dbg !10701

bb4:                                              ; preds = %bb3
  %32 = call noalias i8* @malloc(i64 40) nounwind, !dbg !10702
  %33 = bitcast i8* %32 to %struct.exe_disk_file_t*, !dbg !10702
  store %struct.exe_disk_file_t* %33, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 3), align 16, !dbg !10702
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %33, i32 %file_length, i8* null, i8* getelementptr inbounds ([6 x i8]* @.str13434, i64 0, i64 0), %struct.fill_info_t* null, i32 0, %struct.stat* %s, i32 0) nounwind, !dbg !10703
  %34 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 3), align 16, !dbg !10704
  store %struct.exe_disk_file_t* %34, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 0, i32 3), align 16, !dbg !10704
  br label %bb6, !dbg !10704

bb5:                                              ; preds = %bb3
  store %struct.exe_disk_file_t* null, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 3), align 16, !dbg !10705
  br label %bb6, !dbg !10705

bb6:                                              ; preds = %bb5, %bb4
  store i32 %max_failures, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !10706
  %35 = icmp eq i32 %max_failures, 0, !dbg !10707
  br i1 %35, label %bb8, label %bb7, !dbg !10707

bb7:                                              ; preds = %bb6
  %36 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10708
  %37 = bitcast i8* %36 to i32*, !dbg !10708
  store i32* %37, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 15), align 32, !dbg !10708
  %38 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10709
  %39 = bitcast i8* %38 to i32*, !dbg !10709
  store i32* %39, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 16), align 8, !dbg !10709
  %40 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10710
  %41 = bitcast i8* %40 to i32*, !dbg !10710
  store i32* %41, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 17), align 16, !dbg !10710
  %42 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10711
  %43 = bitcast i8* %42 to i32*, !dbg !10711
  store i32* %43, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 18), align 8, !dbg !10711
  %44 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10712
  %45 = bitcast i8* %44 to i32*, !dbg !10712
  store i32* %45, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 19), align 32, !dbg !10712
  call void @klee_make_symbolic(i8* %36, i64 4, i8* getelementptr inbounds ([10 x i8]* @.str14435, i64 0, i64 0)) nounwind, !dbg !10713
  %46 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 16), align 8, !dbg !10714
  %47 = bitcast i32* %46 to i8*, !dbg !10714
  call void @klee_make_symbolic(i8* %47, i64 4, i8* getelementptr inbounds ([11 x i8]* @.str15436, i64 0, i64 0)) nounwind, !dbg !10714
  %48 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 17), align 16, !dbg !10715
  %49 = bitcast i32* %48 to i8*, !dbg !10715
  call void @klee_make_symbolic(i8* %49, i64 4, i8* getelementptr inbounds ([11 x i8]* @.str16437, i64 0, i64 0)) nounwind, !dbg !10715
  %50 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 18), align 8, !dbg !10716
  %51 = bitcast i32* %50 to i8*, !dbg !10716
  call void @klee_make_symbolic(i8* %51, i64 4, i8* getelementptr inbounds ([15 x i8]* @.str17438, i64 0, i64 0)) nounwind, !dbg !10716
  %52 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 19), align 32, !dbg !10717
  %53 = bitcast i32* %52 to i8*, !dbg !10717
  call void @klee_make_symbolic(i8* %53, i64 4, i8* getelementptr inbounds ([12 x i8]* @.str18439, i64 0, i64 0)) nounwind, !dbg !10717
  br label %bb8, !dbg !10717

bb8:                                              ; preds = %bb7, %bb6
  %54 = icmp eq i32 %sym_stdout_flag, 0, !dbg !10718
  br i1 %54, label %bb10, label %bb9, !dbg !10718

bb9:                                              ; preds = %bb8
  %55 = call noalias i8* @malloc(i64 40) nounwind, !dbg !10719
  %56 = bitcast i8* %55 to %struct.exe_disk_file_t*, !dbg !10719
  store %struct.exe_disk_file_t* %56, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !10719
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %56, i32 1024, i8* null, i8* getelementptr inbounds ([7 x i8]* @.str19440, i64 0, i64 0), %struct.fill_info_t* null, i32 0, %struct.stat* %s, i32 0) nounwind, !dbg !10720
  %57 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !10721
  store %struct.exe_disk_file_t* %57, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 1, i32 3), align 8, !dbg !10721
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 32, !dbg !10722
  br label %bb11, !dbg !10722

bb10:                                             ; preds = %bb8
  store %struct.exe_disk_file_t* null, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !10723
  br label %bb11, !dbg !10723

bb11:                                             ; preds = %bb10, %bb9
  store i32 %save_all_writes_flag, i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 3), align 8, !dbg !10724
  %x1.i = bitcast i32* %x.i to i8*, !dbg !10725
  call void @klee_make_symbolic(i8* %x1.i, i64 4, i8* getelementptr inbounds ([14 x i8]* @.str20441, i64 0, i64 0)) nounwind, !dbg !10725
  %58 = load i32* %x.i, align 4, !dbg !10727
  store i32 %58, i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 2), align 4, !dbg !10726
  %59 = call i32 @klee_shadow_enabled() nounwind, !dbg !10728
  %60 = icmp eq i32 %59, 0, !dbg !10728
  br i1 %60, label %bb12, label %bb13, !dbg !10728

bb12:                                             ; preds = %bb11
  %61 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 2), align 4, !dbg !10729
  %62 = icmp eq i32 %61, 1, !dbg !10729
  %63 = zext i1 %62 to i64, !dbg !10729
  call void @klee_assume(i64 %63) nounwind, !dbg !10729
  br label %bb13, !dbg !10729

bb13:                                             ; preds = %bb12, %bb11
  store i32 %n_streams, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 8), align 8, !dbg !10730
  %64 = zext i32 %n_streams to i64, !dbg !10731
  %65 = mul i64 %64, 40, !dbg !10731
  %66 = call noalias i8* @malloc(i64 %65) nounwind, !dbg !10731
  %67 = bitcast i8* %66 to %struct.exe_disk_file_t*, !dbg !10731
  store %struct.exe_disk_file_t* %67, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 10), align 32, !dbg !10731
  %68 = icmp eq i8* %66, null, !dbg !10732
  br i1 %68, label %bb14, label %bb19.preheader, !dbg !10732

bb14:                                             ; preds = %bb13
  call void @klee_warning(i8* getelementptr inbounds ([37 x i8]* @.str21442, i64 0, i64 0)) nounwind, !dbg !10733
  br label %bb19.preheader, !dbg !10733

bb19.preheader:                                   ; preds = %bb14, %bb13
  %69 = icmp eq i32 %n_streams, 0, !dbg !10734
  br i1 %69, label %bb20, label %bb16, !dbg !10734

bb16:                                             ; preds = %bb16, %bb19.preheader
  %indvar39 = phi i64 [ 0, %bb19.preheader ], [ %indvar.next40, %bb16 ]
  %tmp13 = add i64 %indvar39, 49
  %tmp44 = trunc i64 %tmp13 to i8
  %70 = call i64 @strlen(i8* %7) nounwind readonly, !dbg !10735
  %71 = add i64 %70, -1, !dbg !10735
  %72 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 %71, !dbg !10735
  store i8 %tmp44, i8* %72, align 1, !dbg !10735
  %73 = load i32* @__n_stream_fill_info, align 4, !dbg !10736
  %74 = load %struct.fill_info_t** @__stream_fill_info, align 8, !dbg !10736
  %75 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 10), align 32, !dbg !10736
  %scevgep45 = getelementptr %struct.exe_disk_file_t* %75, i64 %indvar39
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %scevgep45, i32 %stream_len, i8* null, i8* %7, %struct.fill_info_t* %74, i32 %73, %struct.stat* %s, i32 1) nounwind, !dbg !10736
  %indvar.next40 = add i64 %indvar39, 1
  %exitcond12 = icmp eq i64 %indvar.next40, %64
  br i1 %exitcond12, label %bb20, label %bb16, !dbg !10734

bb20:                                             ; preds = %bb16, %bb19.preheader
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10737
  store i32 %n_dgrams, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 11), align 8, !dbg !10738
  %76 = zext i32 %n_dgrams to i64, !dbg !10739
  %77 = mul i64 %76, 40, !dbg !10739
  %78 = call noalias i8* @malloc(i64 %77) nounwind, !dbg !10739
  %79 = bitcast i8* %78 to %struct.exe_disk_file_t*, !dbg !10739
  store %struct.exe_disk_file_t* %79, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 13), align 16, !dbg !10739
  %80 = icmp eq i8* %78, null, !dbg !10740
  br i1 %80, label %bb21, label %bb26.preheader, !dbg !10740

bb21:                                             ; preds = %bb20
  call void @klee_warning(i8* getelementptr inbounds ([36 x i8]* @.str22443, i64 0, i64 0)) nounwind, !dbg !10741
  br label %bb26.preheader, !dbg !10741

bb26.preheader:                                   ; preds = %bb21, %bb20
  %81 = icmp eq i32 %n_dgrams, 0, !dbg !10742
  br i1 %81, label %bb27, label %bb23, !dbg !10742

bb23:                                             ; preds = %bb23, %bb26.preheader
  %indvar = phi i64 [ 0, %bb26.preheader ], [ %indvar.next, %bb23 ]
  %tmp18 = add i64 %indvar, 49
  %tmp38 = trunc i64 %tmp18 to i8
  %82 = call i64 @strlen(i8* %15) nounwind readonly, !dbg !10743
  %83 = add i64 %82, -1, !dbg !10743
  %84 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 %83, !dbg !10743
  store i8 %tmp38, i8* %84, align 1, !dbg !10743
  %85 = load i32* @__n_dgram_fill_info, align 4, !dbg !10744
  %86 = load %struct.fill_info_t** @__dgram_fill_info, align 8, !dbg !10744
  %87 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 13), align 16, !dbg !10744
  %scevgep = getelementptr %struct.exe_disk_file_t* %87, i64 %indvar
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %scevgep, i32 %dgram_len, i8* null, i8* %15, %struct.fill_info_t* %86, i32 %85, %struct.stat* %s, i32 1) nounwind, !dbg !10744
  %indvar.next = add i64 %indvar, 1
  %exitcond17 = icmp eq i64 %indvar.next, %76
  br i1 %exitcond17, label %bb27, label %bb23, !dbg !10742

bb27:                                             ; preds = %bb23, %bb26.preheader
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 12), align 4, !dbg !10745
  %88 = call i64 (i64, ...)* @syscall(i64 8, i32 0, i64 0, i32 1) nounwind, !dbg !10746
  %89 = icmp eq i64 %88, -1, !dbg !10747
  br i1 %89, label %bb30, label %bb29, !dbg !10747

bb29:                                             ; preds = %bb27
  store i64 %88, i64* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 0, i32 2), align 8, !dbg !10748
  br label %bb30, !dbg !10748

bb30:                                             ; preds = %bb29, %bb27
  %90 = call i64 (i64, ...)* @syscall(i64 8, i32 1, i64 0, i32 1) nounwind, !dbg !10746
  %91 = icmp eq i64 %90, -1, !dbg !10747
  br i1 %91, label %bb30.1, label %bb29.1, !dbg !10747

bb30.1:                                           ; preds = %bb29.1, %bb30
  %92 = call i64 (i64, ...)* @syscall(i64 8, i32 2, i64 0, i32 1) nounwind, !dbg !10746
  %93 = icmp eq i64 %92, -1, !dbg !10747
  br i1 %93, label %bb30.2, label %bb29.2, !dbg !10747

bb29.1:                                           ; preds = %bb30
  store i64 %90, i64* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 1, i32 2), align 8, !dbg !10748
  br label %bb30.1, !dbg !10748

bb30.2:                                           ; preds = %bb29.2, %bb30.1
  ret void, !dbg !10749

bb29.2:                                           ; preds = %bb30.1
  store i64 %92, i64* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 2, i32 2), align 8, !dbg !10748
  br label %bb30.2, !dbg !10748
}

define void @klee_overshift_check(i64 %bitWidth, i64 %shift) nounwind {
entry:
  %0 = icmp ult i64 %shift, %bitWidth, !dbg !10750
  br i1 %0, label %return, label %bb, !dbg !10750

bb:                                               ; preds = %entry
  tail call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind,
  unreachable, !dbg !10752

return:                                           ; preds = %entry
  ret void, !dbg !10753
}

define void @klee_mark_arg_symbolic(i32 %argc, i8** nocapture %argv) nounwind {
entry:
  %tmpStat = alloca %struct.stat, align 8
  %0 = call i32 @klee_shadow_enabled() nounwind, !dbg !10754
  %1 = call i32 @klee_shadow_replay_standalone() nounwind, !dbg !10755
  %2 = icmp sgt i32 %argc, 1, !dbg !10756
  br i1 %2, label %bb.lr.ph, label %return, !dbg !10756

bb.lr.ph:                                         ; preds = %entry
  %3 = icmp eq i32 %0, 0, !dbg !10757
  %4 = icmp eq i32 %1, 0, !dbg !10758
  %tmp23 = add i32 %argc, -2
  %tmp7 = zext i32 %tmp23 to i64
  %tmp8 = add i64 %tmp7, 1
  br label %bb

bb:                                               ; preds = %bb12, %bb.lr.ph
  %indvar21 = phi i64 [ 0, %bb.lr.ph ], [ %tmp9, %bb12 ]
  %argv_i.117 = phi i8* [ null, %bb.lr.ph ], [ %argv_i.0, %bb12 ]
  %tmp9 = add i64 %indvar21, 1
  %scevgep28 = getelementptr i8** %argv, i64 %tmp9
  %5 = load i8** %scevgep28, align 8, !dbg !10759
  br label %bb.i, !dbg !10760

bb.i:                                             ; preds = %bb.i, %bb
  %6 = phi i64 [ %indvar.next.i, %bb.i ], [ 0, %bb ]
  %scevgep.i = getelementptr i8* %5, i64 %6
  %7 = load i8* %scevgep.i, align 1, !dbg !10761
  %8 = icmp eq i8 %7, 0, !dbg !10761
  %indvar.next.i = add i64 %6, 1
  br i1 %8, label %my_strlen.exit, label %bb.i, !dbg !10761

my_strlen.exit:                                   ; preds = %bb.i
  %i.0.i = trunc i64 %6 to i32
  %.pre29 = add nsw i32 %i.0.i, 1, !dbg !10762
  %.pre30 = sext i32 %.pre29 to i64, !dbg !10762
  br i1 %3, label %bb2, label %bb1, !dbg !10757

bb1:                                              ; preds = %my_strlen.exit
  %9 = call noalias i8* @malloc(i64 %.pre30) nounwind, !dbg !10763
  %10 = call i8* @memcpy(i8* %9, i8* %5, i64 %.pre30)
  br label %bb2, !dbg !10764

bb2:                                              ; preds = %bb1, %my_strlen.exit
  %argv_i.0 = phi i8* [ %9, %bb1 ], [ %argv_i.117, %my_strlen.exit ]
  call void @klee_make_symbolic(i8* %5, i64 %.pre30, i8* getelementptr inbounds ([5 x i8]* @.str450, i64 0, i64 0)) nounwind, !dbg !10762
  %11 = load i8** %scevgep28, align 8, !dbg !10765
  %12 = sext i32 %i.0.i to i64, !dbg !10765
  %13 = getelementptr inbounds i8* %11, i64 %12, !dbg !10765
  %14 = load i8* %13, align 1, !dbg !10765
  %15 = icmp eq i8 %14, 0, !dbg !10765
  %16 = zext i1 %15 to i64, !dbg !10765
  call void @klee_assume(i64 %16) nounwind, !dbg !10765
  br i1 %3, label %bb12, label %bb5.preheader, !dbg !10766

bb5.preheader:                                    ; preds = %bb2
  %17 = icmp sgt i32 %.pre29, 0, !dbg !10767
  br i1 %17, label %bb4.lr.ph, label %bb6, !dbg !10767

bb4.lr.ph:                                        ; preds = %bb5.preheader
  %tmp2 = and i64 %indvar.next.i, 4294967295
  br label %bb4

bb4:                                              ; preds = %bb4, %bb4.lr.ph
  %indvar = phi i64 [ 0, %bb4.lr.ph ], [ %indvar.next, %bb4 ]
  %scevgep = getelementptr i8* %argv_i.0, i64 %indvar
  %18 = load i8** %scevgep28, align 8, !dbg !10768
  %scevgep20 = getelementptr i8* %18, i64 %indvar
  %19 = load i8* %scevgep20, align 1, !dbg !10768
  %20 = load i8* %scevgep, align 1, !dbg !10768
  %21 = icmp eq i8 %19, %20, !dbg !10768
  %22 = zext i1 %21 to i64, !dbg !10768
  call void @klee_prefer_cex(i8* %18, i64 %22) nounwind, !dbg !10768
  %indvar.next = add i64 %indvar, 1
  %exitcond3 = icmp eq i64 %indvar.next, %tmp2
  br i1 %exitcond3, label %bb6, label %bb4, !dbg !10767

bb6:                                              ; preds = %bb4, %bb5.preheader
  br i1 %4, label %bb11, label %bb7, !dbg !10758

bb7:                                              ; preds = %bb6
  %23 = call i32 @__xstat64(i32 1, i8* %argv_i.0, %struct.stat* %tmpStat) nounwind, !dbg !10769
  %24 = icmp eq i32 %23, 0, !dbg !10771
  br i1 %24, label %bb9, label %bb11, !dbg !10771

bb9:                                              ; preds = %bb7
  %25 = load i8** %scevgep28, align 8, !dbg !10772
  %26 = call i32 (i8*, i32, ...)* @open(i8* %25, i32 0) nounwind, !dbg !10772
  %27 = icmp eq i32 %26, -1, !dbg !10773
  br i1 %27, label %bb11, label %bb10, !dbg !10773

bb10:                                             ; preds = %bb9
  %28 = call i32 @close(i32 %26) nounwind, !dbg !10774
  br label %bb11, !dbg !10774

bb11:                                             ; preds = %bb10, %bb9, %bb7, %bb6
  call void @free(i8* %argv_i.0) nounwind, !dbg !10775
  br label %bb12, !dbg !10775

bb12:                                             ; preds = %bb11, %bb2
  %exitcond = icmp eq i64 %tmp9, %tmp8
  br i1 %exitcond, label %return, label %bb, !dbg !10756

return:                                           ; preds = %bb12, %entry
  ret void, !dbg !10776
}

declare i32 @klee_shadow_replay_standalone()

define void @klee_div_zero_check(i64 %z) nounwind {
entry:
  %0 = tail call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind, !dbg !10777
  %1 = icmp eq i64 %z, 0, !dbg !10779
  br i1 %1, label %bb, label %bb1, !dbg !10779

bb:                                               ; preds = %entry
  tail call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str452, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1453, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2454, i64 0, i64 0)) noreturn nounwind
  unreachable, !dbg !10780

bb1:                                              ; preds = %entry
  tail call void @klee_disable_symbex() nounwind, !dbg !10781
  ret void, !dbg !10782
}

declare i32 @klee_enable_symbex(...)

declare void @klee_disable_symbex()

define i32 @klee_range(i32 %start, i32 %end, i8* %name) nounwind {
entry:
  %x = alloca i32, align 4
  %0 = icmp slt i32 %start, %end, !dbg !10783
  br i1 %0, label %bb1, label %bb, !dbg !10783

bb:                                               ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([13 x i8]* @.str456, i64 0, i64 0), i32 17, i8* getelementptr inbounds ([14 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !10784

bb1:                                              ; preds = %entry
  %1 = add nsw i32 %start, 1, !dbg !10785
  %2 = icmp eq i32 %1, %end, !dbg !10785
  br i1 %2, label %bb8, label %bb3, !dbg !10785

bb3:                                              ; preds = %bb1
  %x4 = bitcast i32* %x to i8*, !dbg !10786
  call void @klee_make_symbolic(i8* %x4, i64 4, i8* %name) nounwind, !dbg !10786
  %3 = icmp eq i32 %start, 0, !dbg !10787
  %4 = load i32* %x, align 4, !dbg !10788
  br i1 %3, label %bb5, label %bb6, !dbg !10787

bb5:                                              ; preds = %bb3
  %5 = icmp ult i32 %4, %end, !dbg !10788
  %6 = zext i1 %5 to i64, !dbg !10788
  call void @klee_assume(i64 %6) nounwind, !dbg !10788
  br label %bb7, !dbg !10788

bb6:                                              ; preds = %bb3
  %7 = icmp sge i32 %4, %start, !dbg !10789
  %8 = zext i1 %7 to i64, !dbg !10789
  call void @klee_assume(i64 %8) nounwind, !dbg !10789
  %9 = load i32* %x, align 4, !dbg !10790
  %10 = icmp slt i32 %9, %end, !dbg !10790
  %11 = zext i1 %10 to i64, !dbg !10790
  call void @klee_assume(i64 %11) nounwind, !dbg !10790
  br label %bb7, !dbg !10790

bb7:                                              ; preds = %bb6, %bb5
  %12 = load i32* %x, align 4, !dbg !10791
  br label %bb8, !dbg !10791

bb8:                                              ; preds = %bb7, %bb1
  %.0 = phi i32 [ %12, %bb7 ], [ %start, %bb1 ]
  ret i32 %.0, !dbg !10792
}

!llvm.dbg.sp = !{!0, !7, !48, !88, !127, !165, !171, !177, !180, !183, !184, !195, !204, !208, !217, !267, !270, !275, !280, !283, !286, !295, !299, !306, !344, !385, !424, !463, !502, !543, !585, !627, !666, !708, !746, !755, !783, !790, !803, !806, !80
!llvm.dbg.gv = !{!4234, !4239, !4240, !4243, !4244, !4248, !4249, !4250, !4251, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4269, !4270, !4271, !4273, !4274, !4275, !4280, !4282, !4316, !4318, !4319,
!llvm.dbg.enum = !{!775, !2956, !4499, !4135}
!llvm.dbg.lv.__stat64_to_stat = !{!4501, !4502}
!llvm.dbg.lv.fstat64 = !{!4503, !4504}
!llvm.dbg.lv.fstat = !{!4505, !4506, !4507, !4509}
!llvm.dbg.lv.__fxstat = !{!4510, !4511, !4512, !4513, !4515}
!llvm.dbg.lv.lstat64 = !{!4516, !4517}
!llvm.dbg.lv.lstat = !{!4518, !4519, !4520, !4522}
!llvm.dbg.lv.__lxstat = !{!4523, !4524, !4525, !4526, !4528}
!llvm.dbg.lv.stat64 = !{!4529, !4530, !4531, !4532, !4533, !4534}
!llvm.dbg.lv.stat = !{!4535, !4536, !4537, !4539}
!llvm.dbg.lv.__xstat = !{!4540, !4541, !4542, !4543, !4545}
!llvm.dbg.lv.lseek64 = !{!4546, !4547, !4548}
!llvm.dbg.lv.lseek = !{!4549, !4550, !4551}
!llvm.dbg.lv.open64 = !{!4552, !4553, !4554, !4557}
!llvm.dbg.lv.open = !{!4570, !4571, !4572, !4574}
!llvm.dbg.lv.getdents = !{!4576, !4577, !4578, !4579, !4590, !4591, !4593, !4595}
!llvm.dbg.lv.statfs = !{!4596, !4597}
!llvm.dbg.lv.ftruncate = !{!4598, !4599}
!llvm.dbg.lv.__getodigit = !{!4600}
!llvm.dbg.lv.__getxdigit = !{!4601}
!llvm.dbg.lv.__isprint = !{!4602}
!llvm.dbg.lv.__streq = !{!4603, !4604}
!llvm.dbg.lv.__get_sym_str = !{!4605, !4606, !4607, !4609}
!llvm.dbg.lv.__emit_error = !{!4610}
!llvm.dbg.lv.__str_to_int = !{!4611, !4612, !4613, !4615, !4616, !4617}
!llvm.dbg.lv.__convert_escape_sequences = !{!4618, !4619, !4621, !4622}
!llvm.dbg.lv.__add_arg = !{!4625, !4626, !4627, !4628}
!llvm.dbg.lv.klee_init_env = !{!4629, !4630, !4631, !4633, !4634, !4635, !4636, !4640, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4669, !4670, !4671, !4672, !4673, !4674, !4678, !4679, !4680, !4681, !4683, !4685,
!llvm.dbg.lv.execve = !{!4699, !4700, !4701}
!llvm.dbg.lv.execvp = !{!4702, !4703}
!llvm.dbg.lv.execv = !{!4704, !4705}
!llvm.dbg.lv.execle = !{!4706, !4707}
!llvm.dbg.lv.execlp = !{!4708, !4709}
!llvm.dbg.lv.execl = !{!4710, !4711}
!llvm.dbg.lv.kill = !{!4712, !4713}
!llvm.dbg.lv.longjmp = !{!4714, !4715}
!llvm.dbg.lv._setjmp = !{!4716}
!llvm.dbg.lv.__get_file = !{!4717, !4718}
!llvm.dbg.lv.umask = !{!4721, !4722}
!llvm.dbg.lv.has_permission = !{!4724, !4725, !4726, !4728, !4729}
!llvm.dbg.lv.sendfile = !{!4730, !4731, !4732, !4733, !4734, !4736, !4737}
!llvm.dbg.lv.sendfile64 = !{!4739, !4740, !4741, !4742}
!llvm.dbg.lv.fsync = !{!4743, !4744, !4746}
!llvm.dbg.lv.chroot = !{!4748}
!llvm.dbg.lv.fstatfs = !{!4749, !4750, !4751, !4753}
!llvm.dbg.lv.fcntl = !{!4755, !4756, !4757, !4759, !4770, !4771, !4773}
!llvm.dbg.lv.futimens = !{!4775, !4776, !4777, !4779}
!llvm.dbg.lv.__df_chown = !{!4780, !4781, !4782}
!llvm.dbg.lv.fchown = !{!4783, !4784, !4785, !4786, !4788}
!llvm.dbg.lv.fchdir = !{!4790, !4791, !4793}
!llvm.dbg.lv.ioctl = !{!4795, !4796, !4797, !4799, !4800, !4801, !4803, !4821, !4831, !4833, !4874, !4876, !4878, !4880, !4888, !4906}
!llvm.dbg.lv.__undo_get_new_fd = !{!4908}
!llvm.dbg.lv.__get_new_fd = !{!4909, !4910}
!llvm.dbg.lv.select = !{!4912, !4913, !4914, !4915, !4916, !4917, !4919, !4920, !4921, !4922, !4923, !4924, !4925, !4926, !4927, !4929, !4931, !4933, !4934}
!llvm.dbg.lv.close = !{!4936, !4937, !4939}
!llvm.dbg.lv.dup2 = !{!4940, !4941, !4942, !4944, !4945, !4946}
!llvm.dbg.lv.dup = !{!4947, !4948, !4950}
!llvm.dbg.lv.__fd_getdents = !{!4952, !4953, !4954, !4955, !4957, !4959, !4960, !4961, !4963, !4965, !4966, !4967, !4969}
!llvm.dbg.lv.__fd_gather_write = !{!4971, !4972, !4973, !4974, !4976, !4978}
!llvm.dbg.lv.writev = !{!4980, !4981, !4982, !4983, !4985}
!llvm.dbg.lv.__fd_fstat = !{!4987, !4988, !4989, !4991}
!llvm.dbg.lv.__fd_scatter_read = !{!4993, !4994, !4995, !4996, !4999, !5001, !5003, !5005, !5006}
!llvm.dbg.lv.munmap = !{!5007, !5008}
!llvm.dbg.lv.pipe = !{!5009, !5010, !5013, !5014}
!llvm.dbg.lv.__concretize_ptr = !{!5015, !5016}
!llvm.dbg.lv.__concretize_string = !{!5018, !5019, !5021, !5022, !5024}
!llvm.dbg.lv.__get_sym_file_internal = !{!5026, !5027, !5028, !5029, !5031, !5032, !5034, !5036, !5037, !5039, !5041, !5042, !5046, !5047, !5049, !5050, !5051, !5053, !5054, !5056}
!llvm.dbg.lv.__get_sym_file = !{!5057}
!llvm.dbg.lv.utime = !{!5058, !5059, !5060, !5062}
!llvm.dbg.lv.readlink = !{!5063, !5064, !5065, !5066, !5068}
!llvm.dbg.lv.utimes = !{!5070, !5071, !5072, !5074}
!llvm.dbg.lv.unlink = !{!5075, !5076, !5078}
!llvm.dbg.lv.rmdir = !{!5080, !5081, !5083}
!llvm.dbg.lv.__fd_statfs = !{!5085, !5086, !5087, !5089}
!llvm.dbg.lv.openat = !{!5091, !5092, !5093, !5094, !5096, !5097, !5098, !5099}
!llvm.dbg.lv.symlink = !{!5101, !5102, !5103, !5105}
!llvm.dbg.lv.link = !{!5106, !5107, !5108, !5110}
!llvm.dbg.lv.futimesat = !{!5111, !5112, !5113, !5114, !5116, !5117}
!llvm.dbg.lv.unlinkat = !{!5118, !5119, !5120, !5121, !5123, !5124}
!llvm.dbg.lv.fstatat = !{!5125, !5126, !5127, !5128, !5129, !5131, !5132}
!llvm.dbg.lv.lchown = !{!5133, !5134, !5135, !5136, !5138}
!llvm.dbg.lv.chown = !{!5140, !5141, !5142, !5143, !5145}
!llvm.dbg.lv.chdir = !{!5147, !5148, !5150}
!llvm.dbg.lv.euidaccess = !{!5152, !5153, !5154, !5156}
!llvm.dbg.lv.access = !{!5158, !5159, !5160, !5162}
!llvm.dbg.lv.__concretize_size = !{!5164, !5165}
!llvm.dbg.lv.getcwd = !{!5167, !5168, !5169}
!llvm.dbg.lv.__fd_ftruncate = !{!5171, !5172, !5173, !5175}
!llvm.dbg.lv.__fd_lseek = !{!5177, !5178, !5179, !5180, !5182}
!llvm.dbg.lv.pread = !{!5183, !5184, !5185, !5186, !5187, !5189}
!llvm.dbg.lv.read = !{!5191, !5192, !5193, !5194, !5196, !5198}
!llvm.dbg.lv.mmap_simple = !{!5199, !5200, !5201, !5202, !5204, !5205}
!llvm.dbg.lv.mmap = !{!5206, !5207, !5208, !5209, !5210, !5211, !5212}
!llvm.dbg.lv.mmap64 = !{!5214, !5215, !5216, !5217, !5218, !5219, !5220}
!llvm.dbg.lv.__concretize_buffer = !{!5222, !5223, !5224, !5226, !5227, !5229}
!llvm.dbg.lv.__df_chmod = !{!5230, !5231}
!llvm.dbg.lv.fchmod = !{!5232, !5233, !5234, !5236}
!llvm.dbg.lv.chmod = !{!5238, !5239, !5240, !5242}
!llvm.dbg.lv.__fd_lstat = !{!5244, !5245, !5246, !5248, !5249}
!llvm.dbg.lv.__fd_stat = !{!5251, !5252, !5253, !5255, !5256}
!llvm.dbg.lv.write = !{!5258, !5259, !5260, !5261, !5263, !5265, !5266}
!llvm.dbg.lv.atoi = !{!5268}
!llvm.dbg.lv.__fd_open = !{!5269, !5270, !5271, !5272, !5274, !5275, !5276, !5278, !5281, !5282, !5283}
!llvm.dbg.lv.__fd_openat = !{!5285, !5286, !5287, !5288, !5289, !5291, !5292, !5293}
!llvm.dbg.lv.gnu_dev_major = !{!5295}
!llvm.dbg.lv.gnu_dev_minor = !{!5296}
!llvm.dbg.lv.gnu_dev_makedev = !{!5297, !5298}
!llvm.dbg.lv.getsockopt = !{!5299, !5300, !5301, !5302, !5303}
!llvm.dbg.lv.setsockopt = !{!5304, !5305, !5306, !5307, !5308}
!llvm.dbg.lv.__fd_attach_dgram = !{!5309}
!llvm.dbg.lv.cap_get_file = !{!5310}
!llvm.dbg.lv.getenv = !{!5311}
!llvm.dbg.lv.setlocale = !{!5312, !5313}
!llvm.dbg.lv.clock_settime = !{!5314, !5315}
!llvm.dbg.lv.__fd_recvmsg = !{!5316, !5317, !5318, !5319}
!llvm.dbg.lv.recvmsg = !{!5323, !5324, !5325}
!llvm.dbg.lv.__fd_recvfrom = !{!5326, !5327, !5328, !5329, !5330, !5331, !5332, !5334, !5335}
!llvm.dbg.lv.recvfrom = !{!5336, !5337, !5338, !5339, !5340, !5341}
!llvm.dbg.lv.__fd_recv = !{!5342, !5343, !5344, !5345}
!llvm.dbg.lv.recv = !{!5346, !5347, !5348, !5349}
!llvm.dbg.lv.__fd_sendmsg = !{!5350, !5351, !5352, !5353}
!llvm.dbg.lv.sendmsg = !{!5355, !5356, !5357}
!llvm.dbg.lv.__fd_sendto = !{!5358, !5359, !5360, !5361, !5362, !5363, !5364, !5366}
!llvm.dbg.lv.sendto = !{!5367, !5368, !5369, !5370, !5371, !5372}
!llvm.dbg.lv.__fd_send = !{!5373, !5374, !5375, !5376}
!llvm.dbg.lv.send = !{!5377, !5378, !5379, !5380}
!llvm.dbg.lv.shutdown = !{!5381, !5382, !5383, !5385}
!llvm.dbg.lv.__fd_shutdown = !{!5387, !5388, !5390}
!llvm.dbg.lv.getpeername = !{!5391, !5392, !5393, !5394, !5396}
!llvm.dbg.lv.__fd_getpeername = !{!5397, !5398, !5400, !5401}
!llvm.dbg.lv.getsockname = !{!5402, !5403, !5404, !5405, !5407}
!llvm.dbg.lv.__fd_getsockname = !{!5408, !5409, !5411, !5412}
!llvm.dbg.lv.listen = !{!5413, !5414, !5415, !5417}
!llvm.dbg.lv.__fd_listen = !{!5418, !5419, !5421}
!llvm.dbg.lv.connect = !{!5422, !5423, !5424, !5425, !5427}
!llvm.dbg.lv.__fd_connect = !{!5428, !5429, !5431, !5432}
!llvm.dbg.lv.bind = !{!5433, !5434, !5435, !5436, !5438}
!llvm.dbg.lv.__fd_bind = !{!5439, !5440, !5442, !5443}
!llvm.dbg.lv.rename = !{!5444, !5445, !5446}
!llvm.dbg.lv.__allocate_sockaddr = !{!5448, !5449}
!llvm.dbg.lv.__fd_accept = !{!5450, !5451, !5452, !5453, !5455, !5456, !5457, !5459, !5460}
!llvm.dbg.lv.accept = !{!5461, !5462, !5463}
!llvm.dbg.lv.socket = !{!5464, !5465, !5466, !5467, !5469, !5470}
!llvm.dbg.lv.__fd_socket = !{!5472, !5473, !5475, !5476}
!llvm.dbg.lv.__socketcall = !{!5477, !5478}
!llvm.dbg.lv.canonicalize_file_name = !{!5479}
!llvm.dbg.lv.strverscmp = !{!5480, !5481, !5482, !5485}
!llvm.dbg.lv.clock_gettime = !{!5486, !5487, !5488}
!llvm.dbg.lv._IO_putc = !{!5496, !5497}
!llvm.dbg.lv._IO_getc = !{!5498}
!llvm.dbg.lv.__syscall_rt_sigaction = !{!5499, !5500, !5501, !5502}
!llvm.dbg.lv.__sym_uint32 = !{!5503, !5504}
!llvm.dbg.lv.native_read_file = !{!5506, !5507, !5508, !5509, !5511, !5512, !5513, !5514}
!llvm.dbg.lv.__fill_blocks = !{!5515, !5516, !5517, !5518, !5519, !5521, !5522, !5523, !5524}
!llvm.dbg.lv.__create_new_dfile = !{!5526, !5527, !5528, !5529, !5530, !5531, !5532, !5533, !5534, !5536, !5537, !5539, !5540, !5541, !5542, !5544}
!llvm.dbg.lv.klee_init_cp_file = !{!5546, !5547, !5548, !5550, !5551, !5552}
!llvm.dbg.lv.klee_init_fds = !{!5553, !5554, !5555, !5556, !5557, !5558, !5559, !5560, !5561, !5562, !5563, !5564, !5565, !5566, !5567, !5569, !5571, !5573, !5574, !5575, !5576}
!llvm.dbg.lv.klee_overshift_check = !{!5578, !5579}
!llvm.dbg.lv.my_strlen = !{!5580, !5581}
!llvm.dbg.lv.klee_mark_arg_symbolic = !{!5583, !5584, !5585, !5587, !5588, !5589, !5590, !5591, !5592, !5613}
!llvm.dbg.lv.klee_div_zero_check = !{!5615}
!llvm.dbg.lv.klee_range = !{!5616, !5617, !5618, !5619}

!0 = metadata !{i32 589870, i32 0, metadata !1, metadata !"__errno_location", metadata !"__errno_location", metadata !"__errno_location", metadata !1, i32 12, metadata !3, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32* ()* @__errno_locati
!1 = metadata !{i32 589865, metadata !"__errno_location.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !2} ; [ DW_TAG_file_type ]
!2 = metadata !{i32 589841, i32 0, i32 1, metadata !"__errno_location.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", 
!3 = metadata !{i32 589845, metadata !1, metadata !"", metadata !1, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4 = metadata !{metadata !5}
!5 = metadata !{i32 589839, metadata !1, metadata !"", metadata !1, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !6} ; [ DW_TAG_pointer_type ]
!6 = metadata !{i32 589860, metadata !1, metadata !"int", metadata !1, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!7 = metadata !{i32 589870, i32 0, metadata !8, metadata !"__fgetc_unlocked", metadata !"__fgetc_unlocked", metadata !"__fgetc_unlocked", metadata !10, i32 23, metadata !11, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @__fgetc_un
!8 = metadata !{i32 589865, metadata !"fgetc_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !9} ; [ DW_TAG_file_type ]
!9 = metadata !{i32 589841, i32 0, i32 1, metadata !"fgetc_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!10 = metadata !{i32 589865, metadata !"fgetc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !9} ; [ DW_TAG_file_type ]
!11 = metadata !{i32 589845, metadata !8, metadata !"", metadata !8, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !12, i32 0, null} ; [ DW_TAG_subroutine_type ]
!12 = metadata !{metadata !13, metadata !14}
!13 = metadata !{i32 589860, metadata !8, metadata !"int", metadata !8, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!14 = metadata !{i32 589839, metadata !8, metadata !"", metadata !8, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !15} ; [ DW_TAG_pointer_type ]
!15 = metadata !{i32 589846, metadata !16, metadata !"FILE", metadata !16, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !17} ; [ DW_TAG_typedef ]
!16 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !9} ; [ DW_TAG_file_type ]
!17 = metadata !{i32 589843, metadata !8, metadata !"__STDIO_FILE_STRUCT", metadata !16, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !18, i32 0, null} ; [ DW_TAG_structure_type ]
!18 = metadata !{metadata !19, metadata !22, metadata !27, metadata !28, metadata !30, metadata !31, metadata !32, metadata !33, metadata !34, metadata !35, metadata !37, metadata !41}
!19 = metadata !{i32 589837, metadata !17, metadata !"__modeflags", metadata !20, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !21} ; [ DW_TAG_member ]
!20 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !9} ; [ DW_TAG_file_type ]
!21 = metadata !{i32 589860, metadata !8, metadata !"short unsigned int", metadata !8, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!22 = metadata !{i32 589837, metadata !17, metadata !"__ungot_width", metadata !20, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !23} ; [ DW_TAG_member ]
!23 = metadata !{i32 589825, metadata !8, metadata !"", metadata !8, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !24, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!24 = metadata !{i32 589860, metadata !8, metadata !"unsigned char", metadata !8, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!25 = metadata !{metadata !26}
!26 = metadata !{i32 589857, i64 0, i64 1}        ; [ DW_TAG_subrange_type ]
!27 = metadata !{i32 589837, metadata !17, metadata !"__filedes", metadata !20, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !13} ; [ DW_TAG_member ]
!28 = metadata !{i32 589837, metadata !17, metadata !"__bufstart", metadata !20, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !29} ; [ DW_TAG_member ]
!29 = metadata !{i32 589839, metadata !8, metadata !"", metadata !8, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !24} ; [ DW_TAG_pointer_type ]
!30 = metadata !{i32 589837, metadata !17, metadata !"__bufend", metadata !20, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !29} ; [ DW_TAG_member ]
!31 = metadata !{i32 589837, metadata !17, metadata !"__bufpos", metadata !20, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !29} ; [ DW_TAG_member ]
!32 = metadata !{i32 589837, metadata !17, metadata !"__bufread", metadata !20, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !29} ; [ DW_TAG_member ]
!33 = metadata !{i32 589837, metadata !17, metadata !"__bufgetc_u", metadata !20, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !29} ; [ DW_TAG_member ]
!34 = metadata !{i32 589837, metadata !17, metadata !"__bufputc_u", metadata !20, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !29} ; [ DW_TAG_member ]
!35 = metadata !{i32 589837, metadata !17, metadata !"__nextopen", metadata !20, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !36} ; [ DW_TAG_member ]
!36 = metadata !{i32 589839, metadata !8, metadata !"", metadata !8, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !17} ; [ DW_TAG_pointer_type ]
!37 = metadata !{i32 589837, metadata !17, metadata !"__ungot", metadata !20, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !38} ; [ DW_TAG_member ]
!38 = metadata !{i32 589825, metadata !8, metadata !"", metadata !8, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !39, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!39 = metadata !{i32 589846, metadata !40, metadata !"wchar_t", metadata !40, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !13} ; [ DW_TAG_typedef ]
!40 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !9} ; [ DW_TAG_file_type ]
!41 = metadata !{i32 589837, metadata !17, metadata !"__state", metadata !20, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !42} ; [ DW_TAG_member ]
!42 = metadata !{i32 589846, metadata !43, metadata !"__mbstate_t", metadata !43, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !44} ; [ DW_TAG_typedef ]
!43 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !9} ; [ DW_TAG_file_type ]
!44 = metadata !{i32 589843, metadata !8, metadata !"", metadata !43, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !45, i32 0, null} ; [ DW_TAG_structure_type ]
!45 = metadata !{metadata !46, metadata !47}
!46 = metadata !{i32 589837, metadata !44, metadata !"__mask", metadata !43, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !39} ; [ DW_TAG_member ]
!47 = metadata !{i32 589837, metadata !44, metadata !"__wc", metadata !43, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !39} ; [ DW_TAG_member ]
!48 = metadata !{i32 589870, i32 0, metadata !49, metadata !"__fpending", metadata !"__fpending", metadata !"__fpending", metadata !49, i32 29, metadata !51, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*)* @__fpending} ; [ DW_TAG_sub
!49 = metadata !{i32 589865, metadata !"__fpending.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !50} ; [ DW_TAG_file_type ]
!50 = metadata !{i32 589841, i32 0, i32 1, metadata !"__fpending.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!51 = metadata !{i32 589845, metadata !49, metadata !"", metadata !49, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !52, i32 0, null} ; [ DW_TAG_subroutine_type ]
!52 = metadata !{metadata !53, metadata !56}
!53 = metadata !{i32 589846, metadata !54, metadata !"size_t", metadata !54, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !55} ; [ DW_TAG_typedef ]
!54 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !50} ; [ DW_TAG_file_type ]
!55 = metadata !{i32 589860, metadata !49, metadata !"long unsigned int", metadata !49, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!56 = metadata !{i32 589839, metadata !49, metadata !"", metadata !49, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !57} ; [ DW_TAG_pointer_type ]
!57 = metadata !{i32 589846, metadata !58, metadata !"FILE", metadata !58, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !59} ; [ DW_TAG_typedef ]
!58 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !50} ; [ DW_TAG_file_type ]
!59 = metadata !{i32 589843, metadata !49, metadata !"__STDIO_FILE_STRUCT", metadata !58, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !60, i32 0, null} ; [ DW_TAG_structure_type ]
!60 = metadata !{metadata !61, metadata !64, metadata !67, metadata !69, metadata !71, metadata !72, metadata !73, metadata !74, metadata !75, metadata !76, metadata !78, metadata !81}
!61 = metadata !{i32 589837, metadata !59, metadata !"__modeflags", metadata !62, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !63} ; [ DW_TAG_member ]
!62 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !50} ; [ DW_TAG_file_type ]
!63 = metadata !{i32 589860, metadata !49, metadata !"short unsigned int", metadata !49, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!64 = metadata !{i32 589837, metadata !59, metadata !"__ungot_width", metadata !62, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !65} ; [ DW_TAG_member ]
!65 = metadata !{i32 589825, metadata !49, metadata !"", metadata !49, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !66, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!66 = metadata !{i32 589860, metadata !49, metadata !"unsigned char", metadata !49, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!67 = metadata !{i32 589837, metadata !59, metadata !"__filedes", metadata !62, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !68} ; [ DW_TAG_member ]
!68 = metadata !{i32 589860, metadata !49, metadata !"int", metadata !49, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!69 = metadata !{i32 589837, metadata !59, metadata !"__bufstart", metadata !62, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !70} ; [ DW_TAG_member ]
!70 = metadata !{i32 589839, metadata !49, metadata !"", metadata !49, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !66} ; [ DW_TAG_pointer_type ]
!71 = metadata !{i32 589837, metadata !59, metadata !"__bufend", metadata !62, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !70} ; [ DW_TAG_member ]
!72 = metadata !{i32 589837, metadata !59, metadata !"__bufpos", metadata !62, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !70} ; [ DW_TAG_member ]
!73 = metadata !{i32 589837, metadata !59, metadata !"__bufread", metadata !62, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !70} ; [ DW_TAG_member ]
!74 = metadata !{i32 589837, metadata !59, metadata !"__bufgetc_u", metadata !62, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !70} ; [ DW_TAG_member ]
!75 = metadata !{i32 589837, metadata !59, metadata !"__bufputc_u", metadata !62, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !70} ; [ DW_TAG_member ]
!76 = metadata !{i32 589837, metadata !59, metadata !"__nextopen", metadata !62, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !77} ; [ DW_TAG_member ]
!77 = metadata !{i32 589839, metadata !49, metadata !"", metadata !49, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !59} ; [ DW_TAG_pointer_type ]
!78 = metadata !{i32 589837, metadata !59, metadata !"__ungot", metadata !62, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !79} ; [ DW_TAG_member ]
!79 = metadata !{i32 589825, metadata !49, metadata !"", metadata !49, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !80, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!80 = metadata !{i32 589846, metadata !54, metadata !"wchar_t", metadata !54, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !68} ; [ DW_TAG_typedef ]
!81 = metadata !{i32 589837, metadata !59, metadata !"__state", metadata !62, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !82} ; [ DW_TAG_member ]
!82 = metadata !{i32 589846, metadata !83, metadata !"__mbstate_t", metadata !83, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !84} ; [ DW_TAG_typedef ]
!83 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !50} ; [ DW_TAG_file_type ]
!84 = metadata !{i32 589843, metadata !49, metadata !"", metadata !83, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !85, i32 0, null} ; [ DW_TAG_structure_type ]
!85 = metadata !{metadata !86, metadata !87}
!86 = metadata !{i32 589837, metadata !84, metadata !"__mask", metadata !83, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !80} ; [ DW_TAG_member ]
!87 = metadata !{i32 589837, metadata !84, metadata !"__wc", metadata !83, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !80} ; [ DW_TAG_member ]
!88 = metadata !{i32 589870, i32 0, metadata !89, metadata !"__fputc_unlocked", metadata !"__fputc_unlocked", metadata !"__fputc_unlocked", metadata !91, i32 20, metadata !92, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %4*)* @__f
!89 = metadata !{i32 589865, metadata !"fputc_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !90} ; [ DW_TAG_file_type ]
!90 = metadata !{i32 589841, i32 0, i32 1, metadata !"fputc_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [
!91 = metadata !{i32 589865, metadata !"fputc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !90} ; [ DW_TAG_file_type ]
!92 = metadata !{i32 589845, metadata !89, metadata !"", metadata !89, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !93, i32 0, null} ; [ DW_TAG_subroutine_type ]
!93 = metadata !{metadata !94, metadata !94, metadata !95}
!94 = metadata !{i32 589860, metadata !89, metadata !"int", metadata !89, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!95 = metadata !{i32 589839, metadata !89, metadata !"", metadata !89, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !96} ; [ DW_TAG_pointer_type ]
!96 = metadata !{i32 589846, metadata !97, metadata !"FILE", metadata !97, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !98} ; [ DW_TAG_typedef ]
!97 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !90} ; [ DW_TAG_file_type ]
!98 = metadata !{i32 589843, metadata !89, metadata !"__STDIO_FILE_STRUCT", metadata !97, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !99, i32 0, null} ; [ DW_TAG_structure_type ]
!99 = metadata !{metadata !100, metadata !103, metadata !106, metadata !107, metadata !109, metadata !110, metadata !111, metadata !112, metadata !113, metadata !114, metadata !116, metadata !120}
!100 = metadata !{i32 589837, metadata !98, metadata !"__modeflags", metadata !101, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !102} ; [ DW_TAG_member ]
!101 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !90} ; [ DW_TAG_file_type ]
!102 = metadata !{i32 589860, metadata !89, metadata !"short unsigned int", metadata !89, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!103 = metadata !{i32 589837, metadata !98, metadata !"__ungot_width", metadata !101, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !104} ; [ DW_TAG_member ]
!104 = metadata !{i32 589825, metadata !89, metadata !"", metadata !89, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !105, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!105 = metadata !{i32 589860, metadata !89, metadata !"unsigned char", metadata !89, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!106 = metadata !{i32 589837, metadata !98, metadata !"__filedes", metadata !101, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !94} ; [ DW_TAG_member ]
!107 = metadata !{i32 589837, metadata !98, metadata !"__bufstart", metadata !101, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !108} ; [ DW_TAG_member ]
!108 = metadata !{i32 589839, metadata !89, metadata !"", metadata !89, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !105} ; [ DW_TAG_pointer_type ]
!109 = metadata !{i32 589837, metadata !98, metadata !"__bufend", metadata !101, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !108} ; [ DW_TAG_member ]
!110 = metadata !{i32 589837, metadata !98, metadata !"__bufpos", metadata !101, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !108} ; [ DW_TAG_member ]
!111 = metadata !{i32 589837, metadata !98, metadata !"__bufread", metadata !101, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !108} ; [ DW_TAG_member ]
!112 = metadata !{i32 589837, metadata !98, metadata !"__bufgetc_u", metadata !101, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !108} ; [ DW_TAG_member ]
!113 = metadata !{i32 589837, metadata !98, metadata !"__bufputc_u", metadata !101, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !108} ; [ DW_TAG_member ]
!114 = metadata !{i32 589837, metadata !98, metadata !"__nextopen", metadata !101, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !115} ; [ DW_TAG_member ]
!115 = metadata !{i32 589839, metadata !89, metadata !"", metadata !89, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !98} ; [ DW_TAG_pointer_type ]
!116 = metadata !{i32 589837, metadata !98, metadata !"__ungot", metadata !101, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !117} ; [ DW_TAG_member ]
!117 = metadata !{i32 589825, metadata !89, metadata !"", metadata !89, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !118, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!118 = metadata !{i32 589846, metadata !119, metadata !"wchar_t", metadata !119, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !94} ; [ DW_TAG_typedef ]
!119 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !90} ; [ DW_TAG_file_type ]
!120 = metadata !{i32 589837, metadata !98, metadata !"__state", metadata !101, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !121} ; [ DW_TAG_member ]
!121 = metadata !{i32 589846, metadata !122, metadata !"__mbstate_t", metadata !122, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !123} ; [ DW_TAG_typedef ]
!122 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !90} ; [ DW_TAG_file_type ]
!123 = metadata !{i32 589843, metadata !89, metadata !"", metadata !122, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !124, i32 0, null} ; [ DW_TAG_structure_type ]
!124 = metadata !{metadata !125, metadata !126}
!125 = metadata !{i32 589837, metadata !123, metadata !"__mask", metadata !122, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !118} ; [ DW_TAG_member ]
!126 = metadata !{i32 589837, metadata !123, metadata !"__wc", metadata !122, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !118} ; [ DW_TAG_member ]
!127 = metadata !{i32 589870, i32 0, metadata !128, metadata !"__freading", metadata !"__freading", metadata !"__freading", metadata !128, i32 16, metadata !130, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @__freading} ; [ DW_TAG
!128 = metadata !{i32 589865, metadata !"__freading.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !129} ; [ DW_TAG_file_type ]
!129 = metadata !{i32 589841, i32 0, i32 1, metadata !"__freading.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!130 = metadata !{i32 589845, metadata !128, metadata !"", metadata !128, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !131, i32 0, null} ; [ DW_TAG_subroutine_type ]
!131 = metadata !{metadata !132, metadata !133}
!132 = metadata !{i32 589860, metadata !128, metadata !"int", metadata !128, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!133 = metadata !{i32 589839, metadata !128, metadata !"", metadata !128, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !134} ; [ DW_TAG_pointer_type ]
!134 = metadata !{i32 589846, metadata !135, metadata !"FILE", metadata !135, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !136} ; [ DW_TAG_typedef ]
!135 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !129} ; [ DW_TAG_file_type ]
!136 = metadata !{i32 589843, metadata !128, metadata !"__STDIO_FILE_STRUCT", metadata !135, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !137, i32 0, null} ; [ DW_TAG_structure_type ]
!137 = metadata !{metadata !138, metadata !141, metadata !144, metadata !145, metadata !147, metadata !148, metadata !149, metadata !150, metadata !151, metadata !152, metadata !154, metadata !158}
!138 = metadata !{i32 589837, metadata !136, metadata !"__modeflags", metadata !139, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !140} ; [ DW_TAG_member ]
!139 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !129} ; [ DW_TAG_file_type ]
!140 = metadata !{i32 589860, metadata !128, metadata !"short unsigned int", metadata !128, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!141 = metadata !{i32 589837, metadata !136, metadata !"__ungot_width", metadata !139, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !142} ; [ DW_TAG_member ]
!142 = metadata !{i32 589825, metadata !128, metadata !"", metadata !128, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !143, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!143 = metadata !{i32 589860, metadata !128, metadata !"unsigned char", metadata !128, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!144 = metadata !{i32 589837, metadata !136, metadata !"__filedes", metadata !139, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !132} ; [ DW_TAG_member ]
!145 = metadata !{i32 589837, metadata !136, metadata !"__bufstart", metadata !139, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !146} ; [ DW_TAG_member ]
!146 = metadata !{i32 589839, metadata !128, metadata !"", metadata !128, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !143} ; [ DW_TAG_pointer_type ]
!147 = metadata !{i32 589837, metadata !136, metadata !"__bufend", metadata !139, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !146} ; [ DW_TAG_member ]
!148 = metadata !{i32 589837, metadata !136, metadata !"__bufpos", metadata !139, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !146} ; [ DW_TAG_member ]
!149 = metadata !{i32 589837, metadata !136, metadata !"__bufread", metadata !139, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !146} ; [ DW_TAG_member ]
!150 = metadata !{i32 589837, metadata !136, metadata !"__bufgetc_u", metadata !139, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !146} ; [ DW_TAG_member ]
!151 = metadata !{i32 589837, metadata !136, metadata !"__bufputc_u", metadata !139, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !146} ; [ DW_TAG_member ]
!152 = metadata !{i32 589837, metadata !136, metadata !"__nextopen", metadata !139, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !153} ; [ DW_TAG_member ]
!153 = metadata !{i32 589839, metadata !128, metadata !"", metadata !128, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !136} ; [ DW_TAG_pointer_type ]
!154 = metadata !{i32 589837, metadata !136, metadata !"__ungot", metadata !139, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !155} ; [ DW_TAG_member ]
!155 = metadata !{i32 589825, metadata !128, metadata !"", metadata !128, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !156, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!156 = metadata !{i32 589846, metadata !157, metadata !"wchar_t", metadata !157, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !132} ; [ DW_TAG_typedef ]
!157 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !129} ; [ DW_TAG_file_type ]
!158 = metadata !{i32 589837, metadata !136, metadata !"__state", metadata !139, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !159} ; [ DW_TAG_member ]
!159 = metadata !{i32 589846, metadata !160, metadata !"__mbstate_t", metadata !160, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !161} ; [ DW_TAG_typedef ]
!160 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !129} ; [ DW_TAG_file_type ]
!161 = metadata !{i32 589843, metadata !128, metadata !"", metadata !160, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !162, i32 0, null} ; [ DW_TAG_structure_type ]
!162 = metadata !{metadata !163, metadata !164}
!163 = metadata !{i32 589837, metadata !161, metadata !"__mask", metadata !160, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !156} ; [ DW_TAG_member ]
!164 = metadata !{i32 589837, metadata !161, metadata !"__wc", metadata !160, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !156} ; [ DW_TAG_member ]
!165 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__check_one_fd", metadata !"__check_one_fd", metadata !"", metadata !166, i32 137, metadata !168, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i32)* @__check_one_fd} ; 
!166 = metadata !{i32 589865, metadata !"__uClibc_main.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !167} ; [ DW_TAG_file_type ]
!167 = metadata !{i32 589841, i32 0, i32 1, metadata !"__uClibc_main.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i
!168 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !169, i32 0, null} ; [ DW_TAG_subroutine_type ]
!169 = metadata !{null, metadata !170, metadata !170}
!170 = metadata !{i32 589860, metadata !166, metadata !"int", metadata !166, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!171 = metadata !{i32 589870, i32 0, metadata !166, metadata !"gnu_dev_makedev", metadata !"gnu_dev_makedev", metadata !"", metadata !172, i32 55, metadata !173, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32, i32)* @gnu_dev_makedev420
!172 = metadata !{i32 589865, metadata !"sysmacros.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/sys", metadata !167} ; [ DW_TAG_file_type ]
!173 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !174, i32 0, null} ; [ DW_TAG_subroutine_type ]
!174 = metadata !{metadata !175, metadata !176, metadata !176}
!175 = metadata !{i32 589860, metadata !166, metadata !"long long unsigned int", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!176 = metadata !{i32 589860, metadata !166, metadata !"unsigned int", metadata !166, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!177 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__check_suid", metadata !"__check_suid", metadata !"", metadata !166, i32 156, metadata !178, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 ()* @__check_suid} ; [ DW_TAG_subpro
!178 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !179, i32 0, null} ; [ DW_TAG_subroutine_type ]
!179 = metadata !{metadata !170}
!180 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__uClibc_init", metadata !"__uClibc_init", metadata !"__uClibc_init", metadata !166, i32 188, metadata !181, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @__uClibc_init}
!181 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!182 = metadata !{null}
!183 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__uClibc_fini", metadata !"__uClibc_fini", metadata !"__uClibc_fini", metadata !166, i32 252, metadata !181, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @__uClibc_fini}
!184 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__uClibc_main", metadata !"__uClibc_main", metadata !"__uClibc_main", metadata !166, i32 281, metadata !185, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32 (i32, i8**, i8
!185 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !186, i32 0, null} ; [ DW_TAG_subroutine_type ]
!186 = metadata !{null, metadata !187, metadata !170, metadata !190, metadata !193, metadata !193, metadata !193, metadata !194}
!187 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !188} ; [ DW_TAG_pointer_type ]
!188 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !189, i32 0, null} ; [ DW_TAG_subroutine_type ]
!189 = metadata !{metadata !170, metadata !170, metadata !190, metadata !190}
!190 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !191} ; [ DW_TAG_pointer_type ]
!191 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !192} ; [ DW_TAG_pointer_type ]
!192 = metadata !{i32 589860, metadata !166, metadata !"char", metadata !166, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!193 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !181} ; [ DW_TAG_pointer_type ]
!194 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!195 = metadata !{i32 589870, i32 0, metadata !196, metadata !"_stdlib_mb_cur_max", metadata !"_stdlib_mb_cur_max", metadata !"_stdlib_mb_cur_max", metadata !198, i32 921, metadata !199, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 ()* @
!196 = metadata !{i32 589865, metadata !"_stdlib_mb_cur_max.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !197} ; [ DW_TAG_file_type ]
!197 = metadata !{i32 589841, i32 0, i32 1, metadata !"_stdlib_mb_cur_max.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 
!198 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !197} ; [ DW_TAG_file_type ]
!199 = metadata !{i32 589845, metadata !196, metadata !"", metadata !196, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !200, i32 0, null} ; [ DW_TAG_subroutine_type ]
!200 = metadata !{metadata !201}
!201 = metadata !{i32 589846, metadata !202, metadata !"size_t", metadata !202, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !203} ; [ DW_TAG_typedef ]
!202 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !197} ; [ DW_TAG_file_type ]
!203 = metadata !{i32 589860, metadata !196, metadata !"long unsigned int", metadata !196, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!204 = metadata !{i32 589870, i32 0, metadata !205, metadata !"abort", metadata !"abort", metadata !"abort", metadata !205, i32 57, metadata !207, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @abort} ; [ DW_TAG_subprogram ]
!205 = metadata !{i32 589865, metadata !"abort.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !206} ; [ DW_TAG_file_type ]
!206 = metadata !{i32 589841, i32 0, i32 1, metadata !"abort.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!207 = metadata !{i32 589845, metadata !205, metadata !"", metadata !205, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!208 = metadata !{i32 589870, i32 0, metadata !209, metadata !"atexit", metadata !"atexit", metadata !"atexit", metadata !211, i32 112, metadata !212, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (void ()*)* @atexit} ; [ DW_TAG_subprogra
!209 = metadata !{i32 589865, metadata !"atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !210} ; [ DW_TAG_file_type ]
!210 = metadata !{i32 589841, i32 0, i32 1, metadata !"atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!211 = metadata !{i32 589865, metadata !"_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !210} ; [ DW_TAG_file_type ]
!212 = metadata !{i32 589845, metadata !209, metadata !"", metadata !209, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !213, i32 0, null} ; [ DW_TAG_subroutine_type ]
!213 = metadata !{metadata !214, metadata !215}
!214 = metadata !{i32 589860, metadata !209, metadata !"int", metadata !209, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!215 = metadata !{i32 589839, metadata !209, metadata !"", metadata !209, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !216} ; [ DW_TAG_pointer_type ]
!216 = metadata !{i32 589845, metadata !209, metadata !"", metadata !209, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!217 = metadata !{i32 589870, i32 0, metadata !218, metadata !"getmntent_r", metadata !"getmntent_r", metadata !"getmntent_r", metadata !218, i32 32, metadata !220, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.mntent* (%4*, %struct.m
!218 = metadata !{i32 589865, metadata !"mntent.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/mntent", metadata !219} ; [ DW_TAG_file_type ]
!219 = metadata !{i32 589841, i32 0, i32 1, metadata !"mntent.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/mntent", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!220 = metadata !{i32 589845, metadata !218, metadata !"", metadata !218, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !221, i32 0, null} ; [ DW_TAG_subroutine_type ]
!221 = metadata !{metadata !222, metadata !235, metadata !222, metadata !227, metadata !233}
!222 = metadata !{i32 589839, metadata !218, metadata !"", metadata !218, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !223} ; [ DW_TAG_pointer_type ]
!223 = metadata !{i32 589843, metadata !218, metadata !"mntent", metadata !224, i32 55, i64 320, i64 64, i64 0, i32 0, null, metadata !225, i32 0, null} ; [ DW_TAG_structure_type ]
!224 = metadata !{i32 589865, metadata !"mntent.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !219} ; [ DW_TAG_file_type ]
!225 = metadata !{metadata !226, metadata !229, metadata !230, metadata !231, metadata !232, metadata !234}
!226 = metadata !{i32 589837, metadata !223, metadata !"mnt_fsname", metadata !224, i32 56, i64 64, i64 64, i64 0, i32 0, metadata !227} ; [ DW_TAG_member ]
!227 = metadata !{i32 589839, metadata !218, metadata !"", metadata !218, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !228} ; [ DW_TAG_pointer_type ]
!228 = metadata !{i32 589860, metadata !218, metadata !"char", metadata !218, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!229 = metadata !{i32 589837, metadata !223, metadata !"mnt_dir", metadata !224, i32 57, i64 64, i64 64, i64 64, i32 0, metadata !227} ; [ DW_TAG_member ]
!230 = metadata !{i32 589837, metadata !223, metadata !"mnt_type", metadata !224, i32 58, i64 64, i64 64, i64 128, i32 0, metadata !227} ; [ DW_TAG_member ]
!231 = metadata !{i32 589837, metadata !223, metadata !"mnt_opts", metadata !224, i32 59, i64 64, i64 64, i64 192, i32 0, metadata !227} ; [ DW_TAG_member ]
!232 = metadata !{i32 589837, metadata !223, metadata !"mnt_freq", metadata !224, i32 60, i64 32, i64 32, i64 256, i32 0, metadata !233} ; [ DW_TAG_member ]
!233 = metadata !{i32 589860, metadata !218, metadata !"int", metadata !218, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!234 = metadata !{i32 589837, metadata !223, metadata !"mnt_passno", metadata !224, i32 61, i64 32, i64 32, i64 288, i32 0, metadata !233} ; [ DW_TAG_member ]
!235 = metadata !{i32 589839, metadata !218, metadata !"", metadata !218, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !236} ; [ DW_TAG_pointer_type ]
!236 = metadata !{i32 589846, metadata !237, metadata !"FILE", metadata !237, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !238} ; [ DW_TAG_typedef ]
!237 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !219} ; [ DW_TAG_file_type ]
!238 = metadata !{i32 589843, metadata !218, metadata !"__STDIO_FILE_STRUCT", metadata !237, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !239, i32 0, null} ; [ DW_TAG_structure_type ]
!239 = metadata !{metadata !240, metadata !243, metadata !246, metadata !247, metadata !249, metadata !250, metadata !251, metadata !252, metadata !253, metadata !254, metadata !256, metadata !260}
!240 = metadata !{i32 589837, metadata !238, metadata !"__modeflags", metadata !241, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !242} ; [ DW_TAG_member ]
!241 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !219} ; [ DW_TAG_file_type ]
!242 = metadata !{i32 589860, metadata !218, metadata !"short unsigned int", metadata !218, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!243 = metadata !{i32 589837, metadata !238, metadata !"__ungot_width", metadata !241, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !244} ; [ DW_TAG_member ]
!244 = metadata !{i32 589825, metadata !218, metadata !"", metadata !218, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !245, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!245 = metadata !{i32 589860, metadata !218, metadata !"unsigned char", metadata !218, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!246 = metadata !{i32 589837, metadata !238, metadata !"__filedes", metadata !241, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !233} ; [ DW_TAG_member ]
!247 = metadata !{i32 589837, metadata !238, metadata !"__bufstart", metadata !241, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !248} ; [ DW_TAG_member ]
!248 = metadata !{i32 589839, metadata !218, metadata !"", metadata !218, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !245} ; [ DW_TAG_pointer_type ]
!249 = metadata !{i32 589837, metadata !238, metadata !"__bufend", metadata !241, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !248} ; [ DW_TAG_member ]
!250 = metadata !{i32 589837, metadata !238, metadata !"__bufpos", metadata !241, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !248} ; [ DW_TAG_member ]
!251 = metadata !{i32 589837, metadata !238, metadata !"__bufread", metadata !241, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !248} ; [ DW_TAG_member ]
!252 = metadata !{i32 589837, metadata !238, metadata !"__bufgetc_u", metadata !241, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !248} ; [ DW_TAG_member ]
!253 = metadata !{i32 589837, metadata !238, metadata !"__bufputc_u", metadata !241, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !248} ; [ DW_TAG_member ]
!254 = metadata !{i32 589837, metadata !238, metadata !"__nextopen", metadata !241, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !255} ; [ DW_TAG_member ]
!255 = metadata !{i32 589839, metadata !218, metadata !"", metadata !218, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !238} ; [ DW_TAG_pointer_type ]
!256 = metadata !{i32 589837, metadata !238, metadata !"__ungot", metadata !241, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !257} ; [ DW_TAG_member ]
!257 = metadata !{i32 589825, metadata !218, metadata !"", metadata !218, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !258, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!258 = metadata !{i32 589846, metadata !259, metadata !"wchar_t", metadata !259, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !233} ; [ DW_TAG_typedef ]
!259 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !219} ; [ DW_TAG_file_type ]
!260 = metadata !{i32 589837, metadata !238, metadata !"__state", metadata !241, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !261} ; [ DW_TAG_member ]
!261 = metadata !{i32 589846, metadata !262, metadata !"__mbstate_t", metadata !262, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !263} ; [ DW_TAG_typedef ]
!262 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !219} ; [ DW_TAG_file_type ]
!263 = metadata !{i32 589843, metadata !218, metadata !"", metadata !262, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !264, i32 0, null} ; [ DW_TAG_structure_type ]
!264 = metadata !{metadata !265, metadata !266}
!265 = metadata !{i32 589837, metadata !263, metadata !"__mask", metadata !262, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !258} ; [ DW_TAG_member ]
!266 = metadata !{i32 589837, metadata !263, metadata !"__wc", metadata !262, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !258} ; [ DW_TAG_member ]
!267 = metadata !{i32 589870, i32 0, metadata !218, metadata !"getmntent", metadata !"getmntent", metadata !"getmntent", metadata !218, i32 80, metadata !268, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.mntent* (%4*)* @getmntent} ; 
!268 = metadata !{i32 589845, metadata !218, metadata !"", metadata !218, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !269, i32 0, null} ; [ DW_TAG_subroutine_type ]
!269 = metadata !{metadata !222, metadata !235}
!270 = metadata !{i32 589870, i32 0, metadata !218, metadata !"addmntent", metadata !"addmntent", metadata !"addmntent", metadata !218, i32 98, metadata !271, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, %struct.mntent*)* @addmnten
!271 = metadata !{i32 589845, metadata !218, metadata !"", metadata !218, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !272, i32 0, null} ; [ DW_TAG_subroutine_type ]
!272 = metadata !{metadata !233, metadata !235, metadata !273}
!273 = metadata !{i32 589839, metadata !218, metadata !"", metadata !218, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !274} ; [ DW_TAG_pointer_type ]
!274 = metadata !{i32 589862, metadata !218, metadata !"", metadata !218, i32 0, i64 320, i64 64, i64 0, i32 0, metadata !223} ; [ DW_TAG_const_type ]
!275 = metadata !{i32 589870, i32 0, metadata !218, metadata !"hasmntopt", metadata !"hasmntopt", metadata !"hasmntopt", metadata !218, i32 110, metadata !276, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.mntent*, i8*)* @hasmnto
!276 = metadata !{i32 589845, metadata !218, metadata !"", metadata !218, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !277, i32 0, null} ; [ DW_TAG_subroutine_type ]
!277 = metadata !{metadata !227, metadata !273, metadata !278}
!278 = metadata !{i32 589839, metadata !218, metadata !"", metadata !218, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !279} ; [ DW_TAG_pointer_type ]
!279 = metadata !{i32 589862, metadata !218, metadata !"", metadata !218, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !228} ; [ DW_TAG_const_type ]
!280 = metadata !{i32 589870, i32 0, metadata !218, metadata !"setmntent", metadata !"setmntent", metadata !"setmntent", metadata !218, i32 115, metadata !281, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %4* (i8*, i8*)* @setmntent} ; [ DW_T
!281 = metadata !{i32 589845, metadata !218, metadata !"", metadata !218, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !282, i32 0, null} ; [ DW_TAG_subroutine_type ]
!282 = metadata !{metadata !235, metadata !278, metadata !278}
!283 = metadata !{i32 589870, i32 0, metadata !218, metadata !"endmntent", metadata !"endmntent", metadata !"endmntent", metadata !218, i32 121, metadata !284, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @endmntent} ; [ DW_TAG_su
!284 = metadata !{i32 589845, metadata !218, metadata !"", metadata !218, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !285, i32 0, null} ; [ DW_TAG_subroutine_type ]
!285 = metadata !{metadata !233, metadata !235}
!286 = metadata !{i32 589870, i32 0, metadata !287, metadata !"__error", metadata !"__error", metadata !"__error", metadata !287, i32 51, metadata !289, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i32, i8*, ...)* @__error} ; [ DW
!287 = metadata !{i32 589865, metadata !"error.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/error", metadata !288} ; [ DW_TAG_file_type ]
!288 = metadata !{i32 589841, i32 0, i32 1, metadata !"error.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/error", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!289 = metadata !{i32 589845, metadata !287, metadata !"", metadata !287, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !290, i32 0, null} ; [ DW_TAG_subroutine_type ]
!290 = metadata !{null, metadata !291, metadata !291, metadata !292}
!291 = metadata !{i32 589860, metadata !287, metadata !"int", metadata !287, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!292 = metadata !{i32 589839, metadata !287, metadata !"", metadata !287, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !293} ; [ DW_TAG_pointer_type ]
!293 = metadata !{i32 589862, metadata !287, metadata !"", metadata !287, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !294} ; [ DW_TAG_const_type ]
!294 = metadata !{i32 589860, metadata !287, metadata !"char", metadata !287, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!295 = metadata !{i32 589870, i32 0, metadata !287, metadata !"__error_at_line", metadata !"__error_at_line", metadata !"__error_at_line", metadata !287, i32 72, metadata !296, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i32, i8*
!296 = metadata !{i32 589845, metadata !287, metadata !"", metadata !287, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !297, i32 0, null} ; [ DW_TAG_subroutine_type ]
!297 = metadata !{null, metadata !291, metadata !291, metadata !292, metadata !298, metadata !292}
!298 = metadata !{i32 589860, metadata !287, metadata !"unsigned int", metadata !287, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!299 = metadata !{i32 589870, i32 0, metadata !300, metadata !"exit", metadata !"exit", metadata !"exit", metadata !302, i32 319, metadata !303, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32)* @exit} ; [ DW_TAG_subprogram ]
!300 = metadata !{i32 589865, metadata !"exit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !301} ; [ DW_TAG_file_type ]
!301 = metadata !{i32 589841, i32 0, i32 1, metadata !"exit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG_
!302 = metadata !{i32 589865, metadata !"_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !301} ; [ DW_TAG_file_type ]
!303 = metadata !{i32 589845, metadata !300, metadata !"", metadata !300, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !304, i32 0, null} ; [ DW_TAG_subroutine_type ]
!304 = metadata !{null, metadata !305}
!305 = metadata !{i32 589860, metadata !300, metadata !"int", metadata !300, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!306 = metadata !{i32 589870, i32 0, metadata !307, metadata !"fclose", metadata !"fclose", metadata !"fclose", metadata !307, i32 15, metadata !309, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @fclose} ; [ DW_TAG_subprogram ]
!307 = metadata !{i32 589865, metadata !"fclose.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !308} ; [ DW_TAG_file_type ]
!308 = metadata !{i32 589841, i32 0, i32 1, metadata !"fclose.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!309 = metadata !{i32 589845, metadata !307, metadata !"", metadata !307, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !310, i32 0, null} ; [ DW_TAG_subroutine_type ]
!310 = metadata !{metadata !311, metadata !312}
!311 = metadata !{i32 589860, metadata !307, metadata !"int", metadata !307, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!312 = metadata !{i32 589839, metadata !307, metadata !"", metadata !307, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !313} ; [ DW_TAG_pointer_type ]
!313 = metadata !{i32 589846, metadata !314, metadata !"FILE", metadata !314, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !315} ; [ DW_TAG_typedef ]
!314 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !308} ; [ DW_TAG_file_type ]
!315 = metadata !{i32 589843, metadata !307, metadata !"__STDIO_FILE_STRUCT", metadata !314, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !316, i32 0, null} ; [ DW_TAG_structure_type ]
!316 = metadata !{metadata !317, metadata !320, metadata !323, metadata !324, metadata !326, metadata !327, metadata !328, metadata !329, metadata !330, metadata !331, metadata !333, metadata !337}
!317 = metadata !{i32 589837, metadata !315, metadata !"__modeflags", metadata !318, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !319} ; [ DW_TAG_member ]
!318 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !308} ; [ DW_TAG_file_type ]
!319 = metadata !{i32 589860, metadata !307, metadata !"short unsigned int", metadata !307, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!320 = metadata !{i32 589837, metadata !315, metadata !"__ungot_width", metadata !318, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !321} ; [ DW_TAG_member ]
!321 = metadata !{i32 589825, metadata !307, metadata !"", metadata !307, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !322, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!322 = metadata !{i32 589860, metadata !307, metadata !"unsigned char", metadata !307, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!323 = metadata !{i32 589837, metadata !315, metadata !"__filedes", metadata !318, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !311} ; [ DW_TAG_member ]
!324 = metadata !{i32 589837, metadata !315, metadata !"__bufstart", metadata !318, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !325} ; [ DW_TAG_member ]
!325 = metadata !{i32 589839, metadata !307, metadata !"", metadata !307, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !322} ; [ DW_TAG_pointer_type ]
!326 = metadata !{i32 589837, metadata !315, metadata !"__bufend", metadata !318, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !325} ; [ DW_TAG_member ]
!327 = metadata !{i32 589837, metadata !315, metadata !"__bufpos", metadata !318, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !325} ; [ DW_TAG_member ]
!328 = metadata !{i32 589837, metadata !315, metadata !"__bufread", metadata !318, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !325} ; [ DW_TAG_member ]
!329 = metadata !{i32 589837, metadata !315, metadata !"__bufgetc_u", metadata !318, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !325} ; [ DW_TAG_member ]
!330 = metadata !{i32 589837, metadata !315, metadata !"__bufputc_u", metadata !318, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !325} ; [ DW_TAG_member ]
!331 = metadata !{i32 589837, metadata !315, metadata !"__nextopen", metadata !318, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !332} ; [ DW_TAG_member ]
!332 = metadata !{i32 589839, metadata !307, metadata !"", metadata !307, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !315} ; [ DW_TAG_pointer_type ]
!333 = metadata !{i32 589837, metadata !315, metadata !"__ungot", metadata !318, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !334} ; [ DW_TAG_member ]
!334 = metadata !{i32 589825, metadata !307, metadata !"", metadata !307, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !335, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!335 = metadata !{i32 589846, metadata !336, metadata !"wchar_t", metadata !336, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !311} ; [ DW_TAG_typedef ]
!336 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !308} ; [ DW_TAG_file_type ]
!337 = metadata !{i32 589837, metadata !315, metadata !"__state", metadata !318, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !338} ; [ DW_TAG_member ]
!338 = metadata !{i32 589846, metadata !339, metadata !"__mbstate_t", metadata !339, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !340} ; [ DW_TAG_typedef ]
!339 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !308} ; [ DW_TAG_file_type ]
!340 = metadata !{i32 589843, metadata !307, metadata !"", metadata !339, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !341, i32 0, null} ; [ DW_TAG_structure_type ]
!341 = metadata !{metadata !342, metadata !343}
!342 = metadata !{i32 589837, metadata !340, metadata !"__mask", metadata !339, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !335} ; [ DW_TAG_member ]
!343 = metadata !{i32 589837, metadata !340, metadata !"__wc", metadata !339, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !335} ; [ DW_TAG_member ]
!344 = metadata !{i32 589870, i32 0, metadata !345, metadata !"fdopen", metadata !"fdopen", metadata !"fdopen", metadata !345, i32 14, metadata !347, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %4* (i32, i8*)* @fdopen} ; [ DW_TAG_subprogram
!345 = metadata !{i32 589865, metadata !"fdopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !346} ; [ DW_TAG_file_type ]
!346 = metadata !{i32 589841, i32 0, i32 1, metadata !"fdopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!347 = metadata !{i32 589845, metadata !345, metadata !"", metadata !345, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !348, i32 0, null} ; [ DW_TAG_subroutine_type ]
!348 = metadata !{metadata !349, metadata !361, metadata !382}
!349 = metadata !{i32 589839, metadata !345, metadata !"", metadata !345, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !350} ; [ DW_TAG_pointer_type ]
!350 = metadata !{i32 589846, metadata !351, metadata !"FILE", metadata !351, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !352} ; [ DW_TAG_typedef ]
!351 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !346} ; [ DW_TAG_file_type ]
!352 = metadata !{i32 589843, metadata !345, metadata !"__STDIO_FILE_STRUCT", metadata !351, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !353, i32 0, null} ; [ DW_TAG_structure_type ]
!353 = metadata !{metadata !354, metadata !357, metadata !360, metadata !362, metadata !364, metadata !365, metadata !366, metadata !367, metadata !368, metadata !369, metadata !371, metadata !375}
!354 = metadata !{i32 589837, metadata !352, metadata !"__modeflags", metadata !355, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !356} ; [ DW_TAG_member ]
!355 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !346} ; [ DW_TAG_file_type ]
!356 = metadata !{i32 589860, metadata !345, metadata !"short unsigned int", metadata !345, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!357 = metadata !{i32 589837, metadata !352, metadata !"__ungot_width", metadata !355, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !358} ; [ DW_TAG_member ]
!358 = metadata !{i32 589825, metadata !345, metadata !"", metadata !345, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !359, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!359 = metadata !{i32 589860, metadata !345, metadata !"unsigned char", metadata !345, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!360 = metadata !{i32 589837, metadata !352, metadata !"__filedes", metadata !355, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !361} ; [ DW_TAG_member ]
!361 = metadata !{i32 589860, metadata !345, metadata !"int", metadata !345, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!362 = metadata !{i32 589837, metadata !352, metadata !"__bufstart", metadata !355, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !363} ; [ DW_TAG_member ]
!363 = metadata !{i32 589839, metadata !345, metadata !"", metadata !345, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !359} ; [ DW_TAG_pointer_type ]
!364 = metadata !{i32 589837, metadata !352, metadata !"__bufend", metadata !355, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !363} ; [ DW_TAG_member ]
!365 = metadata !{i32 589837, metadata !352, metadata !"__bufpos", metadata !355, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !363} ; [ DW_TAG_member ]
!366 = metadata !{i32 589837, metadata !352, metadata !"__bufread", metadata !355, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !363} ; [ DW_TAG_member ]
!367 = metadata !{i32 589837, metadata !352, metadata !"__bufgetc_u", metadata !355, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !363} ; [ DW_TAG_member ]
!368 = metadata !{i32 589837, metadata !352, metadata !"__bufputc_u", metadata !355, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !363} ; [ DW_TAG_member ]
!369 = metadata !{i32 589837, metadata !352, metadata !"__nextopen", metadata !355, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !370} ; [ DW_TAG_member ]
!370 = metadata !{i32 589839, metadata !345, metadata !"", metadata !345, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !352} ; [ DW_TAG_pointer_type ]
!371 = metadata !{i32 589837, metadata !352, metadata !"__ungot", metadata !355, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !372} ; [ DW_TAG_member ]
!372 = metadata !{i32 589825, metadata !345, metadata !"", metadata !345, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !373, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!373 = metadata !{i32 589846, metadata !374, metadata !"wchar_t", metadata !374, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !361} ; [ DW_TAG_typedef ]
!374 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !346} ; [ DW_TAG_file_type ]
!375 = metadata !{i32 589837, metadata !352, metadata !"__state", metadata !355, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !376} ; [ DW_TAG_member ]
!376 = metadata !{i32 589846, metadata !377, metadata !"__mbstate_t", metadata !377, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !378} ; [ DW_TAG_typedef ]
!377 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !346} ; [ DW_TAG_file_type ]
!378 = metadata !{i32 589843, metadata !345, metadata !"", metadata !377, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !379, i32 0, null} ; [ DW_TAG_structure_type ]
!379 = metadata !{metadata !380, metadata !381}
!380 = metadata !{i32 589837, metadata !378, metadata !"__mask", metadata !377, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !373} ; [ DW_TAG_member ]
!381 = metadata !{i32 589837, metadata !378, metadata !"__wc", metadata !377, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !373} ; [ DW_TAG_member ]
!382 = metadata !{i32 589839, metadata !345, metadata !"", metadata !345, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !383} ; [ DW_TAG_pointer_type ]
!383 = metadata !{i32 589862, metadata !345, metadata !"", metadata !345, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !384} ; [ DW_TAG_const_type ]
!384 = metadata !{i32 589860, metadata !345, metadata !"char", metadata !345, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!385 = metadata !{i32 589870, i32 0, metadata !386, metadata !"ferror_unlocked", metadata !"ferror_unlocked", metadata !"ferror_unlocked", metadata !388, i32 15, metadata !389, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @ferror_
!386 = metadata !{i32 589865, metadata !"ferror_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !387} ; [ DW_TAG_file_type ]
!387 = metadata !{i32 589841, i32 0, i32 1, metadata !"ferror_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!388 = metadata !{i32 589865, metadata !"ferror.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !387} ; [ DW_TAG_file_type ]
!389 = metadata !{i32 589845, metadata !386, metadata !"", metadata !386, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !390, i32 0, null} ; [ DW_TAG_subroutine_type ]
!390 = metadata !{metadata !391, metadata !392}
!391 = metadata !{i32 589860, metadata !386, metadata !"int", metadata !386, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!392 = metadata !{i32 589839, metadata !386, metadata !"", metadata !386, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !393} ; [ DW_TAG_pointer_type ]
!393 = metadata !{i32 589846, metadata !394, metadata !"FILE", metadata !394, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !395} ; [ DW_TAG_typedef ]
!394 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !387} ; [ DW_TAG_file_type ]
!395 = metadata !{i32 589843, metadata !386, metadata !"__STDIO_FILE_STRUCT", metadata !394, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !396, i32 0, null} ; [ DW_TAG_structure_type ]
!396 = metadata !{metadata !397, metadata !400, metadata !403, metadata !404, metadata !406, metadata !407, metadata !408, metadata !409, metadata !410, metadata !411, metadata !413, metadata !417}
!397 = metadata !{i32 589837, metadata !395, metadata !"__modeflags", metadata !398, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !399} ; [ DW_TAG_member ]
!398 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !387} ; [ DW_TAG_file_type ]
!399 = metadata !{i32 589860, metadata !386, metadata !"short unsigned int", metadata !386, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!400 = metadata !{i32 589837, metadata !395, metadata !"__ungot_width", metadata !398, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !401} ; [ DW_TAG_member ]
!401 = metadata !{i32 589825, metadata !386, metadata !"", metadata !386, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !402, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!402 = metadata !{i32 589860, metadata !386, metadata !"unsigned char", metadata !386, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!403 = metadata !{i32 589837, metadata !395, metadata !"__filedes", metadata !398, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !391} ; [ DW_TAG_member ]
!404 = metadata !{i32 589837, metadata !395, metadata !"__bufstart", metadata !398, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !405} ; [ DW_TAG_member ]
!405 = metadata !{i32 589839, metadata !386, metadata !"", metadata !386, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !402} ; [ DW_TAG_pointer_type ]
!406 = metadata !{i32 589837, metadata !395, metadata !"__bufend", metadata !398, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !405} ; [ DW_TAG_member ]
!407 = metadata !{i32 589837, metadata !395, metadata !"__bufpos", metadata !398, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !405} ; [ DW_TAG_member ]
!408 = metadata !{i32 589837, metadata !395, metadata !"__bufread", metadata !398, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !405} ; [ DW_TAG_member ]
!409 = metadata !{i32 589837, metadata !395, metadata !"__bufgetc_u", metadata !398, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !405} ; [ DW_TAG_member ]
!410 = metadata !{i32 589837, metadata !395, metadata !"__bufputc_u", metadata !398, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !405} ; [ DW_TAG_member ]
!411 = metadata !{i32 589837, metadata !395, metadata !"__nextopen", metadata !398, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !412} ; [ DW_TAG_member ]
!412 = metadata !{i32 589839, metadata !386, metadata !"", metadata !386, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !395} ; [ DW_TAG_pointer_type ]
!413 = metadata !{i32 589837, metadata !395, metadata !"__ungot", metadata !398, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !414} ; [ DW_TAG_member ]
!414 = metadata !{i32 589825, metadata !386, metadata !"", metadata !386, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !415, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!415 = metadata !{i32 589846, metadata !416, metadata !"wchar_t", metadata !416, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !391} ; [ DW_TAG_typedef ]
!416 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !387} ; [ DW_TAG_file_type ]
!417 = metadata !{i32 589837, metadata !395, metadata !"__state", metadata !398, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !418} ; [ DW_TAG_member ]
!418 = metadata !{i32 589846, metadata !419, metadata !"__mbstate_t", metadata !419, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !420} ; [ DW_TAG_typedef ]
!419 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !387} ; [ DW_TAG_file_type ]
!420 = metadata !{i32 589843, metadata !386, metadata !"", metadata !419, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !421, i32 0, null} ; [ DW_TAG_structure_type ]
!421 = metadata !{metadata !422, metadata !423}
!422 = metadata !{i32 589837, metadata !420, metadata !"__mask", metadata !419, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !415} ; [ DW_TAG_member ]
!423 = metadata !{i32 589837, metadata !420, metadata !"__wc", metadata !419, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !415} ; [ DW_TAG_member ]
!424 = metadata !{i32 589870, i32 0, metadata !425, metadata !"fflush_unlocked", metadata !"fflush_unlocked", metadata !"fflush_unlocked", metadata !427, i32 70, metadata !428, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @fflush_
!425 = metadata !{i32 589865, metadata !"fflush_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !426} ; [ DW_TAG_file_type ]
!426 = metadata !{i32 589841, i32 0, i32 1, metadata !"fflush_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!427 = metadata !{i32 589865, metadata !"fflush.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !426} ; [ DW_TAG_file_type ]
!428 = metadata !{i32 589845, metadata !425, metadata !"", metadata !425, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !429, i32 0, null} ; [ DW_TAG_subroutine_type ]
!429 = metadata !{metadata !430, metadata !431}
!430 = metadata !{i32 589860, metadata !425, metadata !"int", metadata !425, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!431 = metadata !{i32 589839, metadata !425, metadata !"", metadata !425, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !432} ; [ DW_TAG_pointer_type ]
!432 = metadata !{i32 589846, metadata !433, metadata !"FILE", metadata !433, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !434} ; [ DW_TAG_typedef ]
!433 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !426} ; [ DW_TAG_file_type ]
!434 = metadata !{i32 589843, metadata !425, metadata !"__STDIO_FILE_STRUCT", metadata !433, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !435, i32 0, null} ; [ DW_TAG_structure_type ]
!435 = metadata !{metadata !436, metadata !439, metadata !442, metadata !443, metadata !445, metadata !446, metadata !447, metadata !448, metadata !449, metadata !450, metadata !452, metadata !456}
!436 = metadata !{i32 589837, metadata !434, metadata !"__modeflags", metadata !437, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !438} ; [ DW_TAG_member ]
!437 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !426} ; [ DW_TAG_file_type ]
!438 = metadata !{i32 589860, metadata !425, metadata !"short unsigned int", metadata !425, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!439 = metadata !{i32 589837, metadata !434, metadata !"__ungot_width", metadata !437, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !440} ; [ DW_TAG_member ]
!440 = metadata !{i32 589825, metadata !425, metadata !"", metadata !425, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !441, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!441 = metadata !{i32 589860, metadata !425, metadata !"unsigned char", metadata !425, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!442 = metadata !{i32 589837, metadata !434, metadata !"__filedes", metadata !437, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !430} ; [ DW_TAG_member ]
!443 = metadata !{i32 589837, metadata !434, metadata !"__bufstart", metadata !437, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !444} ; [ DW_TAG_member ]
!444 = metadata !{i32 589839, metadata !425, metadata !"", metadata !425, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !441} ; [ DW_TAG_pointer_type ]
!445 = metadata !{i32 589837, metadata !434, metadata !"__bufend", metadata !437, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !444} ; [ DW_TAG_member ]
!446 = metadata !{i32 589837, metadata !434, metadata !"__bufpos", metadata !437, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !444} ; [ DW_TAG_member ]
!447 = metadata !{i32 589837, metadata !434, metadata !"__bufread", metadata !437, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !444} ; [ DW_TAG_member ]
!448 = metadata !{i32 589837, metadata !434, metadata !"__bufgetc_u", metadata !437, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !444} ; [ DW_TAG_member ]
!449 = metadata !{i32 589837, metadata !434, metadata !"__bufputc_u", metadata !437, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !444} ; [ DW_TAG_member ]
!450 = metadata !{i32 589837, metadata !434, metadata !"__nextopen", metadata !437, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !451} ; [ DW_TAG_member ]
!451 = metadata !{i32 589839, metadata !425, metadata !"", metadata !425, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !434} ; [ DW_TAG_pointer_type ]
!452 = metadata !{i32 589837, metadata !434, metadata !"__ungot", metadata !437, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !453} ; [ DW_TAG_member ]
!453 = metadata !{i32 589825, metadata !425, metadata !"", metadata !425, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !454, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!454 = metadata !{i32 589846, metadata !455, metadata !"wchar_t", metadata !455, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !430} ; [ DW_TAG_typedef ]
!455 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !426} ; [ DW_TAG_file_type ]
!456 = metadata !{i32 589837, metadata !434, metadata !"__state", metadata !437, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !457} ; [ DW_TAG_member ]
!457 = metadata !{i32 589846, metadata !458, metadata !"__mbstate_t", metadata !458, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !459} ; [ DW_TAG_typedef ]
!458 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !426} ; [ DW_TAG_file_type ]
!459 = metadata !{i32 589843, metadata !425, metadata !"", metadata !458, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !460, i32 0, null} ; [ DW_TAG_structure_type ]
!460 = metadata !{metadata !461, metadata !462}
!461 = metadata !{i32 589837, metadata !459, metadata !"__mask", metadata !458, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !454} ; [ DW_TAG_member ]
!462 = metadata !{i32 589837, metadata !459, metadata !"__wc", metadata !458, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !454} ; [ DW_TAG_member ]
!463 = metadata !{i32 589870, i32 0, metadata !464, metadata !"fileno_unlocked", metadata !"fileno_unlocked", metadata !"fileno_unlocked", metadata !466, i32 15, metadata !467, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @fileno_
!464 = metadata !{i32 589865, metadata !"fileno_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !465} ; [ DW_TAG_file_type ]
!465 = metadata !{i32 589841, i32 0, i32 1, metadata !"fileno_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!466 = metadata !{i32 589865, metadata !"fileno.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !465} ; [ DW_TAG_file_type ]
!467 = metadata !{i32 589845, metadata !464, metadata !"", metadata !464, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !468, i32 0, null} ; [ DW_TAG_subroutine_type ]
!468 = metadata !{metadata !469, metadata !470}
!469 = metadata !{i32 589860, metadata !464, metadata !"int", metadata !464, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!470 = metadata !{i32 589839, metadata !464, metadata !"", metadata !464, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !471} ; [ DW_TAG_pointer_type ]
!471 = metadata !{i32 589846, metadata !472, metadata !"FILE", metadata !472, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !473} ; [ DW_TAG_typedef ]
!472 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !465} ; [ DW_TAG_file_type ]
!473 = metadata !{i32 589843, metadata !464, metadata !"__STDIO_FILE_STRUCT", metadata !472, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !474, i32 0, null} ; [ DW_TAG_structure_type ]
!474 = metadata !{metadata !475, metadata !478, metadata !481, metadata !482, metadata !484, metadata !485, metadata !486, metadata !487, metadata !488, metadata !489, metadata !491, metadata !495}
!475 = metadata !{i32 589837, metadata !473, metadata !"__modeflags", metadata !476, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !477} ; [ DW_TAG_member ]
!476 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !465} ; [ DW_TAG_file_type ]
!477 = metadata !{i32 589860, metadata !464, metadata !"short unsigned int", metadata !464, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!478 = metadata !{i32 589837, metadata !473, metadata !"__ungot_width", metadata !476, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !479} ; [ DW_TAG_member ]
!479 = metadata !{i32 589825, metadata !464, metadata !"", metadata !464, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !480, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!480 = metadata !{i32 589860, metadata !464, metadata !"unsigned char", metadata !464, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!481 = metadata !{i32 589837, metadata !473, metadata !"__filedes", metadata !476, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !469} ; [ DW_TAG_member ]
!482 = metadata !{i32 589837, metadata !473, metadata !"__bufstart", metadata !476, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !483} ; [ DW_TAG_member ]
!483 = metadata !{i32 589839, metadata !464, metadata !"", metadata !464, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !480} ; [ DW_TAG_pointer_type ]
!484 = metadata !{i32 589837, metadata !473, metadata !"__bufend", metadata !476, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !483} ; [ DW_TAG_member ]
!485 = metadata !{i32 589837, metadata !473, metadata !"__bufpos", metadata !476, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !483} ; [ DW_TAG_member ]
!486 = metadata !{i32 589837, metadata !473, metadata !"__bufread", metadata !476, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !483} ; [ DW_TAG_member ]
!487 = metadata !{i32 589837, metadata !473, metadata !"__bufgetc_u", metadata !476, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !483} ; [ DW_TAG_member ]
!488 = metadata !{i32 589837, metadata !473, metadata !"__bufputc_u", metadata !476, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !483} ; [ DW_TAG_member ]
!489 = metadata !{i32 589837, metadata !473, metadata !"__nextopen", metadata !476, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !490} ; [ DW_TAG_member ]
!490 = metadata !{i32 589839, metadata !464, metadata !"", metadata !464, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !473} ; [ DW_TAG_pointer_type ]
!491 = metadata !{i32 589837, metadata !473, metadata !"__ungot", metadata !476, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !492} ; [ DW_TAG_member ]
!492 = metadata !{i32 589825, metadata !464, metadata !"", metadata !464, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !493, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!493 = metadata !{i32 589846, metadata !494, metadata !"wchar_t", metadata !494, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !469} ; [ DW_TAG_typedef ]
!494 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !465} ; [ DW_TAG_file_type ]
!495 = metadata !{i32 589837, metadata !473, metadata !"__state", metadata !476, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !496} ; [ DW_TAG_member ]
!496 = metadata !{i32 589846, metadata !497, metadata !"__mbstate_t", metadata !497, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !498} ; [ DW_TAG_typedef ]
!497 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !465} ; [ DW_TAG_file_type ]
!498 = metadata !{i32 589843, metadata !464, metadata !"", metadata !497, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !499, i32 0, null} ; [ DW_TAG_structure_type ]
!499 = metadata !{metadata !500, metadata !501}
!500 = metadata !{i32 589837, metadata !498, metadata !"__mask", metadata !497, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !493} ; [ DW_TAG_member ]
!501 = metadata !{i32 589837, metadata !498, metadata !"__wc", metadata !497, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !493} ; [ DW_TAG_member ]
!502 = metadata !{i32 589870, i32 0, metadata !503, metadata !"fprintf", metadata !"fprintf", metadata !"fprintf", metadata !503, i32 15, metadata !505, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i8*, ...)* @fprintf} ; [ DW_TAG_s
!503 = metadata !{i32 589865, metadata !"fprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !504} ; [ DW_TAG_file_type ]
!504 = metadata !{i32 589841, i32 0, i32 1, metadata !"fprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!505 = metadata !{i32 589845, metadata !503, metadata !"", metadata !503, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !506, i32 0, null} ; [ DW_TAG_subroutine_type ]
!506 = metadata !{metadata !507, metadata !508, metadata !540}
!507 = metadata !{i32 589860, metadata !503, metadata !"int", metadata !503, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!508 = metadata !{i32 589839, metadata !503, metadata !"", metadata !503, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !509} ; [ DW_TAG_pointer_type ]
!509 = metadata !{i32 589846, metadata !510, metadata !"FILE", metadata !510, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !511} ; [ DW_TAG_typedef ]
!510 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !504} ; [ DW_TAG_file_type ]
!511 = metadata !{i32 589843, metadata !503, metadata !"__STDIO_FILE_STRUCT", metadata !510, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !512, i32 0, null} ; [ DW_TAG_structure_type ]
!512 = metadata !{metadata !513, metadata !516, metadata !519, metadata !520, metadata !522, metadata !523, metadata !524, metadata !525, metadata !526, metadata !527, metadata !529, metadata !533}
!513 = metadata !{i32 589837, metadata !511, metadata !"__modeflags", metadata !514, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !515} ; [ DW_TAG_member ]
!514 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !504} ; [ DW_TAG_file_type ]
!515 = metadata !{i32 589860, metadata !503, metadata !"short unsigned int", metadata !503, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!516 = metadata !{i32 589837, metadata !511, metadata !"__ungot_width", metadata !514, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !517} ; [ DW_TAG_member ]
!517 = metadata !{i32 589825, metadata !503, metadata !"", metadata !503, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !518, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!518 = metadata !{i32 589860, metadata !503, metadata !"unsigned char", metadata !503, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!519 = metadata !{i32 589837, metadata !511, metadata !"__filedes", metadata !514, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !507} ; [ DW_TAG_member ]
!520 = metadata !{i32 589837, metadata !511, metadata !"__bufstart", metadata !514, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !521} ; [ DW_TAG_member ]
!521 = metadata !{i32 589839, metadata !503, metadata !"", metadata !503, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !518} ; [ DW_TAG_pointer_type ]
!522 = metadata !{i32 589837, metadata !511, metadata !"__bufend", metadata !514, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !521} ; [ DW_TAG_member ]
!523 = metadata !{i32 589837, metadata !511, metadata !"__bufpos", metadata !514, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !521} ; [ DW_TAG_member ]
!524 = metadata !{i32 589837, metadata !511, metadata !"__bufread", metadata !514, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !521} ; [ DW_TAG_member ]
!525 = metadata !{i32 589837, metadata !511, metadata !"__bufgetc_u", metadata !514, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !521} ; [ DW_TAG_member ]
!526 = metadata !{i32 589837, metadata !511, metadata !"__bufputc_u", metadata !514, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !521} ; [ DW_TAG_member ]
!527 = metadata !{i32 589837, metadata !511, metadata !"__nextopen", metadata !514, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !528} ; [ DW_TAG_member ]
!528 = metadata !{i32 589839, metadata !503, metadata !"", metadata !503, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !511} ; [ DW_TAG_pointer_type ]
!529 = metadata !{i32 589837, metadata !511, metadata !"__ungot", metadata !514, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !530} ; [ DW_TAG_member ]
!530 = metadata !{i32 589825, metadata !503, metadata !"", metadata !503, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !531, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!531 = metadata !{i32 589846, metadata !532, metadata !"wchar_t", metadata !532, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !507} ; [ DW_TAG_typedef ]
!532 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !504} ; [ DW_TAG_file_type ]
!533 = metadata !{i32 589837, metadata !511, metadata !"__state", metadata !514, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !534} ; [ DW_TAG_member ]
!534 = metadata !{i32 589846, metadata !535, metadata !"__mbstate_t", metadata !535, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !536} ; [ DW_TAG_typedef ]
!535 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !504} ; [ DW_TAG_file_type ]
!536 = metadata !{i32 589843, metadata !503, metadata !"", metadata !535, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !537, i32 0, null} ; [ DW_TAG_structure_type ]
!537 = metadata !{metadata !538, metadata !539}
!538 = metadata !{i32 589837, metadata !536, metadata !"__mask", metadata !535, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !531} ; [ DW_TAG_member ]
!539 = metadata !{i32 589837, metadata !536, metadata !"__wc", metadata !535, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !531} ; [ DW_TAG_member ]
!540 = metadata !{i32 589839, metadata !503, metadata !"", metadata !503, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !541} ; [ DW_TAG_pointer_type ]
!541 = metadata !{i32 589862, metadata !503, metadata !"", metadata !503, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !542} ; [ DW_TAG_const_type ]
!542 = metadata !{i32 589860, metadata !503, metadata !"char", metadata !503, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!543 = metadata !{i32 589870, i32 0, metadata !544, metadata !"fputs_unlocked", metadata !"fputs_unlocked", metadata !"fputs_unlocked", metadata !546, i32 24, metadata !547, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, %4*)* @fputs
!544 = metadata !{i32 589865, metadata !"fputs_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !545} ; [ DW_TAG_file_type ]
!545 = metadata !{i32 589841, i32 0, i32 1, metadata !"fputs_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!546 = metadata !{i32 589865, metadata !"fputs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !545} ; [ DW_TAG_file_type ]
!547 = metadata !{i32 589845, metadata !544, metadata !"", metadata !544, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !548, i32 0, null} ; [ DW_TAG_subroutine_type ]
!548 = metadata !{metadata !549, metadata !550, metadata !553}
!549 = metadata !{i32 589860, metadata !544, metadata !"int", metadata !544, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!550 = metadata !{i32 589839, metadata !544, metadata !"", metadata !544, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !551} ; [ DW_TAG_pointer_type ]
!551 = metadata !{i32 589862, metadata !544, metadata !"", metadata !544, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !552} ; [ DW_TAG_const_type ]
!552 = metadata !{i32 589860, metadata !544, metadata !"char", metadata !544, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!553 = metadata !{i32 589839, metadata !544, metadata !"", metadata !544, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !554} ; [ DW_TAG_pointer_type ]
!554 = metadata !{i32 589846, metadata !555, metadata !"FILE", metadata !555, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !556} ; [ DW_TAG_typedef ]
!555 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !545} ; [ DW_TAG_file_type ]
!556 = metadata !{i32 589843, metadata !544, metadata !"__STDIO_FILE_STRUCT", metadata !555, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !557, i32 0, null} ; [ DW_TAG_structure_type ]
!557 = metadata !{metadata !558, metadata !561, metadata !564, metadata !565, metadata !567, metadata !568, metadata !569, metadata !570, metadata !571, metadata !572, metadata !574, metadata !578}
!558 = metadata !{i32 589837, metadata !556, metadata !"__modeflags", metadata !559, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !560} ; [ DW_TAG_member ]
!559 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !545} ; [ DW_TAG_file_type ]
!560 = metadata !{i32 589860, metadata !544, metadata !"short unsigned int", metadata !544, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!561 = metadata !{i32 589837, metadata !556, metadata !"__ungot_width", metadata !559, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !562} ; [ DW_TAG_member ]
!562 = metadata !{i32 589825, metadata !544, metadata !"", metadata !544, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !563, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!563 = metadata !{i32 589860, metadata !544, metadata !"unsigned char", metadata !544, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!564 = metadata !{i32 589837, metadata !556, metadata !"__filedes", metadata !559, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !549} ; [ DW_TAG_member ]
!565 = metadata !{i32 589837, metadata !556, metadata !"__bufstart", metadata !559, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !566} ; [ DW_TAG_member ]
!566 = metadata !{i32 589839, metadata !544, metadata !"", metadata !544, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !563} ; [ DW_TAG_pointer_type ]
!567 = metadata !{i32 589837, metadata !556, metadata !"__bufend", metadata !559, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !566} ; [ DW_TAG_member ]
!568 = metadata !{i32 589837, metadata !556, metadata !"__bufpos", metadata !559, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !566} ; [ DW_TAG_member ]
!569 = metadata !{i32 589837, metadata !556, metadata !"__bufread", metadata !559, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !566} ; [ DW_TAG_member ]
!570 = metadata !{i32 589837, metadata !556, metadata !"__bufgetc_u", metadata !559, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !566} ; [ DW_TAG_member ]
!571 = metadata !{i32 589837, metadata !556, metadata !"__bufputc_u", metadata !559, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !566} ; [ DW_TAG_member ]
!572 = metadata !{i32 589837, metadata !556, metadata !"__nextopen", metadata !559, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !573} ; [ DW_TAG_member ]
!573 = metadata !{i32 589839, metadata !544, metadata !"", metadata !544, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !556} ; [ DW_TAG_pointer_type ]
!574 = metadata !{i32 589837, metadata !556, metadata !"__ungot", metadata !559, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !575} ; [ DW_TAG_member ]
!575 = metadata !{i32 589825, metadata !544, metadata !"", metadata !544, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !576, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!576 = metadata !{i32 589846, metadata !577, metadata !"wchar_t", metadata !577, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !549} ; [ DW_TAG_typedef ]
!577 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !545} ; [ DW_TAG_file_type ]
!578 = metadata !{i32 589837, metadata !556, metadata !"__state", metadata !559, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !579} ; [ DW_TAG_member ]
!579 = metadata !{i32 589846, metadata !580, metadata !"__mbstate_t", metadata !580, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !581} ; [ DW_TAG_typedef ]
!580 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !545} ; [ DW_TAG_file_type ]
!581 = metadata !{i32 589843, metadata !544, metadata !"", metadata !580, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !582, i32 0, null} ; [ DW_TAG_structure_type ]
!582 = metadata !{metadata !583, metadata !584}
!583 = metadata !{i32 589837, metadata !581, metadata !"__mask", metadata !580, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !576} ; [ DW_TAG_member ]
!584 = metadata !{i32 589837, metadata !581, metadata !"__wc", metadata !580, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !576} ; [ DW_TAG_member ]
!585 = metadata !{i32 589870, i32 0, metadata !586, metadata !"fscanf", metadata !"fscanf", metadata !"fscanf", metadata !588, i32 173, metadata !589, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i8*, ...)* @fscanf} ; [ DW_TAG_subp
!586 = metadata !{i32 589865, metadata !"fscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !587} ; [ DW_TAG_file_type ]
!587 = metadata !{i32 589841, i32 0, i32 1, metadata !"fscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!588 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !587} ; [ DW_TAG_file_type ]
!589 = metadata !{i32 589845, metadata !586, metadata !"", metadata !586, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !590, i32 0, null} ; [ DW_TAG_subroutine_type ]
!590 = metadata !{metadata !591, metadata !592, metadata !624}
!591 = metadata !{i32 589860, metadata !586, metadata !"int", metadata !586, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!592 = metadata !{i32 589839, metadata !586, metadata !"", metadata !586, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !593} ; [ DW_TAG_pointer_type ]
!593 = metadata !{i32 589846, metadata !594, metadata !"FILE", metadata !594, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !595} ; [ DW_TAG_typedef ]
!594 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !587} ; [ DW_TAG_file_type ]
!595 = metadata !{i32 589843, metadata !586, metadata !"__STDIO_FILE_STRUCT", metadata !594, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !596, i32 0, null} ; [ DW_TAG_structure_type ]
!596 = metadata !{metadata !597, metadata !600, metadata !603, metadata !604, metadata !606, metadata !607, metadata !608, metadata !609, metadata !610, metadata !611, metadata !613, metadata !617}
!597 = metadata !{i32 589837, metadata !595, metadata !"__modeflags", metadata !598, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !599} ; [ DW_TAG_member ]
!598 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !587} ; [ DW_TAG_file_type ]
!599 = metadata !{i32 589860, metadata !586, metadata !"short unsigned int", metadata !586, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!600 = metadata !{i32 589837, metadata !595, metadata !"__ungot_width", metadata !598, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !601} ; [ DW_TAG_member ]
!601 = metadata !{i32 589825, metadata !586, metadata !"", metadata !586, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !602, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!602 = metadata !{i32 589860, metadata !586, metadata !"unsigned char", metadata !586, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!603 = metadata !{i32 589837, metadata !595, metadata !"__filedes", metadata !598, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !591} ; [ DW_TAG_member ]
!604 = metadata !{i32 589837, metadata !595, metadata !"__bufstart", metadata !598, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !605} ; [ DW_TAG_member ]
!605 = metadata !{i32 589839, metadata !586, metadata !"", metadata !586, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !602} ; [ DW_TAG_pointer_type ]
!606 = metadata !{i32 589837, metadata !595, metadata !"__bufend", metadata !598, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !605} ; [ DW_TAG_member ]
!607 = metadata !{i32 589837, metadata !595, metadata !"__bufpos", metadata !598, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !605} ; [ DW_TAG_member ]
!608 = metadata !{i32 589837, metadata !595, metadata !"__bufread", metadata !598, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !605} ; [ DW_TAG_member ]
!609 = metadata !{i32 589837, metadata !595, metadata !"__bufgetc_u", metadata !598, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !605} ; [ DW_TAG_member ]
!610 = metadata !{i32 589837, metadata !595, metadata !"__bufputc_u", metadata !598, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !605} ; [ DW_TAG_member ]
!611 = metadata !{i32 589837, metadata !595, metadata !"__nextopen", metadata !598, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !612} ; [ DW_TAG_member ]
!612 = metadata !{i32 589839, metadata !586, metadata !"", metadata !586, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !595} ; [ DW_TAG_pointer_type ]
!613 = metadata !{i32 589837, metadata !595, metadata !"__ungot", metadata !598, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !614} ; [ DW_TAG_member ]
!614 = metadata !{i32 589825, metadata !586, metadata !"", metadata !586, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !615, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!615 = metadata !{i32 589846, metadata !616, metadata !"wchar_t", metadata !616, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !591} ; [ DW_TAG_typedef ]
!616 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !587} ; [ DW_TAG_file_type ]
!617 = metadata !{i32 589837, metadata !595, metadata !"__state", metadata !598, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !618} ; [ DW_TAG_member ]
!618 = metadata !{i32 589846, metadata !619, metadata !"__mbstate_t", metadata !619, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !620} ; [ DW_TAG_typedef ]
!619 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !587} ; [ DW_TAG_file_type ]
!620 = metadata !{i32 589843, metadata !586, metadata !"", metadata !619, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !621, i32 0, null} ; [ DW_TAG_structure_type ]
!621 = metadata !{metadata !622, metadata !623}
!622 = metadata !{i32 589837, metadata !620, metadata !"__mask", metadata !619, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !615} ; [ DW_TAG_member ]
!623 = metadata !{i32 589837, metadata !620, metadata !"__wc", metadata !619, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !615} ; [ DW_TAG_member ]
!624 = metadata !{i32 589839, metadata !586, metadata !"", metadata !586, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !625} ; [ DW_TAG_pointer_type ]
!625 = metadata !{i32 589862, metadata !586, metadata !"", metadata !586, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !626} ; [ DW_TAG_const_type ]
!626 = metadata !{i32 589860, metadata !586, metadata !"char", metadata !586, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!627 = metadata !{i32 589870, i32 0, metadata !628, metadata !"fseek", metadata !"fseek", metadata !"fseek", metadata !628, i32 25, metadata !630, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i64, i32)* @fseek} ; [ DW_TAG_subprogra
!628 = metadata !{i32 589865, metadata !"fseeko.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !629} ; [ DW_TAG_file_type ]
!629 = metadata !{i32 589841, i32 0, i32 1, metadata !"fseeko.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!630 = metadata !{i32 589845, metadata !628, metadata !"", metadata !628, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !631, i32 0, null} ; [ DW_TAG_subroutine_type ]
!631 = metadata !{metadata !632, metadata !633, metadata !665, metadata !632}
!632 = metadata !{i32 589860, metadata !628, metadata !"int", metadata !628, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!633 = metadata !{i32 589839, metadata !628, metadata !"", metadata !628, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !634} ; [ DW_TAG_pointer_type ]
!634 = metadata !{i32 589846, metadata !635, metadata !"FILE", metadata !635, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !636} ; [ DW_TAG_typedef ]
!635 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !629} ; [ DW_TAG_file_type ]
!636 = metadata !{i32 589843, metadata !628, metadata !"__STDIO_FILE_STRUCT", metadata !635, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !637, i32 0, null} ; [ DW_TAG_structure_type ]
!637 = metadata !{metadata !638, metadata !641, metadata !644, metadata !645, metadata !647, metadata !648, metadata !649, metadata !650, metadata !651, metadata !652, metadata !654, metadata !658}
!638 = metadata !{i32 589837, metadata !636, metadata !"__modeflags", metadata !639, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !640} ; [ DW_TAG_member ]
!639 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !629} ; [ DW_TAG_file_type ]
!640 = metadata !{i32 589860, metadata !628, metadata !"short unsigned int", metadata !628, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!641 = metadata !{i32 589837, metadata !636, metadata !"__ungot_width", metadata !639, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !642} ; [ DW_TAG_member ]
!642 = metadata !{i32 589825, metadata !628, metadata !"", metadata !628, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !643, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!643 = metadata !{i32 589860, metadata !628, metadata !"unsigned char", metadata !628, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!644 = metadata !{i32 589837, metadata !636, metadata !"__filedes", metadata !639, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !632} ; [ DW_TAG_member ]
!645 = metadata !{i32 589837, metadata !636, metadata !"__bufstart", metadata !639, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !646} ; [ DW_TAG_member ]
!646 = metadata !{i32 589839, metadata !628, metadata !"", metadata !628, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !643} ; [ DW_TAG_pointer_type ]
!647 = metadata !{i32 589837, metadata !636, metadata !"__bufend", metadata !639, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !646} ; [ DW_TAG_member ]
!648 = metadata !{i32 589837, metadata !636, metadata !"__bufpos", metadata !639, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !646} ; [ DW_TAG_member ]
!649 = metadata !{i32 589837, metadata !636, metadata !"__bufread", metadata !639, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !646} ; [ DW_TAG_member ]
!650 = metadata !{i32 589837, metadata !636, metadata !"__bufgetc_u", metadata !639, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !646} ; [ DW_TAG_member ]
!651 = metadata !{i32 589837, metadata !636, metadata !"__bufputc_u", metadata !639, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !646} ; [ DW_TAG_member ]
!652 = metadata !{i32 589837, metadata !636, metadata !"__nextopen", metadata !639, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !653} ; [ DW_TAG_member ]
!653 = metadata !{i32 589839, metadata !628, metadata !"", metadata !628, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !636} ; [ DW_TAG_pointer_type ]
!654 = metadata !{i32 589837, metadata !636, metadata !"__ungot", metadata !639, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !655} ; [ DW_TAG_member ]
!655 = metadata !{i32 589825, metadata !628, metadata !"", metadata !628, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !656, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!656 = metadata !{i32 589846, metadata !657, metadata !"wchar_t", metadata !657, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !632} ; [ DW_TAG_typedef ]
!657 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !629} ; [ DW_TAG_file_type ]
!658 = metadata !{i32 589837, metadata !636, metadata !"__state", metadata !639, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !659} ; [ DW_TAG_member ]
!659 = metadata !{i32 589846, metadata !660, metadata !"__mbstate_t", metadata !660, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !661} ; [ DW_TAG_typedef ]
!660 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !629} ; [ DW_TAG_file_type ]
!661 = metadata !{i32 589843, metadata !628, metadata !"", metadata !660, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !662, i32 0, null} ; [ DW_TAG_structure_type ]
!662 = metadata !{metadata !663, metadata !664}
!663 = metadata !{i32 589837, metadata !661, metadata !"__mask", metadata !660, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !656} ; [ DW_TAG_member ]
!664 = metadata !{i32 589837, metadata !661, metadata !"__wc", metadata !660, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !656} ; [ DW_TAG_member ]
!665 = metadata !{i32 589860, metadata !628, metadata !"long int", metadata !628, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!666 = metadata !{i32 589870, i32 0, metadata !667, metadata !"fwrite_unlocked", metadata !"fwrite_unlocked", metadata !"fwrite_unlocked", metadata !669, i32 16, metadata !670, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64, i64,
!667 = metadata !{i32 589865, metadata !"fwrite_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !668} ; [ DW_TAG_file_type ]
!668 = metadata !{i32 589841, i32 0, i32 1, metadata !"fwrite_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!669 = metadata !{i32 589865, metadata !"fwrite.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !668} ; [ DW_TAG_file_type ]
!670 = metadata !{i32 589845, metadata !667, metadata !"", metadata !667, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !671, i32 0, null} ; [ DW_TAG_subroutine_type ]
!671 = metadata !{metadata !672, metadata !675, metadata !672, metadata !672, metadata !676}
!672 = metadata !{i32 589846, metadata !673, metadata !"size_t", metadata !673, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !674} ; [ DW_TAG_typedef ]
!673 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !668} ; [ DW_TAG_file_type ]
!674 = metadata !{i32 589860, metadata !667, metadata !"long unsigned int", metadata !667, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!675 = metadata !{i32 589839, metadata !667, metadata !"", metadata !667, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!676 = metadata !{i32 589839, metadata !667, metadata !"", metadata !667, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !677} ; [ DW_TAG_pointer_type ]
!677 = metadata !{i32 589846, metadata !678, metadata !"FILE", metadata !678, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !679} ; [ DW_TAG_typedef ]
!678 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !668} ; [ DW_TAG_file_type ]
!679 = metadata !{i32 589843, metadata !667, metadata !"__STDIO_FILE_STRUCT", metadata !678, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !680, i32 0, null} ; [ DW_TAG_structure_type ]
!680 = metadata !{metadata !681, metadata !684, metadata !687, metadata !689, metadata !691, metadata !692, metadata !693, metadata !694, metadata !695, metadata !696, metadata !698, metadata !701}
!681 = metadata !{i32 589837, metadata !679, metadata !"__modeflags", metadata !682, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !683} ; [ DW_TAG_member ]
!682 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !668} ; [ DW_TAG_file_type ]
!683 = metadata !{i32 589860, metadata !667, metadata !"short unsigned int", metadata !667, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!684 = metadata !{i32 589837, metadata !679, metadata !"__ungot_width", metadata !682, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !685} ; [ DW_TAG_member ]
!685 = metadata !{i32 589825, metadata !667, metadata !"", metadata !667, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !686, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!686 = metadata !{i32 589860, metadata !667, metadata !"unsigned char", metadata !667, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!687 = metadata !{i32 589837, metadata !679, metadata !"__filedes", metadata !682, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !688} ; [ DW_TAG_member ]
!688 = metadata !{i32 589860, metadata !667, metadata !"int", metadata !667, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!689 = metadata !{i32 589837, metadata !679, metadata !"__bufstart", metadata !682, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !690} ; [ DW_TAG_member ]
!690 = metadata !{i32 589839, metadata !667, metadata !"", metadata !667, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !686} ; [ DW_TAG_pointer_type ]
!691 = metadata !{i32 589837, metadata !679, metadata !"__bufend", metadata !682, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !690} ; [ DW_TAG_member ]
!692 = metadata !{i32 589837, metadata !679, metadata !"__bufpos", metadata !682, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !690} ; [ DW_TAG_member ]
!693 = metadata !{i32 589837, metadata !679, metadata !"__bufread", metadata !682, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !690} ; [ DW_TAG_member ]
!694 = metadata !{i32 589837, metadata !679, metadata !"__bufgetc_u", metadata !682, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !690} ; [ DW_TAG_member ]
!695 = metadata !{i32 589837, metadata !679, metadata !"__bufputc_u", metadata !682, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !690} ; [ DW_TAG_member ]
!696 = metadata !{i32 589837, metadata !679, metadata !"__nextopen", metadata !682, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !697} ; [ DW_TAG_member ]
!697 = metadata !{i32 589839, metadata !667, metadata !"", metadata !667, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !679} ; [ DW_TAG_pointer_type ]
!698 = metadata !{i32 589837, metadata !679, metadata !"__ungot", metadata !682, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !699} ; [ DW_TAG_member ]
!699 = metadata !{i32 589825, metadata !667, metadata !"", metadata !667, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !700, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!700 = metadata !{i32 589846, metadata !673, metadata !"wchar_t", metadata !673, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !688} ; [ DW_TAG_typedef ]
!701 = metadata !{i32 589837, metadata !679, metadata !"__state", metadata !682, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !702} ; [ DW_TAG_member ]
!702 = metadata !{i32 589846, metadata !703, metadata !"__mbstate_t", metadata !703, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !704} ; [ DW_TAG_typedef ]
!703 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !668} ; [ DW_TAG_file_type ]
!704 = metadata !{i32 589843, metadata !667, metadata !"", metadata !703, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !705, i32 0, null} ; [ DW_TAG_structure_type ]
!705 = metadata !{metadata !706, metadata !707}
!706 = metadata !{i32 589837, metadata !704, metadata !"__mask", metadata !703, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !700} ; [ DW_TAG_member ]
!707 = metadata !{i32 589837, metadata !704, metadata !"__wc", metadata !703, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !700} ; [ DW_TAG_member ]
!708 = metadata !{i32 589870, i32 0, metadata !709, metadata !"ungetc", metadata !"ungetc", metadata !"ungetc", metadata !709, i32 29, metadata !711, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %4*)* @ungetc} ; [ DW_TAG_subprogram
!709 = metadata !{i32 589865, metadata !"ungetc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !710} ; [ DW_TAG_file_type ]
!710 = metadata !{i32 589841, i32 0, i32 1, metadata !"ungetc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!711 = metadata !{i32 589845, metadata !709, metadata !"", metadata !709, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !712, i32 0, null} ; [ DW_TAG_subroutine_type ]
!712 = metadata !{metadata !713, metadata !713, metadata !714}
!713 = metadata !{i32 589860, metadata !709, metadata !"int", metadata !709, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!714 = metadata !{i32 589839, metadata !709, metadata !"", metadata !709, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !715} ; [ DW_TAG_pointer_type ]
!715 = metadata !{i32 589846, metadata !716, metadata !"FILE", metadata !716, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !717} ; [ DW_TAG_typedef ]
!716 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !710} ; [ DW_TAG_file_type ]
!717 = metadata !{i32 589843, metadata !709, metadata !"__STDIO_FILE_STRUCT", metadata !716, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !718, i32 0, null} ; [ DW_TAG_structure_type ]
!718 = metadata !{metadata !719, metadata !722, metadata !725, metadata !726, metadata !728, metadata !729, metadata !730, metadata !731, metadata !732, metadata !733, metadata !735, metadata !739}
!719 = metadata !{i32 589837, metadata !717, metadata !"__modeflags", metadata !720, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !721} ; [ DW_TAG_member ]
!720 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !710} ; [ DW_TAG_file_type ]
!721 = metadata !{i32 589860, metadata !709, metadata !"short unsigned int", metadata !709, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!722 = metadata !{i32 589837, metadata !717, metadata !"__ungot_width", metadata !720, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !723} ; [ DW_TAG_member ]
!723 = metadata !{i32 589825, metadata !709, metadata !"", metadata !709, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !724, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!724 = metadata !{i32 589860, metadata !709, metadata !"unsigned char", metadata !709, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!725 = metadata !{i32 589837, metadata !717, metadata !"__filedes", metadata !720, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !713} ; [ DW_TAG_member ]
!726 = metadata !{i32 589837, metadata !717, metadata !"__bufstart", metadata !720, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !727} ; [ DW_TAG_member ]
!727 = metadata !{i32 589839, metadata !709, metadata !"", metadata !709, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !724} ; [ DW_TAG_pointer_type ]
!728 = metadata !{i32 589837, metadata !717, metadata !"__bufend", metadata !720, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !727} ; [ DW_TAG_member ]
!729 = metadata !{i32 589837, metadata !717, metadata !"__bufpos", metadata !720, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !727} ; [ DW_TAG_member ]
!730 = metadata !{i32 589837, metadata !717, metadata !"__bufread", metadata !720, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !727} ; [ DW_TAG_member ]
!731 = metadata !{i32 589837, metadata !717, metadata !"__bufgetc_u", metadata !720, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !727} ; [ DW_TAG_member ]
!732 = metadata !{i32 589837, metadata !717, metadata !"__bufputc_u", metadata !720, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !727} ; [ DW_TAG_member ]
!733 = metadata !{i32 589837, metadata !717, metadata !"__nextopen", metadata !720, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !734} ; [ DW_TAG_member ]
!734 = metadata !{i32 589839, metadata !709, metadata !"", metadata !709, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !717} ; [ DW_TAG_pointer_type ]
!735 = metadata !{i32 589837, metadata !717, metadata !"__ungot", metadata !720, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !736} ; [ DW_TAG_member ]
!736 = metadata !{i32 589825, metadata !709, metadata !"", metadata !709, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !737, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!737 = metadata !{i32 589846, metadata !738, metadata !"wchar_t", metadata !738, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !713} ; [ DW_TAG_typedef ]
!738 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !710} ; [ DW_TAG_file_type ]
!739 = metadata !{i32 589837, metadata !717, metadata !"__state", metadata !720, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !740} ; [ DW_TAG_member ]
!740 = metadata !{i32 589846, metadata !741, metadata !"__mbstate_t", metadata !741, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !742} ; [ DW_TAG_typedef ]
!741 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !710} ; [ DW_TAG_file_type ]
!742 = metadata !{i32 589843, metadata !709, metadata !"", metadata !741, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !743, i32 0, null} ; [ DW_TAG_structure_type ]
!743 = metadata !{metadata !744, metadata !745}
!744 = metadata !{i32 589837, metadata !742, metadata !"__mask", metadata !741, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !737} ; [ DW_TAG_member ]
!745 = metadata !{i32 589837, metadata !742, metadata !"__wc", metadata !741, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !737} ; [ DW_TAG_member ]
!746 = metadata !{i32 589870, i32 0, metadata !747, metadata !"getenv", metadata !"getenv", metadata !"getenv", metadata !747, i32 18, metadata !749, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @getenv} ; [ DW_TAG_subprogram ]
!747 = metadata !{i32 589865, metadata !"getenv.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !748} ; [ DW_TAG_file_type ]
!748 = metadata !{i32 589841, i32 0, i32 1, metadata !"getenv.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!749 = metadata !{i32 589845, metadata !747, metadata !"", metadata !747, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !750, i32 0, null} ; [ DW_TAG_subroutine_type ]
!750 = metadata !{metadata !751, metadata !753}
!751 = metadata !{i32 589839, metadata !747, metadata !"", metadata !747, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !752} ; [ DW_TAG_pointer_type ]
!752 = metadata !{i32 589860, metadata !747, metadata !"char", metadata !747, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!753 = metadata !{i32 589839, metadata !747, metadata !"", metadata !747, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !754} ; [ DW_TAG_pointer_type ]
!754 = metadata !{i32 589862, metadata !747, metadata !"", metadata !747, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !752} ; [ DW_TAG_const_type ]
!755 = metadata !{i32 589870, i32 0, metadata !756, metadata !"exchange", metadata !"exchange", metadata !"", metadata !756, i32 220, metadata !758, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8**, %struct._getopt_data*)* @exchange} ;
!756 = metadata !{i32 589865, metadata !"getopt.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/unistd", metadata !757} ; [ DW_TAG_file_type ]
!757 = metadata !{i32 589841, i32 0, i32 1, metadata !"getopt.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/unistd", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!758 = metadata !{i32 589845, metadata !756, metadata !"", metadata !756, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !759, i32 0, null} ; [ DW_TAG_subroutine_type ]
!759 = metadata !{null, metadata !760, metadata !763}
!760 = metadata !{i32 589839, metadata !756, metadata !"", metadata !756, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !761} ; [ DW_TAG_pointer_type ]
!761 = metadata !{i32 589839, metadata !756, metadata !"", metadata !756, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !762} ; [ DW_TAG_pointer_type ]
!762 = metadata !{i32 589860, metadata !756, metadata !"char", metadata !756, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!763 = metadata !{i32 589839, metadata !756, metadata !"", metadata !756, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !764} ; [ DW_TAG_pointer_type ]
!764 = metadata !{i32 589843, metadata !756, metadata !"_getopt_data", metadata !765, i32 35, i64 448, i64 64, i64 0, i32 0, null, metadata !766, i32 0, null} ; [ DW_TAG_structure_type ]
!765 = metadata !{i32 589865, metadata !"getopt_int.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/unistd", metadata !757} ; [ DW_TAG_file_type ]
!766 = metadata !{metadata !767, metadata !769, metadata !770, metadata !771, metadata !772, metadata !773, metadata !774, metadata !780, metadata !781, metadata !782}
!767 = metadata !{i32 589837, metadata !764, metadata !"optind", metadata !765, i32 39, i64 32, i64 32, i64 0, i32 0, metadata !768} ; [ DW_TAG_member ]
!768 = metadata !{i32 589860, metadata !756, metadata !"int", metadata !756, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!769 = metadata !{i32 589837, metadata !764, metadata !"opterr", metadata !765, i32 40, i64 32, i64 32, i64 32, i32 0, metadata !768} ; [ DW_TAG_member ]
!770 = metadata !{i32 589837, metadata !764, metadata !"optopt", metadata !765, i32 41, i64 32, i64 32, i64 64, i32 0, metadata !768} ; [ DW_TAG_member ]
!771 = metadata !{i32 589837, metadata !764, metadata !"optarg", metadata !765, i32 42, i64 64, i64 64, i64 128, i32 0, metadata !761} ; [ DW_TAG_member ]
!772 = metadata !{i32 589837, metadata !764, metadata !"__initialized", metadata !765, i32 47, i64 32, i64 32, i64 192, i32 0, metadata !768} ; [ DW_TAG_member ]
!773 = metadata !{i32 589837, metadata !764, metadata !"__nextchar", metadata !765, i32 55, i64 64, i64 64, i64 256, i32 0, metadata !761} ; [ DW_TAG_member ]
!774 = metadata !{i32 589837, metadata !764, metadata !"__ordering", metadata !765, i32 89, i64 32, i64 32, i64 320, i32 0, metadata !775} ; [ DW_TAG_member ]
!775 = metadata !{i32 589828, metadata !756, metadata !"", metadata !765, i32 87, i64 32, i64 32, i64 0, i32 0, null, metadata !776, i32 0, null} ; [ DW_TAG_enumeration_type ]
!776 = metadata !{metadata !777, metadata !778, metadata !779}
!777 = metadata !{i32 589864, metadata !"REQUIRE_ORDER", i64 0} ; [ DW_TAG_enumerator ]
!778 = metadata !{i32 589864, metadata !"PERMUTE", i64 1} ; [ DW_TAG_enumerator ]
!779 = metadata !{i32 589864, metadata !"RETURN_IN_ORDER", i64 2} ; [ DW_TAG_enumerator ]
!780 = metadata !{i32 589837, metadata !764, metadata !"__posixly_correct", metadata !765, i32 92, i64 32, i64 32, i64 352, i32 0, metadata !768} ; [ DW_TAG_member ]
!781 = metadata !{i32 589837, metadata !764, metadata !"__first_nonopt", metadata !765, i32 101, i64 32, i64 32, i64 384, i32 0, metadata !768} ; [ DW_TAG_member ]
!782 = metadata !{i32 589837, metadata !764, metadata !"__last_nonopt", metadata !765, i32 102, i64 32, i64 32, i64 416, i32 0, metadata !768} ; [ DW_TAG_member ]
!783 = metadata !{i32 589870, i32 0, metadata !756, metadata !"_getopt_initialize", metadata !"_getopt_initialize", metadata !"", metadata !756, i32 302, metadata !784, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8**, i8*, %struct
!784 = metadata !{i32 589845, metadata !756, metadata !"", metadata !756, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !785, i32 0, null} ; [ DW_TAG_subroutine_type ]
!785 = metadata !{metadata !786, metadata !768, metadata !788, metadata !786, metadata !763}
!786 = metadata !{i32 589839, metadata !756, metadata !"", metadata !756, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !787} ; [ DW_TAG_pointer_type ]
!787 = metadata !{i32 589862, metadata !756, metadata !"", metadata !756, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !762} ; [ DW_TAG_const_type ]
!788 = metadata !{i32 589839, metadata !756, metadata !"", metadata !756, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !789} ; [ DW_TAG_pointer_type ]
!789 = metadata !{i32 589862, metadata !756, metadata !"", metadata !756, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !761} ; [ DW_TAG_const_type ]
!790 = metadata !{i32 589870, i32 0, metadata !756, metadata !"_getopt_internal_r", metadata !"_getopt_internal_r", metadata !"", metadata !756, i32 423, metadata !791, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**, i8*, %struct
!791 = metadata !{i32 589845, metadata !756, metadata !"", metadata !756, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !792, i32 0, null} ; [ DW_TAG_subroutine_type ]
!792 = metadata !{metadata !768, metadata !768, metadata !788, metadata !786, metadata !793, metadata !801, metadata !768, metadata !763}
!793 = metadata !{i32 589839, metadata !756, metadata !"", metadata !756, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !794} ; [ DW_TAG_pointer_type ]
!794 = metadata !{i32 589862, metadata !756, metadata !"", metadata !756, i32 0, i64 256, i64 64, i64 0, i32 0, metadata !795} ; [ DW_TAG_const_type ]
!795 = metadata !{i32 589843, metadata !756, metadata !"option", metadata !796, i32 109, i64 256, i64 64, i64 0, i32 0, null, metadata !797, i32 0, null} ; [ DW_TAG_structure_type ]
!796 = metadata !{i32 589865, metadata !"getopt.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !757} ; [ DW_TAG_file_type ]
!797 = metadata !{metadata !798, metadata !799, metadata !800, metadata !802}
!798 = metadata !{i32 589837, metadata !795, metadata !"name", metadata !796, i32 110, i64 64, i64 64, i64 0, i32 0, metadata !786} ; [ DW_TAG_member ]
!799 = metadata !{i32 589837, metadata !795, metadata !"has_arg", metadata !796, i32 113, i64 32, i64 32, i64 64, i32 0, metadata !768} ; [ DW_TAG_member ]
!800 = metadata !{i32 589837, metadata !795, metadata !"flag", metadata !796, i32 114, i64 64, i64 64, i64 128, i32 0, metadata !801} ; [ DW_TAG_member ]
!801 = metadata !{i32 589839, metadata !756, metadata !"", metadata !756, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !768} ; [ DW_TAG_pointer_type ]
!802 = metadata !{i32 589837, metadata !795, metadata !"val", metadata !796, i32 115, i64 32, i64 32, i64 192, i32 0, metadata !768} ; [ DW_TAG_member ]
!803 = metadata !{i32 589870, i32 0, metadata !756, metadata !"_getopt_internal", metadata !"_getopt_internal", metadata !"_getopt_internal", metadata !756, i32 1159, metadata !804, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**
!804 = metadata !{i32 589845, metadata !756, metadata !"", metadata !756, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !805, i32 0, null} ; [ DW_TAG_subroutine_type ]
!805 = metadata !{metadata !768, metadata !768, metadata !788, metadata !786, metadata !793, metadata !801, metadata !768}
!806 = metadata !{i32 589870, i32 0, metadata !756, metadata !"getopt", metadata !"getopt", metadata !"getopt", metadata !756, i32 1177, metadata !807, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**, i8*)* @getopt} ; [ DW_TAG_su
!807 = metadata !{i32 589845, metadata !756, metadata !"", metadata !756, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !808, i32 0, null} ; [ DW_TAG_subroutine_type ]
!808 = metadata !{metadata !768, metadata !768, metadata !788, metadata !786}
!809 = metadata !{i32 589870, i32 0, metadata !756, metadata !"getopt_long", metadata !"getopt_long", metadata !"getopt_long", metadata !756, i32 1187, metadata !810, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**, i8*, %struct.
!810 = metadata !{i32 589845, metadata !756, metadata !"", metadata !756, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !811, i32 0, null} ; [ DW_TAG_subroutine_type ]
!811 = metadata !{metadata !768, metadata !768, metadata !788, metadata !786, metadata !793, metadata !801}
!812 = metadata !{i32 589870, i32 0, metadata !756, metadata !"getopt_long_only", metadata !"getopt_long_only", metadata !"getopt_long_only", metadata !756, i32 1199, metadata !810, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**
!813 = metadata !{i32 589870, i32 0, metadata !814, metadata !"__setutent", metadata !"__setutent", metadata !"", metadata !814, i32 46, metadata !816, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @__setutent} ; [ DW_TAG_subprogram ]
!814 = metadata !{i32 589865, metadata !"utent.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/utmp", metadata !815} ; [ DW_TAG_file_type ]
!815 = metadata !{i32 589841, i32 0, i32 1, metadata !"utent.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/utmp", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!816 = metadata !{i32 589845, metadata !814, metadata !"", metadata !814, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!817 = metadata !{i32 589870, i32 0, metadata !814, metadata !"setutent", metadata !"setutent", metadata !"setutent", metadata !814, i32 73, metadata !816, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @setutent} ; [ DW_TAG_subprogra
!818 = metadata !{i32 589870, i32 0, metadata !814, metadata !"__getutent", metadata !"__getutent", metadata !"", metadata !814, i32 82, metadata !819, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (i32)* @__getutent} ; [ DW_TAG_
!819 = metadata !{i32 589845, metadata !814, metadata !"", metadata !814, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !820, i32 0, null} ; [ DW_TAG_subroutine_type ]
!820 = metadata !{metadata !821, metadata !830}
!821 = metadata !{i32 589839, metadata !814, metadata !"", metadata !814, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !822} ; [ DW_TAG_pointer_type ]
!822 = metadata !{i32 589843, metadata !814, metadata !"utmp", metadata !823, i32 61, i64 3200, i64 64, i64 0, i32 0, null, metadata !824, i32 0, null} ; [ DW_TAG_structure_type ]
!823 = metadata !{i32 589865, metadata !"utmp.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !815} ; [ DW_TAG_file_type ]
!824 = metadata !{metadata !825, metadata !827, metadata !831, metadata !836, metadata !840, metadata !841, metadata !845, metadata !850, metadata !852, metadata !861, metadata !864}
!825 = metadata !{i32 589837, metadata !822, metadata !"ut_type", metadata !823, i32 62, i64 16, i64 16, i64 0, i32 0, metadata !826} ; [ DW_TAG_member ]
!826 = metadata !{i32 589860, metadata !814, metadata !"short int", metadata !814, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!827 = metadata !{i32 589837, metadata !822, metadata !"ut_pid", metadata !823, i32 63, i64 32, i64 32, i64 32, i32 0, metadata !828} ; [ DW_TAG_member ]
!828 = metadata !{i32 589846, metadata !829, metadata !"pid_t", metadata !829, i32 100, i64 0, i64 0, i64 0, i32 0, metadata !830} ; [ DW_TAG_typedef ]
!829 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/sys", metadata !815} ; [ DW_TAG_file_type ]
!830 = metadata !{i32 589860, metadata !814, metadata !"int", metadata !814, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!831 = metadata !{i32 589837, metadata !822, metadata !"ut_line", metadata !823, i32 64, i64 256, i64 8, i64 64, i32 0, metadata !832} ; [ DW_TAG_member ]
!832 = metadata !{i32 589825, metadata !814, metadata !"", metadata !814, i32 0, i64 256, i64 8, i64 0, i32 0, metadata !833, metadata !834, i32 0, null} ; [ DW_TAG_array_type ]
!833 = metadata !{i32 589860, metadata !814, metadata !"char", metadata !814, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!834 = metadata !{metadata !835}
!835 = metadata !{i32 589857, i64 0, i64 31}      ; [ DW_TAG_subrange_type ]
!836 = metadata !{i32 589837, metadata !822, metadata !"ut_id", metadata !823, i32 65, i64 32, i64 8, i64 320, i32 0, metadata !837} ; [ DW_TAG_member ]
!837 = metadata !{i32 589825, metadata !814, metadata !"", metadata !814, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !833, metadata !838, i32 0, null} ; [ DW_TAG_array_type ]
!838 = metadata !{metadata !839}
!839 = metadata !{i32 589857, i64 0, i64 3}       ; [ DW_TAG_subrange_type ]
!840 = metadata !{i32 589837, metadata !822, metadata !"ut_user", metadata !823, i32 66, i64 256, i64 8, i64 352, i32 0, metadata !832} ; [ DW_TAG_member ]
!841 = metadata !{i32 589837, metadata !822, metadata !"ut_host", metadata !823, i32 67, i64 2048, i64 8, i64 608, i32 0, metadata !842} ; [ DW_TAG_member ]
!842 = metadata !{i32 589825, metadata !814, metadata !"", metadata !814, i32 0, i64 2048, i64 8, i64 0, i32 0, metadata !833, metadata !843, i32 0, null} ; [ DW_TAG_array_type ]
!843 = metadata !{metadata !844}
!844 = metadata !{i32 589857, i64 0, i64 255}     ; [ DW_TAG_subrange_type ]
!845 = metadata !{i32 589837, metadata !822, metadata !"ut_exit", metadata !823, i32 68, i64 32, i64 16, i64 2656, i32 0, metadata !846} ; [ DW_TAG_member ]
!846 = metadata !{i32 589843, metadata !814, metadata !"exit_status", metadata !823, i32 53, i64 32, i64 16, i64 0, i32 0, null, metadata !847, i32 0, null} ; [ DW_TAG_structure_type ]
!847 = metadata !{metadata !848, metadata !849}
!848 = metadata !{i32 589837, metadata !846, metadata !"e_termination", metadata !823, i32 54, i64 16, i64 16, i64 0, i32 0, metadata !826} ; [ DW_TAG_member ]
!849 = metadata !{i32 589837, metadata !846, metadata !"e_exit", metadata !823, i32 55, i64 16, i64 16, i64 16, i32 0, metadata !826} ; [ DW_TAG_member ]
!850 = metadata !{i32 589837, metadata !822, metadata !"ut_session", metadata !823, i32 81, i64 64, i64 64, i64 2688, i32 0, metadata !851} ; [ DW_TAG_member ]
!851 = metadata !{i32 589860, metadata !814, metadata !"long int", metadata !814, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!852 = metadata !{i32 589837, metadata !822, metadata !"ut_tv", metadata !823, i32 82, i64 128, i64 64, i64 2752, i32 0, metadata !853} ; [ DW_TAG_member ]
!853 = metadata !{i32 589843, metadata !814, metadata !"timeval", metadata !854, i32 74, i64 128, i64 64, i64 0, i32 0, null, metadata !855, i32 0, null} ; [ DW_TAG_structure_type ]
!854 = metadata !{i32 589865, metadata !"time.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !815} ; [ DW_TAG_file_type ]
!855 = metadata !{metadata !856, metadata !859}
!856 = metadata !{i32 589837, metadata !853, metadata !"tv_sec", metadata !854, i32 75, i64 64, i64 64, i64 0, i32 0, metadata !857} ; [ DW_TAG_member ]
!857 = metadata !{i32 589846, metadata !858, metadata !"__time_t", metadata !858, i32 153, i64 0, i64 0, i64 0, i32 0, metadata !851} ; [ DW_TAG_typedef ]
!858 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !815} ; [ DW_TAG_file_type ]
!859 = metadata !{i32 589837, metadata !853, metadata !"tv_usec", metadata !854, i32 76, i64 64, i64 64, i64 64, i32 0, metadata !860} ; [ DW_TAG_member ]
!860 = metadata !{i32 589846, metadata !858, metadata !"__suseconds_t", metadata !858, i32 155, i64 0, i64 0, i64 0, i32 0, metadata !851} ; [ DW_TAG_typedef ]
!861 = metadata !{i32 589837, metadata !822, metadata !"ut_addr_v6", metadata !823, i32 85, i64 128, i64 32, i64 2880, i32 0, metadata !862} ; [ DW_TAG_member ]
!862 = metadata !{i32 589825, metadata !814, metadata !"", metadata !814, i32 0, i64 128, i64 32, i64 0, i32 0, metadata !863, metadata !838, i32 0, null} ; [ DW_TAG_array_type ]
!863 = metadata !{i32 589846, metadata !829, metadata !"int32_t", metadata !829, i32 197, i64 0, i64 0, i64 0, i32 0, metadata !830} ; [ DW_TAG_typedef ]
!864 = metadata !{i32 589837, metadata !822, metadata !"__unused", metadata !823, i32 86, i64 160, i64 8, i64 3008, i32 0, metadata !865} ; [ DW_TAG_member ]
!865 = metadata !{i32 589825, metadata !814, metadata !"", metadata !814, i32 0, i64 160, i64 8, i64 0, i32 0, metadata !833, metadata !866, i32 0, null} ; [ DW_TAG_array_type ]
!866 = metadata !{metadata !867}
!867 = metadata !{i32 589857, i64 0, i64 19}      ; [ DW_TAG_subrange_type ]
!868 = metadata !{i32 589870, i32 0, metadata !814, metadata !"endutent", metadata !"endutent", metadata !"endutent", metadata !814, i32 101, metadata !816, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @endutent} ; [ DW_TAG_subprogr
!869 = metadata !{i32 589870, i32 0, metadata !814, metadata !"getutent", metadata !"getutent", metadata !"getutent", metadata !814, i32 110, metadata !870, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* ()* @getutent} ; [ DW_TAG
!870 = metadata !{i32 589845, metadata !814, metadata !"", metadata !814, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !871, i32 0, null} ; [ DW_TAG_subroutine_type ]
!871 = metadata !{metadata !821}
!872 = metadata !{i32 589870, i32 0, metadata !814, metadata !"__getutid", metadata !"__getutid", metadata !"", metadata !814, i32 121, metadata !873, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (%struct.utmp*)* @__getutid} ; [
!873 = metadata !{i32 589845, metadata !814, metadata !"", metadata !814, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !874, i32 0, null} ; [ DW_TAG_subroutine_type ]
!874 = metadata !{metadata !821, metadata !875}
!875 = metadata !{i32 589839, metadata !814, metadata !"", metadata !814, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !876} ; [ DW_TAG_pointer_type ]
!876 = metadata !{i32 589862, metadata !814, metadata !"", metadata !814, i32 0, i64 3200, i64 64, i64 0, i32 0, metadata !822} ; [ DW_TAG_const_type ]
!877 = metadata !{i32 589870, i32 0, metadata !814, metadata !"getutid", metadata !"getutid", metadata !"getutid", metadata !814, i32 148, metadata !873, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (%struct.utmp*)* @getutid} ;
!878 = metadata !{i32 589870, i32 0, metadata !814, metadata !"getutline", metadata !"getutline", metadata !"getutline", metadata !814, i32 159, metadata !873, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (%struct.utmp*)* @getu
!879 = metadata !{i32 589870, i32 0, metadata !814, metadata !"pututline", metadata !"pututline", metadata !"pututline", metadata !814, i32 174, metadata !873, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (%struct.utmp*)* @putu
!880 = metadata !{i32 589870, i32 0, metadata !814, metadata !"utmpname", metadata !"utmpname", metadata !"utmpname", metadata !814, i32 192, metadata !881, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*)* @utmpname} ; [ DW_TAG_subpro
!881 = metadata !{i32 589845, metadata !814, metadata !"", metadata !814, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !882, i32 0, null} ; [ DW_TAG_subroutine_type ]
!882 = metadata !{metadata !830, metadata !883}
!883 = metadata !{i32 589839, metadata !814, metadata !"", metadata !814, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !884} ; [ DW_TAG_pointer_type ]
!884 = metadata !{i32 589862, metadata !814, metadata !"", metadata !814, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !833} ; [ DW_TAG_const_type ]
!885 = metadata !{i32 589870, i32 0, metadata !886, metadata !"iswalnum", metadata !"iswalnum", metadata !"iswalnum", metadata !888, i32 217, metadata !889, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @iswalnum} ; [ DW_TAG_subpro
!886 = metadata !{i32 589865, metadata !"iswalnum.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !887} ; [ DW_TAG_file_type ]
!887 = metadata !{i32 589841, i32 0, i32 1, metadata !"iswalnum.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!888 = metadata !{i32 589865, metadata !"_wctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !887} ; [ DW_TAG_file_type ]
!889 = metadata !{i32 589845, metadata !886, metadata !"", metadata !886, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !890, i32 0, null} ; [ DW_TAG_subroutine_type ]
!890 = metadata !{metadata !891, metadata !892}
!891 = metadata !{i32 589860, metadata !886, metadata !"int", metadata !886, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!892 = metadata !{i32 589846, metadata !893, metadata !"wint_t", metadata !893, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !894} ; [ DW_TAG_typedef ]
!893 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !887} ; [ DW_TAG_file_type ]
!894 = metadata !{i32 589860, metadata !886, metadata !"unsigned int", metadata !886, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!895 = metadata !{i32 589870, i32 0, metadata !896, metadata !"iswcntrl", metadata !"iswcntrl", metadata !"iswcntrl", metadata !898, i32 235, metadata !899, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @iswcntrl} ; [ DW_TAG_subpro
!896 = metadata !{i32 589865, metadata !"iswcntrl.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !897} ; [ DW_TAG_file_type ]
!897 = metadata !{i32 589841, i32 0, i32 1, metadata !"iswcntrl.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!898 = metadata !{i32 589865, metadata !"_wctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !897} ; [ DW_TAG_file_type ]
!899 = metadata !{i32 589845, metadata !896, metadata !"", metadata !896, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !900, i32 0, null} ; [ DW_TAG_subroutine_type ]
!900 = metadata !{metadata !901, metadata !902}
!901 = metadata !{i32 589860, metadata !896, metadata !"int", metadata !896, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!902 = metadata !{i32 589846, metadata !903, metadata !"wint_t", metadata !903, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !904} ; [ DW_TAG_typedef ]
!903 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !897} ; [ DW_TAG_file_type ]
!904 = metadata !{i32 589860, metadata !896, metadata !"unsigned int", metadata !896, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!905 = metadata !{i32 589870, i32 0, metadata !906, metadata !"iswprint", metadata !"iswprint", metadata !"iswprint", metadata !908, i32 259, metadata !909, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @iswprint} ; [ DW_TAG_subpro
!906 = metadata !{i32 589865, metadata !"iswprint.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !907} ; [ DW_TAG_file_type ]
!907 = metadata !{i32 589841, i32 0, i32 1, metadata !"iswprint.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!908 = metadata !{i32 589865, metadata !"_wctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !907} ; [ DW_TAG_file_type ]
!909 = metadata !{i32 589845, metadata !906, metadata !"", metadata !906, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !910, i32 0, null} ; [ DW_TAG_subroutine_type ]
!910 = metadata !{metadata !911, metadata !912}
!911 = metadata !{i32 589860, metadata !906, metadata !"int", metadata !906, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!912 = metadata !{i32 589846, metadata !913, metadata !"wint_t", metadata !913, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !914} ; [ DW_TAG_typedef ]
!913 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !907} ; [ DW_TAG_file_type ]
!914 = metadata !{i32 589860, metadata !906, metadata !"unsigned int", metadata !906, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!915 = metadata !{i32 589870, i32 0, metadata !916, metadata !"iswspace", metadata !"iswspace", metadata !"iswspace", metadata !918, i32 271, metadata !919, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @iswspace} ; [ DW_TAG_subpro
!916 = metadata !{i32 589865, metadata !"iswspace.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !917} ; [ DW_TAG_file_type ]
!917 = metadata !{i32 589841, i32 0, i32 1, metadata !"iswspace.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!918 = metadata !{i32 589865, metadata !"_wctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !917} ; [ DW_TAG_file_type ]
!919 = metadata !{i32 589845, metadata !916, metadata !"", metadata !916, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !920, i32 0, null} ; [ DW_TAG_subroutine_type ]
!920 = metadata !{metadata !921, metadata !922}
!921 = metadata !{i32 589860, metadata !916, metadata !"int", metadata !916, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!922 = metadata !{i32 589846, metadata !923, metadata !"wint_t", metadata !923, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !924} ; [ DW_TAG_typedef ]
!923 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !917} ; [ DW_TAG_file_type ]
!924 = metadata !{i32 589860, metadata !916, metadata !"unsigned int", metadata !916, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!925 = metadata !{i32 589870, i32 0, metadata !926, metadata !"localeconv", metadata !"localeconv", metadata !"localeconv", metadata !928, i32 317, metadata !929, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.lconv* ()* @localeconv} ;
!926 = metadata !{i32 589865, metadata !"localeconv.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !927} ; [ DW_TAG_file_type ]
!927 = metadata !{i32 589841, i32 0, i32 1, metadata !"localeconv.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!928 = metadata !{i32 589865, metadata !"locale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !927} ; [ DW_TAG_file_type ]
!929 = metadata !{i32 589845, metadata !926, metadata !"", metadata !926, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !930, i32 0, null} ; [ DW_TAG_subroutine_type ]
!930 = metadata !{metadata !931}
!931 = metadata !{i32 589839, metadata !926, metadata !"", metadata !926, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !932} ; [ DW_TAG_pointer_type ]
!932 = metadata !{i32 589843, metadata !926, metadata !"lconv", metadata !933, i32 58, i64 768, i64 64, i64 0, i32 0, null, metadata !934, i32 0, null} ; [ DW_TAG_structure_type ]
!933 = metadata !{i32 589865, metadata !"locale.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !927} ; [ DW_TAG_file_type ]
!934 = metadata !{metadata !935, metadata !938, metadata !939, metadata !940, metadata !941, metadata !942, metadata !943, metadata !944, metadata !945, metadata !946, metadata !947, metadata !948, metadata !949, metadata !950, metadata !951, metadata !9
!935 = metadata !{i32 589837, metadata !932, metadata !"decimal_point", metadata !933, i32 61, i64 64, i64 64, i64 0, i32 0, metadata !936} ; [ DW_TAG_member ]
!936 = metadata !{i32 589839, metadata !926, metadata !"", metadata !926, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !937} ; [ DW_TAG_pointer_type ]
!937 = metadata !{i32 589860, metadata !926, metadata !"char", metadata !926, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!938 = metadata !{i32 589837, metadata !932, metadata !"thousands_sep", metadata !933, i32 62, i64 64, i64 64, i64 64, i32 0, metadata !936} ; [ DW_TAG_member ]
!939 = metadata !{i32 589837, metadata !932, metadata !"grouping", metadata !933, i32 68, i64 64, i64 64, i64 128, i32 0, metadata !936} ; [ DW_TAG_member ]
!940 = metadata !{i32 589837, metadata !932, metadata !"int_curr_symbol", metadata !933, i32 74, i64 64, i64 64, i64 192, i32 0, metadata !936} ; [ DW_TAG_member ]
!941 = metadata !{i32 589837, metadata !932, metadata !"currency_symbol", metadata !933, i32 75, i64 64, i64 64, i64 256, i32 0, metadata !936} ; [ DW_TAG_member ]
!942 = metadata !{i32 589837, metadata !932, metadata !"mon_decimal_point", metadata !933, i32 76, i64 64, i64 64, i64 320, i32 0, metadata !936} ; [ DW_TAG_member ]
!943 = metadata !{i32 589837, metadata !932, metadata !"mon_thousands_sep", metadata !933, i32 77, i64 64, i64 64, i64 384, i32 0, metadata !936} ; [ DW_TAG_member ]
!944 = metadata !{i32 589837, metadata !932, metadata !"mon_grouping", metadata !933, i32 78, i64 64, i64 64, i64 448, i32 0, metadata !936} ; [ DW_TAG_member ]
!945 = metadata !{i32 589837, metadata !932, metadata !"positive_sign", metadata !933, i32 79, i64 64, i64 64, i64 512, i32 0, metadata !936} ; [ DW_TAG_member ]
!946 = metadata !{i32 589837, metadata !932, metadata !"negative_sign", metadata !933, i32 80, i64 64, i64 64, i64 576, i32 0, metadata !936} ; [ DW_TAG_member ]
!947 = metadata !{i32 589837, metadata !932, metadata !"int_frac_digits", metadata !933, i32 81, i64 8, i64 8, i64 640, i32 0, metadata !937} ; [ DW_TAG_member ]
!948 = metadata !{i32 589837, metadata !932, metadata !"frac_digits", metadata !933, i32 82, i64 8, i64 8, i64 648, i32 0, metadata !937} ; [ DW_TAG_member ]
!949 = metadata !{i32 589837, metadata !932, metadata !"p_cs_precedes", metadata !933, i32 84, i64 8, i64 8, i64 656, i32 0, metadata !937} ; [ DW_TAG_member ]
!950 = metadata !{i32 589837, metadata !932, metadata !"p_sep_by_space", metadata !933, i32 86, i64 8, i64 8, i64 664, i32 0, metadata !937} ; [ DW_TAG_member ]
!951 = metadata !{i32 589837, metadata !932, metadata !"n_cs_precedes", metadata !933, i32 88, i64 8, i64 8, i64 672, i32 0, metadata !937} ; [ DW_TAG_member ]
!952 = metadata !{i32 589837, metadata !932, metadata !"n_sep_by_space", metadata !933, i32 90, i64 8, i64 8, i64 680, i32 0, metadata !937} ; [ DW_TAG_member ]
!953 = metadata !{i32 589837, metadata !932, metadata !"p_sign_posn", metadata !933, i32 97, i64 8, i64 8, i64 688, i32 0, metadata !937} ; [ DW_TAG_member ]
!954 = metadata !{i32 589837, metadata !932, metadata !"n_sign_posn", metadata !933, i32 98, i64 8, i64 8, i64 696, i32 0, metadata !937} ; [ DW_TAG_member ]
!955 = metadata !{i32 589837, metadata !932, metadata !"int_p_cs_precedes", metadata !933, i32 101, i64 8, i64 8, i64 704, i32 0, metadata !937} ; [ DW_TAG_member ]
!956 = metadata !{i32 589837, metadata !932, metadata !"int_p_sep_by_space", metadata !933, i32 103, i64 8, i64 8, i64 712, i32 0, metadata !937} ; [ DW_TAG_member ]
!957 = metadata !{i32 589837, metadata !932, metadata !"int_n_cs_precedes", metadata !933, i32 105, i64 8, i64 8, i64 720, i32 0, metadata !937} ; [ DW_TAG_member ]
!958 = metadata !{i32 589837, metadata !932, metadata !"int_n_sep_by_space", metadata !933, i32 107, i64 8, i64 8, i64 728, i32 0, metadata !937} ; [ DW_TAG_member ]
!959 = metadata !{i32 589837, metadata !932, metadata !"int_p_sign_posn", metadata !933, i32 114, i64 8, i64 8, i64 736, i32 0, metadata !937} ; [ DW_TAG_member ]
!960 = metadata !{i32 589837, metadata !932, metadata !"int_n_sign_posn", metadata !933, i32 115, i64 8, i64 8, i64 744, i32 0, metadata !937} ; [ DW_TAG_member ]
!961 = metadata !{i32 589870, i32 0, metadata !962, metadata !"mbrtowc", metadata !"mbrtowc", metadata !"mbrtowc", metadata !964, i32 280, metadata !965, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32*, i8*, i64, %struct.__mbstate_t*)
!962 = metadata !{i32 589865, metadata !"mbrtowc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !963} ; [ DW_TAG_file_type ]
!963 = metadata !{i32 589841, i32 0, i32 1, metadata !"mbrtowc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!964 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !963} ; [ DW_TAG_file_type ]
!965 = metadata !{i32 589845, metadata !962, metadata !"", metadata !962, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !966, i32 0, null} ; [ DW_TAG_subroutine_type ]
!966 = metadata !{metadata !967, metadata !970, metadata !973, metadata !967, metadata !976}
!967 = metadata !{i32 589846, metadata !968, metadata !"size_t", metadata !968, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !969} ; [ DW_TAG_typedef ]
!968 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !963} ; [ DW_TAG_file_type ]
!969 = metadata !{i32 589860, metadata !962, metadata !"long unsigned int", metadata !962, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!970 = metadata !{i32 589839, metadata !962, metadata !"", metadata !962, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !971} ; [ DW_TAG_pointer_type ]
!971 = metadata !{i32 589846, metadata !968, metadata !"wchar_t", metadata !968, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !972} ; [ DW_TAG_typedef ]
!972 = metadata !{i32 589860, metadata !962, metadata !"int", metadata !962, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!973 = metadata !{i32 589839, metadata !962, metadata !"", metadata !962, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !974} ; [ DW_TAG_pointer_type ]
!974 = metadata !{i32 589862, metadata !962, metadata !"", metadata !962, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !975} ; [ DW_TAG_const_type ]
!975 = metadata !{i32 589860, metadata !962, metadata !"char", metadata !962, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!976 = metadata !{i32 589839, metadata !962, metadata !"", metadata !962, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !977} ; [ DW_TAG_pointer_type ]
!977 = metadata !{i32 589846, metadata !978, metadata !"mbstate_t", metadata !978, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !979} ; [ DW_TAG_typedef ]
!978 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !963} ; [ DW_TAG_file_type ]
!979 = metadata !{i32 589843, metadata !962, metadata !"", metadata !978, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !980, i32 0, null} ; [ DW_TAG_structure_type ]
!980 = metadata !{metadata !981, metadata !982}
!981 = metadata !{i32 589837, metadata !979, metadata !"__mask", metadata !978, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !971} ; [ DW_TAG_member ]
!982 = metadata !{i32 589837, metadata !979, metadata !"__wc", metadata !978, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !971} ; [ DW_TAG_member ]
!983 = metadata !{i32 589870, i32 0, metadata !984, metadata !"mbsinit", metadata !"mbsinit", metadata !"mbsinit", metadata !986, i32 251, metadata !987, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__mbstate_t*)* @mbsinit} ; [ 
!984 = metadata !{i32 589865, metadata !"mbsinit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !985} ; [ DW_TAG_file_type ]
!985 = metadata !{i32 589841, i32 0, i32 1, metadata !"mbsinit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!986 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !985} ; [ DW_TAG_file_type ]
!987 = metadata !{i32 589845, metadata !984, metadata !"", metadata !984, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !988, i32 0, null} ; [ DW_TAG_subroutine_type ]
!988 = metadata !{metadata !989, metadata !990}
!989 = metadata !{i32 589860, metadata !984, metadata !"int", metadata !984, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!990 = metadata !{i32 589839, metadata !984, metadata !"", metadata !984, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !991} ; [ DW_TAG_pointer_type ]
!991 = metadata !{i32 589846, metadata !992, metadata !"mbstate_t", metadata !992, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !993} ; [ DW_TAG_typedef ]
!992 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !985} ; [ DW_TAG_file_type ]
!993 = metadata !{i32 589843, metadata !984, metadata !"", metadata !992, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !994, i32 0, null} ; [ DW_TAG_structure_type ]
!994 = metadata !{metadata !995, metadata !998}
!995 = metadata !{i32 589837, metadata !993, metadata !"__mask", metadata !992, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !996} ; [ DW_TAG_member ]
!996 = metadata !{i32 589846, metadata !997, metadata !"wchar_t", metadata !997, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !989} ; [ DW_TAG_typedef ]
!997 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !985} ; [ DW_TAG_file_type ]
!998 = metadata !{i32 589837, metadata !993, metadata !"__wc", metadata !992, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !996} ; [ DW_TAG_member ]
!999 = metadata !{i32 589870, i32 0, metadata !1000, metadata !"mbstowcs", metadata !"mbstowcs", metadata !"mbstowcs", metadata !1002, i32 1018, metadata !1003, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32*, i8*, i64)* @mbstowcs} ; 
!1000 = metadata !{i32 589865, metadata !"mbstowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1001} ; [ DW_TAG_file_type ]
!1001 = metadata !{i32 589841, i32 0, i32 1, metadata !"mbstowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!1002 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1001} ; [ DW_TAG_file_type ]
!1003 = metadata !{i32 589845, metadata !1000, metadata !"", metadata !1000, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1004, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1004 = metadata !{metadata !1005, metadata !1008, metadata !1011, metadata !1005}
!1005 = metadata !{i32 589846, metadata !1006, metadata !"size_t", metadata !1006, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1007} ; [ DW_TAG_typedef ]
!1006 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1001} ; [ DW_TAG_file_type ]
!1007 = metadata !{i32 589860, metadata !1000, metadata !"long unsigned int", metadata !1000, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1008 = metadata !{i32 589839, metadata !1000, metadata !"", metadata !1000, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1009} ; [ DW_TAG_pointer_type ]
!1009 = metadata !{i32 589846, metadata !1006, metadata !"wchar_t", metadata !1006, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1010} ; [ DW_TAG_typedef ]
!1010 = metadata !{i32 589860, metadata !1000, metadata !"int", metadata !1000, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1011 = metadata !{i32 589839, metadata !1000, metadata !"", metadata !1000, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1012} ; [ DW_TAG_pointer_type ]
!1012 = metadata !{i32 589862, metadata !1000, metadata !"", metadata !1000, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1013} ; [ DW_TAG_const_type ]
!1013 = metadata !{i32 589860, metadata !1000, metadata !"char", metadata !1000, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1014 = metadata !{i32 589870, i32 0, metadata !1015, metadata !"memchr", metadata !"memchr", metadata !"memchr", metadata !1015, i32 19, metadata !1017, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32, i64)* @memchr} ; [ DW_TAG_s
!1015 = metadata !{i32 589865, metadata !"memchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1016} ; [ DW_TAG_file_type ]
!1016 = metadata !{i32 589841, i32 0, i32 1, metadata !"memchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1017 = metadata !{i32 589845, metadata !1015, metadata !"", metadata !1015, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1018, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1018 = metadata !{metadata !1019, metadata !1019, metadata !1020, metadata !1021}
!1019 = metadata !{i32 589839, metadata !1015, metadata !"", metadata !1015, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1020 = metadata !{i32 589860, metadata !1015, metadata !"int", metadata !1015, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1021 = metadata !{i32 589846, metadata !1022, metadata !"size_t", metadata !1022, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1023} ; [ DW_TAG_typedef ]
!1022 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1016} ; [ DW_TAG_file_type ]
!1023 = metadata !{i32 589860, metadata !1015, metadata !"long unsigned int", metadata !1015, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1024 = metadata !{i32 589870, i32 0, metadata !1025, metadata !"memcmp", metadata !"memcmp", metadata !"memcmp", metadata !1025, i32 18, metadata !1027, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*, i64)* @memcmp} ; [ DW_TAG_s
!1025 = metadata !{i32 589865, metadata !"memcmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1026} ; [ DW_TAG_file_type ]
!1026 = metadata !{i32 589841, i32 0, i32 1, metadata !"memcmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1027 = metadata !{i32 589845, metadata !1025, metadata !"", metadata !1025, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1028, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1028 = metadata !{metadata !1029, metadata !1030, metadata !1030, metadata !1031}
!1029 = metadata !{i32 589860, metadata !1025, metadata !"int", metadata !1025, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1030 = metadata !{i32 589839, metadata !1025, metadata !"", metadata !1025, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1031 = metadata !{i32 589846, metadata !1032, metadata !"size_t", metadata !1032, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1033} ; [ DW_TAG_typedef ]
!1032 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1026} ; [ DW_TAG_file_type ]
!1033 = metadata !{i32 589860, metadata !1025, metadata !"long unsigned int", metadata !1025, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1034 = metadata !{i32 589870, i32 0, metadata !1035, metadata !"mempcpy", metadata !"mempcpy", metadata !"mempcpy", metadata !1035, i32 21, metadata !1037, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*, i64)* @mempcpy} ; [ DW_T
!1035 = metadata !{i32 589865, metadata !"mempcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1036} ; [ DW_TAG_file_type ]
!1036 = metadata !{i32 589841, i32 0, i32 1, metadata !"mempcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1037 = metadata !{i32 589845, metadata !1035, metadata !"", metadata !1035, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1038, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1038 = metadata !{metadata !1039, metadata !1039, metadata !1039, metadata !1040}
!1039 = metadata !{i32 589839, metadata !1035, metadata !"", metadata !1035, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1040 = metadata !{i32 589846, metadata !1041, metadata !"size_t", metadata !1041, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1042} ; [ DW_TAG_typedef ]
!1041 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1036} ; [ DW_TAG_file_type ]
!1042 = metadata !{i32 589860, metadata !1035, metadata !"long unsigned int", metadata !1035, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1043 = metadata !{i32 589870, i32 0, metadata !1044, metadata !"memrchr", metadata !"memrchr", metadata !"memrchr", metadata !1044, i32 15, metadata !1046, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32, i64)* @memrchr} ; [ DW_T
!1044 = metadata !{i32 589865, metadata !"memrchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1045} ; [ DW_TAG_file_type ]
!1045 = metadata !{i32 589841, i32 0, i32 1, metadata !"memrchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1046 = metadata !{i32 589845, metadata !1044, metadata !"", metadata !1044, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1047, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1047 = metadata !{metadata !1048, metadata !1048, metadata !1049, metadata !1050}
!1048 = metadata !{i32 589839, metadata !1044, metadata !"", metadata !1044, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1049 = metadata !{i32 589860, metadata !1044, metadata !"int", metadata !1044, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1050 = metadata !{i32 589846, metadata !1051, metadata !"size_t", metadata !1051, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1052} ; [ DW_TAG_typedef ]
!1051 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1045} ; [ DW_TAG_file_type ]
!1052 = metadata !{i32 589860, metadata !1044, metadata !"long unsigned int", metadata !1044, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1053 = metadata !{i32 589870, i32 0, metadata !1054, metadata !"nl_langinfo", metadata !"nl_langinfo", metadata !"nl_langinfo", metadata !1056, i32 1031, metadata !1057, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32)* @nl_langinfo} 
!1054 = metadata !{i32 589865, metadata !"nl_langinfo.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !1055} ; [ DW_TAG_file_type ]
!1055 = metadata !{i32 589841, i32 0, i32 1, metadata !"nl_langinfo.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0
!1056 = metadata !{i32 589865, metadata !"locale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !1055} ; [ DW_TAG_file_type ]
!1057 = metadata !{i32 589845, metadata !1054, metadata !"", metadata !1054, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1058, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1058 = metadata !{metadata !1059, metadata !1061}
!1059 = metadata !{i32 589839, metadata !1054, metadata !"", metadata !1054, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1060} ; [ DW_TAG_pointer_type ]
!1060 = metadata !{i32 589860, metadata !1054, metadata !"char", metadata !1054, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1061 = metadata !{i32 589846, metadata !1062, metadata !"nl_item", metadata !1062, i32 41, i64 0, i64 0, i64 0, i32 0, metadata !1063} ; [ DW_TAG_typedef ]
!1062 = metadata !{i32 589865, metadata !"nl_types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1055} ; [ DW_TAG_file_type ]
!1063 = metadata !{i32 589860, metadata !1054, metadata !"int", metadata !1054, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1064 = metadata !{i32 589870, i32 0, metadata !1065, metadata !"putchar_unlocked", metadata !"putchar_unlocked", metadata !"putchar_unlocked", metadata !1067, i32 17, metadata !1068, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @
!1065 = metadata !{i32 589865, metadata !"putchar_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1066} ; [ DW_TAG_file_type ]
!1066 = metadata !{i32 589841, i32 0, i32 1, metadata !"putchar_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0}
!1067 = metadata !{i32 589865, metadata !"putchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1066} ; [ DW_TAG_file_type ]
!1068 = metadata !{i32 589845, metadata !1065, metadata !"", metadata !1065, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1069, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1069 = metadata !{metadata !1070, metadata !1070}
!1070 = metadata !{i32 589860, metadata !1065, metadata !"int", metadata !1065, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1071 = metadata !{i32 589870, i32 0, metadata !1072, metadata !"realpath", metadata !"realpath", metadata !"realpath", metadata !1072, i32 52, metadata !1074, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*)* @realpath} ; [ DW_TA
!1072 = metadata !{i32 589865, metadata !"realpath.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1073} ; [ DW_TAG_file_type ]
!1073 = metadata !{i32 589841, i32 0, i32 1, metadata !"realpath.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!1074 = metadata !{i32 589845, metadata !1072, metadata !"", metadata !1072, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1075, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1075 = metadata !{metadata !1076, metadata !1078, metadata !1076}
!1076 = metadata !{i32 589839, metadata !1072, metadata !"", metadata !1072, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1077} ; [ DW_TAG_pointer_type ]
!1077 = metadata !{i32 589860, metadata !1072, metadata !"char", metadata !1072, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1078 = metadata !{i32 589839, metadata !1072, metadata !"", metadata !1072, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1079} ; [ DW_TAG_pointer_type ]
!1079 = metadata !{i32 589862, metadata !1072, metadata !"", metadata !1072, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1077} ; [ DW_TAG_const_type ]
!1080 = metadata !{i32 589870, i32 0, metadata !1081, metadata !"setlocale", metadata !"setlocale", metadata !"setlocale", metadata !1083, i32 162, metadata !1084, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8*)* @setlocale} ; [ 
!1081 = metadata !{i32 589865, metadata !"setlocale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !1082} ; [ DW_TAG_file_type ]
!1082 = metadata !{i32 589841, i32 0, i32 1, metadata !"setlocale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!1083 = metadata !{i32 589865, metadata !"locale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !1082} ; [ DW_TAG_file_type ]
!1084 = metadata !{i32 589845, metadata !1081, metadata !"", metadata !1081, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1085, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1085 = metadata !{metadata !1086, metadata !1088, metadata !1089}
!1086 = metadata !{i32 589839, metadata !1081, metadata !"", metadata !1081, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1087} ; [ DW_TAG_pointer_type ]
!1087 = metadata !{i32 589860, metadata !1081, metadata !"char", metadata !1081, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1088 = metadata !{i32 589860, metadata !1081, metadata !"int", metadata !1081, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1089 = metadata !{i32 589839, metadata !1081, metadata !"", metadata !1081, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1090} ; [ DW_TAG_pointer_type ]
!1090 = metadata !{i32 589862, metadata !1081, metadata !"", metadata !1081, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1087} ; [ DW_TAG_const_type ]
!1091 = metadata !{i32 589870, i32 0, metadata !1092, metadata !"snprintf", metadata !"snprintf", metadata !"snprintf", metadata !1092, i32 20, metadata !1094, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i64, i8*, ...)* @snprintf}
!1092 = metadata !{i32 589865, metadata !"snprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1093} ; [ DW_TAG_file_type ]
!1093 = metadata !{i32 589841, i32 0, i32 1, metadata !"snprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1094 = metadata !{i32 589845, metadata !1092, metadata !"", metadata !1092, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1095, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1095 = metadata !{metadata !1096, metadata !1097, metadata !1099, metadata !1102}
!1096 = metadata !{i32 589860, metadata !1092, metadata !"int", metadata !1092, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1097 = metadata !{i32 589839, metadata !1092, metadata !"", metadata !1092, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1098} ; [ DW_TAG_pointer_type ]
!1098 = metadata !{i32 589860, metadata !1092, metadata !"char", metadata !1092, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1099 = metadata !{i32 589846, metadata !1100, metadata !"size_t", metadata !1100, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1101} ; [ DW_TAG_typedef ]
!1100 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1093} ; [ DW_TAG_file_type ]
!1101 = metadata !{i32 589860, metadata !1092, metadata !"long unsigned int", metadata !1092, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1102 = metadata !{i32 589839, metadata !1092, metadata !"", metadata !1092, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1103} ; [ DW_TAG_pointer_type ]
!1103 = metadata !{i32 589862, metadata !1092, metadata !"", metadata !1092, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1098} ; [ DW_TAG_const_type ]
!1104 = metadata !{i32 589870, i32 0, metadata !1105, metadata !"sprintf", metadata !"sprintf", metadata !"sprintf", metadata !1105, i32 19, metadata !1107, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*, ...)* @sprintf} ; [ DW_T
!1105 = metadata !{i32 589865, metadata !"sprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1106} ; [ DW_TAG_file_type ]
!1106 = metadata !{i32 589841, i32 0, i32 1, metadata !"sprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1107 = metadata !{i32 589845, metadata !1105, metadata !"", metadata !1105, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1108, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1108 = metadata !{metadata !1109, metadata !1110, metadata !1112}
!1109 = metadata !{i32 589860, metadata !1105, metadata !"int", metadata !1105, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1110 = metadata !{i32 589839, metadata !1105, metadata !"", metadata !1105, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1111} ; [ DW_TAG_pointer_type ]
!1111 = metadata !{i32 589860, metadata !1105, metadata !"char", metadata !1105, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1112 = metadata !{i32 589839, metadata !1105, metadata !"", metadata !1105, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1113} ; [ DW_TAG_pointer_type ]
!1113 = metadata !{i32 589862, metadata !1105, metadata !"", metadata !1105, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1111} ; [ DW_TAG_const_type ]
!1114 = metadata !{i32 589870, i32 0, metadata !1115, metadata !"statvfs", metadata !"statvfs", metadata !"statvfs", metadata !1115, i32 41, metadata !1117, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, %struct.statvfs*)* @statvfs} 
!1115 = metadata !{i32 589865, metadata !"statvfs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/statfs", metadata !1116} ; [ DW_TAG_file_type ]
!1116 = metadata !{i32 589841, i32 0, i32 1, metadata !"statvfs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/statfs", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!1117 = metadata !{i32 589845, metadata !1115, metadata !"", metadata !1115, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1118, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1118 = metadata !{metadata !1119, metadata !1120, metadata !1123}
!1119 = metadata !{i32 589860, metadata !1115, metadata !"int", metadata !1115, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1120 = metadata !{i32 589839, metadata !1115, metadata !"", metadata !1115, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1121} ; [ DW_TAG_pointer_type ]
!1121 = metadata !{i32 589862, metadata !1115, metadata !"", metadata !1115, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1122} ; [ DW_TAG_const_type ]
!1122 = metadata !{i32 589860, metadata !1115, metadata !"char", metadata !1115, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1123 = metadata !{i32 589839, metadata !1115, metadata !"", metadata !1115, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1124} ; [ DW_TAG_pointer_type ]
!1124 = metadata !{i32 589843, metadata !1115, metadata !"statvfs", metadata !1125, i32 30, i64 896, i64 64, i64 0, i32 0, null, metadata !1126, i32 0, null} ; [ DW_TAG_structure_type ]
!1125 = metadata !{i32 589865, metadata !"statvfs.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1116} ; [ DW_TAG_file_type ]
!1126 = metadata !{metadata !1127, metadata !1129, metadata !1130, metadata !1133, metadata !1134, metadata !1135, metadata !1137, metadata !1138, metadata !1139, metadata !1140, metadata !1141, metadata !1142}
!1127 = metadata !{i32 589837, metadata !1124, metadata !"f_bsize", metadata !1125, i32 31, i64 64, i64 64, i64 0, i32 0, metadata !1128} ; [ DW_TAG_member ]
!1128 = metadata !{i32 589860, metadata !1115, metadata !"long unsigned int", metadata !1115, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1129 = metadata !{i32 589837, metadata !1124, metadata !"f_frsize", metadata !1125, i32 32, i64 64, i64 64, i64 64, i32 0, metadata !1128} ; [ DW_TAG_member ]
!1130 = metadata !{i32 589837, metadata !1124, metadata !"f_blocks", metadata !1125, i32 34, i64 64, i64 64, i64 128, i32 0, metadata !1131} ; [ DW_TAG_member ]
!1131 = metadata !{i32 589846, metadata !1132, metadata !"__fsblkcnt_t", metadata !1132, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !1128} ; [ DW_TAG_typedef ]
!1132 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1116} ; [ DW_TAG_file_type ]
!1133 = metadata !{i32 589837, metadata !1124, metadata !"f_bfree", metadata !1125, i32 35, i64 64, i64 64, i64 192, i32 0, metadata !1131} ; [ DW_TAG_member ]
!1134 = metadata !{i32 589837, metadata !1124, metadata !"f_bavail", metadata !1125, i32 36, i64 64, i64 64, i64 256, i32 0, metadata !1131} ; [ DW_TAG_member ]
!1135 = metadata !{i32 589837, metadata !1124, metadata !"f_files", metadata !1125, i32 37, i64 64, i64 64, i64 320, i32 0, metadata !1136} ; [ DW_TAG_member ]
!1136 = metadata !{i32 589846, metadata !1132, metadata !"__fsfilcnt_t", metadata !1132, i32 181, i64 0, i64 0, i64 0, i32 0, metadata !1128} ; [ DW_TAG_typedef ]
!1137 = metadata !{i32 589837, metadata !1124, metadata !"f_ffree", metadata !1125, i32 38, i64 64, i64 64, i64 384, i32 0, metadata !1136} ; [ DW_TAG_member ]
!1138 = metadata !{i32 589837, metadata !1124, metadata !"f_favail", metadata !1125, i32 39, i64 64, i64 64, i64 448, i32 0, metadata !1136} ; [ DW_TAG_member ]
!1139 = metadata !{i32 589837, metadata !1124, metadata !"f_fsid", metadata !1125, i32 48, i64 64, i64 64, i64 512, i32 0, metadata !1128} ; [ DW_TAG_member ]
!1140 = metadata !{i32 589837, metadata !1124, metadata !"f_flag", metadata !1125, i32 52, i64 64, i64 64, i64 576, i32 0, metadata !1128} ; [ DW_TAG_member ]
!1141 = metadata !{i32 589837, metadata !1124, metadata !"f_namemax", metadata !1125, i32 53, i64 64, i64 64, i64 640, i32 0, metadata !1128} ; [ DW_TAG_member ]
!1142 = metadata !{i32 589837, metadata !1124, metadata !"__f_spare", metadata !1125, i32 54, i64 192, i64 32, i64 704, i32 0, metadata !1143} ; [ DW_TAG_member ]
!1143 = metadata !{i32 589825, metadata !1115, metadata !"", metadata !1115, i32 0, i64 192, i64 32, i64 0, i32 0, metadata !1119, metadata !1144, i32 0, null} ; [ DW_TAG_array_type ]
!1144 = metadata !{metadata !1145}
!1145 = metadata !{i32 589857, i64 0, i64 5}      ; [ DW_TAG_subrange_type ]
!1146 = metadata !{i32 589870, i32 0, metadata !1147, metadata !"_stdio_term", metadata !"_stdio_term", metadata !"_stdio_term", metadata !1147, i32 211, metadata !1149, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @_stdio_term} ; [
!1147 = metadata !{i32 589865, metadata !"_stdio.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1148} ; [ DW_TAG_file_type ]
!1148 = metadata !{i32 589841, i32 0, i32 1, metadata !"_stdio.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1149 = metadata !{i32 589845, metadata !1147, metadata !"", metadata !1147, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1150 = metadata !{i32 589870, i32 0, metadata !1147, metadata !"_stdio_init", metadata !"_stdio_init", metadata !"_stdio_init", metadata !1147, i32 278, metadata !1149, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @_stdio_init} ; [
!1151 = metadata !{i32 589870, i32 0, metadata !1152, metadata !"strchr", metadata !"strchr", metadata !"strchr", metadata !1152, i32 19, metadata !1154, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32)* @strchr} ; [ DW_TAG_subpro
!1152 = metadata !{i32 589865, metadata !"strchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1153} ; [ DW_TAG_file_type ]
!1153 = metadata !{i32 589841, i32 0, i32 1, metadata !"strchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1154 = metadata !{i32 589845, metadata !1152, metadata !"", metadata !1152, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1155, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1155 = metadata !{metadata !1156, metadata !1158, metadata !1160}
!1156 = metadata !{i32 589839, metadata !1152, metadata !"", metadata !1152, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1157} ; [ DW_TAG_pointer_type ]
!1157 = metadata !{i32 589860, metadata !1152, metadata !"char", metadata !1152, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1158 = metadata !{i32 589839, metadata !1152, metadata !"", metadata !1152, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1159} ; [ DW_TAG_pointer_type ]
!1159 = metadata !{i32 589862, metadata !1152, metadata !"", metadata !1152, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1157} ; [ DW_TAG_const_type ]
!1160 = metadata !{i32 589860, metadata !1152, metadata !"int", metadata !1152, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1161 = metadata !{i32 589870, i32 0, metadata !1162, metadata !"strcmp", metadata !"strcmp", metadata !"strcmp", metadata !1162, i32 21, metadata !1164, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*)* @strcmp} ; [ DW_TAG_subpro
!1162 = metadata !{i32 589865, metadata !"strcmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1163} ; [ DW_TAG_file_type ]
!1163 = metadata !{i32 589841, i32 0, i32 1, metadata !"strcmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1164 = metadata !{i32 589845, metadata !1162, metadata !"", metadata !1162, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1165, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1165 = metadata !{metadata !1166, metadata !1167, metadata !1167}
!1166 = metadata !{i32 589860, metadata !1162, metadata !"int", metadata !1162, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1167 = metadata !{i32 589839, metadata !1162, metadata !"", metadata !1162, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1168} ; [ DW_TAG_pointer_type ]
!1168 = metadata !{i32 589862, metadata !1162, metadata !"", metadata !1162, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1169} ; [ DW_TAG_const_type ]
!1169 = metadata !{i32 589860, metadata !1162, metadata !"char", metadata !1162, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1170 = metadata !{i32 589870, i32 0, metadata !1171, metadata !"strcpy", metadata !"strcpy", metadata !"strcpy", metadata !1171, i32 19, metadata !1173, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*)* @strcpy} ; [ DW_TAG_subpro
!1171 = metadata !{i32 589865, metadata !"strcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1172} ; [ DW_TAG_file_type ]
!1172 = metadata !{i32 589841, i32 0, i32 1, metadata !"strcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1173 = metadata !{i32 589845, metadata !1171, metadata !"", metadata !1171, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1174, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1174 = metadata !{metadata !1175, metadata !1175, metadata !1177}
!1175 = metadata !{i32 589839, metadata !1171, metadata !"", metadata !1171, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1176} ; [ DW_TAG_pointer_type ]
!1176 = metadata !{i32 589860, metadata !1171, metadata !"char", metadata !1171, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1177 = metadata !{i32 589839, metadata !1171, metadata !"", metadata !1171, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1178} ; [ DW_TAG_pointer_type ]
!1178 = metadata !{i32 589862, metadata !1171, metadata !"", metadata !1171, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1176} ; [ DW_TAG_const_type ]
!1179 = metadata !{i32 589870, i32 0, metadata !1180, metadata !"strdup", metadata !"strdup", metadata !"strdup", metadata !1180, i32 24, metadata !1182, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @strdup} ; [ DW_TAG_subprogram 
!1180 = metadata !{i32 589865, metadata !"strdup.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1181} ; [ DW_TAG_file_type ]
!1181 = metadata !{i32 589841, i32 0, i32 1, metadata !"strdup.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1182 = metadata !{i32 589845, metadata !1180, metadata !"", metadata !1180, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1183, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1183 = metadata !{metadata !1184, metadata !1186}
!1184 = metadata !{i32 589839, metadata !1180, metadata !"", metadata !1180, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1185} ; [ DW_TAG_pointer_type ]
!1185 = metadata !{i32 589860, metadata !1180, metadata !"char", metadata !1180, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1186 = metadata !{i32 589839, metadata !1180, metadata !"", metadata !1180, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1187} ; [ DW_TAG_pointer_type ]
!1187 = metadata !{i32 589862, metadata !1180, metadata !"", metadata !1180, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1185} ; [ DW_TAG_const_type ]
!1188 = metadata !{i32 589870, i32 0, metadata !1189, metadata !"strlen", metadata !"strlen", metadata !"strlen", metadata !1189, i32 19, metadata !1191, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*)* @strlen} ; [ DW_TAG_subprogram 
!1189 = metadata !{i32 589865, metadata !"strlen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1190} ; [ DW_TAG_file_type ]
!1190 = metadata !{i32 589841, i32 0, i32 1, metadata !"strlen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1191 = metadata !{i32 589845, metadata !1189, metadata !"", metadata !1189, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1192, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1192 = metadata !{metadata !1193, metadata !1196}
!1193 = metadata !{i32 589846, metadata !1194, metadata !"size_t", metadata !1194, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1195} ; [ DW_TAG_typedef ]
!1194 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1190} ; [ DW_TAG_file_type ]
!1195 = metadata !{i32 589860, metadata !1189, metadata !"long unsigned int", metadata !1189, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1196 = metadata !{i32 589839, metadata !1189, metadata !"", metadata !1189, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1197} ; [ DW_TAG_pointer_type ]
!1197 = metadata !{i32 589862, metadata !1189, metadata !"", metadata !1189, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1198} ; [ DW_TAG_const_type ]
!1198 = metadata !{i32 589860, metadata !1189, metadata !"char", metadata !1189, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1199 = metadata !{i32 589870, i32 0, metadata !1200, metadata !"strncmp", metadata !"strncmp", metadata !"strncmp", metadata !1200, i32 18, metadata !1202, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*, i64)* @strncmp} ; [ DW_T
!1200 = metadata !{i32 589865, metadata !"strncmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1201} ; [ DW_TAG_file_type ]
!1201 = metadata !{i32 589841, i32 0, i32 1, metadata !"strncmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1202 = metadata !{i32 589845, metadata !1200, metadata !"", metadata !1200, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1203, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1203 = metadata !{metadata !1204, metadata !1205, metadata !1205, metadata !1208}
!1204 = metadata !{i32 589860, metadata !1200, metadata !"int", metadata !1200, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1205 = metadata !{i32 589839, metadata !1200, metadata !"", metadata !1200, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1206} ; [ DW_TAG_pointer_type ]
!1206 = metadata !{i32 589862, metadata !1200, metadata !"", metadata !1200, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1207} ; [ DW_TAG_const_type ]
!1207 = metadata !{i32 589860, metadata !1200, metadata !"char", metadata !1200, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1208 = metadata !{i32 589846, metadata !1209, metadata !"size_t", metadata !1209, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1210} ; [ DW_TAG_typedef ]
!1209 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1201} ; [ DW_TAG_file_type ]
!1210 = metadata !{i32 589860, metadata !1200, metadata !"long unsigned int", metadata !1200, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1211 = metadata !{i32 589870, i32 0, metadata !1212, metadata !"strnlen", metadata !"strnlen", metadata !"strnlen", metadata !1212, i32 21, metadata !1214, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64)* @strnlen} ; [ DW_TAG_su
!1212 = metadata !{i32 589865, metadata !"strnlen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1213} ; [ DW_TAG_file_type ]
!1213 = metadata !{i32 589841, i32 0, i32 1, metadata !"strnlen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1214 = metadata !{i32 589845, metadata !1212, metadata !"", metadata !1212, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1215, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1215 = metadata !{metadata !1216, metadata !1219, metadata !1216}
!1216 = metadata !{i32 589846, metadata !1217, metadata !"size_t", metadata !1217, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1218} ; [ DW_TAG_typedef ]
!1217 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1213} ; [ DW_TAG_file_type ]
!1218 = metadata !{i32 589860, metadata !1212, metadata !"long unsigned int", metadata !1212, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1219 = metadata !{i32 589839, metadata !1212, metadata !"", metadata !1212, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1220} ; [ DW_TAG_pointer_type ]
!1220 = metadata !{i32 589862, metadata !1212, metadata !"", metadata !1212, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1221} ; [ DW_TAG_const_type ]
!1221 = metadata !{i32 589860, metadata !1212, metadata !"char", metadata !1212, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1222 = metadata !{i32 589870, i32 0, metadata !1223, metadata !"strrchr", metadata !"strrchr", metadata !"strrchr", metadata !1223, i32 18, metadata !1225, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32)* @strrchr} ; [ DW_TAG_su
!1223 = metadata !{i32 589865, metadata !"strrchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1224} ; [ DW_TAG_file_type ]
!1224 = metadata !{i32 589841, i32 0, i32 1, metadata !"strrchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1225 = metadata !{i32 589845, metadata !1223, metadata !"", metadata !1223, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1226, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1226 = metadata !{metadata !1227, metadata !1229, metadata !1231}
!1227 = metadata !{i32 589839, metadata !1223, metadata !"", metadata !1223, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1228} ; [ DW_TAG_pointer_type ]
!1228 = metadata !{i32 589860, metadata !1223, metadata !"char", metadata !1223, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1229 = metadata !{i32 589839, metadata !1223, metadata !"", metadata !1223, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1230} ; [ DW_TAG_pointer_type ]
!1230 = metadata !{i32 589862, metadata !1223, metadata !"", metadata !1223, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1228} ; [ DW_TAG_const_type ]
!1231 = metadata !{i32 589860, metadata !1223, metadata !"int", metadata !1223, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1232 = metadata !{i32 589870, i32 0, metadata !1233, metadata !"strspn", metadata !"strspn", metadata !"strspn", metadata !1233, i32 19, metadata !1235, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8*)* @strspn} ; [ DW_TAG_subpro
!1233 = metadata !{i32 589865, metadata !"strspn.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1234} ; [ DW_TAG_file_type ]
!1234 = metadata !{i32 589841, i32 0, i32 1, metadata !"strspn.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1235 = metadata !{i32 589845, metadata !1233, metadata !"", metadata !1233, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1236, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1236 = metadata !{metadata !1237, metadata !1240, metadata !1240}
!1237 = metadata !{i32 589846, metadata !1238, metadata !"size_t", metadata !1238, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1239} ; [ DW_TAG_typedef ]
!1238 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1234} ; [ DW_TAG_file_type ]
!1239 = metadata !{i32 589860, metadata !1233, metadata !"long unsigned int", metadata !1233, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1240 = metadata !{i32 589839, metadata !1233, metadata !"", metadata !1233, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1241} ; [ DW_TAG_pointer_type ]
!1241 = metadata !{i32 589862, metadata !1233, metadata !"", metadata !1233, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1242} ; [ DW_TAG_const_type ]
!1242 = metadata !{i32 589860, metadata !1233, metadata !"char", metadata !1233, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1243 = metadata !{i32 589870, i32 0, metadata !1244, metadata !"strtoul", metadata !"strtoul", metadata !"strtoul", metadata !1246, i32 385, metadata !1247, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8**, i32)* @strtoul} ; [ DW
!1244 = metadata !{i32 589865, metadata !"strtoul.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1245} ; [ DW_TAG_file_type ]
!1245 = metadata !{i32 589841, i32 0, i32 1, metadata !"strtoul.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1246 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1245} ; [ DW_TAG_file_type ]
!1247 = metadata !{i32 589845, metadata !1244, metadata !"", metadata !1244, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1248, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1248 = metadata !{metadata !1249, metadata !1250, metadata !1253, metadata !1255}
!1249 = metadata !{i32 589860, metadata !1244, metadata !"long unsigned int", metadata !1244, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1250 = metadata !{i32 589839, metadata !1244, metadata !"", metadata !1244, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1251} ; [ DW_TAG_pointer_type ]
!1251 = metadata !{i32 589862, metadata !1244, metadata !"", metadata !1244, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1252} ; [ DW_TAG_const_type ]
!1252 = metadata !{i32 589860, metadata !1244, metadata !"char", metadata !1244, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1253 = metadata !{i32 589839, metadata !1244, metadata !"", metadata !1244, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1254} ; [ DW_TAG_pointer_type ]
!1254 = metadata !{i32 589839, metadata !1244, metadata !"", metadata !1244, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1252} ; [ DW_TAG_pointer_type ]
!1255 = metadata !{i32 589860, metadata !1244, metadata !"int", metadata !1244, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1256 = metadata !{i32 589870, i32 0, metadata !1257, metadata !"wcstombs", metadata !"wcstombs", metadata !"wcstombs", metadata !1259, i32 1035, metadata !1260, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i32*, i64)* @wcstombs} ;
!1257 = metadata !{i32 589865, metadata !"wcstombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1258} ; [ DW_TAG_file_type ]
!1258 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcstombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!1259 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1258} ; [ DW_TAG_file_type ]
!1260 = metadata !{i32 589845, metadata !1257, metadata !"", metadata !1257, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1261, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1261 = metadata !{metadata !1262, metadata !1265, metadata !1267, metadata !1262}
!1262 = metadata !{i32 589846, metadata !1263, metadata !"size_t", metadata !1263, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1264} ; [ DW_TAG_typedef ]
!1263 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1258} ; [ DW_TAG_file_type ]
!1264 = metadata !{i32 589860, metadata !1257, metadata !"long unsigned int", metadata !1257, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1265 = metadata !{i32 589839, metadata !1257, metadata !"", metadata !1257, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1266} ; [ DW_TAG_pointer_type ]
!1266 = metadata !{i32 589860, metadata !1257, metadata !"char", metadata !1257, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1267 = metadata !{i32 589839, metadata !1257, metadata !"", metadata !1257, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1268} ; [ DW_TAG_pointer_type ]
!1268 = metadata !{i32 589846, metadata !1263, metadata !"wchar_t", metadata !1263, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1269} ; [ DW_TAG_typedef ]
!1269 = metadata !{i32 589860, metadata !1257, metadata !"int", metadata !1257, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1270 = metadata !{i32 589870, i32 0, metadata !1271, metadata !"wcswidth", metadata !"wcswidth", metadata !"wcswidth", metadata !1273, i32 1136, metadata !1274, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32*, i64)* @wcswidth} ; [ DW
!1271 = metadata !{i32 589865, metadata !"wcswidth.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1272} ; [ DW_TAG_file_type ]
!1272 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcswidth.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!1273 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1272} ; [ DW_TAG_file_type ]
!1274 = metadata !{i32 589845, metadata !1271, metadata !"", metadata !1271, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1275, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1275 = metadata !{metadata !1276, metadata !1277, metadata !1280}
!1276 = metadata !{i32 589860, metadata !1271, metadata !"int", metadata !1271, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1277 = metadata !{i32 589839, metadata !1271, metadata !"", metadata !1271, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1278} ; [ DW_TAG_pointer_type ]
!1278 = metadata !{i32 589846, metadata !1279, metadata !"wchar_t", metadata !1279, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1276} ; [ DW_TAG_typedef ]
!1279 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1272} ; [ DW_TAG_file_type ]
!1280 = metadata !{i32 589846, metadata !1279, metadata !"size_t", metadata !1279, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1281} ; [ DW_TAG_typedef ]
!1281 = metadata !{i32 589860, metadata !1271, metadata !"long unsigned int", metadata !1271, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1282 = metadata !{i32 589870, i32 0, metadata !1283, metadata !"wcwidth", metadata !"wcwidth", metadata !"wcwidth", metadata !1285, i32 1167, metadata !1286, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @wcwidth} ; [ DW_TAG_subpr
!1283 = metadata !{i32 589865, metadata !"wcwidth.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1284} ; [ DW_TAG_file_type ]
!1284 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcwidth.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [
!1285 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1284} ; [ DW_TAG_file_type ]
!1286 = metadata !{i32 589845, metadata !1283, metadata !"", metadata !1283, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1287, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1287 = metadata !{metadata !1288, metadata !1289}
!1288 = metadata !{i32 589860, metadata !1283, metadata !"int", metadata !1283, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1289 = metadata !{i32 589846, metadata !1290, metadata !"wchar_t", metadata !1290, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1288} ; [ DW_TAG_typedef ]
!1290 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1284} ; [ DW_TAG_file_type ]
!1291 = metadata !{i32 589870, i32 0, metadata !1292, metadata !"strsep", metadata !"strsep", metadata !"strsep", metadata !1292, i32 17, metadata !1294, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8**, i8*)* @strsep} ; [ DW_TAG_subpr
!1292 = metadata !{i32 589865, metadata !"strsep.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1293} ; [ DW_TAG_file_type ]
!1293 = metadata !{i32 589841, i32 0, i32 1, metadata !"strsep.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1294 = metadata !{i32 589845, metadata !1292, metadata !"", metadata !1292, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1295, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1295 = metadata !{metadata !1296, metadata !1298, metadata !1299}
!1296 = metadata !{i32 589839, metadata !1292, metadata !"", metadata !1292, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1297} ; [ DW_TAG_pointer_type ]
!1297 = metadata !{i32 589860, metadata !1292, metadata !"char", metadata !1292, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1298 = metadata !{i32 589839, metadata !1292, metadata !"", metadata !1292, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1296} ; [ DW_TAG_pointer_type ]
!1299 = metadata !{i32 589839, metadata !1292, metadata !"", metadata !1292, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1300} ; [ DW_TAG_pointer_type ]
!1300 = metadata !{i32 589862, metadata !1292, metadata !"", metadata !1292, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1297} ; [ DW_TAG_const_type ]
!1301 = metadata !{i32 589870, i32 0, metadata !1302, metadata !"__h_errno_location", metadata !"__h_errno_location", metadata !"__h_errno_location", metadata !1302, i32 11, metadata !1304, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32* (
!1302 = metadata !{i32 589865, metadata !"__h_errno_location.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !1303} ; [ DW_TAG_file_type ]
!1303 = metadata !{i32 589841, i32 0, i32 1, metadata !"__h_errno_location.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata 
!1304 = metadata !{i32 589845, metadata !1302, metadata !"", metadata !1302, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1305, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1305 = metadata !{metadata !1306}
!1306 = metadata !{i32 589839, metadata !1302, metadata !"", metadata !1302, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1307} ; [ DW_TAG_pointer_type ]
!1307 = metadata !{i32 589860, metadata !1302, metadata !"int", metadata !1302, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1308 = metadata !{i32 589870, i32 0, metadata !1309, metadata !"__cxa_atexit", metadata !"__cxa_atexit", metadata !"__cxa_atexit", metadata !1311, i32 158, metadata !1312, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (void (i8*)*, i8*, 
!1309 = metadata !{i32 589865, metadata !"__cxa_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1310} ; [ DW_TAG_file_type ]
!1310 = metadata !{i32 589841, i32 0, i32 1, metadata !"__cxa_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!1311 = metadata !{i32 589865, metadata !"_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1310} ; [ DW_TAG_file_type ]
!1312 = metadata !{i32 589845, metadata !1309, metadata !"", metadata !1309, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1313, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1313 = metadata !{metadata !1314, metadata !1315, metadata !1319, metadata !1319}
!1314 = metadata !{i32 589860, metadata !1309, metadata !"int", metadata !1309, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1315 = metadata !{i32 589846, metadata !1311, metadata !"cxaefuncp", metadata !1311, i32 55, i64 0, i64 0, i64 0, i32 0, metadata !1316} ; [ DW_TAG_typedef ]
!1316 = metadata !{i32 589839, metadata !1309, metadata !"", metadata !1309, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1317} ; [ DW_TAG_pointer_type ]
!1317 = metadata !{i32 589845, metadata !1309, metadata !"", metadata !1309, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1318, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1318 = metadata !{null, metadata !1319}
!1319 = metadata !{i32 589839, metadata !1309, metadata !"", metadata !1309, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1320 = metadata !{i32 589870, i32 0, metadata !1321, metadata !"__sigismember", metadata !"__sigismember", metadata !"__sigismember", metadata !1323, i32 117, metadata !1324, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__sigse
!1321 = metadata !{i32 589865, metadata !"sigsetops.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !1322} ; [ DW_TAG_file_type ]
!1322 = metadata !{i32 589841, i32 0, i32 1, metadata !"sigsetops.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ D
!1323 = metadata !{i32 589865, metadata !"sigset.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1322} ; [ DW_TAG_file_type ]
!1324 = metadata !{i32 589845, metadata !1321, metadata !"", metadata !1321, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1325, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1325 = metadata !{metadata !1326, metadata !1327, metadata !1326}
!1326 = metadata !{i32 589860, metadata !1321, metadata !"int", metadata !1321, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1327 = metadata !{i32 589839, metadata !1321, metadata !"", metadata !1321, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1328} ; [ DW_TAG_pointer_type ]
!1328 = metadata !{i32 589846, metadata !1323, metadata !"__sigset_t", metadata !1323, i32 31, i64 0, i64 0, i64 0, i32 0, metadata !1329} ; [ DW_TAG_typedef ]
!1329 = metadata !{i32 589843, metadata !1321, metadata !"", metadata !1323, i32 29, i64 1024, i64 64, i64 0, i32 0, null, metadata !1330, i32 0, null} ; [ DW_TAG_structure_type ]
!1330 = metadata !{metadata !1331}
!1331 = metadata !{i32 589837, metadata !1329, metadata !"__val", metadata !1323, i32 30, i64 1024, i64 64, i64 0, i32 0, metadata !1332} ; [ DW_TAG_member ]
!1332 = metadata !{i32 589825, metadata !1321, metadata !"", metadata !1321, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !1333, metadata !1334, i32 0, null} ; [ DW_TAG_array_type ]
!1333 = metadata !{i32 589860, metadata !1321, metadata !"long unsigned int", metadata !1321, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1334 = metadata !{metadata !1335}
!1335 = metadata !{i32 589857, i64 0, i64 15}     ; [ DW_TAG_subrange_type ]
!1336 = metadata !{i32 589870, i32 0, metadata !1321, metadata !"__sigaddset", metadata !"__sigaddset", metadata !"__sigaddset", metadata !1323, i32 118, metadata !1324, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__sigset_t*, 
!1337 = metadata !{i32 589870, i32 0, metadata !1321, metadata !"__sigdelset", metadata !"__sigdelset", metadata !"__sigdelset", metadata !1323, i32 119, metadata !1324, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__sigset_t*, 
!1338 = metadata !{i32 589870, i32 0, metadata !1339, metadata !"__stdio_READ", metadata !"__stdio_READ", metadata !"__stdio_READ", metadata !1339, i32 28, metadata !1341, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, i8*, i64)* @__
!1339 = metadata !{i32 589865, metadata !"_READ.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1340} ; [ DW_TAG_file_type ]
!1340 = metadata !{i32 589841, i32 0, i32 1, metadata !"_READ.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!1341 = metadata !{i32 589845, metadata !1339, metadata !"", metadata !1339, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1342, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1342 = metadata !{metadata !1343, metadata !1346, metadata !1360, metadata !1343}
!1343 = metadata !{i32 589846, metadata !1344, metadata !"size_t", metadata !1344, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1345} ; [ DW_TAG_typedef ]
!1344 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1340} ; [ DW_TAG_file_type ]
!1345 = metadata !{i32 589860, metadata !1339, metadata !"long unsigned int", metadata !1339, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1346 = metadata !{i32 589839, metadata !1339, metadata !"", metadata !1339, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1347} ; [ DW_TAG_pointer_type ]
!1347 = metadata !{i32 589846, metadata !1348, metadata !"FILE", metadata !1348, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1349} ; [ DW_TAG_typedef ]
!1348 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1340} ; [ DW_TAG_file_type ]
!1349 = metadata !{i32 589843, metadata !1339, metadata !"__STDIO_FILE_STRUCT", metadata !1348, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1350, i32 0, null} ; [ DW_TAG_structure_type ]
!1350 = metadata !{metadata !1351, metadata !1354, metadata !1357, metadata !1359, metadata !1361, metadata !1362, metadata !1363, metadata !1364, metadata !1365, metadata !1366, metadata !1368, metadata !1371}
!1351 = metadata !{i32 589837, metadata !1349, metadata !"__modeflags", metadata !1352, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1353} ; [ DW_TAG_member ]
!1352 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1340} ; [ DW_TAG_file_type ]
!1353 = metadata !{i32 589860, metadata !1339, metadata !"short unsigned int", metadata !1339, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1354 = metadata !{i32 589837, metadata !1349, metadata !"__ungot_width", metadata !1352, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1355} ; [ DW_TAG_member ]
!1355 = metadata !{i32 589825, metadata !1339, metadata !"", metadata !1339, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1356, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1356 = metadata !{i32 589860, metadata !1339, metadata !"unsigned char", metadata !1339, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1357 = metadata !{i32 589837, metadata !1349, metadata !"__filedes", metadata !1352, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1358} ; [ DW_TAG_member ]
!1358 = metadata !{i32 589860, metadata !1339, metadata !"int", metadata !1339, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1359 = metadata !{i32 589837, metadata !1349, metadata !"__bufstart", metadata !1352, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1360} ; [ DW_TAG_member ]
!1360 = metadata !{i32 589839, metadata !1339, metadata !"", metadata !1339, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1356} ; [ DW_TAG_pointer_type ]
!1361 = metadata !{i32 589837, metadata !1349, metadata !"__bufend", metadata !1352, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1360} ; [ DW_TAG_member ]
!1362 = metadata !{i32 589837, metadata !1349, metadata !"__bufpos", metadata !1352, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1360} ; [ DW_TAG_member ]
!1363 = metadata !{i32 589837, metadata !1349, metadata !"__bufread", metadata !1352, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1360} ; [ DW_TAG_member ]
!1364 = metadata !{i32 589837, metadata !1349, metadata !"__bufgetc_u", metadata !1352, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1360} ; [ DW_TAG_member ]
!1365 = metadata !{i32 589837, metadata !1349, metadata !"__bufputc_u", metadata !1352, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1360} ; [ DW_TAG_member ]
!1366 = metadata !{i32 589837, metadata !1349, metadata !"__nextopen", metadata !1352, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1367} ; [ DW_TAG_member ]
!1367 = metadata !{i32 589839, metadata !1339, metadata !"", metadata !1339, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1349} ; [ DW_TAG_pointer_type ]
!1368 = metadata !{i32 589837, metadata !1349, metadata !"__ungot", metadata !1352, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1369} ; [ DW_TAG_member ]
!1369 = metadata !{i32 589825, metadata !1339, metadata !"", metadata !1339, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1370, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1370 = metadata !{i32 589846, metadata !1344, metadata !"wchar_t", metadata !1344, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1358} ; [ DW_TAG_typedef ]
!1371 = metadata !{i32 589837, metadata !1349, metadata !"__state", metadata !1352, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1372} ; [ DW_TAG_member ]
!1372 = metadata !{i32 589846, metadata !1373, metadata !"__mbstate_t", metadata !1373, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1374} ; [ DW_TAG_typedef ]
!1373 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1340} ; [ DW_TAG_file_type ]
!1374 = metadata !{i32 589843, metadata !1339, metadata !"", metadata !1373, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1375, i32 0, null} ; [ DW_TAG_structure_type ]
!1375 = metadata !{metadata !1376, metadata !1377}
!1376 = metadata !{i32 589837, metadata !1374, metadata !"__mask", metadata !1373, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1370} ; [ DW_TAG_member ]
!1377 = metadata !{i32 589837, metadata !1374, metadata !"__wc", metadata !1373, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1370} ; [ DW_TAG_member ]
!1378 = metadata !{i32 589870, i32 0, metadata !1379, metadata !"__stdio_WRITE", metadata !"__stdio_WRITE", metadata !"__stdio_WRITE", metadata !1379, i32 35, metadata !1381, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, i8*, i64)* 
!1379 = metadata !{i32 589865, metadata !"_WRITE.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1380} ; [ DW_TAG_file_type ]
!1380 = metadata !{i32 589841, i32 0, i32 1, metadata !"_WRITE.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1381 = metadata !{i32 589845, metadata !1379, metadata !"", metadata !1379, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1382, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1382 = metadata !{metadata !1383, metadata !1386, metadata !1418, metadata !1383}
!1383 = metadata !{i32 589846, metadata !1384, metadata !"size_t", metadata !1384, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1385} ; [ DW_TAG_typedef ]
!1384 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1380} ; [ DW_TAG_file_type ]
!1385 = metadata !{i32 589860, metadata !1379, metadata !"long unsigned int", metadata !1379, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1386 = metadata !{i32 589839, metadata !1379, metadata !"", metadata !1379, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1387} ; [ DW_TAG_pointer_type ]
!1387 = metadata !{i32 589846, metadata !1388, metadata !"FILE", metadata !1388, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1389} ; [ DW_TAG_typedef ]
!1388 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1380} ; [ DW_TAG_file_type ]
!1389 = metadata !{i32 589843, metadata !1379, metadata !"__STDIO_FILE_STRUCT", metadata !1388, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1390, i32 0, null} ; [ DW_TAG_structure_type ]
!1390 = metadata !{metadata !1391, metadata !1394, metadata !1397, metadata !1399, metadata !1401, metadata !1402, metadata !1403, metadata !1404, metadata !1405, metadata !1406, metadata !1408, metadata !1411}
!1391 = metadata !{i32 589837, metadata !1389, metadata !"__modeflags", metadata !1392, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1393} ; [ DW_TAG_member ]
!1392 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1380} ; [ DW_TAG_file_type ]
!1393 = metadata !{i32 589860, metadata !1379, metadata !"short unsigned int", metadata !1379, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1394 = metadata !{i32 589837, metadata !1389, metadata !"__ungot_width", metadata !1392, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1395} ; [ DW_TAG_member ]
!1395 = metadata !{i32 589825, metadata !1379, metadata !"", metadata !1379, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1396, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1396 = metadata !{i32 589860, metadata !1379, metadata !"unsigned char", metadata !1379, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1397 = metadata !{i32 589837, metadata !1389, metadata !"__filedes", metadata !1392, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1398} ; [ DW_TAG_member ]
!1398 = metadata !{i32 589860, metadata !1379, metadata !"int", metadata !1379, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1399 = metadata !{i32 589837, metadata !1389, metadata !"__bufstart", metadata !1392, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1400} ; [ DW_TAG_member ]
!1400 = metadata !{i32 589839, metadata !1379, metadata !"", metadata !1379, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1396} ; [ DW_TAG_pointer_type ]
!1401 = metadata !{i32 589837, metadata !1389, metadata !"__bufend", metadata !1392, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1400} ; [ DW_TAG_member ]
!1402 = metadata !{i32 589837, metadata !1389, metadata !"__bufpos", metadata !1392, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1400} ; [ DW_TAG_member ]
!1403 = metadata !{i32 589837, metadata !1389, metadata !"__bufread", metadata !1392, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1400} ; [ DW_TAG_member ]
!1404 = metadata !{i32 589837, metadata !1389, metadata !"__bufgetc_u", metadata !1392, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1400} ; [ DW_TAG_member ]
!1405 = metadata !{i32 589837, metadata !1389, metadata !"__bufputc_u", metadata !1392, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1400} ; [ DW_TAG_member ]
!1406 = metadata !{i32 589837, metadata !1389, metadata !"__nextopen", metadata !1392, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1407} ; [ DW_TAG_member ]
!1407 = metadata !{i32 589839, metadata !1379, metadata !"", metadata !1379, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1389} ; [ DW_TAG_pointer_type ]
!1408 = metadata !{i32 589837, metadata !1389, metadata !"__ungot", metadata !1392, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1409} ; [ DW_TAG_member ]
!1409 = metadata !{i32 589825, metadata !1379, metadata !"", metadata !1379, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1410, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1410 = metadata !{i32 589846, metadata !1384, metadata !"wchar_t", metadata !1384, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1398} ; [ DW_TAG_typedef ]
!1411 = metadata !{i32 589837, metadata !1389, metadata !"__state", metadata !1392, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1412} ; [ DW_TAG_member ]
!1412 = metadata !{i32 589846, metadata !1413, metadata !"__mbstate_t", metadata !1413, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1414} ; [ DW_TAG_typedef ]
!1413 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1380} ; [ DW_TAG_file_type ]
!1414 = metadata !{i32 589843, metadata !1379, metadata !"", metadata !1413, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1415, i32 0, null} ; [ DW_TAG_structure_type ]
!1415 = metadata !{metadata !1416, metadata !1417}
!1416 = metadata !{i32 589837, metadata !1414, metadata !"__mask", metadata !1413, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1410} ; [ DW_TAG_member ]
!1417 = metadata !{i32 589837, metadata !1414, metadata !"__wc", metadata !1413, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1410} ; [ DW_TAG_member ]
!1418 = metadata !{i32 589839, metadata !1379, metadata !"", metadata !1379, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1419} ; [ DW_TAG_pointer_type ]
!1419 = metadata !{i32 589862, metadata !1379, metadata !"", metadata !1379, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1396} ; [ DW_TAG_const_type ]
!1420 = metadata !{i32 589870, i32 0, metadata !1421, metadata !"__stdio_fwrite", metadata !"__stdio_fwrite", metadata !"__stdio_fwrite", metadata !1421, i32 21, metadata !1423, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64, %4*
!1421 = metadata !{i32 589865, metadata !"_fwrite.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1422} ; [ DW_TAG_file_type ]
!1422 = metadata !{i32 589841, i32 0, i32 1, metadata !"_fwrite.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1423 = metadata !{i32 589845, metadata !1421, metadata !"", metadata !1421, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1424, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1424 = metadata !{metadata !1425, metadata !1428, metadata !1425, metadata !1431}
!1425 = metadata !{i32 589846, metadata !1426, metadata !"size_t", metadata !1426, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1427} ; [ DW_TAG_typedef ]
!1426 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1422} ; [ DW_TAG_file_type ]
!1427 = metadata !{i32 589860, metadata !1421, metadata !"long unsigned int", metadata !1421, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1428 = metadata !{i32 589839, metadata !1421, metadata !"", metadata !1421, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1429} ; [ DW_TAG_pointer_type ]
!1429 = metadata !{i32 589862, metadata !1421, metadata !"", metadata !1421, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1430} ; [ DW_TAG_const_type ]
!1430 = metadata !{i32 589860, metadata !1421, metadata !"unsigned char", metadata !1421, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1431 = metadata !{i32 589839, metadata !1421, metadata !"", metadata !1421, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1432} ; [ DW_TAG_pointer_type ]
!1432 = metadata !{i32 589846, metadata !1433, metadata !"FILE", metadata !1433, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1434} ; [ DW_TAG_typedef ]
!1433 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1422} ; [ DW_TAG_file_type ]
!1434 = metadata !{i32 589843, metadata !1421, metadata !"__STDIO_FILE_STRUCT", metadata !1433, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1435, i32 0, null} ; [ DW_TAG_structure_type ]
!1435 = metadata !{metadata !1436, metadata !1439, metadata !1441, metadata !1443, metadata !1445, metadata !1446, metadata !1447, metadata !1448, metadata !1449, metadata !1450, metadata !1452, metadata !1455}
!1436 = metadata !{i32 589837, metadata !1434, metadata !"__modeflags", metadata !1437, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1438} ; [ DW_TAG_member ]
!1437 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1422} ; [ DW_TAG_file_type ]
!1438 = metadata !{i32 589860, metadata !1421, metadata !"short unsigned int", metadata !1421, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1439 = metadata !{i32 589837, metadata !1434, metadata !"__ungot_width", metadata !1437, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1440} ; [ DW_TAG_member ]
!1440 = metadata !{i32 589825, metadata !1421, metadata !"", metadata !1421, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1430, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1441 = metadata !{i32 589837, metadata !1434, metadata !"__filedes", metadata !1437, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1442} ; [ DW_TAG_member ]
!1442 = metadata !{i32 589860, metadata !1421, metadata !"int", metadata !1421, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1443 = metadata !{i32 589837, metadata !1434, metadata !"__bufstart", metadata !1437, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1444} ; [ DW_TAG_member ]
!1444 = metadata !{i32 589839, metadata !1421, metadata !"", metadata !1421, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1430} ; [ DW_TAG_pointer_type ]
!1445 = metadata !{i32 589837, metadata !1434, metadata !"__bufend", metadata !1437, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1444} ; [ DW_TAG_member ]
!1446 = metadata !{i32 589837, metadata !1434, metadata !"__bufpos", metadata !1437, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1444} ; [ DW_TAG_member ]
!1447 = metadata !{i32 589837, metadata !1434, metadata !"__bufread", metadata !1437, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1444} ; [ DW_TAG_member ]
!1448 = metadata !{i32 589837, metadata !1434, metadata !"__bufgetc_u", metadata !1437, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1444} ; [ DW_TAG_member ]
!1449 = metadata !{i32 589837, metadata !1434, metadata !"__bufputc_u", metadata !1437, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1444} ; [ DW_TAG_member ]
!1450 = metadata !{i32 589837, metadata !1434, metadata !"__nextopen", metadata !1437, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1451} ; [ DW_TAG_member ]
!1451 = metadata !{i32 589839, metadata !1421, metadata !"", metadata !1421, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1434} ; [ DW_TAG_pointer_type ]
!1452 = metadata !{i32 589837, metadata !1434, metadata !"__ungot", metadata !1437, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1453} ; [ DW_TAG_member ]
!1453 = metadata !{i32 589825, metadata !1421, metadata !"", metadata !1421, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1454, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1454 = metadata !{i32 589846, metadata !1426, metadata !"wchar_t", metadata !1426, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1442} ; [ DW_TAG_typedef ]
!1455 = metadata !{i32 589837, metadata !1434, metadata !"__state", metadata !1437, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1456} ; [ DW_TAG_member ]
!1456 = metadata !{i32 589846, metadata !1457, metadata !"__mbstate_t", metadata !1457, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1458} ; [ DW_TAG_typedef ]
!1457 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1422} ; [ DW_TAG_file_type ]
!1458 = metadata !{i32 589843, metadata !1421, metadata !"", metadata !1457, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1459, i32 0, null} ; [ DW_TAG_structure_type ]
!1459 = metadata !{metadata !1460, metadata !1461}
!1460 = metadata !{i32 589837, metadata !1458, metadata !"__mask", metadata !1457, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1454} ; [ DW_TAG_member ]
!1461 = metadata !{i32 589837, metadata !1458, metadata !"__wc", metadata !1457, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1454} ; [ DW_TAG_member ]
!1462 = metadata !{i32 589870, i32 0, metadata !1463, metadata !"__stdio_rfill", metadata !"__stdio_rfill", metadata !"__stdio_rfill", metadata !1463, i32 23, metadata !1465, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*)* @__stdio_r
!1463 = metadata !{i32 589865, metadata !"_rfill.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1464} ; [ DW_TAG_file_type ]
!1464 = metadata !{i32 589841, i32 0, i32 1, metadata !"_rfill.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1465 = metadata !{i32 589845, metadata !1463, metadata !"", metadata !1463, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1466, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1466 = metadata !{metadata !1467, metadata !1470}
!1467 = metadata !{i32 589846, metadata !1468, metadata !"size_t", metadata !1468, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1469} ; [ DW_TAG_typedef ]
!1468 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1464} ; [ DW_TAG_file_type ]
!1469 = metadata !{i32 589860, metadata !1463, metadata !"long unsigned int", metadata !1463, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1470 = metadata !{i32 589839, metadata !1463, metadata !"", metadata !1463, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1471} ; [ DW_TAG_pointer_type ]
!1471 = metadata !{i32 589846, metadata !1472, metadata !"FILE", metadata !1472, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1473} ; [ DW_TAG_typedef ]
!1472 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1464} ; [ DW_TAG_file_type ]
!1473 = metadata !{i32 589843, metadata !1463, metadata !"__STDIO_FILE_STRUCT", metadata !1472, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1474, i32 0, null} ; [ DW_TAG_structure_type ]
!1474 = metadata !{metadata !1475, metadata !1478, metadata !1481, metadata !1483, metadata !1485, metadata !1486, metadata !1487, metadata !1488, metadata !1489, metadata !1490, metadata !1492, metadata !1495}
!1475 = metadata !{i32 589837, metadata !1473, metadata !"__modeflags", metadata !1476, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1477} ; [ DW_TAG_member ]
!1476 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1464} ; [ DW_TAG_file_type ]
!1477 = metadata !{i32 589860, metadata !1463, metadata !"short unsigned int", metadata !1463, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1478 = metadata !{i32 589837, metadata !1473, metadata !"__ungot_width", metadata !1476, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1479} ; [ DW_TAG_member ]
!1479 = metadata !{i32 589825, metadata !1463, metadata !"", metadata !1463, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1480, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1480 = metadata !{i32 589860, metadata !1463, metadata !"unsigned char", metadata !1463, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1481 = metadata !{i32 589837, metadata !1473, metadata !"__filedes", metadata !1476, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1482} ; [ DW_TAG_member ]
!1482 = metadata !{i32 589860, metadata !1463, metadata !"int", metadata !1463, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1483 = metadata !{i32 589837, metadata !1473, metadata !"__bufstart", metadata !1476, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1484} ; [ DW_TAG_member ]
!1484 = metadata !{i32 589839, metadata !1463, metadata !"", metadata !1463, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1480} ; [ DW_TAG_pointer_type ]
!1485 = metadata !{i32 589837, metadata !1473, metadata !"__bufend", metadata !1476, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1484} ; [ DW_TAG_member ]
!1486 = metadata !{i32 589837, metadata !1473, metadata !"__bufpos", metadata !1476, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1484} ; [ DW_TAG_member ]
!1487 = metadata !{i32 589837, metadata !1473, metadata !"__bufread", metadata !1476, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1484} ; [ DW_TAG_member ]
!1488 = metadata !{i32 589837, metadata !1473, metadata !"__bufgetc_u", metadata !1476, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1484} ; [ DW_TAG_member ]
!1489 = metadata !{i32 589837, metadata !1473, metadata !"__bufputc_u", metadata !1476, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1484} ; [ DW_TAG_member ]
!1490 = metadata !{i32 589837, metadata !1473, metadata !"__nextopen", metadata !1476, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1491} ; [ DW_TAG_member ]
!1491 = metadata !{i32 589839, metadata !1463, metadata !"", metadata !1463, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1473} ; [ DW_TAG_pointer_type ]
!1492 = metadata !{i32 589837, metadata !1473, metadata !"__ungot", metadata !1476, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1493} ; [ DW_TAG_member ]
!1493 = metadata !{i32 589825, metadata !1463, metadata !"", metadata !1463, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1494, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1494 = metadata !{i32 589846, metadata !1468, metadata !"wchar_t", metadata !1468, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1482} ; [ DW_TAG_typedef ]
!1495 = metadata !{i32 589837, metadata !1473, metadata !"__state", metadata !1476, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1496} ; [ DW_TAG_member ]
!1496 = metadata !{i32 589846, metadata !1497, metadata !"__mbstate_t", metadata !1497, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1498} ; [ DW_TAG_typedef ]
!1497 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1464} ; [ DW_TAG_file_type ]
!1498 = metadata !{i32 589843, metadata !1463, metadata !"", metadata !1497, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1499, i32 0, null} ; [ DW_TAG_structure_type ]
!1499 = metadata !{metadata !1500, metadata !1501}
!1500 = metadata !{i32 589837, metadata !1498, metadata !"__mask", metadata !1497, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1494} ; [ DW_TAG_member ]
!1501 = metadata !{i32 589837, metadata !1498, metadata !"__wc", metadata !1497, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1494} ; [ DW_TAG_member ]
!1502 = metadata !{i32 589870, i32 0, metadata !1503, metadata !"__stdio_trans2r_o", metadata !"__stdio_trans2r_o", metadata !"__stdio_trans2r_o", metadata !1503, i32 29, metadata !1505, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*,
!1503 = metadata !{i32 589865, metadata !"_trans2r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1504} ; [ DW_TAG_file_type ]
!1504 = metadata !{i32 589841, i32 0, i32 1, metadata !"_trans2r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1505 = metadata !{i32 589845, metadata !1503, metadata !"", metadata !1503, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1506, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1506 = metadata !{metadata !1507, metadata !1508, metadata !1507}
!1507 = metadata !{i32 589860, metadata !1503, metadata !"int", metadata !1503, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1508 = metadata !{i32 589839, metadata !1503, metadata !"", metadata !1503, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1509} ; [ DW_TAG_pointer_type ]
!1509 = metadata !{i32 589846, metadata !1510, metadata !"FILE", metadata !1510, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1511} ; [ DW_TAG_typedef ]
!1510 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1504} ; [ DW_TAG_file_type ]
!1511 = metadata !{i32 589843, metadata !1503, metadata !"__STDIO_FILE_STRUCT", metadata !1510, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1512, i32 0, null} ; [ DW_TAG_structure_type ]
!1512 = metadata !{metadata !1513, metadata !1516, metadata !1519, metadata !1520, metadata !1522, metadata !1523, metadata !1524, metadata !1525, metadata !1526, metadata !1527, metadata !1529, metadata !1533}
!1513 = metadata !{i32 589837, metadata !1511, metadata !"__modeflags", metadata !1514, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1515} ; [ DW_TAG_member ]
!1514 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1504} ; [ DW_TAG_file_type ]
!1515 = metadata !{i32 589860, metadata !1503, metadata !"short unsigned int", metadata !1503, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1516 = metadata !{i32 589837, metadata !1511, metadata !"__ungot_width", metadata !1514, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1517} ; [ DW_TAG_member ]
!1517 = metadata !{i32 589825, metadata !1503, metadata !"", metadata !1503, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1518, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1518 = metadata !{i32 589860, metadata !1503, metadata !"unsigned char", metadata !1503, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1519 = metadata !{i32 589837, metadata !1511, metadata !"__filedes", metadata !1514, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1507} ; [ DW_TAG_member ]
!1520 = metadata !{i32 589837, metadata !1511, metadata !"__bufstart", metadata !1514, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1521} ; [ DW_TAG_member ]
!1521 = metadata !{i32 589839, metadata !1503, metadata !"", metadata !1503, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1518} ; [ DW_TAG_pointer_type ]
!1522 = metadata !{i32 589837, metadata !1511, metadata !"__bufend", metadata !1514, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1521} ; [ DW_TAG_member ]
!1523 = metadata !{i32 589837, metadata !1511, metadata !"__bufpos", metadata !1514, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1521} ; [ DW_TAG_member ]
!1524 = metadata !{i32 589837, metadata !1511, metadata !"__bufread", metadata !1514, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1521} ; [ DW_TAG_member ]
!1525 = metadata !{i32 589837, metadata !1511, metadata !"__bufgetc_u", metadata !1514, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1521} ; [ DW_TAG_member ]
!1526 = metadata !{i32 589837, metadata !1511, metadata !"__bufputc_u", metadata !1514, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1521} ; [ DW_TAG_member ]
!1527 = metadata !{i32 589837, metadata !1511, metadata !"__nextopen", metadata !1514, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1528} ; [ DW_TAG_member ]
!1528 = metadata !{i32 589839, metadata !1503, metadata !"", metadata !1503, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1511} ; [ DW_TAG_pointer_type ]
!1529 = metadata !{i32 589837, metadata !1511, metadata !"__ungot", metadata !1514, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1530} ; [ DW_TAG_member ]
!1530 = metadata !{i32 589825, metadata !1503, metadata !"", metadata !1503, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1531, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1531 = metadata !{i32 589846, metadata !1532, metadata !"wchar_t", metadata !1532, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1507} ; [ DW_TAG_typedef ]
!1532 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1504} ; [ DW_TAG_file_type ]
!1533 = metadata !{i32 589837, metadata !1511, metadata !"__state", metadata !1514, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1534} ; [ DW_TAG_member ]
!1534 = metadata !{i32 589846, metadata !1535, metadata !"__mbstate_t", metadata !1535, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1536} ; [ DW_TAG_typedef ]
!1535 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1504} ; [ DW_TAG_file_type ]
!1536 = metadata !{i32 589843, metadata !1503, metadata !"", metadata !1535, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1537, i32 0, null} ; [ DW_TAG_structure_type ]
!1537 = metadata !{metadata !1538, metadata !1539}
!1538 = metadata !{i32 589837, metadata !1536, metadata !"__mask", metadata !1535, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1531} ; [ DW_TAG_member ]
!1539 = metadata !{i32 589837, metadata !1536, metadata !"__wc", metadata !1535, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1531} ; [ DW_TAG_member ]
!1540 = metadata !{i32 589870, i32 0, metadata !1541, metadata !"__stdio_trans2w_o", metadata !"__stdio_trans2w_o", metadata !"__stdio_trans2w_o", metadata !1541, i32 30, metadata !1543, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*,
!1541 = metadata !{i32 589865, metadata !"_trans2w.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1542} ; [ DW_TAG_file_type ]
!1542 = metadata !{i32 589841, i32 0, i32 1, metadata !"_trans2w.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1543 = metadata !{i32 589845, metadata !1541, metadata !"", metadata !1541, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1544, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1544 = metadata !{metadata !1545, metadata !1546, metadata !1545}
!1545 = metadata !{i32 589860, metadata !1541, metadata !"int", metadata !1541, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1546 = metadata !{i32 589839, metadata !1541, metadata !"", metadata !1541, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1547} ; [ DW_TAG_pointer_type ]
!1547 = metadata !{i32 589846, metadata !1548, metadata !"FILE", metadata !1548, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1549} ; [ DW_TAG_typedef ]
!1548 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1542} ; [ DW_TAG_file_type ]
!1549 = metadata !{i32 589843, metadata !1541, metadata !"__STDIO_FILE_STRUCT", metadata !1548, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1550, i32 0, null} ; [ DW_TAG_structure_type ]
!1550 = metadata !{metadata !1551, metadata !1554, metadata !1557, metadata !1558, metadata !1560, metadata !1561, metadata !1562, metadata !1563, metadata !1564, metadata !1565, metadata !1567, metadata !1571}
!1551 = metadata !{i32 589837, metadata !1549, metadata !"__modeflags", metadata !1552, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1553} ; [ DW_TAG_member ]
!1552 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1542} ; [ DW_TAG_file_type ]
!1553 = metadata !{i32 589860, metadata !1541, metadata !"short unsigned int", metadata !1541, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1554 = metadata !{i32 589837, metadata !1549, metadata !"__ungot_width", metadata !1552, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1555} ; [ DW_TAG_member ]
!1555 = metadata !{i32 589825, metadata !1541, metadata !"", metadata !1541, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1556, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1556 = metadata !{i32 589860, metadata !1541, metadata !"unsigned char", metadata !1541, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1557 = metadata !{i32 589837, metadata !1549, metadata !"__filedes", metadata !1552, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1545} ; [ DW_TAG_member ]
!1558 = metadata !{i32 589837, metadata !1549, metadata !"__bufstart", metadata !1552, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1559} ; [ DW_TAG_member ]
!1559 = metadata !{i32 589839, metadata !1541, metadata !"", metadata !1541, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1556} ; [ DW_TAG_pointer_type ]
!1560 = metadata !{i32 589837, metadata !1549, metadata !"__bufend", metadata !1552, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1559} ; [ DW_TAG_member ]
!1561 = metadata !{i32 589837, metadata !1549, metadata !"__bufpos", metadata !1552, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1559} ; [ DW_TAG_member ]
!1562 = metadata !{i32 589837, metadata !1549, metadata !"__bufread", metadata !1552, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1559} ; [ DW_TAG_member ]
!1563 = metadata !{i32 589837, metadata !1549, metadata !"__bufgetc_u", metadata !1552, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1559} ; [ DW_TAG_member ]
!1564 = metadata !{i32 589837, metadata !1549, metadata !"__bufputc_u", metadata !1552, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1559} ; [ DW_TAG_member ]
!1565 = metadata !{i32 589837, metadata !1549, metadata !"__nextopen", metadata !1552, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1566} ; [ DW_TAG_member ]
!1566 = metadata !{i32 589839, metadata !1541, metadata !"", metadata !1541, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1549} ; [ DW_TAG_pointer_type ]
!1567 = metadata !{i32 589837, metadata !1549, metadata !"__ungot", metadata !1552, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1568} ; [ DW_TAG_member ]
!1568 = metadata !{i32 589825, metadata !1541, metadata !"", metadata !1541, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1569, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1569 = metadata !{i32 589846, metadata !1570, metadata !"wchar_t", metadata !1570, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1545} ; [ DW_TAG_typedef ]
!1570 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1542} ; [ DW_TAG_file_type ]
!1571 = metadata !{i32 589837, metadata !1549, metadata !"__state", metadata !1552, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1572} ; [ DW_TAG_member ]
!1572 = metadata !{i32 589846, metadata !1573, metadata !"__mbstate_t", metadata !1573, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1574} ; [ DW_TAG_typedef ]
!1573 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1542} ; [ DW_TAG_file_type ]
!1574 = metadata !{i32 589843, metadata !1541, metadata !"", metadata !1573, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1575, i32 0, null} ; [ DW_TAG_structure_type ]
!1575 = metadata !{metadata !1576, metadata !1577}
!1576 = metadata !{i32 589837, metadata !1574, metadata !"__mask", metadata !1573, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1569} ; [ DW_TAG_member ]
!1577 = metadata !{i32 589837, metadata !1574, metadata !"__wc", metadata !1573, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1569} ; [ DW_TAG_member ]
!1578 = metadata !{i32 589870, i32 0, metadata !1579, metadata !"__stdio_wcommit", metadata !"__stdio_wcommit", metadata !"__stdio_wcommit", metadata !1579, i32 18, metadata !1581, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*)* @__s
!1579 = metadata !{i32 589865, metadata !"_wcommit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1580} ; [ DW_TAG_file_type ]
!1580 = metadata !{i32 589841, i32 0, i32 1, metadata !"_wcommit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1581 = metadata !{i32 589845, metadata !1579, metadata !"", metadata !1579, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1582, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1582 = metadata !{metadata !1583, metadata !1586}
!1583 = metadata !{i32 589846, metadata !1584, metadata !"size_t", metadata !1584, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1585} ; [ DW_TAG_typedef ]
!1584 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1580} ; [ DW_TAG_file_type ]
!1585 = metadata !{i32 589860, metadata !1579, metadata !"long unsigned int", metadata !1579, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1586 = metadata !{i32 589839, metadata !1579, metadata !"", metadata !1579, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1587} ; [ DW_TAG_pointer_type ]
!1587 = metadata !{i32 589846, metadata !1588, metadata !"FILE", metadata !1588, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1589} ; [ DW_TAG_typedef ]
!1588 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1580} ; [ DW_TAG_file_type ]
!1589 = metadata !{i32 589843, metadata !1579, metadata !"__STDIO_FILE_STRUCT", metadata !1588, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1590, i32 0, null} ; [ DW_TAG_structure_type ]
!1590 = metadata !{metadata !1591, metadata !1594, metadata !1597, metadata !1599, metadata !1601, metadata !1602, metadata !1603, metadata !1604, metadata !1605, metadata !1606, metadata !1608, metadata !1611}
!1591 = metadata !{i32 589837, metadata !1589, metadata !"__modeflags", metadata !1592, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1593} ; [ DW_TAG_member ]
!1592 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1580} ; [ DW_TAG_file_type ]
!1593 = metadata !{i32 589860, metadata !1579, metadata !"short unsigned int", metadata !1579, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1594 = metadata !{i32 589837, metadata !1589, metadata !"__ungot_width", metadata !1592, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1595} ; [ DW_TAG_member ]
!1595 = metadata !{i32 589825, metadata !1579, metadata !"", metadata !1579, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1596, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1596 = metadata !{i32 589860, metadata !1579, metadata !"unsigned char", metadata !1579, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1597 = metadata !{i32 589837, metadata !1589, metadata !"__filedes", metadata !1592, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1598} ; [ DW_TAG_member ]
!1598 = metadata !{i32 589860, metadata !1579, metadata !"int", metadata !1579, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1599 = metadata !{i32 589837, metadata !1589, metadata !"__bufstart", metadata !1592, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1600} ; [ DW_TAG_member ]
!1600 = metadata !{i32 589839, metadata !1579, metadata !"", metadata !1579, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1596} ; [ DW_TAG_pointer_type ]
!1601 = metadata !{i32 589837, metadata !1589, metadata !"__bufend", metadata !1592, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1600} ; [ DW_TAG_member ]
!1602 = metadata !{i32 589837, metadata !1589, metadata !"__bufpos", metadata !1592, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1600} ; [ DW_TAG_member ]
!1603 = metadata !{i32 589837, metadata !1589, metadata !"__bufread", metadata !1592, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1600} ; [ DW_TAG_member ]
!1604 = metadata !{i32 589837, metadata !1589, metadata !"__bufgetc_u", metadata !1592, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1600} ; [ DW_TAG_member ]
!1605 = metadata !{i32 589837, metadata !1589, metadata !"__bufputc_u", metadata !1592, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1600} ; [ DW_TAG_member ]
!1606 = metadata !{i32 589837, metadata !1589, metadata !"__nextopen", metadata !1592, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1607} ; [ DW_TAG_member ]
!1607 = metadata !{i32 589839, metadata !1579, metadata !"", metadata !1579, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1589} ; [ DW_TAG_pointer_type ]
!1608 = metadata !{i32 589837, metadata !1589, metadata !"__ungot", metadata !1592, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1609} ; [ DW_TAG_member ]
!1609 = metadata !{i32 589825, metadata !1579, metadata !"", metadata !1579, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1610, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1610 = metadata !{i32 589846, metadata !1584, metadata !"wchar_t", metadata !1584, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1598} ; [ DW_TAG_typedef ]
!1611 = metadata !{i32 589837, metadata !1589, metadata !"__state", metadata !1592, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1612} ; [ DW_TAG_member ]
!1612 = metadata !{i32 589846, metadata !1613, metadata !"__mbstate_t", metadata !1613, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1614} ; [ DW_TAG_typedef ]
!1613 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1580} ; [ DW_TAG_file_type ]
!1614 = metadata !{i32 589843, metadata !1579, metadata !"", metadata !1613, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1615, i32 0, null} ; [ DW_TAG_structure_type ]
!1615 = metadata !{metadata !1616, metadata !1617}
!1616 = metadata !{i32 589837, metadata !1614, metadata !"__mask", metadata !1613, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1610} ; [ DW_TAG_member ]
!1617 = metadata !{i32 589837, metadata !1614, metadata !"__wc", metadata !1613, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1610} ; [ DW_TAG_member ]
!1618 = metadata !{i32 589870, i32 0, metadata !1619, metadata !"_stdio_fopen", metadata !"_stdio_fopen", metadata !"_stdio_fopen", metadata !1619, i32 44, metadata !1621, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %4* (i64, i8*, %4*, i32)
!1619 = metadata !{i32 589865, metadata !"_fopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1620} ; [ DW_TAG_file_type ]
!1620 = metadata !{i32 589841, i32 0, i32 1, metadata !"_fopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1621 = metadata !{i32 589845, metadata !1619, metadata !"", metadata !1619, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1622, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1622 = metadata !{metadata !1623, metadata !1656, metadata !1659, metadata !1623, metadata !1635}
!1623 = metadata !{i32 589839, metadata !1619, metadata !"", metadata !1619, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1624} ; [ DW_TAG_pointer_type ]
!1624 = metadata !{i32 589846, metadata !1625, metadata !"FILE", metadata !1625, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1626} ; [ DW_TAG_typedef ]
!1625 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1620} ; [ DW_TAG_file_type ]
!1626 = metadata !{i32 589843, metadata !1619, metadata !"__STDIO_FILE_STRUCT", metadata !1625, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1627, i32 0, null} ; [ DW_TAG_structure_type ]
!1627 = metadata !{metadata !1628, metadata !1631, metadata !1634, metadata !1636, metadata !1638, metadata !1639, metadata !1640, metadata !1641, metadata !1642, metadata !1643, metadata !1645, metadata !1649}
!1628 = metadata !{i32 589837, metadata !1626, metadata !"__modeflags", metadata !1629, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1630} ; [ DW_TAG_member ]
!1629 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1620} ; [ DW_TAG_file_type ]
!1630 = metadata !{i32 589860, metadata !1619, metadata !"short unsigned int", metadata !1619, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1631 = metadata !{i32 589837, metadata !1626, metadata !"__ungot_width", metadata !1629, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1632} ; [ DW_TAG_member ]
!1632 = metadata !{i32 589825, metadata !1619, metadata !"", metadata !1619, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1633, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1633 = metadata !{i32 589860, metadata !1619, metadata !"unsigned char", metadata !1619, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1634 = metadata !{i32 589837, metadata !1626, metadata !"__filedes", metadata !1629, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1635} ; [ DW_TAG_member ]
!1635 = metadata !{i32 589860, metadata !1619, metadata !"int", metadata !1619, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1636 = metadata !{i32 589837, metadata !1626, metadata !"__bufstart", metadata !1629, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1637} ; [ DW_TAG_member ]
!1637 = metadata !{i32 589839, metadata !1619, metadata !"", metadata !1619, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1633} ; [ DW_TAG_pointer_type ]
!1638 = metadata !{i32 589837, metadata !1626, metadata !"__bufend", metadata !1629, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1637} ; [ DW_TAG_member ]
!1639 = metadata !{i32 589837, metadata !1626, metadata !"__bufpos", metadata !1629, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1637} ; [ DW_TAG_member ]
!1640 = metadata !{i32 589837, metadata !1626, metadata !"__bufread", metadata !1629, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1637} ; [ DW_TAG_member ]
!1641 = metadata !{i32 589837, metadata !1626, metadata !"__bufgetc_u", metadata !1629, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1637} ; [ DW_TAG_member ]
!1642 = metadata !{i32 589837, metadata !1626, metadata !"__bufputc_u", metadata !1629, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1637} ; [ DW_TAG_member ]
!1643 = metadata !{i32 589837, metadata !1626, metadata !"__nextopen", metadata !1629, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1644} ; [ DW_TAG_member ]
!1644 = metadata !{i32 589839, metadata !1619, metadata !"", metadata !1619, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1626} ; [ DW_TAG_pointer_type ]
!1645 = metadata !{i32 589837, metadata !1626, metadata !"__ungot", metadata !1629, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1646} ; [ DW_TAG_member ]
!1646 = metadata !{i32 589825, metadata !1619, metadata !"", metadata !1619, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1647, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1647 = metadata !{i32 589846, metadata !1648, metadata !"wchar_t", metadata !1648, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1635} ; [ DW_TAG_typedef ]
!1648 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1620} ; [ DW_TAG_file_type ]
!1649 = metadata !{i32 589837, metadata !1626, metadata !"__state", metadata !1629, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1650} ; [ DW_TAG_member ]
!1650 = metadata !{i32 589846, metadata !1651, metadata !"__mbstate_t", metadata !1651, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1652} ; [ DW_TAG_typedef ]
!1651 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1620} ; [ DW_TAG_file_type ]
!1652 = metadata !{i32 589843, metadata !1619, metadata !"", metadata !1651, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1653, i32 0, null} ; [ DW_TAG_structure_type ]
!1653 = metadata !{metadata !1654, metadata !1655}
!1654 = metadata !{i32 589837, metadata !1652, metadata !"__mask", metadata !1651, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1647} ; [ DW_TAG_member ]
!1655 = metadata !{i32 589837, metadata !1652, metadata !"__wc", metadata !1651, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1647} ; [ DW_TAG_member ]
!1656 = metadata !{i32 589846, metadata !1657, metadata !"intptr_t", metadata !1657, i32 122, i64 0, i64 0, i64 0, i32 0, metadata !1658} ; [ DW_TAG_typedef ]
!1657 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1620} ; [ DW_TAG_file_type ]
!1658 = metadata !{i32 589860, metadata !1619, metadata !"long int", metadata !1619, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1659 = metadata !{i32 589839, metadata !1619, metadata !"", metadata !1619, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1660} ; [ DW_TAG_pointer_type ]
!1660 = metadata !{i32 589862, metadata !1619, metadata !"", metadata !1619, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1661} ; [ DW_TAG_const_type ]
!1661 = metadata !{i32 589860, metadata !1619, metadata !"char", metadata !1619, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1662 = metadata !{i32 589870, i32 0, metadata !1663, metadata !"_stdlib_strto_l", metadata !"_stdlib_strto_l", metadata !"_stdlib_strto_l", metadata !1665, i32 512, metadata !1666, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8**
!1663 = metadata !{i32 589865, metadata !"_stdlib_strto_l.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1664} ; [ DW_TAG_file_type ]
!1664 = metadata !{i32 589841, i32 0, i32 1, metadata !"_stdlib_strto_l.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0}
!1665 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1664} ; [ DW_TAG_file_type ]
!1666 = metadata !{i32 589845, metadata !1663, metadata !"", metadata !1663, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1667, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1667 = metadata !{metadata !1668, metadata !1669, metadata !1672, metadata !1674, metadata !1674}
!1668 = metadata !{i32 589860, metadata !1663, metadata !"long unsigned int", metadata !1663, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1669 = metadata !{i32 589839, metadata !1663, metadata !"", metadata !1663, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1670} ; [ DW_TAG_pointer_type ]
!1670 = metadata !{i32 589862, metadata !1663, metadata !"", metadata !1663, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1671} ; [ DW_TAG_const_type ]
!1671 = metadata !{i32 589860, metadata !1663, metadata !"char", metadata !1663, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1672 = metadata !{i32 589839, metadata !1663, metadata !"", metadata !1663, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1673} ; [ DW_TAG_pointer_type ]
!1673 = metadata !{i32 589839, metadata !1663, metadata !"", metadata !1663, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1671} ; [ DW_TAG_pointer_type ]
!1674 = metadata !{i32 589860, metadata !1663, metadata !"int", metadata !1663, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1675 = metadata !{i32 589870, i32 0, metadata !1676, metadata !"atoi", metadata !"atoi", metadata !"atoi", metadata !1678, i32 275, metadata !1679, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*)* @atoi} ; [ DW_TAG_subprogram ]
!1676 = metadata !{i32 589865, metadata !"atoi.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1677} ; [ DW_TAG_file_type ]
!1677 = metadata !{i32 589841, i32 0, i32 1, metadata !"atoi.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!1678 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1677} ; [ DW_TAG_file_type ]
!1679 = metadata !{i32 589845, metadata !1676, metadata !"", metadata !1676, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1680, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1680 = metadata !{metadata !1681, metadata !1682}
!1681 = metadata !{i32 589860, metadata !1676, metadata !"int", metadata !1676, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1682 = metadata !{i32 589839, metadata !1676, metadata !"", metadata !1676, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1683} ; [ DW_TAG_pointer_type ]
!1683 = metadata !{i32 589862, metadata !1676, metadata !"", metadata !1676, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1684} ; [ DW_TAG_const_type ]
!1684 = metadata !{i32 589860, metadata !1676, metadata !"char", metadata !1676, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1685 = metadata !{i32 589870, i32 0, metadata !1686, metadata !"fgets_unlocked", metadata !"fgets_unlocked", metadata !"fgets_unlocked", metadata !1688, i32 18, metadata !1689, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32, %4*
!1686 = metadata !{i32 589865, metadata !"fgets_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1687} ; [ DW_TAG_file_type ]
!1687 = metadata !{i32 589841, i32 0, i32 1, metadata !"fgets_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!1688 = metadata !{i32 589865, metadata !"fgets.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1687} ; [ DW_TAG_file_type ]
!1689 = metadata !{i32 589845, metadata !1686, metadata !"", metadata !1686, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1690, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1690 = metadata !{metadata !1691, metadata !1691, metadata !1693, metadata !1694}
!1691 = metadata !{i32 589839, metadata !1686, metadata !"", metadata !1686, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1692} ; [ DW_TAG_pointer_type ]
!1692 = metadata !{i32 589860, metadata !1686, metadata !"char", metadata !1686, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1693 = metadata !{i32 589860, metadata !1686, metadata !"int", metadata !1686, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1694 = metadata !{i32 589839, metadata !1686, metadata !"", metadata !1686, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1695} ; [ DW_TAG_pointer_type ]
!1695 = metadata !{i32 589846, metadata !1696, metadata !"FILE", metadata !1696, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1697} ; [ DW_TAG_typedef ]
!1696 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1687} ; [ DW_TAG_file_type ]
!1697 = metadata !{i32 589843, metadata !1686, metadata !"__STDIO_FILE_STRUCT", metadata !1696, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1698, i32 0, null} ; [ DW_TAG_structure_type ]
!1698 = metadata !{metadata !1699, metadata !1702, metadata !1705, metadata !1706, metadata !1708, metadata !1709, metadata !1710, metadata !1711, metadata !1712, metadata !1713, metadata !1715, metadata !1719}
!1699 = metadata !{i32 589837, metadata !1697, metadata !"__modeflags", metadata !1700, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1701} ; [ DW_TAG_member ]
!1700 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1687} ; [ DW_TAG_file_type ]
!1701 = metadata !{i32 589860, metadata !1686, metadata !"short unsigned int", metadata !1686, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1702 = metadata !{i32 589837, metadata !1697, metadata !"__ungot_width", metadata !1700, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1703} ; [ DW_TAG_member ]
!1703 = metadata !{i32 589825, metadata !1686, metadata !"", metadata !1686, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1704, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1704 = metadata !{i32 589860, metadata !1686, metadata !"unsigned char", metadata !1686, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1705 = metadata !{i32 589837, metadata !1697, metadata !"__filedes", metadata !1700, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1693} ; [ DW_TAG_member ]
!1706 = metadata !{i32 589837, metadata !1697, metadata !"__bufstart", metadata !1700, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1707} ; [ DW_TAG_member ]
!1707 = metadata !{i32 589839, metadata !1686, metadata !"", metadata !1686, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1704} ; [ DW_TAG_pointer_type ]
!1708 = metadata !{i32 589837, metadata !1697, metadata !"__bufend", metadata !1700, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1707} ; [ DW_TAG_member ]
!1709 = metadata !{i32 589837, metadata !1697, metadata !"__bufpos", metadata !1700, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1707} ; [ DW_TAG_member ]
!1710 = metadata !{i32 589837, metadata !1697, metadata !"__bufread", metadata !1700, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1707} ; [ DW_TAG_member ]
!1711 = metadata !{i32 589837, metadata !1697, metadata !"__bufgetc_u", metadata !1700, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1707} ; [ DW_TAG_member ]
!1712 = metadata !{i32 589837, metadata !1697, metadata !"__bufputc_u", metadata !1700, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1707} ; [ DW_TAG_member ]
!1713 = metadata !{i32 589837, metadata !1697, metadata !"__nextopen", metadata !1700, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1714} ; [ DW_TAG_member ]
!1714 = metadata !{i32 589839, metadata !1686, metadata !"", metadata !1686, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1697} ; [ DW_TAG_pointer_type ]
!1715 = metadata !{i32 589837, metadata !1697, metadata !"__ungot", metadata !1700, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1716} ; [ DW_TAG_member ]
!1716 = metadata !{i32 589825, metadata !1686, metadata !"", metadata !1686, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1717, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1717 = metadata !{i32 589846, metadata !1718, metadata !"wchar_t", metadata !1718, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1693} ; [ DW_TAG_typedef ]
!1718 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1687} ; [ DW_TAG_file_type ]
!1719 = metadata !{i32 589837, metadata !1697, metadata !"__state", metadata !1700, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1720} ; [ DW_TAG_member ]
!1720 = metadata !{i32 589846, metadata !1721, metadata !"__mbstate_t", metadata !1721, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1722} ; [ DW_TAG_typedef ]
!1721 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1687} ; [ DW_TAG_file_type ]
!1722 = metadata !{i32 589843, metadata !1686, metadata !"", metadata !1721, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1723, i32 0, null} ; [ DW_TAG_structure_type ]
!1723 = metadata !{metadata !1724, metadata !1725}
!1724 = metadata !{i32 589837, metadata !1722, metadata !"__mask", metadata !1721, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1717} ; [ DW_TAG_member ]
!1725 = metadata !{i32 589837, metadata !1722, metadata !"__wc", metadata !1721, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1717} ; [ DW_TAG_member ]
!1726 = metadata !{i32 589870, i32 0, metadata !1727, metadata !"fopen", metadata !"fopen", metadata !"fopen", metadata !1727, i32 19, metadata !1729, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %4* (i8*, i8*)* @fopen} ; [ DW_TAG_subprogram
!1727 = metadata !{i32 589865, metadata !"fopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1728} ; [ DW_TAG_file_type ]
!1728 = metadata !{i32 589841, i32 0, i32 1, metadata !"fopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!1729 = metadata !{i32 589845, metadata !1727, metadata !"", metadata !1727, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1730, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1730 = metadata !{metadata !1731, metadata !1764, metadata !1764}
!1731 = metadata !{i32 589839, metadata !1727, metadata !"", metadata !1727, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1732} ; [ DW_TAG_pointer_type ]
!1732 = metadata !{i32 589846, metadata !1733, metadata !"FILE", metadata !1733, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1734} ; [ DW_TAG_typedef ]
!1733 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1728} ; [ DW_TAG_file_type ]
!1734 = metadata !{i32 589843, metadata !1727, metadata !"__STDIO_FILE_STRUCT", metadata !1733, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1735, i32 0, null} ; [ DW_TAG_structure_type ]
!1735 = metadata !{metadata !1736, metadata !1739, metadata !1742, metadata !1744, metadata !1746, metadata !1747, metadata !1748, metadata !1749, metadata !1750, metadata !1751, metadata !1753, metadata !1757}
!1736 = metadata !{i32 589837, metadata !1734, metadata !"__modeflags", metadata !1737, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1738} ; [ DW_TAG_member ]
!1737 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1728} ; [ DW_TAG_file_type ]
!1738 = metadata !{i32 589860, metadata !1727, metadata !"short unsigned int", metadata !1727, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1739 = metadata !{i32 589837, metadata !1734, metadata !"__ungot_width", metadata !1737, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1740} ; [ DW_TAG_member ]
!1740 = metadata !{i32 589825, metadata !1727, metadata !"", metadata !1727, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1741, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1741 = metadata !{i32 589860, metadata !1727, metadata !"unsigned char", metadata !1727, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1742 = metadata !{i32 589837, metadata !1734, metadata !"__filedes", metadata !1737, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1743} ; [ DW_TAG_member ]
!1743 = metadata !{i32 589860, metadata !1727, metadata !"int", metadata !1727, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1744 = metadata !{i32 589837, metadata !1734, metadata !"__bufstart", metadata !1737, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1745} ; [ DW_TAG_member ]
!1745 = metadata !{i32 589839, metadata !1727, metadata !"", metadata !1727, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1741} ; [ DW_TAG_pointer_type ]
!1746 = metadata !{i32 589837, metadata !1734, metadata !"__bufend", metadata !1737, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1745} ; [ DW_TAG_member ]
!1747 = metadata !{i32 589837, metadata !1734, metadata !"__bufpos", metadata !1737, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1745} ; [ DW_TAG_member ]
!1748 = metadata !{i32 589837, metadata !1734, metadata !"__bufread", metadata !1737, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1745} ; [ DW_TAG_member ]
!1749 = metadata !{i32 589837, metadata !1734, metadata !"__bufgetc_u", metadata !1737, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1745} ; [ DW_TAG_member ]
!1750 = metadata !{i32 589837, metadata !1734, metadata !"__bufputc_u", metadata !1737, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1745} ; [ DW_TAG_member ]
!1751 = metadata !{i32 589837, metadata !1734, metadata !"__nextopen", metadata !1737, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1752} ; [ DW_TAG_member ]
!1752 = metadata !{i32 589839, metadata !1727, metadata !"", metadata !1727, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1734} ; [ DW_TAG_pointer_type ]
!1753 = metadata !{i32 589837, metadata !1734, metadata !"__ungot", metadata !1737, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1754} ; [ DW_TAG_member ]
!1754 = metadata !{i32 589825, metadata !1727, metadata !"", metadata !1727, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1755, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1755 = metadata !{i32 589846, metadata !1756, metadata !"wchar_t", metadata !1756, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1743} ; [ DW_TAG_typedef ]
!1756 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1728} ; [ DW_TAG_file_type ]
!1757 = metadata !{i32 589837, metadata !1734, metadata !"__state", metadata !1737, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1758} ; [ DW_TAG_member ]
!1758 = metadata !{i32 589846, metadata !1759, metadata !"__mbstate_t", metadata !1759, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1760} ; [ DW_TAG_typedef ]
!1759 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1728} ; [ DW_TAG_file_type ]
!1760 = metadata !{i32 589843, metadata !1727, metadata !"", metadata !1759, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1761, i32 0, null} ; [ DW_TAG_structure_type ]
!1761 = metadata !{metadata !1762, metadata !1763}
!1762 = metadata !{i32 589837, metadata !1760, metadata !"__mask", metadata !1759, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1755} ; [ DW_TAG_member ]
!1763 = metadata !{i32 589837, metadata !1760, metadata !"__wc", metadata !1759, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1755} ; [ DW_TAG_member ]
!1764 = metadata !{i32 589839, metadata !1727, metadata !"", metadata !1727, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1765} ; [ DW_TAG_pointer_type ]
!1765 = metadata !{i32 589862, metadata !1727, metadata !"", metadata !1727, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1766} ; [ DW_TAG_const_type ]
!1766 = metadata !{i32 589860, metadata !1727, metadata !"char", metadata !1727, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1767 = metadata !{i32 589870, i32 0, metadata !1768, metadata !"fseeko64", metadata !"fseeko64", metadata !"fseeko64", metadata !1770, i32 25, metadata !1771, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i64, i32)* @fseeko64} ; [ 
!1768 = metadata !{i32 589865, metadata !"fseeko64.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1769} ; [ DW_TAG_file_type ]
!1769 = metadata !{i32 589841, i32 0, i32 1, metadata !"fseeko64.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1770 = metadata !{i32 589865, metadata !"fseeko.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1769} ; [ DW_TAG_file_type ]
!1771 = metadata !{i32 589845, metadata !1768, metadata !"", metadata !1768, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1772, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1772 = metadata !{metadata !1773, metadata !1774, metadata !1806, metadata !1773}
!1773 = metadata !{i32 589860, metadata !1768, metadata !"int", metadata !1768, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1774 = metadata !{i32 589839, metadata !1768, metadata !"", metadata !1768, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1775} ; [ DW_TAG_pointer_type ]
!1775 = metadata !{i32 589846, metadata !1776, metadata !"FILE", metadata !1776, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1777} ; [ DW_TAG_typedef ]
!1776 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1769} ; [ DW_TAG_file_type ]
!1777 = metadata !{i32 589843, metadata !1768, metadata !"__STDIO_FILE_STRUCT", metadata !1776, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1778, i32 0, null} ; [ DW_TAG_structure_type ]
!1778 = metadata !{metadata !1779, metadata !1782, metadata !1785, metadata !1786, metadata !1788, metadata !1789, metadata !1790, metadata !1791, metadata !1792, metadata !1793, metadata !1795, metadata !1799}
!1779 = metadata !{i32 589837, metadata !1777, metadata !"__modeflags", metadata !1780, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1781} ; [ DW_TAG_member ]
!1780 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1769} ; [ DW_TAG_file_type ]
!1781 = metadata !{i32 589860, metadata !1768, metadata !"short unsigned int", metadata !1768, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1782 = metadata !{i32 589837, metadata !1777, metadata !"__ungot_width", metadata !1780, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1783} ; [ DW_TAG_member ]
!1783 = metadata !{i32 589825, metadata !1768, metadata !"", metadata !1768, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1784, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1784 = metadata !{i32 589860, metadata !1768, metadata !"unsigned char", metadata !1768, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1785 = metadata !{i32 589837, metadata !1777, metadata !"__filedes", metadata !1780, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1773} ; [ DW_TAG_member ]
!1786 = metadata !{i32 589837, metadata !1777, metadata !"__bufstart", metadata !1780, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1787} ; [ DW_TAG_member ]
!1787 = metadata !{i32 589839, metadata !1768, metadata !"", metadata !1768, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1784} ; [ DW_TAG_pointer_type ]
!1788 = metadata !{i32 589837, metadata !1777, metadata !"__bufend", metadata !1780, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1787} ; [ DW_TAG_member ]
!1789 = metadata !{i32 589837, metadata !1777, metadata !"__bufpos", metadata !1780, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1787} ; [ DW_TAG_member ]
!1790 = metadata !{i32 589837, metadata !1777, metadata !"__bufread", metadata !1780, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1787} ; [ DW_TAG_member ]
!1791 = metadata !{i32 589837, metadata !1777, metadata !"__bufgetc_u", metadata !1780, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1787} ; [ DW_TAG_member ]
!1792 = metadata !{i32 589837, metadata !1777, metadata !"__bufputc_u", metadata !1780, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1787} ; [ DW_TAG_member ]
!1793 = metadata !{i32 589837, metadata !1777, metadata !"__nextopen", metadata !1780, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1794} ; [ DW_TAG_member ]
!1794 = metadata !{i32 589839, metadata !1768, metadata !"", metadata !1768, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1777} ; [ DW_TAG_pointer_type ]
!1795 = metadata !{i32 589837, metadata !1777, metadata !"__ungot", metadata !1780, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1796} ; [ DW_TAG_member ]
!1796 = metadata !{i32 589825, metadata !1768, metadata !"", metadata !1768, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1797, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1797 = metadata !{i32 589846, metadata !1798, metadata !"wchar_t", metadata !1798, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1773} ; [ DW_TAG_typedef ]
!1798 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1769} ; [ DW_TAG_file_type ]
!1799 = metadata !{i32 589837, metadata !1777, metadata !"__state", metadata !1780, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1800} ; [ DW_TAG_member ]
!1800 = metadata !{i32 589846, metadata !1801, metadata !"__mbstate_t", metadata !1801, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1802} ; [ DW_TAG_typedef ]
!1801 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1769} ; [ DW_TAG_file_type ]
!1802 = metadata !{i32 589843, metadata !1768, metadata !"", metadata !1801, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1803, i32 0, null} ; [ DW_TAG_structure_type ]
!1803 = metadata !{metadata !1804, metadata !1805}
!1804 = metadata !{i32 589837, metadata !1802, metadata !"__mask", metadata !1801, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1797} ; [ DW_TAG_member ]
!1805 = metadata !{i32 589837, metadata !1802, metadata !"__wc", metadata !1801, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1797} ; [ DW_TAG_member ]
!1806 = metadata !{i32 589846, metadata !1807, metadata !"__off64_t", metadata !1807, i32 146, i64 0, i64 0, i64 0, i32 0, metadata !1808} ; [ DW_TAG_typedef ]
!1807 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1769} ; [ DW_TAG_file_type ]
!1808 = metadata !{i32 589860, metadata !1768, metadata !"long int", metadata !1768, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1809 = metadata !{i32 589870, i32 0, metadata !1810, metadata !"isatty", metadata !"isatty", metadata !"isatty", metadata !1810, i32 27, metadata !1812, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @isatty} ; [ DW_TAG_subprogram 
!1810 = metadata !{i32 589865, metadata !"isatty.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/termios", metadata !1811} ; [ DW_TAG_file_type ]
!1811 = metadata !{i32 589841, i32 0, i32 1, metadata !"isatty.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/termios", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1812 = metadata !{i32 589845, metadata !1810, metadata !"", metadata !1810, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1813, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1813 = metadata !{metadata !1814, metadata !1814}
!1814 = metadata !{i32 589860, metadata !1810, metadata !"int", metadata !1810, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1815 = metadata !{i32 589870, i32 0, metadata !1816, metadata !"iswctype", metadata !"iswctype", metadata !"iswctype", metadata !1818, i32 593, metadata !1819, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32)* @iswctype} ; [ DW_T
!1816 = metadata !{i32 589865, metadata !"iswctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !1817} ; [ DW_TAG_file_type ]
!1817 = metadata !{i32 589841, i32 0, i32 1, metadata !"iswctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!1818 = metadata !{i32 589865, metadata !"_wctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !1817} ; [ DW_TAG_file_type ]
!1819 = metadata !{i32 589845, metadata !1816, metadata !"", metadata !1816, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1820, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1820 = metadata !{metadata !1821, metadata !1822, metadata !1825}
!1821 = metadata !{i32 589860, metadata !1816, metadata !"int", metadata !1816, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1822 = metadata !{i32 589846, metadata !1823, metadata !"wint_t", metadata !1823, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !1824} ; [ DW_TAG_typedef ]
!1823 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1817} ; [ DW_TAG_file_type ]
!1824 = metadata !{i32 589860, metadata !1816, metadata !"unsigned int", metadata !1816, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1825 = metadata !{i32 589846, metadata !1826, metadata !"wctype_t", metadata !1826, i32 71, i64 0, i64 0, i64 0, i32 0, metadata !1824} ; [ DW_TAG_typedef ]
!1826 = metadata !{i32 589865, metadata !"wctype.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1817} ; [ DW_TAG_file_type ]
!1827 = metadata !{i32 589870, i32 0, metadata !1828, metadata !"mbsnrtowcs", metadata !"mbsnrtowcs", metadata !"mbsnrtowcs", metadata !1830, i32 698, metadata !1831, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32*, i8**, i64, i64, %s
!1828 = metadata !{i32 589865, metadata !"mbsnrtowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1829} ; [ DW_TAG_file_type ]
!1829 = metadata !{i32 589841, i32 0, i32 1, metadata !"mbsnrtowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!1830 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1829} ; [ DW_TAG_file_type ]
!1831 = metadata !{i32 589845, metadata !1828, metadata !"", metadata !1828, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1832, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1832 = metadata !{metadata !1833, metadata !1836, metadata !1839, metadata !1833, metadata !1833, metadata !1843}
!1833 = metadata !{i32 589846, metadata !1834, metadata !"size_t", metadata !1834, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1835} ; [ DW_TAG_typedef ]
!1834 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1829} ; [ DW_TAG_file_type ]
!1835 = metadata !{i32 589860, metadata !1828, metadata !"long unsigned int", metadata !1828, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1836 = metadata !{i32 589839, metadata !1828, metadata !"", metadata !1828, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1837} ; [ DW_TAG_pointer_type ]
!1837 = metadata !{i32 589846, metadata !1834, metadata !"wchar_t", metadata !1834, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1838} ; [ DW_TAG_typedef ]
!1838 = metadata !{i32 589860, metadata !1828, metadata !"int", metadata !1828, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1839 = metadata !{i32 589839, metadata !1828, metadata !"", metadata !1828, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1840} ; [ DW_TAG_pointer_type ]
!1840 = metadata !{i32 589839, metadata !1828, metadata !"", metadata !1828, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1841} ; [ DW_TAG_pointer_type ]
!1841 = metadata !{i32 589862, metadata !1828, metadata !"", metadata !1828, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1842} ; [ DW_TAG_const_type ]
!1842 = metadata !{i32 589860, metadata !1828, metadata !"char", metadata !1828, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1843 = metadata !{i32 589839, metadata !1828, metadata !"", metadata !1828, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1844} ; [ DW_TAG_pointer_type ]
!1844 = metadata !{i32 589846, metadata !1845, metadata !"mbstate_t", metadata !1845, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !1846} ; [ DW_TAG_typedef ]
!1845 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1829} ; [ DW_TAG_file_type ]
!1846 = metadata !{i32 589843, metadata !1828, metadata !"", metadata !1845, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1847, i32 0, null} ; [ DW_TAG_structure_type ]
!1847 = metadata !{metadata !1848, metadata !1849}
!1848 = metadata !{i32 589837, metadata !1846, metadata !"__mask", metadata !1845, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1837} ; [ DW_TAG_member ]
!1849 = metadata !{i32 589837, metadata !1846, metadata !"__wc", metadata !1845, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1837} ; [ DW_TAG_member ]
!1850 = metadata !{i32 589870, i32 0, metadata !1851, metadata !"mbsrtowcs", metadata !"mbsrtowcs", metadata !"mbsrtowcs", metadata !1853, i32 373, metadata !1854, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32*, i8**, i64, %struct.__
!1851 = metadata !{i32 589865, metadata !"mbsrtowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1852} ; [ DW_TAG_file_type ]
!1852 = metadata !{i32 589841, i32 0, i32 1, metadata !"mbsrtowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!1853 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1852} ; [ DW_TAG_file_type ]
!1854 = metadata !{i32 589845, metadata !1851, metadata !"", metadata !1851, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1855, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1855 = metadata !{metadata !1856, metadata !1859, metadata !1862, metadata !1856, metadata !1866}
!1856 = metadata !{i32 589846, metadata !1857, metadata !"size_t", metadata !1857, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1858} ; [ DW_TAG_typedef ]
!1857 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1852} ; [ DW_TAG_file_type ]
!1858 = metadata !{i32 589860, metadata !1851, metadata !"long unsigned int", metadata !1851, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1859 = metadata !{i32 589839, metadata !1851, metadata !"", metadata !1851, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1860} ; [ DW_TAG_pointer_type ]
!1860 = metadata !{i32 589846, metadata !1857, metadata !"wchar_t", metadata !1857, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1861} ; [ DW_TAG_typedef ]
!1861 = metadata !{i32 589860, metadata !1851, metadata !"int", metadata !1851, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1862 = metadata !{i32 589839, metadata !1851, metadata !"", metadata !1851, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1863} ; [ DW_TAG_pointer_type ]
!1863 = metadata !{i32 589839, metadata !1851, metadata !"", metadata !1851, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1864} ; [ DW_TAG_pointer_type ]
!1864 = metadata !{i32 589862, metadata !1851, metadata !"", metadata !1851, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1865} ; [ DW_TAG_const_type ]
!1865 = metadata !{i32 589860, metadata !1851, metadata !"char", metadata !1851, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1866 = metadata !{i32 589839, metadata !1851, metadata !"", metadata !1851, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1867} ; [ DW_TAG_pointer_type ]
!1867 = metadata !{i32 589846, metadata !1868, metadata !"mbstate_t", metadata !1868, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !1869} ; [ DW_TAG_typedef ]
!1868 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1852} ; [ DW_TAG_file_type ]
!1869 = metadata !{i32 589843, metadata !1851, metadata !"", metadata !1868, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1870, i32 0, null} ; [ DW_TAG_structure_type ]
!1870 = metadata !{metadata !1871, metadata !1872}
!1871 = metadata !{i32 589837, metadata !1869, metadata !"__mask", metadata !1868, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1860} ; [ DW_TAG_member ]
!1872 = metadata !{i32 589837, metadata !1869, metadata !"__wc", metadata !1868, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1860} ; [ DW_TAG_member ]
!1873 = metadata !{i32 589870, i32 0, metadata !1874, metadata !"memcpy", metadata !"memcpy", metadata !"memcpy", metadata !1874, i32 19, metadata !1876, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*, i64)* @memcpy} ; [ DW_TAG_s
!1874 = metadata !{i32 589865, metadata !"memcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1875} ; [ DW_TAG_file_type ]
!1875 = metadata !{i32 589841, i32 0, i32 1, metadata !"memcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1876 = metadata !{i32 589845, metadata !1874, metadata !"", metadata !1874, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1877, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1877 = metadata !{metadata !1878, metadata !1878, metadata !1878, metadata !1879}
!1878 = metadata !{i32 589839, metadata !1874, metadata !"", metadata !1874, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1879 = metadata !{i32 589846, metadata !1880, metadata !"size_t", metadata !1880, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1881} ; [ DW_TAG_typedef ]
!1880 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1875} ; [ DW_TAG_file_type ]
!1881 = metadata !{i32 589860, metadata !1874, metadata !"long unsigned int", metadata !1874, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1882 = metadata !{i32 589870, i32 0, metadata !1883, metadata !"memmove", metadata !"memmove", metadata !"memmove", metadata !1883, i32 18, metadata !1885, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*, i64)* @memmove} ; [ DW_T
!1883 = metadata !{i32 589865, metadata !"memmove.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1884} ; [ DW_TAG_file_type ]
!1884 = metadata !{i32 589841, i32 0, i32 1, metadata !"memmove.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1885 = metadata !{i32 589845, metadata !1883, metadata !"", metadata !1883, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1886, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1886 = metadata !{metadata !1887, metadata !1887, metadata !1887, metadata !1888}
!1887 = metadata !{i32 589839, metadata !1883, metadata !"", metadata !1883, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1888 = metadata !{i32 589846, metadata !1889, metadata !"size_t", metadata !1889, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1890} ; [ DW_TAG_typedef ]
!1889 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1884} ; [ DW_TAG_file_type ]
!1890 = metadata !{i32 589860, metadata !1883, metadata !"long unsigned int", metadata !1883, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1891 = metadata !{i32 589870, i32 0, metadata !1892, metadata !"memset", metadata !"memset", metadata !"memset", metadata !1892, i32 18, metadata !1894, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32, i64)* @memset} ; [ DW_TAG_s
!1892 = metadata !{i32 589865, metadata !"memset.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1893} ; [ DW_TAG_file_type ]
!1893 = metadata !{i32 589841, i32 0, i32 1, metadata !"memset.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1894 = metadata !{i32 589845, metadata !1892, metadata !"", metadata !1892, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1895, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1895 = metadata !{metadata !1896, metadata !1896, metadata !1897, metadata !1898}
!1896 = metadata !{i32 589839, metadata !1892, metadata !"", metadata !1892, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1897 = metadata !{i32 589860, metadata !1892, metadata !"int", metadata !1892, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1898 = metadata !{i32 589846, metadata !1899, metadata !"size_t", metadata !1899, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1900} ; [ DW_TAG_typedef ]
!1899 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1893} ; [ DW_TAG_file_type ]
!1900 = metadata !{i32 589860, metadata !1892, metadata !"long unsigned int", metadata !1892, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1901 = metadata !{i32 589870, i32 0, metadata !1902, metadata !"__raise", metadata !"__raise", metadata !"__raise", metadata !1902, i32 16, metadata !1904, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @__raise} ; [ DW_TAG_subprog
!1902 = metadata !{i32 589865, metadata !"raise.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !1903} ; [ DW_TAG_file_type ]
!1903 = metadata !{i32 589841, i32 0, i32 1, metadata !"raise.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1904 = metadata !{i32 589845, metadata !1902, metadata !"", metadata !1902, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1905, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1905 = metadata !{metadata !1906, metadata !1906}
!1906 = metadata !{i32 589860, metadata !1902, metadata !"int", metadata !1902, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1907 = metadata !{i32 589870, i32 0, metadata !1908, metadata !"__libc_sigaction", metadata !"__libc_sigaction", metadata !"__libc_sigaction", metadata !1908, i32 43, metadata !1910, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %s
!1908 = metadata !{i32 589865, metadata !"sigaction.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !1909} ; [ DW_TAG_file_type ]
!1909 = metadata !{i32 589841, i32 0, i32 1, metadata !"sigaction.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ D
!1910 = metadata !{i32 589845, metadata !1908, metadata !"", metadata !1908, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1911, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1911 = metadata !{metadata !1912, metadata !1912, metadata !1913, metadata !2004}
!1912 = metadata !{i32 589860, metadata !1908, metadata !"int", metadata !1908, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1913 = metadata !{i32 589839, metadata !1908, metadata !"", metadata !1908, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1914} ; [ DW_TAG_pointer_type ]
!1914 = metadata !{i32 589862, metadata !1908, metadata !"", metadata !1908, i32 0, i64 1216, i64 64, i64 0, i32 0, metadata !1915} ; [ DW_TAG_const_type ]
!1915 = metadata !{i32 589843, metadata !1908, metadata !"sigaction", metadata !1916, i32 26, i64 1216, i64 64, i64 0, i32 0, null, metadata !1917, i32 0, null} ; [ DW_TAG_structure_type ]
!1916 = metadata !{i32 589865, metadata !"sigaction.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1909} ; [ DW_TAG_file_type ]
!1917 = metadata !{metadata !1918, metadata !1992, metadata !2000, metadata !2001}
!1918 = metadata !{i32 589837, metadata !1915, metadata !"__sigaction_handler", metadata !1916, i32 36, i64 64, i64 64, i64 0, i32 0, metadata !1919} ; [ DW_TAG_member ]
!1919 = metadata !{i32 589847, metadata !1908, metadata !"", metadata !1916, i32 30, i64 64, i64 64, i64 0, i32 0, null, metadata !1920, i32 0, null} ; [ DW_TAG_union_type ]
!1920 = metadata !{metadata !1921, metadata !1927}
!1921 = metadata !{i32 589837, metadata !1919, metadata !"sa_handler", metadata !1916, i32 32, i64 64, i64 64, i64 0, i32 0, metadata !1922} ; [ DW_TAG_member ]
!1922 = metadata !{i32 589846, metadata !1923, metadata !"__sighandler_t", metadata !1923, i32 75, i64 0, i64 0, i64 0, i32 0, metadata !1924} ; [ DW_TAG_typedef ]
!1923 = metadata !{i32 589865, metadata !"signal.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1909} ; [ DW_TAG_file_type ]
!1924 = metadata !{i32 589839, metadata !1908, metadata !"", metadata !1908, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1925} ; [ DW_TAG_pointer_type ]
!1925 = metadata !{i32 589845, metadata !1908, metadata !"", metadata !1908, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1926, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1926 = metadata !{null, metadata !1912}
!1927 = metadata !{i32 589837, metadata !1919, metadata !"sa_sigaction", metadata !1916, i32 34, i64 64, i64 64, i64 0, i32 0, metadata !1928} ; [ DW_TAG_member ]
!1928 = metadata !{i32 589839, metadata !1908, metadata !"", metadata !1908, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1929} ; [ DW_TAG_pointer_type ]
!1929 = metadata !{i32 589845, metadata !1908, metadata !"", metadata !1908, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1930, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1930 = metadata !{null, metadata !1912, metadata !1931, metadata !1966}
!1931 = metadata !{i32 589839, metadata !1908, metadata !"", metadata !1908, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1932} ; [ DW_TAG_pointer_type ]
!1932 = metadata !{i32 589846, metadata !1933, metadata !"siginfo_t", metadata !1933, i32 108, i64 0, i64 0, i64 0, i32 0, metadata !1934} ; [ DW_TAG_typedef ]
!1933 = metadata !{i32 589865, metadata !"siginfo.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1909} ; [ DW_TAG_file_type ]
!1934 = metadata !{i32 589843, metadata !1908, metadata !"siginfo", metadata !1933, i32 52, i64 1024, i64 64, i64 0, i32 0, null, metadata !1935, i32 0, null} ; [ DW_TAG_structure_type ]
!1935 = metadata !{metadata !1936, metadata !1937, metadata !1938, metadata !1939}
!1936 = metadata !{i32 589837, metadata !1934, metadata !"si_signo", metadata !1933, i32 53, i64 32, i64 32, i64 0, i32 0, metadata !1912} ; [ DW_TAG_member ]
!1937 = metadata !{i32 589837, metadata !1934, metadata !"si_errno", metadata !1933, i32 54, i64 32, i64 32, i64 32, i32 0, metadata !1912} ; [ DW_TAG_member ]
!1938 = metadata !{i32 589837, metadata !1934, metadata !"si_code", metadata !1933, i32 56, i64 32, i64 32, i64 64, i32 0, metadata !1912} ; [ DW_TAG_member ]
!1939 = metadata !{i32 589837, metadata !1934, metadata !"_sifields", metadata !1933, i32 107, i64 896, i64 64, i64 128, i32 0, metadata !1940} ; [ DW_TAG_member ]
!1940 = metadata !{i32 589847, metadata !1908, metadata !"", metadata !1933, i32 59, i64 896, i64 64, i64 0, i32 0, null, metadata !1941, i32 0, null} ; [ DW_TAG_union_type ]
!1941 = metadata !{metadata !1942, metadata !1946, metadata !1955, metadata !1967, metadata !1973, metadata !1983, metadata !1987}
!1942 = metadata !{i32 589837, metadata !1940, metadata !"_pad", metadata !1933, i32 60, i64 896, i64 32, i64 0, i32 0, metadata !1943} ; [ DW_TAG_member ]
!1943 = metadata !{i32 589825, metadata !1908, metadata !"", metadata !1908, i32 0, i64 896, i64 32, i64 0, i32 0, metadata !1912, metadata !1944, i32 0, null} ; [ DW_TAG_array_type ]
!1944 = metadata !{metadata !1945}
!1945 = metadata !{i32 589857, i64 0, i64 27}     ; [ DW_TAG_subrange_type ]
!1946 = metadata !{i32 589837, metadata !1940, metadata !"_kill", metadata !1933, i32 67, i64 64, i64 32, i64 0, i32 0, metadata !1947} ; [ DW_TAG_member ]
!1947 = metadata !{i32 589843, metadata !1908, metadata !"", metadata !1933, i32 64, i64 64, i64 32, i64 0, i32 0, null, metadata !1948, i32 0, null} ; [ DW_TAG_structure_type ]
!1948 = metadata !{metadata !1949, metadata !1952}
!1949 = metadata !{i32 589837, metadata !1947, metadata !"si_pid", metadata !1933, i32 65, i64 32, i64 32, i64 0, i32 0, metadata !1950} ; [ DW_TAG_member ]
!1950 = metadata !{i32 589846, metadata !1951, metadata !"__pid_t", metadata !1951, i32 147, i64 0, i64 0, i64 0, i32 0, metadata !1912} ; [ DW_TAG_typedef ]
!1951 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1909} ; [ DW_TAG_file_type ]
!1952 = metadata !{i32 589837, metadata !1947, metadata !"si_uid", metadata !1933, i32 66, i64 32, i64 32, i64 32, i32 0, metadata !1953} ; [ DW_TAG_member ]
!1953 = metadata !{i32 589846, metadata !1951, metadata !"__uid_t", metadata !1951, i32 139, i64 0, i64 0, i64 0, i32 0, metadata !1954} ; [ DW_TAG_typedef ]
!1954 = metadata !{i32 589860, metadata !1908, metadata !"unsigned int", metadata !1908, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1955 = metadata !{i32 589837, metadata !1940, metadata !"_timer", metadata !1933, i32 75, i64 128, i64 64, i64 0, i32 0, metadata !1956} ; [ DW_TAG_member ]
!1956 = metadata !{i32 589843, metadata !1908, metadata !"", metadata !1933, i32 71, i64 128, i64 64, i64 0, i32 0, null, metadata !1957, i32 0, null} ; [ DW_TAG_structure_type ]
!1957 = metadata !{metadata !1958, metadata !1959, metadata !1960}
!1958 = metadata !{i32 589837, metadata !1956, metadata !"si_tid", metadata !1933, i32 72, i64 32, i64 32, i64 0, i32 0, metadata !1912} ; [ DW_TAG_member ]
!1959 = metadata !{i32 589837, metadata !1956, metadata !"si_overrun", metadata !1933, i32 73, i64 32, i64 32, i64 32, i32 0, metadata !1912} ; [ DW_TAG_member ]
!1960 = metadata !{i32 589837, metadata !1956, metadata !"si_sigval", metadata !1933, i32 74, i64 64, i64 64, i64 64, i32 0, metadata !1961} ; [ DW_TAG_member ]
!1961 = metadata !{i32 589846, metadata !1933, metadata !"sigval_t", metadata !1933, i32 37, i64 0, i64 0, i64 0, i32 0, metadata !1962} ; [ DW_TAG_typedef ]
!1962 = metadata !{i32 589847, metadata !1908, metadata !"sigval", metadata !1933, i32 34, i64 64, i64 64, i64 0, i32 0, null, metadata !1963, i32 0, null} ; [ DW_TAG_union_type ]
!1963 = metadata !{metadata !1964, metadata !1965}
!1964 = metadata !{i32 589837, metadata !1962, metadata !"sival_int", metadata !1933, i32 35, i64 32, i64 32, i64 0, i32 0, metadata !1912} ; [ DW_TAG_member ]
!1965 = metadata !{i32 589837, metadata !1962, metadata !"sival_ptr", metadata !1933, i32 36, i64 64, i64 64, i64 0, i32 0, metadata !1966} ; [ DW_TAG_member ]
!1966 = metadata !{i32 589839, metadata !1908, metadata !"", metadata !1908, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1967 = metadata !{i32 589837, metadata !1940, metadata !"_rt", metadata !1933, i32 83, i64 128, i64 64, i64 0, i32 0, metadata !1968} ; [ DW_TAG_member ]
!1968 = metadata !{i32 589843, metadata !1908, metadata !"", metadata !1933, i32 79, i64 128, i64 64, i64 0, i32 0, null, metadata !1969, i32 0, null} ; [ DW_TAG_structure_type ]
!1969 = metadata !{metadata !1970, metadata !1971, metadata !1972}
!1970 = metadata !{i32 589837, metadata !1968, metadata !"si_pid", metadata !1933, i32 80, i64 32, i64 32, i64 0, i32 0, metadata !1950} ; [ DW_TAG_member ]
!1971 = metadata !{i32 589837, metadata !1968, metadata !"si_uid", metadata !1933, i32 81, i64 32, i64 32, i64 32, i32 0, metadata !1953} ; [ DW_TAG_member ]
!1972 = metadata !{i32 589837, metadata !1968, metadata !"si_sigval", metadata !1933, i32 82, i64 64, i64 64, i64 64, i32 0, metadata !1961} ; [ DW_TAG_member ]
!1973 = metadata !{i32 589837, metadata !1940, metadata !"_sigchld", metadata !1933, i32 93, i64 256, i64 64, i64 0, i32 0, metadata !1974} ; [ DW_TAG_member ]
!1974 = metadata !{i32 589843, metadata !1908, metadata !"", metadata !1933, i32 87, i64 256, i64 64, i64 0, i32 0, null, metadata !1975, i32 0, null} ; [ DW_TAG_structure_type ]
!1975 = metadata !{metadata !1976, metadata !1977, metadata !1978, metadata !1979, metadata !1982}
!1976 = metadata !{i32 589837, metadata !1974, metadata !"si_pid", metadata !1933, i32 88, i64 32, i64 32, i64 0, i32 0, metadata !1950} ; [ DW_TAG_member ]
!1977 = metadata !{i32 589837, metadata !1974, metadata !"si_uid", metadata !1933, i32 89, i64 32, i64 32, i64 32, i32 0, metadata !1953} ; [ DW_TAG_member ]
!1978 = metadata !{i32 589837, metadata !1974, metadata !"si_status", metadata !1933, i32 90, i64 32, i64 32, i64 64, i32 0, metadata !1912} ; [ DW_TAG_member ]
!1979 = metadata !{i32 589837, metadata !1974, metadata !"si_utime", metadata !1933, i32 91, i64 64, i64 64, i64 128, i32 0, metadata !1980} ; [ DW_TAG_member ]
!1980 = metadata !{i32 589846, metadata !1951, metadata !"__clock_t", metadata !1951, i32 149, i64 0, i64 0, i64 0, i32 0, metadata !1981} ; [ DW_TAG_typedef ]
!1981 = metadata !{i32 589860, metadata !1908, metadata !"long int", metadata !1908, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1982 = metadata !{i32 589837, metadata !1974, metadata !"si_stime", metadata !1933, i32 92, i64 64, i64 64, i64 192, i32 0, metadata !1980} ; [ DW_TAG_member ]
!1983 = metadata !{i32 589837, metadata !1940, metadata !"_sigfault", metadata !1933, i32 99, i64 64, i64 64, i64 0, i32 0, metadata !1984} ; [ DW_TAG_member ]
!1984 = metadata !{i32 589843, metadata !1908, metadata !"", metadata !1933, i32 97, i64 64, i64 64, i64 0, i32 0, null, metadata !1985, i32 0, null} ; [ DW_TAG_structure_type ]
!1985 = metadata !{metadata !1986}
!1986 = metadata !{i32 589837, metadata !1984, metadata !"si_addr", metadata !1933, i32 98, i64 64, i64 64, i64 0, i32 0, metadata !1966} ; [ DW_TAG_member ]
!1987 = metadata !{i32 589837, metadata !1940, metadata !"_sigpoll", metadata !1933, i32 106, i64 128, i64 64, i64 0, i32 0, metadata !1988} ; [ DW_TAG_member ]
!1988 = metadata !{i32 589843, metadata !1908, metadata !"", metadata !1933, i32 103, i64 128, i64 64, i64 0, i32 0, null, metadata !1989, i32 0, null} ; [ DW_TAG_structure_type ]
!1989 = metadata !{metadata !1990, metadata !1991}
!1990 = metadata !{i32 589837, metadata !1988, metadata !"si_band", metadata !1933, i32 104, i64 64, i64 64, i64 0, i32 0, metadata !1981} ; [ DW_TAG_member ]
!1991 = metadata !{i32 589837, metadata !1988, metadata !"si_fd", metadata !1933, i32 105, i64 32, i64 32, i64 64, i32 0, metadata !1912} ; [ DW_TAG_member ]
!1992 = metadata !{i32 589837, metadata !1915, metadata !"sa_mask", metadata !1916, i32 44, i64 1024, i64 64, i64 64, i32 0, metadata !1993} ; [ DW_TAG_member ]
!1993 = metadata !{i32 589846, metadata !1994, metadata !"__sigset_t", metadata !1994, i32 31, i64 0, i64 0, i64 0, i32 0, metadata !1995} ; [ DW_TAG_typedef ]
!1994 = metadata !{i32 589865, metadata !"sigset.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1909} ; [ DW_TAG_file_type ]
!1995 = metadata !{i32 589843, metadata !1908, metadata !"", metadata !1994, i32 29, i64 1024, i64 64, i64 0, i32 0, null, metadata !1996, i32 0, null} ; [ DW_TAG_structure_type ]
!1996 = metadata !{metadata !1997}
!1997 = metadata !{i32 589837, metadata !1995, metadata !"__val", metadata !1994, i32 30, i64 1024, i64 64, i64 0, i32 0, metadata !1998} ; [ DW_TAG_member ]
!1998 = metadata !{i32 589825, metadata !1908, metadata !"", metadata !1908, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !1999, metadata !1334, i32 0, null} ; [ DW_TAG_array_type ]
!1999 = metadata !{i32 589860, metadata !1908, metadata !"long unsigned int", metadata !1908, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2000 = metadata !{i32 589837, metadata !1915, metadata !"sa_flags", metadata !1916, i32 47, i64 32, i64 32, i64 1088, i32 0, metadata !1912} ; [ DW_TAG_member ]
!2001 = metadata !{i32 589837, metadata !1915, metadata !"sa_restorer", metadata !1916, i32 50, i64 64, i64 64, i64 1152, i32 0, metadata !2002} ; [ DW_TAG_member ]
!2002 = metadata !{i32 589839, metadata !1908, metadata !"", metadata !1908, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2003} ; [ DW_TAG_pointer_type ]
!2003 = metadata !{i32 589845, metadata !1908, metadata !"", metadata !1908, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2004 = metadata !{i32 589839, metadata !1908, metadata !"", metadata !1908, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1915} ; [ DW_TAG_pointer_type ]
!2005 = metadata !{i32 589870, i32 0, metadata !2006, metadata !"strerror", metadata !"strerror", metadata !"strerror", metadata !2006, i32 16, metadata !2008, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32)* @strerror} ; [ DW_TAG_sub
!2006 = metadata !{i32 589865, metadata !"strerror.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !2007} ; [ DW_TAG_file_type ]
!2007 = metadata !{i32 589841, i32 0, i32 1, metadata !"strerror.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!2008 = metadata !{i32 589845, metadata !2006, metadata !"", metadata !2006, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2009, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2009 = metadata !{metadata !2010, metadata !2012}
!2010 = metadata !{i32 589839, metadata !2006, metadata !"", metadata !2006, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2011} ; [ DW_TAG_pointer_type ]
!2011 = metadata !{i32 589860, metadata !2006, metadata !"char", metadata !2006, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2012 = metadata !{i32 589860, metadata !2006, metadata !"int", metadata !2006, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2013 = metadata !{i32 589870, i32 0, metadata !2014, metadata !"strstr", metadata !"strstr", metadata !"strstr", metadata !2014, i32 20, metadata !2016, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*)* @strstr} ; [ DW_TAG_subpro
!2014 = metadata !{i32 589865, metadata !"strstr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !2015} ; [ DW_TAG_file_type ]
!2015 = metadata !{i32 589841, i32 0, i32 1, metadata !"strstr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!2016 = metadata !{i32 589845, metadata !2014, metadata !"", metadata !2014, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2017, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2017 = metadata !{metadata !2018, metadata !2020, metadata !2020}
!2018 = metadata !{i32 589839, metadata !2014, metadata !"", metadata !2014, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2019} ; [ DW_TAG_pointer_type ]
!2019 = metadata !{i32 589860, metadata !2014, metadata !"char", metadata !2014, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2020 = metadata !{i32 589839, metadata !2014, metadata !"", metadata !2014, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2021} ; [ DW_TAG_pointer_type ]
!2021 = metadata !{i32 589862, metadata !2014, metadata !"", metadata !2014, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2019} ; [ DW_TAG_const_type ]
!2022 = metadata !{i32 589870, i32 0, metadata !2023, metadata !"strtok_r", metadata !"strtok_r", metadata !"strtok_r", metadata !2023, i32 27, metadata !2025, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*, i8**)* @strtok_r} ; [
!2023 = metadata !{i32 589865, metadata !"strtok_r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !2024} ; [ DW_TAG_file_type ]
!2024 = metadata !{i32 589841, i32 0, i32 1, metadata !"strtok_r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!2025 = metadata !{i32 589845, metadata !2023, metadata !"", metadata !2023, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2026, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2026 = metadata !{metadata !2027, metadata !2027, metadata !2029, metadata !2031}
!2027 = metadata !{i32 589839, metadata !2023, metadata !"", metadata !2023, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2028} ; [ DW_TAG_pointer_type ]
!2028 = metadata !{i32 589860, metadata !2023, metadata !"char", metadata !2023, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2029 = metadata !{i32 589839, metadata !2023, metadata !"", metadata !2023, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2030} ; [ DW_TAG_pointer_type ]
!2030 = metadata !{i32 589862, metadata !2023, metadata !"", metadata !2023, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2028} ; [ DW_TAG_const_type ]
!2031 = metadata !{i32 589839, metadata !2023, metadata !"", metadata !2023, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2027} ; [ DW_TAG_pointer_type ]
!2032 = metadata !{i32 589870, i32 0, metadata !2033, metadata !"_fp_out_narrow", metadata !"_fp_out_narrow", metadata !"", metadata !2035, i32 1225, metadata !2036, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, i64, i64, i64)* @_fp_
!2033 = metadata !{i32 589865, metadata !"vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2034} ; [ DW_TAG_file_type ]
!2034 = metadata !{i32 589841, i32 0, i32 1, metadata !"vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!2035 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2034} ; [ DW_TAG_file_type ]
!2036 = metadata !{i32 589845, metadata !2033, metadata !"", metadata !2033, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2037, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2037 = metadata !{metadata !2038, metadata !2041, metadata !2073, metadata !2073, metadata !2073}
!2038 = metadata !{i32 589846, metadata !2039, metadata !"size_t", metadata !2039, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2040} ; [ DW_TAG_typedef ]
!2039 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2034} ; [ DW_TAG_file_type ]
!2040 = metadata !{i32 589860, metadata !2033, metadata !"long unsigned int", metadata !2033, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2041 = metadata !{i32 589839, metadata !2033, metadata !"", metadata !2033, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2042} ; [ DW_TAG_pointer_type ]
!2042 = metadata !{i32 589846, metadata !2043, metadata !"FILE", metadata !2043, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2044} ; [ DW_TAG_typedef ]
!2043 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2034} ; [ DW_TAG_file_type ]
!2044 = metadata !{i32 589843, metadata !2033, metadata !"__STDIO_FILE_STRUCT", metadata !2043, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2045, i32 0, null} ; [ DW_TAG_structure_type ]
!2045 = metadata !{metadata !2046, metadata !2049, metadata !2052, metadata !2054, metadata !2056, metadata !2057, metadata !2058, metadata !2059, metadata !2060, metadata !2061, metadata !2063, metadata !2066}
!2046 = metadata !{i32 589837, metadata !2044, metadata !"__modeflags", metadata !2047, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2048} ; [ DW_TAG_member ]
!2047 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2034} ; [ DW_TAG_file_type ]
!2048 = metadata !{i32 589860, metadata !2033, metadata !"short unsigned int", metadata !2033, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2049 = metadata !{i32 589837, metadata !2044, metadata !"__ungot_width", metadata !2047, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2050} ; [ DW_TAG_member ]
!2050 = metadata !{i32 589825, metadata !2033, metadata !"", metadata !2033, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2051, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2051 = metadata !{i32 589860, metadata !2033, metadata !"unsigned char", metadata !2033, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2052 = metadata !{i32 589837, metadata !2044, metadata !"__filedes", metadata !2047, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2053} ; [ DW_TAG_member ]
!2053 = metadata !{i32 589860, metadata !2033, metadata !"int", metadata !2033, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2054 = metadata !{i32 589837, metadata !2044, metadata !"__bufstart", metadata !2047, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2055} ; [ DW_TAG_member ]
!2055 = metadata !{i32 589839, metadata !2033, metadata !"", metadata !2033, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2051} ; [ DW_TAG_pointer_type ]
!2056 = metadata !{i32 589837, metadata !2044, metadata !"__bufend", metadata !2047, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2055} ; [ DW_TAG_member ]
!2057 = metadata !{i32 589837, metadata !2044, metadata !"__bufpos", metadata !2047, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2055} ; [ DW_TAG_member ]
!2058 = metadata !{i32 589837, metadata !2044, metadata !"__bufread", metadata !2047, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2055} ; [ DW_TAG_member ]
!2059 = metadata !{i32 589837, metadata !2044, metadata !"__bufgetc_u", metadata !2047, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2055} ; [ DW_TAG_member ]
!2060 = metadata !{i32 589837, metadata !2044, metadata !"__bufputc_u", metadata !2047, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2055} ; [ DW_TAG_member ]
!2061 = metadata !{i32 589837, metadata !2044, metadata !"__nextopen", metadata !2047, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2062} ; [ DW_TAG_member ]
!2062 = metadata !{i32 589839, metadata !2033, metadata !"", metadata !2033, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2044} ; [ DW_TAG_pointer_type ]
!2063 = metadata !{i32 589837, metadata !2044, metadata !"__ungot", metadata !2047, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2064} ; [ DW_TAG_member ]
!2064 = metadata !{i32 589825, metadata !2033, metadata !"", metadata !2033, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2065, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2065 = metadata !{i32 589846, metadata !2039, metadata !"wchar_t", metadata !2039, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2053} ; [ DW_TAG_typedef ]
!2066 = metadata !{i32 589837, metadata !2044, metadata !"__state", metadata !2047, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2067} ; [ DW_TAG_member ]
!2067 = metadata !{i32 589846, metadata !2068, metadata !"__mbstate_t", metadata !2068, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2069} ; [ DW_TAG_typedef ]
!2068 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2034} ; [ DW_TAG_file_type ]
!2069 = metadata !{i32 589843, metadata !2033, metadata !"", metadata !2068, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2070, i32 0, null} ; [ DW_TAG_structure_type ]
!2070 = metadata !{metadata !2071, metadata !2072}
!2071 = metadata !{i32 589837, metadata !2069, metadata !"__mask", metadata !2068, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2065} ; [ DW_TAG_member ]
!2072 = metadata !{i32 589837, metadata !2069, metadata !"__wc", metadata !2068, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2065} ; [ DW_TAG_member ]
!2073 = metadata !{i32 589846, metadata !2074, metadata !"intptr_t", metadata !2074, i32 122, i64 0, i64 0, i64 0, i32 0, metadata !2075} ; [ DW_TAG_typedef ]
!2074 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2034} ; [ DW_TAG_file_type ]
!2075 = metadata !{i32 589860, metadata !2033, metadata !"long int", metadata !2033, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2076 = metadata !{i32 589870, i32 0, metadata !2033, metadata !"_charpad", metadata !"_charpad", metadata !"", metadata !2035, i32 1423, metadata !2077, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, i32, i64)* @_charpad} ; [ DW_TAG_
!2077 = metadata !{i32 589845, metadata !2033, metadata !"", metadata !2033, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2078, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2078 = metadata !{metadata !2038, metadata !2041, metadata !2053, metadata !2038}
!2079 = metadata !{i32 589870, i32 0, metadata !2033, metadata !"_do_one_spec", metadata !"_do_one_spec", metadata !"", metadata !2035, i32 1440, metadata !2080, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, %struct.ppfs_t*, i32*)* @
!2080 = metadata !{i32 589845, metadata !2033, metadata !"", metadata !2033, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2081, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2081 = metadata !{metadata !2053, metadata !2041, metadata !2082, metadata !2138}
!2082 = metadata !{i32 589839, metadata !2033, metadata !"", metadata !2033, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2083} ; [ DW_TAG_pointer_type ]
!2083 = metadata !{i32 589846, metadata !2035, metadata !"ppfs_t", metadata !2035, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2084} ; [ DW_TAG_typedef ]
!2084 = metadata !{i32 589843, metadata !2033, metadata !"", metadata !2035, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2085, i32 0, null} ; [ DW_TAG_structure_type ]
!2085 = metadata !{metadata !2086, metadata !2090, metadata !2100, metadata !2101, metadata !2102, metadata !2103, metadata !2105, metadata !2109, metadata !2123}
!2086 = metadata !{i32 589837, metadata !2084, metadata !"fmtpos", metadata !2035, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2087} ; [ DW_TAG_member ]
!2087 = metadata !{i32 589839, metadata !2033, metadata !"", metadata !2033, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2088} ; [ DW_TAG_pointer_type ]
!2088 = metadata !{i32 589862, metadata !2033, metadata !"", metadata !2033, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2089} ; [ DW_TAG_const_type ]
!2089 = metadata !{i32 589860, metadata !2033, metadata !"char", metadata !2033, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2090 = metadata !{i32 589837, metadata !2084, metadata !"info", metadata !2035, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2091} ; [ DW_TAG_member ]
!2091 = metadata !{i32 589843, metadata !2033, metadata !"printf_info", metadata !2092, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2093, i32 0, null} ; [ DW_TAG_structure_type ]
!2092 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2034} ; [ DW_TAG_file_type ]
!2093 = metadata !{metadata !2094, metadata !2095, metadata !2096, metadata !2097, metadata !2099}
!2094 = metadata !{i32 589837, metadata !2091, metadata !"prec", metadata !2092, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2053} ; [ DW_TAG_member ]
!2095 = metadata !{i32 589837, metadata !2091, metadata !"width", metadata !2092, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2053} ; [ DW_TAG_member ]
!2096 = metadata !{i32 589837, metadata !2091, metadata !"spec", metadata !2092, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2065} ; [ DW_TAG_member ]
!2097 = metadata !{i32 589837, metadata !2091, metadata !"_flags", metadata !2092, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2098} ; [ DW_TAG_member ]
!2098 = metadata !{i32 589860, metadata !2033, metadata !"unsigned int", metadata !2033, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2099 = metadata !{i32 589837, metadata !2091, metadata !"pad", metadata !2092, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2065} ; [ DW_TAG_member ]
!2100 = metadata !{i32 589837, metadata !2084, metadata !"maxposarg", metadata !2035, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2053} ; [ DW_TAG_member ]
!2101 = metadata !{i32 589837, metadata !2084, metadata !"num_data_args", metadata !2035, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2053} ; [ DW_TAG_member ]
!2102 = metadata !{i32 589837, metadata !2084, metadata !"conv_num", metadata !2035, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2098} ; [ DW_TAG_member ]
!2103 = metadata !{i32 589837, metadata !2084, metadata !"argnumber", metadata !2035, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2104} ; [ DW_TAG_member ]
!2104 = metadata !{i32 589825, metadata !2033, metadata !"", metadata !2033, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2051, metadata !838, i32 0, null} ; [ DW_TAG_array_type ]
!2105 = metadata !{i32 589837, metadata !2084, metadata !"argtype", metadata !2035, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2106} ; [ DW_TAG_member ]
!2106 = metadata !{i32 589825, metadata !2033, metadata !"", metadata !2033, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2053, metadata !2107, i32 0, null} ; [ DW_TAG_array_type ]
!2107 = metadata !{metadata !2108}
!2108 = metadata !{i32 589857, i64 0, i64 8}      ; [ DW_TAG_subrange_type ]
!2109 = metadata !{i32 589837, metadata !2084, metadata !"arg", metadata !2035, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2110} ; [ DW_TAG_member ]
!2110 = metadata !{i32 589846, metadata !2111, metadata !"va_list", metadata !2111, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2112} ; [ DW_TAG_typedef ]
!2111 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2034} ; [ DW_TAG_file_type ]
!2112 = metadata !{i32 589825, metadata !2033, metadata !"", metadata !2033, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2113, metadata !2121, i32 0, null} ; [ DW_TAG_array_type ]
!2113 = metadata !{i32 589843, metadata !2033, metadata !"__va_list_tag", metadata !2114, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2115, i32 0, null} ; [ DW_TAG_structure_type ]
!2114 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2034} ; [ DW_TAG_file_type ]
!2115 = metadata !{metadata !2116, metadata !2117, metadata !2118, metadata !2120}
!2116 = metadata !{i32 589837, metadata !2113, metadata !"gp_offset", metadata !2114, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2098} ; [ DW_TAG_member ]
!2117 = metadata !{i32 589837, metadata !2113, metadata !"fp_offset", metadata !2114, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2098} ; [ DW_TAG_member ]
!2118 = metadata !{i32 589837, metadata !2113, metadata !"overflow_arg_area", metadata !2114, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2119} ; [ DW_TAG_member ]
!2119 = metadata !{i32 589839, metadata !2033, metadata !"", metadata !2033, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2120 = metadata !{i32 589837, metadata !2113, metadata !"reg_save_area", metadata !2114, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2119} ; [ DW_TAG_member ]
!2121 = metadata !{metadata !2122}
!2122 = metadata !{i32 589857, i64 0, i64 0}      ; [ DW_TAG_subrange_type ]
!2123 = metadata !{i32 589837, metadata !2084, metadata !"argvalue", metadata !2035, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2124} ; [ DW_TAG_member ]
!2124 = metadata !{i32 589825, metadata !2033, metadata !"", metadata !2033, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2125, metadata !2107, i32 0, null} ; [ DW_TAG_array_type ]
!2125 = metadata !{i32 589846, metadata !2035, metadata !"argvalue_t", metadata !2035, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2126} ; [ DW_TAG_typedef ]
!2126 = metadata !{i32 589847, metadata !2033, metadata !"", metadata !2035, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2127, i32 0, null} ; [ DW_TAG_union_type ]
!2127 = metadata !{metadata !2128, metadata !2129, metadata !2130, metadata !2131, metadata !2133, metadata !2135, metadata !2137}
!2128 = metadata !{i32 589837, metadata !2126, metadata !"wc", metadata !2035, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2065} ; [ DW_TAG_member ]
!2129 = metadata !{i32 589837, metadata !2126, metadata !"u", metadata !2035, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2098} ; [ DW_TAG_member ]
!2130 = metadata !{i32 589837, metadata !2126, metadata !"ul", metadata !2035, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2040} ; [ DW_TAG_member ]
!2131 = metadata !{i32 589837, metadata !2126, metadata !"ull", metadata !2035, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2132} ; [ DW_TAG_member ]
!2132 = metadata !{i32 589860, metadata !2033, metadata !"long long unsigned int", metadata !2033, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2133 = metadata !{i32 589837, metadata !2126, metadata !"d", metadata !2035, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2134} ; [ DW_TAG_member ]
!2134 = metadata !{i32 589860, metadata !2033, metadata !"double", metadata !2033, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2135 = metadata !{i32 589837, metadata !2126, metadata !"ld", metadata !2035, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2136} ; [ DW_TAG_member ]
!2136 = metadata !{i32 589860, metadata !2033, metadata !"long double", metadata !2033, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2137 = metadata !{i32 589837, metadata !2126, metadata !"p", metadata !2035, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2119} ; [ DW_TAG_member ]
!2138 = metadata !{i32 589839, metadata !2033, metadata !"", metadata !2033, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2053} ; [ DW_TAG_pointer_type ]
!2139 = metadata !{i32 589870, i32 0, metadata !2033, metadata !"vfprintf", metadata !"vfprintf", metadata !"vfprintf", metadata !2035, i32 1867, metadata !2140, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i8*, %struct.__va_list_t
!2140 = metadata !{i32 589845, metadata !2033, metadata !"", metadata !2033, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2141, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2141 = metadata !{metadata !2053, metadata !2041, metadata !2087, metadata !2142}
!2142 = metadata !{i32 589839, metadata !2033, metadata !"", metadata !2033, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2113} ; [ DW_TAG_pointer_type ]
!2143 = metadata !{i32 589870, i32 0, metadata !2144, metadata !"sc_getc", metadata !"sc_getc", metadata !"", metadata !2146, i32 987, metadata !2147, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.scan_cookie*)* @sc_getc} ; [ DW_T
!2144 = metadata !{i32 589865, metadata !"vfscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2145} ; [ DW_TAG_file_type ]
!2145 = metadata !{i32 589841, i32 0, i32 1, metadata !"vfscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!2146 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2145} ; [ DW_TAG_file_type ]
!2147 = metadata !{i32 589845, metadata !2144, metadata !"", metadata !2144, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2148, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2148 = metadata !{metadata !2149, metadata !2150}
!2149 = metadata !{i32 589860, metadata !2144, metadata !"int", metadata !2144, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2150 = metadata !{i32 589839, metadata !2144, metadata !"", metadata !2144, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2151} ; [ DW_TAG_pointer_type ]
!2151 = metadata !{i32 589843, metadata !2144, metadata !"scan_cookie", metadata !2146, i32 628, i64 640, i64 64, i64 0, i32 0, null, metadata !2152, i32 0, null} ; [ DW_TAG_structure_type ]
!2152 = metadata !{metadata !2153, metadata !2154, metadata !2155, metadata !2188, metadata !2189, metadata !2190, metadata !2191, metadata !2192, metadata !2194, metadata !2195, metadata !2196, metadata !2198, metadata !2201, metadata !2202, metadata !2
!2153 = metadata !{i32 589837, metadata !2151, metadata !"cc", metadata !2146, i32 629, i64 32, i64 32, i64 0, i32 0, metadata !2149} ; [ DW_TAG_member ]
!2154 = metadata !{i32 589837, metadata !2151, metadata !"ungot_char", metadata !2146, i32 630, i64 32, i64 32, i64 32, i32 0, metadata !2149} ; [ DW_TAG_member ]
!2155 = metadata !{i32 589837, metadata !2151, metadata !"fp", metadata !2146, i32 631, i64 64, i64 64, i64 64, i32 0, metadata !2156} ; [ DW_TAG_member ]
!2156 = metadata !{i32 589839, metadata !2144, metadata !"", metadata !2144, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2157} ; [ DW_TAG_pointer_type ]
!2157 = metadata !{i32 589846, metadata !2158, metadata !"FILE", metadata !2158, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2159} ; [ DW_TAG_typedef ]
!2158 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2145} ; [ DW_TAG_file_type ]
!2159 = metadata !{i32 589843, metadata !2144, metadata !"__STDIO_FILE_STRUCT", metadata !2158, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2160, i32 0, null} ; [ DW_TAG_structure_type ]
!2160 = metadata !{metadata !2161, metadata !2164, metadata !2167, metadata !2168, metadata !2170, metadata !2171, metadata !2172, metadata !2173, metadata !2174, metadata !2175, metadata !2177, metadata !2181}
!2161 = metadata !{i32 589837, metadata !2159, metadata !"__modeflags", metadata !2162, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2163} ; [ DW_TAG_member ]
!2162 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2145} ; [ DW_TAG_file_type ]
!2163 = metadata !{i32 589860, metadata !2144, metadata !"short unsigned int", metadata !2144, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2164 = metadata !{i32 589837, metadata !2159, metadata !"__ungot_width", metadata !2162, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2165} ; [ DW_TAG_member ]
!2165 = metadata !{i32 589825, metadata !2144, metadata !"", metadata !2144, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2166, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2166 = metadata !{i32 589860, metadata !2144, metadata !"unsigned char", metadata !2144, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2167 = metadata !{i32 589837, metadata !2159, metadata !"__filedes", metadata !2162, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2149} ; [ DW_TAG_member ]
!2168 = metadata !{i32 589837, metadata !2159, metadata !"__bufstart", metadata !2162, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2169} ; [ DW_TAG_member ]
!2169 = metadata !{i32 589839, metadata !2144, metadata !"", metadata !2144, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2166} ; [ DW_TAG_pointer_type ]
!2170 = metadata !{i32 589837, metadata !2159, metadata !"__bufend", metadata !2162, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2169} ; [ DW_TAG_member ]
!2171 = metadata !{i32 589837, metadata !2159, metadata !"__bufpos", metadata !2162, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2169} ; [ DW_TAG_member ]
!2172 = metadata !{i32 589837, metadata !2159, metadata !"__bufread", metadata !2162, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2169} ; [ DW_TAG_member ]
!2173 = metadata !{i32 589837, metadata !2159, metadata !"__bufgetc_u", metadata !2162, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2169} ; [ DW_TAG_member ]
!2174 = metadata !{i32 589837, metadata !2159, metadata !"__bufputc_u", metadata !2162, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2169} ; [ DW_TAG_member ]
!2175 = metadata !{i32 589837, metadata !2159, metadata !"__nextopen", metadata !2162, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2176} ; [ DW_TAG_member ]
!2176 = metadata !{i32 589839, metadata !2144, metadata !"", metadata !2144, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2159} ; [ DW_TAG_pointer_type ]
!2177 = metadata !{i32 589837, metadata !2159, metadata !"__ungot", metadata !2162, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2178} ; [ DW_TAG_member ]
!2178 = metadata !{i32 589825, metadata !2144, metadata !"", metadata !2144, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2179, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2179 = metadata !{i32 589846, metadata !2180, metadata !"wchar_t", metadata !2180, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2149} ; [ DW_TAG_typedef ]
!2180 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2145} ; [ DW_TAG_file_type ]
!2181 = metadata !{i32 589837, metadata !2159, metadata !"__state", metadata !2162, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2182} ; [ DW_TAG_member ]
!2182 = metadata !{i32 589846, metadata !2183, metadata !"__mbstate_t", metadata !2183, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2184} ; [ DW_TAG_typedef ]
!2183 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2145} ; [ DW_TAG_file_type ]
!2184 = metadata !{i32 589843, metadata !2144, metadata !"", metadata !2183, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2185, i32 0, null} ; [ DW_TAG_structure_type ]
!2185 = metadata !{metadata !2186, metadata !2187}
!2186 = metadata !{i32 589837, metadata !2184, metadata !"__mask", metadata !2183, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2179} ; [ DW_TAG_member ]
!2187 = metadata !{i32 589837, metadata !2184, metadata !"__wc", metadata !2183, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2179} ; [ DW_TAG_member ]
!2188 = metadata !{i32 589837, metadata !2151, metadata !"nread", metadata !2146, i32 632, i64 32, i64 32, i64 128, i32 0, metadata !2149} ; [ DW_TAG_member ]
!2189 = metadata !{i32 589837, metadata !2151, metadata !"width", metadata !2146, i32 633, i64 32, i64 32, i64 160, i32 0, metadata !2149} ; [ DW_TAG_member ]
!2190 = metadata !{i32 589837, metadata !2151, metadata !"app_ungot", metadata !2146, i32 636, i64 32, i64 32, i64 192, i32 0, metadata !2179} ; [ DW_TAG_member ]
!2191 = metadata !{i32 589837, metadata !2151, metadata !"ungot_wchar_width", metadata !2146, i32 637, i64 8, i64 8, i64 224, i32 0, metadata !2166} ; [ DW_TAG_member ]
!2192 = metadata !{i32 589837, metadata !2151, metadata !"ungot_flag", metadata !2146, i32 642, i64 8, i64 8, i64 232, i32 0, metadata !2193} ; [ DW_TAG_member ]
!2193 = metadata !{i32 589860, metadata !2144, metadata !"char", metadata !2144, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2194 = metadata !{i32 589837, metadata !2151, metadata !"ungot_wflag", metadata !2146, i32 645, i64 8, i64 8, i64 240, i32 0, metadata !2193} ; [ DW_TAG_member ]
!2195 = metadata !{i32 589837, metadata !2151, metadata !"mb_fail", metadata !2146, i32 646, i64 8, i64 8, i64 248, i32 0, metadata !2193} ; [ DW_TAG_member ]
!2196 = metadata !{i32 589837, metadata !2151, metadata !"mbstate", metadata !2146, i32 647, i64 64, i64 32, i64 256, i32 0, metadata !2197} ; [ DW_TAG_member ]
!2197 = metadata !{i32 589846, metadata !2183, metadata !"mbstate_t", metadata !2183, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2184} ; [ DW_TAG_typedef ]
!2198 = metadata !{i32 589837, metadata !2151, metadata !"wc", metadata !2146, i32 648, i64 32, i64 32, i64 320, i32 0, metadata !2199} ; [ DW_TAG_member ]
!2199 = metadata !{i32 589846, metadata !2180, metadata !"wint_t", metadata !2180, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !2200} ; [ DW_TAG_typedef ]
!2200 = metadata !{i32 589860, metadata !2144, metadata !"unsigned int", metadata !2144, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2201 = metadata !{i32 589837, metadata !2151, metadata !"ungot_wchar", metadata !2146, i32 649, i64 32, i64 32, i64 352, i32 0, metadata !2199} ; [ DW_TAG_member ]
!2202 = metadata !{i32 589837, metadata !2151, metadata !"sc_getc", metadata !2146, i32 650, i64 64, i64 64, i64 384, i32 0, metadata !2203} ; [ DW_TAG_member ]
!2203 = metadata !{i32 589839, metadata !2144, metadata !"", metadata !2144, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2147} ; [ DW_TAG_pointer_type ]
!2204 = metadata !{i32 589837, metadata !2151, metadata !"decpt", metadata !2146, i32 663, i64 64, i64 64, i64 448, i32 0, metadata !2205} ; [ DW_TAG_member ]
!2205 = metadata !{i32 589839, metadata !2144, metadata !"", metadata !2144, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2206} ; [ DW_TAG_pointer_type ]
!2206 = metadata !{i32 589862, metadata !2144, metadata !"", metadata !2144, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2166} ; [ DW_TAG_const_type ]
!2207 = metadata !{i32 589837, metadata !2151, metadata !"decpt_len", metadata !2146, i32 664, i64 32, i64 32, i64 512, i32 0, metadata !2149} ; [ DW_TAG_member ]
!2208 = metadata !{i32 589837, metadata !2151, metadata !"decpt_wc", metadata !2146, i32 666, i64 32, i64 32, i64 544, i32 0, metadata !2179} ; [ DW_TAG_member ]
!2209 = metadata !{i32 589837, metadata !2151, metadata !"fake_decpt", metadata !2146, i32 668, i64 64, i64 64, i64 576, i32 0, metadata !2205} ; [ DW_TAG_member ]
!2210 = metadata !{i32 589870, i32 0, metadata !2144, metadata !"scan_getwc", metadata !"scan_getwc", metadata !"", metadata !2146, i32 994, metadata !2147, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.scan_cookie*)* @scan_getwc}
!2211 = metadata !{i32 589870, i32 0, metadata !2144, metadata !"vfscanf", metadata !"vfscanf", metadata !"vfscanf", metadata !2146, i32 1180, metadata !2212, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i8*, %struct.__va_list_tag*
!2212 = metadata !{i32 589845, metadata !2144, metadata !"", metadata !2144, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2213, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2213 = metadata !{metadata !2149, metadata !2156, metadata !2214, metadata !2216}
!2214 = metadata !{i32 589839, metadata !2144, metadata !"", metadata !2144, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2215} ; [ DW_TAG_pointer_type ]
!2215 = metadata !{i32 589862, metadata !2144, metadata !"", metadata !2144, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2193} ; [ DW_TAG_const_type ]
!2216 = metadata !{i32 589839, metadata !2144, metadata !"", metadata !2144, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2217} ; [ DW_TAG_pointer_type ]
!2217 = metadata !{i32 589843, metadata !2144, metadata !"__va_list_tag", metadata !2218, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2219, i32 0, null} ; [ DW_TAG_structure_type ]
!2218 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2145} ; [ DW_TAG_file_type ]
!2219 = metadata !{metadata !2220, metadata !2221, metadata !2222, metadata !2224}
!2220 = metadata !{i32 589837, metadata !2217, metadata !"gp_offset", metadata !2218, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2200} ; [ DW_TAG_member ]
!2221 = metadata !{i32 589837, metadata !2217, metadata !"fp_offset", metadata !2218, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2200} ; [ DW_TAG_member ]
!2222 = metadata !{i32 589837, metadata !2217, metadata !"overflow_arg_area", metadata !2218, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2223} ; [ DW_TAG_member ]
!2223 = metadata !{i32 589839, metadata !2144, metadata !"", metadata !2144, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2224 = metadata !{i32 589837, metadata !2217, metadata !"reg_save_area", metadata !2218, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2223} ; [ DW_TAG_member ]
!2225 = metadata !{i32 589870, i32 0, metadata !2144, metadata !"kill_scan_cookie", metadata !"kill_scan_cookie", metadata !"", metadata !2146, i32 1131, metadata !2226, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.scan_cookie*)
!2226 = metadata !{i32 589845, metadata !2144, metadata !"", metadata !2144, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2227, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2227 = metadata !{null, metadata !2150}
!2228 = metadata !{i32 589870, i32 0, metadata !2229, metadata !"vsnprintf", metadata !"vsnprintf", metadata !"vsnprintf", metadata !2229, i32 23, metadata !2231, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i64, i8*, %struct.__va_
!2229 = metadata !{i32 589865, metadata !"vsnprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2230} ; [ DW_TAG_file_type ]
!2230 = metadata !{i32 589841, i32 0, i32 1, metadata !"vsnprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!2231 = metadata !{i32 589845, metadata !2229, metadata !"", metadata !2229, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2232, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2232 = metadata !{metadata !2233, metadata !2234, metadata !2236, metadata !2239, metadata !2241}
!2233 = metadata !{i32 589860, metadata !2229, metadata !"int", metadata !2229, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2234 = metadata !{i32 589839, metadata !2229, metadata !"", metadata !2229, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2235} ; [ DW_TAG_pointer_type ]
!2235 = metadata !{i32 589860, metadata !2229, metadata !"char", metadata !2229, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2236 = metadata !{i32 589846, metadata !2237, metadata !"size_t", metadata !2237, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2238} ; [ DW_TAG_typedef ]
!2237 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2230} ; [ DW_TAG_file_type ]
!2238 = metadata !{i32 589860, metadata !2229, metadata !"long unsigned int", metadata !2229, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2239 = metadata !{i32 589839, metadata !2229, metadata !"", metadata !2229, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2240} ; [ DW_TAG_pointer_type ]
!2240 = metadata !{i32 589862, metadata !2229, metadata !"", metadata !2229, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2235} ; [ DW_TAG_const_type ]
!2241 = metadata !{i32 589839, metadata !2229, metadata !"", metadata !2229, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2242} ; [ DW_TAG_pointer_type ]
!2242 = metadata !{i32 589843, metadata !2229, metadata !"__va_list_tag", metadata !2243, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2244, i32 0, null} ; [ DW_TAG_structure_type ]
!2243 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2230} ; [ DW_TAG_file_type ]
!2244 = metadata !{metadata !2245, metadata !2247, metadata !2248, metadata !2250}
!2245 = metadata !{i32 589837, metadata !2242, metadata !"gp_offset", metadata !2243, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2246} ; [ DW_TAG_member ]
!2246 = metadata !{i32 589860, metadata !2229, metadata !"unsigned int", metadata !2229, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2247 = metadata !{i32 589837, metadata !2242, metadata !"fp_offset", metadata !2243, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2246} ; [ DW_TAG_member ]
!2248 = metadata !{i32 589837, metadata !2242, metadata !"overflow_arg_area", metadata !2243, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2249} ; [ DW_TAG_member ]
!2249 = metadata !{i32 589839, metadata !2229, metadata !"", metadata !2229, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2250 = metadata !{i32 589837, metadata !2242, metadata !"reg_save_area", metadata !2243, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2249} ; [ DW_TAG_member ]
!2251 = metadata !{i32 589870, i32 0, metadata !2252, metadata !"wcsrtombs", metadata !"wcsrtombs", metadata !"wcsrtombs", metadata !2254, i32 394, metadata !2255, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i32**, i64, %struct.__
!2252 = metadata !{i32 589865, metadata !"wcsrtombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2253} ; [ DW_TAG_file_type ]
!2253 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcsrtombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!2254 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2253} ; [ DW_TAG_file_type ]
!2255 = metadata !{i32 589845, metadata !2252, metadata !"", metadata !2252, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2256, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2256 = metadata !{metadata !2257, metadata !2260, metadata !2262, metadata !2257, metadata !2266}
!2257 = metadata !{i32 589846, metadata !2258, metadata !"size_t", metadata !2258, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2259} ; [ DW_TAG_typedef ]
!2258 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2253} ; [ DW_TAG_file_type ]
!2259 = metadata !{i32 589860, metadata !2252, metadata !"long unsigned int", metadata !2252, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2260 = metadata !{i32 589839, metadata !2252, metadata !"", metadata !2252, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2261} ; [ DW_TAG_pointer_type ]
!2261 = metadata !{i32 589860, metadata !2252, metadata !"char", metadata !2252, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2262 = metadata !{i32 589839, metadata !2252, metadata !"", metadata !2252, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2263} ; [ DW_TAG_pointer_type ]
!2263 = metadata !{i32 589839, metadata !2252, metadata !"", metadata !2252, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2264} ; [ DW_TAG_pointer_type ]
!2264 = metadata !{i32 589846, metadata !2258, metadata !"wchar_t", metadata !2258, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2265} ; [ DW_TAG_typedef ]
!2265 = metadata !{i32 589860, metadata !2252, metadata !"int", metadata !2252, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2266 = metadata !{i32 589839, metadata !2252, metadata !"", metadata !2252, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2267} ; [ DW_TAG_pointer_type ]
!2267 = metadata !{i32 589846, metadata !2268, metadata !"mbstate_t", metadata !2268, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2269} ; [ DW_TAG_typedef ]
!2268 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2253} ; [ DW_TAG_file_type ]
!2269 = metadata !{i32 589843, metadata !2252, metadata !"", metadata !2268, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2270, i32 0, null} ; [ DW_TAG_structure_type ]
!2270 = metadata !{metadata !2271, metadata !2272}
!2271 = metadata !{i32 589837, metadata !2269, metadata !"__mask", metadata !2268, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2264} ; [ DW_TAG_member ]
!2272 = metadata !{i32 589837, metadata !2269, metadata !"__wc", metadata !2268, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2264} ; [ DW_TAG_member ]
!2273 = metadata !{i32 589870, i32 0, metadata !2274, metadata !"__psfs_do_numeric", metadata !"__psfs_do_numeric", metadata !"__psfs_do_numeric", metadata !2276, i32 1791, metadata !2277, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%s
!2274 = metadata !{i32 589865, metadata !"__psfs_do_numeric.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2275} ; [ DW_TAG_file_type ]
!2275 = metadata !{i32 589841, i32 0, i32 1, metadata !"__psfs_do_numeric.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0
!2276 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2275} ; [ DW_TAG_file_type ]
!2277 = metadata !{i32 589845, metadata !2274, metadata !"", metadata !2274, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2278, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2278 = metadata !{metadata !2279, metadata !2280, metadata !2300}
!2279 = metadata !{i32 589860, metadata !2274, metadata !"int", metadata !2274, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2280 = metadata !{i32 589839, metadata !2274, metadata !"", metadata !2274, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2281} ; [ DW_TAG_pointer_type ]
!2281 = metadata !{i32 589846, metadata !2276, metadata !"psfs_t", metadata !2276, i32 686, i64 0, i64 0, i64 0, i32 0, metadata !2282} ; [ DW_TAG_typedef ]
!2282 = metadata !{i32 589843, metadata !2274, metadata !"", metadata !2276, i32 673, i64 960, i64 64, i64 0, i32 0, null, metadata !2283, i32 0, null} ; [ DW_TAG_structure_type ]
!2283 = metadata !{metadata !2284, metadata !2287, metadata !2288, metadata !2289, metadata !2290, metadata !2294, metadata !2295, metadata !2296, metadata !2297, metadata !2298, metadata !2299}
!2284 = metadata !{i32 589837, metadata !2282, metadata !"pos_args", metadata !2276, i32 678, i64 576, i64 64, i64 0, i32 0, metadata !2285} ; [ DW_TAG_member ]
!2285 = metadata !{i32 589825, metadata !2274, metadata !"", metadata !2274, i32 0, i64 576, i64 64, i64 0, i32 0, metadata !2286, metadata !2107, i32 0, null} ; [ DW_TAG_array_type ]
!2286 = metadata !{i32 589839, metadata !2274, metadata !"", metadata !2274, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2287 = metadata !{i32 589837, metadata !2282, metadata !"num_pos_args", metadata !2276, i32 679, i64 32, i64 32, i64 576, i32 0, metadata !2279} ; [ DW_TAG_member ]
!2288 = metadata !{i32 589837, metadata !2282, metadata !"cur_pos_arg", metadata !2276, i32 680, i64 32, i64 32, i64 608, i32 0, metadata !2279} ; [ DW_TAG_member ]
!2289 = metadata !{i32 589837, metadata !2282, metadata !"cur_ptr", metadata !2276, i32 682, i64 64, i64 64, i64 640, i32 0, metadata !2286} ; [ DW_TAG_member ]
!2290 = metadata !{i32 589837, metadata !2282, metadata !"fmt", metadata !2276, i32 683, i64 64, i64 64, i64 704, i32 0, metadata !2291} ; [ DW_TAG_member ]
!2291 = metadata !{i32 589839, metadata !2274, metadata !"", metadata !2274, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2292} ; [ DW_TAG_pointer_type ]
!2292 = metadata !{i32 589862, metadata !2274, metadata !"", metadata !2274, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2293} ; [ DW_TAG_const_type ]
!2293 = metadata !{i32 589860, metadata !2274, metadata !"unsigned char", metadata !2274, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2294 = metadata !{i32 589837, metadata !2282, metadata !"cnt", metadata !2276, i32 684, i64 32, i64 32, i64 768, i32 0, metadata !2279} ; [ DW_TAG_member ]
!2295 = metadata !{i32 589837, metadata !2282, metadata !"dataargtype", metadata !2276, i32 684, i64 32, i64 32, i64 800, i32 0, metadata !2279} ; [ DW_TAG_member ]
!2296 = metadata !{i32 589837, metadata !2282, metadata !"conv_num", metadata !2276, i32 684, i64 32, i64 32, i64 832, i32 0, metadata !2279} ; [ DW_TAG_member ]
!2297 = metadata !{i32 589837, metadata !2282, metadata !"max_width", metadata !2276, i32 684, i64 32, i64 32, i64 864, i32 0, metadata !2279} ; [ DW_TAG_member ]
!2298 = metadata !{i32 589837, metadata !2282, metadata !"store", metadata !2276, i32 685, i64 8, i64 8, i64 896, i32 0, metadata !2293} ; [ DW_TAG_member ]
!2299 = metadata !{i32 589837, metadata !2282, metadata !"flags", metadata !2276, i32 685, i64 8, i64 8, i64 904, i32 0, metadata !2293} ; [ DW_TAG_member ]
!2300 = metadata !{i32 589839, metadata !2274, metadata !"", metadata !2274, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2301} ; [ DW_TAG_pointer_type ]
!2301 = metadata !{i32 589843, metadata !2274, metadata !"scan_cookie", metadata !2276, i32 628, i64 640, i64 64, i64 0, i32 0, null, metadata !2302, i32 0, null} ; [ DW_TAG_structure_type ]
!2302 = metadata !{metadata !2303, metadata !2304, metadata !2305, metadata !2337, metadata !2338, metadata !2339, metadata !2340, metadata !2341, metadata !2343, metadata !2344, metadata !2345, metadata !2347, metadata !2350, metadata !2351, metadata !2
!2303 = metadata !{i32 589837, metadata !2301, metadata !"cc", metadata !2276, i32 629, i64 32, i64 32, i64 0, i32 0, metadata !2279} ; [ DW_TAG_member ]
!2304 = metadata !{i32 589837, metadata !2301, metadata !"ungot_char", metadata !2276, i32 630, i64 32, i64 32, i64 32, i32 0, metadata !2279} ; [ DW_TAG_member ]
!2305 = metadata !{i32 589837, metadata !2301, metadata !"fp", metadata !2276, i32 631, i64 64, i64 64, i64 64, i32 0, metadata !2306} ; [ DW_TAG_member ]
!2306 = metadata !{i32 589839, metadata !2274, metadata !"", metadata !2274, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2307} ; [ DW_TAG_pointer_type ]
!2307 = metadata !{i32 589846, metadata !2308, metadata !"FILE", metadata !2308, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2309} ; [ DW_TAG_typedef ]
!2308 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2275} ; [ DW_TAG_file_type ]
!2309 = metadata !{i32 589843, metadata !2274, metadata !"__STDIO_FILE_STRUCT", metadata !2308, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2310, i32 0, null} ; [ DW_TAG_structure_type ]
!2310 = metadata !{metadata !2311, metadata !2314, metadata !2316, metadata !2317, metadata !2319, metadata !2320, metadata !2321, metadata !2322, metadata !2323, metadata !2324, metadata !2326, metadata !2330}
!2311 = metadata !{i32 589837, metadata !2309, metadata !"__modeflags", metadata !2312, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2313} ; [ DW_TAG_member ]
!2312 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2275} ; [ DW_TAG_file_type ]
!2313 = metadata !{i32 589860, metadata !2274, metadata !"short unsigned int", metadata !2274, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2314 = metadata !{i32 589837, metadata !2309, metadata !"__ungot_width", metadata !2312, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2315} ; [ DW_TAG_member ]
!2315 = metadata !{i32 589825, metadata !2274, metadata !"", metadata !2274, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2293, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2316 = metadata !{i32 589837, metadata !2309, metadata !"__filedes", metadata !2312, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2279} ; [ DW_TAG_member ]
!2317 = metadata !{i32 589837, metadata !2309, metadata !"__bufstart", metadata !2312, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2318} ; [ DW_TAG_member ]
!2318 = metadata !{i32 589839, metadata !2274, metadata !"", metadata !2274, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2293} ; [ DW_TAG_pointer_type ]
!2319 = metadata !{i32 589837, metadata !2309, metadata !"__bufend", metadata !2312, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2318} ; [ DW_TAG_member ]
!2320 = metadata !{i32 589837, metadata !2309, metadata !"__bufpos", metadata !2312, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2318} ; [ DW_TAG_member ]
!2321 = metadata !{i32 589837, metadata !2309, metadata !"__bufread", metadata !2312, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2318} ; [ DW_TAG_member ]
!2322 = metadata !{i32 589837, metadata !2309, metadata !"__bufgetc_u", metadata !2312, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2318} ; [ DW_TAG_member ]
!2323 = metadata !{i32 589837, metadata !2309, metadata !"__bufputc_u", metadata !2312, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2318} ; [ DW_TAG_member ]
!2324 = metadata !{i32 589837, metadata !2309, metadata !"__nextopen", metadata !2312, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2325} ; [ DW_TAG_member ]
!2325 = metadata !{i32 589839, metadata !2274, metadata !"", metadata !2274, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2309} ; [ DW_TAG_pointer_type ]
!2326 = metadata !{i32 589837, metadata !2309, metadata !"__ungot", metadata !2312, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2327} ; [ DW_TAG_member ]
!2327 = metadata !{i32 589825, metadata !2274, metadata !"", metadata !2274, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2328, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2328 = metadata !{i32 589846, metadata !2329, metadata !"wchar_t", metadata !2329, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2279} ; [ DW_TAG_typedef ]
!2329 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2275} ; [ DW_TAG_file_type ]
!2330 = metadata !{i32 589837, metadata !2309, metadata !"__state", metadata !2312, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2331} ; [ DW_TAG_member ]
!2331 = metadata !{i32 589846, metadata !2332, metadata !"__mbstate_t", metadata !2332, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2333} ; [ DW_TAG_typedef ]
!2332 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2275} ; [ DW_TAG_file_type ]
!2333 = metadata !{i32 589843, metadata !2274, metadata !"", metadata !2332, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2334, i32 0, null} ; [ DW_TAG_structure_type ]
!2334 = metadata !{metadata !2335, metadata !2336}
!2335 = metadata !{i32 589837, metadata !2333, metadata !"__mask", metadata !2332, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2328} ; [ DW_TAG_member ]
!2336 = metadata !{i32 589837, metadata !2333, metadata !"__wc", metadata !2332, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2328} ; [ DW_TAG_member ]
!2337 = metadata !{i32 589837, metadata !2301, metadata !"nread", metadata !2276, i32 632, i64 32, i64 32, i64 128, i32 0, metadata !2279} ; [ DW_TAG_member ]
!2338 = metadata !{i32 589837, metadata !2301, metadata !"width", metadata !2276, i32 633, i64 32, i64 32, i64 160, i32 0, metadata !2279} ; [ DW_TAG_member ]
!2339 = metadata !{i32 589837, metadata !2301, metadata !"app_ungot", metadata !2276, i32 636, i64 32, i64 32, i64 192, i32 0, metadata !2328} ; [ DW_TAG_member ]
!2340 = metadata !{i32 589837, metadata !2301, metadata !"ungot_wchar_width", metadata !2276, i32 637, i64 8, i64 8, i64 224, i32 0, metadata !2293} ; [ DW_TAG_member ]
!2341 = metadata !{i32 589837, metadata !2301, metadata !"ungot_flag", metadata !2276, i32 642, i64 8, i64 8, i64 232, i32 0, metadata !2342} ; [ DW_TAG_member ]
!2342 = metadata !{i32 589860, metadata !2274, metadata !"char", metadata !2274, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2343 = metadata !{i32 589837, metadata !2301, metadata !"ungot_wflag", metadata !2276, i32 645, i64 8, i64 8, i64 240, i32 0, metadata !2342} ; [ DW_TAG_member ]
!2344 = metadata !{i32 589837, metadata !2301, metadata !"mb_fail", metadata !2276, i32 646, i64 8, i64 8, i64 248, i32 0, metadata !2342} ; [ DW_TAG_member ]
!2345 = metadata !{i32 589837, metadata !2301, metadata !"mbstate", metadata !2276, i32 647, i64 64, i64 32, i64 256, i32 0, metadata !2346} ; [ DW_TAG_member ]
!2346 = metadata !{i32 589846, metadata !2332, metadata !"mbstate_t", metadata !2332, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2333} ; [ DW_TAG_typedef ]
!2347 = metadata !{i32 589837, metadata !2301, metadata !"wc", metadata !2276, i32 648, i64 32, i64 32, i64 320, i32 0, metadata !2348} ; [ DW_TAG_member ]
!2348 = metadata !{i32 589846, metadata !2329, metadata !"wint_t", metadata !2329, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !2349} ; [ DW_TAG_typedef ]
!2349 = metadata !{i32 589860, metadata !2274, metadata !"unsigned int", metadata !2274, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2350 = metadata !{i32 589837, metadata !2301, metadata !"ungot_wchar", metadata !2276, i32 649, i64 32, i64 32, i64 352, i32 0, metadata !2348} ; [ DW_TAG_member ]
!2351 = metadata !{i32 589837, metadata !2301, metadata !"sc_getc", metadata !2276, i32 650, i64 64, i64 64, i64 384, i32 0, metadata !2352} ; [ DW_TAG_member ]
!2352 = metadata !{i32 589839, metadata !2274, metadata !"", metadata !2274, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2353} ; [ DW_TAG_pointer_type ]
!2353 = metadata !{i32 589845, metadata !2274, metadata !"", metadata !2274, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2354, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2354 = metadata !{metadata !2279, metadata !2300}
!2355 = metadata !{i32 589837, metadata !2301, metadata !"decpt", metadata !2276, i32 663, i64 64, i64 64, i64 448, i32 0, metadata !2291} ; [ DW_TAG_member ]
!2356 = metadata !{i32 589837, metadata !2301, metadata !"decpt_len", metadata !2276, i32 664, i64 32, i64 32, i64 512, i32 0, metadata !2279} ; [ DW_TAG_member ]
!2357 = metadata !{i32 589837, metadata !2301, metadata !"decpt_wc", metadata !2276, i32 666, i64 32, i64 32, i64 544, i32 0, metadata !2328} ; [ DW_TAG_member ]
!2358 = metadata !{i32 589837, metadata !2301, metadata !"fake_decpt", metadata !2276, i32 668, i64 64, i64 64, i64 576, i32 0, metadata !2291} ; [ DW_TAG_member ]
!2359 = metadata !{i32 589870, i32 0, metadata !2360, metadata !"__new_exitfn", metadata !"__new_exitfn", metadata !"__new_exitfn", metadata !2362, i32 239, metadata !2363, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.exit_function* 
!2360 = metadata !{i32 589865, metadata !"__exit_handler.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2361} ; [ DW_TAG_file_type ]
!2361 = metadata !{i32 589841, i32 0, i32 1, metadata !"__exit_handler.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!2362 = metadata !{i32 589865, metadata !"_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2361} ; [ DW_TAG_file_type ]
!2363 = metadata !{i32 589845, metadata !2360, metadata !"", metadata !2360, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2364, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2364 = metadata !{metadata !2365}
!2365 = metadata !{i32 589839, metadata !2360, metadata !"", metadata !2360, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2366} ; [ DW_TAG_pointer_type ]
!2366 = metadata !{i32 589843, metadata !2360, metadata !"exit_function", metadata !2362, i32 70, i64 256, i64 64, i64 0, i32 0, null, metadata !2367, i32 0, null} ; [ DW_TAG_structure_type ]
!2367 = metadata !{metadata !2368, metadata !2370}
!2368 = metadata !{i32 589837, metadata !2366, metadata !"type", metadata !2362, i32 75, i64 64, i64 64, i64 0, i32 0, metadata !2369} ; [ DW_TAG_member ]
!2369 = metadata !{i32 589860, metadata !2360, metadata !"long int", metadata !2360, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2370 = metadata !{i32 589837, metadata !2366, metadata !"funcs", metadata !2362, i32 86, i64 192, i64 64, i64 64, i32 0, metadata !2371} ; [ DW_TAG_member ]
!2371 = metadata !{i32 589847, metadata !2360, metadata !"", metadata !2362, i32 76, i64 192, i64 64, i64 0, i32 0, null, metadata !2372, i32 0, null} ; [ DW_TAG_union_type ]
!2372 = metadata !{metadata !2373, metadata !2384}
!2373 = metadata !{i32 589837, metadata !2371, metadata !"on_exit", metadata !2362, i32 80, i64 128, i64 64, i64 0, i32 0, metadata !2374} ; [ DW_TAG_member ]
!2374 = metadata !{i32 589843, metadata !2360, metadata !"", metadata !2362, i32 77, i64 128, i64 64, i64 0, i32 0, null, metadata !2375, i32 0, null} ; [ DW_TAG_structure_type ]
!2375 = metadata !{metadata !2376, metadata !2383}
!2376 = metadata !{i32 589837, metadata !2374, metadata !"func", metadata !2362, i32 78, i64 64, i64 64, i64 0, i32 0, metadata !2377} ; [ DW_TAG_member ]
!2377 = metadata !{i32 589846, metadata !2362, metadata !"oefuncp", metadata !2362, i32 54, i64 0, i64 0, i64 0, i32 0, metadata !2378} ; [ DW_TAG_typedef ]
!2378 = metadata !{i32 589839, metadata !2360, metadata !"", metadata !2360, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2379} ; [ DW_TAG_pointer_type ]
!2379 = metadata !{i32 589845, metadata !2360, metadata !"", metadata !2360, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2380, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2380 = metadata !{null, metadata !2381, metadata !2382}
!2381 = metadata !{i32 589860, metadata !2360, metadata !"int", metadata !2360, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2382 = metadata !{i32 589839, metadata !2360, metadata !"", metadata !2360, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2383 = metadata !{i32 589837, metadata !2374, metadata !"arg", metadata !2362, i32 79, i64 64, i64 64, i64 64, i32 0, metadata !2382} ; [ DW_TAG_member ]
!2384 = metadata !{i32 589837, metadata !2371, metadata !"cxa_atexit", metadata !2362, i32 85, i64 192, i64 64, i64 0, i32 0, metadata !2385} ; [ DW_TAG_member ]
!2385 = metadata !{i32 589843, metadata !2360, metadata !"", metadata !2362, i32 81, i64 192, i64 64, i64 0, i32 0, null, metadata !2386, i32 0, null} ; [ DW_TAG_structure_type ]
!2386 = metadata !{metadata !2387, metadata !2392, metadata !2393}
!2387 = metadata !{i32 589837, metadata !2385, metadata !"func", metadata !2362, i32 82, i64 64, i64 64, i64 0, i32 0, metadata !2388} ; [ DW_TAG_member ]
!2388 = metadata !{i32 589846, metadata !2362, metadata !"cxaefuncp", metadata !2362, i32 55, i64 0, i64 0, i64 0, i32 0, metadata !2389} ; [ DW_TAG_typedef ]
!2389 = metadata !{i32 589839, metadata !2360, metadata !"", metadata !2360, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2390} ; [ DW_TAG_pointer_type ]
!2390 = metadata !{i32 589845, metadata !2360, metadata !"", metadata !2360, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2391, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2391 = metadata !{null, metadata !2382}
!2392 = metadata !{i32 589837, metadata !2385, metadata !"arg", metadata !2362, i32 83, i64 64, i64 64, i64 64, i32 0, metadata !2382} ; [ DW_TAG_member ]
!2393 = metadata !{i32 589837, metadata !2385, metadata !"dso_handle", metadata !2362, i32 84, i64 64, i64 64, i64 128, i32 0, metadata !2382} ; [ DW_TAG_member ]
!2394 = metadata !{i32 589870, i32 0, metadata !2360, metadata !"__exit_handler", metadata !"__exit_handler", metadata !"__exit_handler", metadata !2362, i32 279, metadata !2395, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32)* @__ex
!2395 = metadata !{i32 589845, metadata !2360, metadata !"", metadata !2360, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2396, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2396 = metadata !{null, metadata !2381}
!2397 = metadata !{i32 589870, i32 0, metadata !2398, metadata !"__init_scan_cookie", metadata !"__init_scan_cookie", metadata !"__init_scan_cookie", metadata !2400, i32 716, metadata !2401, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void 
!2398 = metadata !{i32 589865, metadata !"__scan_cookie.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2399} ; [ DW_TAG_file_type ]
!2399 = metadata !{i32 589841, i32 0, i32 1, metadata !"__scan_cookie.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2400 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2399} ; [ DW_TAG_file_type ]
!2401 = metadata !{i32 589845, metadata !2398, metadata !"", metadata !2398, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2402, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2402 = metadata !{null, metadata !2403, metadata !2410}
!2403 = metadata !{i32 589839, metadata !2398, metadata !"", metadata !2398, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2404} ; [ DW_TAG_pointer_type ]
!2404 = metadata !{i32 589843, metadata !2398, metadata !"scan_cookie", metadata !2400, i32 628, i64 640, i64 64, i64 0, i32 0, null, metadata !2405, i32 0, null} ; [ DW_TAG_structure_type ]
!2405 = metadata !{metadata !2406, metadata !2408, metadata !2409, metadata !2442, metadata !2443, metadata !2444, metadata !2445, metadata !2446, metadata !2448, metadata !2449, metadata !2450, metadata !2452, metadata !2455, metadata !2456, metadata !2
!2406 = metadata !{i32 589837, metadata !2404, metadata !"cc", metadata !2400, i32 629, i64 32, i64 32, i64 0, i32 0, metadata !2407} ; [ DW_TAG_member ]
!2407 = metadata !{i32 589860, metadata !2398, metadata !"int", metadata !2398, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2408 = metadata !{i32 589837, metadata !2404, metadata !"ungot_char", metadata !2400, i32 630, i64 32, i64 32, i64 32, i32 0, metadata !2407} ; [ DW_TAG_member ]
!2409 = metadata !{i32 589837, metadata !2404, metadata !"fp", metadata !2400, i32 631, i64 64, i64 64, i64 64, i32 0, metadata !2410} ; [ DW_TAG_member ]
!2410 = metadata !{i32 589839, metadata !2398, metadata !"", metadata !2398, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2411} ; [ DW_TAG_pointer_type ]
!2411 = metadata !{i32 589846, metadata !2412, metadata !"FILE", metadata !2412, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2413} ; [ DW_TAG_typedef ]
!2412 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2399} ; [ DW_TAG_file_type ]
!2413 = metadata !{i32 589843, metadata !2398, metadata !"__STDIO_FILE_STRUCT", metadata !2412, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2414, i32 0, null} ; [ DW_TAG_structure_type ]
!2414 = metadata !{metadata !2415, metadata !2418, metadata !2421, metadata !2422, metadata !2424, metadata !2425, metadata !2426, metadata !2427, metadata !2428, metadata !2429, metadata !2431, metadata !2435}
!2415 = metadata !{i32 589837, metadata !2413, metadata !"__modeflags", metadata !2416, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2417} ; [ DW_TAG_member ]
!2416 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2399} ; [ DW_TAG_file_type ]
!2417 = metadata !{i32 589860, metadata !2398, metadata !"short unsigned int", metadata !2398, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2418 = metadata !{i32 589837, metadata !2413, metadata !"__ungot_width", metadata !2416, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2419} ; [ DW_TAG_member ]
!2419 = metadata !{i32 589825, metadata !2398, metadata !"", metadata !2398, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2420, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2420 = metadata !{i32 589860, metadata !2398, metadata !"unsigned char", metadata !2398, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2421 = metadata !{i32 589837, metadata !2413, metadata !"__filedes", metadata !2416, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2407} ; [ DW_TAG_member ]
!2422 = metadata !{i32 589837, metadata !2413, metadata !"__bufstart", metadata !2416, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2423} ; [ DW_TAG_member ]
!2423 = metadata !{i32 589839, metadata !2398, metadata !"", metadata !2398, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2420} ; [ DW_TAG_pointer_type ]
!2424 = metadata !{i32 589837, metadata !2413, metadata !"__bufend", metadata !2416, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2423} ; [ DW_TAG_member ]
!2425 = metadata !{i32 589837, metadata !2413, metadata !"__bufpos", metadata !2416, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2423} ; [ DW_TAG_member ]
!2426 = metadata !{i32 589837, metadata !2413, metadata !"__bufread", metadata !2416, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2423} ; [ DW_TAG_member ]
!2427 = metadata !{i32 589837, metadata !2413, metadata !"__bufgetc_u", metadata !2416, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2423} ; [ DW_TAG_member ]
!2428 = metadata !{i32 589837, metadata !2413, metadata !"__bufputc_u", metadata !2416, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2423} ; [ DW_TAG_member ]
!2429 = metadata !{i32 589837, metadata !2413, metadata !"__nextopen", metadata !2416, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2430} ; [ DW_TAG_member ]
!2430 = metadata !{i32 589839, metadata !2398, metadata !"", metadata !2398, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2413} ; [ DW_TAG_pointer_type ]
!2431 = metadata !{i32 589837, metadata !2413, metadata !"__ungot", metadata !2416, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2432} ; [ DW_TAG_member ]
!2432 = metadata !{i32 589825, metadata !2398, metadata !"", metadata !2398, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2433, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2433 = metadata !{i32 589846, metadata !2434, metadata !"wchar_t", metadata !2434, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2407} ; [ DW_TAG_typedef ]
!2434 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2399} ; [ DW_TAG_file_type ]
!2435 = metadata !{i32 589837, metadata !2413, metadata !"__state", metadata !2416, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2436} ; [ DW_TAG_member ]
!2436 = metadata !{i32 589846, metadata !2437, metadata !"__mbstate_t", metadata !2437, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2438} ; [ DW_TAG_typedef ]
!2437 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2399} ; [ DW_TAG_file_type ]
!2438 = metadata !{i32 589843, metadata !2398, metadata !"", metadata !2437, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2439, i32 0, null} ; [ DW_TAG_structure_type ]
!2439 = metadata !{metadata !2440, metadata !2441}
!2440 = metadata !{i32 589837, metadata !2438, metadata !"__mask", metadata !2437, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2433} ; [ DW_TAG_member ]
!2441 = metadata !{i32 589837, metadata !2438, metadata !"__wc", metadata !2437, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2433} ; [ DW_TAG_member ]
!2442 = metadata !{i32 589837, metadata !2404, metadata !"nread", metadata !2400, i32 632, i64 32, i64 32, i64 128, i32 0, metadata !2407} ; [ DW_TAG_member ]
!2443 = metadata !{i32 589837, metadata !2404, metadata !"width", metadata !2400, i32 633, i64 32, i64 32, i64 160, i32 0, metadata !2407} ; [ DW_TAG_member ]
!2444 = metadata !{i32 589837, metadata !2404, metadata !"app_ungot", metadata !2400, i32 636, i64 32, i64 32, i64 192, i32 0, metadata !2433} ; [ DW_TAG_member ]
!2445 = metadata !{i32 589837, metadata !2404, metadata !"ungot_wchar_width", metadata !2400, i32 637, i64 8, i64 8, i64 224, i32 0, metadata !2420} ; [ DW_TAG_member ]
!2446 = metadata !{i32 589837, metadata !2404, metadata !"ungot_flag", metadata !2400, i32 642, i64 8, i64 8, i64 232, i32 0, metadata !2447} ; [ DW_TAG_member ]
!2447 = metadata !{i32 589860, metadata !2398, metadata !"char", metadata !2398, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2448 = metadata !{i32 589837, metadata !2404, metadata !"ungot_wflag", metadata !2400, i32 645, i64 8, i64 8, i64 240, i32 0, metadata !2447} ; [ DW_TAG_member ]
!2449 = metadata !{i32 589837, metadata !2404, metadata !"mb_fail", metadata !2400, i32 646, i64 8, i64 8, i64 248, i32 0, metadata !2447} ; [ DW_TAG_member ]
!2450 = metadata !{i32 589837, metadata !2404, metadata !"mbstate", metadata !2400, i32 647, i64 64, i64 32, i64 256, i32 0, metadata !2451} ; [ DW_TAG_member ]
!2451 = metadata !{i32 589846, metadata !2437, metadata !"mbstate_t", metadata !2437, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2438} ; [ DW_TAG_typedef ]
!2452 = metadata !{i32 589837, metadata !2404, metadata !"wc", metadata !2400, i32 648, i64 32, i64 32, i64 320, i32 0, metadata !2453} ; [ DW_TAG_member ]
!2453 = metadata !{i32 589846, metadata !2434, metadata !"wint_t", metadata !2434, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !2454} ; [ DW_TAG_typedef ]
!2454 = metadata !{i32 589860, metadata !2398, metadata !"unsigned int", metadata !2398, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2455 = metadata !{i32 589837, metadata !2404, metadata !"ungot_wchar", metadata !2400, i32 649, i64 32, i64 32, i64 352, i32 0, metadata !2453} ; [ DW_TAG_member ]
!2456 = metadata !{i32 589837, metadata !2404, metadata !"sc_getc", metadata !2400, i32 650, i64 64, i64 64, i64 384, i32 0, metadata !2457} ; [ DW_TAG_member ]
!2457 = metadata !{i32 589839, metadata !2398, metadata !"", metadata !2398, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2458} ; [ DW_TAG_pointer_type ]
!2458 = metadata !{i32 589845, metadata !2398, metadata !"", metadata !2398, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2459, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2459 = metadata !{metadata !2407, metadata !2403}
!2460 = metadata !{i32 589837, metadata !2404, metadata !"decpt", metadata !2400, i32 663, i64 64, i64 64, i64 448, i32 0, metadata !2461} ; [ DW_TAG_member ]
!2461 = metadata !{i32 589839, metadata !2398, metadata !"", metadata !2398, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2462} ; [ DW_TAG_pointer_type ]
!2462 = metadata !{i32 589862, metadata !2398, metadata !"", metadata !2398, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2420} ; [ DW_TAG_const_type ]
!2463 = metadata !{i32 589837, metadata !2404, metadata !"decpt_len", metadata !2400, i32 664, i64 32, i64 32, i64 512, i32 0, metadata !2407} ; [ DW_TAG_member ]
!2464 = metadata !{i32 589837, metadata !2404, metadata !"decpt_wc", metadata !2400, i32 666, i64 32, i64 32, i64 544, i32 0, metadata !2433} ; [ DW_TAG_member ]
!2465 = metadata !{i32 589837, metadata !2404, metadata !"fake_decpt", metadata !2400, i32 668, i64 64, i64 64, i64 576, i32 0, metadata !2461} ; [ DW_TAG_member ]
!2466 = metadata !{i32 589870, i32 0, metadata !2398, metadata !"__scan_getc", metadata !"__scan_getc", metadata !"__scan_getc", metadata !2400, i32 756, metadata !2458, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.scan_cookie*)
!2467 = metadata !{i32 589870, i32 0, metadata !2398, metadata !"__scan_ungetc", metadata !"__scan_ungetc", metadata !"__scan_ungetc", metadata !2400, i32 804, metadata !2468, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.scan_c
!2468 = metadata !{i32 589845, metadata !2398, metadata !"", metadata !2398, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2469, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2469 = metadata !{null, metadata !2403}
!2470 = metadata !{i32 589870, i32 0, metadata !2471, metadata !"__psfs_parse_spec", metadata !"__psfs_parse_spec", metadata !"__psfs_parse_spec", metadata !2473, i32 830, metadata !2474, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%st
!2471 = metadata !{i32 589865, metadata !"__psfs_parse_spec.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2472} ; [ DW_TAG_file_type ]
!2472 = metadata !{i32 589841, i32 0, i32 1, metadata !"__psfs_parse_spec.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0
!2473 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2472} ; [ DW_TAG_file_type ]
!2474 = metadata !{i32 589845, metadata !2471, metadata !"", metadata !2471, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2475, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2475 = metadata !{metadata !2476, metadata !2477}
!2476 = metadata !{i32 589860, metadata !2471, metadata !"int", metadata !2471, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2477 = metadata !{i32 589839, metadata !2471, metadata !"", metadata !2471, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2478} ; [ DW_TAG_pointer_type ]
!2478 = metadata !{i32 589846, metadata !2473, metadata !"psfs_t", metadata !2473, i32 686, i64 0, i64 0, i64 0, i32 0, metadata !2479} ; [ DW_TAG_typedef ]
!2479 = metadata !{i32 589843, metadata !2471, metadata !"", metadata !2473, i32 673, i64 960, i64 64, i64 0, i32 0, null, metadata !2480, i32 0, null} ; [ DW_TAG_structure_type ]
!2480 = metadata !{metadata !2481, metadata !2484, metadata !2485, metadata !2486, metadata !2487, metadata !2491, metadata !2492, metadata !2493, metadata !2494, metadata !2495, metadata !2496}
!2481 = metadata !{i32 589837, metadata !2479, metadata !"pos_args", metadata !2473, i32 678, i64 576, i64 64, i64 0, i32 0, metadata !2482} ; [ DW_TAG_member ]
!2482 = metadata !{i32 589825, metadata !2471, metadata !"", metadata !2471, i32 0, i64 576, i64 64, i64 0, i32 0, metadata !2483, metadata !2107, i32 0, null} ; [ DW_TAG_array_type ]
!2483 = metadata !{i32 589839, metadata !2471, metadata !"", metadata !2471, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2484 = metadata !{i32 589837, metadata !2479, metadata !"num_pos_args", metadata !2473, i32 679, i64 32, i64 32, i64 576, i32 0, metadata !2476} ; [ DW_TAG_member ]
!2485 = metadata !{i32 589837, metadata !2479, metadata !"cur_pos_arg", metadata !2473, i32 680, i64 32, i64 32, i64 608, i32 0, metadata !2476} ; [ DW_TAG_member ]
!2486 = metadata !{i32 589837, metadata !2479, metadata !"cur_ptr", metadata !2473, i32 682, i64 64, i64 64, i64 640, i32 0, metadata !2483} ; [ DW_TAG_member ]
!2487 = metadata !{i32 589837, metadata !2479, metadata !"fmt", metadata !2473, i32 683, i64 64, i64 64, i64 704, i32 0, metadata !2488} ; [ DW_TAG_member ]
!2488 = metadata !{i32 589839, metadata !2471, metadata !"", metadata !2471, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2489} ; [ DW_TAG_pointer_type ]
!2489 = metadata !{i32 589862, metadata !2471, metadata !"", metadata !2471, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2490} ; [ DW_TAG_const_type ]
!2490 = metadata !{i32 589860, metadata !2471, metadata !"unsigned char", metadata !2471, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2491 = metadata !{i32 589837, metadata !2479, metadata !"cnt", metadata !2473, i32 684, i64 32, i64 32, i64 768, i32 0, metadata !2476} ; [ DW_TAG_member ]
!2492 = metadata !{i32 589837, metadata !2479, metadata !"dataargtype", metadata !2473, i32 684, i64 32, i64 32, i64 800, i32 0, metadata !2476} ; [ DW_TAG_member ]
!2493 = metadata !{i32 589837, metadata !2479, metadata !"conv_num", metadata !2473, i32 684, i64 32, i64 32, i64 832, i32 0, metadata !2476} ; [ DW_TAG_member ]
!2494 = metadata !{i32 589837, metadata !2479, metadata !"max_width", metadata !2473, i32 684, i64 32, i64 32, i64 864, i32 0, metadata !2476} ; [ DW_TAG_member ]
!2495 = metadata !{i32 589837, metadata !2479, metadata !"store", metadata !2473, i32 685, i64 8, i64 8, i64 896, i32 0, metadata !2490} ; [ DW_TAG_member ]
!2496 = metadata !{i32 589837, metadata !2479, metadata !"flags", metadata !2473, i32 685, i64 8, i64 8, i64 904, i32 0, metadata !2490} ; [ DW_TAG_member ]
!2497 = metadata !{i32 589870, i32 0, metadata !2498, metadata !"__stdio_adjust_position", metadata !"__stdio_adjust_position", metadata !"__stdio_adjust_position", metadata !2498, i32 21, metadata !2500, i1 false, i1 true, i32 0, i32 0, null, i32 256, i
!2498 = metadata !{i32 589865, metadata !"_adjust_pos.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2499} ; [ DW_TAG_file_type ]
!2499 = metadata !{i32 589841, i32 0, i32 1, metadata !"_adjust_pos.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!2500 = metadata !{i32 589845, metadata !2498, metadata !"", metadata !2498, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2501, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2501 = metadata !{metadata !2502, metadata !2503, metadata !2535}
!2502 = metadata !{i32 589860, metadata !2498, metadata !"int", metadata !2498, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2503 = metadata !{i32 589839, metadata !2498, metadata !"", metadata !2498, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2504} ; [ DW_TAG_pointer_type ]
!2504 = metadata !{i32 589846, metadata !2505, metadata !"FILE", metadata !2505, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2506} ; [ DW_TAG_typedef ]
!2505 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2499} ; [ DW_TAG_file_type ]
!2506 = metadata !{i32 589843, metadata !2498, metadata !"__STDIO_FILE_STRUCT", metadata !2505, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2507, i32 0, null} ; [ DW_TAG_structure_type ]
!2507 = metadata !{metadata !2508, metadata !2511, metadata !2514, metadata !2515, metadata !2517, metadata !2518, metadata !2519, metadata !2520, metadata !2521, metadata !2522, metadata !2524, metadata !2528}
!2508 = metadata !{i32 589837, metadata !2506, metadata !"__modeflags", metadata !2509, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2510} ; [ DW_TAG_member ]
!2509 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2499} ; [ DW_TAG_file_type ]
!2510 = metadata !{i32 589860, metadata !2498, metadata !"short unsigned int", metadata !2498, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2511 = metadata !{i32 589837, metadata !2506, metadata !"__ungot_width", metadata !2509, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2512} ; [ DW_TAG_member ]
!2512 = metadata !{i32 589825, metadata !2498, metadata !"", metadata !2498, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2513, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2513 = metadata !{i32 589860, metadata !2498, metadata !"unsigned char", metadata !2498, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2514 = metadata !{i32 589837, metadata !2506, metadata !"__filedes", metadata !2509, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2502} ; [ DW_TAG_member ]
!2515 = metadata !{i32 589837, metadata !2506, metadata !"__bufstart", metadata !2509, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2516} ; [ DW_TAG_member ]
!2516 = metadata !{i32 589839, metadata !2498, metadata !"", metadata !2498, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2513} ; [ DW_TAG_pointer_type ]
!2517 = metadata !{i32 589837, metadata !2506, metadata !"__bufend", metadata !2509, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2516} ; [ DW_TAG_member ]
!2518 = metadata !{i32 589837, metadata !2506, metadata !"__bufpos", metadata !2509, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2516} ; [ DW_TAG_member ]
!2519 = metadata !{i32 589837, metadata !2506, metadata !"__bufread", metadata !2509, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2516} ; [ DW_TAG_member ]
!2520 = metadata !{i32 589837, metadata !2506, metadata !"__bufgetc_u", metadata !2509, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2516} ; [ DW_TAG_member ]
!2521 = metadata !{i32 589837, metadata !2506, metadata !"__bufputc_u", metadata !2509, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2516} ; [ DW_TAG_member ]
!2522 = metadata !{i32 589837, metadata !2506, metadata !"__nextopen", metadata !2509, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2523} ; [ DW_TAG_member ]
!2523 = metadata !{i32 589839, metadata !2498, metadata !"", metadata !2498, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2506} ; [ DW_TAG_pointer_type ]
!2524 = metadata !{i32 589837, metadata !2506, metadata !"__ungot", metadata !2509, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2525} ; [ DW_TAG_member ]
!2525 = metadata !{i32 589825, metadata !2498, metadata !"", metadata !2498, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2526, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2526 = metadata !{i32 589846, metadata !2527, metadata !"wchar_t", metadata !2527, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2502} ; [ DW_TAG_typedef ]
!2527 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2499} ; [ DW_TAG_file_type ]
!2528 = metadata !{i32 589837, metadata !2506, metadata !"__state", metadata !2509, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2529} ; [ DW_TAG_member ]
!2529 = metadata !{i32 589846, metadata !2530, metadata !"__mbstate_t", metadata !2530, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2531} ; [ DW_TAG_typedef ]
!2530 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2499} ; [ DW_TAG_file_type ]
!2531 = metadata !{i32 589843, metadata !2498, metadata !"", metadata !2530, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2532, i32 0, null} ; [ DW_TAG_structure_type ]
!2532 = metadata !{metadata !2533, metadata !2534}
!2533 = metadata !{i32 589837, metadata !2531, metadata !"__mask", metadata !2530, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2526} ; [ DW_TAG_member ]
!2534 = metadata !{i32 589837, metadata !2531, metadata !"__wc", metadata !2530, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2526} ; [ DW_TAG_member ]
!2535 = metadata !{i32 589839, metadata !2498, metadata !"", metadata !2498, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2536} ; [ DW_TAG_pointer_type ]
!2536 = metadata !{i32 589846, metadata !2509, metadata !"__offmax_t", metadata !2509, i32 194, i64 0, i64 0, i64 0, i32 0, metadata !2537} ; [ DW_TAG_typedef ]
!2537 = metadata !{i32 589860, metadata !2498, metadata !"long int", metadata !2498, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2538 = metadata !{i32 589870, i32 0, metadata !2539, metadata !"__stdio_seek", metadata !"__stdio_seek", metadata !"__stdio_seek", metadata !2539, i32 62, metadata !2541, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i64*, i32)* @_
!2539 = metadata !{i32 589865, metadata !"_cs_funcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2540} ; [ DW_TAG_file_type ]
!2540 = metadata !{i32 589841, i32 0, i32 1, metadata !"_cs_funcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!2541 = metadata !{i32 589845, metadata !2539, metadata !"", metadata !2539, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2542, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2542 = metadata !{metadata !2543, metadata !2544, metadata !2576, metadata !2543}
!2543 = metadata !{i32 589860, metadata !2539, metadata !"int", metadata !2539, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2544 = metadata !{i32 589839, metadata !2539, metadata !"", metadata !2539, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2545} ; [ DW_TAG_pointer_type ]
!2545 = metadata !{i32 589846, metadata !2546, metadata !"FILE", metadata !2546, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2547} ; [ DW_TAG_typedef ]
!2546 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2540} ; [ DW_TAG_file_type ]
!2547 = metadata !{i32 589843, metadata !2539, metadata !"__STDIO_FILE_STRUCT", metadata !2546, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2548, i32 0, null} ; [ DW_TAG_structure_type ]
!2548 = metadata !{metadata !2549, metadata !2552, metadata !2555, metadata !2556, metadata !2558, metadata !2559, metadata !2560, metadata !2561, metadata !2562, metadata !2563, metadata !2565, metadata !2569}
!2549 = metadata !{i32 589837, metadata !2547, metadata !"__modeflags", metadata !2550, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2551} ; [ DW_TAG_member ]
!2550 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2540} ; [ DW_TAG_file_type ]
!2551 = metadata !{i32 589860, metadata !2539, metadata !"short unsigned int", metadata !2539, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2552 = metadata !{i32 589837, metadata !2547, metadata !"__ungot_width", metadata !2550, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2553} ; [ DW_TAG_member ]
!2553 = metadata !{i32 589825, metadata !2539, metadata !"", metadata !2539, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2554, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2554 = metadata !{i32 589860, metadata !2539, metadata !"unsigned char", metadata !2539, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2555 = metadata !{i32 589837, metadata !2547, metadata !"__filedes", metadata !2550, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2543} ; [ DW_TAG_member ]
!2556 = metadata !{i32 589837, metadata !2547, metadata !"__bufstart", metadata !2550, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2557} ; [ DW_TAG_member ]
!2557 = metadata !{i32 589839, metadata !2539, metadata !"", metadata !2539, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2554} ; [ DW_TAG_pointer_type ]
!2558 = metadata !{i32 589837, metadata !2547, metadata !"__bufend", metadata !2550, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2557} ; [ DW_TAG_member ]
!2559 = metadata !{i32 589837, metadata !2547, metadata !"__bufpos", metadata !2550, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2557} ; [ DW_TAG_member ]
!2560 = metadata !{i32 589837, metadata !2547, metadata !"__bufread", metadata !2550, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2557} ; [ DW_TAG_member ]
!2561 = metadata !{i32 589837, metadata !2547, metadata !"__bufgetc_u", metadata !2550, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2557} ; [ DW_TAG_member ]
!2562 = metadata !{i32 589837, metadata !2547, metadata !"__bufputc_u", metadata !2550, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2557} ; [ DW_TAG_member ]
!2563 = metadata !{i32 589837, metadata !2547, metadata !"__nextopen", metadata !2550, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2564} ; [ DW_TAG_member ]
!2564 = metadata !{i32 589839, metadata !2539, metadata !"", metadata !2539, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2547} ; [ DW_TAG_pointer_type ]
!2565 = metadata !{i32 589837, metadata !2547, metadata !"__ungot", metadata !2550, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2566} ; [ DW_TAG_member ]
!2566 = metadata !{i32 589825, metadata !2539, metadata !"", metadata !2539, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2567, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2567 = metadata !{i32 589846, metadata !2568, metadata !"wchar_t", metadata !2568, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2543} ; [ DW_TAG_typedef ]
!2568 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2540} ; [ DW_TAG_file_type ]
!2569 = metadata !{i32 589837, metadata !2547, metadata !"__state", metadata !2550, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2570} ; [ DW_TAG_member ]
!2570 = metadata !{i32 589846, metadata !2571, metadata !"__mbstate_t", metadata !2571, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2572} ; [ DW_TAG_typedef ]
!2571 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2540} ; [ DW_TAG_file_type ]
!2572 = metadata !{i32 589843, metadata !2539, metadata !"", metadata !2571, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2573, i32 0, null} ; [ DW_TAG_structure_type ]
!2573 = metadata !{metadata !2574, metadata !2575}
!2574 = metadata !{i32 589837, metadata !2572, metadata !"__mask", metadata !2571, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2567} ; [ DW_TAG_member ]
!2575 = metadata !{i32 589837, metadata !2572, metadata !"__wc", metadata !2571, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2567} ; [ DW_TAG_member ]
!2576 = metadata !{i32 589839, metadata !2539, metadata !"", metadata !2539, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2577} ; [ DW_TAG_pointer_type ]
!2577 = metadata !{i32 589846, metadata !2550, metadata !"__offmax_t", metadata !2550, i32 194, i64 0, i64 0, i64 0, i32 0, metadata !2578} ; [ DW_TAG_typedef ]
!2578 = metadata !{i32 589860, metadata !2539, metadata !"long int", metadata !2539, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2579 = metadata !{i32 589870, i32 0, metadata !2580, metadata !"__xpg_strerror_r", metadata !"__xpg_strerror_r", metadata !"__xpg_strerror_r", metadata !2580, i32 166, metadata !2582, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i
!2580 = metadata !{i32 589865, metadata !"__xpg_strerror_r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !2581} ; [ DW_TAG_file_type ]
!2581 = metadata !{i32 589841, i32 0, i32 1, metadata !"__xpg_strerror_r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0
!2582 = metadata !{i32 589845, metadata !2580, metadata !"", metadata !2580, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2583, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2583 = metadata !{metadata !2584, metadata !2584, metadata !2585, metadata !2587}
!2584 = metadata !{i32 589860, metadata !2580, metadata !"int", metadata !2580, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2585 = metadata !{i32 589839, metadata !2580, metadata !"", metadata !2580, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2586} ; [ DW_TAG_pointer_type ]
!2586 = metadata !{i32 589860, metadata !2580, metadata !"char", metadata !2580, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2587 = metadata !{i32 589846, metadata !2588, metadata !"size_t", metadata !2588, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2589} ; [ DW_TAG_typedef ]
!2588 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2581} ; [ DW_TAG_file_type ]
!2589 = metadata !{i32 589860, metadata !2580, metadata !"long unsigned int", metadata !2580, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2590 = metadata !{i32 589870, i32 0, metadata !2591, metadata !"_fpmaxtostr", metadata !"_fpmaxtostr", metadata !"_fpmaxtostr", metadata !2591, i32 207, metadata !2593, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, x86_fp80, %struc
!2591 = metadata !{i32 589865, metadata !"_fpmaxtostr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2592} ; [ DW_TAG_file_type ]
!2592 = metadata !{i32 589841, i32 0, i32 1, metadata !"_fpmaxtostr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!2593 = metadata !{i32 589845, metadata !2591, metadata !"", metadata !2591, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2594, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2594 = metadata !{metadata !2595, metadata !2598, metadata !2631, metadata !2634, metadata !2656}
!2595 = metadata !{i32 589846, metadata !2596, metadata !"ssize_t", metadata !2596, i32 110, i64 0, i64 0, i64 0, i32 0, metadata !2597} ; [ DW_TAG_typedef ]
!2596 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/sys", metadata !2592} ; [ DW_TAG_file_type ]
!2597 = metadata !{i32 589860, metadata !2591, metadata !"long int", metadata !2591, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2598 = metadata !{i32 589839, metadata !2591, metadata !"", metadata !2591, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2599} ; [ DW_TAG_pointer_type ]
!2599 = metadata !{i32 589846, metadata !2600, metadata !"FILE", metadata !2600, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2601} ; [ DW_TAG_typedef ]
!2600 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2592} ; [ DW_TAG_file_type ]
!2601 = metadata !{i32 589843, metadata !2591, metadata !"__STDIO_FILE_STRUCT", metadata !2600, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2602, i32 0, null} ; [ DW_TAG_structure_type ]
!2602 = metadata !{metadata !2603, metadata !2606, metadata !2609, metadata !2611, metadata !2613, metadata !2614, metadata !2615, metadata !2616, metadata !2617, metadata !2618, metadata !2620, metadata !2624}
!2603 = metadata !{i32 589837, metadata !2601, metadata !"__modeflags", metadata !2604, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2605} ; [ DW_TAG_member ]
!2604 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2592} ; [ DW_TAG_file_type ]
!2605 = metadata !{i32 589860, metadata !2591, metadata !"short unsigned int", metadata !2591, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2606 = metadata !{i32 589837, metadata !2601, metadata !"__ungot_width", metadata !2604, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2607} ; [ DW_TAG_member ]
!2607 = metadata !{i32 589825, metadata !2591, metadata !"", metadata !2591, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2608, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2608 = metadata !{i32 589860, metadata !2591, metadata !"unsigned char", metadata !2591, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2609 = metadata !{i32 589837, metadata !2601, metadata !"__filedes", metadata !2604, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2610} ; [ DW_TAG_member ]
!2610 = metadata !{i32 589860, metadata !2591, metadata !"int", metadata !2591, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2611 = metadata !{i32 589837, metadata !2601, metadata !"__bufstart", metadata !2604, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2612} ; [ DW_TAG_member ]
!2612 = metadata !{i32 589839, metadata !2591, metadata !"", metadata !2591, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2608} ; [ DW_TAG_pointer_type ]
!2613 = metadata !{i32 589837, metadata !2601, metadata !"__bufend", metadata !2604, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2612} ; [ DW_TAG_member ]
!2614 = metadata !{i32 589837, metadata !2601, metadata !"__bufpos", metadata !2604, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2612} ; [ DW_TAG_member ]
!2615 = metadata !{i32 589837, metadata !2601, metadata !"__bufread", metadata !2604, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2612} ; [ DW_TAG_member ]
!2616 = metadata !{i32 589837, metadata !2601, metadata !"__bufgetc_u", metadata !2604, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2612} ; [ DW_TAG_member ]
!2617 = metadata !{i32 589837, metadata !2601, metadata !"__bufputc_u", metadata !2604, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2612} ; [ DW_TAG_member ]
!2618 = metadata !{i32 589837, metadata !2601, metadata !"__nextopen", metadata !2604, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2619} ; [ DW_TAG_member ]
!2619 = metadata !{i32 589839, metadata !2591, metadata !"", metadata !2591, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2601} ; [ DW_TAG_pointer_type ]
!2620 = metadata !{i32 589837, metadata !2601, metadata !"__ungot", metadata !2604, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2621} ; [ DW_TAG_member ]
!2621 = metadata !{i32 589825, metadata !2591, metadata !"", metadata !2591, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2622, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2622 = metadata !{i32 589846, metadata !2623, metadata !"wchar_t", metadata !2623, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2610} ; [ DW_TAG_typedef ]
!2623 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2592} ; [ DW_TAG_file_type ]
!2624 = metadata !{i32 589837, metadata !2601, metadata !"__state", metadata !2604, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2625} ; [ DW_TAG_member ]
!2625 = metadata !{i32 589846, metadata !2626, metadata !"__mbstate_t", metadata !2626, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2627} ; [ DW_TAG_typedef ]
!2626 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2592} ; [ DW_TAG_file_type ]
!2627 = metadata !{i32 589843, metadata !2591, metadata !"", metadata !2626, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2628, i32 0, null} ; [ DW_TAG_structure_type ]
!2628 = metadata !{metadata !2629, metadata !2630}
!2629 = metadata !{i32 589837, metadata !2627, metadata !"__mask", metadata !2626, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2622} ; [ DW_TAG_member ]
!2630 = metadata !{i32 589837, metadata !2627, metadata !"__wc", metadata !2626, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2622} ; [ DW_TAG_member ]
!2631 = metadata !{i32 589846, metadata !2632, metadata !"__fpmax_t", metadata !2632, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !2633} ; [ DW_TAG_typedef ]
!2632 = metadata !{i32 589865, metadata !"uClibc_fpmax.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2592} ; [ DW_TAG_file_type ]
!2633 = metadata !{i32 589860, metadata !2591, metadata !"long double", metadata !2591, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2634 = metadata !{i32 589839, metadata !2591, metadata !"", metadata !2591, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2635} ; [ DW_TAG_pointer_type ]
!2635 = metadata !{i32 589843, metadata !2591, metadata !"printf_info", metadata !2636, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2637, i32 0, null} ; [ DW_TAG_structure_type ]
!2636 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2592} ; [ DW_TAG_file_type ]
!2637 = metadata !{metadata !2638, metadata !2639, metadata !2640, metadata !2641, metadata !2643, metadata !2644, metadata !2645, metadata !2646, metadata !2647, metadata !2648, metadata !2649, metadata !2650, metadata !2651, metadata !2652, metadata !2
!2638 = metadata !{i32 589837, metadata !2635, metadata !"prec", metadata !2636, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2610} ; [ DW_TAG_member ]
!2639 = metadata !{i32 589837, metadata !2635, metadata !"width", metadata !2636, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2610} ; [ DW_TAG_member ]
!2640 = metadata !{i32 589837, metadata !2635, metadata !"spec", metadata !2636, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2622} ; [ DW_TAG_member ]
!2641 = metadata !{i32 589837, metadata !2635, metadata !"space", metadata !2636, i32 66, i64 1, i64 32, i64 96, i32 0, metadata !2642} ; [ DW_TAG_member ]
!2642 = metadata !{i32 589860, metadata !2591, metadata !"unsigned int", metadata !2591, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2643 = metadata !{i32 589837, metadata !2635, metadata !"showsign", metadata !2636, i32 67, i64 1, i64 32, i64 97, i32 0, metadata !2642} ; [ DW_TAG_member ]
!2644 = metadata !{i32 589837, metadata !2635, metadata !"extra", metadata !2636, i32 68, i64 1, i64 32, i64 98, i32 0, metadata !2642} ; [ DW_TAG_member ]
!2645 = metadata !{i32 589837, metadata !2635, metadata !"left", metadata !2636, i32 69, i64 1, i64 32, i64 99, i32 0, metadata !2642} ; [ DW_TAG_member ]
!2646 = metadata !{i32 589837, metadata !2635, metadata !"alt", metadata !2636, i32 70, i64 1, i64 32, i64 100, i32 0, metadata !2642} ; [ DW_TAG_member ]
!2647 = metadata !{i32 589837, metadata !2635, metadata !"group", metadata !2636, i32 71, i64 1, i64 32, i64 101, i32 0, metadata !2642} ; [ DW_TAG_member ]
!2648 = metadata !{i32 589837, metadata !2635, metadata !"i18n", metadata !2636, i32 72, i64 1, i64 32, i64 102, i32 0, metadata !2642} ; [ DW_TAG_member ]
!2649 = metadata !{i32 589837, metadata !2635, metadata !"wide", metadata !2636, i32 73, i64 1, i64 32, i64 103, i32 0, metadata !2642} ; [ DW_TAG_member ]
!2650 = metadata !{i32 589837, metadata !2635, metadata !"is_char", metadata !2636, i32 74, i64 1, i64 32, i64 104, i32 0, metadata !2642} ; [ DW_TAG_member ]
!2651 = metadata !{i32 589837, metadata !2635, metadata !"is_short", metadata !2636, i32 75, i64 1, i64 32, i64 105, i32 0, metadata !2642} ; [ DW_TAG_member ]
!2652 = metadata !{i32 589837, metadata !2635, metadata !"is_long", metadata !2636, i32 76, i64 1, i64 32, i64 106, i32 0, metadata !2642} ; [ DW_TAG_member ]
!2653 = metadata !{i32 589837, metadata !2635, metadata !"is_long_double", metadata !2636, i32 77, i64 1, i64 32, i64 107, i32 0, metadata !2642} ; [ DW_TAG_member ]
!2654 = metadata !{i32 589837, metadata !2635, metadata !"__padding", metadata !2636, i32 78, i64 20, i64 32, i64 108, i32 0, metadata !2642} ; [ DW_TAG_member ]
!2655 = metadata !{i32 589837, metadata !2635, metadata !"pad", metadata !2636, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2622} ; [ DW_TAG_member ]
!2656 = metadata !{i32 589839, metadata !2591, metadata !"", metadata !2591, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2657} ; [ DW_TAG_pointer_type ]
!2657 = metadata !{i32 589846, metadata !2591, metadata !"__fp_outfunc_t", metadata !2591, i32 17, i64 0, i64 0, i64 0, i32 0, metadata !2658} ; [ DW_TAG_typedef ]
!2658 = metadata !{i32 589845, metadata !2591, metadata !"", metadata !2591, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2659, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2659 = metadata !{metadata !2660, metadata !2598, metadata !2662, metadata !2662, metadata !2662}
!2660 = metadata !{i32 589846, metadata !2623, metadata !"size_t", metadata !2623, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2661} ; [ DW_TAG_typedef ]
!2661 = metadata !{i32 589860, metadata !2591, metadata !"long unsigned int", metadata !2591, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2662 = metadata !{i32 589846, metadata !2663, metadata !"intptr_t", metadata !2663, i32 122, i64 0, i64 0, i64 0, i32 0, metadata !2597} ; [ DW_TAG_typedef ]
!2663 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2592} ; [ DW_TAG_file_type ]
!2664 = metadata !{i32 589870, i32 0, metadata !2665, metadata !"_load_inttype", metadata !"_load_inttype", metadata !"_load_inttype", metadata !2665, i32 13, metadata !2667, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32, i8*, i32)* 
!2665 = metadata !{i32 589865, metadata !"_load_inttype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2666} ; [ DW_TAG_file_type ]
!2666 = metadata !{i32 589841, i32 0, i32 1, metadata !"_load_inttype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2667 = metadata !{i32 589845, metadata !2665, metadata !"", metadata !2665, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2668, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2668 = metadata !{metadata !2669, metadata !2672, metadata !2673, metadata !2672}
!2669 = metadata !{i32 589846, metadata !2670, metadata !"uintmax_t", metadata !2670, i32 138, i64 0, i64 0, i64 0, i32 0, metadata !2671} ; [ DW_TAG_typedef ]
!2670 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2666} ; [ DW_TAG_file_type ]
!2671 = metadata !{i32 589860, metadata !2665, metadata !"long unsigned int", metadata !2665, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2672 = metadata !{i32 589860, metadata !2665, metadata !"int", metadata !2665, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2673 = metadata !{i32 589839, metadata !2665, metadata !"", metadata !2665, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2674 = metadata !{i32 589870, i32 0, metadata !2675, metadata !"_ppfs_init", metadata !"_ppfs_init", metadata !"_ppfs_init", metadata !2677, i32 516, metadata !2678, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.ppfs_t*, i8*)* @
!2675 = metadata !{i32 589865, metadata !"_ppfs_init.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2676} ; [ DW_TAG_file_type ]
!2676 = metadata !{i32 589841, i32 0, i32 1, metadata !"_ppfs_init.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ D
!2677 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2676} ; [ DW_TAG_file_type ]
!2678 = metadata !{i32 589845, metadata !2675, metadata !"", metadata !2675, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2679, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2679 = metadata !{metadata !2680, metadata !2681, metadata !2686}
!2680 = metadata !{i32 589860, metadata !2675, metadata !"int", metadata !2675, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2681 = metadata !{i32 589839, metadata !2675, metadata !"", metadata !2675, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2682} ; [ DW_TAG_pointer_type ]
!2682 = metadata !{i32 589846, metadata !2677, metadata !"ppfs_t", metadata !2677, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2683} ; [ DW_TAG_typedef ]
!2683 = metadata !{i32 589843, metadata !2675, metadata !"", metadata !2677, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2684, i32 0, null} ; [ DW_TAG_structure_type ]
!2684 = metadata !{metadata !2685, metadata !2689, metadata !2701, metadata !2702, metadata !2703, metadata !2704, metadata !2707, metadata !2709, metadata !2721}
!2685 = metadata !{i32 589837, metadata !2683, metadata !"fmtpos", metadata !2677, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2686} ; [ DW_TAG_member ]
!2686 = metadata !{i32 589839, metadata !2675, metadata !"", metadata !2675, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2687} ; [ DW_TAG_pointer_type ]
!2687 = metadata !{i32 589862, metadata !2675, metadata !"", metadata !2675, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2688} ; [ DW_TAG_const_type ]
!2688 = metadata !{i32 589860, metadata !2675, metadata !"char", metadata !2675, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2689 = metadata !{i32 589837, metadata !2683, metadata !"info", metadata !2677, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2690} ; [ DW_TAG_member ]
!2690 = metadata !{i32 589843, metadata !2675, metadata !"printf_info", metadata !2691, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2692, i32 0, null} ; [ DW_TAG_structure_type ]
!2691 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2676} ; [ DW_TAG_file_type ]
!2692 = metadata !{metadata !2693, metadata !2694, metadata !2695, metadata !2698, metadata !2700}
!2693 = metadata !{i32 589837, metadata !2690, metadata !"prec", metadata !2691, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2680} ; [ DW_TAG_member ]
!2694 = metadata !{i32 589837, metadata !2690, metadata !"width", metadata !2691, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2680} ; [ DW_TAG_member ]
!2695 = metadata !{i32 589837, metadata !2690, metadata !"spec", metadata !2691, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2696} ; [ DW_TAG_member ]
!2696 = metadata !{i32 589846, metadata !2697, metadata !"wchar_t", metadata !2697, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2680} ; [ DW_TAG_typedef ]
!2697 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2676} ; [ DW_TAG_file_type ]
!2698 = metadata !{i32 589837, metadata !2690, metadata !"_flags", metadata !2691, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2699} ; [ DW_TAG_member ]
!2699 = metadata !{i32 589860, metadata !2675, metadata !"unsigned int", metadata !2675, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2700 = metadata !{i32 589837, metadata !2690, metadata !"pad", metadata !2691, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2696} ; [ DW_TAG_member ]
!2701 = metadata !{i32 589837, metadata !2683, metadata !"maxposarg", metadata !2677, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2680} ; [ DW_TAG_member ]
!2702 = metadata !{i32 589837, metadata !2683, metadata !"num_data_args", metadata !2677, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2680} ; [ DW_TAG_member ]
!2703 = metadata !{i32 589837, metadata !2683, metadata !"conv_num", metadata !2677, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2699} ; [ DW_TAG_member ]
!2704 = metadata !{i32 589837, metadata !2683, metadata !"argnumber", metadata !2677, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2705} ; [ DW_TAG_member ]
!2705 = metadata !{i32 589825, metadata !2675, metadata !"", metadata !2675, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2706, metadata !838, i32 0, null} ; [ DW_TAG_array_type ]
!2706 = metadata !{i32 589860, metadata !2675, metadata !"unsigned char", metadata !2675, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2707 = metadata !{i32 589837, metadata !2683, metadata !"argtype", metadata !2677, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2708} ; [ DW_TAG_member ]
!2708 = metadata !{i32 589825, metadata !2675, metadata !"", metadata !2675, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2680, metadata !2107, i32 0, null} ; [ DW_TAG_array_type ]
!2709 = metadata !{i32 589837, metadata !2683, metadata !"arg", metadata !2677, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2710} ; [ DW_TAG_member ]
!2710 = metadata !{i32 589846, metadata !2711, metadata !"va_list", metadata !2711, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2712} ; [ DW_TAG_typedef ]
!2711 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2676} ; [ DW_TAG_file_type ]
!2712 = metadata !{i32 589825, metadata !2675, metadata !"", metadata !2675, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2713, metadata !2121, i32 0, null} ; [ DW_TAG_array_type ]
!2713 = metadata !{i32 589843, metadata !2675, metadata !"__va_list_tag", metadata !2714, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2715, i32 0, null} ; [ DW_TAG_structure_type ]
!2714 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2676} ; [ DW_TAG_file_type ]
!2715 = metadata !{metadata !2716, metadata !2717, metadata !2718, metadata !2720}
!2716 = metadata !{i32 589837, metadata !2713, metadata !"gp_offset", metadata !2714, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2699} ; [ DW_TAG_member ]
!2717 = metadata !{i32 589837, metadata !2713, metadata !"fp_offset", metadata !2714, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2699} ; [ DW_TAG_member ]
!2718 = metadata !{i32 589837, metadata !2713, metadata !"overflow_arg_area", metadata !2714, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2719} ; [ DW_TAG_member ]
!2719 = metadata !{i32 589839, metadata !2675, metadata !"", metadata !2675, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2720 = metadata !{i32 589837, metadata !2713, metadata !"reg_save_area", metadata !2714, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2719} ; [ DW_TAG_member ]
!2721 = metadata !{i32 589837, metadata !2683, metadata !"argvalue", metadata !2677, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2722} ; [ DW_TAG_member ]
!2722 = metadata !{i32 589825, metadata !2675, metadata !"", metadata !2675, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2723, metadata !2107, i32 0, null} ; [ DW_TAG_array_type ]
!2723 = metadata !{i32 589846, metadata !2677, metadata !"argvalue_t", metadata !2677, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2724} ; [ DW_TAG_typedef ]
!2724 = metadata !{i32 589847, metadata !2675, metadata !"", metadata !2677, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2725, i32 0, null} ; [ DW_TAG_union_type ]
!2725 = metadata !{metadata !2726, metadata !2727, metadata !2728, metadata !2730, metadata !2732, metadata !2734, metadata !2736}
!2726 = metadata !{i32 589837, metadata !2724, metadata !"wc", metadata !2677, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2696} ; [ DW_TAG_member ]
!2727 = metadata !{i32 589837, metadata !2724, metadata !"u", metadata !2677, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2699} ; [ DW_TAG_member ]
!2728 = metadata !{i32 589837, metadata !2724, metadata !"ul", metadata !2677, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2729} ; [ DW_TAG_member ]
!2729 = metadata !{i32 589860, metadata !2675, metadata !"long unsigned int", metadata !2675, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2730 = metadata !{i32 589837, metadata !2724, metadata !"ull", metadata !2677, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2731} ; [ DW_TAG_member ]
!2731 = metadata !{i32 589860, metadata !2675, metadata !"long long unsigned int", metadata !2675, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2732 = metadata !{i32 589837, metadata !2724, metadata !"d", metadata !2677, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2733} ; [ DW_TAG_member ]
!2733 = metadata !{i32 589860, metadata !2675, metadata !"double", metadata !2675, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2734 = metadata !{i32 589837, metadata !2724, metadata !"ld", metadata !2677, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2735} ; [ DW_TAG_member ]
!2735 = metadata !{i32 589860, metadata !2675, metadata !"long double", metadata !2675, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2736 = metadata !{i32 589837, metadata !2724, metadata !"p", metadata !2677, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2719} ; [ DW_TAG_member ]
!2737 = metadata !{i32 589870, i32 0, metadata !2738, metadata !"_promoted_size", metadata !"_promoted_size", metadata !"", metadata !2740, i32 801, metadata !2741, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @_promoted_size} ; [ 
!2738 = metadata !{i32 589865, metadata !"_ppfs_parsespec.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2739} ; [ DW_TAG_file_type ]
!2739 = metadata !{i32 589841, i32 0, i32 1, metadata !"_ppfs_parsespec.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!2740 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2739} ; [ DW_TAG_file_type ]
!2741 = metadata !{i32 589845, metadata !2738, metadata !"", metadata !2738, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2742, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2742 = metadata !{metadata !2743, metadata !2743}
!2743 = metadata !{i32 589860, metadata !2738, metadata !"int", metadata !2738, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2744 = metadata !{i32 589870, i32 0, metadata !2738, metadata !"_is_equal_or_bigger_arg", metadata !"_is_equal_or_bigger_arg", metadata !"", metadata !2740, i32 816, metadata !2745, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32)
!2745 = metadata !{i32 589845, metadata !2738, metadata !"", metadata !2738, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2746, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2746 = metadata !{metadata !2743, metadata !2743, metadata !2743}
!2747 = metadata !{i32 589870, i32 0, metadata !2738, metadata !"_ppfs_parsespec", metadata !"_ppfs_parsespec", metadata !"_ppfs_parsespec", metadata !2740, i32 845, metadata !2748, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.p
!2748 = metadata !{i32 589845, metadata !2738, metadata !"", metadata !2738, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2749, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2749 = metadata !{metadata !2743, metadata !2750}
!2750 = metadata !{i32 589839, metadata !2738, metadata !"", metadata !2738, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2751} ; [ DW_TAG_pointer_type ]
!2751 = metadata !{i32 589846, metadata !2740, metadata !"ppfs_t", metadata !2740, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2752} ; [ DW_TAG_typedef ]
!2752 = metadata !{i32 589843, metadata !2738, metadata !"", metadata !2740, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2753, i32 0, null} ; [ DW_TAG_structure_type ]
!2753 = metadata !{metadata !2754, metadata !2758, metadata !2770, metadata !2771, metadata !2772, metadata !2773, metadata !2776, metadata !2778, metadata !2790}
!2754 = metadata !{i32 589837, metadata !2752, metadata !"fmtpos", metadata !2740, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2755} ; [ DW_TAG_member ]
!2755 = metadata !{i32 589839, metadata !2738, metadata !"", metadata !2738, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2756} ; [ DW_TAG_pointer_type ]
!2756 = metadata !{i32 589862, metadata !2738, metadata !"", metadata !2738, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2757} ; [ DW_TAG_const_type ]
!2757 = metadata !{i32 589860, metadata !2738, metadata !"char", metadata !2738, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2758 = metadata !{i32 589837, metadata !2752, metadata !"info", metadata !2740, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2759} ; [ DW_TAG_member ]
!2759 = metadata !{i32 589843, metadata !2738, metadata !"printf_info", metadata !2760, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2761, i32 0, null} ; [ DW_TAG_structure_type ]
!2760 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2739} ; [ DW_TAG_file_type ]
!2761 = metadata !{metadata !2762, metadata !2763, metadata !2764, metadata !2767, metadata !2769}
!2762 = metadata !{i32 589837, metadata !2759, metadata !"prec", metadata !2760, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2743} ; [ DW_TAG_member ]
!2763 = metadata !{i32 589837, metadata !2759, metadata !"width", metadata !2760, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2743} ; [ DW_TAG_member ]
!2764 = metadata !{i32 589837, metadata !2759, metadata !"spec", metadata !2760, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2765} ; [ DW_TAG_member ]
!2765 = metadata !{i32 589846, metadata !2766, metadata !"wchar_t", metadata !2766, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2743} ; [ DW_TAG_typedef ]
!2766 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2739} ; [ DW_TAG_file_type ]
!2767 = metadata !{i32 589837, metadata !2759, metadata !"_flags", metadata !2760, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2768} ; [ DW_TAG_member ]
!2768 = metadata !{i32 589860, metadata !2738, metadata !"unsigned int", metadata !2738, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2769 = metadata !{i32 589837, metadata !2759, metadata !"pad", metadata !2760, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2765} ; [ DW_TAG_member ]
!2770 = metadata !{i32 589837, metadata !2752, metadata !"maxposarg", metadata !2740, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2743} ; [ DW_TAG_member ]
!2771 = metadata !{i32 589837, metadata !2752, metadata !"num_data_args", metadata !2740, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2743} ; [ DW_TAG_member ]
!2772 = metadata !{i32 589837, metadata !2752, metadata !"conv_num", metadata !2740, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2768} ; [ DW_TAG_member ]
!2773 = metadata !{i32 589837, metadata !2752, metadata !"argnumber", metadata !2740, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2774} ; [ DW_TAG_member ]
!2774 = metadata !{i32 589825, metadata !2738, metadata !"", metadata !2738, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2775, metadata !838, i32 0, null} ; [ DW_TAG_array_type ]
!2775 = metadata !{i32 589860, metadata !2738, metadata !"unsigned char", metadata !2738, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2776 = metadata !{i32 589837, metadata !2752, metadata !"argtype", metadata !2740, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2777} ; [ DW_TAG_member ]
!2777 = metadata !{i32 589825, metadata !2738, metadata !"", metadata !2738, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2743, metadata !2107, i32 0, null} ; [ DW_TAG_array_type ]
!2778 = metadata !{i32 589837, metadata !2752, metadata !"arg", metadata !2740, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2779} ; [ DW_TAG_member ]
!2779 = metadata !{i32 589846, metadata !2780, metadata !"va_list", metadata !2780, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2781} ; [ DW_TAG_typedef ]
!2780 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2739} ; [ DW_TAG_file_type ]
!2781 = metadata !{i32 589825, metadata !2738, metadata !"", metadata !2738, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2782, metadata !2121, i32 0, null} ; [ DW_TAG_array_type ]
!2782 = metadata !{i32 589843, metadata !2738, metadata !"__va_list_tag", metadata !2783, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2784, i32 0, null} ; [ DW_TAG_structure_type ]
!2783 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2739} ; [ DW_TAG_file_type ]
!2784 = metadata !{metadata !2785, metadata !2786, metadata !2787, metadata !2789}
!2785 = metadata !{i32 589837, metadata !2782, metadata !"gp_offset", metadata !2783, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2768} ; [ DW_TAG_member ]
!2786 = metadata !{i32 589837, metadata !2782, metadata !"fp_offset", metadata !2783, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2768} ; [ DW_TAG_member ]
!2787 = metadata !{i32 589837, metadata !2782, metadata !"overflow_arg_area", metadata !2783, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2788} ; [ DW_TAG_member ]
!2788 = metadata !{i32 589839, metadata !2738, metadata !"", metadata !2738, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2789 = metadata !{i32 589837, metadata !2782, metadata !"reg_save_area", metadata !2783, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2788} ; [ DW_TAG_member ]
!2790 = metadata !{i32 589837, metadata !2752, metadata !"argvalue", metadata !2740, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2791} ; [ DW_TAG_member ]
!2791 = metadata !{i32 589825, metadata !2738, metadata !"", metadata !2738, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2792, metadata !2107, i32 0, null} ; [ DW_TAG_array_type ]
!2792 = metadata !{i32 589846, metadata !2740, metadata !"argvalue_t", metadata !2740, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2793} ; [ DW_TAG_typedef ]
!2793 = metadata !{i32 589847, metadata !2738, metadata !"", metadata !2740, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2794, i32 0, null} ; [ DW_TAG_union_type ]
!2794 = metadata !{metadata !2795, metadata !2796, metadata !2797, metadata !2799, metadata !2801, metadata !2803, metadata !2805}
!2795 = metadata !{i32 589837, metadata !2793, metadata !"wc", metadata !2740, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2765} ; [ DW_TAG_member ]
!2796 = metadata !{i32 589837, metadata !2793, metadata !"u", metadata !2740, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2768} ; [ DW_TAG_member ]
!2797 = metadata !{i32 589837, metadata !2793, metadata !"ul", metadata !2740, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2798} ; [ DW_TAG_member ]
!2798 = metadata !{i32 589860, metadata !2738, metadata !"long unsigned int", metadata !2738, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2799 = metadata !{i32 589837, metadata !2793, metadata !"ull", metadata !2740, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2800} ; [ DW_TAG_member ]
!2800 = metadata !{i32 589860, metadata !2738, metadata !"long long unsigned int", metadata !2738, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2801 = metadata !{i32 589837, metadata !2793, metadata !"d", metadata !2740, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2802} ; [ DW_TAG_member ]
!2802 = metadata !{i32 589860, metadata !2738, metadata !"double", metadata !2738, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2803 = metadata !{i32 589837, metadata !2793, metadata !"ld", metadata !2740, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2804} ; [ DW_TAG_member ]
!2804 = metadata !{i32 589860, metadata !2738, metadata !"long double", metadata !2738, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2805 = metadata !{i32 589837, metadata !2793, metadata !"p", metadata !2740, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2788} ; [ DW_TAG_member ]
!2806 = metadata !{i32 589870, i32 0, metadata !2807, metadata !"_ppfs_prepargs", metadata !"_ppfs_prepargs", metadata !"_ppfs_prepargs", metadata !2809, i32 606, metadata !2810, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.ppf
!2807 = metadata !{i32 589865, metadata !"_ppfs_prepargs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2808} ; [ DW_TAG_file_type ]
!2808 = metadata !{i32 589841, i32 0, i32 1, metadata !"_ppfs_prepargs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!2809 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2808} ; [ DW_TAG_file_type ]
!2810 = metadata !{i32 589845, metadata !2807, metadata !"", metadata !2807, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2811, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2811 = metadata !{null, metadata !2812, metadata !2869}
!2812 = metadata !{i32 589839, metadata !2807, metadata !"", metadata !2807, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2813} ; [ DW_TAG_pointer_type ]
!2813 = metadata !{i32 589846, metadata !2809, metadata !"ppfs_t", metadata !2809, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2814} ; [ DW_TAG_typedef ]
!2814 = metadata !{i32 589843, metadata !2807, metadata !"", metadata !2809, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2815, i32 0, null} ; [ DW_TAG_structure_type ]
!2815 = metadata !{metadata !2816, metadata !2820, metadata !2833, metadata !2834, metadata !2835, metadata !2836, metadata !2839, metadata !2841, metadata !2853}
!2816 = metadata !{i32 589837, metadata !2814, metadata !"fmtpos", metadata !2809, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2817} ; [ DW_TAG_member ]
!2817 = metadata !{i32 589839, metadata !2807, metadata !"", metadata !2807, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2818} ; [ DW_TAG_pointer_type ]
!2818 = metadata !{i32 589862, metadata !2807, metadata !"", metadata !2807, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2819} ; [ DW_TAG_const_type ]
!2819 = metadata !{i32 589860, metadata !2807, metadata !"char", metadata !2807, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2820 = metadata !{i32 589837, metadata !2814, metadata !"info", metadata !2809, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2821} ; [ DW_TAG_member ]
!2821 = metadata !{i32 589843, metadata !2807, metadata !"printf_info", metadata !2822, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2823, i32 0, null} ; [ DW_TAG_structure_type ]
!2822 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2808} ; [ DW_TAG_file_type ]
!2823 = metadata !{metadata !2824, metadata !2826, metadata !2827, metadata !2830, metadata !2832}
!2824 = metadata !{i32 589837, metadata !2821, metadata !"prec", metadata !2822, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2825} ; [ DW_TAG_member ]
!2825 = metadata !{i32 589860, metadata !2807, metadata !"int", metadata !2807, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2826 = metadata !{i32 589837, metadata !2821, metadata !"width", metadata !2822, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2825} ; [ DW_TAG_member ]
!2827 = metadata !{i32 589837, metadata !2821, metadata !"spec", metadata !2822, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2828} ; [ DW_TAG_member ]
!2828 = metadata !{i32 589846, metadata !2829, metadata !"wchar_t", metadata !2829, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2825} ; [ DW_TAG_typedef ]
!2829 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2808} ; [ DW_TAG_file_type ]
!2830 = metadata !{i32 589837, metadata !2821, metadata !"_flags", metadata !2822, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2831} ; [ DW_TAG_member ]
!2831 = metadata !{i32 589860, metadata !2807, metadata !"unsigned int", metadata !2807, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2832 = metadata !{i32 589837, metadata !2821, metadata !"pad", metadata !2822, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2828} ; [ DW_TAG_member ]
!2833 = metadata !{i32 589837, metadata !2814, metadata !"maxposarg", metadata !2809, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2825} ; [ DW_TAG_member ]
!2834 = metadata !{i32 589837, metadata !2814, metadata !"num_data_args", metadata !2809, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2825} ; [ DW_TAG_member ]
!2835 = metadata !{i32 589837, metadata !2814, metadata !"conv_num", metadata !2809, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2831} ; [ DW_TAG_member ]
!2836 = metadata !{i32 589837, metadata !2814, metadata !"argnumber", metadata !2809, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2837} ; [ DW_TAG_member ]
!2837 = metadata !{i32 589825, metadata !2807, metadata !"", metadata !2807, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2838, metadata !838, i32 0, null} ; [ DW_TAG_array_type ]
!2838 = metadata !{i32 589860, metadata !2807, metadata !"unsigned char", metadata !2807, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2839 = metadata !{i32 589837, metadata !2814, metadata !"argtype", metadata !2809, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2840} ; [ DW_TAG_member ]
!2840 = metadata !{i32 589825, metadata !2807, metadata !"", metadata !2807, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2825, metadata !2107, i32 0, null} ; [ DW_TAG_array_type ]
!2841 = metadata !{i32 589837, metadata !2814, metadata !"arg", metadata !2809, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2842} ; [ DW_TAG_member ]
!2842 = metadata !{i32 589846, metadata !2843, metadata !"va_list", metadata !2843, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2844} ; [ DW_TAG_typedef ]
!2843 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2808} ; [ DW_TAG_file_type ]
!2844 = metadata !{i32 589825, metadata !2807, metadata !"", metadata !2807, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2845, metadata !2121, i32 0, null} ; [ DW_TAG_array_type ]
!2845 = metadata !{i32 589843, metadata !2807, metadata !"__va_list_tag", metadata !2846, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2847, i32 0, null} ; [ DW_TAG_structure_type ]
!2846 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2808} ; [ DW_TAG_file_type ]
!2847 = metadata !{metadata !2848, metadata !2849, metadata !2850, metadata !2852}
!2848 = metadata !{i32 589837, metadata !2845, metadata !"gp_offset", metadata !2846, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2831} ; [ DW_TAG_member ]
!2849 = metadata !{i32 589837, metadata !2845, metadata !"fp_offset", metadata !2846, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2831} ; [ DW_TAG_member ]
!2850 = metadata !{i32 589837, metadata !2845, metadata !"overflow_arg_area", metadata !2846, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2851} ; [ DW_TAG_member ]
!2851 = metadata !{i32 589839, metadata !2807, metadata !"", metadata !2807, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2852 = metadata !{i32 589837, metadata !2845, metadata !"reg_save_area", metadata !2846, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2851} ; [ DW_TAG_member ]
!2853 = metadata !{i32 589837, metadata !2814, metadata !"argvalue", metadata !2809, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2854} ; [ DW_TAG_member ]
!2854 = metadata !{i32 589825, metadata !2807, metadata !"", metadata !2807, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2855, metadata !2107, i32 0, null} ; [ DW_TAG_array_type ]
!2855 = metadata !{i32 589846, metadata !2809, metadata !"argvalue_t", metadata !2809, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2856} ; [ DW_TAG_typedef ]
!2856 = metadata !{i32 589847, metadata !2807, metadata !"", metadata !2809, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2857, i32 0, null} ; [ DW_TAG_union_type ]
!2857 = metadata !{metadata !2858, metadata !2859, metadata !2860, metadata !2862, metadata !2864, metadata !2866, metadata !2868}
!2858 = metadata !{i32 589837, metadata !2856, metadata !"wc", metadata !2809, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2828} ; [ DW_TAG_member ]
!2859 = metadata !{i32 589837, metadata !2856, metadata !"u", metadata !2809, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2831} ; [ DW_TAG_member ]
!2860 = metadata !{i32 589837, metadata !2856, metadata !"ul", metadata !2809, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2861} ; [ DW_TAG_member ]
!2861 = metadata !{i32 589860, metadata !2807, metadata !"long unsigned int", metadata !2807, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2862 = metadata !{i32 589837, metadata !2856, metadata !"ull", metadata !2809, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2863} ; [ DW_TAG_member ]
!2863 = metadata !{i32 589860, metadata !2807, metadata !"long long unsigned int", metadata !2807, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2864 = metadata !{i32 589837, metadata !2856, metadata !"d", metadata !2809, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2865} ; [ DW_TAG_member ]
!2865 = metadata !{i32 589860, metadata !2807, metadata !"double", metadata !2807, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2866 = metadata !{i32 589837, metadata !2856, metadata !"ld", metadata !2809, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2867} ; [ DW_TAG_member ]
!2867 = metadata !{i32 589860, metadata !2807, metadata !"long double", metadata !2807, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2868 = metadata !{i32 589837, metadata !2856, metadata !"p", metadata !2809, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2851} ; [ DW_TAG_member ]
!2869 = metadata !{i32 589839, metadata !2807, metadata !"", metadata !2807, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2845} ; [ DW_TAG_pointer_type ]
!2870 = metadata !{i32 589870, i32 0, metadata !2871, metadata !"_ppfs_setargs", metadata !"_ppfs_setargs", metadata !"_ppfs_setargs", metadata !2873, i32 625, metadata !2874, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.ppfs_t
!2871 = metadata !{i32 589865, metadata !"_ppfs_setargs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2872} ; [ DW_TAG_file_type ]
!2872 = metadata !{i32 589841, i32 0, i32 1, metadata !"_ppfs_setargs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2873 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2872} ; [ DW_TAG_file_type ]
!2874 = metadata !{i32 589845, metadata !2871, metadata !"", metadata !2871, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2875, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2875 = metadata !{null, metadata !2876}
!2876 = metadata !{i32 589839, metadata !2871, metadata !"", metadata !2871, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2877} ; [ DW_TAG_pointer_type ]
!2877 = metadata !{i32 589846, metadata !2873, metadata !"ppfs_t", metadata !2873, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2878} ; [ DW_TAG_typedef ]
!2878 = metadata !{i32 589843, metadata !2871, metadata !"", metadata !2873, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2879, i32 0, null} ; [ DW_TAG_structure_type ]
!2879 = metadata !{metadata !2880, metadata !2884, metadata !2897, metadata !2898, metadata !2899, metadata !2900, metadata !2903, metadata !2905, metadata !2917}
!2880 = metadata !{i32 589837, metadata !2878, metadata !"fmtpos", metadata !2873, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2881} ; [ DW_TAG_member ]
!2881 = metadata !{i32 589839, metadata !2871, metadata !"", metadata !2871, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2882} ; [ DW_TAG_pointer_type ]
!2882 = metadata !{i32 589862, metadata !2871, metadata !"", metadata !2871, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2883} ; [ DW_TAG_const_type ]
!2883 = metadata !{i32 589860, metadata !2871, metadata !"char", metadata !2871, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2884 = metadata !{i32 589837, metadata !2878, metadata !"info", metadata !2873, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2885} ; [ DW_TAG_member ]
!2885 = metadata !{i32 589843, metadata !2871, metadata !"printf_info", metadata !2886, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2887, i32 0, null} ; [ DW_TAG_structure_type ]
!2886 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2872} ; [ DW_TAG_file_type ]
!2887 = metadata !{metadata !2888, metadata !2890, metadata !2891, metadata !2894, metadata !2896}
!2888 = metadata !{i32 589837, metadata !2885, metadata !"prec", metadata !2886, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2889} ; [ DW_TAG_member ]
!2889 = metadata !{i32 589860, metadata !2871, metadata !"int", metadata !2871, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2890 = metadata !{i32 589837, metadata !2885, metadata !"width", metadata !2886, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2889} ; [ DW_TAG_member ]
!2891 = metadata !{i32 589837, metadata !2885, metadata !"spec", metadata !2886, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2892} ; [ DW_TAG_member ]
!2892 = metadata !{i32 589846, metadata !2893, metadata !"wchar_t", metadata !2893, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2889} ; [ DW_TAG_typedef ]
!2893 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2872} ; [ DW_TAG_file_type ]
!2894 = metadata !{i32 589837, metadata !2885, metadata !"_flags", metadata !2886, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2895} ; [ DW_TAG_member ]
!2895 = metadata !{i32 589860, metadata !2871, metadata !"unsigned int", metadata !2871, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2896 = metadata !{i32 589837, metadata !2885, metadata !"pad", metadata !2886, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2892} ; [ DW_TAG_member ]
!2897 = metadata !{i32 589837, metadata !2878, metadata !"maxposarg", metadata !2873, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2889} ; [ DW_TAG_member ]
!2898 = metadata !{i32 589837, metadata !2878, metadata !"num_data_args", metadata !2873, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2889} ; [ DW_TAG_member ]
!2899 = metadata !{i32 589837, metadata !2878, metadata !"conv_num", metadata !2873, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2895} ; [ DW_TAG_member ]
!2900 = metadata !{i32 589837, metadata !2878, metadata !"argnumber", metadata !2873, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2901} ; [ DW_TAG_member ]
!2901 = metadata !{i32 589825, metadata !2871, metadata !"", metadata !2871, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2902, metadata !838, i32 0, null} ; [ DW_TAG_array_type ]
!2902 = metadata !{i32 589860, metadata !2871, metadata !"unsigned char", metadata !2871, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2903 = metadata !{i32 589837, metadata !2878, metadata !"argtype", metadata !2873, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2904} ; [ DW_TAG_member ]
!2904 = metadata !{i32 589825, metadata !2871, metadata !"", metadata !2871, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2889, metadata !2107, i32 0, null} ; [ DW_TAG_array_type ]
!2905 = metadata !{i32 589837, metadata !2878, metadata !"arg", metadata !2873, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2906} ; [ DW_TAG_member ]
!2906 = metadata !{i32 589846, metadata !2907, metadata !"va_list", metadata !2907, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2908} ; [ DW_TAG_typedef ]
!2907 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2872} ; [ DW_TAG_file_type ]
!2908 = metadata !{i32 589825, metadata !2871, metadata !"", metadata !2871, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2909, metadata !2121, i32 0, null} ; [ DW_TAG_array_type ]
!2909 = metadata !{i32 589843, metadata !2871, metadata !"__va_list_tag", metadata !2910, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2911, i32 0, null} ; [ DW_TAG_structure_type ]
!2910 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2872} ; [ DW_TAG_file_type ]
!2911 = metadata !{metadata !2912, metadata !2913, metadata !2914, metadata !2916}
!2912 = metadata !{i32 589837, metadata !2909, metadata !"gp_offset", metadata !2910, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2895} ; [ DW_TAG_member ]
!2913 = metadata !{i32 589837, metadata !2909, metadata !"fp_offset", metadata !2910, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2895} ; [ DW_TAG_member ]
!2914 = metadata !{i32 589837, metadata !2909, metadata !"overflow_arg_area", metadata !2910, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2915} ; [ DW_TAG_member ]
!2915 = metadata !{i32 589839, metadata !2871, metadata !"", metadata !2871, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2916 = metadata !{i32 589837, metadata !2909, metadata !"reg_save_area", metadata !2910, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2915} ; [ DW_TAG_member ]
!2917 = metadata !{i32 589837, metadata !2878, metadata !"argvalue", metadata !2873, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2918} ; [ DW_TAG_member ]
!2918 = metadata !{i32 589825, metadata !2871, metadata !"", metadata !2871, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2919, metadata !2107, i32 0, null} ; [ DW_TAG_array_type ]
!2919 = metadata !{i32 589846, metadata !2873, metadata !"argvalue_t", metadata !2873, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2920} ; [ DW_TAG_typedef ]
!2920 = metadata !{i32 589847, metadata !2871, metadata !"", metadata !2873, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2921, i32 0, null} ; [ DW_TAG_union_type ]
!2921 = metadata !{metadata !2922, metadata !2923, metadata !2924, metadata !2926, metadata !2928, metadata !2930, metadata !2932}
!2922 = metadata !{i32 589837, metadata !2920, metadata !"wc", metadata !2873, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2892} ; [ DW_TAG_member ]
!2923 = metadata !{i32 589837, metadata !2920, metadata !"u", metadata !2873, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2895} ; [ DW_TAG_member ]
!2924 = metadata !{i32 589837, metadata !2920, metadata !"ul", metadata !2873, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2925} ; [ DW_TAG_member ]
!2925 = metadata !{i32 589860, metadata !2871, metadata !"long unsigned int", metadata !2871, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2926 = metadata !{i32 589837, metadata !2920, metadata !"ull", metadata !2873, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2927} ; [ DW_TAG_member ]
!2927 = metadata !{i32 589860, metadata !2871, metadata !"long long unsigned int", metadata !2871, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2928 = metadata !{i32 589837, metadata !2920, metadata !"d", metadata !2873, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2929} ; [ DW_TAG_member ]
!2929 = metadata !{i32 589860, metadata !2871, metadata !"double", metadata !2871, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2930 = metadata !{i32 589837, metadata !2920, metadata !"ld", metadata !2873, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2931} ; [ DW_TAG_member ]
!2931 = metadata !{i32 589860, metadata !2871, metadata !"long double", metadata !2871, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2932 = metadata !{i32 589837, metadata !2920, metadata !"p", metadata !2873, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2915} ; [ DW_TAG_member ]
!2933 = metadata !{i32 589870, i32 0, metadata !2934, metadata !"_store_inttype", metadata !"_store_inttype", metadata !"_store_inttype", metadata !2934, i32 33, metadata !2936, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, i32, i6
!2934 = metadata !{i32 589865, metadata !"_store_inttype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2935} ; [ DW_TAG_file_type ]
!2935 = metadata !{i32 589841, i32 0, i32 1, metadata !"_store_inttype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!2936 = metadata !{i32 589845, metadata !2934, metadata !"", metadata !2934, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2937, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2937 = metadata !{null, metadata !2938, metadata !2939, metadata !2940}
!2938 = metadata !{i32 589839, metadata !2934, metadata !"", metadata !2934, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2939 = metadata !{i32 589860, metadata !2934, metadata !"int", metadata !2934, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2940 = metadata !{i32 589846, metadata !2941, metadata !"uintmax_t", metadata !2941, i32 138, i64 0, i64 0, i64 0, i32 0, metadata !2942} ; [ DW_TAG_typedef ]
!2941 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2935} ; [ DW_TAG_file_type ]
!2942 = metadata !{i32 589860, metadata !2934, metadata !"long unsigned int", metadata !2934, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2943 = metadata !{i32 589870, i32 0, metadata !2944, metadata !"_uintmaxtostr", metadata !"_uintmaxtostr", metadata !"_uintmaxtostr", metadata !2944, i32 24, metadata !2946, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64, i32, i
!2944 = metadata !{i32 589865, metadata !"_uintmaxtostr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2945} ; [ DW_TAG_file_type ]
!2945 = metadata !{i32 589841, i32 0, i32 1, metadata !"_uintmaxtostr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2946 = metadata !{i32 589845, metadata !2944, metadata !"", metadata !2944, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2947, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2947 = metadata !{metadata !2948, metadata !2948, metadata !2950, metadata !2953, metadata !2954}
!2948 = metadata !{i32 589839, metadata !2944, metadata !"", metadata !2944, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2949} ; [ DW_TAG_pointer_type ]
!2949 = metadata !{i32 589860, metadata !2944, metadata !"char", metadata !2944, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2950 = metadata !{i32 589846, metadata !2951, metadata !"uintmax_t", metadata !2951, i32 138, i64 0, i64 0, i64 0, i32 0, metadata !2952} ; [ DW_TAG_typedef ]
!2951 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2945} ; [ DW_TAG_file_type ]
!2952 = metadata !{i32 589860, metadata !2944, metadata !"long unsigned int", metadata !2944, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2953 = metadata !{i32 589860, metadata !2944, metadata !"int", metadata !2944, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2954 = metadata !{i32 589846, metadata !2955, metadata !"__UIM_CASE", metadata !2955, i32 84, i64 0, i64 0, i64 0, i32 0, metadata !2956} ; [ DW_TAG_typedef ]
!2955 = metadata !{i32 589865, metadata !"uClibc_uintmaxtostr.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2945} ; [ DW_TAG_file_type ]
!2956 = metadata !{i32 589828, metadata !2944, metadata !"", metadata !2955, i32 79, i64 32, i64 32, i64 0, i32 0, null, metadata !2957, i32 0, null} ; [ DW_TAG_enumeration_type ]
!2957 = metadata !{metadata !2958, metadata !2959, metadata !2960, metadata !2961}
!2958 = metadata !{i32 589864, metadata !"__UIM_DECIMAL", i64 0} ; [ DW_TAG_enumerator ]
!2959 = metadata !{i32 589864, metadata !"__UIM_GROUP", i64 44} ; [ DW_TAG_enumerator ]
!2960 = metadata !{i32 589864, metadata !"__UIM_LOWER", i64 87} ; [ DW_TAG_enumerator ]
!2961 = metadata !{i32 589864, metadata !"__UIM_UPPER", i64 55} ; [ DW_TAG_enumerator ]
!2962 = metadata !{i32 589870, i32 0, metadata !2963, metadata !"strpbrk", metadata !"strpbrk", metadata !"strpbrk", metadata !2963, i32 19, metadata !2965, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*)* @strpbrk} ; [ DW_TAG_su
!2963 = metadata !{i32 589865, metadata !"strpbrk.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !2964} ; [ DW_TAG_file_type ]
!2964 = metadata !{i32 589841, i32 0, i32 1, metadata !"strpbrk.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!2965 = metadata !{i32 589845, metadata !2963, metadata !"", metadata !2963, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2966, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2966 = metadata !{metadata !2967, metadata !2969, metadata !2969}
!2967 = metadata !{i32 589839, metadata !2963, metadata !"", metadata !2963, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2968} ; [ DW_TAG_pointer_type ]
!2968 = metadata !{i32 589860, metadata !2963, metadata !"char", metadata !2963, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2969 = metadata !{i32 589839, metadata !2963, metadata !"", metadata !2963, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2970} ; [ DW_TAG_pointer_type ]
!2970 = metadata !{i32 589862, metadata !2963, metadata !"", metadata !2963, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2968} ; [ DW_TAG_const_type ]
!2971 = metadata !{i32 589870, i32 0, metadata !2972, metadata !"strtol", metadata !"strtol", metadata !"strtol", metadata !2974, i32 331, metadata !2975, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8**, i32)* @strtol} ; [ DW_TAG
!2972 = metadata !{i32 589865, metadata !"strtol.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2973} ; [ DW_TAG_file_type ]
!2973 = metadata !{i32 589841, i32 0, i32 1, metadata !"strtol.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!2974 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2973} ; [ DW_TAG_file_type ]
!2975 = metadata !{i32 589845, metadata !2972, metadata !"", metadata !2972, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2976, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2976 = metadata !{metadata !2977, metadata !2978, metadata !2981, metadata !2983}
!2977 = metadata !{i32 589860, metadata !2972, metadata !"long int", metadata !2972, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2978 = metadata !{i32 589839, metadata !2972, metadata !"", metadata !2972, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2979} ; [ DW_TAG_pointer_type ]
!2979 = metadata !{i32 589862, metadata !2972, metadata !"", metadata !2972, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2980} ; [ DW_TAG_const_type ]
!2980 = metadata !{i32 589860, metadata !2972, metadata !"char", metadata !2972, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2981 = metadata !{i32 589839, metadata !2972, metadata !"", metadata !2972, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2982} ; [ DW_TAG_pointer_type ]
!2982 = metadata !{i32 589839, metadata !2972, metadata !"", metadata !2972, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2980} ; [ DW_TAG_pointer_type ]
!2983 = metadata !{i32 589860, metadata !2972, metadata !"int", metadata !2972, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2984 = metadata !{i32 589870, i32 0, metadata !2985, metadata !"tcgetattr", metadata !"tcgetattr", metadata !"tcgetattr", metadata !2985, i32 39, metadata !2987, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %struct.termios*)* @tcg
!2985 = metadata !{i32 589865, metadata !"tcgetattr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/termios", metadata !2986} ; [ DW_TAG_file_type ]
!2986 = metadata !{i32 589841, i32 0, i32 1, metadata !"tcgetattr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/termios", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!2987 = metadata !{i32 589845, metadata !2985, metadata !"", metadata !2985, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2988, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2988 = metadata !{metadata !2989, metadata !2989, metadata !2990}
!2989 = metadata !{i32 589860, metadata !2985, metadata !"int", metadata !2985, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2990 = metadata !{i32 589839, metadata !2985, metadata !"", metadata !2985, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2991} ; [ DW_TAG_pointer_type ]
!2991 = metadata !{i32 589843, metadata !2985, metadata !"termios", metadata !2992, i32 31, i64 480, i64 32, i64 0, i32 0, null, metadata !2993, i32 0, null} ; [ DW_TAG_structure_type ]
!2992 = metadata !{i32 589865, metadata !"termios.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2986} ; [ DW_TAG_file_type ]
!2993 = metadata !{metadata !2994, metadata !2997, metadata !2998, metadata !2999, metadata !3000, metadata !3003, metadata !3005, metadata !3007}
!2994 = metadata !{i32 589837, metadata !2991, metadata !"c_iflag", metadata !2992, i32 32, i64 32, i64 32, i64 0, i32 0, metadata !2995} ; [ DW_TAG_member ]
!2995 = metadata !{i32 589846, metadata !2992, metadata !"tcflag_t", metadata !2992, i32 27, i64 0, i64 0, i64 0, i32 0, metadata !2996} ; [ DW_TAG_typedef ]
!2996 = metadata !{i32 589860, metadata !2985, metadata !"unsigned int", metadata !2985, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2997 = metadata !{i32 589837, metadata !2991, metadata !"c_oflag", metadata !2992, i32 33, i64 32, i64 32, i64 32, i32 0, metadata !2995} ; [ DW_TAG_member ]
!2998 = metadata !{i32 589837, metadata !2991, metadata !"c_cflag", metadata !2992, i32 34, i64 32, i64 32, i64 64, i32 0, metadata !2995} ; [ DW_TAG_member ]
!2999 = metadata !{i32 589837, metadata !2991, metadata !"c_lflag", metadata !2992, i32 35, i64 32, i64 32, i64 96, i32 0, metadata !2995} ; [ DW_TAG_member ]
!3000 = metadata !{i32 589837, metadata !2991, metadata !"c_line", metadata !2992, i32 36, i64 8, i64 8, i64 128, i32 0, metadata !3001} ; [ DW_TAG_member ]
!3001 = metadata !{i32 589846, metadata !2992, metadata !"cc_t", metadata !2992, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !3002} ; [ DW_TAG_typedef ]
!3002 = metadata !{i32 589860, metadata !2985, metadata !"unsigned char", metadata !2985, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!3003 = metadata !{i32 589837, metadata !2991, metadata !"c_cc", metadata !2992, i32 37, i64 256, i64 8, i64 136, i32 0, metadata !3004} ; [ DW_TAG_member ]
!3004 = metadata !{i32 589825, metadata !2985, metadata !"", metadata !2985, i32 0, i64 256, i64 8, i64 0, i32 0, metadata !3001, metadata !834, i32 0, null} ; [ DW_TAG_array_type ]
!3005 = metadata !{i32 589837, metadata !2991, metadata !"c_ispeed", metadata !2992, i32 38, i64 32, i64 32, i64 416, i32 0, metadata !3006} ; [ DW_TAG_member ]
!3006 = metadata !{i32 589846, metadata !2992, metadata !"speed_t", metadata !2992, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !2996} ; [ DW_TAG_typedef ]
!3007 = metadata !{i32 589837, metadata !2991, metadata !"c_ospeed", metadata !2992, i32 39, i64 32, i64 32, i64 448, i32 0, metadata !3006} ; [ DW_TAG_member ]
!3008 = metadata !{i32 589870, i32 0, metadata !3009, metadata !"wcrtomb", metadata !"wcrtomb", metadata !"wcrtomb", metadata !3011, i32 342, metadata !3012, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i32, %struct.__mbstate_t*)* 
!3009 = metadata !{i32 589865, metadata !"wcrtomb.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !3010} ; [ DW_TAG_file_type ]
!3010 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcrtomb.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [
!3011 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !3010} ; [ DW_TAG_file_type ]
!3012 = metadata !{i32 589845, metadata !3009, metadata !"", metadata !3009, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3013, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3013 = metadata !{metadata !3014, metadata !3017, metadata !3019, metadata !3021}
!3014 = metadata !{i32 589846, metadata !3015, metadata !"size_t", metadata !3015, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !3016} ; [ DW_TAG_typedef ]
!3015 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !3010} ; [ DW_TAG_file_type ]
!3016 = metadata !{i32 589860, metadata !3009, metadata !"long unsigned int", metadata !3009, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3017 = metadata !{i32 589839, metadata !3009, metadata !"", metadata !3009, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3018} ; [ DW_TAG_pointer_type ]
!3018 = metadata !{i32 589860, metadata !3009, metadata !"char", metadata !3009, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3019 = metadata !{i32 589846, metadata !3015, metadata !"wchar_t", metadata !3015, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !3020} ; [ DW_TAG_typedef ]
!3020 = metadata !{i32 589860, metadata !3009, metadata !"int", metadata !3009, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3021 = metadata !{i32 589839, metadata !3009, metadata !"", metadata !3009, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3022} ; [ DW_TAG_pointer_type ]
!3022 = metadata !{i32 589846, metadata !3023, metadata !"mbstate_t", metadata !3023, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !3024} ; [ DW_TAG_typedef ]
!3023 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !3010} ; [ DW_TAG_file_type ]
!3024 = metadata !{i32 589843, metadata !3009, metadata !"", metadata !3023, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !3025, i32 0, null} ; [ DW_TAG_structure_type ]
!3025 = metadata !{metadata !3026, metadata !3027}
!3026 = metadata !{i32 589837, metadata !3024, metadata !"__mask", metadata !3023, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !3019} ; [ DW_TAG_member ]
!3027 = metadata !{i32 589837, metadata !3024, metadata !"__wc", metadata !3023, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !3019} ; [ DW_TAG_member ]
!3028 = metadata !{i32 589870, i32 0, metadata !3029, metadata !"wcsnrtombs", metadata !"wcsnrtombs", metadata !"wcsnrtombs", metadata !3031, i32 808, metadata !3032, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i32**, i64, i64, %s
!3029 = metadata !{i32 589865, metadata !"wcsnrtombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !3030} ; [ DW_TAG_file_type ]
!3030 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcsnrtombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!3031 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !3030} ; [ DW_TAG_file_type ]
!3032 = metadata !{i32 589845, metadata !3029, metadata !"", metadata !3029, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3033, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3033 = metadata !{metadata !3034, metadata !3037, metadata !3039, metadata !3034, metadata !3034, metadata !3043}
!3034 = metadata !{i32 589846, metadata !3035, metadata !"size_t", metadata !3035, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !3036} ; [ DW_TAG_typedef ]
!3035 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !3030} ; [ DW_TAG_file_type ]
!3036 = metadata !{i32 589860, metadata !3029, metadata !"long unsigned int", metadata !3029, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3037 = metadata !{i32 589839, metadata !3029, metadata !"", metadata !3029, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3038} ; [ DW_TAG_pointer_type ]
!3038 = metadata !{i32 589860, metadata !3029, metadata !"char", metadata !3029, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3039 = metadata !{i32 589839, metadata !3029, metadata !"", metadata !3029, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3040} ; [ DW_TAG_pointer_type ]
!3040 = metadata !{i32 589839, metadata !3029, metadata !"", metadata !3029, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3041} ; [ DW_TAG_pointer_type ]
!3041 = metadata !{i32 589846, metadata !3035, metadata !"wchar_t", metadata !3035, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !3042} ; [ DW_TAG_typedef ]
!3042 = metadata !{i32 589860, metadata !3029, metadata !"int", metadata !3029, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3043 = metadata !{i32 589839, metadata !3029, metadata !"", metadata !3029, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3044} ; [ DW_TAG_pointer_type ]
!3044 = metadata !{i32 589846, metadata !3045, metadata !"mbstate_t", metadata !3045, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !3046} ; [ DW_TAG_typedef ]
!3045 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !3030} ; [ DW_TAG_file_type ]
!3046 = metadata !{i32 589843, metadata !3029, metadata !"", metadata !3045, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !3047, i32 0, null} ; [ DW_TAG_structure_type ]
!3047 = metadata !{metadata !3048, metadata !3049}
!3048 = metadata !{i32 589837, metadata !3046, metadata !"__mask", metadata !3045, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !3041} ; [ DW_TAG_member ]
!3049 = metadata !{i32 589837, metadata !3046, metadata !"__wc", metadata !3045, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !3041} ; [ DW_TAG_member ]
!3050 = metadata !{i32 589870, i32 0, metadata !3051, metadata !"__strtofpmax", metadata !"__strtofpmax", metadata !"__strtofpmax", metadata !3053, i32 222, metadata !3054, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, x86_fp80 (i8*, i8**, i3
!3051 = metadata !{i32 589865, metadata !"__strtofpmax.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !3052} ; [ DW_TAG_file_type ]
!3052 = metadata !{i32 589841, i32 0, i32 1, metadata !"__strtofpmax.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!3053 = metadata !{i32 589865, metadata !"_strtod.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !3052} ; [ DW_TAG_file_type ]
!3054 = metadata !{i32 589845, metadata !3051, metadata !"", metadata !3051, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3055, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3055 = metadata !{metadata !3056, metadata !3059, metadata !3062, metadata !3064}
!3056 = metadata !{i32 589846, metadata !3057, metadata !"__fpmax_t", metadata !3057, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !3058} ; [ DW_TAG_typedef ]
!3057 = metadata !{i32 589865, metadata !"uClibc_fpmax.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !3052} ; [ DW_TAG_file_type ]
!3058 = metadata !{i32 589860, metadata !3051, metadata !"long double", metadata !3051, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!3059 = metadata !{i32 589839, metadata !3051, metadata !"", metadata !3051, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3060} ; [ DW_TAG_pointer_type ]
!3060 = metadata !{i32 589862, metadata !3051, metadata !"", metadata !3051, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3061} ; [ DW_TAG_const_type ]
!3061 = metadata !{i32 589860, metadata !3051, metadata !"char", metadata !3051, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3062 = metadata !{i32 589839, metadata !3051, metadata !"", metadata !3051, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3063} ; [ DW_TAG_pointer_type ]
!3063 = metadata !{i32 589839, metadata !3051, metadata !"", metadata !3051, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3061} ; [ DW_TAG_pointer_type ]
!3064 = metadata !{i32 589860, metadata !3051, metadata !"int", metadata !3051, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3065 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"__stat64_to_stat", metadata !"__stat64_to_stat", metadata !"", metadata !3066, i32 42, metadata !3068, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3066 = metadata !{i32 589865, metadata !"fd_32.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3067} ; [ DW_TAG_file_type ]
!3067 = metadata !{i32 589841, i32 0, i32 1, metadata !"fd_32.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compile
!3068 = metadata !{i32 589845, metadata !3066, metadata !"", metadata !3066, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3069, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3069 = metadata !{null, metadata !3070, metadata !3114}
!3070 = metadata !{i32 589839, metadata !3066, metadata !"", metadata !3066, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3071} ; [ DW_TAG_pointer_type ]
!3071 = metadata !{i32 589843, metadata !3066, metadata !"stat64", metadata !3072, i32 30, i64 1152, i64 64, i64 0, i32 0, null, metadata !3073, i32 0, null} ; [ DW_TAG_structure_type ]
!3072 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3067} ; [ DW_TAG_file_type ]
!3073 = metadata !{metadata !3074, metadata !3079, metadata !3081, metadata !3083, metadata !3086, metadata !3088, metadata !3090, metadata !3092, metadata !3093, metadata !3096, metadata !3098, metadata !3100, metadata !3108, metadata !3109, metadata !3
!3074 = metadata !{i32 589837, metadata !3071, metadata !"st_dev", metadata !3075, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !3076} ; [ DW_TAG_member ]
!3075 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3067} ; [ DW_TAG_file_type ]
!3076 = metadata !{i32 589846, metadata !3077, metadata !"__dev_t", metadata !3077, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !3078} ; [ DW_TAG_typedef ]
!3077 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3067} ; [ DW_TAG_file_type ]
!3078 = metadata !{i32 589860, metadata !3066, metadata !"long unsigned int", metadata !3066, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3079 = metadata !{i32 589837, metadata !3071, metadata !"st_ino", metadata !3075, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3080} ; [ DW_TAG_member ]
!3080 = metadata !{i32 589846, metadata !3077, metadata !"__ino64_t", metadata !3077, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !3078} ; [ DW_TAG_typedef ]
!3081 = metadata !{i32 589837, metadata !3071, metadata !"st_nlink", metadata !3075, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !3082} ; [ DW_TAG_member ]
!3082 = metadata !{i32 589846, metadata !3077, metadata !"__nlink_t", metadata !3077, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !3078} ; [ DW_TAG_typedef ]
!3083 = metadata !{i32 589837, metadata !3071, metadata !"st_mode", metadata !3075, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !3084} ; [ DW_TAG_member ]
!3084 = metadata !{i32 589846, metadata !3077, metadata !"__mode_t", metadata !3077, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !3085} ; [ DW_TAG_typedef ]
!3085 = metadata !{i32 589860, metadata !3066, metadata !"unsigned int", metadata !3066, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3086 = metadata !{i32 589837, metadata !3071, metadata !"st_uid", metadata !3075, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !3087} ; [ DW_TAG_member ]
!3087 = metadata !{i32 589846, metadata !3077, metadata !"__uid_t", metadata !3077, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !3085} ; [ DW_TAG_typedef ]
!3088 = metadata !{i32 589837, metadata !3071, metadata !"st_gid", metadata !3075, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !3089} ; [ DW_TAG_member ]
!3089 = metadata !{i32 589846, metadata !3077, metadata !"__gid_t", metadata !3077, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !3085} ; [ DW_TAG_typedef ]
!3090 = metadata !{i32 589837, metadata !3071, metadata !"__pad0", metadata !3075, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !3091} ; [ DW_TAG_member ]
!3091 = metadata !{i32 589860, metadata !3066, metadata !"int", metadata !3066, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3092 = metadata !{i32 589837, metadata !3071, metadata !"st_rdev", metadata !3075, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !3076} ; [ DW_TAG_member ]
!3093 = metadata !{i32 589837, metadata !3071, metadata !"st_size", metadata !3075, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !3094} ; [ DW_TAG_member ]
!3094 = metadata !{i32 589846, metadata !3077, metadata !"__off_t", metadata !3077, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !3095} ; [ DW_TAG_typedef ]
!3095 = metadata !{i32 589860, metadata !3066, metadata !"long int", metadata !3066, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3096 = metadata !{i32 589837, metadata !3071, metadata !"st_blksize", metadata !3075, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !3097} ; [ DW_TAG_member ]
!3097 = metadata !{i32 589846, metadata !3077, metadata !"__blksize_t", metadata !3077, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !3095} ; [ DW_TAG_typedef ]
!3098 = metadata !{i32 589837, metadata !3071, metadata !"st_blocks", metadata !3075, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !3099} ; [ DW_TAG_member ]
!3099 = metadata !{i32 589846, metadata !3077, metadata !"__blkcnt64_t", metadata !3077, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !3095} ; [ DW_TAG_typedef ]
!3100 = metadata !{i32 589837, metadata !3071, metadata !"st_atim", metadata !3075, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !3101} ; [ DW_TAG_member ]
!3101 = metadata !{i32 589843, metadata !3066, metadata !"timespec", metadata !3102, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !3103, i32 0, null} ; [ DW_TAG_structure_type ]
!3102 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !3067} ; [ DW_TAG_file_type ]
!3103 = metadata !{metadata !3104, metadata !3106}
!3104 = metadata !{i32 589837, metadata !3101, metadata !"tv_sec", metadata !3102, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !3105} ; [ DW_TAG_member ]
!3105 = metadata !{i32 589846, metadata !3077, metadata !"__time_t", metadata !3077, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !3095} ; [ DW_TAG_typedef ]
!3106 = metadata !{i32 589837, metadata !3101, metadata !"tv_nsec", metadata !3102, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3107} ; [ DW_TAG_member ]
!3107 = metadata !{i32 589846, metadata !3077, metadata !"__syscall_slong_t", metadata !3077, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !3095} ; [ DW_TAG_typedef ]
!3108 = metadata !{i32 589837, metadata !3071, metadata !"st_mtim", metadata !3075, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !3101} ; [ DW_TAG_member ]
!3109 = metadata !{i32 589837, metadata !3071, metadata !"st_ctim", metadata !3075, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !3101} ; [ DW_TAG_member ]
!3110 = metadata !{i32 589837, metadata !3071, metadata !"__glibc_reserved", metadata !3075, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !3111} ; [ DW_TAG_member ]
!3111 = metadata !{i32 589825, metadata !3066, metadata !"", metadata !3066, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !3107, metadata !3112, i32 0, null} ; [ DW_TAG_array_type ]
!3112 = metadata !{metadata !3113}
!3113 = metadata !{i32 589857, i64 0, i64 2}      ; [ DW_TAG_subrange_type ]
!3114 = metadata !{i32 589839, metadata !3066, metadata !"", metadata !3066, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3115} ; [ DW_TAG_pointer_type ]
!3115 = metadata !{i32 589843, metadata !3066, metadata !"stat", metadata !3075, i32 47, i64 1152, i64 64, i64 0, i32 0, null, metadata !3116, i32 0, null} ; [ DW_TAG_structure_type ]
!3116 = metadata !{metadata !3117, metadata !3118, metadata !3120, metadata !3121, metadata !3122, metadata !3123, metadata !3124, metadata !3125, metadata !3126, metadata !3127, metadata !3128, metadata !3130, metadata !3131, metadata !3132, metadata !3
!3117 = metadata !{i32 589837, metadata !3115, metadata !"st_dev", metadata !3075, i32 48, i64 64, i64 64, i64 0, i32 0, metadata !3076} ; [ DW_TAG_member ]
!3118 = metadata !{i32 589837, metadata !3115, metadata !"st_ino", metadata !3075, i32 53, i64 64, i64 64, i64 64, i32 0, metadata !3119} ; [ DW_TAG_member ]
!3119 = metadata !{i32 589846, metadata !3077, metadata !"__ino_t", metadata !3077, i32 128, i64 0, i64 0, i64 0, i32 0, metadata !3078} ; [ DW_TAG_typedef ]
!3120 = metadata !{i32 589837, metadata !3115, metadata !"st_nlink", metadata !3075, i32 61, i64 64, i64 64, i64 128, i32 0, metadata !3082} ; [ DW_TAG_member ]
!3121 = metadata !{i32 589837, metadata !3115, metadata !"st_mode", metadata !3075, i32 62, i64 32, i64 32, i64 192, i32 0, metadata !3084} ; [ DW_TAG_member ]
!3122 = metadata !{i32 589837, metadata !3115, metadata !"st_uid", metadata !3075, i32 64, i64 32, i64 32, i64 224, i32 0, metadata !3087} ; [ DW_TAG_member ]
!3123 = metadata !{i32 589837, metadata !3115, metadata !"st_gid", metadata !3075, i32 65, i64 32, i64 32, i64 256, i32 0, metadata !3089} ; [ DW_TAG_member ]
!3124 = metadata !{i32 589837, metadata !3115, metadata !"__pad0", metadata !3075, i32 67, i64 32, i64 32, i64 288, i32 0, metadata !3091} ; [ DW_TAG_member ]
!3125 = metadata !{i32 589837, metadata !3115, metadata !"st_rdev", metadata !3075, i32 69, i64 64, i64 64, i64 320, i32 0, metadata !3076} ; [ DW_TAG_member ]
!3126 = metadata !{i32 589837, metadata !3115, metadata !"st_size", metadata !3075, i32 74, i64 64, i64 64, i64 384, i32 0, metadata !3094} ; [ DW_TAG_member ]
!3127 = metadata !{i32 589837, metadata !3115, metadata !"st_blksize", metadata !3075, i32 78, i64 64, i64 64, i64 448, i32 0, metadata !3097} ; [ DW_TAG_member ]
!3128 = metadata !{i32 589837, metadata !3115, metadata !"st_blocks", metadata !3075, i32 80, i64 64, i64 64, i64 512, i32 0, metadata !3129} ; [ DW_TAG_member ]
!3129 = metadata !{i32 589846, metadata !3077, metadata !"__blkcnt_t", metadata !3077, i32 159, i64 0, i64 0, i64 0, i32 0, metadata !3095} ; [ DW_TAG_typedef ]
!3130 = metadata !{i32 589837, metadata !3115, metadata !"st_atim", metadata !3075, i32 91, i64 128, i64 64, i64 576, i32 0, metadata !3101} ; [ DW_TAG_member ]
!3131 = metadata !{i32 589837, metadata !3115, metadata !"st_mtim", metadata !3075, i32 92, i64 128, i64 64, i64 704, i32 0, metadata !3101} ; [ DW_TAG_member ]
!3132 = metadata !{i32 589837, metadata !3115, metadata !"st_ctim", metadata !3075, i32 93, i64 128, i64 64, i64 832, i32 0, metadata !3101} ; [ DW_TAG_member ]
!3133 = metadata !{i32 589837, metadata !3115, metadata !"__glibc_reserved", metadata !3075, i32 106, i64 192, i64 64, i64 960, i32 0, metadata !3111} ; [ DW_TAG_member ]
!3134 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"fstat64", metadata !"fstat64", metadata !"fstat64", metadata !3066, i32 207, metadata !3135, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.stat*)* @fstat64} ; [
!3135 = metadata !{i32 589845, metadata !3066, metadata !"", metadata !3066, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3136, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3136 = metadata !{metadata !3091, metadata !3091, metadata !3070}
!3137 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"fstat", metadata !"fstat", metadata !"fstat", metadata !3066, i32 119, metadata !3138, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.stat*)* @fstat} ; [ DW_TAG_
!3138 = metadata !{i32 589845, metadata !3066, metadata !"", metadata !3066, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3139, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3139 = metadata !{metadata !3091, metadata !3091, metadata !3114}
!3140 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"__fxstat", metadata !"__fxstat", metadata !"__fxstat", metadata !3066, i32 112, metadata !3141, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, %struct.stat*)* @__fx
!3141 = metadata !{i32 589845, metadata !3066, metadata !"", metadata !3066, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3142, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3142 = metadata !{metadata !3091, metadata !3091, metadata !3091, metadata !3114}
!3143 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"lstat64", metadata !"lstat64", metadata !"lstat64", metadata !3066, i32 203, metadata !3144, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @lstat64} ; [
!3144 = metadata !{i32 589845, metadata !3066, metadata !"", metadata !3066, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3145, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3145 = metadata !{metadata !3091, metadata !3146, metadata !3070}
!3146 = metadata !{i32 589839, metadata !3066, metadata !"", metadata !3066, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3147} ; [ DW_TAG_pointer_type ]
!3147 = metadata !{i32 589862, metadata !3066, metadata !"", metadata !3066, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3148} ; [ DW_TAG_const_type ]
!3148 = metadata !{i32 589860, metadata !3066, metadata !"char", metadata !3066, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3149 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"lstat", metadata !"lstat", metadata !"lstat", metadata !3066, i32 105, metadata !3150, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @lstat} ; [ DW_TAG_
!3150 = metadata !{i32 589845, metadata !3066, metadata !"", metadata !3066, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3151, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3151 = metadata !{metadata !3091, metadata !3146, metadata !3114}
!3152 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"__lxstat", metadata !"__lxstat", metadata !"__lxstat", metadata !3066, i32 98, metadata !3153, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, %struct.stat*)* @__lxs
!3153 = metadata !{i32 589845, metadata !3066, metadata !"", metadata !3066, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3154, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3154 = metadata !{metadata !3091, metadata !3091, metadata !3146, metadata !3114}
!3155 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"stat64", metadata !"stat64", metadata !"stat64", metadata !3066, i32 199, metadata !3144, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @stat64} ; [ DW_
!3156 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"stat", metadata !"stat", metadata !"stat", metadata !3066, i32 91, metadata !3150, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @stat} ; [ DW_TAG_subpr
!3157 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"__xstat", metadata !"__xstat", metadata !"__xstat", metadata !3066, i32 84, metadata !3153, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, %struct.stat*)* @__xstat}
!3158 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"lseek64", metadata !"lseek64", metadata !"lseek64", metadata !3066, i32 195, metadata !3159, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i64, i32)* @lseek64} ; [ DW_T
!3159 = metadata !{i32 589845, metadata !3066, metadata !"", metadata !3066, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3160, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3160 = metadata !{metadata !3161, metadata !3091, metadata !3161, metadata !3091}
!3161 = metadata !{i32 589846, metadata !3162, metadata !"off64_t", metadata !3162, i32 98, i64 0, i64 0, i64 0, i32 0, metadata !3095} ; [ DW_TAG_typedef ]
!3162 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !3067} ; [ DW_TAG_file_type ]
!3163 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"lseek", metadata !"lseek", metadata !"lseek", metadata !3066, i32 80, metadata !3164, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i64, i32)* @lseek} ; [ DW_TAG_subpro
!3164 = metadata !{i32 589845, metadata !3066, metadata !"", metadata !3066, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3165, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3165 = metadata !{metadata !3166, metadata !3091, metadata !3166, metadata !3091}
!3166 = metadata !{i32 589846, metadata !3162, metadata !"off_t", metadata !3162, i32 93, i64 0, i64 0, i64 0, i32 0, metadata !3095} ; [ DW_TAG_typedef ]
!3167 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"open64", metadata !"open64", metadata !"open64", metadata !3066, i32 181, metadata !3168, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, ...)* @open64} ; [ DW_TAG_s
!3168 = metadata !{i32 589845, metadata !3066, metadata !"", metadata !3066, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3169, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3169 = metadata !{metadata !3091, metadata !3146, metadata !3091}
!3170 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"open", metadata !"open", metadata !"open", metadata !3066, i32 66, metadata !3168, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, ...)* @open} ; [ DW_TAG_subprogram
!3171 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"getdents", metadata !"getdents", metadata !"getdents", metadata !3066, i32 155, metadata !3172, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.dirent*, i64)* @ge
!3172 = metadata !{i32 589845, metadata !3066, metadata !"", metadata !3066, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3173, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3173 = metadata !{metadata !3174, metadata !3091, metadata !3175, metadata !3187}
!3174 = metadata !{i32 589846, metadata !3162, metadata !"ssize_t", metadata !3162, i32 115, i64 0, i64 0, i64 0, i32 0, metadata !3095} ; [ DW_TAG_typedef ]
!3175 = metadata !{i32 589839, metadata !3066, metadata !"", metadata !3066, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3176} ; [ DW_TAG_pointer_type ]
!3176 = metadata !{i32 589843, metadata !3066, metadata !"dirent", metadata !3177, i32 23, i64 2240, i64 64, i64 0, i32 0, null, metadata !3178, i32 0, null} ; [ DW_TAG_structure_type ]
!3177 = metadata !{i32 589865, metadata !"dirent.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3067} ; [ DW_TAG_file_type ]
!3178 = metadata !{metadata !3179, metadata !3180, metadata !3181, metadata !3183, metadata !3185}
!3179 = metadata !{i32 589837, metadata !3176, metadata !"d_ino", metadata !3177, i32 25, i64 64, i64 64, i64 0, i32 0, metadata !3119} ; [ DW_TAG_member ]
!3180 = metadata !{i32 589837, metadata !3176, metadata !"d_off", metadata !3177, i32 26, i64 64, i64 64, i64 64, i32 0, metadata !3094} ; [ DW_TAG_member ]
!3181 = metadata !{i32 589837, metadata !3176, metadata !"d_reclen", metadata !3177, i32 31, i64 16, i64 16, i64 128, i32 0, metadata !3182} ; [ DW_TAG_member ]
!3182 = metadata !{i32 589860, metadata !3066, metadata !"short unsigned int", metadata !3066, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3183 = metadata !{i32 589837, metadata !3176, metadata !"d_type", metadata !3177, i32 32, i64 8, i64 8, i64 144, i32 0, metadata !3184} ; [ DW_TAG_member ]
!3184 = metadata !{i32 589860, metadata !3066, metadata !"unsigned char", metadata !3066, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!3185 = metadata !{i32 589837, metadata !3176, metadata !"d_name", metadata !3177, i32 33, i64 2048, i64 8, i64 152, i32 0, metadata !3186} ; [ DW_TAG_member ]
!3186 = metadata !{i32 589825, metadata !3066, metadata !"", metadata !3066, i32 0, i64 2048, i64 8, i64 0, i32 0, metadata !3148, metadata !843, i32 0, null} ; [ DW_TAG_array_type ]
!3187 = metadata !{i32 589846, metadata !3162, metadata !"size_t", metadata !3162, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !3078} ; [ DW_TAG_typedef ]
!3188 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"statfs", metadata !"statfs", metadata !"statfs", metadata !3066, i32 130, metadata !3189, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.statfs*)* @statfs} ; [ D
!3189 = metadata !{i32 589845, metadata !3066, metadata !"", metadata !3066, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3190, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3190 = metadata !{metadata !3091, metadata !3146, metadata !3191}
!3191 = metadata !{i32 589839, metadata !3066, metadata !"", metadata !3066, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3192} ; [ DW_TAG_pointer_type ]
!3192 = metadata !{i32 589843, metadata !3066, metadata !"statfs", metadata !3193, i32 25, i64 960, i64 64, i64 0, i32 0, null, metadata !3194, i32 0, null} ; [ DW_TAG_structure_type ]
!3193 = metadata !{i32 589865, metadata !"statfs.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3067} ; [ DW_TAG_file_type ]
!3194 = metadata !{metadata !3195, metadata !3197, metadata !3198, metadata !3200, metadata !3201, metadata !3202, metadata !3204, metadata !3205, metadata !3211, metadata !3212, metadata !3213, metadata !3214}
!3195 = metadata !{i32 589837, metadata !3192, metadata !"f_type", metadata !3193, i32 26, i64 64, i64 64, i64 0, i32 0, metadata !3196} ; [ DW_TAG_member ]
!3196 = metadata !{i32 589846, metadata !3077, metadata !"__fsword_t", metadata !3077, i32 172, i64 0, i64 0, i64 0, i32 0, metadata !3095} ; [ DW_TAG_typedef ]
!3197 = metadata !{i32 589837, metadata !3192, metadata !"f_bsize", metadata !3193, i32 27, i64 64, i64 64, i64 64, i32 0, metadata !3196} ; [ DW_TAG_member ]
!3198 = metadata !{i32 589837, metadata !3192, metadata !"f_blocks", metadata !3193, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !3199} ; [ DW_TAG_member ]
!3199 = metadata !{i32 589846, metadata !3077, metadata !"__fsblkcnt_t", metadata !3077, i32 163, i64 0, i64 0, i64 0, i32 0, metadata !3078} ; [ DW_TAG_typedef ]
!3200 = metadata !{i32 589837, metadata !3192, metadata !"f_bfree", metadata !3193, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !3199} ; [ DW_TAG_member ]
!3201 = metadata !{i32 589837, metadata !3192, metadata !"f_bavail", metadata !3193, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !3199} ; [ DW_TAG_member ]
!3202 = metadata !{i32 589837, metadata !3192, metadata !"f_files", metadata !3193, i32 32, i64 64, i64 64, i64 320, i32 0, metadata !3203} ; [ DW_TAG_member ]
!3203 = metadata !{i32 589846, metadata !3077, metadata !"__fsfilcnt_t", metadata !3077, i32 167, i64 0, i64 0, i64 0, i32 0, metadata !3078} ; [ DW_TAG_typedef ]
!3204 = metadata !{i32 589837, metadata !3192, metadata !"f_ffree", metadata !3193, i32 33, i64 64, i64 64, i64 384, i32 0, metadata !3203} ; [ DW_TAG_member ]
!3205 = metadata !{i32 589837, metadata !3192, metadata !"f_fsid", metadata !3193, i32 41, i64 64, i64 32, i64 448, i32 0, metadata !3206} ; [ DW_TAG_member ]
!3206 = metadata !{i32 589846, metadata !3077, metadata !"__fsid_t", metadata !3077, i32 135, i64 0, i64 0, i64 0, i32 0, metadata !3207} ; [ DW_TAG_typedef ]
!3207 = metadata !{i32 589843, metadata !3066, metadata !"", metadata !3077, i32 134, i64 64, i64 32, i64 0, i32 0, null, metadata !3208, i32 0, null} ; [ DW_TAG_structure_type ]
!3208 = metadata !{metadata !3209}
!3209 = metadata !{i32 589837, metadata !3207, metadata !"__val", metadata !3077, i32 134, i64 64, i64 32, i64 0, i32 0, metadata !3210} ; [ DW_TAG_member ]
!3210 = metadata !{i32 589825, metadata !3066, metadata !"", metadata !3066, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !3091, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!3211 = metadata !{i32 589837, metadata !3192, metadata !"f_namelen", metadata !3193, i32 42, i64 64, i64 64, i64 512, i32 0, metadata !3196} ; [ DW_TAG_member ]
!3212 = metadata !{i32 589837, metadata !3192, metadata !"f_frsize", metadata !3193, i32 43, i64 64, i64 64, i64 576, i32 0, metadata !3196} ; [ DW_TAG_member ]
!3213 = metadata !{i32 589837, metadata !3192, metadata !"f_flags", metadata !3193, i32 44, i64 64, i64 64, i64 640, i32 0, metadata !3196} ; [ DW_TAG_member ]
!3214 = metadata !{i32 589837, metadata !3192, metadata !"f_spare", metadata !3193, i32 45, i64 256, i64 64, i64 704, i32 0, metadata !3215} ; [ DW_TAG_member ]
!3215 = metadata !{i32 589825, metadata !3066, metadata !"", metadata !3066, i32 0, i64 256, i64 64, i64 0, i32 0, metadata !3196, metadata !838, i32 0, null} ; [ DW_TAG_array_type ]
!3216 = metadata !{i32 589870, i32 0, metadata !3066, metadata !"ftruncate", metadata !"ftruncate", metadata !"ftruncate", metadata !3066, i32 126, metadata !3217, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i64)* @ftruncate} ; [ D
!3217 = metadata !{i32 589845, metadata !3066, metadata !"", metadata !3066, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3218, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3218 = metadata !{metadata !3091, metadata !3091, metadata !3166}
!3219 = metadata !{i32 589870, i32 0, metadata !3220, metadata !"__getodigit", metadata !"__getodigit", metadata !"", metadata !3220, i32 27, metadata !3222, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3220 = metadata !{i32 589865, metadata !"klee_init_env.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3221} ; [ DW_TAG_file_type ]
!3221 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_init_env.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG
!3222 = metadata !{i32 589845, metadata !3220, metadata !"", metadata !3220, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3223, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3223 = metadata !{metadata !3224, metadata !3225}
!3224 = metadata !{i32 589860, metadata !3220, metadata !"int", metadata !3220, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3225 = metadata !{i32 589862, metadata !3220, metadata !"", metadata !3220, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3226} ; [ DW_TAG_const_type ]
!3226 = metadata !{i32 589860, metadata !3220, metadata !"char", metadata !3220, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3227 = metadata !{i32 589870, i32 0, metadata !3220, metadata !"__getxdigit", metadata !"__getxdigit", metadata !"", metadata !3220, i32 31, metadata !3222, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3228 = metadata !{i32 589870, i32 0, metadata !3220, metadata !"__isprint", metadata !"__isprint", metadata !"", metadata !3220, i32 124, metadata !3222, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3229 = metadata !{i32 589870, i32 0, metadata !3220, metadata !"__streq", metadata !"__streq", metadata !"", metadata !3220, i32 129, metadata !3230, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3230 = metadata !{i32 589845, metadata !3220, metadata !"", metadata !3220, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3231, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3231 = metadata !{metadata !3224, metadata !3232, metadata !3232}
!3232 = metadata !{i32 589839, metadata !3220, metadata !"", metadata !3220, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3225} ; [ DW_TAG_pointer_type ]
!3233 = metadata !{i32 589870, i32 0, metadata !3220, metadata !"__get_sym_str", metadata !"__get_sym_str", metadata !"", metadata !3220, i32 139, metadata !3234, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i32, i8*)* @__get_sym_str} ; [
!3234 = metadata !{i32 589845, metadata !3220, metadata !"", metadata !3220, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3235, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3235 = metadata !{metadata !3236, metadata !3224, metadata !3236}
!3236 = metadata !{i32 589839, metadata !3220, metadata !"", metadata !3220, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3226} ; [ DW_TAG_pointer_type ]
!3237 = metadata !{i32 589870, i32 0, metadata !3220, metadata !"__emit_error", metadata !"__emit_error", metadata !"", metadata !3220, i32 23, metadata !3238, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3238 = metadata !{i32 589845, metadata !3220, metadata !"", metadata !3220, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3239, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3239 = metadata !{null, metadata !3232}
!3240 = metadata !{i32 589870, i32 0, metadata !3220, metadata !"__str_to_int", metadata !"__str_to_int", metadata !"", metadata !3220, i32 40, metadata !3241, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3241 = metadata !{i32 589845, metadata !3220, metadata !"", metadata !3220, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3242, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3242 = metadata !{metadata !3243, metadata !3236, metadata !3232}
!3243 = metadata !{i32 589860, metadata !3220, metadata !"long int", metadata !3220, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3244 = metadata !{i32 589870, i32 0, metadata !3220, metadata !"__convert_escape_sequences", metadata !"__convert_escape_sequences", metadata !"", metadata !3220, i32 65, metadata !3245, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i8*)*
!3245 = metadata !{i32 589845, metadata !3220, metadata !"", metadata !3220, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3246, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3246 = metadata !{metadata !3247, metadata !3236}
!3247 = metadata !{i32 589846, metadata !3248, metadata !"size_t", metadata !3248, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !3249} ; [ DW_TAG_typedef ]
!3248 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !3221} ; [ DW_TAG_file_type ]
!3249 = metadata !{i32 589860, metadata !3220, metadata !"long unsigned int", metadata !3220, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3250 = metadata !{i32 589870, i32 0, metadata !3220, metadata !"__add_arg", metadata !"__add_arg", metadata !"", metadata !3220, i32 152, metadata !3251, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3251 = metadata !{i32 589845, metadata !3220, metadata !"", metadata !3220, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3252, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3252 = metadata !{null, metadata !3253, metadata !3254, metadata !3236, metadata !3224}
!3253 = metadata !{i32 589839, metadata !3220, metadata !"", metadata !3220, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3224} ; [ DW_TAG_pointer_type ]
!3254 = metadata !{i32 589839, metadata !3220, metadata !"", metadata !3220, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3236} ; [ DW_TAG_pointer_type ]
!3255 = metadata !{i32 589870, i32 0, metadata !3220, metadata !"klee_init_env", metadata !"klee_init_env", metadata !"klee_init_env", metadata !3220, i32 161, metadata !3256, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i32*, i8***)* @
!3256 = metadata !{i32 589845, metadata !3220, metadata !"", metadata !3220, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3257, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3257 = metadata !{null, metadata !3253, metadata !3258}
!3258 = metadata !{i32 589839, metadata !3220, metadata !"", metadata !3220, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3254} ; [ DW_TAG_pointer_type ]
!3259 = metadata !{i32 589870, i32 0, metadata !3260, metadata !"fork", metadata !"fork", metadata !"fork", metadata !3260, i32 62, metadata !3262, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 ()* @fork} ; [ DW_TAG_subprogram ]
!3260 = metadata !{i32 589865, metadata !"illegal.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3261} ; [ DW_TAG_file_type ]
!3261 = metadata !{i32 589841, i32 0, i32 1, metadata !"illegal.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compi
!3262 = metadata !{i32 589845, metadata !3260, metadata !"", metadata !3260, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3263, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3263 = metadata !{metadata !3264}
!3264 = metadata !{i32 589846, metadata !3265, metadata !"pid_t", metadata !3265, i32 267, i64 0, i64 0, i64 0, i32 0, metadata !3266} ; [ DW_TAG_typedef ]
!3265 = metadata !{i32 589865, metadata !"unistd.h", metadata !"/usr/include", metadata !3261} ; [ DW_TAG_file_type ]
!3266 = metadata !{i32 589860, metadata !3260, metadata !"int", metadata !3260, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3267 = metadata !{i32 589870, i32 0, metadata !3260, metadata !"vfork", metadata !"vfork", metadata !"vfork", metadata !3260, i32 68, metadata !3262, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 ()* @vfork} ; [ DW_TAG_subprogram ]
!3268 = metadata !{i32 589870, i32 0, metadata !3260, metadata !"execve", metadata !"execve", metadata !"execve", metadata !3260, i32 60, metadata !3269, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8**, i8**)* @execve} ; [ DW_TAG_
!3269 = metadata !{i32 589845, metadata !3260, metadata !"", metadata !3260, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3270, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3270 = metadata !{metadata !3266, metadata !3271, metadata !3274, metadata !3274}
!3271 = metadata !{i32 589839, metadata !3260, metadata !"", metadata !3260, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3272} ; [ DW_TAG_pointer_type ]
!3272 = metadata !{i32 589862, metadata !3260, metadata !"", metadata !3260, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3273} ; [ DW_TAG_const_type ]
!3273 = metadata !{i32 589860, metadata !3260, metadata !"char", metadata !3260, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3274 = metadata !{i32 589839, metadata !3260, metadata !"", metadata !3260, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3275} ; [ DW_TAG_pointer_type ]
!3275 = metadata !{i32 589862, metadata !3260, metadata !"", metadata !3260, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3276} ; [ DW_TAG_const_type ]
!3276 = metadata !{i32 589839, metadata !3260, metadata !"", metadata !3260, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3273} ; [ DW_TAG_pointer_type ]
!3277 = metadata !{i32 589870, i32 0, metadata !3260, metadata !"execvp", metadata !"execvp", metadata !"execvp", metadata !3260, i32 59, metadata !3278, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8**)* @execvp} ; [ DW_TAG_subpro
!3278 = metadata !{i32 589845, metadata !3260, metadata !"", metadata !3260, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3279, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3279 = metadata !{metadata !3266, metadata !3271, metadata !3274}
!3280 = metadata !{i32 589870, i32 0, metadata !3260, metadata !"execv", metadata !"execv", metadata !"execv", metadata !3260, i32 58, metadata !3278, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8**)* @execv} ; [ DW_TAG_subprogram
!3281 = metadata !{i32 589870, i32 0, metadata !3260, metadata !"execle", metadata !"execle", metadata !"execle", metadata !3260, i32 57, metadata !3282, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*, ...)* @execle} ; [ DW_TAG_su
!3282 = metadata !{i32 589845, metadata !3260, metadata !"", metadata !3260, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3283, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3283 = metadata !{metadata !3266, metadata !3271, metadata !3271}
!3284 = metadata !{i32 589870, i32 0, metadata !3260, metadata !"execlp", metadata !"execlp", metadata !"execlp", metadata !3260, i32 56, metadata !3282, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*, ...)* @execlp} ; [ DW_TAG_su
!3285 = metadata !{i32 589870, i32 0, metadata !3260, metadata !"execl", metadata !"execl", metadata !"execl", metadata !3260, i32 55, metadata !3282, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*, ...)* @execl} ; [ DW_TAG_subpro
!3286 = metadata !{i32 589870, i32 0, metadata !3260, metadata !"kill", metadata !"kill", metadata !"kill", metadata !3260, i32 22, metadata !3287, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @kill} ; [ DW_TAG_subprogram ]
!3287 = metadata !{i32 589845, metadata !3260, metadata !"", metadata !3260, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3288, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3288 = metadata !{metadata !3266, metadata !3264, metadata !3266}
!3289 = metadata !{i32 589870, i32 0, metadata !3260, metadata !"longjmp", metadata !"longjmp", metadata !"longjmp", metadata !3260, i32 34, metadata !3290, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (%struct.__jmp_buf_tag*, i32)* @lon
!3290 = metadata !{i32 589845, metadata !3260, metadata !"", metadata !3260, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3291, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3291 = metadata !{null, metadata !3292, metadata !3266}
!3292 = metadata !{i32 589839, metadata !3260, metadata !"", metadata !3260, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3293} ; [ DW_TAG_pointer_type ]
!3293 = metadata !{i32 589843, metadata !3260, metadata !"__jmp_buf_tag", metadata !3294, i32 35, i64 1600, i64 64, i64 0, i32 0, null, metadata !3295, i32 0, null} ; [ DW_TAG_structure_type ]
!3294 = metadata !{i32 589865, metadata !"setjmp.h", metadata !"/usr/include", metadata !3261} ; [ DW_TAG_file_type ]
!3295 = metadata !{metadata !3296, metadata !3302, metadata !3303}
!3296 = metadata !{i32 589837, metadata !3293, metadata !"__jmpbuf", metadata !3294, i32 40, i64 512, i64 64, i64 0, i32 0, metadata !3297} ; [ DW_TAG_member ]
!3297 = metadata !{i32 589846, metadata !3294, metadata !"__jmp_buf", metadata !3294, i32 35, i64 0, i64 0, i64 0, i32 0, metadata !3298} ; [ DW_TAG_typedef ]
!3298 = metadata !{i32 589825, metadata !3260, metadata !"", metadata !3260, i32 0, i64 512, i64 64, i64 0, i32 0, metadata !3299, metadata !3300, i32 0, null} ; [ DW_TAG_array_type ]
!3299 = metadata !{i32 589860, metadata !3260, metadata !"long int", metadata !3260, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3300 = metadata !{metadata !3301}
!3301 = metadata !{i32 589857, i64 0, i64 7}      ; [ DW_TAG_subrange_type ]
!3302 = metadata !{i32 589837, metadata !3293, metadata !"__mask_was_saved", metadata !3294, i32 41, i64 32, i64 32, i64 512, i32 0, metadata !3266} ; [ DW_TAG_member ]
!3303 = metadata !{i32 589837, metadata !3293, metadata !"__saved_mask", metadata !3294, i32 42, i64 1024, i64 64, i64 576, i32 0, metadata !3304} ; [ DW_TAG_member ]
!3304 = metadata !{i32 589846, metadata !3305, metadata !"__sigset_t", metadata !3305, i32 40, i64 0, i64 0, i64 0, i32 0, metadata !3306} ; [ DW_TAG_typedef ]
!3305 = metadata !{i32 589865, metadata !"signal.h", metadata !"/usr/include", metadata !3261} ; [ DW_TAG_file_type ]
!3306 = metadata !{i32 589843, metadata !3260, metadata !"", metadata !3307, i32 28, i64 1024, i64 64, i64 0, i32 0, null, metadata !3308, i32 0, null} ; [ DW_TAG_structure_type ]
!3307 = metadata !{i32 589865, metadata !"sigset.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3261} ; [ DW_TAG_file_type ]
!3308 = metadata !{metadata !3309}
!3309 = metadata !{i32 589837, metadata !3306, metadata !"__val", metadata !3307, i32 29, i64 1024, i64 64, i64 0, i32 0, metadata !3310} ; [ DW_TAG_member ]
!3310 = metadata !{i32 589825, metadata !3260, metadata !"", metadata !3260, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !3311, metadata !1334, i32 0, null} ; [ DW_TAG_array_type ]
!3311 = metadata !{i32 589860, metadata !3260, metadata !"long unsigned int", metadata !3260, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3312 = metadata !{i32 589870, i32 0, metadata !3260, metadata !"_setjmp", metadata !"_setjmp", metadata !"_setjmp", metadata !3260, i32 29, metadata !3313, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (%struct.__jmp_buf_tag*)* @_setjmp} 
!3313 = metadata !{i32 589845, metadata !3260, metadata !"", metadata !3260, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3314, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3314 = metadata !{metadata !3266, metadata !3292}
!3315 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__get_file", metadata !"__get_file", metadata !"__get_file", metadata !3316, i32 143, metadata !3318, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct.exe_file_t* (i32)* @__
!3316 = metadata !{i32 589865, metadata !"fd.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3317} ; [ DW_TAG_file_type ]
!3317 = metadata !{i32 589841, i32 0, i32 1, metadata !"fd.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compile_un
!3318 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3319, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3319 = metadata !{metadata !3320, metadata !3326}
!3320 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3321} ; [ DW_TAG_pointer_type ]
!3321 = metadata !{i32 589846, metadata !3322, metadata !"exe_file_t", metadata !3322, i32 59, i64 0, i64 0, i64 0, i32 0, metadata !3323} ; [ DW_TAG_typedef ]
!3322 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3317} ; [ DW_TAG_file_type ]
!3323 = metadata !{i32 589843, metadata !3316, metadata !"exe_file_t", metadata !3322, i32 44, i64 448, i64 64, i64 0, i32 0, null, metadata !3324, i32 0, null} ; [ DW_TAG_structure_type ]
!3324 = metadata !{metadata !3325, metadata !3327, metadata !3329, metadata !3333, metadata !3403, metadata !3404, metadata !3405}
!3325 = metadata !{i32 589837, metadata !3323, metadata !"fd", metadata !3322, i32 45, i64 32, i64 32, i64 0, i32 0, metadata !3326} ; [ DW_TAG_member ]
!3326 = metadata !{i32 589860, metadata !3316, metadata !"int", metadata !3316, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3327 = metadata !{i32 589837, metadata !3323, metadata !"flags", metadata !3322, i32 46, i64 32, i64 32, i64 32, i32 0, metadata !3328} ; [ DW_TAG_member ]
!3328 = metadata !{i32 589860, metadata !3316, metadata !"unsigned int", metadata !3316, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3329 = metadata !{i32 589837, metadata !3323, metadata !"off", metadata !3322, i32 49, i64 64, i64 64, i64 64, i32 0, metadata !3330} ; [ DW_TAG_member ]
!3330 = metadata !{i32 589846, metadata !3331, metadata !"off64_t", metadata !3331, i32 98, i64 0, i64 0, i64 0, i32 0, metadata !3332} ; [ DW_TAG_typedef ]
!3331 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !3317} ; [ DW_TAG_file_type ]
!3332 = metadata !{i32 589860, metadata !3316, metadata !"long int", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3333 = metadata !{i32 589837, metadata !3323, metadata !"dfile", metadata !3322, i32 50, i64 64, i64 64, i64 128, i32 0, metadata !3334} ; [ DW_TAG_member ]
!3334 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3335} ; [ DW_TAG_pointer_type ]
!3335 = metadata !{i32 589846, metadata !3322, metadata !"exe_disk_file_t", metadata !3322, i32 34, i64 0, i64 0, i64 0, i32 0, metadata !3336} ; [ DW_TAG_typedef ]
!3336 = metadata !{i32 589843, metadata !3316, metadata !"", metadata !3322, i32 26, i64 320, i64 64, i64 0, i32 0, null, metadata !3337, i32 0, null} ; [ DW_TAG_structure_type ]
!3337 = metadata !{metadata !3338, metadata !3339, metadata !3342, metadata !3343, metadata !3382}
!3338 = metadata !{i32 589837, metadata !3336, metadata !"size", metadata !3322, i32 27, i64 32, i64 32, i64 0, i32 0, metadata !3328} ; [ DW_TAG_member ]
!3339 = metadata !{i32 589837, metadata !3336, metadata !"contents", metadata !3322, i32 28, i64 64, i64 64, i64 64, i32 0, metadata !3340} ; [ DW_TAG_member ]
!3340 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3341} ; [ DW_TAG_pointer_type ]
!3341 = metadata !{i32 589860, metadata !3316, metadata !"char", metadata !3316, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3342 = metadata !{i32 589837, metadata !3336, metadata !"path", metadata !3322, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !3340} ; [ DW_TAG_member ]
!3343 = metadata !{i32 589837, metadata !3336, metadata !"stat", metadata !3322, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !3344} ; [ DW_TAG_member ]
!3344 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3345} ; [ DW_TAG_pointer_type ]
!3345 = metadata !{i32 589843, metadata !3316, metadata !"stat64", metadata !3322, i32 30, i64 1152, i64 64, i64 0, i32 0, null, metadata !3346, i32 0, null} ; [ DW_TAG_structure_type ]
!3346 = metadata !{metadata !3347, metadata !3352, metadata !3354, metadata !3356, metadata !3358, metadata !3360, metadata !3362, metadata !3363, metadata !3364, metadata !3366, metadata !3368, metadata !3370, metadata !3378, metadata !3379, metadata !3
!3347 = metadata !{i32 589837, metadata !3345, metadata !"st_dev", metadata !3348, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !3349} ; [ DW_TAG_member ]
!3348 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3317} ; [ DW_TAG_file_type ]
!3349 = metadata !{i32 589846, metadata !3350, metadata !"__dev_t", metadata !3350, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !3351} ; [ DW_TAG_typedef ]
!3350 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3317} ; [ DW_TAG_file_type ]
!3351 = metadata !{i32 589860, metadata !3316, metadata !"long unsigned int", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3352 = metadata !{i32 589837, metadata !3345, metadata !"st_ino", metadata !3348, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3353} ; [ DW_TAG_member ]
!3353 = metadata !{i32 589846, metadata !3350, metadata !"__ino64_t", metadata !3350, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !3351} ; [ DW_TAG_typedef ]
!3354 = metadata !{i32 589837, metadata !3345, metadata !"st_nlink", metadata !3348, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !3355} ; [ DW_TAG_member ]
!3355 = metadata !{i32 589846, metadata !3350, metadata !"__nlink_t", metadata !3350, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !3351} ; [ DW_TAG_typedef ]
!3356 = metadata !{i32 589837, metadata !3345, metadata !"st_mode", metadata !3348, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !3357} ; [ DW_TAG_member ]
!3357 = metadata !{i32 589846, metadata !3350, metadata !"__mode_t", metadata !3350, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !3328} ; [ DW_TAG_typedef ]
!3358 = metadata !{i32 589837, metadata !3345, metadata !"st_uid", metadata !3348, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !3359} ; [ DW_TAG_member ]
!3359 = metadata !{i32 589846, metadata !3350, metadata !"__uid_t", metadata !3350, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !3328} ; [ DW_TAG_typedef ]
!3360 = metadata !{i32 589837, metadata !3345, metadata !"st_gid", metadata !3348, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !3361} ; [ DW_TAG_member ]
!3361 = metadata !{i32 589846, metadata !3350, metadata !"__gid_t", metadata !3350, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !3328} ; [ DW_TAG_typedef ]
!3362 = metadata !{i32 589837, metadata !3345, metadata !"__pad0", metadata !3348, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !3326} ; [ DW_TAG_member ]
!3363 = metadata !{i32 589837, metadata !3345, metadata !"st_rdev", metadata !3348, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !3349} ; [ DW_TAG_member ]
!3364 = metadata !{i32 589837, metadata !3345, metadata !"st_size", metadata !3348, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !3365} ; [ DW_TAG_member ]
!3365 = metadata !{i32 589846, metadata !3350, metadata !"__off_t", metadata !3350, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !3332} ; [ DW_TAG_typedef ]
!3366 = metadata !{i32 589837, metadata !3345, metadata !"st_blksize", metadata !3348, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !3367} ; [ DW_TAG_member ]
!3367 = metadata !{i32 589846, metadata !3350, metadata !"__blksize_t", metadata !3350, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !3332} ; [ DW_TAG_typedef ]
!3368 = metadata !{i32 589837, metadata !3345, metadata !"st_blocks", metadata !3348, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !3369} ; [ DW_TAG_member ]
!3369 = metadata !{i32 589846, metadata !3350, metadata !"__blkcnt64_t", metadata !3350, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !3332} ; [ DW_TAG_typedef ]
!3370 = metadata !{i32 589837, metadata !3345, metadata !"st_atim", metadata !3348, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !3371} ; [ DW_TAG_member ]
!3371 = metadata !{i32 589843, metadata !3316, metadata !"timespec", metadata !3372, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !3373, i32 0, null} ; [ DW_TAG_structure_type ]
!3372 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !3317} ; [ DW_TAG_file_type ]
!3373 = metadata !{metadata !3374, metadata !3376}
!3374 = metadata !{i32 589837, metadata !3371, metadata !"tv_sec", metadata !3372, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !3375} ; [ DW_TAG_member ]
!3375 = metadata !{i32 589846, metadata !3350, metadata !"__time_t", metadata !3350, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !3332} ; [ DW_TAG_typedef ]
!3376 = metadata !{i32 589837, metadata !3371, metadata !"tv_nsec", metadata !3372, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3377} ; [ DW_TAG_member ]
!3377 = metadata !{i32 589846, metadata !3350, metadata !"__syscall_slong_t", metadata !3350, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !3332} ; [ DW_TAG_typedef ]
!3378 = metadata !{i32 589837, metadata !3345, metadata !"st_mtim", metadata !3348, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !3371} ; [ DW_TAG_member ]
!3379 = metadata !{i32 589837, metadata !3345, metadata !"st_ctim", metadata !3348, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !3371} ; [ DW_TAG_member ]
!3380 = metadata !{i32 589837, metadata !3345, metadata !"__glibc_reserved", metadata !3348, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !3381} ; [ DW_TAG_member ]
!3381 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !3377, metadata !3112, i32 0, null} ; [ DW_TAG_array_type ]
!3382 = metadata !{i32 589837, metadata !3336, metadata !"src", metadata !3322, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !3383} ; [ DW_TAG_member ]
!3383 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3384} ; [ DW_TAG_pointer_type ]
!3384 = metadata !{i32 589846, metadata !3322, metadata !"exe_sockaddr_t", metadata !3322, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !3385} ; [ DW_TAG_typedef ]
!3385 = metadata !{i32 589843, metadata !3316, metadata !"", metadata !3322, i32 21, i64 128, i64 64, i64 0, i32 0, null, metadata !3386, i32 0, null} ; [ DW_TAG_structure_type ]
!3386 = metadata !{metadata !3387, metadata !3400}
!3387 = metadata !{i32 589837, metadata !3385, metadata !"addr", metadata !3322, i32 22, i64 64, i64 64, i64 0, i32 0, metadata !3388} ; [ DW_TAG_member ]
!3388 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3389} ; [ DW_TAG_pointer_type ]
!3389 = metadata !{i32 589843, metadata !3316, metadata !"sockaddr_storage", metadata !3390, i32 163, i64 1024, i64 64, i64 0, i32 0, null, metadata !3391, i32 0, null} ; [ DW_TAG_structure_type ]
!3390 = metadata !{i32 589865, metadata !"socket.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3317} ; [ DW_TAG_file_type ]
!3391 = metadata !{metadata !3392, metadata !3395, metadata !3396}
!3392 = metadata !{i32 589837, metadata !3389, metadata !"ss_family", metadata !3390, i32 164, i64 16, i64 16, i64 0, i32 0, metadata !3393} ; [ DW_TAG_member ]
!3393 = metadata !{i32 589846, metadata !3390, metadata !"sa_family_t", metadata !3390, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !3394} ; [ DW_TAG_typedef ]
!3394 = metadata !{i32 589860, metadata !3316, metadata !"short unsigned int", metadata !3316, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3395 = metadata !{i32 589837, metadata !3389, metadata !"__ss_align", metadata !3390, i32 165, i64 64, i64 64, i64 64, i32 0, metadata !3351} ; [ DW_TAG_member ]
!3396 = metadata !{i32 589837, metadata !3389, metadata !"__ss_padding", metadata !3390, i32 166, i64 896, i64 8, i64 128, i32 0, metadata !3397} ; [ DW_TAG_member ]
!3397 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 896, i64 8, i64 0, i32 0, metadata !3341, metadata !3398, i32 0, null} ; [ DW_TAG_array_type ]
!3398 = metadata !{metadata !3399}
!3399 = metadata !{i32 589857, i64 0, i64 111}    ; [ DW_TAG_subrange_type ]
!3400 = metadata !{i32 589837, metadata !3385, metadata !"addrlen", metadata !3322, i32 23, i64 32, i64 32, i64 64, i32 0, metadata !3401} ; [ DW_TAG_member ]
!3401 = metadata !{i32 589846, metadata !3402, metadata !"socklen_t", metadata !3402, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !3328} ; [ DW_TAG_typedef ]
!3402 = metadata !{i32 589865, metadata !"socket_type.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3317} ; [ DW_TAG_file_type ]
!3403 = metadata !{i32 589837, metadata !3323, metadata !"local", metadata !3322, i32 51, i64 128, i64 64, i64 192, i32 0, metadata !3384} ; [ DW_TAG_member ]
!3404 = metadata !{i32 589837, metadata !3323, metadata !"foreign", metadata !3322, i32 52, i64 64, i64 64, i64 320, i32 0, metadata !3383} ; [ DW_TAG_member ]
!3405 = metadata !{i32 589837, metadata !3323, metadata !"domain", metadata !3322, i32 56, i64 32, i64 32, i64 384, i32 0, metadata !3326} ; [ DW_TAG_member ]
!3406 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"umask", metadata !"umask", metadata !"umask", metadata !3316, i32 203, metadata !3407, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @umask} ; [ DW_TAG_subprogram ]
!3407 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3408, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3408 = metadata !{metadata !3409, metadata !3409}
!3409 = metadata !{i32 589846, metadata !3331, metadata !"mode_t", metadata !3331, i32 75, i64 0, i64 0, i64 0, i32 0, metadata !3328} ; [ DW_TAG_typedef ]
!3410 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"has_permission", metadata !"has_permission", metadata !"", metadata !3316, i32 212, metadata !3411, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3411 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3412, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3412 = metadata !{metadata !3326, metadata !3326, metadata !3344}
!3413 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"sendfile", metadata !"sendfile", metadata !"sendfile", metadata !3316, i32 2483, metadata !3414, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i32, i64*, i64)* @sendfil
!3414 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3415, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3415 = metadata !{metadata !3416, metadata !3326, metadata !3326, metadata !3417, metadata !3419}
!3416 = metadata !{i32 589846, metadata !3331, metadata !"ssize_t", metadata !3331, i32 115, i64 0, i64 0, i64 0, i32 0, metadata !3332} ; [ DW_TAG_typedef ]
!3417 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3418} ; [ DW_TAG_pointer_type ]
!3418 = metadata !{i32 589846, metadata !3331, metadata !"off_t", metadata !3331, i32 93, i64 0, i64 0, i64 0, i32 0, metadata !3332} ; [ DW_TAG_typedef ]
!3419 = metadata !{i32 589846, metadata !3331, metadata !"size_t", metadata !3331, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !3351} ; [ DW_TAG_typedef ]
!3420 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"sendfile64", metadata !"sendfile64", metadata !"sendfile64", metadata !3316, i32 2499, metadata !3414, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i32, i64*, i64)* @s
!3421 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"fsync", metadata !"fsync", metadata !"fsync", metadata !3316, i32 1715, metadata !3422, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @fsync} ; [ DW_TAG_subprogram ]
!3422 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3423, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3423 = metadata !{metadata !3326, metadata !3326}
!3424 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"chroot", metadata !"chroot", metadata !"chroot", metadata !3316, i32 2075, metadata !3425, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @chroot} ; [ DW_TAG_subprogram
!3425 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3426, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3426 = metadata !{metadata !3326, metadata !3427}
!3427 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3428} ; [ DW_TAG_pointer_type ]
!3428 = metadata !{i32 589862, metadata !3316, metadata !"", metadata !3316, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3341} ; [ DW_TAG_const_type ]
!3429 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"fstatfs", metadata !"fstatfs", metadata !"fstatfs", metadata !3316, i32 1695, metadata !3430, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.statfs*)* @fstatfs} 
!3430 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3431, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3431 = metadata !{metadata !3326, metadata !3326, metadata !3432}
!3432 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3433} ; [ DW_TAG_pointer_type ]
!3433 = metadata !{i32 589843, metadata !3316, metadata !"statfs", metadata !3434, i32 25, i64 960, i64 64, i64 0, i32 0, null, metadata !3435, i32 0, null} ; [ DW_TAG_structure_type ]
!3434 = metadata !{i32 589865, metadata !"statfs.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3317} ; [ DW_TAG_file_type ]
!3435 = metadata !{metadata !3436, metadata !3438, metadata !3439, metadata !3441, metadata !3442, metadata !3443, metadata !3445, metadata !3446, metadata !3452, metadata !3453, metadata !3454, metadata !3455}
!3436 = metadata !{i32 589837, metadata !3433, metadata !"f_type", metadata !3434, i32 26, i64 64, i64 64, i64 0, i32 0, metadata !3437} ; [ DW_TAG_member ]
!3437 = metadata !{i32 589846, metadata !3350, metadata !"__fsword_t", metadata !3350, i32 172, i64 0, i64 0, i64 0, i32 0, metadata !3332} ; [ DW_TAG_typedef ]
!3438 = metadata !{i32 589837, metadata !3433, metadata !"f_bsize", metadata !3434, i32 27, i64 64, i64 64, i64 64, i32 0, metadata !3437} ; [ DW_TAG_member ]
!3439 = metadata !{i32 589837, metadata !3433, metadata !"f_blocks", metadata !3434, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !3440} ; [ DW_TAG_member ]
!3440 = metadata !{i32 589846, metadata !3350, metadata !"__fsblkcnt_t", metadata !3350, i32 163, i64 0, i64 0, i64 0, i32 0, metadata !3351} ; [ DW_TAG_typedef ]
!3441 = metadata !{i32 589837, metadata !3433, metadata !"f_bfree", metadata !3434, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !3440} ; [ DW_TAG_member ]
!3442 = metadata !{i32 589837, metadata !3433, metadata !"f_bavail", metadata !3434, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !3440} ; [ DW_TAG_member ]
!3443 = metadata !{i32 589837, metadata !3433, metadata !"f_files", metadata !3434, i32 32, i64 64, i64 64, i64 320, i32 0, metadata !3444} ; [ DW_TAG_member ]
!3444 = metadata !{i32 589846, metadata !3350, metadata !"__fsfilcnt_t", metadata !3350, i32 167, i64 0, i64 0, i64 0, i32 0, metadata !3351} ; [ DW_TAG_typedef ]
!3445 = metadata !{i32 589837, metadata !3433, metadata !"f_ffree", metadata !3434, i32 33, i64 64, i64 64, i64 384, i32 0, metadata !3444} ; [ DW_TAG_member ]
!3446 = metadata !{i32 589837, metadata !3433, metadata !"f_fsid", metadata !3434, i32 41, i64 64, i64 32, i64 448, i32 0, metadata !3447} ; [ DW_TAG_member ]
!3447 = metadata !{i32 589846, metadata !3350, metadata !"__fsid_t", metadata !3350, i32 135, i64 0, i64 0, i64 0, i32 0, metadata !3448} ; [ DW_TAG_typedef ]
!3448 = metadata !{i32 589843, metadata !3316, metadata !"", metadata !3350, i32 134, i64 64, i64 32, i64 0, i32 0, null, metadata !3449, i32 0, null} ; [ DW_TAG_structure_type ]
!3449 = metadata !{metadata !3450}
!3450 = metadata !{i32 589837, metadata !3448, metadata !"__val", metadata !3350, i32 134, i64 64, i64 32, i64 0, i32 0, metadata !3451} ; [ DW_TAG_member ]
!3451 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !3326, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!3452 = metadata !{i32 589837, metadata !3433, metadata !"f_namelen", metadata !3434, i32 42, i64 64, i64 64, i64 512, i32 0, metadata !3437} ; [ DW_TAG_member ]
!3453 = metadata !{i32 589837, metadata !3433, metadata !"f_frsize", metadata !3434, i32 43, i64 64, i64 64, i64 576, i32 0, metadata !3437} ; [ DW_TAG_member ]
!3454 = metadata !{i32 589837, metadata !3433, metadata !"f_flags", metadata !3434, i32 44, i64 64, i64 64, i64 640, i32 0, metadata !3437} ; [ DW_TAG_member ]
!3455 = metadata !{i32 589837, metadata !3433, metadata !"f_spare", metadata !3434, i32 45, i64 256, i64 64, i64 704, i32 0, metadata !3456} ; [ DW_TAG_member ]
!3456 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 256, i64 64, i64 0, i32 0, metadata !3437, metadata !838, i32 0, null} ; [ DW_TAG_array_type ]
!3457 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"fcntl", metadata !"fcntl", metadata !"fcntl", metadata !3316, i32 1611, metadata !3458, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, ...)* @fcntl} ; [ DW_TAG_subp
!3458 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3459, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3459 = metadata !{metadata !3326, metadata !3326, metadata !3326}
!3460 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"futimens", metadata !"futimens", metadata !"futimens", metadata !3316, i32 1169, metadata !3461, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.timespec*)* @futi
!3461 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3462, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3462 = metadata !{metadata !3326, metadata !3326, metadata !3463}
!3463 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3464} ; [ DW_TAG_pointer_type ]
!3464 = metadata !{i32 589862, metadata !3316, metadata !"", metadata !3316, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3371} ; [ DW_TAG_const_type ]
!3465 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__df_chown", metadata !"__df_chown", metadata !"", metadata !3316, i32 977, metadata !3466, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3466 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3467, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3467 = metadata !{metadata !3326, metadata !3334, metadata !3468, metadata !3469}
!3468 = metadata !{i32 589846, metadata !3331, metadata !"uid_t", metadata !3331, i32 86, i64 0, i64 0, i64 0, i32 0, metadata !3328} ; [ DW_TAG_typedef ]
!3469 = metadata !{i32 589846, metadata !3331, metadata !"gid_t", metadata !3331, i32 70, i64 0, i64 0, i64 0, i32 0, metadata !3328} ; [ DW_TAG_typedef ]
!3470 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"fchown", metadata !"fchown", metadata !"fchown", metadata !3316, i32 996, metadata !3471, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i32)* @fchown} ; [ DW_TAG_s
!3471 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3472, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3472 = metadata !{metadata !3326, metadata !3326, metadata !3468, metadata !3469}
!3473 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"fchdir", metadata !"fchdir", metadata !"fchdir", metadata !3316, i32 811, metadata !3422, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @fchdir} ; [ DW_TAG_subprogram 
!3474 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"ioctl", metadata !"ioctl", metadata !"ioctl", metadata !3316, i32 2303, metadata !3475, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i64, ...)* @ioctl} ; [ DW_TAG_subp
!3475 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3476, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3476 = metadata !{metadata !3326, metadata !3326, metadata !3351}
!3477 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__undo_get_new_fd", metadata !"__undo_get_new_fd", metadata !"__undo_get_new_fd", metadata !3316, i32 2149, metadata !3478, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (%s
!3478 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3479, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3479 = metadata !{null, metadata !3320}
!3480 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__get_new_fd", metadata !"__get_new_fd", metadata !"__get_new_fd", metadata !3316, i32 2127, metadata !3481, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (%struct.exe_file_t
!3481 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3482, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3482 = metadata !{metadata !3326, metadata !3483}
!3483 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3320} ; [ DW_TAG_pointer_type ]
!3484 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"select", metadata !"select", metadata !"select", metadata !3316, i32 1875, metadata !3485, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.__sigset_t*, %struct.__
!3485 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3486, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3486 = metadata !{metadata !3326, metadata !3326, metadata !3487, metadata !3487, metadata !3487, metadata !3495}
!3487 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3488} ; [ DW_TAG_pointer_type ]
!3488 = metadata !{i32 589846, metadata !3489, metadata !"fd_set", metadata !3489, i32 82, i64 0, i64 0, i64 0, i32 0, metadata !3490} ; [ DW_TAG_typedef ]
!3489 = metadata !{i32 589865, metadata !"select.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !3317} ; [ DW_TAG_file_type ]
!3490 = metadata !{i32 589843, metadata !3316, metadata !"", metadata !3489, i32 65, i64 1024, i64 64, i64 0, i32 0, null, metadata !3491, i32 0, null} ; [ DW_TAG_structure_type ]
!3491 = metadata !{metadata !3492}
!3492 = metadata !{i32 589837, metadata !3490, metadata !"fds_bits", metadata !3489, i32 69, i64 1024, i64 64, i64 0, i32 0, metadata !3493} ; [ DW_TAG_member ]
!3493 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !3494, metadata !1334, i32 0, null} ; [ DW_TAG_array_type ]
!3494 = metadata !{i32 589846, metadata !3489, metadata !"__fd_mask", metadata !3489, i32 65, i64 0, i64 0, i64 0, i32 0, metadata !3332} ; [ DW_TAG_typedef ]
!3495 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3496} ; [ DW_TAG_pointer_type ]
!3496 = metadata !{i32 589843, metadata !3316, metadata !"timeval", metadata !3497, i32 31, i64 128, i64 64, i64 0, i32 0, null, metadata !3498, i32 0, null} ; [ DW_TAG_structure_type ]
!3497 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3317} ; [ DW_TAG_file_type ]
!3498 = metadata !{metadata !3499, metadata !3500}
!3499 = metadata !{i32 589837, metadata !3496, metadata !"tv_sec", metadata !3497, i32 32, i64 64, i64 64, i64 0, i32 0, metadata !3375} ; [ DW_TAG_member ]
!3500 = metadata !{i32 589837, metadata !3496, metadata !"tv_usec", metadata !3497, i32 33, i64 64, i64 64, i64 64, i32 0, metadata !3501} ; [ DW_TAG_member ]
!3501 = metadata !{i32 589846, metadata !3350, metadata !"__suseconds_t", metadata !3350, i32 143, i64 0, i64 0, i64 0, i32 0, metadata !3332} ; [ DW_TAG_typedef ]
!3502 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"close", metadata !"close", metadata !"close", metadata !3316, i32 412, metadata !3422, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @close} ; [ DW_TAG_subprogram ]
!3503 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"dup2", metadata !"dup2", metadata !"dup2", metadata !3316, i32 1731, metadata !3458, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @dup2} ; [ DW_TAG_subprogram ]
!3504 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"dup", metadata !"dup", metadata !"dup", metadata !3316, i32 1779, metadata !3422, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @dup} ; [ DW_TAG_subprogram ]
!3505 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__fd_getdents", metadata !"__fd_getdents", metadata !"__fd_getdents", metadata !3316, i32 1367, metadata !3506, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.di
!3506 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3507, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3507 = metadata !{metadata !3326, metadata !3328, metadata !3508, metadata !3328}
!3508 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3509} ; [ DW_TAG_pointer_type ]
!3509 = metadata !{i32 589843, metadata !3316, metadata !"dirent64", metadata !3510, i32 38, i64 2240, i64 64, i64 0, i32 0, null, metadata !3511, i32 0, null} ; [ DW_TAG_structure_type ]
!3510 = metadata !{i32 589865, metadata !"dirent.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3317} ; [ DW_TAG_file_type ]
!3511 = metadata !{metadata !3512, metadata !3513, metadata !3515, metadata !3516, metadata !3518}
!3512 = metadata !{i32 589837, metadata !3509, metadata !"d_ino", metadata !3510, i32 39, i64 64, i64 64, i64 0, i32 0, metadata !3353} ; [ DW_TAG_member ]
!3513 = metadata !{i32 589837, metadata !3509, metadata !"d_off", metadata !3510, i32 40, i64 64, i64 64, i64 64, i32 0, metadata !3514} ; [ DW_TAG_member ]
!3514 = metadata !{i32 589846, metadata !3350, metadata !"__off64_t", metadata !3350, i32 133, i64 0, i64 0, i64 0, i32 0, metadata !3332} ; [ DW_TAG_typedef ]
!3515 = metadata !{i32 589837, metadata !3509, metadata !"d_reclen", metadata !3510, i32 41, i64 16, i64 16, i64 128, i32 0, metadata !3394} ; [ DW_TAG_member ]
!3516 = metadata !{i32 589837, metadata !3509, metadata !"d_type", metadata !3510, i32 42, i64 8, i64 8, i64 144, i32 0, metadata !3517} ; [ DW_TAG_member ]
!3517 = metadata !{i32 589860, metadata !3316, metadata !"unsigned char", metadata !3316, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!3518 = metadata !{i32 589837, metadata !3509, metadata !"d_name", metadata !3510, i32 43, i64 2048, i64 8, i64 152, i32 0, metadata !3519} ; [ DW_TAG_member ]
!3519 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 2048, i64 8, i64 0, i32 0, metadata !3341, metadata !843, i32 0, null} ; [ DW_TAG_array_type ]
!3520 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__fd_gather_write", metadata !"__fd_gather_write", metadata !"__fd_gather_write", metadata !3316, i32 2232, metadata !3521, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (%st
!3521 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3522, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3522 = metadata !{metadata !3416, metadata !3320, metadata !3523, metadata !3326}
!3523 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3524} ; [ DW_TAG_pointer_type ]
!3524 = metadata !{i32 589862, metadata !3316, metadata !"", metadata !3316, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3525} ; [ DW_TAG_const_type ]
!3525 = metadata !{i32 589843, metadata !3316, metadata !"iovec", metadata !3526, i32 44, i64 128, i64 64, i64 0, i32 0, null, metadata !3527, i32 0, null} ; [ DW_TAG_structure_type ]
!3526 = metadata !{i32 589865, metadata !"uio.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3317} ; [ DW_TAG_file_type ]
!3527 = metadata !{metadata !3528, metadata !3530}
!3528 = metadata !{i32 589837, metadata !3525, metadata !"iov_base", metadata !3526, i32 45, i64 64, i64 64, i64 0, i32 0, metadata !3529} ; [ DW_TAG_member ]
!3529 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!3530 = metadata !{i32 589837, metadata !3525, metadata !"iov_len", metadata !3526, i32 46, i64 64, i64 64, i64 64, i32 0, metadata !3419} ; [ DW_TAG_member ]
!3531 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"writev", metadata !"writev", metadata !"writev", metadata !3316, i32 2278, metadata !3532, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.iovec*, i32)* @writev} 
!3532 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3533, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3533 = metadata !{metadata !3416, metadata !3326, metadata !3523, metadata !3326}
!3534 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__fd_fstat", metadata !"__fd_fstat", metadata !"__fd_fstat", metadata !3316, i32 1028, metadata !3411, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.stat*)* @__
!3535 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__fd_scatter_read", metadata !"__fd_scatter_read", metadata !"__fd_scatter_read", metadata !3316, i32 2181, metadata !3521, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (%st
!3536 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"munmap", metadata !"munmap", metadata !"munmap", metadata !3316, i32 909, metadata !3537, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i64)* @munmap} ; [ DW_TAG_subpro
!3537 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3538, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3538 = metadata !{metadata !3326, metadata !3529, metadata !3419}
!3539 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"pipe", metadata !"pipe", metadata !"pipe", metadata !3316, i32 2154, metadata !3540, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32*)* @pipe} ; [ DW_TAG_subprogram ]
!3540 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3541, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3541 = metadata !{metadata !3326, metadata !3542}
!3542 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3326} ; [ DW_TAG_pointer_type ]
!3543 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__concretize_ptr", metadata !"__concretize_ptr", metadata !"", metadata !3316, i32 2019, metadata !3544, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram 
!3544 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3545, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3545 = metadata !{metadata !3529, metadata !3529}
!3546 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__concretize_string", metadata !"__concretize_string", metadata !"", metadata !3316, i32 2032, metadata !3547, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subpr
!3547 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3548, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3548 = metadata !{metadata !3427, metadata !3427}
!3549 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__get_sym_file_internal", metadata !"__get_sym_file_internal", metadata !"", metadata !3316, i32 61, metadata !3550, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct.exe_disk
!3550 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3551, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3551 = metadata !{metadata !3334, metadata !3427, metadata !3326, metadata !3552}
!3552 = metadata !{i32 589860, metadata !3316, metadata !"_Bool", metadata !3316, i32 0, i64 8, i64 8, i64 0, i32 0, i32 2} ; [ DW_TAG_base_type ]
!3553 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__get_sym_file", metadata !"__get_sym_file", metadata !"", metadata !3316, i32 56, metadata !3554, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3554 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3555, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3555 = metadata !{metadata !3334, metadata !3427}
!3556 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"utime", metadata !"utime", metadata !"utime", metadata !3316, i32 2108, metadata !3557, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @utime} ; [ DW_TAG_subprogra
!3557 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3558, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3558 = metadata !{metadata !3326, metadata !3427, metadata !3529}
!3559 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"readlink", metadata !"readlink", metadata !"readlink", metadata !3316, i32 1842, metadata !3560, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i8*, i8*, i64)* @readlink} ; [
!3560 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3561, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3561 = metadata !{metadata !3416, metadata !3427, metadata !3340, metadata !3419}
!3562 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"utimes", metadata !"utimes", metadata !"utimes", metadata !3316, i32 2090, metadata !3563, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.timespec*)* @utimes} ; 
!3563 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3564, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3564 = metadata !{metadata !3326, metadata !3427, metadata !3565}
!3565 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3566} ; [ DW_TAG_pointer_type ]
!3566 = metadata !{i32 589862, metadata !3316, metadata !"", metadata !3316, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3496} ; [ DW_TAG_const_type ]
!3567 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"unlink", metadata !"unlink", metadata !"unlink", metadata !3316, i32 1820, metadata !3425, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @unlink} ; [ DW_TAG_subprogram
!3568 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"rmdir", metadata !"rmdir", metadata !"rmdir", metadata !3316, i32 1801, metadata !3425, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @rmdir} ; [ DW_TAG_subprogram ]
!3569 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__fd_statfs", metadata !"__fd_statfs", metadata !"__fd_statfs", metadata !3316, i32 1678, metadata !3570, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.statfs*)
!3570 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3571, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3571 = metadata !{metadata !3326, metadata !3427, metadata !3432}
!3572 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"openat", metadata !"openat", metadata !"openat", metadata !3316, i32 1228, metadata !3573, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, i32, ...)* @openat} ; [ DW
!3573 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3574, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3574 = metadata !{metadata !3326, metadata !3326, metadata !3427, metadata !3326}
!3575 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"symlink", metadata !"symlink", metadata !"symlink", metadata !3316, i32 1209, metadata !3576, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @symlink} ; [ DW_TAG_s
!3576 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3577, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3577 = metadata !{metadata !3326, metadata !3427, metadata !3427}
!3578 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"link", metadata !"link", metadata !"link", metadata !3316, i32 1190, metadata !3576, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @link} ; [ DW_TAG_subprogram ]
!3579 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"futimesat", metadata !"futimesat", metadata !"futimesat", metadata !3316, i32 1139, metadata !3580, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, %struct.timespec*
!3580 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3581, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3581 = metadata !{metadata !3326, metadata !3326, metadata !3427, metadata !3565}
!3582 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"unlinkat", metadata !"unlinkat", metadata !"unlinkat", metadata !3316, i32 1106, metadata !3573, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, i32)* @unlinkat} ; [
!3583 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"fstatat", metadata !"fstatat", metadata !"fstatat", metadata !3316, i32 1065, metadata !3584, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, %struct.stat*, i32)* @f
!3584 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3585, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3585 = metadata !{metadata !3326, metadata !3326, metadata !3427, metadata !3586, metadata !3326}
!3586 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3587} ; [ DW_TAG_pointer_type ]
!3587 = metadata !{i32 589843, metadata !3316, metadata !"stat", metadata !3348, i32 47, i64 1152, i64 64, i64 0, i32 0, null, metadata !3588, i32 0, null} ; [ DW_TAG_structure_type ]
!3588 = metadata !{metadata !3589, metadata !3590, metadata !3592, metadata !3593, metadata !3594, metadata !3595, metadata !3596, metadata !3597, metadata !3598, metadata !3599, metadata !3600, metadata !3602, metadata !3603, metadata !3604, metadata !3
!3589 = metadata !{i32 589837, metadata !3587, metadata !"st_dev", metadata !3348, i32 48, i64 64, i64 64, i64 0, i32 0, metadata !3349} ; [ DW_TAG_member ]
!3590 = metadata !{i32 589837, metadata !3587, metadata !"st_ino", metadata !3348, i32 53, i64 64, i64 64, i64 64, i32 0, metadata !3591} ; [ DW_TAG_member ]
!3591 = metadata !{i32 589846, metadata !3350, metadata !"__ino_t", metadata !3350, i32 128, i64 0, i64 0, i64 0, i32 0, metadata !3351} ; [ DW_TAG_typedef ]
!3592 = metadata !{i32 589837, metadata !3587, metadata !"st_nlink", metadata !3348, i32 61, i64 64, i64 64, i64 128, i32 0, metadata !3355} ; [ DW_TAG_member ]
!3593 = metadata !{i32 589837, metadata !3587, metadata !"st_mode", metadata !3348, i32 62, i64 32, i64 32, i64 192, i32 0, metadata !3357} ; [ DW_TAG_member ]
!3594 = metadata !{i32 589837, metadata !3587, metadata !"st_uid", metadata !3348, i32 64, i64 32, i64 32, i64 224, i32 0, metadata !3359} ; [ DW_TAG_member ]
!3595 = metadata !{i32 589837, metadata !3587, metadata !"st_gid", metadata !3348, i32 65, i64 32, i64 32, i64 256, i32 0, metadata !3361} ; [ DW_TAG_member ]
!3596 = metadata !{i32 589837, metadata !3587, metadata !"__pad0", metadata !3348, i32 67, i64 32, i64 32, i64 288, i32 0, metadata !3326} ; [ DW_TAG_member ]
!3597 = metadata !{i32 589837, metadata !3587, metadata !"st_rdev", metadata !3348, i32 69, i64 64, i64 64, i64 320, i32 0, metadata !3349} ; [ DW_TAG_member ]
!3598 = metadata !{i32 589837, metadata !3587, metadata !"st_size", metadata !3348, i32 74, i64 64, i64 64, i64 384, i32 0, metadata !3365} ; [ DW_TAG_member ]
!3599 = metadata !{i32 589837, metadata !3587, metadata !"st_blksize", metadata !3348, i32 78, i64 64, i64 64, i64 448, i32 0, metadata !3367} ; [ DW_TAG_member ]
!3600 = metadata !{i32 589837, metadata !3587, metadata !"st_blocks", metadata !3348, i32 80, i64 64, i64 64, i64 512, i32 0, metadata !3601} ; [ DW_TAG_member ]
!3601 = metadata !{i32 589846, metadata !3350, metadata !"__blkcnt_t", metadata !3350, i32 159, i64 0, i64 0, i64 0, i32 0, metadata !3332} ; [ DW_TAG_typedef ]
!3602 = metadata !{i32 589837, metadata !3587, metadata !"st_atim", metadata !3348, i32 91, i64 128, i64 64, i64 576, i32 0, metadata !3371} ; [ DW_TAG_member ]
!3603 = metadata !{i32 589837, metadata !3587, metadata !"st_mtim", metadata !3348, i32 92, i64 128, i64 64, i64 704, i32 0, metadata !3371} ; [ DW_TAG_member ]
!3604 = metadata !{i32 589837, metadata !3587, metadata !"st_ctim", metadata !3348, i32 93, i64 128, i64 64, i64 832, i32 0, metadata !3371} ; [ DW_TAG_member ]
!3605 = metadata !{i32 589837, metadata !3587, metadata !"__glibc_reserved", metadata !3348, i32 106, i64 192, i64 64, i64 960, i32 0, metadata !3381} ; [ DW_TAG_member ]
!3606 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"lchown", metadata !"lchown", metadata !"lchown", metadata !3316, i32 1014, metadata !3607, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, i32)* @lchown} ; [ DW_TAG_
!3607 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3608, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3608 = metadata !{metadata !3326, metadata !3427, metadata !3468, metadata !3469}
!3609 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"chown", metadata !"chown", metadata !"chown", metadata !3316, i32 983, metadata !3607, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, i32)* @chown} ; [ DW_TAG_subpr
!3610 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"chdir", metadata !"chdir", metadata !"chdir", metadata !3316, i32 793, metadata !3425, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @chdir} ; [ DW_TAG_subprogram ]
!3611 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"euidaccess", metadata !"euidaccess", metadata !"euidaccess", metadata !3316, i32 184, metadata !3612, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32)* @euidaccess} ;
!3612 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3613, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3613 = metadata !{metadata !3326, metadata !3427, metadata !3326}
!3614 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"access", metadata !"access", metadata !"access", metadata !3316, i32 166, metadata !3612, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32)* @access} ; [ DW_TAG_subpro
!3615 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__concretize_size", metadata !"__concretize_size", metadata !"", metadata !3316, i32 2026, metadata !3616, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogra
!3616 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3617, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3617 = metadata !{metadata !3419, metadata !3419}
!3618 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"getcwd", metadata !"getcwd", metadata !"getcwd", metadata !3316, i32 1984, metadata !3619, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i64)* @getcwd} ; [ DW_TAG_subpr
!3619 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3620, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3620 = metadata !{metadata !3340, metadata !3340, metadata !3419}
!3621 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__fd_ftruncate", metadata !"__fd_ftruncate", metadata !"__fd_ftruncate", metadata !3316, i32 1333, metadata !3622, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i64)* @
!3622 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3623, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3623 = metadata !{metadata !3326, metadata !3326, metadata !3330}
!3624 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__fd_lseek", metadata !"__fd_lseek", metadata !"__fd_lseek", metadata !3316, i32 685, metadata !3625, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i64, i32)* @__fd_lse
!3625 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3626, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3626 = metadata !{metadata !3330, metadata !3326, metadata !3330, metadata !3326}
!3627 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"pread", metadata !"pread", metadata !"pread", metadata !3316, i32 540, metadata !3628, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i64)* @pread} ; [ DW_TAG_
!3628 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3629, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3629 = metadata !{metadata !3416, metadata !3326, metadata !3529, metadata !3419, metadata !3418}
!3630 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"read", metadata !"read", metadata !"read", metadata !3316, i32 455, metadata !3631, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64)* @read} ; [ DW_TAG_subprogra
!3631 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3632, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3632 = metadata !{metadata !3416, metadata !3326, metadata !3529, metadata !3419}
!3633 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"mmap_simple", metadata !"mmap_simple", metadata !"mmap_simple", metadata !3316, i32 831, metadata !3634, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i32, i64, i64)* @mmap_
!3634 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3635, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3635 = metadata !{metadata !3529, metadata !3326, metadata !3419, metadata !3418}
!3636 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"mmap", metadata !"mmap", metadata !"mmap", metadata !3316, i32 881, metadata !3637, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i64, i32, i32, i32, i64)* @mmap} ; [ D
!3637 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3638, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3638 = metadata !{metadata !3529, metadata !3529, metadata !3419, metadata !3326, metadata !3326, metadata !3326, metadata !3418}
!3639 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"mmap64", metadata !"mmap64", metadata !"mmap64", metadata !3316, i32 853, metadata !3640, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i64, i32, i32, i32, i64)* @mmap6
!3640 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3641, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3641 = metadata !{metadata !3529, metadata !3529, metadata !3419, metadata !3326, metadata !3326, metadata !3326, metadata !3330}
!3642 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__concretize_buffer", metadata !"__concretize_buffer", metadata !"", metadata !3316, i32 2056, metadata !3643, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subpr
!3643 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3644, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3644 = metadata !{metadata !3427, metadata !3427, metadata !3328}
!3645 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__df_chmod", metadata !"__df_chmod", metadata !"", metadata !3316, i32 915, metadata !3646, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3646 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3647, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3647 = metadata !{metadata !3326, metadata !3334, metadata !3409}
!3648 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"fchmod", metadata !"fchmod", metadata !"fchmod", metadata !3316, i32 950, metadata !3649, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @fchmod} ; [ DW_TAG_subpro
!3649 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3650, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3650 = metadata !{metadata !3326, metadata !3326, metadata !3409}
!3651 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"chmod", metadata !"chmod", metadata !"chmod", metadata !3316, i32 928, metadata !3652, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32)* @chmod} ; [ DW_TAG_subprogram
!3652 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3653, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3653 = metadata !{metadata !3326, metadata !3427, metadata !3409}
!3654 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__fd_lstat", metadata !"__fd_lstat", metadata !"__fd_lstat", metadata !3316, i32 771, metadata !3655, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @__f
!3655 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3656, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3656 = metadata !{metadata !3326, metadata !3427, metadata !3344}
!3657 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__fd_stat", metadata !"__fd_stat", metadata !"__fd_stat", metadata !3316, i32 742, metadata !3655, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @__fd_s
!3658 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"write", metadata !"write", metadata !"write", metadata !3316, i32 605, metadata !3631, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64)* @write} ; [ DW_TAG_subpr
!3659 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"atoi", metadata !"atoi", metadata !"atoi", metadata !3660, i32 279, metadata !3425, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3660 = metadata !{i32 589865, metadata !"stdlib.h", metadata !"/usr/include", metadata !3317} ; [ DW_TAG_file_type ]
!3661 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__fd_open", metadata !"__fd_open", metadata !"__fd_open", metadata !3316, i32 242, metadata !3662, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, i32)* @__fd_open} 
!3662 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3663, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3663 = metadata !{metadata !3326, metadata !3427, metadata !3326, metadata !3409}
!3664 = metadata !{i32 589870, i32 0, metadata !3316, metadata !"__fd_openat", metadata !"__fd_openat", metadata !"__fd_openat", metadata !3316, i32 358, metadata !3665, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, i32, i32)* @
!3665 = metadata !{i32 589845, metadata !3316, metadata !"", metadata !3316, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3666, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3666 = metadata !{metadata !3326, metadata !3326, metadata !3427, metadata !3326, metadata !3409}
!3667 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"gnu_dev_major", metadata !"gnu_dev_major", metadata !"gnu_dev_major", metadata !3668, i32 248, metadata !3670, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64)* @gnu_dev_m
!3668 = metadata !{i32 589865, metadata !"stubs.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3669} ; [ DW_TAG_file_type ]
!3669 = metadata !{i32 589841, i32 0, i32 1, metadata !"stubs.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compile
!3670 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3671, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3671 = metadata !{metadata !3672, metadata !3673}
!3672 = metadata !{i32 589860, metadata !3668, metadata !"unsigned int", metadata !3668, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3673 = metadata !{i32 589860, metadata !3668, metadata !"long long unsigned int", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3674 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"gnu_dev_minor", metadata !"gnu_dev_minor", metadata !"gnu_dev_minor", metadata !3668, i32 253, metadata !3670, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64)* @gnu_dev_m
!3675 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"gnu_dev_makedev", metadata !"gnu_dev_makedev", metadata !"gnu_dev_makedev", metadata !3668, i32 258, metadata !3676, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i32)*
!3676 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3677, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3677 = metadata !{metadata !3673, metadata !3672, metadata !3672}
!3678 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__get_sym_stream", metadata !"__get_sym_stream", metadata !"", metadata !3679, i32 88, metadata !3680, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3679 = metadata !{i32 589865, metadata !"sockets.c.inc", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3669} ; [ DW_TAG_file_type ]
!3680 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3681, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3681 = metadata !{metadata !3682}
!3682 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3683} ; [ DW_TAG_pointer_type ]
!3683 = metadata !{i32 589846, metadata !3684, metadata !"exe_disk_file_t", metadata !3684, i32 34, i64 0, i64 0, i64 0, i32 0, metadata !3685} ; [ DW_TAG_typedef ]
!3684 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3669} ; [ DW_TAG_file_type ]
!3685 = metadata !{i32 589843, metadata !3668, metadata !"", metadata !3684, i32 26, i64 320, i64 64, i64 0, i32 0, null, metadata !3686, i32 0, null} ; [ DW_TAG_structure_type ]
!3686 = metadata !{metadata !3687, metadata !3688, metadata !3691, metadata !3692, metadata !3733}
!3687 = metadata !{i32 589837, metadata !3685, metadata !"size", metadata !3684, i32 27, i64 32, i64 32, i64 0, i32 0, metadata !3672} ; [ DW_TAG_member ]
!3688 = metadata !{i32 589837, metadata !3685, metadata !"contents", metadata !3684, i32 28, i64 64, i64 64, i64 64, i32 0, metadata !3689} ; [ DW_TAG_member ]
!3689 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3690} ; [ DW_TAG_pointer_type ]
!3690 = metadata !{i32 589860, metadata !3668, metadata !"char", metadata !3668, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3691 = metadata !{i32 589837, metadata !3685, metadata !"path", metadata !3684, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !3689} ; [ DW_TAG_member ]
!3692 = metadata !{i32 589837, metadata !3685, metadata !"stat", metadata !3684, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !3693} ; [ DW_TAG_member ]
!3693 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3694} ; [ DW_TAG_pointer_type ]
!3694 = metadata !{i32 589843, metadata !3668, metadata !"stat64", metadata !3695, i32 120, i64 1152, i64 64, i64 0, i32 0, null, metadata !3696, i32 0, null} ; [ DW_TAG_structure_type ]
!3695 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3669} ; [ DW_TAG_file_type ]
!3696 = metadata !{metadata !3697, metadata !3701, metadata !3703, metadata !3705, metadata !3707, metadata !3709, metadata !3711, metadata !3713, metadata !3714, metadata !3717, metadata !3719, metadata !3721, metadata !3729, metadata !3730, metadata !3
!3697 = metadata !{i32 589837, metadata !3694, metadata !"st_dev", metadata !3695, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !3698} ; [ DW_TAG_member ]
!3698 = metadata !{i32 589846, metadata !3699, metadata !"__dev_t", metadata !3699, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !3700} ; [ DW_TAG_typedef ]
!3699 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3669} ; [ DW_TAG_file_type ]
!3700 = metadata !{i32 589860, metadata !3668, metadata !"long unsigned int", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3701 = metadata !{i32 589837, metadata !3694, metadata !"st_ino", metadata !3695, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3702} ; [ DW_TAG_member ]
!3702 = metadata !{i32 589846, metadata !3699, metadata !"__ino64_t", metadata !3699, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !3700} ; [ DW_TAG_typedef ]
!3703 = metadata !{i32 589837, metadata !3694, metadata !"st_nlink", metadata !3695, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !3704} ; [ DW_TAG_member ]
!3704 = metadata !{i32 589846, metadata !3699, metadata !"__nlink_t", metadata !3699, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !3700} ; [ DW_TAG_typedef ]
!3705 = metadata !{i32 589837, metadata !3694, metadata !"st_mode", metadata !3695, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !3706} ; [ DW_TAG_member ]
!3706 = metadata !{i32 589846, metadata !3699, metadata !"__mode_t", metadata !3699, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !3672} ; [ DW_TAG_typedef ]
!3707 = metadata !{i32 589837, metadata !3694, metadata !"st_uid", metadata !3695, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !3708} ; [ DW_TAG_member ]
!3708 = metadata !{i32 589846, metadata !3699, metadata !"__uid_t", metadata !3699, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !3672} ; [ DW_TAG_typedef ]
!3709 = metadata !{i32 589837, metadata !3694, metadata !"st_gid", metadata !3695, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !3710} ; [ DW_TAG_member ]
!3710 = metadata !{i32 589846, metadata !3699, metadata !"__gid_t", metadata !3699, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !3672} ; [ DW_TAG_typedef ]
!3711 = metadata !{i32 589837, metadata !3694, metadata !"__pad0", metadata !3695, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3712 = metadata !{i32 589860, metadata !3668, metadata !"int", metadata !3668, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3713 = metadata !{i32 589837, metadata !3694, metadata !"st_rdev", metadata !3695, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !3698} ; [ DW_TAG_member ]
!3714 = metadata !{i32 589837, metadata !3694, metadata !"st_size", metadata !3695, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !3715} ; [ DW_TAG_member ]
!3715 = metadata !{i32 589846, metadata !3699, metadata !"__off_t", metadata !3699, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !3716} ; [ DW_TAG_typedef ]
!3716 = metadata !{i32 589860, metadata !3668, metadata !"long int", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3717 = metadata !{i32 589837, metadata !3694, metadata !"st_blksize", metadata !3695, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !3718} ; [ DW_TAG_member ]
!3718 = metadata !{i32 589846, metadata !3699, metadata !"__blksize_t", metadata !3699, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !3716} ; [ DW_TAG_typedef ]
!3719 = metadata !{i32 589837, metadata !3694, metadata !"st_blocks", metadata !3695, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !3720} ; [ DW_TAG_member ]
!3720 = metadata !{i32 589846, metadata !3699, metadata !"__blkcnt64_t", metadata !3699, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !3716} ; [ DW_TAG_typedef ]
!3721 = metadata !{i32 589837, metadata !3694, metadata !"st_atim", metadata !3695, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !3722} ; [ DW_TAG_member ]
!3722 = metadata !{i32 589843, metadata !3668, metadata !"timespec", metadata !3723, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !3724, i32 0, null} ; [ DW_TAG_structure_type ]
!3723 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !3669} ; [ DW_TAG_file_type ]
!3724 = metadata !{metadata !3725, metadata !3727}
!3725 = metadata !{i32 589837, metadata !3722, metadata !"tv_sec", metadata !3723, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !3726} ; [ DW_TAG_member ]
!3726 = metadata !{i32 589846, metadata !3699, metadata !"__time_t", metadata !3699, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !3716} ; [ DW_TAG_typedef ]
!3727 = metadata !{i32 589837, metadata !3722, metadata !"tv_nsec", metadata !3723, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3728} ; [ DW_TAG_member ]
!3728 = metadata !{i32 589846, metadata !3699, metadata !"__syscall_slong_t", metadata !3699, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !3716} ; [ DW_TAG_typedef ]
!3729 = metadata !{i32 589837, metadata !3694, metadata !"st_mtim", metadata !3695, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !3722} ; [ DW_TAG_member ]
!3730 = metadata !{i32 589837, metadata !3694, metadata !"st_ctim", metadata !3695, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !3722} ; [ DW_TAG_member ]
!3731 = metadata !{i32 589837, metadata !3694, metadata !"__glibc_reserved", metadata !3695, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !3732} ; [ DW_TAG_member ]
!3732 = metadata !{i32 589825, metadata !3668, metadata !"", metadata !3668, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !3728, metadata !3112, i32 0, null} ; [ DW_TAG_array_type ]
!3733 = metadata !{i32 589837, metadata !3685, metadata !"src", metadata !3684, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !3734} ; [ DW_TAG_member ]
!3734 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3735} ; [ DW_TAG_pointer_type ]
!3735 = metadata !{i32 589846, metadata !3684, metadata !"exe_sockaddr_t", metadata !3684, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !3736} ; [ DW_TAG_typedef ]
!3736 = metadata !{i32 589843, metadata !3668, metadata !"", metadata !3684, i32 21, i64 128, i64 64, i64 0, i32 0, null, metadata !3737, i32 0, null} ; [ DW_TAG_structure_type ]
!3737 = metadata !{metadata !3738, metadata !3749}
!3738 = metadata !{i32 589837, metadata !3736, metadata !"addr", metadata !3684, i32 22, i64 64, i64 64, i64 0, i32 0, metadata !3739} ; [ DW_TAG_member ]
!3739 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3740} ; [ DW_TAG_pointer_type ]
!3740 = metadata !{i32 589843, metadata !3668, metadata !"sockaddr_storage", metadata !3741, i32 163, i64 1024, i64 64, i64 0, i32 0, null, metadata !3742, i32 0, null} ; [ DW_TAG_structure_type ]
!3741 = metadata !{i32 589865, metadata !"socket.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3669} ; [ DW_TAG_file_type ]
!3742 = metadata !{metadata !3743, metadata !3746, metadata !3747}
!3743 = metadata !{i32 589837, metadata !3740, metadata !"ss_family", metadata !3741, i32 164, i64 16, i64 16, i64 0, i32 0, metadata !3744} ; [ DW_TAG_member ]
!3744 = metadata !{i32 589846, metadata !3741, metadata !"sa_family_t", metadata !3741, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !3745} ; [ DW_TAG_typedef ]
!3745 = metadata !{i32 589860, metadata !3668, metadata !"short unsigned int", metadata !3668, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3746 = metadata !{i32 589837, metadata !3740, metadata !"__ss_align", metadata !3741, i32 165, i64 64, i64 64, i64 64, i32 0, metadata !3700} ; [ DW_TAG_member ]
!3747 = metadata !{i32 589837, metadata !3740, metadata !"__ss_padding", metadata !3741, i32 166, i64 896, i64 8, i64 128, i32 0, metadata !3748} ; [ DW_TAG_member ]
!3748 = metadata !{i32 589825, metadata !3668, metadata !"", metadata !3668, i32 0, i64 896, i64 8, i64 0, i32 0, metadata !3690, metadata !3398, i32 0, null} ; [ DW_TAG_array_type ]
!3749 = metadata !{i32 589837, metadata !3736, metadata !"addrlen", metadata !3684, i32 23, i64 32, i64 32, i64 64, i32 0, metadata !3750} ; [ DW_TAG_member ]
!3750 = metadata !{i32 589846, metadata !3751, metadata !"socklen_t", metadata !3751, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !3672} ; [ DW_TAG_typedef ]
!3751 = metadata !{i32 589865, metadata !"confname.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3669} ; [ DW_TAG_file_type ]
!3752 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__get_sym_dgram", metadata !"__get_sym_dgram", metadata !"", metadata !3679, i32 99, metadata !3680, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3753 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"getsockopt", metadata !"getsockopt", metadata !"getsockopt", metadata !3679, i32 861, metadata !3754, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i32, i8*, i32*)
!3754 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3755, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3755 = metadata !{metadata !3712, metadata !3712, metadata !3712, metadata !3712, metadata !3756, metadata !3757}
!3756 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!3757 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3750} ; [ DW_TAG_pointer_type ]
!3758 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"setsockopt", metadata !"setsockopt", metadata !"setsockopt", metadata !3679, i32 867, metadata !3759, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i32, i8*, i32)*
!3759 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3760, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3760 = metadata !{metadata !3712, metadata !3712, metadata !3712, metadata !3712, metadata !3756, metadata !3750}
!3761 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_attach_dgram", metadata !"__fd_attach_dgram", metadata !"__fd_attach_dgram", metadata !3679, i32 838, metadata !3762, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (%str
!3762 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3763, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3763 = metadata !{metadata !3764, metadata !3766}
!3764 = metadata !{i32 589846, metadata !3765, metadata !"ssize_t", metadata !3765, i32 110, i64 0, i64 0, i64 0, i32 0, metadata !3716} ; [ DW_TAG_typedef ]
!3765 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/usr/include", metadata !3669} ; [ DW_TAG_file_type ]
!3766 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3767} ; [ DW_TAG_pointer_type ]
!3767 = metadata !{i32 589843, metadata !3668, metadata !"exe_file_t", metadata !3768, i32 8, i64 448, i64 64, i64 0, i32 0, null, metadata !3769, i32 0, null} ; [ DW_TAG_structure_type ]
!3768 = metadata !{i32 589865, metadata !"sockets.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3669} ; [ DW_TAG_file_type ]
!3769 = metadata !{metadata !3770, metadata !3771, metadata !3772, metadata !3774, metadata !3775, metadata !3776, metadata !3777}
!3770 = metadata !{i32 589837, metadata !3767, metadata !"fd", metadata !3684, i32 45, i64 32, i64 32, i64 0, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3771 = metadata !{i32 589837, metadata !3767, metadata !"flags", metadata !3684, i32 46, i64 32, i64 32, i64 32, i32 0, metadata !3672} ; [ DW_TAG_member ]
!3772 = metadata !{i32 589837, metadata !3767, metadata !"off", metadata !3684, i32 49, i64 64, i64 64, i64 64, i32 0, metadata !3773} ; [ DW_TAG_member ]
!3773 = metadata !{i32 589846, metadata !3765, metadata !"off64_t", metadata !3765, i32 102, i64 0, i64 0, i64 0, i32 0, metadata !3716} ; [ DW_TAG_typedef ]
!3774 = metadata !{i32 589837, metadata !3767, metadata !"dfile", metadata !3684, i32 50, i64 64, i64 64, i64 128, i32 0, metadata !3682} ; [ DW_TAG_member ]
!3775 = metadata !{i32 589837, metadata !3767, metadata !"local", metadata !3684, i32 51, i64 128, i64 64, i64 192, i32 0, metadata !3735} ; [ DW_TAG_member ]
!3776 = metadata !{i32 589837, metadata !3767, metadata !"foreign", metadata !3684, i32 52, i64 64, i64 64, i64 320, i32 0, metadata !3734} ; [ DW_TAG_member ]
!3777 = metadata !{i32 589837, metadata !3767, metadata !"domain", metadata !3684, i32 56, i64 32, i64 32, i64 384, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3778 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"cap_get_file", metadata !"cap_get_file", metadata !"cap_get_file", metadata !3668, i32 592, metadata !3779, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct._cap_struct* (i8
!3779 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3780, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3780 = metadata !{metadata !3781, metadata !3785}
!3781 = metadata !{i32 589846, metadata !3782, metadata !"cap_t", metadata !3782, i32 49, i64 0, i64 0, i64 0, i32 0, metadata !3783} ; [ DW_TAG_typedef ]
!3782 = metadata !{i32 589865, metadata !"capability.h", metadata !"/usr/include/sys", metadata !3669} ; [ DW_TAG_file_type ]
!3783 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3784} ; [ DW_TAG_pointer_type ]
!3784 = metadata !{i32 589843, metadata !3668, metadata !"_cap_struct", metadata !3782, i32 41, i64 0, i64 0, i64 0, i32 4, null, null, i32 0, null} ; [ DW_TAG_structure_type ]
!3785 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3786} ; [ DW_TAG_pointer_type ]
!3786 = metadata !{i32 589862, metadata !3668, metadata !"", metadata !3668, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3690} ; [ DW_TAG_const_type ]
!3787 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"getenv", metadata !"getenv", metadata !"getenv", metadata !3668, i32 585, metadata !3788, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*)* @getenv} ; [ DW_TAG_subprogram 
!3788 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3789, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3789 = metadata !{metadata !3689, metadata !3785}
!3790 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"setlocale", metadata !"setlocale", metadata !"setlocale", metadata !3668, i32 579, metadata !3791, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i32, i8*)* @setlocale} ; [ D
!3791 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3792, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3792 = metadata !{metadata !3689, metadata !3712, metadata !3689}
!3793 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"clock_settime", metadata !"clock_settime", metadata !"clock_settime", metadata !3668, i32 171, metadata !3794, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.tim
!3794 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3795, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3795 = metadata !{metadata !3712, metadata !3796, metadata !3797}
!3796 = metadata !{i32 589846, metadata !3723, metadata !"clockid_t", metadata !3723, i32 103, i64 0, i64 0, i64 0, i32 0, metadata !3712} ; [ DW_TAG_typedef ]
!3797 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3798} ; [ DW_TAG_pointer_type ]
!3798 = metadata !{i32 589862, metadata !3668, metadata !"", metadata !3668, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3722} ; [ DW_TAG_const_type ]
!3799 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_recvmsg", metadata !"__fd_recvmsg", metadata !"__fd_recvmsg", metadata !3679, i32 799, metadata !3800, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.msghdr
!3800 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3801, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3801 = metadata !{metadata !3764, metadata !3712, metadata !3802, metadata !3712}
!3802 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3803} ; [ DW_TAG_pointer_type ]
!3803 = metadata !{i32 589843, metadata !3668, metadata !"msghdr", metadata !3741, i32 225, i64 448, i64 64, i64 0, i32 0, null, metadata !3804, i32 0, null} ; [ DW_TAG_structure_type ]
!3804 = metadata !{metadata !3805, metadata !3806, metadata !3807, metadata !3816, metadata !3817, metadata !3818, metadata !3819}
!3805 = metadata !{i32 589837, metadata !3803, metadata !"msg_name", metadata !3741, i32 226, i64 64, i64 64, i64 0, i32 0, metadata !3756} ; [ DW_TAG_member ]
!3806 = metadata !{i32 589837, metadata !3803, metadata !"msg_namelen", metadata !3741, i32 227, i64 32, i64 32, i64 64, i32 0, metadata !3750} ; [ DW_TAG_member ]
!3807 = metadata !{i32 589837, metadata !3803, metadata !"msg_iov", metadata !3741, i32 229, i64 64, i64 64, i64 128, i32 0, metadata !3808} ; [ DW_TAG_member ]
!3808 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3809} ; [ DW_TAG_pointer_type ]
!3809 = metadata !{i32 589843, metadata !3668, metadata !"iovec", metadata !3810, i32 44, i64 128, i64 64, i64 0, i32 0, null, metadata !3811, i32 0, null} ; [ DW_TAG_structure_type ]
!3810 = metadata !{i32 589865, metadata !"uio.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3669} ; [ DW_TAG_file_type ]
!3811 = metadata !{metadata !3812, metadata !3813}
!3812 = metadata !{i32 589837, metadata !3809, metadata !"iov_base", metadata !3810, i32 45, i64 64, i64 64, i64 0, i32 0, metadata !3756} ; [ DW_TAG_member ]
!3813 = metadata !{i32 589837, metadata !3809, metadata !"iov_len", metadata !3810, i32 46, i64 64, i64 64, i64 64, i32 0, metadata !3814} ; [ DW_TAG_member ]
!3814 = metadata !{i32 589846, metadata !3815, metadata !"size_t", metadata !3815, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !3700} ; [ DW_TAG_typedef ]
!3815 = metadata !{i32 589865, metadata !"sigstack.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3669} ; [ DW_TAG_file_type ]
!3816 = metadata !{i32 589837, metadata !3803, metadata !"msg_iovlen", metadata !3741, i32 230, i64 64, i64 64, i64 192, i32 0, metadata !3814} ; [ DW_TAG_member ]
!3817 = metadata !{i32 589837, metadata !3803, metadata !"msg_control", metadata !3741, i32 232, i64 64, i64 64, i64 256, i32 0, metadata !3756} ; [ DW_TAG_member ]
!3818 = metadata !{i32 589837, metadata !3803, metadata !"msg_controllen", metadata !3741, i32 233, i64 64, i64 64, i64 320, i32 0, metadata !3814} ; [ DW_TAG_member ]
!3819 = metadata !{i32 589837, metadata !3803, metadata !"msg_flags", metadata !3741, i32 238, i64 32, i64 32, i64 384, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3820 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"recvmsg", metadata !"recvmsg", metadata !"recvmsg", metadata !3679, i32 794, metadata !3800, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.msghdr*, i32)* @recvm
!3821 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_recvfrom", metadata !"__fd_recvfrom", metadata !"__fd_recvfrom", metadata !3679, i32 706, metadata !3822, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i
!3822 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3823, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3823 = metadata !{metadata !3764, metadata !3712, metadata !3756, metadata !3814, metadata !3712, metadata !3824, metadata !3757}
!3824 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3825} ; [ DW_TAG_pointer_type ]
!3825 = metadata !{i32 589843, metadata !3668, metadata !"sockaddr", metadata !3741, i32 150, i64 128, i64 16, i64 0, i32 0, null, metadata !3826, i32 0, null} ; [ DW_TAG_structure_type ]
!3826 = metadata !{metadata !3827, metadata !3828}
!3827 = metadata !{i32 589837, metadata !3825, metadata !"sa_family", metadata !3741, i32 151, i64 16, i64 16, i64 0, i32 0, metadata !3744} ; [ DW_TAG_member ]
!3828 = metadata !{i32 589837, metadata !3825, metadata !"sa_data", metadata !3741, i32 152, i64 112, i64 8, i64 16, i32 0, metadata !3829} ; [ DW_TAG_member ]
!3829 = metadata !{i32 589825, metadata !3668, metadata !"", metadata !3668, i32 0, i64 112, i64 8, i64 0, i32 0, metadata !3690, metadata !3830, i32 0, null} ; [ DW_TAG_array_type ]
!3830 = metadata !{metadata !3831}
!3831 = metadata !{i32 589857, i64 0, i64 13}     ; [ DW_TAG_subrange_type ]
!3832 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"recvfrom", metadata !"recvfrom", metadata !"recvfrom", metadata !3679, i32 701, metadata !3822, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32, %struct.soc
!3833 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_recv", metadata !"__fd_recv", metadata !"__fd_recv", metadata !3679, i32 672, metadata !3834, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32)* @__fd_r
!3834 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3835, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3835 = metadata !{metadata !3764, metadata !3712, metadata !3756, metadata !3814, metadata !3712}
!3836 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"recv", metadata !"recv", metadata !"recv", metadata !3679, i32 667, metadata !3834, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32)* @recv} ; [ DW_TAG_subp
!3837 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_sendmsg", metadata !"__fd_sendmsg", metadata !"__fd_sendmsg", metadata !3679, i32 740, metadata !3838, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.msghdr
!3838 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3839, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3839 = metadata !{metadata !3764, metadata !3712, metadata !3840, metadata !3712}
!3840 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3841} ; [ DW_TAG_pointer_type ]
!3841 = metadata !{i32 589862, metadata !3668, metadata !"", metadata !3668, i32 0, i64 448, i64 64, i64 0, i32 0, metadata !3803} ; [ DW_TAG_const_type ]
!3842 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"sendmsg", metadata !"sendmsg", metadata !"sendmsg", metadata !3679, i32 735, metadata !3838, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.msghdr*, i32)* @sendm
!3843 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_sendto", metadata !"__fd_sendto", metadata !"__fd_sendto", metadata !3679, i32 682, metadata !3844, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32, %s
!3844 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3845, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3845 = metadata !{metadata !3764, metadata !3712, metadata !3756, metadata !3814, metadata !3712, metadata !3846, metadata !3750}
!3846 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3847} ; [ DW_TAG_pointer_type ]
!3847 = metadata !{i32 589862, metadata !3668, metadata !"", metadata !3668, i32 0, i64 128, i64 16, i64 0, i32 0, metadata !3825} ; [ DW_TAG_const_type ]
!3848 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"sendto", metadata !"sendto", metadata !"sendto", metadata !3679, i32 677, metadata !3844, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32, %struct.sockaddr*
!3849 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_send", metadata !"__fd_send", metadata !"__fd_send", metadata !3679, i32 663, metadata !3834, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32)* @__fd_s
!3850 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"send", metadata !"send", metadata !"send", metadata !3679, i32 658, metadata !3834, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32)* @send} ; [ DW_TAG_subp
!3851 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"shutdown", metadata !"shutdown", metadata !"shutdown", metadata !3679, i32 615, metadata !3852, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @shutdown} ; [ DW_TA
!3852 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3853, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3853 = metadata !{metadata !3712, metadata !3712, metadata !3712}
!3854 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_shutdown", metadata !"__fd_shutdown", metadata !"__fd_shutdown", metadata !3679, i32 609, metadata !3855, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_shu
!3855 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3856, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3856 = metadata !{metadata !3712, metadata !3857}
!3857 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3700} ; [ DW_TAG_pointer_type ]
!3858 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"getpeername", metadata !"getpeername", metadata !"getpeername", metadata !3679, i32 571, metadata !3859, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*
!3859 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3860, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3860 = metadata !{metadata !3712, metadata !3712, metadata !3824, metadata !3757}
!3861 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_getpeername", metadata !"__fd_getpeername", metadata !"__fd_getpeername", metadata !3679, i32 564, metadata !3855, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* 
!3862 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"getsockname", metadata !"getsockname", metadata !"getsockname", metadata !3679, i32 527, metadata !3859, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*
!3863 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_getsockname", metadata !"__fd_getsockname", metadata !"__fd_getsockname", metadata !3679, i32 519, metadata !3855, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* 
!3864 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"listen", metadata !"listen", metadata !"listen", metadata !3679, i32 375, metadata !3852, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @listen} ; [ DW_TAG_subpro
!3865 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_listen", metadata !"__fd_listen", metadata !"__fd_listen", metadata !3679, i32 368, metadata !3855, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_listen} ;
!3866 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"connect", metadata !"connect", metadata !"connect", metadata !3679, i32 319, metadata !3867, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*, i32)* @con
!3867 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3868, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3868 = metadata !{metadata !3712, metadata !3712, metadata !3846, metadata !3750}
!3869 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_connect", metadata !"__fd_connect", metadata !"__fd_connect", metadata !3679, i32 312, metadata !3855, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_connec
!3870 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"bind", metadata !"bind", metadata !"bind", metadata !3679, i32 267, metadata !3867, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*, i32)* @bind} ; [ DW
!3871 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_bind", metadata !"__fd_bind", metadata !"__fd_bind", metadata !3679, i32 259, metadata !3855, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_bind} ; [ DW_TA
!3872 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"rename", metadata !"rename", metadata !"rename", metadata !3668, i32 144, metadata !3873, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @rename} ; [ DW_TAG_subpro
!3873 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3874, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3874 = metadata !{metadata !3712, metadata !3785, metadata !3785}
!3875 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__allocate_sockaddr", metadata !"__allocate_sockaddr", metadata !"", metadata !3679, i32 106, metadata !3876, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct.exe_sockaddr_t*
!3876 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3877, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3877 = metadata !{metadata !3734, metadata !3712, metadata !3734}
!3878 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_accept", metadata !"__fd_accept", metadata !"__fd_accept", metadata !3679, i32 413, metadata !3859, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*
!3879 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"accept", metadata !"accept", metadata !"accept", metadata !3679, i32 409, metadata !3859, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*, i32*)* @accep
!3880 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"socket", metadata !"socket", metadata !"socket", metadata !3679, i32 141, metadata !3881, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i32)* @socket} ; [ DW_TAG_s
!3881 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3882, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3882 = metadata !{metadata !3712, metadata !3712, metadata !3712, metadata !3712}
!3883 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__fd_socket", metadata !"__fd_socket", metadata !"__fd_socket", metadata !3679, i32 132, metadata !3855, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_socket} ;
!3884 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__socketcall", metadata !"__socketcall", metadata !"__socketcall", metadata !3679, i32 25, metadata !3885, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i64*)* @__socke
!3885 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3886, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3886 = metadata !{metadata !3712, metadata !3712, metadata !3857}
!3887 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"canonicalize_file_name", metadata !"canonicalize_file_name", metadata !"canonicalize_file_name", metadata !3668, i32 265, metadata !3788, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 
!3888 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"strverscmp", metadata !"strverscmp", metadata !"strverscmp", metadata !3668, i32 243, metadata !3873, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @strverscmp} ;
!3889 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"clock_gettime", metadata !"clock_gettime", metadata !"clock_gettime", metadata !3668, i32 162, metadata !3890, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.tim
!3890 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3891, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3891 = metadata !{metadata !3712, metadata !3796, metadata !3892}
!3892 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3722} ; [ DW_TAG_pointer_type ]
!3893 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"_IO_putc", metadata !"_IO_putc", metadata !"_IO_putc", metadata !3668, i32 96, metadata !3894, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.FILE*)* @_IO_putc} 
!3894 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3895, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3895 = metadata !{metadata !3712, metadata !3712, metadata !3896}
!3896 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3897} ; [ DW_TAG_pointer_type ]
!3897 = metadata !{i32 589846, metadata !3765, metadata !"FILE", metadata !3765, i32 64, i64 0, i64 0, i64 0, i32 0, metadata !3898} ; [ DW_TAG_typedef ]
!3898 = metadata !{i32 589843, metadata !3668, metadata !"_IO_FILE", metadata !3765, i32 44, i64 1728, i64 64, i64 0, i32 0, null, metadata !3899, i32 0, null} ; [ DW_TAG_structure_type ]
!3899 = metadata !{metadata !3900, metadata !3902, metadata !3903, metadata !3904, metadata !3905, metadata !3906, metadata !3907, metadata !3908, metadata !3909, metadata !3910, metadata !3911, metadata !3912, metadata !3913, metadata !3921, metadata !3
!3900 = metadata !{i32 589837, metadata !3898, metadata !"_flags", metadata !3901, i32 246, i64 32, i64 32, i64 0, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3901 = metadata !{i32 589865, metadata !"libio.h", metadata !"/usr/include", metadata !3669} ; [ DW_TAG_file_type ]
!3902 = metadata !{i32 589837, metadata !3898, metadata !"_IO_read_ptr", metadata !3901, i32 251, i64 64, i64 64, i64 64, i32 0, metadata !3689} ; [ DW_TAG_member ]
!3903 = metadata !{i32 589837, metadata !3898, metadata !"_IO_read_end", metadata !3901, i32 252, i64 64, i64 64, i64 128, i32 0, metadata !3689} ; [ DW_TAG_member ]
!3904 = metadata !{i32 589837, metadata !3898, metadata !"_IO_read_base", metadata !3901, i32 253, i64 64, i64 64, i64 192, i32 0, metadata !3689} ; [ DW_TAG_member ]
!3905 = metadata !{i32 589837, metadata !3898, metadata !"_IO_write_base", metadata !3901, i32 254, i64 64, i64 64, i64 256, i32 0, metadata !3689} ; [ DW_TAG_member ]
!3906 = metadata !{i32 589837, metadata !3898, metadata !"_IO_write_ptr", metadata !3901, i32 255, i64 64, i64 64, i64 320, i32 0, metadata !3689} ; [ DW_TAG_member ]
!3907 = metadata !{i32 589837, metadata !3898, metadata !"_IO_write_end", metadata !3901, i32 256, i64 64, i64 64, i64 384, i32 0, metadata !3689} ; [ DW_TAG_member ]
!3908 = metadata !{i32 589837, metadata !3898, metadata !"_IO_buf_base", metadata !3901, i32 257, i64 64, i64 64, i64 448, i32 0, metadata !3689} ; [ DW_TAG_member ]
!3909 = metadata !{i32 589837, metadata !3898, metadata !"_IO_buf_end", metadata !3901, i32 258, i64 64, i64 64, i64 512, i32 0, metadata !3689} ; [ DW_TAG_member ]
!3910 = metadata !{i32 589837, metadata !3898, metadata !"_IO_save_base", metadata !3901, i32 260, i64 64, i64 64, i64 576, i32 0, metadata !3689} ; [ DW_TAG_member ]
!3911 = metadata !{i32 589837, metadata !3898, metadata !"_IO_backup_base", metadata !3901, i32 261, i64 64, i64 64, i64 640, i32 0, metadata !3689} ; [ DW_TAG_member ]
!3912 = metadata !{i32 589837, metadata !3898, metadata !"_IO_save_end", metadata !3901, i32 262, i64 64, i64 64, i64 704, i32 0, metadata !3689} ; [ DW_TAG_member ]
!3913 = metadata !{i32 589837, metadata !3898, metadata !"_markers", metadata !3901, i32 264, i64 64, i64 64, i64 768, i32 0, metadata !3914} ; [ DW_TAG_member ]
!3914 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3915} ; [ DW_TAG_pointer_type ]
!3915 = metadata !{i32 589843, metadata !3668, metadata !"_IO_marker", metadata !3901, i32 160, i64 192, i64 64, i64 0, i32 0, null, metadata !3916, i32 0, null} ; [ DW_TAG_structure_type ]
!3916 = metadata !{metadata !3917, metadata !3918, metadata !3920}
!3917 = metadata !{i32 589837, metadata !3915, metadata !"_next", metadata !3901, i32 161, i64 64, i64 64, i64 0, i32 0, metadata !3914} ; [ DW_TAG_member ]
!3918 = metadata !{i32 589837, metadata !3915, metadata !"_sbuf", metadata !3901, i32 162, i64 64, i64 64, i64 64, i32 0, metadata !3919} ; [ DW_TAG_member ]
!3919 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3898} ; [ DW_TAG_pointer_type ]
!3920 = metadata !{i32 589837, metadata !3915, metadata !"_pos", metadata !3901, i32 166, i64 32, i64 32, i64 128, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3921 = metadata !{i32 589837, metadata !3898, metadata !"_chain", metadata !3901, i32 266, i64 64, i64 64, i64 832, i32 0, metadata !3919} ; [ DW_TAG_member ]
!3922 = metadata !{i32 589837, metadata !3898, metadata !"_fileno", metadata !3901, i32 268, i64 32, i64 32, i64 896, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3923 = metadata !{i32 589837, metadata !3898, metadata !"_flags2", metadata !3901, i32 272, i64 32, i64 32, i64 928, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3924 = metadata !{i32 589837, metadata !3898, metadata !"_old_offset", metadata !3901, i32 274, i64 64, i64 64, i64 960, i32 0, metadata !3715} ; [ DW_TAG_member ]
!3925 = metadata !{i32 589837, metadata !3898, metadata !"_cur_column", metadata !3901, i32 278, i64 16, i64 16, i64 1024, i32 0, metadata !3745} ; [ DW_TAG_member ]
!3926 = metadata !{i32 589837, metadata !3898, metadata !"_vtable_offset", metadata !3901, i32 279, i64 8, i64 8, i64 1040, i32 0, metadata !3927} ; [ DW_TAG_member ]
!3927 = metadata !{i32 589860, metadata !3668, metadata !"signed char", metadata !3668, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3928 = metadata !{i32 589837, metadata !3898, metadata !"_shortbuf", metadata !3901, i32 280, i64 8, i64 8, i64 1048, i32 0, metadata !3929} ; [ DW_TAG_member ]
!3929 = metadata !{i32 589825, metadata !3668, metadata !"", metadata !3668, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3690, metadata !2121, i32 0, null} ; [ DW_TAG_array_type ]
!3930 = metadata !{i32 589837, metadata !3898, metadata !"_lock", metadata !3901, i32 284, i64 64, i64 64, i64 1088, i32 0, metadata !3756} ; [ DW_TAG_member ]
!3931 = metadata !{i32 589837, metadata !3898, metadata !"_offset", metadata !3901, i32 293, i64 64, i64 64, i64 1152, i32 0, metadata !3932} ; [ DW_TAG_member ]
!3932 = metadata !{i32 589846, metadata !3699, metadata !"__off64_t", metadata !3699, i32 133, i64 0, i64 0, i64 0, i32 0, metadata !3716} ; [ DW_TAG_typedef ]
!3933 = metadata !{i32 589837, metadata !3898, metadata !"__pad1", metadata !3901, i32 302, i64 64, i64 64, i64 1216, i32 0, metadata !3756} ; [ DW_TAG_member ]
!3934 = metadata !{i32 589837, metadata !3898, metadata !"__pad2", metadata !3901, i32 303, i64 64, i64 64, i64 1280, i32 0, metadata !3756} ; [ DW_TAG_member ]
!3935 = metadata !{i32 589837, metadata !3898, metadata !"__pad3", metadata !3901, i32 304, i64 64, i64 64, i64 1344, i32 0, metadata !3756} ; [ DW_TAG_member ]
!3936 = metadata !{i32 589837, metadata !3898, metadata !"__pad4", metadata !3901, i32 305, i64 64, i64 64, i64 1408, i32 0, metadata !3756} ; [ DW_TAG_member ]
!3937 = metadata !{i32 589837, metadata !3898, metadata !"__pad5", metadata !3901, i32 306, i64 64, i64 64, i64 1472, i32 0, metadata !3814} ; [ DW_TAG_member ]
!3938 = metadata !{i32 589837, metadata !3898, metadata !"_mode", metadata !3901, i32 308, i64 32, i64 32, i64 1536, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3939 = metadata !{i32 589837, metadata !3898, metadata !"_unused2", metadata !3901, i32 310, i64 160, i64 8, i64 1568, i32 0, metadata !3940} ; [ DW_TAG_member ]
!3940 = metadata !{i32 589825, metadata !3668, metadata !"", metadata !3668, i32 0, i64 160, i64 8, i64 0, i32 0, metadata !3690, metadata !866, i32 0, null} ; [ DW_TAG_array_type ]
!3941 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"_IO_getc", metadata !"_IO_getc", metadata !"_IO_getc", metadata !3668, i32 91, metadata !3942, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (%struct.FILE*)* @_IO_getc} ; [ D
!3942 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3943, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3943 = metadata !{metadata !3712, metadata !3896}
!3944 = metadata !{i32 589870, i32 0, metadata !3668, metadata !"__syscall_rt_sigaction", metadata !"__syscall_rt_sigaction", metadata !"__syscall_rt_sigaction", metadata !3668, i32 44, metadata !3945, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 t
!3945 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3946, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3946 = metadata !{metadata !3712, metadata !3712, metadata !3947, metadata !4038, metadata !3814}
!3947 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3948} ; [ DW_TAG_pointer_type ]
!3948 = metadata !{i32 589862, metadata !3668, metadata !"", metadata !3668, i32 0, i64 1216, i64 64, i64 0, i32 0, metadata !3949} ; [ DW_TAG_const_type ]
!3949 = metadata !{i32 589843, metadata !3668, metadata !"sigaction", metadata !3950, i32 25, i64 1216, i64 64, i64 0, i32 0, null, metadata !3951, i32 0, null} ; [ DW_TAG_structure_type ]
!3950 = metadata !{i32 589865, metadata !"sigaction.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3669} ; [ DW_TAG_file_type ]
!3951 = metadata !{metadata !3952, metadata !4027, metadata !4034, metadata !4035}
!3952 = metadata !{i32 589837, metadata !3949, metadata !"__sigaction_handler", metadata !3950, i32 35, i64 64, i64 64, i64 0, i32 0, metadata !3953} ; [ DW_TAG_member ]
!3953 = metadata !{i32 589847, metadata !3668, metadata !"", metadata !3950, i32 29, i64 64, i64 64, i64 0, i32 0, null, metadata !3954, i32 0, null} ; [ DW_TAG_union_type ]
!3954 = metadata !{metadata !3955, metadata !3961}
!3955 = metadata !{i32 589837, metadata !3953, metadata !"sa_handler", metadata !3950, i32 31, i64 64, i64 64, i64 0, i32 0, metadata !3956} ; [ DW_TAG_member ]
!3956 = metadata !{i32 589846, metadata !3957, metadata !"__sighandler_t", metadata !3957, i32 204, i64 0, i64 0, i64 0, i32 0, metadata !3958} ; [ DW_TAG_typedef ]
!3957 = metadata !{i32 589865, metadata !"signal.h", metadata !"/usr/include", metadata !3669} ; [ DW_TAG_file_type ]
!3958 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3959} ; [ DW_TAG_pointer_type ]
!3959 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3960, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3960 = metadata !{null, metadata !3712}
!3961 = metadata !{i32 589837, metadata !3953, metadata !"sa_sigaction", metadata !3950, i32 33, i64 64, i64 64, i64 0, i32 0, metadata !3962} ; [ DW_TAG_member ]
!3962 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3963} ; [ DW_TAG_pointer_type ]
!3963 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3964, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3964 = metadata !{null, metadata !3712, metadata !3965, metadata !3756}
!3965 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3966} ; [ DW_TAG_pointer_type ]
!3966 = metadata !{i32 589846, metadata !3967, metadata !"siginfo_t", metadata !3967, i32 154, i64 0, i64 0, i64 0, i32 0, metadata !3968} ; [ DW_TAG_typedef ]
!3967 = metadata !{i32 589865, metadata !"siginfo.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3669} ; [ DW_TAG_file_type ]
!3968 = metadata !{i32 589843, metadata !3668, metadata !"", metadata !3967, i32 63, i64 1024, i64 64, i64 0, i32 0, null, metadata !3969, i32 0, null} ; [ DW_TAG_structure_type ]
!3969 = metadata !{metadata !3970, metadata !3971, metadata !3972, metadata !3973}
!3970 = metadata !{i32 589837, metadata !3968, metadata !"si_signo", metadata !3967, i32 64, i64 32, i64 32, i64 0, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3971 = metadata !{i32 589837, metadata !3968, metadata !"si_errno", metadata !3967, i32 65, i64 32, i64 32, i64 32, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3972 = metadata !{i32 589837, metadata !3968, metadata !"si_code", metadata !3967, i32 67, i64 32, i64 32, i64 64, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3973 = metadata !{i32 589837, metadata !3968, metadata !"_sifields", metadata !3967, i32 127, i64 896, i64 64, i64 128, i32 0, metadata !3974} ; [ DW_TAG_member ]
!3974 = metadata !{i32 589847, metadata !3668, metadata !"", metadata !3967, i32 70, i64 896, i64 64, i64 0, i32 0, null, metadata !3975, i32 0, null} ; [ DW_TAG_union_type ]
!3975 = metadata !{metadata !3976, metadata !3978, metadata !3984, metadata !3995, metadata !4001, metadata !4010, metadata !4016, metadata !4021}
!3976 = metadata !{i32 589837, metadata !3974, metadata !"_pad", metadata !3967, i32 71, i64 896, i64 32, i64 0, i32 0, metadata !3977} ; [ DW_TAG_member ]
!3977 = metadata !{i32 589825, metadata !3668, metadata !"", metadata !3668, i32 0, i64 896, i64 32, i64 0, i32 0, metadata !3712, metadata !1944, i32 0, null} ; [ DW_TAG_array_type ]
!3978 = metadata !{i32 589837, metadata !3974, metadata !"_kill", metadata !3967, i32 78, i64 64, i64 32, i64 0, i32 0, metadata !3979} ; [ DW_TAG_member ]
!3979 = metadata !{i32 589843, metadata !3668, metadata !"", metadata !3967, i32 75, i64 64, i64 32, i64 0, i32 0, null, metadata !3980, i32 0, null} ; [ DW_TAG_structure_type ]
!3980 = metadata !{metadata !3981, metadata !3983}
!3981 = metadata !{i32 589837, metadata !3979, metadata !"si_pid", metadata !3967, i32 76, i64 32, i64 32, i64 0, i32 0, metadata !3982} ; [ DW_TAG_member ]
!3982 = metadata !{i32 589846, metadata !3699, metadata !"__pid_t", metadata !3699, i32 134, i64 0, i64 0, i64 0, i32 0, metadata !3712} ; [ DW_TAG_typedef ]
!3983 = metadata !{i32 589837, metadata !3979, metadata !"si_uid", metadata !3967, i32 77, i64 32, i64 32, i64 32, i32 0, metadata !3708} ; [ DW_TAG_member ]
!3984 = metadata !{i32 589837, metadata !3974, metadata !"_timer", metadata !3967, i32 86, i64 128, i64 64, i64 0, i32 0, metadata !3985} ; [ DW_TAG_member ]
!3985 = metadata !{i32 589843, metadata !3668, metadata !"", metadata !3967, i32 82, i64 128, i64 64, i64 0, i32 0, null, metadata !3986, i32 0, null} ; [ DW_TAG_structure_type ]
!3986 = metadata !{metadata !3987, metadata !3988, metadata !3989}
!3987 = metadata !{i32 589837, metadata !3985, metadata !"si_tid", metadata !3967, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3988 = metadata !{i32 589837, metadata !3985, metadata !"si_overrun", metadata !3967, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3989 = metadata !{i32 589837, metadata !3985, metadata !"si_sigval", metadata !3967, i32 85, i64 64, i64 64, i64 64, i32 0, metadata !3990} ; [ DW_TAG_member ]
!3990 = metadata !{i32 589846, metadata !3967, metadata !"sigval_t", metadata !3967, i32 58, i64 0, i64 0, i64 0, i32 0, metadata !3991} ; [ DW_TAG_typedef ]
!3991 = metadata !{i32 589847, metadata !3668, metadata !"sigval", metadata !3967, i32 33, i64 64, i64 64, i64 0, i32 0, null, metadata !3992, i32 0, null} ; [ DW_TAG_union_type ]
!3992 = metadata !{metadata !3993, metadata !3994}
!3993 = metadata !{i32 589837, metadata !3991, metadata !"sival_int", metadata !3967, i32 34, i64 32, i64 32, i64 0, i32 0, metadata !3712} ; [ DW_TAG_member ]
!3994 = metadata !{i32 589837, metadata !3991, metadata !"sival_ptr", metadata !3967, i32 35, i64 64, i64 64, i64 0, i32 0, metadata !3756} ; [ DW_TAG_member ]
!3995 = metadata !{i32 589837, metadata !3974, metadata !"_rt", metadata !3967, i32 94, i64 128, i64 64, i64 0, i32 0, metadata !3996} ; [ DW_TAG_member ]
!3996 = metadata !{i32 589843, metadata !3668, metadata !"", metadata !3967, i32 90, i64 128, i64 64, i64 0, i32 0, null, metadata !3997, i32 0, null} ; [ DW_TAG_structure_type ]
!3997 = metadata !{metadata !3998, metadata !3999, metadata !4000}
!3998 = metadata !{i32 589837, metadata !3996, metadata !"si_pid", metadata !3967, i32 91, i64 32, i64 32, i64 0, i32 0, metadata !3982} ; [ DW_TAG_member ]
!3999 = metadata !{i32 589837, metadata !3996, metadata !"si_uid", metadata !3967, i32 92, i64 32, i64 32, i64 32, i32 0, metadata !3708} ; [ DW_TAG_member ]
!4000 = metadata !{i32 589837, metadata !3996, metadata !"si_sigval", metadata !3967, i32 93, i64 64, i64 64, i64 64, i32 0, metadata !3990} ; [ DW_TAG_member ]
!4001 = metadata !{i32 589837, metadata !3974, metadata !"_sigchld", metadata !3967, i32 104, i64 256, i64 64, i64 0, i32 0, metadata !4002} ; [ DW_TAG_member ]
!4002 = metadata !{i32 589843, metadata !3668, metadata !"", metadata !3967, i32 98, i64 256, i64 64, i64 0, i32 0, null, metadata !4003, i32 0, null} ; [ DW_TAG_structure_type ]
!4003 = metadata !{metadata !4004, metadata !4005, metadata !4006, metadata !4007, metadata !4009}
!4004 = metadata !{i32 589837, metadata !4002, metadata !"si_pid", metadata !3967, i32 99, i64 32, i64 32, i64 0, i32 0, metadata !3982} ; [ DW_TAG_member ]
!4005 = metadata !{i32 589837, metadata !4002, metadata !"si_uid", metadata !3967, i32 100, i64 32, i64 32, i64 32, i32 0, metadata !3708} ; [ DW_TAG_member ]
!4006 = metadata !{i32 589837, metadata !4002, metadata !"si_status", metadata !3967, i32 101, i64 32, i64 32, i64 64, i32 0, metadata !3712} ; [ DW_TAG_member ]
!4007 = metadata !{i32 589837, metadata !4002, metadata !"si_utime", metadata !3967, i32 102, i64 64, i64 64, i64 128, i32 0, metadata !4008} ; [ DW_TAG_member ]
!4008 = metadata !{i32 589846, metadata !3967, metadata !"__sigchld_clock_t", metadata !3967, i32 63, i64 0, i64 0, i64 0, i32 0, metadata !3716} ; [ DW_TAG_typedef ]
!4009 = metadata !{i32 589837, metadata !4002, metadata !"si_stime", metadata !3967, i32 103, i64 64, i64 64, i64 192, i32 0, metadata !4008} ; [ DW_TAG_member ]
!4010 = metadata !{i32 589837, metadata !3974, metadata !"_sigfault", metadata !3967, i32 111, i64 128, i64 64, i64 0, i32 0, metadata !4011} ; [ DW_TAG_member ]
!4011 = metadata !{i32 589843, metadata !3668, metadata !"", metadata !3967, i32 108, i64 128, i64 64, i64 0, i32 0, null, metadata !4012, i32 0, null} ; [ DW_TAG_structure_type ]
!4012 = metadata !{metadata !4013, metadata !4014}
!4013 = metadata !{i32 589837, metadata !4011, metadata !"si_addr", metadata !3967, i32 109, i64 64, i64 64, i64 0, i32 0, metadata !3756} ; [ DW_TAG_member ]
!4014 = metadata !{i32 589837, metadata !4011, metadata !"si_addr_lsb", metadata !3967, i32 110, i64 16, i64 16, i64 64, i32 0, metadata !4015} ; [ DW_TAG_member ]
!4015 = metadata !{i32 589860, metadata !3668, metadata !"short int", metadata !3668, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4016 = metadata !{i32 589837, metadata !3974, metadata !"_sigpoll", metadata !3967, i32 118, i64 128, i64 64, i64 0, i32 0, metadata !4017} ; [ DW_TAG_member ]
!4017 = metadata !{i32 589843, metadata !3668, metadata !"", metadata !3967, i32 115, i64 128, i64 64, i64 0, i32 0, null, metadata !4018, i32 0, null} ; [ DW_TAG_structure_type ]
!4018 = metadata !{metadata !4019, metadata !4020}
!4019 = metadata !{i32 589837, metadata !4017, metadata !"si_band", metadata !3967, i32 116, i64 64, i64 64, i64 0, i32 0, metadata !3716} ; [ DW_TAG_member ]
!4020 = metadata !{i32 589837, metadata !4017, metadata !"si_fd", metadata !3967, i32 117, i64 32, i64 32, i64 64, i32 0, metadata !3712} ; [ DW_TAG_member ]
!4021 = metadata !{i32 589837, metadata !3974, metadata !"_sigsys", metadata !3967, i32 126, i64 128, i64 64, i64 0, i32 0, metadata !4022} ; [ DW_TAG_member ]
!4022 = metadata !{i32 589843, metadata !3668, metadata !"", metadata !3967, i32 122, i64 128, i64 64, i64 0, i32 0, null, metadata !4023, i32 0, null} ; [ DW_TAG_structure_type ]
!4023 = metadata !{metadata !4024, metadata !4025, metadata !4026}
!4024 = metadata !{i32 589837, metadata !4022, metadata !"_call_addr", metadata !3967, i32 123, i64 64, i64 64, i64 0, i32 0, metadata !3756} ; [ DW_TAG_member ]
!4025 = metadata !{i32 589837, metadata !4022, metadata !"_syscall", metadata !3967, i32 124, i64 32, i64 32, i64 64, i32 0, metadata !3712} ; [ DW_TAG_member ]
!4026 = metadata !{i32 589837, metadata !4022, metadata !"_arch", metadata !3967, i32 125, i64 32, i64 32, i64 96, i32 0, metadata !3672} ; [ DW_TAG_member ]
!4027 = metadata !{i32 589837, metadata !3949, metadata !"sa_mask", metadata !3950, i32 43, i64 1024, i64 64, i64 64, i32 0, metadata !4028} ; [ DW_TAG_member ]
!4028 = metadata !{i32 589846, metadata !3957, metadata !"__sigset_t", metadata !3957, i32 40, i64 0, i64 0, i64 0, i32 0, metadata !4029} ; [ DW_TAG_typedef ]
!4029 = metadata !{i32 589843, metadata !3668, metadata !"", metadata !4030, i32 28, i64 1024, i64 64, i64 0, i32 0, null, metadata !4031, i32 0, null} ; [ DW_TAG_structure_type ]
!4030 = metadata !{i32 589865, metadata !"sigset.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3669} ; [ DW_TAG_file_type ]
!4031 = metadata !{metadata !4032}
!4032 = metadata !{i32 589837, metadata !4029, metadata !"__val", metadata !4030, i32 29, i64 1024, i64 64, i64 0, i32 0, metadata !4033} ; [ DW_TAG_member ]
!4033 = metadata !{i32 589825, metadata !3668, metadata !"", metadata !3668, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !3700, metadata !1334, i32 0, null} ; [ DW_TAG_array_type ]
!4034 = metadata !{i32 589837, metadata !3949, metadata !"sa_flags", metadata !3950, i32 46, i64 32, i64 32, i64 1088, i32 0, metadata !3712} ; [ DW_TAG_member ]
!4035 = metadata !{i32 589837, metadata !3949, metadata !"sa_restorer", metadata !3950, i32 49, i64 64, i64 64, i64 1152, i32 0, metadata !4036} ; [ DW_TAG_member ]
!4036 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4037} ; [ DW_TAG_pointer_type ]
!4037 = metadata !{i32 589845, metadata !3668, metadata !"", metadata !3668, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4038 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3949} ; [ DW_TAG_pointer_type ]
!4039 = metadata !{i32 589870, i32 0, metadata !4040, metadata !"stat64", metadata !"stat64", metadata !"stat64", metadata !4042, i32 503, metadata !4043, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!4040 = metadata !{i32 589865, metadata !"fd_init.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !4041} ; [ DW_TAG_file_type ]
!4041 = metadata !{i32 589841, i32 0, i32 1, metadata !"fd_init.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compi
!4042 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !4041} ; [ DW_TAG_file_type ]
!4043 = metadata !{i32 589845, metadata !4040, metadata !"", metadata !4040, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4044, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4044 = metadata !{metadata !4045, metadata !4046, metadata !4049}
!4045 = metadata !{i32 589860, metadata !4040, metadata !"int", metadata !4040, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4046 = metadata !{i32 589839, metadata !4040, metadata !"", metadata !4040, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4047} ; [ DW_TAG_pointer_type ]
!4047 = metadata !{i32 589862, metadata !4040, metadata !"", metadata !4040, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !4048} ; [ DW_TAG_const_type ]
!4048 = metadata !{i32 589860, metadata !4040, metadata !"char", metadata !4040, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4049 = metadata !{i32 589839, metadata !4040, metadata !"", metadata !4040, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4050} ; [ DW_TAG_pointer_type ]
!4050 = metadata !{i32 589843, metadata !4040, metadata !"stat64", metadata !4051, i32 30, i64 1152, i64 64, i64 0, i32 0, null, metadata !4052, i32 0, null} ; [ DW_TAG_structure_type ]
!4051 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !4041} ; [ DW_TAG_file_type ]
!4052 = metadata !{metadata !4053, metadata !4058, metadata !4060, metadata !4062, metadata !4065, metadata !4067, metadata !4069, metadata !4070, metadata !4071, metadata !4074, metadata !4076, metadata !4078, metadata !4086, metadata !4087, metadata !4
!4053 = metadata !{i32 589837, metadata !4050, metadata !"st_dev", metadata !4054, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !4055} ; [ DW_TAG_member ]
!4054 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4041} ; [ DW_TAG_file_type ]
!4055 = metadata !{i32 589846, metadata !4056, metadata !"__dev_t", metadata !4056, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !4057} ; [ DW_TAG_typedef ]
!4056 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4041} ; [ DW_TAG_file_type ]
!4057 = metadata !{i32 589860, metadata !4040, metadata !"long unsigned int", metadata !4040, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4058 = metadata !{i32 589837, metadata !4050, metadata !"st_ino", metadata !4054, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !4059} ; [ DW_TAG_member ]
!4059 = metadata !{i32 589846, metadata !4056, metadata !"__ino64_t", metadata !4056, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !4057} ; [ DW_TAG_typedef ]
!4060 = metadata !{i32 589837, metadata !4050, metadata !"st_nlink", metadata !4054, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !4061} ; [ DW_TAG_member ]
!4061 = metadata !{i32 589846, metadata !4056, metadata !"__nlink_t", metadata !4056, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !4057} ; [ DW_TAG_typedef ]
!4062 = metadata !{i32 589837, metadata !4050, metadata !"st_mode", metadata !4054, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !4063} ; [ DW_TAG_member ]
!4063 = metadata !{i32 589846, metadata !4056, metadata !"__mode_t", metadata !4056, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !4064} ; [ DW_TAG_typedef ]
!4064 = metadata !{i32 589860, metadata !4040, metadata !"unsigned int", metadata !4040, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4065 = metadata !{i32 589837, metadata !4050, metadata !"st_uid", metadata !4054, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !4066} ; [ DW_TAG_member ]
!4066 = metadata !{i32 589846, metadata !4056, metadata !"__uid_t", metadata !4056, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !4064} ; [ DW_TAG_typedef ]
!4067 = metadata !{i32 589837, metadata !4050, metadata !"st_gid", metadata !4054, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !4068} ; [ DW_TAG_member ]
!4068 = metadata !{i32 589846, metadata !4056, metadata !"__gid_t", metadata !4056, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !4064} ; [ DW_TAG_typedef ]
!4069 = metadata !{i32 589837, metadata !4050, metadata !"__pad0", metadata !4054, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !4045} ; [ DW_TAG_member ]
!4070 = metadata !{i32 589837, metadata !4050, metadata !"st_rdev", metadata !4054, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !4055} ; [ DW_TAG_member ]
!4071 = metadata !{i32 589837, metadata !4050, metadata !"st_size", metadata !4054, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !4072} ; [ DW_TAG_member ]
!4072 = metadata !{i32 589846, metadata !4056, metadata !"__off_t", metadata !4056, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !4073} ; [ DW_TAG_typedef ]
!4073 = metadata !{i32 589860, metadata !4040, metadata !"long int", metadata !4040, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4074 = metadata !{i32 589837, metadata !4050, metadata !"st_blksize", metadata !4054, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !4075} ; [ DW_TAG_member ]
!4075 = metadata !{i32 589846, metadata !4056, metadata !"__blksize_t", metadata !4056, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !4073} ; [ DW_TAG_typedef ]
!4076 = metadata !{i32 589837, metadata !4050, metadata !"st_blocks", metadata !4054, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !4077} ; [ DW_TAG_member ]
!4077 = metadata !{i32 589846, metadata !4056, metadata !"__blkcnt64_t", metadata !4056, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !4073} ; [ DW_TAG_typedef ]
!4078 = metadata !{i32 589837, metadata !4050, metadata !"st_atim", metadata !4054, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !4079} ; [ DW_TAG_member ]
!4079 = metadata !{i32 589843, metadata !4040, metadata !"timespec", metadata !4080, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !4081, i32 0, null} ; [ DW_TAG_structure_type ]
!4080 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !4041} ; [ DW_TAG_file_type ]
!4081 = metadata !{metadata !4082, metadata !4084}
!4082 = metadata !{i32 589837, metadata !4079, metadata !"tv_sec", metadata !4080, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !4083} ; [ DW_TAG_member ]
!4083 = metadata !{i32 589846, metadata !4056, metadata !"__time_t", metadata !4056, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !4073} ; [ DW_TAG_typedef ]
!4084 = metadata !{i32 589837, metadata !4079, metadata !"tv_nsec", metadata !4080, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !4085} ; [ DW_TAG_member ]
!4085 = metadata !{i32 589846, metadata !4056, metadata !"__syscall_slong_t", metadata !4056, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !4073} ; [ DW_TAG_typedef ]
!4086 = metadata !{i32 589837, metadata !4050, metadata !"st_mtim", metadata !4054, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !4079} ; [ DW_TAG_member ]
!4087 = metadata !{i32 589837, metadata !4050, metadata !"st_ctim", metadata !4054, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !4079} ; [ DW_TAG_member ]
!4088 = metadata !{i32 589837, metadata !4050, metadata !"__glibc_reserved", metadata !4054, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !4089} ; [ DW_TAG_member ]
!4089 = metadata !{i32 589825, metadata !4040, metadata !"", metadata !4040, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !4085, metadata !3112, i32 0, null} ; [ DW_TAG_array_type ]
!4090 = metadata !{i32 589870, i32 0, metadata !4040, metadata !"__sym_uint32", metadata !"__sym_uint32", metadata !"", metadata !4040, i32 227, metadata !4091, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!4091 = metadata !{i32 589845, metadata !4040, metadata !"", metadata !4040, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4092, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4092 = metadata !{metadata !4064, metadata !4046}
!4093 = metadata !{i32 589870, i32 0, metadata !4040, metadata !"native_read_file", metadata !"native_read_file", metadata !"native_read_file", metadata !4040, i32 349, metadata !4094, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i3
!4094 = metadata !{i32 589845, metadata !4040, metadata !"", metadata !4040, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4095, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4095 = metadata !{metadata !4045, metadata !4046, metadata !4045, metadata !4096}
!4096 = metadata !{i32 589839, metadata !4040, metadata !"", metadata !4040, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4097} ; [ DW_TAG_pointer_type ]
!4097 = metadata !{i32 589839, metadata !4040, metadata !"", metadata !4040, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4048} ; [ DW_TAG_pointer_type ]
!4098 = metadata !{i32 589870, i32 0, metadata !4040, metadata !"__fill_blocks", metadata !"__fill_blocks", metadata !"__fill_blocks", metadata !4040, i32 55, metadata !4099, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (%struct.exe_disk
!4099 = metadata !{i32 589845, metadata !4040, metadata !"", metadata !4040, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4100, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4100 = metadata !{null, metadata !4101, metadata !4128, metadata !4064, metadata !4045}
!4101 = metadata !{i32 589839, metadata !4040, metadata !"", metadata !4040, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4102} ; [ DW_TAG_pointer_type ]
!4102 = metadata !{i32 589846, metadata !4051, metadata !"exe_disk_file_t", metadata !4051, i32 34, i64 0, i64 0, i64 0, i32 0, metadata !4103} ; [ DW_TAG_typedef ]
!4103 = metadata !{i32 589843, metadata !4040, metadata !"", metadata !4051, i32 26, i64 320, i64 64, i64 0, i32 0, null, metadata !4104, i32 0, null} ; [ DW_TAG_structure_type ]
!4104 = metadata !{metadata !4105, metadata !4106, metadata !4107, metadata !4108, metadata !4109}
!4105 = metadata !{i32 589837, metadata !4103, metadata !"size", metadata !4051, i32 27, i64 32, i64 32, i64 0, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4106 = metadata !{i32 589837, metadata !4103, metadata !"contents", metadata !4051, i32 28, i64 64, i64 64, i64 64, i32 0, metadata !4097} ; [ DW_TAG_member ]
!4107 = metadata !{i32 589837, metadata !4103, metadata !"path", metadata !4051, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !4097} ; [ DW_TAG_member ]
!4108 = metadata !{i32 589837, metadata !4103, metadata !"stat", metadata !4051, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !4049} ; [ DW_TAG_member ]
!4109 = metadata !{i32 589837, metadata !4103, metadata !"src", metadata !4051, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !4110} ; [ DW_TAG_member ]
!4110 = metadata !{i32 589839, metadata !4040, metadata !"", metadata !4040, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4111} ; [ DW_TAG_pointer_type ]
!4111 = metadata !{i32 589846, metadata !4051, metadata !"exe_sockaddr_t", metadata !4051, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !4112} ; [ DW_TAG_typedef ]
!4112 = metadata !{i32 589843, metadata !4040, metadata !"", metadata !4051, i32 21, i64 128, i64 64, i64 0, i32 0, null, metadata !4113, i32 0, null} ; [ DW_TAG_structure_type ]
!4113 = metadata !{metadata !4114, metadata !4125}
!4114 = metadata !{i32 589837, metadata !4112, metadata !"addr", metadata !4051, i32 22, i64 64, i64 64, i64 0, i32 0, metadata !4115} ; [ DW_TAG_member ]
!4115 = metadata !{i32 589839, metadata !4040, metadata !"", metadata !4040, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4116} ; [ DW_TAG_pointer_type ]
!4116 = metadata !{i32 589843, metadata !4040, metadata !"sockaddr_storage", metadata !4117, i32 163, i64 1024, i64 64, i64 0, i32 0, null, metadata !4118, i32 0, null} ; [ DW_TAG_structure_type ]
!4117 = metadata !{i32 589865, metadata !"socket.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4041} ; [ DW_TAG_file_type ]
!4118 = metadata !{metadata !4119, metadata !4122, metadata !4123}
!4119 = metadata !{i32 589837, metadata !4116, metadata !"ss_family", metadata !4117, i32 164, i64 16, i64 16, i64 0, i32 0, metadata !4120} ; [ DW_TAG_member ]
!4120 = metadata !{i32 589846, metadata !4117, metadata !"sa_family_t", metadata !4117, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !4121} ; [ DW_TAG_typedef ]
!4121 = metadata !{i32 589860, metadata !4040, metadata !"short unsigned int", metadata !4040, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4122 = metadata !{i32 589837, metadata !4116, metadata !"__ss_align", metadata !4117, i32 165, i64 64, i64 64, i64 64, i32 0, metadata !4057} ; [ DW_TAG_member ]
!4123 = metadata !{i32 589837, metadata !4116, metadata !"__ss_padding", metadata !4117, i32 166, i64 896, i64 8, i64 128, i32 0, metadata !4124} ; [ DW_TAG_member ]
!4124 = metadata !{i32 589825, metadata !4040, metadata !"", metadata !4040, i32 0, i64 896, i64 8, i64 0, i32 0, metadata !4048, metadata !3398, i32 0, null} ; [ DW_TAG_array_type ]
!4125 = metadata !{i32 589837, metadata !4112, metadata !"addrlen", metadata !4051, i32 23, i64 32, i64 32, i64 64, i32 0, metadata !4126} ; [ DW_TAG_member ]
!4126 = metadata !{i32 589846, metadata !4127, metadata !"socklen_t", metadata !4127, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !4064} ; [ DW_TAG_typedef ]
!4127 = metadata !{i32 589865, metadata !"socket_type.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4041} ; [ DW_TAG_file_type ]
!4128 = metadata !{i32 589839, metadata !4040, metadata !"", metadata !4040, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4129} ; [ DW_TAG_pointer_type ]
!4129 = metadata !{i32 589846, metadata !4130, metadata !"fill_info_t", metadata !4130, i32 152, i64 0, i64 0, i64 0, i32 0, metadata !4131} ; [ DW_TAG_typedef ]
!4130 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !4041} ; [ DW_TAG_file_type ]
!4131 = metadata !{i32 589843, metadata !4040, metadata !"", metadata !4051, i32 101, i64 192, i64 64, i64 0, i32 0, null, metadata !4132, i32 0, null} ; [ DW_TAG_structure_type ]
!4132 = metadata !{metadata !4133, metadata !4134, metadata !4140, metadata !4141}
!4133 = metadata !{i32 589837, metadata !4131, metadata !"offset", metadata !4051, i32 102, i64 32, i64 32, i64 0, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4134 = metadata !{i32 589837, metadata !4131, metadata !"fill_method", metadata !4051, i32 103, i64 32, i64 32, i64 32, i32 0, metadata !4135} ; [ DW_TAG_member ]
!4135 = metadata !{i32 589828, metadata !4040, metadata !"", metadata !4051, i32 103, i64 32, i64 32, i64 0, i32 0, null, metadata !4136, i32 0, null} ; [ DW_TAG_enumeration_type ]
!4136 = metadata !{metadata !4137, metadata !4138, metadata !4139}
!4137 = metadata !{i32 589864, metadata !"fill_set", i64 0} ; [ DW_TAG_enumerator ]
!4138 = metadata !{i32 589864, metadata !"fill_copy", i64 1} ; [ DW_TAG_enumerator ]
!4139 = metadata !{i32 589864, metadata !"fill_file", i64 2} ; [ DW_TAG_enumerator ]
!4140 = metadata !{i32 589837, metadata !4131, metadata !"length", metadata !4051, i32 104, i64 32, i64 32, i64 64, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4141 = metadata !{i32 589837, metadata !4131, metadata !"arg", metadata !4051, i32 108, i64 64, i64 64, i64 128, i32 0, metadata !4142} ; [ DW_TAG_member ]
!4142 = metadata !{i32 589847, metadata !4040, metadata !"", metadata !4051, i32 105, i64 64, i64 64, i64 0, i32 0, null, metadata !4143, i32 0, null} ; [ DW_TAG_union_type ]
!4143 = metadata !{metadata !4144, metadata !4145}
!4144 = metadata !{i32 589837, metadata !4142, metadata !"value", metadata !4051, i32 106, i64 32, i64 32, i64 0, i32 0, metadata !4045} ; [ DW_TAG_member ]
!4145 = metadata !{i32 589837, metadata !4142, metadata !"string", metadata !4051, i32 107, i64 64, i64 64, i64 0, i32 0, metadata !4097} ; [ DW_TAG_member ]
!4146 = metadata !{i32 589870, i32 0, metadata !4040, metadata !"__create_new_dfile", metadata !"__create_new_dfile", metadata !"", metadata !4040, i32 104, metadata !4147, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (%struct.exe_disk_fi
!4147 = metadata !{i32 589845, metadata !4040, metadata !"", metadata !4040, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4148, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4148 = metadata !{null, metadata !4101, metadata !4064, metadata !4097, metadata !4046, metadata !4128, metadata !4064, metadata !4049, metadata !4045}
!4149 = metadata !{i32 589870, i32 0, metadata !4040, metadata !"klee_init_cp_file", metadata !"klee_init_cp_file", metadata !"klee_init_cp_file", metadata !4040, i32 370, metadata !4150, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct.e
!4150 = metadata !{i32 589845, metadata !4040, metadata !"", metadata !4040, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4151, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4151 = metadata !{metadata !4101, metadata !4046, metadata !4045}
!4152 = metadata !{i32 589870, i32 0, metadata !4040, metadata !"klee_init_fds", metadata !"klee_init_fds", metadata !"klee_init_fds", metadata !4040, i32 249, metadata !4153, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i32, i32, i32, 
!4153 = metadata !{i32 589845, metadata !4040, metadata !"", metadata !4040, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4154, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4154 = metadata !{null, metadata !4064, metadata !4064, metadata !4045, metadata !4045, metadata !4064, metadata !4064, metadata !4064, metadata !4064, metadata !4064, metadata !4045, metadata !4128, metadata !4064, metadata !4128, metadata !4064}
!4155 = metadata !{i32 589870, i32 0, metadata !4156, metadata !"klee_overshift_check", metadata !"klee_overshift_check", metadata !"klee_overshift_check", metadata !4156, i32 20, metadata !4158, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, v
!4156 = metadata !{i32 589865, metadata !"klee_overshift_check.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !4157} ; [ DW_TAG_file_type ]
!4157 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_overshift_check.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0}
!4158 = metadata !{i32 589845, metadata !4156, metadata !"", metadata !4156, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4159, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4159 = metadata !{null, metadata !4160, metadata !4160}
!4160 = metadata !{i32 589860, metadata !4156, metadata !"long long unsigned int", metadata !4156, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4161 = metadata !{i32 589870, i32 0, metadata !4162, metadata !"my_strlen", metadata !"my_strlen", metadata !"", metadata !4162, i32 19, metadata !4164, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!4162 = metadata !{i32 589865, metadata !"klee_mark_arg_symbolic.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !4163} ; [ DW_TAG_file_type ]
!4163 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_mark_arg_symbolic.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 
!4164 = metadata !{i32 589845, metadata !4162, metadata !"", metadata !4162, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4165, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4165 = metadata !{metadata !4166, metadata !4167}
!4166 = metadata !{i32 589860, metadata !4162, metadata !"int", metadata !4162, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4167 = metadata !{i32 589839, metadata !4162, metadata !"", metadata !4162, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4168} ; [ DW_TAG_pointer_type ]
!4168 = metadata !{i32 589860, metadata !4162, metadata !"char", metadata !4162, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4169 = metadata !{i32 589870, i32 0, metadata !4162, metadata !"stat64", metadata !"stat64", metadata !"stat64", metadata !4170, i32 503, metadata !4171, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!4170 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !4163} ; [ DW_TAG_file_type ]
!4171 = metadata !{i32 589845, metadata !4162, metadata !"", metadata !4162, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4172, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4172 = metadata !{metadata !4166, metadata !4173, metadata !4175}
!4173 = metadata !{i32 589839, metadata !4162, metadata !"", metadata !4162, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4174} ; [ DW_TAG_pointer_type ]
!4174 = metadata !{i32 589862, metadata !4162, metadata !"", metadata !4162, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !4168} ; [ DW_TAG_const_type ]
!4175 = metadata !{i32 589839, metadata !4162, metadata !"", metadata !4162, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4176} ; [ DW_TAG_pointer_type ]
!4176 = metadata !{i32 589843, metadata !4162, metadata !"stat64", metadata !4177, i32 120, i64 1152, i64 64, i64 0, i32 0, null, metadata !4178, i32 0, null} ; [ DW_TAG_structure_type ]
!4177 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4163} ; [ DW_TAG_file_type ]
!4178 = metadata !{metadata !4179, metadata !4183, metadata !4185, metadata !4187, metadata !4190, metadata !4192, metadata !4194, metadata !4195, metadata !4196, metadata !4199, metadata !4201, metadata !4203, metadata !4211, metadata !4212, metadata !4
!4179 = metadata !{i32 589837, metadata !4176, metadata !"st_dev", metadata !4177, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !4180} ; [ DW_TAG_member ]
!4180 = metadata !{i32 589846, metadata !4181, metadata !"__dev_t", metadata !4181, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !4182} ; [ DW_TAG_typedef ]
!4181 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4163} ; [ DW_TAG_file_type ]
!4182 = metadata !{i32 589860, metadata !4162, metadata !"long unsigned int", metadata !4162, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4183 = metadata !{i32 589837, metadata !4176, metadata !"st_ino", metadata !4177, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !4184} ; [ DW_TAG_member ]
!4184 = metadata !{i32 589846, metadata !4181, metadata !"__ino64_t", metadata !4181, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !4182} ; [ DW_TAG_typedef ]
!4185 = metadata !{i32 589837, metadata !4176, metadata !"st_nlink", metadata !4177, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !4186} ; [ DW_TAG_member ]
!4186 = metadata !{i32 589846, metadata !4181, metadata !"__nlink_t", metadata !4181, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !4182} ; [ DW_TAG_typedef ]
!4187 = metadata !{i32 589837, metadata !4176, metadata !"st_mode", metadata !4177, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !4188} ; [ DW_TAG_member ]
!4188 = metadata !{i32 589846, metadata !4181, metadata !"__mode_t", metadata !4181, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !4189} ; [ DW_TAG_typedef ]
!4189 = metadata !{i32 589860, metadata !4162, metadata !"unsigned int", metadata !4162, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4190 = metadata !{i32 589837, metadata !4176, metadata !"st_uid", metadata !4177, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !4191} ; [ DW_TAG_member ]
!4191 = metadata !{i32 589846, metadata !4181, metadata !"__uid_t", metadata !4181, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !4189} ; [ DW_TAG_typedef ]
!4192 = metadata !{i32 589837, metadata !4176, metadata !"st_gid", metadata !4177, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !4193} ; [ DW_TAG_member ]
!4193 = metadata !{i32 589846, metadata !4181, metadata !"__gid_t", metadata !4181, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !4189} ; [ DW_TAG_typedef ]
!4194 = metadata !{i32 589837, metadata !4176, metadata !"__pad0", metadata !4177, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !4166} ; [ DW_TAG_member ]
!4195 = metadata !{i32 589837, metadata !4176, metadata !"st_rdev", metadata !4177, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !4180} ; [ DW_TAG_member ]
!4196 = metadata !{i32 589837, metadata !4176, metadata !"st_size", metadata !4177, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !4197} ; [ DW_TAG_member ]
!4197 = metadata !{i32 589846, metadata !4181, metadata !"__off_t", metadata !4181, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !4198} ; [ DW_TAG_typedef ]
!4198 = metadata !{i32 589860, metadata !4162, metadata !"long int", metadata !4162, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4199 = metadata !{i32 589837, metadata !4176, metadata !"st_blksize", metadata !4177, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !4200} ; [ DW_TAG_member ]
!4200 = metadata !{i32 589846, metadata !4181, metadata !"__blksize_t", metadata !4181, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !4198} ; [ DW_TAG_typedef ]
!4201 = metadata !{i32 589837, metadata !4176, metadata !"st_blocks", metadata !4177, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !4202} ; [ DW_TAG_member ]
!4202 = metadata !{i32 589846, metadata !4181, metadata !"__blkcnt64_t", metadata !4181, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !4198} ; [ DW_TAG_typedef ]
!4203 = metadata !{i32 589837, metadata !4176, metadata !"st_atim", metadata !4177, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !4204} ; [ DW_TAG_member ]
!4204 = metadata !{i32 589843, metadata !4162, metadata !"timespec", metadata !4205, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !4206, i32 0, null} ; [ DW_TAG_structure_type ]
!4205 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !4163} ; [ DW_TAG_file_type ]
!4206 = metadata !{metadata !4207, metadata !4209}
!4207 = metadata !{i32 589837, metadata !4204, metadata !"tv_sec", metadata !4205, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !4208} ; [ DW_TAG_member ]
!4208 = metadata !{i32 589846, metadata !4181, metadata !"__time_t", metadata !4181, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !4198} ; [ DW_TAG_typedef ]
!4209 = metadata !{i32 589837, metadata !4204, metadata !"tv_nsec", metadata !4205, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !4210} ; [ DW_TAG_member ]
!4210 = metadata !{i32 589846, metadata !4181, metadata !"__syscall_slong_t", metadata !4181, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !4198} ; [ DW_TAG_typedef ]
!4211 = metadata !{i32 589837, metadata !4176, metadata !"st_mtim", metadata !4177, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !4204} ; [ DW_TAG_member ]
!4212 = metadata !{i32 589837, metadata !4176, metadata !"st_ctim", metadata !4177, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !4204} ; [ DW_TAG_member ]
!4213 = metadata !{i32 589837, metadata !4176, metadata !"__glibc_reserved", metadata !4177, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !4214} ; [ DW_TAG_member ]
!4214 = metadata !{i32 589825, metadata !4162, metadata !"", metadata !4162, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !4210, metadata !3112, i32 0, null} ; [ DW_TAG_array_type ]
!4215 = metadata !{i32 589870, i32 0, metadata !4162, metadata !"klee_mark_arg_symbolic", metadata !"klee_mark_arg_symbolic", metadata !"klee_mark_arg_symbolic", metadata !4162, i32 25, metadata !4216, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 t
!4216 = metadata !{i32 589845, metadata !4162, metadata !"", metadata !4162, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4217, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4217 = metadata !{null, metadata !4166, metadata !4218}
!4218 = metadata !{i32 589839, metadata !4162, metadata !"", metadata !4162, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4167} ; [ DW_TAG_pointer_type ]
!4219 = metadata !{i32 589870, i32 0, metadata !4220, metadata !"klee_div_zero_check", metadata !"klee_div_zero_check", metadata !"klee_div_zero_check", metadata !4220, i32 12, metadata !4222, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void
!4220 = metadata !{i32 589865, metadata !"klee_div_zero_check.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !4221} ; [ DW_TAG_file_type ]
!4221 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_div_zero_check.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} 
!4222 = metadata !{i32 589845, metadata !4220, metadata !"", metadata !4220, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4223, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4223 = metadata !{null, metadata !4224}
!4224 = metadata !{i32 589860, metadata !4220, metadata !"long long int", metadata !4220, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4225 = metadata !{i32 589870, i32 0, metadata !4226, metadata !"klee_range", metadata !"klee_range", metadata !"klee_range", metadata !4226, i32 13, metadata !4228, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i8*)* @klee_rang
!4226 = metadata !{i32 589865, metadata !"klee_range.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !4227} ; [ DW_TAG_file_type ]
!4227 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_range.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TA
!4228 = metadata !{i32 589845, metadata !4226, metadata !"", metadata !4226, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4229, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4229 = metadata !{metadata !4230, metadata !4230, metadata !4230, metadata !4231}
!4230 = metadata !{i32 589860, metadata !4226, metadata !"int", metadata !4226, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4231 = metadata !{i32 589839, metadata !4226, metadata !"", metadata !4226, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4232} ; [ DW_TAG_pointer_type ]
!4232 = metadata !{i32 589862, metadata !4226, metadata !"", metadata !4226, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !4233} ; [ DW_TAG_const_type ]
!4233 = metadata !{i32 589860, metadata !4226, metadata !"char", metadata !4226, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4234 = metadata !{i32 589876, i32 0, metadata !49, metadata !"__evoke_link_warning___fpending", metadata !"__evoke_link_warning___fpending", metadata !"", metadata !49, i32 24, metadata !4235, i1 true, i1 true, [167 x i8]* @__evoke_link_warning___fpendi
!4235 = metadata !{i32 589825, metadata !49, metadata !"", metadata !49, i32 0, i64 1336, i64 8, i64 0, i32 0, metadata !4236, metadata !4237, i32 0, null} ; [ DW_TAG_array_type ]
!4236 = metadata !{i32 589860, metadata !49, metadata !"char", metadata !49, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4237 = metadata !{metadata !4238}
!4238 = metadata !{i32 589857, i64 0, i64 166}    ; [ DW_TAG_subrange_type ]
!4239 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__libc_stack_end", metadata !"__libc_stack_end", metadata !"", metadata !166, i32 52, metadata !194, i1 false, i1 true, i8** @__libc_stack_end} ; [ DW_TAG_variable ]
!4240 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__uclibc_progname", metadata !"__uclibc_progname", metadata !"", metadata !166, i32 110, metadata !4241, i1 false, i1 true, i8** @__uclibc_progname} ; [ DW_TAG_variable ]
!4241 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4242} ; [ DW_TAG_pointer_type ]
!4242 = metadata !{i32 589862, metadata !166, metadata !"", metadata !166, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !192} ; [ DW_TAG_const_type ]
!4243 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__environ", metadata !"__environ", metadata !"", metadata !166, i32 125, metadata !190, i1 false, i1 true, i8*** @__environ} ; [ DW_TAG_variable ]
!4244 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__pagesize", metadata !"__pagesize", metadata !"", metadata !166, i32 129, metadata !4245, i1 false, i1 true, i64* @__pagesize} ; [ DW_TAG_variable ]
!4245 = metadata !{i32 589846, metadata !4246, metadata !"size_t", metadata !4246, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !4247} ; [ DW_TAG_typedef ]
!4246 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !167} ; [ DW_TAG_file_type ]
!4247 = metadata !{i32 589860, metadata !166, metadata !"long unsigned int", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4248 = metadata !{i32 589876, i32 0, metadata !180, metadata !"been_there_done_that", metadata !"been_there_done_that", metadata !"", metadata !166, i32 189, metadata !170, i1 true, i1 true, i32* @been_there_done_that.2848} ; [ DW_TAG_variable ]
!4249 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__app_fini", metadata !"__app_fini", metadata !"", metadata !166, i32 244, metadata !193, i1 false, i1 true, void ()** @__app_fini} ; [ DW_TAG_variable ]
!4250 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__rtld_fini", metadata !"__rtld_fini", metadata !"", metadata !166, i32 247, metadata !193, i1 false, i1 true, void ()** @__rtld_fini} ; [ DW_TAG_variable ]
!4251 = metadata !{i32 589876, i32 0, metadata !205, metadata !"been_there_done_that", metadata !"been_there_done_that", metadata !"", metadata !205, i32 49, metadata !4252, i1 true, i1 true, i32* @been_there_done_that} ; [ DW_TAG_variable ]
!4252 = metadata !{i32 589860, metadata !205, metadata !"int", metadata !205, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4253 = metadata !{i32 589876, i32 0, metadata !267, metadata !"buff", metadata !"buff", metadata !"", metadata !218, i32 82, metadata !227, i1 true, i1 true, i8** @buff.2072} ; [ DW_TAG_variable ]
!4254 = metadata !{i32 589876, i32 0, metadata !267, metadata !"mnt", metadata !"mnt", metadata !"", metadata !218, i32 83, metadata !223, i1 true, i1 true, %struct.mntent* @mnt.2073} ; [ DW_TAG_variable ]
!4255 = metadata !{i32 589876, i32 0, metadata !287, metadata !"error_message_count", metadata !"error_message_count", metadata !"", metadata !287, i32 40, metadata !298, i1 false, i1 true, i32* @error_message_count} ; [ DW_TAG_variable ]
!4256 = metadata !{i32 589876, i32 0, metadata !295, metadata !"old_line_number", metadata !"old_line_number", metadata !"", metadata !287, i32 77, metadata !298, i1 true, i1 true, i32* @old_line_number.2047} ; [ DW_TAG_variable ]
!4257 = metadata !{i32 589876, i32 0, metadata !295, metadata !"old_file_name", metadata !"old_file_name", metadata !"", metadata !287, i32 76, metadata !292, i1 true, i1 true, i8** @old_file_name.2046} ; [ DW_TAG_variable ]
!4258 = metadata !{i32 589876, i32 0, metadata !287, metadata !"error_one_per_line", metadata !"error_one_per_line", metadata !"", metadata !287, i32 43, metadata !291, i1 false, i1 true, i32* @error_one_per_line} ; [ DW_TAG_variable ]
!4259 = metadata !{i32 589876, i32 0, metadata !302, metadata !"__exit_cleanup", metadata !"__exit_cleanup", metadata !"", metadata !302, i32 309, metadata !4260, i1 false, i1 true, void (i32)** @__exit_cleanup} ; [ DW_TAG_variable ]
!4260 = metadata !{i32 589839, metadata !300, metadata !"", metadata !300, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !303} ; [ DW_TAG_pointer_type ]
!4261 = metadata !{i32 589876, i32 0, metadata !756, metadata !"optind", metadata !"optind", metadata !"", metadata !756, i32 152, metadata !768, i1 false, i1 true, i32* @optind} ; [ DW_TAG_variable ]
!4262 = metadata !{i32 589876, i32 0, metadata !756, metadata !"opterr", metadata !"opterr", metadata !"", metadata !756, i32 157, metadata !768, i1 false, i1 true, i32* @opterr} ; [ DW_TAG_variable ]
!4263 = metadata !{i32 589876, i32 0, metadata !756, metadata !"optopt", metadata !"optopt", metadata !"", metadata !756, i32 163, metadata !768, i1 false, i1 true, i32* @optopt} ; [ DW_TAG_variable ]
!4264 = metadata !{i32 589876, i32 0, metadata !756, metadata !"getopt_data", metadata !"getopt_data", metadata !"", metadata !756, i32 167, metadata !764, i1 true, i1 true, %struct._getopt_data* @getopt_data} ; [ DW_TAG_variable ]
!4265 = metadata !{i32 589876, i32 0, metadata !756, metadata !"optarg", metadata !"optarg", metadata !"", metadata !756, i32 137, metadata !761, i1 false, i1 true, i8** @optarg} ; [ DW_TAG_variable ]
!4266 = metadata !{i32 589876, i32 0, metadata !814, metadata !"static_fd", metadata !"static_fd", metadata !"", metadata !814, i32 39, metadata !830, i1 true, i1 true, i32* @static_fd} ; [ DW_TAG_variable ]
!4267 = metadata !{i32 589876, i32 0, metadata !814, metadata !"default_file_name", metadata !"default_file_name", metadata !"", metadata !814, i32 41, metadata !4268, i1 true, i1 true, [14 x i8]* @default_file_name} ; [ DW_TAG_variable ]
!4268 = metadata !{i32 589825, metadata !814, metadata !"", metadata !814, i32 0, i64 112, i64 8, i64 0, i32 0, metadata !833, metadata !3830, i32 0, null} ; [ DW_TAG_array_type ]
!4269 = metadata !{i32 589876, i32 0, metadata !814, metadata !"static_ut_name", metadata !"static_ut_name", metadata !"", metadata !814, i32 42, metadata !883, i1 true, i1 true, i8** @static_ut_name} ; [ DW_TAG_variable ]
!4270 = metadata !{i32 589876, i32 0, metadata !814, metadata !"static_utmp", metadata !"static_utmp", metadata !"", metadata !814, i32 40, metadata !822, i1 true, i1 true, %struct.utmp* @static_utmp} ; [ DW_TAG_variable ]
!4271 = metadata !{i32 589876, i32 0, metadata !928, metadata !"decpt", metadata !"decpt", metadata !"", metadata !928, i32 314, metadata !4272, i1 true, i1 true, [2 x i8]* @decpt} ; [ DW_TAG_variable ]
!4272 = metadata !{i32 589825, metadata !926, metadata !"", metadata !926, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !937, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4273 = metadata !{i32 589876, i32 0, metadata !928, metadata !"the_lconv", metadata !"the_lconv", metadata !"", metadata !928, i32 312, metadata !932, i1 true, i1 true, %struct.lconv* @the_lconv} ; [ DW_TAG_variable ]
!4274 = metadata !{i32 589876, i32 0, metadata !961, metadata !"mbstate", metadata !"mbstate", metadata !"", metadata !964, i32 281, metadata !977, i1 true, i1 true, %struct.__mbstate_t* @mbstate.2221} ; [ DW_TAG_variable ]
!4275 = metadata !{i32 589876, i32 0, metadata !1056, metadata !"nl_data", metadata !"nl_data", metadata !"", metadata !1056, i32 968, metadata !4276, i1 true, i1 true, [417 x i8]* @nl_data} ; [ DW_TAG_variable ]
!4276 = metadata !{i32 589825, metadata !1054, metadata !"", metadata !1054, i32 0, i64 3336, i64 8, i64 0, i32 0, metadata !4277, metadata !4278, i32 0, null} ; [ DW_TAG_array_type ]
!4277 = metadata !{i32 589860, metadata !1054, metadata !"unsigned char", metadata !1054, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!4278 = metadata !{metadata !4279}
!4279 = metadata !{i32 589857, i64 0, i64 416}    ; [ DW_TAG_subrange_type ]
!4280 = metadata !{i32 589876, i32 0, metadata !1083, metadata !"C_string", metadata !"C_string", metadata !"", metadata !1083, i32 159, metadata !4281, i1 true, i1 true, [2 x i8]* @C_string} ; [ DW_TAG_variable ]
!4281 = metadata !{i32 589825, metadata !1081, metadata !"", metadata !1081, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1087, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4282 = metadata !{i32 589876, i32 0, metadata !1147, metadata !"_stdio_streams", metadata !"_stdio_streams", metadata !"", metadata !1147, i32 131, metadata !4283, i1 true, i1 true, [3 x %4]* @_stdio_streams} ; [ DW_TAG_variable ]
!4283 = metadata !{i32 589825, metadata !1147, metadata !"", metadata !1147, i32 0, i64 1920, i64 64, i64 0, i32 0, metadata !4284, metadata !3112, i32 0, null} ; [ DW_TAG_array_type ]
!4284 = metadata !{i32 589846, metadata !4285, metadata !"FILE", metadata !4285, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !4286} ; [ DW_TAG_typedef ]
!4285 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1148} ; [ DW_TAG_file_type ]
!4286 = metadata !{i32 589843, metadata !1147, metadata !"__STDIO_FILE_STRUCT", metadata !4285, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !4287, i32 0, null} ; [ DW_TAG_structure_type ]
!4287 = metadata !{metadata !4288, metadata !4291, metadata !4294, metadata !4296, metadata !4298, metadata !4299, metadata !4300, metadata !4301, metadata !4302, metadata !4303, metadata !4305, metadata !4309}
!4288 = metadata !{i32 589837, metadata !4286, metadata !"__modeflags", metadata !4289, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !4290} ; [ DW_TAG_member ]
!4289 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1148} ; [ DW_TAG_file_type ]
!4290 = metadata !{i32 589860, metadata !1147, metadata !"short unsigned int", metadata !1147, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4291 = metadata !{i32 589837, metadata !4286, metadata !"__ungot_width", metadata !4289, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !4292} ; [ DW_TAG_member ]
!4292 = metadata !{i32 589825, metadata !1147, metadata !"", metadata !1147, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !4293, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4293 = metadata !{i32 589860, metadata !1147, metadata !"unsigned char", metadata !1147, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!4294 = metadata !{i32 589837, metadata !4286, metadata !"__filedes", metadata !4289, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !4295} ; [ DW_TAG_member ]
!4295 = metadata !{i32 589860, metadata !1147, metadata !"int", metadata !1147, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4296 = metadata !{i32 589837, metadata !4286, metadata !"__bufstart", metadata !4289, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !4297} ; [ DW_TAG_member ]
!4297 = metadata !{i32 589839, metadata !1147, metadata !"", metadata !1147, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4293} ; [ DW_TAG_pointer_type ]
!4298 = metadata !{i32 589837, metadata !4286, metadata !"__bufend", metadata !4289, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !4297} ; [ DW_TAG_member ]
!4299 = metadata !{i32 589837, metadata !4286, metadata !"__bufpos", metadata !4289, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !4297} ; [ DW_TAG_member ]
!4300 = metadata !{i32 589837, metadata !4286, metadata !"__bufread", metadata !4289, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !4297} ; [ DW_TAG_member ]
!4301 = metadata !{i32 589837, metadata !4286, metadata !"__bufgetc_u", metadata !4289, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !4297} ; [ DW_TAG_member ]
!4302 = metadata !{i32 589837, metadata !4286, metadata !"__bufputc_u", metadata !4289, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !4297} ; [ DW_TAG_member ]
!4303 = metadata !{i32 589837, metadata !4286, metadata !"__nextopen", metadata !4289, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !4304} ; [ DW_TAG_member ]
!4304 = metadata !{i32 589839, metadata !1147, metadata !"", metadata !1147, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4286} ; [ DW_TAG_pointer_type ]
!4305 = metadata !{i32 589837, metadata !4286, metadata !"__ungot", metadata !4289, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !4306} ; [ DW_TAG_member ]
!4306 = metadata !{i32 589825, metadata !1147, metadata !"", metadata !1147, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !4307, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4307 = metadata !{i32 589846, metadata !4308, metadata !"wchar_t", metadata !4308, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !4295} ; [ DW_TAG_typedef ]
!4308 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1148} ; [ DW_TAG_file_type ]
!4309 = metadata !{i32 589837, metadata !4286, metadata !"__state", metadata !4289, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !4310} ; [ DW_TAG_member ]
!4310 = metadata !{i32 589846, metadata !4311, metadata !"__mbstate_t", metadata !4311, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !4312} ; [ DW_TAG_typedef ]
!4311 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1148} ; [ DW_TAG_file_type ]
!4312 = metadata !{i32 589843, metadata !1147, metadata !"", metadata !4311, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !4313, i32 0, null} ; [ DW_TAG_structure_type ]
!4313 = metadata !{metadata !4314, metadata !4315}
!4314 = metadata !{i32 589837, metadata !4312, metadata !"__mask", metadata !4311, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !4307} ; [ DW_TAG_member ]
!4315 = metadata !{i32 589837, metadata !4312, metadata !"__wc", metadata !4311, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !4307} ; [ DW_TAG_member ]
!4316 = metadata !{i32 589876, i32 0, metadata !1147, metadata !"stdin", metadata !"stdin", metadata !"", metadata !1147, i32 154, metadata !4317, i1 false, i1 true, %4** @stdin} ; [ DW_TAG_variable ]
!4317 = metadata !{i32 589839, metadata !1147, metadata !"", metadata !1147, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4284} ; [ DW_TAG_pointer_type ]
!4318 = metadata !{i32 589876, i32 0, metadata !1147, metadata !"stdout", metadata !"stdout", metadata !"", metadata !1147, i32 155, metadata !4317, i1 false, i1 true, %4** @stdout} ; [ DW_TAG_variable ]
!4319 = metadata !{i32 589876, i32 0, metadata !1147, metadata !"stderr", metadata !"stderr", metadata !"", metadata !1147, i32 156, metadata !4317, i1 false, i1 true, %4** @stderr} ; [ DW_TAG_variable ]
!4320 = metadata !{i32 589876, i32 0, metadata !1147, metadata !"__stdin", metadata !"__stdin", metadata !"", metadata !1147, i32 159, metadata !4317, i1 false, i1 true, %4** @__stdin} ; [ DW_TAG_variable ]
!4321 = metadata !{i32 589876, i32 0, metadata !1147, metadata !"__stdout", metadata !"__stdout", metadata !"", metadata !1147, i32 162, metadata !4317, i1 false, i1 true, %4** @__stdout} ; [ DW_TAG_variable ]
!4322 = metadata !{i32 589876, i32 0, metadata !1147, metadata !"_stdio_openlist", metadata !"_stdio_openlist", metadata !"", metadata !1147, i32 180, metadata !4304, i1 false, i1 true, %4** @_stdio_openlist} ; [ DW_TAG_variable ]
!4323 = metadata !{i32 589876, i32 0, metadata !4324, metadata !"errno", metadata !"errno", metadata !"", metadata !4324, i32 7, metadata !4326, i1 false, i1 true, i32* @errno} ; [ DW_TAG_variable ]
!4324 = metadata !{i32 589865, metadata !"errno.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !4325} ; [ DW_TAG_file_type ]
!4325 = metadata !{i32 589841, i32 0, i32 1, metadata !"errno.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!4326 = metadata !{i32 589860, metadata !4324, metadata !"int", metadata !4324, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4327 = metadata !{i32 589876, i32 0, metadata !4324, metadata !"h_errno", metadata !"h_errno", metadata !"", metadata !4324, i32 8, metadata !4326, i1 false, i1 true, i32* @h_errno} ; [ DW_TAG_variable ]
!4328 = metadata !{i32 589876, i32 0, metadata !1818, metadata !"desc2flag", metadata !"desc2flag", metadata !"", metadata !1818, i32 569, metadata !4329, i1 true, i1 true, [13 x i16]* @desc2flag} ; [ DW_TAG_variable ]
!4329 = metadata !{i32 589825, metadata !1816, metadata !"", metadata !1816, i32 0, i64 208, i64 16, i64 0, i32 0, metadata !4330, metadata !4331, i32 0, null} ; [ DW_TAG_array_type ]
!4330 = metadata !{i32 589860, metadata !1816, metadata !"short unsigned int", metadata !1816, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4331 = metadata !{metadata !4332}
!4332 = metadata !{i32 589857, i64 0, i64 12}     ; [ DW_TAG_subrange_type ]
!4333 = metadata !{i32 589876, i32 0, metadata !1827, metadata !"mbstate", metadata !"mbstate", metadata !"", metadata !1830, i32 699, metadata !1844, i1 true, i1 true, %struct.__mbstate_t* @mbstate.2222} ; [ DW_TAG_variable ]
!4334 = metadata !{i32 589876, i32 0, metadata !1850, metadata !"mbstate", metadata !"mbstate", metadata !"", metadata !1853, i32 374, metadata !1867, i1 true, i1 true, %struct.__mbstate_t* @mbstate.2221221} ; [ DW_TAG_variable ]
!4335 = metadata !{i32 589876, i32 0, metadata !2005, metadata !"buf", metadata !"buf", metadata !"", metadata !2006, i32 17, metadata !4336, i1 true, i1 true, [50 x i8]* @buf.1212} ; [ DW_TAG_variable ]
!4336 = metadata !{i32 589825, metadata !2006, metadata !"", metadata !2006, i32 0, i64 400, i64 8, i64 0, i32 0, metadata !2011, metadata !4337, i32 0, null} ; [ DW_TAG_array_type ]
!4337 = metadata !{metadata !4338}
!4338 = metadata !{i32 589857, i64 0, i64 49}     ; [ DW_TAG_subrange_type ]
!4339 = metadata !{i32 589876, i32 0, metadata !2079, metadata !"spec_base", metadata !"spec_base", metadata !"", metadata !2035, i32 1441, metadata !4340, i1 true, i1 true, [7 x i8]* @spec_base.3674} ; [ DW_TAG_variable ]
!4340 = metadata !{i32 589825, metadata !2033, metadata !"", metadata !2033, i32 0, i64 56, i64 8, i64 0, i32 0, metadata !2089, metadata !4341, i32 0, null} ; [ DW_TAG_array_type ]
!4341 = metadata !{metadata !4342}
!4342 = metadata !{i32 589857, i64 0, i64 6}      ; [ DW_TAG_subrange_type ]
!4343 = metadata !{i32 589876, i32 0, metadata !2079, metadata !"prefix", metadata !"prefix", metadata !"", metadata !2035, i32 1443, metadata !4344, i1 true, i1 true, [12 x i8]* @prefix.3675} ; [ DW_TAG_variable ]
!4344 = metadata !{i32 589825, metadata !2033, metadata !"", metadata !2033, i32 0, i64 96, i64 8, i64 0, i32 0, metadata !2089, metadata !4345, i32 0, null} ; [ DW_TAG_array_type ]
!4345 = metadata !{metadata !4346}
!4346 = metadata !{i32 589857, i64 0, i64 11}     ; [ DW_TAG_subrange_type ]
!4347 = metadata !{i32 589876, i32 0, metadata !4348, metadata !"__C_ctype_b_data", metadata !"__C_ctype_b_data", metadata !"", metadata !4348, i32 471, metadata !4350, i1 false, i1 true, [384 x i16]* @__C_ctype_b_data} ; [ DW_TAG_variable ]
!4348 = metadata !{i32 589865, metadata !"ctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !4349} ; [ DW_TAG_file_type ]
!4349 = metadata !{i32 589841, i32 0, i32 1, metadata !"__C_ctype_b.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0}
!4350 = metadata !{i32 589825, metadata !4351, metadata !"", metadata !4351, i32 0, i64 6144, i64 16, i64 0, i32 0, metadata !4352, metadata !4355, i32 0, null} ; [ DW_TAG_array_type ]
!4351 = metadata !{i32 589865, metadata !"__C_ctype_b.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !4349} ; [ DW_TAG_file_type ]
!4352 = metadata !{i32 589846, metadata !4353, metadata !"__ctype_mask_t", metadata !4353, i32 38, i64 0, i64 0, i64 0, i32 0, metadata !4354} ; [ DW_TAG_typedef ]
!4353 = metadata !{i32 589865, metadata !"uClibc_touplow.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !4349} ; [ DW_TAG_file_type ]
!4354 = metadata !{i32 589860, metadata !4351, metadata !"short unsigned int", metadata !4351, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4355 = metadata !{metadata !4356}
!4356 = metadata !{i32 589857, i64 0, i64 383}    ; [ DW_TAG_subrange_type ]
!4357 = metadata !{i32 589876, i32 0, metadata !4348, metadata !"__C_ctype_b", metadata !"__C_ctype_b", metadata !"", metadata !4348, i32 862, metadata !4358, i1 false, i1 true, i16** @__C_ctype_b} ; [ DW_TAG_variable ]
!4358 = metadata !{i32 589839, metadata !4351, metadata !"", metadata !4351, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4352} ; [ DW_TAG_pointer_type ]
!4359 = metadata !{i32 589876, i32 0, metadata !4348, metadata !"__ctype_b", metadata !"__ctype_b", metadata !"", metadata !4348, i32 867, metadata !4358, i1 false, i1 true, i16** @__ctype_b} ; [ DW_TAG_variable ]
!4360 = metadata !{i32 589876, i32 0, metadata !2276, metadata !"spec_base", metadata !"spec_base", metadata !"", metadata !2276, i32 1787, metadata !4361, i1 true, i1 true, [15 x i8]* @spec_base} ; [ DW_TAG_variable ]
!4361 = metadata !{i32 589825, metadata !2274, metadata !"", metadata !2274, i32 0, i64 120, i64 8, i64 0, i32 0, metadata !2293, metadata !4362, i32 0, null} ; [ DW_TAG_array_type ]
!4362 = metadata !{metadata !4363}
!4363 = metadata !{i32 589857, i64 0, i64 14}     ; [ DW_TAG_subrange_type ]
!4364 = metadata !{i32 589876, i32 0, metadata !2276, metadata !"nil_string", metadata !"nil_string", metadata !"", metadata !2276, i32 1788, metadata !4365, i1 true, i1 true, [6 x i8]* @nil_string} ; [ DW_TAG_variable ]
!4365 = metadata !{i32 589825, metadata !2274, metadata !"", metadata !2274, i32 0, i64 48, i64 8, i64 0, i32 0, metadata !2293, metadata !1144, i32 0, null} ; [ DW_TAG_array_type ]
!4366 = metadata !{i32 589876, i32 0, metadata !2273, metadata !"nan_inf_str", metadata !"nan_inf_str", metadata !"", metadata !2276, i32 2154, metadata !4367, i1 true, i1 true, [11 x i8]* @nan_inf_str.3836} ; [ DW_TAG_variable ]
!4367 = metadata !{i32 589825, metadata !2274, metadata !"", metadata !2274, i32 0, i64 88, i64 8, i64 0, i32 0, metadata !2293, metadata !4368, i32 0, null} ; [ DW_TAG_array_type ]
!4368 = metadata !{metadata !4369}
!4369 = metadata !{i32 589857, i64 0, i64 10}     ; [ DW_TAG_subrange_type ]
!4370 = metadata !{i32 589876, i32 0, metadata !2362, metadata !"__exit_count", metadata !"__exit_count", metadata !"", metadata !2362, i32 226, metadata !2381, i1 false, i1 true, i32* @__exit_count} ; [ DW_TAG_variable ]
!4371 = metadata !{i32 589876, i32 0, metadata !2362, metadata !"__exit_function_table", metadata !"__exit_function_table", metadata !"", metadata !2362, i32 228, metadata !2365, i1 false, i1 true, %struct.exit_function** @__exit_function_table} ; [ DW_T
!4372 = metadata !{i32 589876, i32 0, metadata !2362, metadata !"__exit_slots", metadata !"__exit_slots", metadata !"", metadata !2362, i32 229, metadata !2381, i1 false, i1 true, i32* @__exit_slots} ; [ DW_TAG_variable ]
!4373 = metadata !{i32 589876, i32 0, metadata !2400, metadata !"decpt_str", metadata !"decpt_str", metadata !"", metadata !2400, i32 711, metadata !4374, i1 true, i1 true, [2 x i8]* @decpt_str} ; [ DW_TAG_variable ]
!4374 = metadata !{i32 589825, metadata !2398, metadata !"", metadata !2398, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2447, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4375 = metadata !{i32 589876, i32 0, metadata !2473, metadata !"spec_flags", metadata !"spec_flags", metadata !"", metadata !2473, i32 822, metadata !4376, i1 true, i1 true, [4 x i8]* @spec_flags} ; [ DW_TAG_variable ]
!4376 = metadata !{i32 589825, metadata !2471, metadata !"", metadata !2471, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2490, metadata !838, i32 0, null} ; [ DW_TAG_array_type ]
!4377 = metadata !{i32 589876, i32 0, metadata !2473, metadata !"spec_chars", metadata !"spec_chars", metadata !"", metadata !2473, i32 824, metadata !4378, i1 true, i1 true, [23 x i8]* @spec_chars} ; [ DW_TAG_variable ]
!4378 = metadata !{i32 589825, metadata !2471, metadata !"", metadata !2471, i32 0, i64 184, i64 8, i64 0, i32 0, metadata !2490, metadata !4379, i32 0, null} ; [ DW_TAG_array_type ]
!4379 = metadata !{metadata !4380}
!4380 = metadata !{i32 589857, i64 0, i64 22}     ; [ DW_TAG_subrange_type ]
!4381 = metadata !{i32 589876, i32 0, metadata !2473, metadata !"qual_chars", metadata !"qual_chars", metadata !"", metadata !2473, i32 825, metadata !4382, i1 true, i1 true, [18 x i8]* @qual_chars} ; [ DW_TAG_variable ]
!4382 = metadata !{i32 589825, metadata !2471, metadata !"", metadata !2471, i32 0, i64 144, i64 8, i64 0, i32 0, metadata !2490, metadata !4383, i32 0, null} ; [ DW_TAG_array_type ]
!4383 = metadata !{metadata !4384}
!4384 = metadata !{i32 589857, i64 0, i64 17}     ; [ DW_TAG_subrange_type ]
!4385 = metadata !{i32 589876, i32 0, metadata !2473, metadata !"spec_ranges", metadata !"spec_ranges", metadata !"", metadata !2473, i32 826, metadata !4386, i1 true, i1 true, [8 x i8]* @spec_ranges} ; [ DW_TAG_variable ]
!4386 = metadata !{i32 589825, metadata !2471, metadata !"", metadata !2471, i32 0, i64 64, i64 8, i64 0, i32 0, metadata !2490, metadata !3300, i32 0, null} ; [ DW_TAG_array_type ]
!4387 = metadata !{i32 589876, i32 0, metadata !2473, metadata !"spec_allowed", metadata !"spec_allowed", metadata !"", metadata !2473, i32 827, metadata !4388, i1 true, i1 true, [8 x i16]* @spec_allowed} ; [ DW_TAG_variable ]
!4388 = metadata !{i32 589825, metadata !2471, metadata !"", metadata !2471, i32 0, i64 128, i64 16, i64 0, i32 0, metadata !4389, metadata !3300, i32 0, null} ; [ DW_TAG_array_type ]
!4389 = metadata !{i32 589860, metadata !2471, metadata !"short unsigned int", metadata !2471, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4390 = metadata !{i32 589876, i32 0, metadata !2579, metadata !"unknown", metadata !"unknown", metadata !"", metadata !2580, i32 170, metadata !4391, i1 true, i1 true, [14 x i8]* @unknown.1225} ; [ DW_TAG_variable ]
!4391 = metadata !{i32 589825, metadata !2580, metadata !"", metadata !2580, i32 0, i64 112, i64 8, i64 0, i32 0, metadata !2586, metadata !3830, i32 0, null} ; [ DW_TAG_array_type ]
!4392 = metadata !{i32 589876, i32 0, metadata !2591, metadata !"fmt", metadata !"fmt", metadata !"", metadata !2591, i32 102, metadata !4393, i1 true, i1 true, [20 x i8]* @fmt} ; [ DW_TAG_variable ]
!4393 = metadata !{i32 589825, metadata !2591, metadata !"", metadata !2591, i32 0, i64 160, i64 8, i64 0, i32 0, metadata !4394, metadata !866, i32 0, null} ; [ DW_TAG_array_type ]
!4394 = metadata !{i32 589860, metadata !2591, metadata !"char", metadata !2591, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4395 = metadata !{i32 589876, i32 0, metadata !2591, metadata !"exp10_table", metadata !"exp10_table", metadata !"", metadata !2591, i32 116, metadata !4396, i1 true, i1 true, [13 x x86_fp80]* @exp10_table} ; [ DW_TAG_variable ]
!4396 = metadata !{i32 589825, metadata !2591, metadata !"", metadata !2591, i32 0, i64 1664, i64 128, i64 0, i32 0, metadata !2631, metadata !4331, i32 0, null} ; [ DW_TAG_array_type ]
!4397 = metadata !{i32 589876, i32 0, metadata !2740, metadata !"type_codes", metadata !"type_codes", metadata !"", metadata !2740, i32 759, metadata !4398, i1 true, i1 true, [12 x i16]* @type_codes} ; [ DW_TAG_variable ]
!4398 = metadata !{i32 589825, metadata !2738, metadata !"", metadata !2738, i32 0, i64 192, i64 16, i64 0, i32 0, metadata !4399, metadata !4345, i32 0, null} ; [ DW_TAG_array_type ]
!4399 = metadata !{i32 589860, metadata !2738, metadata !"short int", metadata !2738, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4400 = metadata !{i32 589876, i32 0, metadata !2740, metadata !"type_sizes", metadata !"type_sizes", metadata !"", metadata !2740, i32 777, metadata !4401, i1 true, i1 true, [12 x i8]* @type_sizes} ; [ DW_TAG_variable ]
!4401 = metadata !{i32 589825, metadata !2738, metadata !"", metadata !2738, i32 0, i64 96, i64 8, i64 0, i32 0, metadata !2775, metadata !4345, i32 0, null} ; [ DW_TAG_array_type ]
!4402 = metadata !{i32 589876, i32 0, metadata !2747, metadata !"spec_flags", metadata !"spec_flags", metadata !"", metadata !2740, i32 861, metadata !4403, i1 true, i1 true, [8 x i8]* @spec_flags.3665} ; [ DW_TAG_variable ]
!4403 = metadata !{i32 589825, metadata !2738, metadata !"", metadata !2738, i32 0, i64 64, i64 8, i64 0, i32 0, metadata !2757, metadata !3300, i32 0, null} ; [ DW_TAG_array_type ]
!4404 = metadata !{i32 589876, i32 0, metadata !2747, metadata !"qual_chars", metadata !"qual_chars", metadata !"", metadata !2740, i32 866, metadata !4405, i1 true, i1 true, [20 x i8]* @qual_chars.3670} ; [ DW_TAG_variable ]
!4405 = metadata !{i32 589825, metadata !2738, metadata !"", metadata !2738, i32 0, i64 160, i64 8, i64 0, i32 0, metadata !2757, metadata !866, i32 0, null} ; [ DW_TAG_array_type ]
!4406 = metadata !{i32 589876, i32 0, metadata !2747, metadata !"spec_chars", metadata !"spec_chars", metadata !"", metadata !2740, i32 862, metadata !4407, i1 true, i1 true, [21 x i8]* @spec_chars.3666} ; [ DW_TAG_variable ]
!4407 = metadata !{i32 589825, metadata !2738, metadata !"", metadata !2738, i32 0, i64 168, i64 8, i64 0, i32 0, metadata !2757, metadata !4408, i32 0, null} ; [ DW_TAG_array_type ]
!4408 = metadata !{metadata !4409}
!4409 = metadata !{i32 589857, i64 0, i64 20}     ; [ DW_TAG_subrange_type ]
!4410 = metadata !{i32 589876, i32 0, metadata !2747, metadata !"spec_ranges", metadata !"spec_ranges", metadata !"", metadata !2740, i32 863, metadata !4411, i1 true, i1 true, [9 x i8]* @spec_ranges.3667} ; [ DW_TAG_variable ]
!4411 = metadata !{i32 589825, metadata !2738, metadata !"", metadata !2738, i32 0, i64 72, i64 8, i64 0, i32 0, metadata !2757, metadata !2107, i32 0, null} ; [ DW_TAG_array_type ]
!4412 = metadata !{i32 589876, i32 0, metadata !2747, metadata !"spec_or_mask", metadata !"spec_or_mask", metadata !"", metadata !2740, i32 864, metadata !4413, i1 true, i1 true, [8 x i16]* @spec_or_mask.3668} ; [ DW_TAG_variable ]
!4413 = metadata !{i32 589825, metadata !2738, metadata !"", metadata !2738, i32 0, i64 128, i64 16, i64 0, i32 0, metadata !4399, metadata !3300, i32 0, null} ; [ DW_TAG_array_type ]
!4414 = metadata !{i32 589876, i32 0, metadata !2747, metadata !"spec_and_mask", metadata !"spec_and_mask", metadata !"", metadata !2740, i32 865, metadata !4413, i1 true, i1 true, [8 x i16]* @spec_and_mask.3669} ; [ DW_TAG_variable ]
!4415 = metadata !{i32 589876, i32 0, metadata !3050, metadata !"nan_inf_str", metadata !"nan_inf_str", metadata !"", metadata !3053, i32 348, metadata !4416, i1 true, i1 true, [21 x i8]* @nan_inf_str.2180} ; [ DW_TAG_variable ]
!4416 = metadata !{i32 589825, metadata !3051, metadata !"", metadata !3051, i32 0, i64 168, i64 8, i64 0, i32 0, metadata !3061, metadata !4408, i32 0, null} ; [ DW_TAG_array_type ]
!4417 = metadata !{i32 589876, i32 0, metadata !4418, metadata !"_string_syserrmsgs", metadata !"_string_syserrmsgs", metadata !"", metadata !4418, i32 13, metadata !4420, i1 false, i1 true, [2906 x i8]* @_string_syserrmsgs} ; [ DW_TAG_variable ]
!4418 = metadata !{i32 589865, metadata !"_string_syserrmsgs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !4419} ; [ DW_TAG_file_type ]
!4419 = metadata !{i32 589841, i32 0, i32 1, metadata !"_string_syserrmsgs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32
!4420 = metadata !{i32 589825, metadata !4418, metadata !"", metadata !4418, i32 0, i64 23248, i64 8, i64 0, i32 0, metadata !4421, metadata !4422, i32 0, null} ; [ DW_TAG_array_type ]
!4421 = metadata !{i32 589860, metadata !4418, metadata !"char", metadata !4418, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4422 = metadata !{metadata !4423}
!4423 = metadata !{i32 589857, i64 0, i64 2905}   ; [ DW_TAG_subrange_type ]
!4424 = metadata !{i32 589876, i32 0, metadata !4425, metadata !"__C_ctype_tolower_data", metadata !"__C_ctype_tolower_data", metadata !"", metadata !4425, i32 878, metadata !4427, i1 false, i1 true, [384 x i16]* @__C_ctype_tolower_data} ; [ DW_TAG_varia
!4425 = metadata !{i32 589865, metadata !"ctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !4426} ; [ DW_TAG_file_type ]
!4426 = metadata !{i32 589841, i32 0, i32 1, metadata !"__C_ctype_tolower.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", 
!4427 = metadata !{i32 589825, metadata !4428, metadata !"", metadata !4428, i32 0, i64 6144, i64 16, i64 0, i32 0, metadata !4429, metadata !4355, i32 0, null} ; [ DW_TAG_array_type ]
!4428 = metadata !{i32 589865, metadata !"__C_ctype_tolower.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !4426} ; [ DW_TAG_file_type ]
!4429 = metadata !{i32 589846, metadata !4430, metadata !"__ctype_touplow_t", metadata !4430, i32 42, i64 0, i64 0, i64 0, i32 0, metadata !4431} ; [ DW_TAG_typedef ]
!4430 = metadata !{i32 589865, metadata !"uClibc_touplow.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !4426} ; [ DW_TAG_file_type ]
!4431 = metadata !{i32 589860, metadata !4428, metadata !"short int", metadata !4428, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4432 = metadata !{i32 589876, i32 0, metadata !4425, metadata !"__C_ctype_tolower", metadata !"__C_ctype_tolower", metadata !"", metadata !4425, i32 981, metadata !4433, i1 false, i1 true, i16** @__C_ctype_tolower} ; [ DW_TAG_variable ]
!4433 = metadata !{i32 589839, metadata !4428, metadata !"", metadata !4428, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4429} ; [ DW_TAG_pointer_type ]
!4434 = metadata !{i32 589876, i32 0, metadata !4425, metadata !"__ctype_tolower", metadata !"__ctype_tolower", metadata !"", metadata !4425, i32 988, metadata !4433, i1 false, i1 true, i16** @__ctype_tolower} ; [ DW_TAG_variable ]
!4435 = metadata !{i32 589876, i32 0, metadata !3502, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3316, i32 413, metadata !3326, i1 true, i1 true, i32* @n_calls.5871} ; [ DW_TAG_variable ]
!4436 = metadata !{i32 589876, i32 0, metadata !3618, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3316, i32 1985, metadata !3326, i1 true, i1 true, i32* @n_calls.7064} ; [ DW_TAG_variable ]
!4437 = metadata !{i32 589876, i32 0, metadata !3621, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3316, i32 1334, metadata !3326, i1 true, i1 true, i32* @n_calls.6554} ; [ DW_TAG_variable ]
!4438 = metadata !{i32 589876, i32 0, metadata !3627, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3316, i32 541, metadata !3326, i1 true, i1 true, i32* @n_calls.5974} ; [ DW_TAG_variable ]
!4439 = metadata !{i32 589876, i32 0, metadata !3630, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3316, i32 456, metadata !3326, i1 true, i1 true, i32* @n_calls.5898} ; [ DW_TAG_variable ]
!4440 = metadata !{i32 589876, i32 0, metadata !3648, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3316, i32 951, metadata !3326, i1 true, i1 true, i32* @n_calls.6299} ; [ DW_TAG_variable ]
!4441 = metadata !{i32 589876, i32 0, metadata !3651, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3316, i32 929, metadata !3326, i1 true, i1 true, i32* @n_calls.6276} ; [ DW_TAG_variable ]
!4442 = metadata !{i32 589876, i32 0, metadata !3658, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3316, i32 606, metadata !3326, i1 true, i1 true, i32* @n_calls.6018} ; [ DW_TAG_variable ]
!4443 = metadata !{i32 589876, i32 0, metadata !3316, metadata !"UseConcretePath", metadata !"UseConcretePath", metadata !"", metadata !3316, i32 42, metadata !3552, i1 false, i1 true, i8* @UseConcretePath} ; [ DW_TAG_variable ]
!4444 = metadata !{i32 589876, i32 0, metadata !3679, metadata !"dummy_dfile", metadata !"dummy_dfile", metadata !"", metadata !3679, i32 85, metadata !3683, i1 true, i1 true, %struct.exe_disk_file_t* @dummy_dfile} ; [ DW_TAG_variable ]
!4445 = metadata !{i32 589876, i32 0, metadata !4040, metadata !"__one_line_streams", metadata !"__one_line_streams", metadata !"", metadata !4040, i32 49, metadata !4045, i1 true, i1 true, null} ; [ DW_TAG_variable ]
!4446 = metadata !{i32 589876, i32 0, metadata !4040, metadata !"__stream_fill_info", metadata !"__stream_fill_info", metadata !"", metadata !4040, i32 50, metadata !4128, i1 true, i1 true, %struct.fill_info_t** @__stream_fill_info} ; [ DW_TAG_variable ]
!4447 = metadata !{i32 589876, i32 0, metadata !4040, metadata !"__n_stream_fill_info", metadata !"__n_stream_fill_info", metadata !"", metadata !4040, i32 51, metadata !4064, i1 true, i1 true, i32* @__n_stream_fill_info} ; [ DW_TAG_variable ]
!4448 = metadata !{i32 589876, i32 0, metadata !4040, metadata !"__dgram_fill_info", metadata !"__dgram_fill_info", metadata !"", metadata !4040, i32 52, metadata !4128, i1 true, i1 true, %struct.fill_info_t** @__dgram_fill_info} ; [ DW_TAG_variable ]
!4449 = metadata !{i32 589876, i32 0, metadata !4040, metadata !"__n_dgram_fill_info", metadata !"__n_dgram_fill_info", metadata !"", metadata !4040, i32 53, metadata !4064, i1 true, i1 true, i32* @__n_dgram_fill_info} ; [ DW_TAG_variable ]
!4450 = metadata !{i32 589876, i32 0, metadata !4040, metadata !"__exe_env", metadata !"__exe_env", metadata !"", metadata !4040, i32 39, metadata !4451, i1 false, i1 true, %struct.exe_sym_env_t* @__exe_env} ; [ DW_TAG_variable ]
!4451 = metadata !{i32 589846, metadata !4051, metadata !"exe_sym_env_t", metadata !4051, i32 101, i64 0, i64 0, i64 0, i32 0, metadata !4452} ; [ DW_TAG_typedef ]
!4452 = metadata !{i32 589843, metadata !4040, metadata !"", metadata !4051, i32 88, i64 14464, i64 64, i64 0, i32 0, null, metadata !4453, i32 0, null} ; [ DW_TAG_structure_type ]
!4453 = metadata !{metadata !4454, metadata !4468, metadata !4470, metadata !4471}
!4454 = metadata !{i32 589837, metadata !4452, metadata !"fds", metadata !4051, i32 89, i64 14336, i64 64, i64 0, i32 0, metadata !4455} ; [ DW_TAG_member ]
!4455 = metadata !{i32 589825, metadata !4040, metadata !"", metadata !4040, i32 0, i64 14336, i64 64, i64 0, i32 0, metadata !4456, metadata !834, i32 0, null} ; [ DW_TAG_array_type ]
!4456 = metadata !{i32 589846, metadata !4051, metadata !"exe_file_t", metadata !4051, i32 59, i64 0, i64 0, i64 0, i32 0, metadata !4457} ; [ DW_TAG_typedef ]
!4457 = metadata !{i32 589843, metadata !4040, metadata !"exe_file_t", metadata !4051, i32 44, i64 448, i64 64, i64 0, i32 0, null, metadata !4458, i32 0, null} ; [ DW_TAG_structure_type ]
!4458 = metadata !{metadata !4459, metadata !4460, metadata !4461, metadata !4464, metadata !4465, metadata !4466, metadata !4467}
!4459 = metadata !{i32 589837, metadata !4457, metadata !"fd", metadata !4051, i32 45, i64 32, i64 32, i64 0, i32 0, metadata !4045} ; [ DW_TAG_member ]
!4460 = metadata !{i32 589837, metadata !4457, metadata !"flags", metadata !4051, i32 46, i64 32, i64 32, i64 32, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4461 = metadata !{i32 589837, metadata !4457, metadata !"off", metadata !4051, i32 49, i64 64, i64 64, i64 64, i32 0, metadata !4462} ; [ DW_TAG_member ]
!4462 = metadata !{i32 589846, metadata !4463, metadata !"off64_t", metadata !4463, i32 98, i64 0, i64 0, i64 0, i32 0, metadata !4073} ; [ DW_TAG_typedef ]
!4463 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !4041} ; [ DW_TAG_file_type ]
!4464 = metadata !{i32 589837, metadata !4457, metadata !"dfile", metadata !4051, i32 50, i64 64, i64 64, i64 128, i32 0, metadata !4101} ; [ DW_TAG_member ]
!4465 = metadata !{i32 589837, metadata !4457, metadata !"local", metadata !4051, i32 51, i64 128, i64 64, i64 192, i32 0, metadata !4111} ; [ DW_TAG_member ]
!4466 = metadata !{i32 589837, metadata !4457, metadata !"foreign", metadata !4051, i32 52, i64 64, i64 64, i64 320, i32 0, metadata !4110} ; [ DW_TAG_member ]
!4467 = metadata !{i32 589837, metadata !4457, metadata !"domain", metadata !4051, i32 56, i64 32, i64 32, i64 384, i32 0, metadata !4045} ; [ DW_TAG_member ]
!4468 = metadata !{i32 589837, metadata !4452, metadata !"umask", metadata !4051, i32 90, i64 32, i64 32, i64 14336, i32 0, metadata !4469} ; [ DW_TAG_member ]
!4469 = metadata !{i32 589846, metadata !4463, metadata !"mode_t", metadata !4463, i32 75, i64 0, i64 0, i64 0, i32 0, metadata !4064} ; [ DW_TAG_typedef ]
!4470 = metadata !{i32 589837, metadata !4452, metadata !"version", metadata !4051, i32 91, i64 32, i64 32, i64 14368, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4471 = metadata !{i32 589837, metadata !4452, metadata !"save_all_writes", metadata !4051, i32 95, i64 32, i64 32, i64 14400, i32 0, metadata !4045} ; [ DW_TAG_member ]
!4472 = metadata !{i32 589876, i32 0, metadata !4040, metadata !"__exe_fs", metadata !"__exe_fs", metadata !"", metadata !4040, i32 26, metadata !4473, i1 false, i1 true, %struct.exe_file_system_t* @__exe_fs} ; [ DW_TAG_variable ]
!4473 = metadata !{i32 589846, metadata !4051, metadata !"exe_file_system_t", metadata !4051, i32 88, i64 0, i64 0, i64 0, i32 0, metadata !4474} ; [ DW_TAG_typedef ]
!4474 = metadata !{i32 589843, metadata !4040, metadata !"", metadata !4051, i32 59, i64 1216, i64 64, i64 0, i32 0, null, metadata !4475, i32 0, null} ; [ DW_TAG_structure_type ]
!4475 = metadata !{metadata !4476, metadata !4477, metadata !4478, metadata !4479, metadata !4480, metadata !4481, metadata !4482, metadata !4483, metadata !4484, metadata !4485, metadata !4486, metadata !4487, metadata !4488, metadata !4489, metadata !4
!4476 = metadata !{i32 589837, metadata !4474, metadata !"n_sym_files", metadata !4051, i32 60, i64 32, i64 32, i64 0, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4477 = metadata !{i32 589837, metadata !4474, metadata !"n_sym_files_used", metadata !4051, i32 61, i64 32, i64 32, i64 32, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4478 = metadata !{i32 589837, metadata !4474, metadata !"n_cp_files", metadata !4051, i32 62, i64 32, i64 32, i64 64, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4479 = metadata !{i32 589837, metadata !4474, metadata !"sym_stdin", metadata !4051, i32 63, i64 64, i64 64, i64 128, i32 0, metadata !4101} ; [ DW_TAG_member ]
!4480 = metadata !{i32 589837, metadata !4474, metadata !"sym_stdout", metadata !4051, i32 63, i64 64, i64 64, i64 192, i32 0, metadata !4101} ; [ DW_TAG_member ]
!4481 = metadata !{i32 589837, metadata !4474, metadata !"stdout_writes", metadata !4051, i32 64, i64 32, i64 32, i64 256, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4482 = metadata !{i32 589837, metadata !4474, metadata !"sym_files", metadata !4051, i32 65, i64 64, i64 64, i64 320, i32 0, metadata !4101} ; [ DW_TAG_member ]
!4483 = metadata !{i32 589837, metadata !4474, metadata !"cp_files", metadata !4051, i32 66, i64 64, i64 64, i64 384, i32 0, metadata !4101} ; [ DW_TAG_member ]
!4484 = metadata !{i32 589837, metadata !4474, metadata !"n_sym_streams", metadata !4051, i32 68, i64 32, i64 32, i64 448, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4485 = metadata !{i32 589837, metadata !4474, metadata !"n_sym_streams_used", metadata !4051, i32 69, i64 32, i64 32, i64 480, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4486 = metadata !{i32 589837, metadata !4474, metadata !"sym_streams", metadata !4051, i32 70, i64 64, i64 64, i64 512, i32 0, metadata !4101} ; [ DW_TAG_member ]
!4487 = metadata !{i32 589837, metadata !4474, metadata !"n_sym_dgrams", metadata !4051, i32 72, i64 32, i64 32, i64 576, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4488 = metadata !{i32 589837, metadata !4474, metadata !"n_sym_dgrams_used", metadata !4051, i32 73, i64 32, i64 32, i64 608, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4489 = metadata !{i32 589837, metadata !4474, metadata !"sym_dgrams", metadata !4051, i32 74, i64 64, i64 64, i64 640, i32 0, metadata !4101} ; [ DW_TAG_member ]
!4490 = metadata !{i32 589837, metadata !4474, metadata !"max_failures", metadata !4051, i32 76, i64 32, i64 32, i64 704, i32 0, metadata !4064} ; [ DW_TAG_member ]
!4491 = metadata !{i32 589837, metadata !4474, metadata !"read_fail", metadata !4051, i32 79, i64 64, i64 64, i64 768, i32 0, metadata !4492} ; [ DW_TAG_member ]
!4492 = metadata !{i32 589839, metadata !4040, metadata !"", metadata !4040, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4045} ; [ DW_TAG_pointer_type ]
!4493 = metadata !{i32 589837, metadata !4474, metadata !"write_fail", metadata !4051, i32 79, i64 64, i64 64, i64 832, i32 0, metadata !4492} ; [ DW_TAG_member ]
!4494 = metadata !{i32 589837, metadata !4474, metadata !"close_fail", metadata !4051, i32 79, i64 64, i64 64, i64 896, i32 0, metadata !4492} ; [ DW_TAG_member ]
!4495 = metadata !{i32 589837, metadata !4474, metadata !"ftruncate_fail", metadata !4051, i32 79, i64 64, i64 64, i64 960, i32 0, metadata !4492} ; [ DW_TAG_member ]
!4496 = metadata !{i32 589837, metadata !4474, metadata !"getcwd_fail", metadata !4051, i32 79, i64 64, i64 64, i64 1024, i32 0, metadata !4492} ; [ DW_TAG_member ]
!4497 = metadata !{i32 589837, metadata !4474, metadata !"chmod_fail", metadata !4051, i32 80, i64 64, i64 64, i64 1088, i32 0, metadata !4492} ; [ DW_TAG_member ]
!4498 = metadata !{i32 589837, metadata !4474, metadata !"fchmod_fail", metadata !4051, i32 80, i64 64, i64 64, i64 1152, i32 0, metadata !4492} ; [ DW_TAG_member ]
!4499 = metadata !{i32 589828, metadata !3220, metadata !"", metadata !4500, i32 103, i64 32, i64 32, i64 0, i32 0, null, metadata !4136, i32 0, null} ; [ DW_TAG_enumeration_type ]
!4500 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3221} ; [ DW_TAG_file_type ]
!4501 = metadata !{i32 590081, metadata !3065, metadata !"a", metadata !3066, i32 42, metadata !3070, i32 0} ; [ DW_TAG_arg_variable ]
!4502 = metadata !{i32 590081, metadata !3065, metadata !"b", metadata !3066, i32 42, metadata !3114, i32 0} ; [ DW_TAG_arg_variable ]
!4503 = metadata !{i32 590081, metadata !3134, metadata !"fd", metadata !3066, i32 207, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4504 = metadata !{i32 590081, metadata !3134, metadata !"buf", metadata !3066, i32 207, metadata !3070, i32 0} ; [ DW_TAG_arg_variable ]
!4505 = metadata !{i32 590081, metadata !3137, metadata !"fd", metadata !3066, i32 119, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4506 = metadata !{i32 590081, metadata !3137, metadata !"buf", metadata !3066, i32 119, metadata !3114, i32 0} ; [ DW_TAG_arg_variable ]
!4507 = metadata !{i32 590080, metadata !4508, metadata !"tmp", metadata !3066, i32 120, metadata !3071, i32 0} ; [ DW_TAG_auto_variable ]
!4508 = metadata !{i32 589835, metadata !3137, i32 119, i32 0, metadata !3066, i32 2} ; [ DW_TAG_lexical_block ]
!4509 = metadata !{i32 590080, metadata !4508, metadata !"res", metadata !3066, i32 121, metadata !3091, i32 0} ; [ DW_TAG_auto_variable ]
!4510 = metadata !{i32 590081, metadata !3140, metadata !"vers", metadata !3066, i32 112, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4511 = metadata !{i32 590081, metadata !3140, metadata !"fd", metadata !3066, i32 112, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4512 = metadata !{i32 590081, metadata !3140, metadata !"buf", metadata !3066, i32 112, metadata !3114, i32 0} ; [ DW_TAG_arg_variable ]
!4513 = metadata !{i32 590080, metadata !4514, metadata !"tmp", metadata !3066, i32 113, metadata !3071, i32 0} ; [ DW_TAG_auto_variable ]
!4514 = metadata !{i32 589835, metadata !3140, i32 112, i32 0, metadata !3066, i32 3} ; [ DW_TAG_lexical_block ]
!4515 = metadata !{i32 590080, metadata !4514, metadata !"res", metadata !3066, i32 114, metadata !3091, i32 0} ; [ DW_TAG_auto_variable ]
!4516 = metadata !{i32 590081, metadata !3143, metadata !"path", metadata !3066, i32 203, metadata !3146, i32 0} ; [ DW_TAG_arg_variable ]
!4517 = metadata !{i32 590081, metadata !3143, metadata !"buf", metadata !3066, i32 203, metadata !3070, i32 0} ; [ DW_TAG_arg_variable ]
!4518 = metadata !{i32 590081, metadata !3149, metadata !"path", metadata !3066, i32 105, metadata !3146, i32 0} ; [ DW_TAG_arg_variable ]
!4519 = metadata !{i32 590081, metadata !3149, metadata !"buf", metadata !3066, i32 105, metadata !3114, i32 0} ; [ DW_TAG_arg_variable ]
!4520 = metadata !{i32 590080, metadata !4521, metadata !"tmp", metadata !3066, i32 106, metadata !3071, i32 0} ; [ DW_TAG_auto_variable ]
!4521 = metadata !{i32 589835, metadata !3149, i32 105, i32 0, metadata !3066, i32 5} ; [ DW_TAG_lexical_block ]
!4522 = metadata !{i32 590080, metadata !4521, metadata !"res", metadata !3066, i32 107, metadata !3091, i32 0} ; [ DW_TAG_auto_variable ]
!4523 = metadata !{i32 590081, metadata !3152, metadata !"vers", metadata !3066, i32 98, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4524 = metadata !{i32 590081, metadata !3152, metadata !"path", metadata !3066, i32 98, metadata !3146, i32 0} ; [ DW_TAG_arg_variable ]
!4525 = metadata !{i32 590081, metadata !3152, metadata !"buf", metadata !3066, i32 98, metadata !3114, i32 0} ; [ DW_TAG_arg_variable ]
!4526 = metadata !{i32 590080, metadata !4527, metadata !"tmp", metadata !3066, i32 99, metadata !3071, i32 0} ; [ DW_TAG_auto_variable ]
!4527 = metadata !{i32 589835, metadata !3152, i32 98, i32 0, metadata !3066, i32 6} ; [ DW_TAG_lexical_block ]
!4528 = metadata !{i32 590080, metadata !4527, metadata !"res", metadata !3066, i32 100, metadata !3091, i32 0} ; [ DW_TAG_auto_variable ]
!4529 = metadata !{i32 590081, metadata !3155, metadata !"path", metadata !3066, i32 199, metadata !3146, i32 0} ; [ DW_TAG_arg_variable ]
!4530 = metadata !{i32 590081, metadata !3155, metadata !"buf", metadata !3066, i32 199, metadata !3070, i32 0} ; [ DW_TAG_arg_variable ]
!4531 = metadata !{i32 590081, metadata !4039, metadata !"__path", metadata !4042, i32 502, metadata !4046, i32 0} ; [ DW_TAG_arg_variable ]
!4532 = metadata !{i32 590081, metadata !4039, metadata !"__statbuf", metadata !4042, i32 502, metadata !4049, i32 0} ; [ DW_TAG_arg_variable ]
!4533 = metadata !{i32 590081, metadata !4169, metadata !"__path", metadata !4170, i32 502, metadata !4173, i32 0} ; [ DW_TAG_arg_variable ]
!4534 = metadata !{i32 590081, metadata !4169, metadata !"__statbuf", metadata !4170, i32 502, metadata !4175, i32 0} ; [ DW_TAG_arg_variable ]
!4535 = metadata !{i32 590081, metadata !3156, metadata !"path", metadata !3066, i32 91, metadata !3146, i32 0} ; [ DW_TAG_arg_variable ]
!4536 = metadata !{i32 590081, metadata !3156, metadata !"buf", metadata !3066, i32 91, metadata !3114, i32 0} ; [ DW_TAG_arg_variable ]
!4537 = metadata !{i32 590080, metadata !4538, metadata !"tmp", metadata !3066, i32 92, metadata !3071, i32 0} ; [ DW_TAG_auto_variable ]
!4538 = metadata !{i32 589835, metadata !3156, i32 91, i32 0, metadata !3066, i32 8} ; [ DW_TAG_lexical_block ]
!4539 = metadata !{i32 590080, metadata !4538, metadata !"res", metadata !3066, i32 93, metadata !3091, i32 0} ; [ DW_TAG_auto_variable ]
!4540 = metadata !{i32 590081, metadata !3157, metadata !"vers", metadata !3066, i32 84, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4541 = metadata !{i32 590081, metadata !3157, metadata !"path", metadata !3066, i32 84, metadata !3146, i32 0} ; [ DW_TAG_arg_variable ]
!4542 = metadata !{i32 590081, metadata !3157, metadata !"buf", metadata !3066, i32 84, metadata !3114, i32 0} ; [ DW_TAG_arg_variable ]
!4543 = metadata !{i32 590080, metadata !4544, metadata !"tmp", metadata !3066, i32 85, metadata !3071, i32 0} ; [ DW_TAG_auto_variable ]
!4544 = metadata !{i32 589835, metadata !3157, i32 84, i32 0, metadata !3066, i32 9} ; [ DW_TAG_lexical_block ]
!4545 = metadata !{i32 590080, metadata !4544, metadata !"res", metadata !3066, i32 86, metadata !3091, i32 0} ; [ DW_TAG_auto_variable ]
!4546 = metadata !{i32 590081, metadata !3158, metadata !"fd", metadata !3066, i32 195, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4547 = metadata !{i32 590081, metadata !3158, metadata !"off", metadata !3066, i32 195, metadata !3161, i32 0} ; [ DW_TAG_arg_variable ]
!4548 = metadata !{i32 590081, metadata !3158, metadata !"whence", metadata !3066, i32 195, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4549 = metadata !{i32 590081, metadata !3163, metadata !"fd", metadata !3066, i32 80, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4550 = metadata !{i32 590081, metadata !3163, metadata !"off", metadata !3066, i32 80, metadata !3166, i32 0} ; [ DW_TAG_arg_variable ]
!4551 = metadata !{i32 590081, metadata !3163, metadata !"whence", metadata !3066, i32 80, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4552 = metadata !{i32 590081, metadata !3167, metadata !"pathname", metadata !3066, i32 181, metadata !3146, i32 0} ; [ DW_TAG_arg_variable ]
!4553 = metadata !{i32 590081, metadata !3167, metadata !"flags", metadata !3066, i32 181, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4554 = metadata !{i32 590080, metadata !4555, metadata !"mode", metadata !3066, i32 182, metadata !4556, i32 0} ; [ DW_TAG_auto_variable ]
!4555 = metadata !{i32 589835, metadata !3167, i32 181, i32 0, metadata !3066, i32 12} ; [ DW_TAG_lexical_block ]
!4556 = metadata !{i32 589846, metadata !3162, metadata !"mode_t", metadata !3162, i32 75, i64 0, i64 0, i64 0, i32 0, metadata !3085} ; [ DW_TAG_typedef ]
!4557 = metadata !{i32 590080, metadata !4558, metadata !"ap", metadata !3066, i32 186, metadata !4559, i32 0} ; [ DW_TAG_auto_variable ]
!4558 = metadata !{i32 589835, metadata !4555, i32 187, i32 0, metadata !3066, i32 13} ; [ DW_TAG_lexical_block ]
!4559 = metadata !{i32 589846, metadata !4560, metadata !"va_list", metadata !4560, i32 110, i64 0, i64 0, i64 0, i32 0, metadata !4561} ; [ DW_TAG_typedef ]
!4560 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/usr/include", metadata !3067} ; [ DW_TAG_file_type ]
!4561 = metadata !{i32 589825, metadata !3066, metadata !"", metadata !3066, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !4562, metadata !2121, i32 0, null} ; [ DW_TAG_array_type ]
!4562 = metadata !{i32 589843, metadata !3066, metadata !"__va_list_tag", metadata !4563, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !4564, i32 0, null} ; [ DW_TAG_structure_type ]
!4563 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3067} ; [ DW_TAG_file_type ]
!4564 = metadata !{metadata !4565, metadata !4566, metadata !4567, metadata !4569}
!4565 = metadata !{i32 589837, metadata !4562, metadata !"gp_offset", metadata !4563, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !3085} ; [ DW_TAG_member ]
!4566 = metadata !{i32 589837, metadata !4562, metadata !"fp_offset", metadata !4563, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !3085} ; [ DW_TAG_member ]
!4567 = metadata !{i32 589837, metadata !4562, metadata !"overflow_arg_area", metadata !4563, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !4568} ; [ DW_TAG_member ]
!4568 = metadata !{i32 589839, metadata !3066, metadata !"", metadata !3066, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!4569 = metadata !{i32 589837, metadata !4562, metadata !"reg_save_area", metadata !4563, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !4568} ; [ DW_TAG_member ]
!4570 = metadata !{i32 590081, metadata !3170, metadata !"pathname", metadata !3066, i32 66, metadata !3146, i32 0} ; [ DW_TAG_arg_variable ]
!4571 = metadata !{i32 590081, metadata !3170, metadata !"flags", metadata !3066, i32 66, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4572 = metadata !{i32 590080, metadata !4573, metadata !"mode", metadata !3066, i32 67, metadata !4556, i32 0} ; [ DW_TAG_auto_variable ]
!4573 = metadata !{i32 589835, metadata !3170, i32 66, i32 0, metadata !3066, i32 14} ; [ DW_TAG_lexical_block ]
!4574 = metadata !{i32 590080, metadata !4575, metadata !"ap", metadata !3066, i32 71, metadata !4559, i32 0} ; [ DW_TAG_auto_variable ]
!4575 = metadata !{i32 589835, metadata !4573, i32 72, i32 0, metadata !3066, i32 15} ; [ DW_TAG_lexical_block ]
!4576 = metadata !{i32 590081, metadata !3171, metadata !"fd", metadata !3066, i32 155, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4577 = metadata !{i32 590081, metadata !3171, metadata !"dirp", metadata !3066, i32 155, metadata !3175, i32 0} ; [ DW_TAG_arg_variable ]
!4578 = metadata !{i32 590081, metadata !3171, metadata !"nbytes", metadata !3066, i32 155, metadata !3187, i32 0} ; [ DW_TAG_arg_variable ]
!4579 = metadata !{i32 590080, metadata !4580, metadata !"dp64", metadata !3066, i32 156, metadata !4581, i32 0} ; [ DW_TAG_auto_variable ]
!4580 = metadata !{i32 589835, metadata !3171, i32 155, i32 0, metadata !3066, i32 16} ; [ DW_TAG_lexical_block ]
!4581 = metadata !{i32 589839, metadata !3066, metadata !"", metadata !3066, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4582} ; [ DW_TAG_pointer_type ]
!4582 = metadata !{i32 589843, metadata !3066, metadata !"dirent64", metadata !3177, i32 38, i64 2240, i64 64, i64 0, i32 0, null, metadata !4583, i32 0, null} ; [ DW_TAG_structure_type ]
!4583 = metadata !{metadata !4584, metadata !4585, metadata !4587, metadata !4588, metadata !4589}
!4584 = metadata !{i32 589837, metadata !4582, metadata !"d_ino", metadata !3177, i32 39, i64 64, i64 64, i64 0, i32 0, metadata !3080} ; [ DW_TAG_member ]
!4585 = metadata !{i32 589837, metadata !4582, metadata !"d_off", metadata !3177, i32 40, i64 64, i64 64, i64 64, i32 0, metadata !4586} ; [ DW_TAG_member ]
!4586 = metadata !{i32 589846, metadata !3077, metadata !"__off64_t", metadata !3077, i32 133, i64 0, i64 0, i64 0, i32 0, metadata !3095} ; [ DW_TAG_typedef ]
!4587 = metadata !{i32 589837, metadata !4582, metadata !"d_reclen", metadata !3177, i32 41, i64 16, i64 16, i64 128, i32 0, metadata !3182} ; [ DW_TAG_member ]
!4588 = metadata !{i32 589837, metadata !4582, metadata !"d_type", metadata !3177, i32 42, i64 8, i64 8, i64 144, i32 0, metadata !3184} ; [ DW_TAG_member ]
!4589 = metadata !{i32 589837, metadata !4582, metadata !"d_name", metadata !3177, i32 43, i64 2048, i64 8, i64 152, i32 0, metadata !3186} ; [ DW_TAG_member ]
!4590 = metadata !{i32 590080, metadata !4580, metadata !"res", metadata !3066, i32 157, metadata !3174, i32 0} ; [ DW_TAG_auto_variable ]
!4591 = metadata !{i32 590080, metadata !4592, metadata !"end", metadata !3066, i32 160, metadata !4581, i32 0} ; [ DW_TAG_auto_variable ]
!4592 = metadata !{i32 589835, metadata !4580, i32 160, i32 0, metadata !3066, i32 17} ; [ DW_TAG_lexical_block ]
!4593 = metadata !{i32 590080, metadata !4594, metadata !"dp", metadata !3066, i32 162, metadata !3175, i32 0} ; [ DW_TAG_auto_variable ]
!4594 = metadata !{i32 589835, metadata !4592, i32 162, i32 0, metadata !3066, i32 18} ; [ DW_TAG_lexical_block ]
!4595 = metadata !{i32 590080, metadata !4594, metadata !"name_len", metadata !3066, i32 163, metadata !3187, i32 0} ; [ DW_TAG_auto_variable ]
!4596 = metadata !{i32 590081, metadata !3188, metadata !"path", metadata !3066, i32 130, metadata !3146, i32 0} ; [ DW_TAG_arg_variable ]
!4597 = metadata !{i32 590081, metadata !3188, metadata !"buf32", metadata !3066, i32 130, metadata !3191, i32 0} ; [ DW_TAG_arg_variable ]
!4598 = metadata !{i32 590081, metadata !3216, metadata !"fd", metadata !3066, i32 126, metadata !3091, i32 0} ; [ DW_TAG_arg_variable ]
!4599 = metadata !{i32 590081, metadata !3216, metadata !"length", metadata !3066, i32 126, metadata !3166, i32 0} ; [ DW_TAG_arg_variable ]
!4600 = metadata !{i32 590081, metadata !3219, metadata !"c", metadata !3220, i32 27, metadata !3225, i32 0} ; [ DW_TAG_arg_variable ]
!4601 = metadata !{i32 590081, metadata !3227, metadata !"c", metadata !3220, i32 31, metadata !3225, i32 0} ; [ DW_TAG_arg_variable ]
!4602 = metadata !{i32 590081, metadata !3228, metadata !"c", metadata !3220, i32 124, metadata !3225, i32 0} ; [ DW_TAG_arg_variable ]
!4603 = metadata !{i32 590081, metadata !3229, metadata !"a", metadata !3220, i32 129, metadata !3232, i32 0} ; [ DW_TAG_arg_variable ]
!4604 = metadata !{i32 590081, metadata !3229, metadata !"b", metadata !3220, i32 129, metadata !3232, i32 0} ; [ DW_TAG_arg_variable ]
!4605 = metadata !{i32 590081, metadata !3233, metadata !"numChars", metadata !3220, i32 139, metadata !3224, i32 0} ; [ DW_TAG_arg_variable ]
!4606 = metadata !{i32 590081, metadata !3233, metadata !"name", metadata !3220, i32 139, metadata !3236, i32 0} ; [ DW_TAG_arg_variable ]
!4607 = metadata !{i32 590080, metadata !4608, metadata !"i", metadata !3220, i32 140, metadata !3224, i32 0} ; [ DW_TAG_auto_variable ]
!4608 = metadata !{i32 589835, metadata !3233, i32 139, i32 0, metadata !3220, i32 4} ; [ DW_TAG_lexical_block ]
!4609 = metadata !{i32 590080, metadata !4608, metadata !"s", metadata !3220, i32 141, metadata !3236, i32 0} ; [ DW_TAG_auto_variable ]
!4610 = metadata !{i32 590081, metadata !3237, metadata !"msg", metadata !3220, i32 23, metadata !3232, i32 0} ; [ DW_TAG_arg_variable ]
!4611 = metadata !{i32 590081, metadata !3240, metadata !"s", metadata !3220, i32 40, metadata !3236, i32 0} ; [ DW_TAG_arg_variable ]
!4612 = metadata !{i32 590081, metadata !3240, metadata !"error_msg", metadata !3220, i32 40, metadata !3232, i32 0} ; [ DW_TAG_arg_variable ]
!4613 = metadata !{i32 590080, metadata !4614, metadata !"res", metadata !3220, i32 41, metadata !3243, i32 0} ; [ DW_TAG_auto_variable ]
!4614 = metadata !{i32 589835, metadata !3240, i32 40, i32 0, metadata !3220, i32 6} ; [ DW_TAG_lexical_block ]
!4615 = metadata !{i32 590080, metadata !4614, metadata !"c", metadata !3220, i32 42, metadata !3226, i32 0} ; [ DW_TAG_auto_variable ]
!4616 = metadata !{i32 590080, metadata !4614, metadata !"d", metadata !3220, i32 43, metadata !3224, i32 0} ; [ DW_TAG_auto_variable ]
!4617 = metadata !{i32 590080, metadata !4614, metadata !"base", metadata !3220, i32 44, metadata !3224, i32 0} ; [ DW_TAG_auto_variable ]
!4618 = metadata !{i32 590081, metadata !3244, metadata !"s", metadata !3220, i32 64, metadata !3236, i32 0} ; [ DW_TAG_arg_variable ]
!4619 = metadata !{i32 590080, metadata !4620, metadata !"d0", metadata !3220, i32 66, metadata !3236, i32 0} ; [ DW_TAG_auto_variable ]
!4620 = metadata !{i32 589835, metadata !3244, i32 65, i32 0, metadata !3220, i32 7} ; [ DW_TAG_lexical_block ]
!4621 = metadata !{i32 590080, metadata !4620, metadata !"d", metadata !3220, i32 66, metadata !3236, i32 0} ; [ DW_TAG_auto_variable ]
!4622 = metadata !{i32 590080, metadata !4623, metadata !"n", metadata !3220, i32 74, metadata !4624, i32 0} ; [ DW_TAG_auto_variable ]
!4623 = metadata !{i32 589835, metadata !4620, i32 75, i32 0, metadata !3220, i32 8} ; [ DW_TAG_lexical_block ]
!4624 = metadata !{i32 589825, metadata !3220, metadata !"", metadata !3220, i32 0, i64 96, i64 32, i64 0, i32 0, metadata !3224, metadata !3112, i32 0, null} ; [ DW_TAG_array_type ]
!4625 = metadata !{i32 590081, metadata !3250, metadata !"argc", metadata !3220, i32 152, metadata !3253, i32 0} ; [ DW_TAG_arg_variable ]
!4626 = metadata !{i32 590081, metadata !3250, metadata !"argv", metadata !3220, i32 152, metadata !3254, i32 0} ; [ DW_TAG_arg_variable ]
!4627 = metadata !{i32 590081, metadata !3250, metadata !"arg", metadata !3220, i32 152, metadata !3236, i32 0} ; [ DW_TAG_arg_variable ]
!4628 = metadata !{i32 590081, metadata !3250, metadata !"argcMax", metadata !3220, i32 152, metadata !3224, i32 0} ; [ DW_TAG_arg_variable ]
!4629 = metadata !{i32 590081, metadata !3255, metadata !"argcPtr", metadata !3220, i32 161, metadata !3253, i32 0} ; [ DW_TAG_arg_variable ]
!4630 = metadata !{i32 590081, metadata !3255, metadata !"argvPtr", metadata !3220, i32 161, metadata !3258, i32 0} ; [ DW_TAG_arg_variable ]
!4631 = metadata !{i32 590080, metadata !4632, metadata !"argc", metadata !3220, i32 162, metadata !3224, i32 0} ; [ DW_TAG_auto_variable ]
!4632 = metadata !{i32 589835, metadata !3255, i32 161, i32 0, metadata !3220, i32 10} ; [ DW_TAG_lexical_block ]
!4633 = metadata !{i32 590080, metadata !4632, metadata !"argv", metadata !3220, i32 163, metadata !3254, i32 0} ; [ DW_TAG_auto_variable ]
!4634 = metadata !{i32 590080, metadata !4632, metadata !"new_argc", metadata !3220, i32 165, metadata !3224, i32 0} ; [ DW_TAG_auto_variable ]
!4635 = metadata !{i32 590080, metadata !4632, metadata !"n_args", metadata !3220, i32 165, metadata !3224, i32 0} ; [ DW_TAG_auto_variable ]
!4636 = metadata !{i32 590080, metadata !4632, metadata !"new_argv", metadata !3220, i32 166, metadata !4637, i32 0} ; [ DW_TAG_auto_variable ]
!4637 = metadata !{i32 589825, metadata !3220, metadata !"", metadata !3220, i32 0, i64 65536, i64 64, i64 0, i32 0, metadata !3236, metadata !4638, i32 0, null} ; [ DW_TAG_array_type ]
!4638 = metadata !{metadata !4639}
!4639 = metadata !{i32 589857, i64 0, i64 1023}   ; [ DW_TAG_subrange_type ]
!4640 = metadata !{i32 590080, metadata !4632, metadata !"max_len", metadata !3220, i32 167, metadata !4641, i32 0} ; [ DW_TAG_auto_variable ]
!4641 = metadata !{i32 589860, metadata !3220, metadata !"unsigned int", metadata !3220, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4642 = metadata !{i32 590080, metadata !4632, metadata !"min_argvs", metadata !3220, i32 167, metadata !4641, i32 0} ; [ DW_TAG_auto_variable ]
!4643 = metadata !{i32 590080, metadata !4632, metadata !"max_argvs", metadata !3220, i32 167, metadata !4641, i32 0} ; [ DW_TAG_auto_variable ]
!4644 = metadata !{i32 590080, metadata !4632, metadata !"sym_files", metadata !3220, i32 168, metadata !4641, i32 0} ; [ DW_TAG_auto_variable ]
!4645 = metadata !{i32 590080, metadata !4632, metadata !"sym_file_len", metadata !3220, i32 168, metadata !4641, i32 0} ; [ DW_TAG_auto_variable ]
!4646 = metadata !{i32 590080, metadata !4632, metadata !"sym_streams", metadata !3220, i32 169, metadata !4641, i32 0} ; [ DW_TAG_auto_variable ]
!4647 = metadata !{i32 590080, metadata !4632, metadata !"sym_stream_len", metadata !3220, i32 169, metadata !4641, i32 0} ; [ DW_TAG_auto_variable ]
!4648 = metadata !{i32 590080, metadata !4632, metadata !"sym_dgrams", metadata !3220, i32 170, metadata !4641, i32 0} ; [ DW_TAG_auto_variable ]
!4649 = metadata !{i32 590080, metadata !4632, metadata !"sym_dgram_len", metadata !3220, i32 170, metadata !4641, i32 0} ; [ DW_TAG_auto_variable ]
!4650 = metadata !{i32 590080, metadata !4632, metadata !"sym_stdout_flag", metadata !3220, i32 172, metadata !3224, i32 0} ; [ DW_TAG_auto_variable ]
!4651 = metadata !{i32 590080, metadata !4632, metadata !"save_all_writes_flag", metadata !3220, i32 173, metadata !3224, i32 0} ; [ DW_TAG_auto_variable ]
!4652 = metadata !{i32 590080, metadata !4632, metadata !"one_line_streams_flag", metadata !3220, i32 174, metadata !3224, i32 0} ; [ DW_TAG_auto_variable ]
!4653 = metadata !{i32 590080, metadata !4632, metadata !"stream_fill_info", metadata !3220, i32 175, metadata !4654, i32 0} ; [ DW_TAG_auto_variable ]
!4654 = metadata !{i32 589825, metadata !3220, metadata !"", metadata !3220, i32 0, i64 19200, i64 64, i64 0, i32 0, metadata !4655, metadata !4667, i32 0, null} ; [ DW_TAG_array_type ]
!4655 = metadata !{i32 589846, metadata !4656, metadata !"fill_info_t", metadata !4656, i32 51, i64 0, i64 0, i64 0, i32 0, metadata !4657} ; [ DW_TAG_typedef ]
!4656 = metadata !{i32 589865, metadata !"waitflags.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3221} ; [ DW_TAG_file_type ]
!4657 = metadata !{i32 589843, metadata !3220, metadata !"", metadata !4500, i32 101, i64 192, i64 64, i64 0, i32 0, null, metadata !4658, i32 0, null} ; [ DW_TAG_structure_type ]
!4658 = metadata !{metadata !4659, metadata !4660, metadata !4661, metadata !4662}
!4659 = metadata !{i32 589837, metadata !4657, metadata !"offset", metadata !4500, i32 102, i64 32, i64 32, i64 0, i32 0, metadata !4641} ; [ DW_TAG_member ]
!4660 = metadata !{i32 589837, metadata !4657, metadata !"fill_method", metadata !4500, i32 103, i64 32, i64 32, i64 32, i32 0, metadata !4499} ; [ DW_TAG_member ]
!4661 = metadata !{i32 589837, metadata !4657, metadata !"length", metadata !4500, i32 104, i64 32, i64 32, i64 64, i32 0, metadata !4641} ; [ DW_TAG_member ]
!4662 = metadata !{i32 589837, metadata !4657, metadata !"arg", metadata !4500, i32 108, i64 64, i64 64, i64 128, i32 0, metadata !4663} ; [ DW_TAG_member ]
!4663 = metadata !{i32 589847, metadata !3220, metadata !"", metadata !4500, i32 105, i64 64, i64 64, i64 0, i32 0, null, metadata !4664, i32 0, null} ; [ DW_TAG_union_type ]
!4664 = metadata !{metadata !4665, metadata !4666}
!4665 = metadata !{i32 589837, metadata !4663, metadata !"value", metadata !4500, i32 106, i64 32, i64 32, i64 0, i32 0, metadata !3224} ; [ DW_TAG_member ]
!4666 = metadata !{i32 589837, metadata !4663, metadata !"string", metadata !4500, i32 107, i64 64, i64 64, i64 0, i32 0, metadata !3236} ; [ DW_TAG_member ]
!4667 = metadata !{metadata !4668}
!4668 = metadata !{i32 589857, i64 0, i64 99}     ; [ DW_TAG_subrange_type ]
!4669 = metadata !{i32 590080, metadata !4632, metadata !"n_stream_fill_info", metadata !3220, i32 176, metadata !4641, i32 0} ; [ DW_TAG_auto_variable ]
!4670 = metadata !{i32 590080, metadata !4632, metadata !"dgram_fill_info", metadata !3220, i32 177, metadata !4654, i32 0} ; [ DW_TAG_auto_variable ]
!4671 = metadata !{i32 590080, metadata !4632, metadata !"n_dgram_fill_info", metadata !3220, i32 178, metadata !4641, i32 0} ; [ DW_TAG_auto_variable ]
!4672 = metadata !{i32 590080, metadata !4632, metadata !"fd_fail", metadata !3220, i32 180, metadata !3224, i32 0} ; [ DW_TAG_auto_variable ]
!4673 = metadata !{i32 590080, metadata !4632, metadata !"final_argv", metadata !3220, i32 181, metadata !3254, i32 0} ; [ DW_TAG_auto_variable ]
!4674 = metadata !{i32 590080, metadata !4632, metadata !"sym_arg_name", metadata !3220, i32 182, metadata !4675, i32 0} ; [ DW_TAG_auto_variable ]
!4675 = metadata !{i32 589825, metadata !3220, metadata !"", metadata !3220, i32 0, i64 40, i64 8, i64 0, i32 0, metadata !3226, metadata !4676, i32 0, null} ; [ DW_TAG_array_type ]
!4676 = metadata !{metadata !4677}
!4677 = metadata !{i32 589857, i64 0, i64 4}      ; [ DW_TAG_subrange_type ]
!4678 = metadata !{i32 590080, metadata !4632, metadata !"sym_arg_num", metadata !3220, i32 183, metadata !4641, i32 0} ; [ DW_TAG_auto_variable ]
!4679 = metadata !{i32 590080, metadata !4632, metadata !"k", metadata !3220, i32 184, metadata !3224, i32 0} ; [ DW_TAG_auto_variable ]
!4680 = metadata !{i32 590080, metadata !4632, metadata !"i", metadata !3220, i32 184, metadata !3224, i32 0} ; [ DW_TAG_auto_variable ]
!4681 = metadata !{i32 590080, metadata !4682, metadata !"msg", metadata !3220, i32 204, metadata !3232, i32 0} ; [ DW_TAG_auto_variable ]
!4682 = metadata !{i32 589835, metadata !4632, i32 204, i32 0, metadata !3220, i32 11} ; [ DW_TAG_lexical_block ]
!4683 = metadata !{i32 590080, metadata !4684, metadata !"msg", metadata !3220, i32 215, metadata !3232, i32 0} ; [ DW_TAG_auto_variable ]
!4684 = metadata !{i32 589835, metadata !4632, i32 216, i32 0, metadata !3220, i32 12} ; [ DW_TAG_lexical_block ]
!4685 = metadata !{i32 590080, metadata !4686, metadata !"msg", metadata !3220, i32 235, metadata !3232, i32 0} ; [ DW_TAG_auto_variable ]
!4686 = metadata !{i32 589835, metadata !4632, i32 235, i32 0, metadata !3220, i32 13} ; [ DW_TAG_lexical_block ]
!4687 = metadata !{i32 590080, metadata !4688, metadata !"msg", metadata !3220, i32 258, metadata !3232, i32 0} ; [ DW_TAG_auto_variable ]
!4688 = metadata !{i32 589835, metadata !4632, i32 258, i32 0, metadata !3220, i32 14} ; [ DW_TAG_lexical_block ]
!4689 = metadata !{i32 590080, metadata !4690, metadata !"msg", metadata !3220, i32 265, metadata !3232, i32 0} ; [ DW_TAG_auto_variable ]
!4690 = metadata !{i32 589835, metadata !4632, i32 265, i32 0, metadata !3220, i32 15} ; [ DW_TAG_lexical_block ]
!4691 = metadata !{i32 590080, metadata !4692, metadata !"msg", metadata !3220, i32 275, metadata !3232, i32 0} ; [ DW_TAG_auto_variable ]
!4692 = metadata !{i32 589835, metadata !4632, i32 275, i32 0, metadata !3220, i32 16} ; [ DW_TAG_lexical_block ]
!4693 = metadata !{i32 590080, metadata !4694, metadata !"msg", metadata !3220, i32 289, metadata !3232, i32 0} ; [ DW_TAG_auto_variable ]
!4694 = metadata !{i32 589835, metadata !4632, i32 289, i32 0, metadata !3220, i32 17} ; [ DW_TAG_lexical_block ]
!4695 = metadata !{i32 590080, metadata !4694, metadata !"msg2", metadata !3220, i32 290, metadata !3232, i32 0} ; [ DW_TAG_auto_variable ]
!4696 = metadata !{i32 590080, metadata !4697, metadata !"msg", metadata !3220, i32 330, metadata !3232, i32 0} ; [ DW_TAG_auto_variable ]
!4697 = metadata !{i32 589835, metadata !4632, i32 330, i32 0, metadata !3220, i32 18} ; [ DW_TAG_lexical_block ]
!4698 = metadata !{i32 590080, metadata !4697, metadata !"msg2", metadata !3220, i32 331, metadata !3232, i32 0} ; [ DW_TAG_auto_variable ]
!4699 = metadata !{i32 590081, metadata !3268, metadata !"file", metadata !3260, i32 60, metadata !3271, i32 0} ; [ DW_TAG_arg_variable ]
!4700 = metadata !{i32 590081, metadata !3268, metadata !"argv", metadata !3260, i32 60, metadata !3274, i32 0} ; [ DW_TAG_arg_variable ]
!4701 = metadata !{i32 590081, metadata !3268, metadata !"envp", metadata !3260, i32 60, metadata !3274, i32 0} ; [ DW_TAG_arg_variable ]
!4702 = metadata !{i32 590081, metadata !3277, metadata !"file", metadata !3260, i32 59, metadata !3271, i32 0} ; [ DW_TAG_arg_variable ]
!4703 = metadata !{i32 590081, metadata !3277, metadata !"argv", metadata !3260, i32 59, metadata !3274, i32 0} ; [ DW_TAG_arg_variable ]
!4704 = metadata !{i32 590081, metadata !3280, metadata !"path", metadata !3260, i32 58, metadata !3271, i32 0} ; [ DW_TAG_arg_variable ]
!4705 = metadata !{i32 590081, metadata !3280, metadata !"argv", metadata !3260, i32 58, metadata !3274, i32 0} ; [ DW_TAG_arg_variable ]
!4706 = metadata !{i32 590081, metadata !3281, metadata !"path", metadata !3260, i32 57, metadata !3271, i32 0} ; [ DW_TAG_arg_variable ]
!4707 = metadata !{i32 590081, metadata !3281, metadata !"arg", metadata !3260, i32 57, metadata !3271, i32 0} ; [ DW_TAG_arg_variable ]
!4708 = metadata !{i32 590081, metadata !3284, metadata !"file", metadata !3260, i32 56, metadata !3271, i32 0} ; [ DW_TAG_arg_variable ]
!4709 = metadata !{i32 590081, metadata !3284, metadata !"arg", metadata !3260, i32 56, metadata !3271, i32 0} ; [ DW_TAG_arg_variable ]
!4710 = metadata !{i32 590081, metadata !3285, metadata !"path", metadata !3260, i32 55, metadata !3271, i32 0} ; [ DW_TAG_arg_variable ]
!4711 = metadata !{i32 590081, metadata !3285, metadata !"arg", metadata !3260, i32 55, metadata !3271, i32 0} ; [ DW_TAG_arg_variable ]
!4712 = metadata !{i32 590081, metadata !3286, metadata !"pid", metadata !3260, i32 22, metadata !3264, i32 0} ; [ DW_TAG_arg_variable ]
!4713 = metadata !{i32 590081, metadata !3286, metadata !"sig", metadata !3260, i32 22, metadata !3266, i32 0} ; [ DW_TAG_arg_variable ]
!4714 = metadata !{i32 590081, metadata !3289, metadata !"env", metadata !3260, i32 34, metadata !3292, i32 0} ; [ DW_TAG_arg_variable ]
!4715 = metadata !{i32 590081, metadata !3289, metadata !"val", metadata !3260, i32 34, metadata !3266, i32 0} ; [ DW_TAG_arg_variable ]
!4716 = metadata !{i32 590081, metadata !3312, metadata !"__env", metadata !3260, i32 29, metadata !3292, i32 0} ; [ DW_TAG_arg_variable ]
!4717 = metadata !{i32 590081, metadata !3315, metadata !"fd", metadata !3316, i32 143, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4718 = metadata !{i32 590080, metadata !4719, metadata !"f", metadata !3316, i32 157, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4719 = metadata !{i32 589835, metadata !4720, i32 143, i32 0, metadata !3316, i32 1} ; [ DW_TAG_lexical_block ]
!4720 = metadata !{i32 589835, metadata !3315, i32 143, i32 0, metadata !3316, i32 0} ; [ DW_TAG_lexical_block ]
!4721 = metadata !{i32 590081, metadata !3406, metadata !"mask", metadata !3316, i32 203, metadata !3409, i32 0} ; [ DW_TAG_arg_variable ]
!4722 = metadata !{i32 590080, metadata !4723, metadata !"r", metadata !3316, i32 204, metadata !3409, i32 0} ; [ DW_TAG_auto_variable ]
!4723 = metadata !{i32 589835, metadata !3406, i32 203, i32 0, metadata !3316, i32 2} ; [ DW_TAG_lexical_block ]
!4724 = metadata !{i32 590081, metadata !3410, metadata !"flags", metadata !3316, i32 212, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4725 = metadata !{i32 590081, metadata !3410, metadata !"s", metadata !3316, i32 212, metadata !3344, i32 0} ; [ DW_TAG_arg_variable ]
!4726 = metadata !{i32 590080, metadata !4727, metadata !"write_access", metadata !3316, i32 213, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4727 = metadata !{i32 589835, metadata !3410, i32 212, i32 0, metadata !3316, i32 3} ; [ DW_TAG_lexical_block ]
!4728 = metadata !{i32 590080, metadata !4727, metadata !"read_access", metadata !3316, i32 213, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4729 = metadata !{i32 590080, metadata !4727, metadata !"mode", metadata !3316, i32 214, metadata !3409, i32 0} ; [ DW_TAG_auto_variable ]
!4730 = metadata !{i32 590081, metadata !3413, metadata !"out_fd", metadata !3316, i32 2482, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4731 = metadata !{i32 590081, metadata !3413, metadata !"in_fd", metadata !3316, i32 2482, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4732 = metadata !{i32 590081, metadata !3413, metadata !"offset", metadata !3316, i32 2482, metadata !3417, i32 0} ; [ DW_TAG_arg_variable ]
!4733 = metadata !{i32 590081, metadata !3413, metadata !"count", metadata !3316, i32 2482, metadata !3419, i32 0} ; [ DW_TAG_arg_variable ]
!4734 = metadata !{i32 590080, metadata !4735, metadata !"out_f", metadata !3316, i32 2484, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4735 = metadata !{i32 589835, metadata !3413, i32 2483, i32 0, metadata !3316, i32 4} ; [ DW_TAG_lexical_block ]
!4736 = metadata !{i32 590080, metadata !4735, metadata !"in_f", metadata !3316, i32 2485, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4737 = metadata !{i32 590080, metadata !4738, metadata !"os", metadata !3316, i32 2491, metadata !3416, i32 0} ; [ DW_TAG_auto_variable ]
!4738 = metadata !{i32 589835, metadata !4735, i32 2491, i32 0, metadata !3316, i32 5} ; [ DW_TAG_lexical_block ]
!4739 = metadata !{i32 590081, metadata !3420, metadata !"out_fd", metadata !3316, i32 2498, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4740 = metadata !{i32 590081, metadata !3420, metadata !"in_fd", metadata !3316, i32 2498, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4741 = metadata !{i32 590081, metadata !3420, metadata !"offset", metadata !3316, i32 2498, metadata !3417, i32 0} ; [ DW_TAG_arg_variable ]
!4742 = metadata !{i32 590081, metadata !3420, metadata !"count", metadata !3316, i32 2498, metadata !3419, i32 0} ; [ DW_TAG_arg_variable ]
!4743 = metadata !{i32 590081, metadata !3421, metadata !"fd", metadata !3316, i32 1715, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4744 = metadata !{i32 590080, metadata !4745, metadata !"f", metadata !3316, i32 1716, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4745 = metadata !{i32 589835, metadata !3421, i32 1715, i32 0, metadata !3316, i32 7} ; [ DW_TAG_lexical_block ]
!4746 = metadata !{i32 590080, metadata !4747, metadata !"r", metadata !3316, i32 1724, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4747 = metadata !{i32 589835, metadata !4745, i32 1724, i32 0, metadata !3316, i32 8} ; [ DW_TAG_lexical_block ]
!4748 = metadata !{i32 590081, metadata !3424, metadata !"path", metadata !3316, i32 2075, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!4749 = metadata !{i32 590081, metadata !3429, metadata !"fd", metadata !3316, i32 1695, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4750 = metadata !{i32 590081, metadata !3429, metadata !"buf", metadata !3316, i32 1695, metadata !3432, i32 0} ; [ DW_TAG_arg_variable ]
!4751 = metadata !{i32 590080, metadata !4752, metadata !"f", metadata !3316, i32 1696, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4752 = metadata !{i32 589835, metadata !3429, i32 1695, i32 0, metadata !3316, i32 10} ; [ DW_TAG_lexical_block ]
!4753 = metadata !{i32 590080, metadata !4754, metadata !"r", metadata !3316, i32 1708, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4754 = metadata !{i32 589835, metadata !4752, i32 1708, i32 0, metadata !3316, i32 11} ; [ DW_TAG_lexical_block ]
!4755 = metadata !{i32 590081, metadata !3457, metadata !"fd", metadata !3316, i32 1611, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4756 = metadata !{i32 590081, metadata !3457, metadata !"cmd", metadata !3316, i32 1611, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4757 = metadata !{i32 590080, metadata !4758, metadata !"f", metadata !3316, i32 1612, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4758 = metadata !{i32 589835, metadata !3457, i32 1611, i32 0, metadata !3316, i32 12} ; [ DW_TAG_lexical_block ]
!4759 = metadata !{i32 590080, metadata !4758, metadata !"ap", metadata !3316, i32 1613, metadata !4760, i32 0} ; [ DW_TAG_auto_variable ]
!4760 = metadata !{i32 589846, metadata !4761, metadata !"va_list", metadata !4761, i32 110, i64 0, i64 0, i64 0, i32 0, metadata !4762} ; [ DW_TAG_typedef ]
!4761 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/usr/include", metadata !3317} ; [ DW_TAG_file_type ]
!4762 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !4763, metadata !2121, i32 0, null} ; [ DW_TAG_array_type ]
!4763 = metadata !{i32 589843, metadata !3316, metadata !"__va_list_tag", metadata !4764, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !4765, i32 0, null} ; [ DW_TAG_structure_type ]
!4764 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3317} ; [ DW_TAG_file_type ]
!4765 = metadata !{metadata !4766, metadata !4767, metadata !4768, metadata !4769}
!4766 = metadata !{i32 589837, metadata !4763, metadata !"gp_offset", metadata !4764, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !3328} ; [ DW_TAG_member ]
!4767 = metadata !{i32 589837, metadata !4763, metadata !"fp_offset", metadata !4764, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !3328} ; [ DW_TAG_member ]
!4768 = metadata !{i32 589837, metadata !4763, metadata !"overflow_arg_area", metadata !4764, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !3529} ; [ DW_TAG_member ]
!4769 = metadata !{i32 589837, metadata !4763, metadata !"reg_save_area", metadata !4764, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !3529} ; [ DW_TAG_member ]
!4770 = metadata !{i32 590080, metadata !4758, metadata !"arg", metadata !3316, i32 1614, metadata !3328, i32 0} ; [ DW_TAG_auto_variable ]
!4771 = metadata !{i32 590080, metadata !4772, metadata !"flags", metadata !3316, i32 1644, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4772 = metadata !{i32 589835, metadata !4758, i32 1644, i32 0, metadata !3316, i32 13} ; [ DW_TAG_lexical_block ]
!4773 = metadata !{i32 590080, metadata !4774, metadata !"r", metadata !3316, i32 1671, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4774 = metadata !{i32 589835, metadata !4758, i32 1671, i32 0, metadata !3316, i32 14} ; [ DW_TAG_lexical_block ]
!4775 = metadata !{i32 590081, metadata !3460, metadata !"fd", metadata !3316, i32 1169, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4776 = metadata !{i32 590081, metadata !3460, metadata !"times", metadata !3316, i32 1169, metadata !3463, i32 0} ; [ DW_TAG_arg_variable ]
!4777 = metadata !{i32 590080, metadata !4778, metadata !"f", metadata !3316, i32 1170, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4778 = metadata !{i32 589835, metadata !3460, i32 1169, i32 0, metadata !3316, i32 15} ; [ DW_TAG_lexical_block ]
!4779 = metadata !{i32 590080, metadata !4778, metadata !"r", metadata !3316, i32 1182, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4780 = metadata !{i32 590081, metadata !3465, metadata !"df", metadata !3316, i32 977, metadata !3334, i32 0} ; [ DW_TAG_arg_variable ]
!4781 = metadata !{i32 590081, metadata !3465, metadata !"owner", metadata !3316, i32 977, metadata !3468, i32 0} ; [ DW_TAG_arg_variable ]
!4782 = metadata !{i32 590081, metadata !3465, metadata !"group", metadata !3316, i32 977, metadata !3469, i32 0} ; [ DW_TAG_arg_variable ]
!4783 = metadata !{i32 590081, metadata !3470, metadata !"fd", metadata !3316, i32 996, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4784 = metadata !{i32 590081, metadata !3470, metadata !"owner", metadata !3316, i32 996, metadata !3468, i32 0} ; [ DW_TAG_arg_variable ]
!4785 = metadata !{i32 590081, metadata !3470, metadata !"group", metadata !3316, i32 996, metadata !3469, i32 0} ; [ DW_TAG_arg_variable ]
!4786 = metadata !{i32 590080, metadata !4787, metadata !"f", metadata !3316, i32 997, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4787 = metadata !{i32 589835, metadata !3470, i32 996, i32 0, metadata !3316, i32 17} ; [ DW_TAG_lexical_block ]
!4788 = metadata !{i32 590080, metadata !4789, metadata !"r", metadata !3316, i32 1007, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4789 = metadata !{i32 589835, metadata !4787, i32 1007, i32 0, metadata !3316, i32 18} ; [ DW_TAG_lexical_block ]
!4790 = metadata !{i32 590081, metadata !3473, metadata !"fd", metadata !3316, i32 811, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4791 = metadata !{i32 590080, metadata !4792, metadata !"f", metadata !3316, i32 812, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4792 = metadata !{i32 589835, metadata !3473, i32 811, i32 0, metadata !3316, i32 19} ; [ DW_TAG_lexical_block ]
!4793 = metadata !{i32 590080, metadata !4794, metadata !"r", metadata !3316, i32 824, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4794 = metadata !{i32 589835, metadata !4792, i32 824, i32 0, metadata !3316, i32 20} ; [ DW_TAG_lexical_block ]
!4795 = metadata !{i32 590081, metadata !3474, metadata !"fd", metadata !3316, i32 2303, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4796 = metadata !{i32 590081, metadata !3474, metadata !"request", metadata !3316, i32 2303, metadata !3351, i32 0} ; [ DW_TAG_arg_variable ]
!4797 = metadata !{i32 590080, metadata !4798, metadata !"f", metadata !3316, i32 2304, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4798 = metadata !{i32 589835, metadata !3474, i32 2303, i32 0, metadata !3316, i32 21} ; [ DW_TAG_lexical_block ]
!4799 = metadata !{i32 590080, metadata !4798, metadata !"ap", metadata !3316, i32 2305, metadata !4760, i32 0} ; [ DW_TAG_auto_variable ]
!4800 = metadata !{i32 590080, metadata !4798, metadata !"buf", metadata !3316, i32 2306, metadata !3529, i32 0} ; [ DW_TAG_auto_variable ]
!4801 = metadata !{i32 590080, metadata !4802, metadata !"stat", metadata !3316, i32 2322, metadata !3586, i32 0} ; [ DW_TAG_auto_variable ]
!4802 = metadata !{i32 589835, metadata !4798, i32 2322, i32 0, metadata !3316, i32 22} ; [ DW_TAG_lexical_block ]
!4803 = metadata !{i32 590080, metadata !4804, metadata !"ts", metadata !3316, i32 2326, metadata !4805, i32 0} ; [ DW_TAG_auto_variable ]
!4804 = metadata !{i32 589835, metadata !4802, i32 2326, i32 0, metadata !3316, i32 23} ; [ DW_TAG_lexical_block ]
!4805 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4806} ; [ DW_TAG_pointer_type ]
!4806 = metadata !{i32 589843, metadata !3316, metadata !"termios", metadata !4807, i32 29, i64 480, i64 32, i64 0, i32 0, null, metadata !4808, i32 0, null} ; [ DW_TAG_structure_type ]
!4807 = metadata !{i32 589865, metadata !"termios.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3317} ; [ DW_TAG_file_type ]
!4808 = metadata !{metadata !4809, metadata !4811, metadata !4812, metadata !4813, metadata !4814, metadata !4816, metadata !4818, metadata !4820}
!4809 = metadata !{i32 589837, metadata !4806, metadata !"c_iflag", metadata !4807, i32 30, i64 32, i64 32, i64 0, i32 0, metadata !4810} ; [ DW_TAG_member ]
!4810 = metadata !{i32 589846, metadata !4807, metadata !"tcflag_t", metadata !4807, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !3328} ; [ DW_TAG_typedef ]
!4811 = metadata !{i32 589837, metadata !4806, metadata !"c_oflag", metadata !4807, i32 31, i64 32, i64 32, i64 32, i32 0, metadata !4810} ; [ DW_TAG_member ]
!4812 = metadata !{i32 589837, metadata !4806, metadata !"c_cflag", metadata !4807, i32 32, i64 32, i64 32, i64 64, i32 0, metadata !4810} ; [ DW_TAG_member ]
!4813 = metadata !{i32 589837, metadata !4806, metadata !"c_lflag", metadata !4807, i32 33, i64 32, i64 32, i64 96, i32 0, metadata !4810} ; [ DW_TAG_member ]
!4814 = metadata !{i32 589837, metadata !4806, metadata !"c_line", metadata !4807, i32 34, i64 8, i64 8, i64 128, i32 0, metadata !4815} ; [ DW_TAG_member ]
!4815 = metadata !{i32 589846, metadata !4807, metadata !"cc_t", metadata !4807, i32 24, i64 0, i64 0, i64 0, i32 0, metadata !3517} ; [ DW_TAG_typedef ]
!4816 = metadata !{i32 589837, metadata !4806, metadata !"c_cc", metadata !4807, i32 35, i64 256, i64 8, i64 136, i32 0, metadata !4817} ; [ DW_TAG_member ]
!4817 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 256, i64 8, i64 0, i32 0, metadata !4815, metadata !834, i32 0, null} ; [ DW_TAG_array_type ]
!4818 = metadata !{i32 589837, metadata !4806, metadata !"c_ispeed", metadata !4807, i32 36, i64 32, i64 32, i64 416, i32 0, metadata !4819} ; [ DW_TAG_member ]
!4819 = metadata !{i32 589846, metadata !4807, metadata !"speed_t", metadata !4807, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !3328} ; [ DW_TAG_typedef ]
!4820 = metadata !{i32 589837, metadata !4806, metadata !"c_ospeed", metadata !4807, i32 37, i64 32, i64 32, i64 448, i32 0, metadata !4819} ; [ DW_TAG_member ]
!4821 = metadata !{i32 590080, metadata !4822, metadata !"ws", metadata !3316, i32 2395, metadata !4823, i32 0} ; [ DW_TAG_auto_variable ]
!4822 = metadata !{i32 589835, metadata !4802, i32 2395, i32 0, metadata !3316, i32 24} ; [ DW_TAG_lexical_block ]
!4823 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4824} ; [ DW_TAG_pointer_type ]
!4824 = metadata !{i32 589843, metadata !3316, metadata !"winsize", metadata !4825, i32 28, i64 64, i64 16, i64 0, i32 0, null, metadata !4826, i32 0, null} ; [ DW_TAG_structure_type ]
!4825 = metadata !{i32 589865, metadata !"ioctl-types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3317} ; [ DW_TAG_file_type ]
!4826 = metadata !{metadata !4827, metadata !4828, metadata !4829, metadata !4830}
!4827 = metadata !{i32 589837, metadata !4824, metadata !"ws_row", metadata !4825, i32 29, i64 16, i64 16, i64 0, i32 0, metadata !3394} ; [ DW_TAG_member ]
!4828 = metadata !{i32 589837, metadata !4824, metadata !"ws_col", metadata !4825, i32 30, i64 16, i64 16, i64 16, i32 0, metadata !3394} ; [ DW_TAG_member ]
!4829 = metadata !{i32 589837, metadata !4824, metadata !"ws_xpixel", metadata !4825, i32 31, i64 16, i64 16, i64 32, i32 0, metadata !3394} ; [ DW_TAG_member ]
!4830 = metadata !{i32 589837, metadata !4824, metadata !"ws_ypixel", metadata !4825, i32 32, i64 16, i64 16, i64 48, i32 0, metadata !3394} ; [ DW_TAG_member ]
!4831 = metadata !{i32 590080, metadata !4832, metadata !"res", metadata !3316, i32 2418, metadata !3542, i32 0} ; [ DW_TAG_auto_variable ]
!4832 = metadata !{i32 589835, metadata !4802, i32 2418, i32 0, metadata !3316, i32 25} ; [ DW_TAG_lexical_block ]
!4833 = metadata !{i32 590080, metadata !4834, metadata !"ifr", metadata !3316, i32 2438, metadata !4835, i32 0} ; [ DW_TAG_auto_variable ]
!4834 = metadata !{i32 589835, metadata !4802, i32 2438, i32 0, metadata !3316, i32 26} ; [ DW_TAG_lexical_block ]
!4835 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4836} ; [ DW_TAG_pointer_type ]
!4836 = metadata !{i32 589843, metadata !3316, metadata !"ifreq", metadata !4837, i32 127, i64 320, i64 64, i64 0, i32 0, null, metadata !4838, i32 0, null} ; [ DW_TAG_structure_type ]
!4837 = metadata !{i32 589865, metadata !"if.h", metadata !"/usr/include/net", metadata !3317} ; [ DW_TAG_file_type ]
!4838 = metadata !{metadata !4839, metadata !4844}
!4839 = metadata !{i32 589837, metadata !4836, metadata !"ifr_ifrn", metadata !4837, i32 133, i64 128, i64 8, i64 0, i32 0, metadata !4840} ; [ DW_TAG_member ]
!4840 = metadata !{i32 589847, metadata !3316, metadata !"", metadata !4837, i32 131, i64 128, i64 8, i64 0, i32 0, null, metadata !4841, i32 0, null} ; [ DW_TAG_union_type ]
!4841 = metadata !{metadata !4842}
!4842 = metadata !{i32 589837, metadata !4840, metadata !"ifrn_name", metadata !4837, i32 132, i64 128, i64 8, i64 0, i32 0, metadata !4843} ; [ DW_TAG_member ]
!4843 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 128, i64 8, i64 0, i32 0, metadata !3341, metadata !1334, i32 0, null} ; [ DW_TAG_array_type ]
!4844 = metadata !{i32 589837, metadata !4836, metadata !"ifr_ifru", metadata !4837, i32 149, i64 192, i64 64, i64 128, i32 0, metadata !4845} ; [ DW_TAG_member ]
!4845 = metadata !{i32 589847, metadata !3316, metadata !"", metadata !4837, i32 136, i64 192, i64 64, i64 0, i32 0, null, metadata !4846, i32 0, null} ; [ DW_TAG_union_type ]
!4846 = metadata !{metadata !4847, metadata !4853, metadata !4854, metadata !4855, metadata !4856, metadata !4857, metadata !4859, metadata !4860, metadata !4861, metadata !4870, metadata !4871, metadata !4872}
!4847 = metadata !{i32 589837, metadata !4845, metadata !"ifru_addr", metadata !4837, i32 137, i64 128, i64 16, i64 0, i32 0, metadata !4848} ; [ DW_TAG_member ]
!4848 = metadata !{i32 589843, metadata !3316, metadata !"sockaddr", metadata !3390, i32 150, i64 128, i64 16, i64 0, i32 0, null, metadata !4849, i32 0, null} ; [ DW_TAG_structure_type ]
!4849 = metadata !{metadata !4850, metadata !4851}
!4850 = metadata !{i32 589837, metadata !4848, metadata !"sa_family", metadata !3390, i32 151, i64 16, i64 16, i64 0, i32 0, metadata !3393} ; [ DW_TAG_member ]
!4851 = metadata !{i32 589837, metadata !4848, metadata !"sa_data", metadata !3390, i32 152, i64 112, i64 8, i64 16, i32 0, metadata !4852} ; [ DW_TAG_member ]
!4852 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 112, i64 8, i64 0, i32 0, metadata !3341, metadata !3830, i32 0, null} ; [ DW_TAG_array_type ]
!4853 = metadata !{i32 589837, metadata !4845, metadata !"ifru_dstaddr", metadata !4837, i32 138, i64 128, i64 16, i64 0, i32 0, metadata !4848} ; [ DW_TAG_member ]
!4854 = metadata !{i32 589837, metadata !4845, metadata !"ifru_broadaddr", metadata !4837, i32 139, i64 128, i64 16, i64 0, i32 0, metadata !4848} ; [ DW_TAG_member ]
!4855 = metadata !{i32 589837, metadata !4845, metadata !"ifru_netmask", metadata !4837, i32 140, i64 128, i64 16, i64 0, i32 0, metadata !4848} ; [ DW_TAG_member ]
!4856 = metadata !{i32 589837, metadata !4845, metadata !"ifru_hwaddr", metadata !4837, i32 141, i64 128, i64 16, i64 0, i32 0, metadata !4848} ; [ DW_TAG_member ]
!4857 = metadata !{i32 589837, metadata !4845, metadata !"ifru_flags", metadata !4837, i32 142, i64 16, i64 16, i64 0, i32 0, metadata !4858} ; [ DW_TAG_member ]
!4858 = metadata !{i32 589860, metadata !3316, metadata !"short int", metadata !3316, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4859 = metadata !{i32 589837, metadata !4845, metadata !"ifru_ivalue", metadata !4837, i32 143, i64 32, i64 32, i64 0, i32 0, metadata !3326} ; [ DW_TAG_member ]
!4860 = metadata !{i32 589837, metadata !4845, metadata !"ifru_mtu", metadata !4837, i32 144, i64 32, i64 32, i64 0, i32 0, metadata !3326} ; [ DW_TAG_member ]
!4861 = metadata !{i32 589837, metadata !4845, metadata !"ifru_map", metadata !4837, i32 145, i64 192, i64 64, i64 0, i32 0, metadata !4862} ; [ DW_TAG_member ]
!4862 = metadata !{i32 589843, metadata !3316, metadata !"ifmap", metadata !4837, i32 112, i64 192, i64 64, i64 0, i32 0, null, metadata !4863, i32 0, null} ; [ DW_TAG_structure_type ]
!4863 = metadata !{metadata !4864, metadata !4865, metadata !4866, metadata !4867, metadata !4868, metadata !4869}
!4864 = metadata !{i32 589837, metadata !4862, metadata !"mem_start", metadata !4837, i32 113, i64 64, i64 64, i64 0, i32 0, metadata !3351} ; [ DW_TAG_member ]
!4865 = metadata !{i32 589837, metadata !4862, metadata !"mem_end", metadata !4837, i32 114, i64 64, i64 64, i64 64, i32 0, metadata !3351} ; [ DW_TAG_member ]
!4866 = metadata !{i32 589837, metadata !4862, metadata !"base_addr", metadata !4837, i32 115, i64 16, i64 16, i64 128, i32 0, metadata !3394} ; [ DW_TAG_member ]
!4867 = metadata !{i32 589837, metadata !4862, metadata !"irq", metadata !4837, i32 116, i64 8, i64 8, i64 144, i32 0, metadata !3517} ; [ DW_TAG_member ]
!4868 = metadata !{i32 589837, metadata !4862, metadata !"dma", metadata !4837, i32 117, i64 8, i64 8, i64 152, i32 0, metadata !3517} ; [ DW_TAG_member ]
!4869 = metadata !{i32 589837, metadata !4862, metadata !"port", metadata !4837, i32 118, i64 8, i64 8, i64 160, i32 0, metadata !3517} ; [ DW_TAG_member ]
!4870 = metadata !{i32 589837, metadata !4845, metadata !"ifru_slave", metadata !4837, i32 146, i64 128, i64 8, i64 0, i32 0, metadata !4843} ; [ DW_TAG_member ]
!4871 = metadata !{i32 589837, metadata !4845, metadata !"ifru_newname", metadata !4837, i32 147, i64 128, i64 8, i64 0, i32 0, metadata !4843} ; [ DW_TAG_member ]
!4872 = metadata !{i32 589837, metadata !4845, metadata !"ifru_data", metadata !4837, i32 148, i64 64, i64 64, i64 0, i32 0, metadata !4873} ; [ DW_TAG_member ]
!4873 = metadata !{i32 589846, metadata !3350, metadata !"__caddr_t", metadata !3350, i32 186, i64 0, i64 0, i64 0, i32 0, metadata !3340} ; [ DW_TAG_typedef ]
!4874 = metadata !{i32 590080, metadata !4875, metadata !"ifr", metadata !3316, i32 2443, metadata !4835, i32 0} ; [ DW_TAG_auto_variable ]
!4875 = metadata !{i32 589835, metadata !4802, i32 2443, i32 0, metadata !3316, i32 27} ; [ DW_TAG_lexical_block ]
!4876 = metadata !{i32 590080, metadata !4875, metadata !"ia", metadata !3316, i32 2444, metadata !4877, i32 0} ; [ DW_TAG_auto_variable ]
!4877 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4852} ; [ DW_TAG_pointer_type ]
!4878 = metadata !{i32 590080, metadata !4879, metadata !"ifr", metadata !3316, i32 2450, metadata !4835, i32 0} ; [ DW_TAG_auto_variable ]
!4879 = metadata !{i32 589835, metadata !4802, i32 2450, i32 0, metadata !3316, i32 28} ; [ DW_TAG_lexical_block ]
!4880 = metadata !{i32 590080, metadata !4881, metadata !"ia", metadata !3316, i32 2456, metadata !4882, i32 0} ; [ DW_TAG_auto_variable ]
!4881 = metadata !{i32 589835, metadata !4879, i32 2456, i32 0, metadata !3316, i32 29} ; [ DW_TAG_lexical_block ]
!4882 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4883} ; [ DW_TAG_pointer_type ]
!4883 = metadata !{i32 589843, metadata !3316, metadata !"in_addr", metadata !4884, i32 32, i64 32, i64 32, i64 0, i32 0, null, metadata !4885, i32 0, null} ; [ DW_TAG_structure_type ]
!4884 = metadata !{i32 589865, metadata !"in.h", metadata !"/usr/include/netinet", metadata !3317} ; [ DW_TAG_file_type ]
!4885 = metadata !{metadata !4886}
!4886 = metadata !{i32 589837, metadata !4883, metadata !"s_addr", metadata !4884, i32 33, i64 32, i64 32, i64 0, i32 0, metadata !4887} ; [ DW_TAG_member ]
!4887 = metadata !{i32 589846, metadata !4884, metadata !"in_addr_t", metadata !4884, i32 32, i64 0, i64 0, i64 0, i32 0, metadata !3328} ; [ DW_TAG_typedef ]
!4888 = metadata !{i32 590080, metadata !4889, metadata !"ia", metadata !3316, i32 2462, metadata !4890, i32 0} ; [ DW_TAG_auto_variable ]
!4889 = metadata !{i32 589835, metadata !4879, i32 2462, i32 0, metadata !3316, i32 30} ; [ DW_TAG_lexical_block ]
!4890 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4891} ; [ DW_TAG_pointer_type ]
!4891 = metadata !{i32 589843, metadata !3316, metadata !"in6_addr", metadata !4884, i32 210, i64 128, i64 32, i64 0, i32 0, null, metadata !4892, i32 0, null} ; [ DW_TAG_structure_type ]
!4892 = metadata !{metadata !4893}
!4893 = metadata !{i32 589837, metadata !4891, metadata !"__in6_u", metadata !4884, i32 218, i64 128, i64 32, i64 0, i32 0, metadata !4894} ; [ DW_TAG_member ]
!4894 = metadata !{i32 589847, metadata !3316, metadata !"", metadata !4884, i32 212, i64 128, i64 32, i64 0, i32 0, null, metadata !4895, i32 0, null} ; [ DW_TAG_union_type ]
!4895 = metadata !{metadata !4896, metadata !4900, metadata !4903}
!4896 = metadata !{i32 589837, metadata !4894, metadata !"__u6_addr8", metadata !4884, i32 213, i64 128, i64 8, i64 0, i32 0, metadata !4897} ; [ DW_TAG_member ]
!4897 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 128, i64 8, i64 0, i32 0, metadata !4898, metadata !1334, i32 0, null} ; [ DW_TAG_array_type ]
!4898 = metadata !{i32 589846, metadata !4899, metadata !"uint8_t", metadata !4899, i32 49, i64 0, i64 0, i64 0, i32 0, metadata !3517} ; [ DW_TAG_typedef ]
!4899 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/usr/include", metadata !3317} ; [ DW_TAG_file_type ]
!4900 = metadata !{i32 589837, metadata !4894, metadata !"__u6_addr16", metadata !4884, i32 215, i64 128, i64 16, i64 0, i32 0, metadata !4901} ; [ DW_TAG_member ]
!4901 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 128, i64 16, i64 0, i32 0, metadata !4902, metadata !3300, i32 0, null} ; [ DW_TAG_array_type ]
!4902 = metadata !{i32 589846, metadata !4899, metadata !"uint16_t", metadata !4899, i32 51, i64 0, i64 0, i64 0, i32 0, metadata !3394} ; [ DW_TAG_typedef ]
!4903 = metadata !{i32 589837, metadata !4894, metadata !"__u6_addr32", metadata !4884, i32 216, i64 128, i64 32, i64 0, i32 0, metadata !4904} ; [ DW_TAG_member ]
!4904 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 128, i64 32, i64 0, i32 0, metadata !4905, metadata !838, i32 0, null} ; [ DW_TAG_array_type ]
!4905 = metadata !{i32 589846, metadata !4899, metadata !"uint32_t", metadata !4899, i32 55, i64 0, i64 0, i64 0, i32 0, metadata !3328} ; [ DW_TAG_typedef ]
!4906 = metadata !{i32 590080, metadata !4907, metadata !"r", metadata !3316, i32 2475, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4907 = metadata !{i32 589835, metadata !4798, i32 2475, i32 0, metadata !3316, i32 31} ; [ DW_TAG_lexical_block ]
!4908 = metadata !{i32 590081, metadata !3477, metadata !"f", metadata !3316, i32 2149, metadata !3320, i32 0} ; [ DW_TAG_arg_variable ]
!4909 = metadata !{i32 590081, metadata !3480, metadata !"pf", metadata !3316, i32 2127, metadata !3483, i32 0} ; [ DW_TAG_arg_variable ]
!4910 = metadata !{i32 590080, metadata !4911, metadata !"fd", metadata !3316, i32 2128, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4911 = metadata !{i32 589835, metadata !3480, i32 2127, i32 0, metadata !3316, i32 33} ; [ DW_TAG_lexical_block ]
!4912 = metadata !{i32 590081, metadata !3484, metadata !"nfds", metadata !3316, i32 1874, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4913 = metadata !{i32 590081, metadata !3484, metadata !"read", metadata !3316, i32 1874, metadata !3487, i32 0} ; [ DW_TAG_arg_variable ]
!4914 = metadata !{i32 590081, metadata !3484, metadata !"write", metadata !3316, i32 1874, metadata !3487, i32 0} ; [ DW_TAG_arg_variable ]
!4915 = metadata !{i32 590081, metadata !3484, metadata !"except", metadata !3316, i32 1875, metadata !3487, i32 0} ; [ DW_TAG_arg_variable ]
!4916 = metadata !{i32 590081, metadata !3484, metadata !"timeout", metadata !3316, i32 1875, metadata !3495, i32 0} ; [ DW_TAG_arg_variable ]
!4917 = metadata !{i32 590080, metadata !4918, metadata !"in_read", metadata !3316, i32 1876, metadata !3488, i32 0} ; [ DW_TAG_auto_variable ]
!4918 = metadata !{i32 589835, metadata !3484, i32 1875, i32 0, metadata !3316, i32 34} ; [ DW_TAG_lexical_block ]
!4919 = metadata !{i32 590080, metadata !4918, metadata !"in_write", metadata !3316, i32 1876, metadata !3488, i32 0} ; [ DW_TAG_auto_variable ]
!4920 = metadata !{i32 590080, metadata !4918, metadata !"in_except", metadata !3316, i32 1876, metadata !3488, i32 0} ; [ DW_TAG_auto_variable ]
!4921 = metadata !{i32 590080, metadata !4918, metadata !"os_read", metadata !3316, i32 1876, metadata !3488, i32 0} ; [ DW_TAG_auto_variable ]
!4922 = metadata !{i32 590080, metadata !4918, metadata !"os_write", metadata !3316, i32 1876, metadata !3488, i32 0} ; [ DW_TAG_auto_variable ]
!4923 = metadata !{i32 590080, metadata !4918, metadata !"os_except", metadata !3316, i32 1876, metadata !3488, i32 0} ; [ DW_TAG_auto_variable ]
!4924 = metadata !{i32 590080, metadata !4918, metadata !"i", metadata !3316, i32 1877, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4925 = metadata !{i32 590080, metadata !4918, metadata !"count", metadata !3316, i32 1877, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4926 = metadata !{i32 590080, metadata !4918, metadata !"os_nfds", metadata !3316, i32 1877, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4927 = metadata !{i32 590080, metadata !4928, metadata !"f", metadata !3316, i32 1913, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4928 = metadata !{i32 589835, metadata !4918, i32 1913, i32 0, metadata !3316, i32 35} ; [ DW_TAG_lexical_block ]
!4929 = metadata !{i32 590080, metadata !4930, metadata !"flags", metadata !3316, i32 1919, metadata !3328, i32 0} ; [ DW_TAG_auto_variable ]
!4930 = metadata !{i32 589835, metadata !4928, i32 1919, i32 0, metadata !3316, i32 36} ; [ DW_TAG_lexical_block ]
!4931 = metadata !{i32 590080, metadata !4932, metadata !"tv", metadata !3316, i32 1952, metadata !3496, i32 0} ; [ DW_TAG_auto_variable ]
!4932 = metadata !{i32 589835, metadata !4918, i32 1952, i32 0, metadata !3316, i32 37} ; [ DW_TAG_lexical_block ]
!4933 = metadata !{i32 590080, metadata !4932, metadata !"r", metadata !3316, i32 1953, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4934 = metadata !{i32 590080, metadata !4935, metadata !"f", metadata !3316, i32 1968, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4935 = metadata !{i32 589835, metadata !4932, i32 1968, i32 0, metadata !3316, i32 38} ; [ DW_TAG_lexical_block ]
!4936 = metadata !{i32 590081, metadata !3502, metadata !"fd", metadata !3316, i32 412, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4937 = metadata !{i32 590080, metadata !4938, metadata !"f", metadata !3316, i32 414, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4938 = metadata !{i32 589835, metadata !3502, i32 412, i32 0, metadata !3316, i32 39} ; [ DW_TAG_lexical_block ]
!4939 = metadata !{i32 590080, metadata !4938, metadata !"r", metadata !3316, i32 415, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4940 = metadata !{i32 590081, metadata !3503, metadata !"oldfd", metadata !3316, i32 1731, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4941 = metadata !{i32 590081, metadata !3503, metadata !"newfd", metadata !3316, i32 1731, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4942 = metadata !{i32 590080, metadata !4943, metadata !"f", metadata !3316, i32 1732, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4943 = metadata !{i32 589835, metadata !3503, i32 1731, i32 0, metadata !3316, i32 40} ; [ DW_TAG_lexical_block ]
!4944 = metadata !{i32 590080, metadata !4943, metadata !"i", metadata !3316, i32 1742, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4945 = metadata !{i32 590080, metadata !4943, metadata !"idx", metadata !3316, i32 1742, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4946 = metadata !{i32 590080, metadata !4943, metadata !"f2", metadata !3316, i32 1756, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4947 = metadata !{i32 590081, metadata !3504, metadata !"oldfd", metadata !3316, i32 1779, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4948 = metadata !{i32 590080, metadata !4949, metadata !"f", metadata !3316, i32 1780, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4949 = metadata !{i32 589835, metadata !3504, i32 1779, i32 0, metadata !3316, i32 41} ; [ DW_TAG_lexical_block ]
!4950 = metadata !{i32 590080, metadata !4951, metadata !"fd", metadata !3316, i32 1788, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4951 = metadata !{i32 589835, metadata !4949, i32 1789, i32 0, metadata !3316, i32 42} ; [ DW_TAG_lexical_block ]
!4952 = metadata !{i32 590081, metadata !3505, metadata !"fd", metadata !3316, i32 1367, metadata !3328, i32 0} ; [ DW_TAG_arg_variable ]
!4953 = metadata !{i32 590081, metadata !3505, metadata !"dirp", metadata !3316, i32 1367, metadata !3508, i32 0} ; [ DW_TAG_arg_variable ]
!4954 = metadata !{i32 590081, metadata !3505, metadata !"count", metadata !3316, i32 1367, metadata !3328, i32 0} ; [ DW_TAG_arg_variable ]
!4955 = metadata !{i32 590080, metadata !4956, metadata !"f", metadata !3316, i32 1368, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4956 = metadata !{i32 589835, metadata !3505, i32 1367, i32 0, metadata !3316, i32 43} ; [ DW_TAG_lexical_block ]
!4957 = metadata !{i32 590080, metadata !4958, metadata !"i", metadata !3316, i32 1387, metadata !3330, i32 0} ; [ DW_TAG_auto_variable ]
!4958 = metadata !{i32 589835, metadata !4956, i32 1387, i32 0, metadata !3316, i32 44} ; [ DW_TAG_lexical_block ]
!4959 = metadata !{i32 590080, metadata !4958, metadata !"pad", metadata !3316, i32 1387, metadata !3330, i32 0} ; [ DW_TAG_auto_variable ]
!4960 = metadata !{i32 590080, metadata !4958, metadata !"bytes", metadata !3316, i32 1387, metadata !3330, i32 0} ; [ DW_TAG_auto_variable ]
!4961 = metadata !{i32 590080, metadata !4962, metadata !"df", metadata !3316, i32 1397, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!4962 = metadata !{i32 589835, metadata !4958, i32 1397, i32 0, metadata !3316, i32 45} ; [ DW_TAG_lexical_block ]
!4963 = metadata !{i32 590080, metadata !4964, metadata !"os_pos", metadata !3316, i32 1421, metadata !3328, i32 0} ; [ DW_TAG_auto_variable ]
!4964 = metadata !{i32 589835, metadata !4956, i32 1421, i32 0, metadata !3316, i32 46} ; [ DW_TAG_lexical_block ]
!4965 = metadata !{i32 590080, metadata !4964, metadata !"res", metadata !3316, i32 1423, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4966 = metadata !{i32 590080, metadata !4964, metadata !"s", metadata !3316, i32 1434, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4967 = metadata !{i32 590080, metadata !4968, metadata !"pos", metadata !3316, i32 1443, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4968 = metadata !{i32 589835, metadata !4964, i32 1443, i32 0, metadata !3316, i32 47} ; [ DW_TAG_lexical_block ]
!4969 = metadata !{i32 590080, metadata !4970, metadata !"dp", metadata !3316, i32 1449, metadata !3508, i32 0} ; [ DW_TAG_auto_variable ]
!4970 = metadata !{i32 589835, metadata !4968, i32 1449, i32 0, metadata !3316, i32 48} ; [ DW_TAG_lexical_block ]
!4971 = metadata !{i32 590081, metadata !3520, metadata !"f", metadata !3316, i32 2231, metadata !3320, i32 0} ; [ DW_TAG_arg_variable ]
!4972 = metadata !{i32 590081, metadata !3520, metadata !"iov", metadata !3316, i32 2231, metadata !3523, i32 0} ; [ DW_TAG_arg_variable ]
!4973 = metadata !{i32 590081, metadata !3520, metadata !"iovcnt", metadata !3316, i32 2231, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4974 = metadata !{i32 590080, metadata !4975, metadata !"total", metadata !3316, i32 2233, metadata !3416, i32 0} ; [ DW_TAG_auto_variable ]
!4975 = metadata !{i32 589835, metadata !3520, i32 2232, i32 0, metadata !3316, i32 49} ; [ DW_TAG_lexical_block ]
!4976 = metadata !{i32 590080, metadata !4977, metadata !"this_len", metadata !3316, i32 2237, metadata !3419, i32 0} ; [ DW_TAG_auto_variable ]
!4977 = metadata !{i32 589835, metadata !4975, i32 2237, i32 0, metadata !3316, i32 50} ; [ DW_TAG_lexical_block ]
!4978 = metadata !{i32 590080, metadata !4979, metadata !"os", metadata !3316, i32 2271, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4979 = metadata !{i32 589835, metadata !4975, i32 2271, i32 0, metadata !3316, i32 51} ; [ DW_TAG_lexical_block ]
!4980 = metadata !{i32 590081, metadata !3531, metadata !"fd", metadata !3316, i32 2278, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4981 = metadata !{i32 590081, metadata !3531, metadata !"iov", metadata !3316, i32 2278, metadata !3523, i32 0} ; [ DW_TAG_arg_variable ]
!4982 = metadata !{i32 590081, metadata !3531, metadata !"iovcnt", metadata !3316, i32 2278, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4983 = metadata !{i32 590080, metadata !4984, metadata !"f", metadata !3316, i32 2279, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4984 = metadata !{i32 589835, metadata !3531, i32 2278, i32 0, metadata !3316, i32 52} ; [ DW_TAG_lexical_block ]
!4985 = metadata !{i32 590080, metadata !4986, metadata !"r", metadata !3316, i32 2289, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4986 = metadata !{i32 589835, metadata !4984, i32 2290, i32 0, metadata !3316, i32 53} ; [ DW_TAG_lexical_block ]
!4987 = metadata !{i32 590081, metadata !3534, metadata !"fd", metadata !3316, i32 1028, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4988 = metadata !{i32 590081, metadata !3534, metadata !"buf", metadata !3316, i32 1028, metadata !3344, i32 0} ; [ DW_TAG_arg_variable ]
!4989 = metadata !{i32 590080, metadata !4990, metadata !"f", metadata !3316, i32 1029, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!4990 = metadata !{i32 589835, metadata !3534, i32 1028, i32 0, metadata !3316, i32 54} ; [ DW_TAG_lexical_block ]
!4991 = metadata !{i32 590080, metadata !4992, metadata !"r", metadata !3316, i32 1045, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!4992 = metadata !{i32 589835, metadata !4990, i32 1045, i32 0, metadata !3316, i32 55} ; [ DW_TAG_lexical_block ]
!4993 = metadata !{i32 590081, metadata !3535, metadata !"f", metadata !3316, i32 2180, metadata !3320, i32 0} ; [ DW_TAG_arg_variable ]
!4994 = metadata !{i32 590081, metadata !3535, metadata !"iov", metadata !3316, i32 2180, metadata !3523, i32 0} ; [ DW_TAG_arg_variable ]
!4995 = metadata !{i32 590081, metadata !3535, metadata !"iovcnt", metadata !3316, i32 2180, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4996 = metadata !{i32 590080, metadata !4997, metadata !"total", metadata !3316, i32 2184, metadata !3416, i32 0} ; [ DW_TAG_auto_variable ]
!4997 = metadata !{i32 589835, metadata !4998, i32 2184, i32 0, metadata !3316, i32 57} ; [ DW_TAG_lexical_block ]
!4998 = metadata !{i32 589835, metadata !3535, i32 2181, i32 0, metadata !3316, i32 56} ; [ DW_TAG_lexical_block ]
!4999 = metadata !{i32 590080, metadata !5000, metadata !"this_len", metadata !3316, i32 2191, metadata !3419, i32 0} ; [ DW_TAG_auto_variable ]
!5000 = metadata !{i32 589835, metadata !4997, i32 2191, i32 0, metadata !3316, i32 58} ; [ DW_TAG_lexical_block ]
!5001 = metadata !{i32 590080, metadata !5002, metadata !"os", metadata !3316, i32 2201, metadata !3416, i32 0} ; [ DW_TAG_auto_variable ]
!5002 = metadata !{i32 589835, metadata !4998, i32 2201, i32 0, metadata !3316, i32 59} ; [ DW_TAG_lexical_block ]
!5003 = metadata !{i32 590080, metadata !5004, metadata !"p", metadata !3316, i32 2205, metadata !3340, i32 0} ; [ DW_TAG_auto_variable ]
!5004 = metadata !{i32 589835, metadata !5002, i32 2206, i32 0, metadata !3316, i32 60} ; [ DW_TAG_lexical_block ]
!5005 = metadata !{i32 590080, metadata !5004, metadata !"cb", metadata !3316, i32 2206, metadata !3416, i32 0} ; [ DW_TAG_auto_variable ]
!5006 = metadata !{i32 590080, metadata !5004, metadata !"this_len", metadata !3316, i32 2207, metadata !3419, i32 0} ; [ DW_TAG_auto_variable ]
!5007 = metadata !{i32 590081, metadata !3536, metadata !"addr", metadata !3316, i32 908, metadata !3529, i32 0} ; [ DW_TAG_arg_variable ]
!5008 = metadata !{i32 590081, metadata !3536, metadata !"length", metadata !3316, i32 908, metadata !3419, i32 0} ; [ DW_TAG_arg_variable ]
!5009 = metadata !{i32 590081, metadata !3539, metadata !"filedes", metadata !3316, i32 2154, metadata !3542, i32 0} ; [ DW_TAG_arg_variable ]
!5010 = metadata !{i32 590080, metadata !5011, metadata !"f", metadata !3316, i32 2155, metadata !5012, i32 0} ; [ DW_TAG_auto_variable ]
!5011 = metadata !{i32 589835, metadata !3539, i32 2154, i32 0, metadata !3316, i32 62} ; [ DW_TAG_lexical_block ]
!5012 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3320, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!5013 = metadata !{i32 590080, metadata !5011, metadata !"os_filedes", metadata !3316, i32 2156, metadata !3451, i32 0} ; [ DW_TAG_auto_variable ]
!5014 = metadata !{i32 590080, metadata !5011, metadata !"r", metadata !3316, i32 2157, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5015 = metadata !{i32 590081, metadata !3543, metadata !"p", metadata !3316, i32 2019, metadata !3529, i32 0} ; [ DW_TAG_arg_variable ]
!5016 = metadata !{i32 590080, metadata !5017, metadata !"pc", metadata !3316, i32 2021, metadata !3340, i32 0} ; [ DW_TAG_auto_variable ]
!5017 = metadata !{i32 589835, metadata !3543, i32 2019, i32 0, metadata !3316, i32 63} ; [ DW_TAG_lexical_block ]
!5018 = metadata !{i32 590081, metadata !3546, metadata !"s", metadata !3316, i32 2032, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5019 = metadata !{i32 590080, metadata !5020, metadata !"sc", metadata !3316, i32 2033, metadata !3340, i32 0} ; [ DW_TAG_auto_variable ]
!5020 = metadata !{i32 589835, metadata !3546, i32 2032, i32 0, metadata !3316, i32 64} ; [ DW_TAG_lexical_block ]
!5021 = metadata !{i32 590080, metadata !5020, metadata !"i", metadata !3316, i32 2034, metadata !3328, i32 0} ; [ DW_TAG_auto_variable ]
!5022 = metadata !{i32 590080, metadata !5023, metadata !"c", metadata !3316, i32 2037, metadata !3341, i32 0} ; [ DW_TAG_auto_variable ]
!5023 = metadata !{i32 589835, metadata !5020, i32 2037, i32 0, metadata !3316, i32 65} ; [ DW_TAG_lexical_block ]
!5024 = metadata !{i32 590080, metadata !5025, metadata !"cc", metadata !3316, i32 2046, metadata !3341, i32 0} ; [ DW_TAG_auto_variable ]
!5025 = metadata !{i32 589835, metadata !5023, i32 2046, i32 0, metadata !3316, i32 66} ; [ DW_TAG_lexical_block ]
!5026 = metadata !{i32 590081, metadata !3549, metadata !"pathname", metadata !3316, i32 61, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5027 = metadata !{i32 590081, metadata !3549, metadata !"flags", metadata !3316, i32 61, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5028 = metadata !{i32 590081, metadata !3549, metadata !"cp_treat_symbolic", metadata !3316, i32 61, metadata !3552, i32 0} ; [ DW_TAG_arg_variable ]
!5029 = metadata !{i32 590080, metadata !5030, metadata !"c", metadata !3316, i32 62, metadata !3341, i32 0} ; [ DW_TAG_auto_variable ]
!5030 = metadata !{i32 589835, metadata !3549, i32 61, i32 0, metadata !3316, i32 67} ; [ DW_TAG_lexical_block ]
!5031 = metadata !{i32 590080, metadata !5030, metadata !"i", metadata !3316, i32 63, metadata !3328, i32 0} ; [ DW_TAG_auto_variable ]
!5032 = metadata !{i32 590080, metadata !5033, metadata !"df", metadata !3316, i32 73, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5033 = metadata !{i32 589835, metadata !5030, i32 73, i32 0, metadata !3316, i32 68} ; [ DW_TAG_lexical_block ]
!5034 = metadata !{i32 590080, metadata !5035, metadata !"df", metadata !3316, i32 80, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5035 = metadata !{i32 589835, metadata !5030, i32 80, i32 0, metadata !3316, i32 69} ; [ DW_TAG_lexical_block ]
!5036 = metadata !{i32 590080, metadata !5035, metadata !"file_check", metadata !3316, i32 81, metadata !3552, i32 0} ; [ DW_TAG_auto_variable ]
!5037 = metadata !{i32 590080, metadata !5038, metadata !"dot", metadata !3316, i32 90, metadata !3340, i32 0} ; [ DW_TAG_auto_variable ]
!5038 = metadata !{i32 589835, metadata !5035, i32 90, i32 0, metadata !3316, i32 70} ; [ DW_TAG_lexical_block ]
!5039 = metadata !{i32 590080, metadata !5040, metadata !"__s1_len", metadata !3316, i32 91, metadata !3419, i32 0} ; [ DW_TAG_auto_variable ]
!5040 = metadata !{i32 589835, metadata !5038, i32 91, i32 0, metadata !3316, i32 71} ; [ DW_TAG_lexical_block ]
!5041 = metadata !{i32 590080, metadata !5040, metadata !"__s2_len", metadata !3316, i32 91, metadata !3419, i32 0} ; [ DW_TAG_auto_variable ]
!5042 = metadata !{i32 590080, metadata !5043, metadata !"__s2", metadata !3316, i32 91, metadata !5044, i32 0} ; [ DW_TAG_auto_variable ]
!5043 = metadata !{i32 589835, metadata !5040, i32 91, i32 0, metadata !3316, i32 72} ; [ DW_TAG_lexical_block ]
!5044 = metadata !{i32 589839, metadata !3316, metadata !"", metadata !3316, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !5045} ; [ DW_TAG_pointer_type ]
!5045 = metadata !{i32 589862, metadata !3316, metadata !"", metadata !3316, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3517} ; [ DW_TAG_const_type ]
!5046 = metadata !{i32 590080, metadata !5043, metadata !"__result", metadata !3316, i32 91, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5047 = metadata !{i32 590080, metadata !5048, metadata !"shadow", metadata !3316, i32 97, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5048 = metadata !{i32 589835, metadata !5035, i32 97, i32 0, metadata !3316, i32 73} ; [ DW_TAG_lexical_block ]
!5049 = metadata !{i32 590080, metadata !5048, metadata !"toConcretize", metadata !3316, i32 98, metadata !3340, i32 0} ; [ DW_TAG_auto_variable ]
!5050 = metadata !{i32 590080, metadata !5048, metadata !"concrete_path", metadata !3316, i32 113, metadata !3427, i32 0} ; [ DW_TAG_auto_variable ]
!5051 = metadata !{i32 590080, metadata !5052, metadata !"len", metadata !3316, i32 106, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5052 = metadata !{i32 589835, metadata !5048, i32 106, i32 0, metadata !3316, i32 74} ; [ DW_TAG_lexical_block ]
!5053 = metadata !{i32 590080, metadata !5052, metadata !"pathCopy", metadata !3316, i32 107, metadata !3340, i32 0} ; [ DW_TAG_auto_variable ]
!5054 = metadata !{i32 590080, metadata !5055, metadata !"__s1_len", metadata !3316, i32 115, metadata !3419, i32 0} ; [ DW_TAG_auto_variable ]
!5055 = metadata !{i32 589835, metadata !5048, i32 115, i32 0, metadata !3316, i32 75} ; [ DW_TAG_lexical_block ]
!5056 = metadata !{i32 590080, metadata !5055, metadata !"__s2_len", metadata !3316, i32 115, metadata !3419, i32 0} ; [ DW_TAG_auto_variable ]
!5057 = metadata !{i32 590081, metadata !3553, metadata !"pathname", metadata !3316, i32 56, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5058 = metadata !{i32 590081, metadata !3556, metadata !"path", metadata !3316, i32 2108, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5059 = metadata !{i32 590081, metadata !3556, metadata !"times", metadata !3316, i32 2108, metadata !3529, i32 0} ; [ DW_TAG_arg_variable ]
!5060 = metadata !{i32 590080, metadata !5061, metadata !"dfile", metadata !3316, i32 2109, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5061 = metadata !{i32 589835, metadata !3556, i32 2108, i32 0, metadata !3316, i32 77} ; [ DW_TAG_lexical_block ]
!5062 = metadata !{i32 590080, metadata !5061, metadata !"r", metadata !3316, i32 2118, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5063 = metadata !{i32 590081, metadata !3559, metadata !"path", metadata !3316, i32 1842, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5064 = metadata !{i32 590081, metadata !3559, metadata !"buf", metadata !3316, i32 1842, metadata !3340, i32 0} ; [ DW_TAG_arg_variable ]
!5065 = metadata !{i32 590081, metadata !3559, metadata !"bufsize", metadata !3316, i32 1842, metadata !3419, i32 0} ; [ DW_TAG_arg_variable ]
!5066 = metadata !{i32 590080, metadata !5067, metadata !"dfile", metadata !3316, i32 1843, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5067 = metadata !{i32 589835, metadata !3559, i32 1842, i32 0, metadata !3316, i32 78} ; [ DW_TAG_lexical_block ]
!5068 = metadata !{i32 590080, metadata !5069, metadata !"r", metadata !3316, i32 1859, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5069 = metadata !{i32 589835, metadata !5067, i32 1859, i32 0, metadata !3316, i32 79} ; [ DW_TAG_lexical_block ]
!5070 = metadata !{i32 590081, metadata !3562, metadata !"path", metadata !3316, i32 2090, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5071 = metadata !{i32 590081, metadata !3562, metadata !"times", metadata !3316, i32 2090, metadata !3565, i32 0} ; [ DW_TAG_arg_variable ]
!5072 = metadata !{i32 590080, metadata !5073, metadata !"dfile", metadata !3316, i32 2091, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5073 = metadata !{i32 589835, metadata !3562, i32 2090, i32 0, metadata !3316, i32 80} ; [ DW_TAG_lexical_block ]
!5074 = metadata !{i32 590080, metadata !5073, metadata !"r", metadata !3316, i32 2101, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5075 = metadata !{i32 590081, metadata !3567, metadata !"pathname", metadata !3316, i32 1820, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5076 = metadata !{i32 590080, metadata !5077, metadata !"dfile", metadata !3316, i32 1821, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5077 = metadata !{i32 589835, metadata !3567, i32 1820, i32 0, metadata !3316, i32 81} ; [ DW_TAG_lexical_block ]
!5078 = metadata !{i32 590080, metadata !5079, metadata !"r", metadata !3316, i32 1835, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5079 = metadata !{i32 589835, metadata !5077, i32 1835, i32 0, metadata !3316, i32 82} ; [ DW_TAG_lexical_block ]
!5080 = metadata !{i32 590081, metadata !3568, metadata !"pathname", metadata !3316, i32 1801, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5081 = metadata !{i32 590080, metadata !5082, metadata !"dfile", metadata !3316, i32 1802, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5082 = metadata !{i32 589835, metadata !3568, i32 1801, i32 0, metadata !3316, i32 83} ; [ DW_TAG_lexical_block ]
!5083 = metadata !{i32 590080, metadata !5084, metadata !"r", metadata !3316, i32 1813, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5084 = metadata !{i32 589835, metadata !5082, i32 1813, i32 0, metadata !3316, i32 84} ; [ DW_TAG_lexical_block ]
!5085 = metadata !{i32 590081, metadata !3569, metadata !"path", metadata !3316, i32 1678, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5086 = metadata !{i32 590081, metadata !3569, metadata !"buf", metadata !3316, i32 1678, metadata !3432, i32 0} ; [ DW_TAG_arg_variable ]
!5087 = metadata !{i32 590080, metadata !5088, metadata !"dfile", metadata !3316, i32 1679, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5088 = metadata !{i32 589835, metadata !3569, i32 1678, i32 0, metadata !3316, i32 85} ; [ DW_TAG_lexical_block ]
!5089 = metadata !{i32 590080, metadata !5090, metadata !"r", metadata !3316, i32 1688, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5090 = metadata !{i32 589835, metadata !5088, i32 1688, i32 0, metadata !3316, i32 86} ; [ DW_TAG_lexical_block ]
!5091 = metadata !{i32 590081, metadata !3572, metadata !"fd", metadata !3316, i32 1228, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5092 = metadata !{i32 590081, metadata !3572, metadata !"path", metadata !3316, i32 1228, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5093 = metadata !{i32 590081, metadata !3572, metadata !"flags", metadata !3316, i32 1228, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5094 = metadata !{i32 590080, metadata !5095, metadata !"f", metadata !3316, i32 1231, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5095 = metadata !{i32 589835, metadata !3572, i32 1228, i32 0, metadata !3316, i32 87} ; [ DW_TAG_lexical_block ]
!5096 = metadata !{i32 590080, metadata !5095, metadata !"fd_idx", metadata !3316, i32 1232, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5097 = metadata !{i32 590080, metadata !5095, metadata !"ap", metadata !3316, i32 1257, metadata !4760, i32 0} ; [ DW_TAG_auto_variable ]
!5098 = metadata !{i32 590080, metadata !5095, metadata !"mode", metadata !3316, i32 1258, metadata !3409, i32 0} ; [ DW_TAG_auto_variable ]
!5099 = metadata !{i32 590080, metadata !5100, metadata !"os_fd", metadata !3316, i32 1305, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5100 = metadata !{i32 589835, metadata !5095, i32 1305, i32 0, metadata !3316, i32 88} ; [ DW_TAG_lexical_block ]
!5101 = metadata !{i32 590081, metadata !3575, metadata !"oldpath", metadata !3316, i32 1209, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5102 = metadata !{i32 590081, metadata !3575, metadata !"newpath", metadata !3316, i32 1209, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5103 = metadata !{i32 590080, metadata !5104, metadata !"dfile", metadata !3316, i32 1210, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5104 = metadata !{i32 589835, metadata !3575, i32 1209, i32 0, metadata !3316, i32 89} ; [ DW_TAG_lexical_block ]
!5105 = metadata !{i32 590080, metadata !5104, metadata !"r", metadata !3316, i32 1222, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5106 = metadata !{i32 590081, metadata !3578, metadata !"oldpath", metadata !3316, i32 1190, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5107 = metadata !{i32 590081, metadata !3578, metadata !"newpath", metadata !3316, i32 1190, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5108 = metadata !{i32 590080, metadata !5109, metadata !"dfile", metadata !3316, i32 1191, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5109 = metadata !{i32 589835, metadata !3578, i32 1190, i32 0, metadata !3316, i32 90} ; [ DW_TAG_lexical_block ]
!5110 = metadata !{i32 590080, metadata !5109, metadata !"r", metadata !3316, i32 1203, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5111 = metadata !{i32 590081, metadata !3579, metadata !"fd", metadata !3316, i32 1139, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5112 = metadata !{i32 590081, metadata !3579, metadata !"path", metadata !3316, i32 1139, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5113 = metadata !{i32 590081, metadata !3579, metadata !"times", metadata !3316, i32 1139, metadata !3565, i32 0} ; [ DW_TAG_arg_variable ]
!5114 = metadata !{i32 590080, metadata !5115, metadata !"dfile", metadata !3316, i32 1140, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5115 = metadata !{i32 589835, metadata !3579, i32 1139, i32 0, metadata !3316, i32 91} ; [ DW_TAG_lexical_block ]
!5116 = metadata !{i32 590080, metadata !5115, metadata !"f", metadata !3316, i32 1146, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5117 = metadata !{i32 590080, metadata !5115, metadata !"r", metadata !3316, i32 1156, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5118 = metadata !{i32 590081, metadata !3582, metadata !"fd", metadata !3316, i32 1106, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5119 = metadata !{i32 590081, metadata !3582, metadata !"path", metadata !3316, i32 1106, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5120 = metadata !{i32 590081, metadata !3582, metadata !"flags", metadata !3316, i32 1106, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5121 = metadata !{i32 590080, metadata !5122, metadata !"dfile", metadata !3316, i32 1107, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5122 = metadata !{i32 589835, metadata !3582, i32 1106, i32 0, metadata !3316, i32 92} ; [ DW_TAG_lexical_block ]
!5123 = metadata !{i32 590080, metadata !5122, metadata !"f", metadata !3316, i32 1113, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5124 = metadata !{i32 590080, metadata !5122, metadata !"r", metadata !3316, i32 1126, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5125 = metadata !{i32 590081, metadata !3583, metadata !"fd", metadata !3316, i32 1065, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5126 = metadata !{i32 590081, metadata !3583, metadata !"path", metadata !3316, i32 1065, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5127 = metadata !{i32 590081, metadata !3583, metadata !"buf", metadata !3316, i32 1065, metadata !3586, i32 0} ; [ DW_TAG_arg_variable ]
!5128 = metadata !{i32 590081, metadata !3583, metadata !"flags", metadata !3316, i32 1065, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5129 = metadata !{i32 590080, metadata !5130, metadata !"dfile", metadata !3316, i32 1066, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5130 = metadata !{i32 589835, metadata !3583, i32 1065, i32 0, metadata !3316, i32 93} ; [ DW_TAG_lexical_block ]
!5131 = metadata !{i32 590080, metadata !5130, metadata !"f", metadata !3316, i32 1072, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5132 = metadata !{i32 590080, metadata !5130, metadata !"r", metadata !3316, i32 1088, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5133 = metadata !{i32 590081, metadata !3606, metadata !"path", metadata !3316, i32 1014, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5134 = metadata !{i32 590081, metadata !3606, metadata !"owner", metadata !3316, i32 1014, metadata !3468, i32 0} ; [ DW_TAG_arg_variable ]
!5135 = metadata !{i32 590081, metadata !3606, metadata !"group", metadata !3316, i32 1014, metadata !3469, i32 0} ; [ DW_TAG_arg_variable ]
!5136 = metadata !{i32 590080, metadata !5137, metadata !"df", metadata !3316, i32 1016, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5137 = metadata !{i32 589835, metadata !3606, i32 1014, i32 0, metadata !3316, i32 94} ; [ DW_TAG_lexical_block ]
!5138 = metadata !{i32 590080, metadata !5139, metadata !"r", metadata !3316, i32 1021, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5139 = metadata !{i32 589835, metadata !5137, i32 1021, i32 0, metadata !3316, i32 95} ; [ DW_TAG_lexical_block ]
!5140 = metadata !{i32 590081, metadata !3609, metadata !"path", metadata !3316, i32 983, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5141 = metadata !{i32 590081, metadata !3609, metadata !"owner", metadata !3316, i32 983, metadata !3468, i32 0} ; [ DW_TAG_arg_variable ]
!5142 = metadata !{i32 590081, metadata !3609, metadata !"group", metadata !3316, i32 983, metadata !3469, i32 0} ; [ DW_TAG_arg_variable ]
!5143 = metadata !{i32 590080, metadata !5144, metadata !"df", metadata !3316, i32 984, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5144 = metadata !{i32 589835, metadata !3609, i32 983, i32 0, metadata !3316, i32 96} ; [ DW_TAG_lexical_block ]
!5145 = metadata !{i32 590080, metadata !5146, metadata !"r", metadata !3316, i32 989, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5146 = metadata !{i32 589835, metadata !5144, i32 989, i32 0, metadata !3316, i32 97} ; [ DW_TAG_lexical_block ]
!5147 = metadata !{i32 590081, metadata !3610, metadata !"path", metadata !3316, i32 793, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5148 = metadata !{i32 590080, metadata !5149, metadata !"dfile", metadata !3316, i32 794, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5149 = metadata !{i32 589835, metadata !3610, i32 793, i32 0, metadata !3316, i32 98} ; [ DW_TAG_lexical_block ]
!5150 = metadata !{i32 590080, metadata !5151, metadata !"r", metadata !3316, i32 804, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5151 = metadata !{i32 589835, metadata !5149, i32 804, i32 0, metadata !3316, i32 99} ; [ DW_TAG_lexical_block ]
!5152 = metadata !{i32 590081, metadata !3611, metadata !"pathname", metadata !3316, i32 184, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5153 = metadata !{i32 590081, metadata !3611, metadata !"mode", metadata !3316, i32 184, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5154 = metadata !{i32 590080, metadata !5155, metadata !"dfile", metadata !3316, i32 185, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5155 = metadata !{i32 589835, metadata !3611, i32 184, i32 0, metadata !3316, i32 100} ; [ DW_TAG_lexical_block ]
!5156 = metadata !{i32 590080, metadata !5157, metadata !"r", metadata !3316, i32 195, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5157 = metadata !{i32 589835, metadata !5155, i32 195, i32 0, metadata !3316, i32 101} ; [ DW_TAG_lexical_block ]
!5158 = metadata !{i32 590081, metadata !3614, metadata !"pathname", metadata !3316, i32 166, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5159 = metadata !{i32 590081, metadata !3614, metadata !"mode", metadata !3316, i32 166, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5160 = metadata !{i32 590080, metadata !5161, metadata !"dfile", metadata !3316, i32 167, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5161 = metadata !{i32 589835, metadata !3614, i32 166, i32 0, metadata !3316, i32 102} ; [ DW_TAG_lexical_block ]
!5162 = metadata !{i32 590080, metadata !5163, metadata !"r", metadata !3316, i32 177, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5163 = metadata !{i32 589835, metadata !5161, i32 177, i32 0, metadata !3316, i32 103} ; [ DW_TAG_lexical_block ]
!5164 = metadata !{i32 590081, metadata !3615, metadata !"s", metadata !3316, i32 2026, metadata !3419, i32 0} ; [ DW_TAG_arg_variable ]
!5165 = metadata !{i32 590080, metadata !5166, metadata !"sc", metadata !3316, i32 2027, metadata !3419, i32 0} ; [ DW_TAG_auto_variable ]
!5166 = metadata !{i32 589835, metadata !3615, i32 2026, i32 0, metadata !3316, i32 104} ; [ DW_TAG_lexical_block ]
!5167 = metadata !{i32 590081, metadata !3618, metadata !"buf", metadata !3316, i32 1984, metadata !3340, i32 0} ; [ DW_TAG_arg_variable ]
!5168 = metadata !{i32 590081, metadata !3618, metadata !"size", metadata !3316, i32 1984, metadata !3419, i32 0} ; [ DW_TAG_arg_variable ]
!5169 = metadata !{i32 590080, metadata !5170, metadata !"r", metadata !3316, i32 1986, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5170 = metadata !{i32 589835, metadata !3618, i32 1984, i32 0, metadata !3316, i32 105} ; [ DW_TAG_lexical_block ]
!5171 = metadata !{i32 590081, metadata !3621, metadata !"fd", metadata !3316, i32 1333, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5172 = metadata !{i32 590081, metadata !3621, metadata !"length", metadata !3316, i32 1333, metadata !3330, i32 0} ; [ DW_TAG_arg_variable ]
!5173 = metadata !{i32 590080, metadata !5174, metadata !"f", metadata !3316, i32 1335, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5174 = metadata !{i32 589835, metadata !3621, i32 1333, i32 0, metadata !3316, i32 106} ; [ DW_TAG_lexical_block ]
!5175 = metadata !{i32 590080, metadata !5176, metadata !"r", metadata !3316, i32 1357, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5176 = metadata !{i32 589835, metadata !5174, i32 1355, i32 0, metadata !3316, i32 107} ; [ DW_TAG_lexical_block ]
!5177 = metadata !{i32 590081, metadata !3624, metadata !"fd", metadata !3316, i32 685, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5178 = metadata !{i32 590081, metadata !3624, metadata !"offset", metadata !3316, i32 685, metadata !3330, i32 0} ; [ DW_TAG_arg_variable ]
!5179 = metadata !{i32 590081, metadata !3624, metadata !"whence", metadata !3316, i32 685, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5180 = metadata !{i32 590080, metadata !5181, metadata !"new_off", metadata !3316, i32 686, metadata !3330, i32 0} ; [ DW_TAG_auto_variable ]
!5181 = metadata !{i32 589835, metadata !3624, i32 685, i32 0, metadata !3316, i32 108} ; [ DW_TAG_lexical_block ]
!5182 = metadata !{i32 590080, metadata !5181, metadata !"f", metadata !3316, i32 687, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5183 = metadata !{i32 590081, metadata !3627, metadata !"fd", metadata !3316, i32 540, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5184 = metadata !{i32 590081, metadata !3627, metadata !"buf", metadata !3316, i32 540, metadata !3529, i32 0} ; [ DW_TAG_arg_variable ]
!5185 = metadata !{i32 590081, metadata !3627, metadata !"count", metadata !3316, i32 540, metadata !3419, i32 0} ; [ DW_TAG_arg_variable ]
!5186 = metadata !{i32 590081, metadata !3627, metadata !"offset", metadata !3316, i32 540, metadata !3418, i32 0} ; [ DW_TAG_arg_variable ]
!5187 = metadata !{i32 590080, metadata !5188, metadata !"f", metadata !3316, i32 542, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5188 = metadata !{i32 589835, metadata !3627, i32 540, i32 0, metadata !3316, i32 109} ; [ DW_TAG_lexical_block ]
!5189 = metadata !{i32 590080, metadata !5190, metadata !"r", metadata !3316, i32 573, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5190 = metadata !{i32 589835, metadata !5188, i32 574, i32 0, metadata !3316, i32 110} ; [ DW_TAG_lexical_block ]
!5191 = metadata !{i32 590081, metadata !3630, metadata !"fd", metadata !3316, i32 455, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5192 = metadata !{i32 590081, metadata !3630, metadata !"buf", metadata !3316, i32 455, metadata !3529, i32 0} ; [ DW_TAG_arg_variable ]
!5193 = metadata !{i32 590081, metadata !3630, metadata !"count", metadata !3316, i32 455, metadata !3419, i32 0} ; [ DW_TAG_arg_variable ]
!5194 = metadata !{i32 590080, metadata !5195, metadata !"f", metadata !3316, i32 457, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5195 = metadata !{i32 589835, metadata !3630, i32 455, i32 0, metadata !3316, i32 111} ; [ DW_TAG_lexical_block ]
!5196 = metadata !{i32 590080, metadata !5197, metadata !"r", metadata !3316, i32 484, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5197 = metadata !{i32 589835, metadata !5195, i32 485, i32 0, metadata !3316, i32 112} ; [ DW_TAG_lexical_block ]
!5198 = metadata !{i32 590080, metadata !5197, metadata !"incoming", metadata !3316, i32 491, metadata !3529, i32 0} ; [ DW_TAG_auto_variable ]
!5199 = metadata !{i32 590081, metadata !3633, metadata !"fd", metadata !3316, i32 831, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5200 = metadata !{i32 590081, metadata !3633, metadata !"length", metadata !3316, i32 831, metadata !3419, i32 0} ; [ DW_TAG_arg_variable ]
!5201 = metadata !{i32 590081, metadata !3633, metadata !"off", metadata !3316, i32 831, metadata !3418, i32 0} ; [ DW_TAG_arg_variable ]
!5202 = metadata !{i32 590080, metadata !5203, metadata !"buffer", metadata !3316, i32 832, metadata !3529, i32 0} ; [ DW_TAG_auto_variable ]
!5203 = metadata !{i32 589835, metadata !3633, i32 831, i32 0, metadata !3316, i32 113} ; [ DW_TAG_lexical_block ]
!5204 = metadata !{i32 590080, metadata !5203, metadata !"count", metadata !3316, i32 835, metadata !3419, i32 0} ; [ DW_TAG_auto_variable ]
!5205 = metadata !{i32 590080, metadata !5203, metadata !"r", metadata !3316, i32 836, metadata !3416, i32 0} ; [ DW_TAG_auto_variable ]
!5206 = metadata !{i32 590081, metadata !3636, metadata !"addr", metadata !3316, i32 880, metadata !3529, i32 0} ; [ DW_TAG_arg_variable ]
!5207 = metadata !{i32 590081, metadata !3636, metadata !"length", metadata !3316, i32 880, metadata !3419, i32 0} ; [ DW_TAG_arg_variable ]
!5208 = metadata !{i32 590081, metadata !3636, metadata !"prot", metadata !3316, i32 880, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5209 = metadata !{i32 590081, metadata !3636, metadata !"flags", metadata !3316, i32 881, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5210 = metadata !{i32 590081, metadata !3636, metadata !"fd", metadata !3316, i32 881, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5211 = metadata !{i32 590081, metadata !3636, metadata !"off", metadata !3316, i32 881, metadata !3418, i32 0} ; [ DW_TAG_arg_variable ]
!5212 = metadata !{i32 590080, metadata !5213, metadata !"f", metadata !3316, i32 889, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5213 = metadata !{i32 589835, metadata !3636, i32 881, i32 0, metadata !3316, i32 114} ; [ DW_TAG_lexical_block ]
!5214 = metadata !{i32 590081, metadata !3639, metadata !"addr", metadata !3316, i32 852, metadata !3529, i32 0} ; [ DW_TAG_arg_variable ]
!5215 = metadata !{i32 590081, metadata !3639, metadata !"length", metadata !3316, i32 852, metadata !3419, i32 0} ; [ DW_TAG_arg_variable ]
!5216 = metadata !{i32 590081, metadata !3639, metadata !"prot", metadata !3316, i32 852, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5217 = metadata !{i32 590081, metadata !3639, metadata !"flags", metadata !3316, i32 853, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5218 = metadata !{i32 590081, metadata !3639, metadata !"fd", metadata !3316, i32 853, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5219 = metadata !{i32 590081, metadata !3639, metadata !"off", metadata !3316, i32 853, metadata !3330, i32 0} ; [ DW_TAG_arg_variable ]
!5220 = metadata !{i32 590080, metadata !5221, metadata !"f", metadata !3316, i32 860, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5221 = metadata !{i32 589835, metadata !3639, i32 853, i32 0, metadata !3316, i32 115} ; [ DW_TAG_lexical_block ]
!5222 = metadata !{i32 590081, metadata !3642, metadata !"s", metadata !3316, i32 2056, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5223 = metadata !{i32 590081, metadata !3642, metadata !"size", metadata !3316, i32 2056, metadata !3328, i32 0} ; [ DW_TAG_arg_variable ]
!5224 = metadata !{i32 590080, metadata !5225, metadata !"sc", metadata !3316, i32 2057, metadata !3340, i32 0} ; [ DW_TAG_auto_variable ]
!5225 = metadata !{i32 589835, metadata !3642, i32 2056, i32 0, metadata !3316, i32 116} ; [ DW_TAG_lexical_block ]
!5226 = metadata !{i32 590080, metadata !5225, metadata !"i", metadata !3316, i32 2058, metadata !3328, i32 0} ; [ DW_TAG_auto_variable ]
!5227 = metadata !{i32 590080, metadata !5228, metadata !"c", metadata !3316, i32 2061, metadata !3341, i32 0} ; [ DW_TAG_auto_variable ]
!5228 = metadata !{i32 589835, metadata !5225, i32 2061, i32 0, metadata !3316, i32 117} ; [ DW_TAG_lexical_block ]
!5229 = metadata !{i32 590080, metadata !5228, metadata !"cc", metadata !3316, i32 2062, metadata !3341, i32 0} ; [ DW_TAG_auto_variable ]
!5230 = metadata !{i32 590081, metadata !3645, metadata !"df", metadata !3316, i32 915, metadata !3334, i32 0} ; [ DW_TAG_arg_variable ]
!5231 = metadata !{i32 590081, metadata !3645, metadata !"mode", metadata !3316, i32 915, metadata !3409, i32 0} ; [ DW_TAG_arg_variable ]
!5232 = metadata !{i32 590081, metadata !3648, metadata !"fd", metadata !3316, i32 950, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5233 = metadata !{i32 590081, metadata !3648, metadata !"mode", metadata !3316, i32 950, metadata !3409, i32 0} ; [ DW_TAG_arg_variable ]
!5234 = metadata !{i32 590080, metadata !5235, metadata !"f", metadata !3316, i32 953, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5235 = metadata !{i32 589835, metadata !3648, i32 950, i32 0, metadata !3316, i32 119} ; [ DW_TAG_lexical_block ]
!5236 = metadata !{i32 590080, metadata !5237, metadata !"r", metadata !3316, i32 970, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5237 = metadata !{i32 589835, metadata !5235, i32 970, i32 0, metadata !3316, i32 120} ; [ DW_TAG_lexical_block ]
!5238 = metadata !{i32 590081, metadata !3651, metadata !"path", metadata !3316, i32 928, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5239 = metadata !{i32 590081, metadata !3651, metadata !"mode", metadata !3316, i32 928, metadata !3409, i32 0} ; [ DW_TAG_arg_variable ]
!5240 = metadata !{i32 590080, metadata !5241, metadata !"dfile", metadata !3316, i32 931, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5241 = metadata !{i32 589835, metadata !3651, i32 928, i32 0, metadata !3316, i32 121} ; [ DW_TAG_lexical_block ]
!5242 = metadata !{i32 590080, metadata !5243, metadata !"r", metadata !3316, i32 943, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5243 = metadata !{i32 589835, metadata !5241, i32 943, i32 0, metadata !3316, i32 122} ; [ DW_TAG_lexical_block ]
!5244 = metadata !{i32 590081, metadata !3654, metadata !"path", metadata !3316, i32 771, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5245 = metadata !{i32 590081, metadata !3654, metadata !"buf", metadata !3316, i32 771, metadata !3344, i32 0} ; [ DW_TAG_arg_variable ]
!5246 = metadata !{i32 590080, metadata !5247, metadata !"dfile", metadata !3316, i32 772, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5247 = metadata !{i32 589835, metadata !3654, i32 771, i32 0, metadata !3316, i32 123} ; [ DW_TAG_lexical_block ]
!5248 = metadata !{i32 590080, metadata !5247, metadata !"pathcpy", metadata !3316, i32 778, metadata !3340, i32 0} ; [ DW_TAG_auto_variable ]
!5249 = metadata !{i32 590080, metadata !5250, metadata !"r", metadata !3316, i32 782, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5250 = metadata !{i32 589835, metadata !5247, i32 782, i32 0, metadata !3316, i32 124} ; [ DW_TAG_lexical_block ]
!5251 = metadata !{i32 590081, metadata !3657, metadata !"path", metadata !3316, i32 742, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5252 = metadata !{i32 590081, metadata !3657, metadata !"buf", metadata !3316, i32 742, metadata !3344, i32 0} ; [ DW_TAG_arg_variable ]
!5253 = metadata !{i32 590080, metadata !5254, metadata !"dfile", metadata !3316, i32 743, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5254 = metadata !{i32 589835, metadata !3657, i32 742, i32 0, metadata !3316, i32 125} ; [ DW_TAG_lexical_block ]
!5255 = metadata !{i32 590080, metadata !5254, metadata !"pathcpy", metadata !3316, i32 751, metadata !3340, i32 0} ; [ DW_TAG_auto_variable ]
!5256 = metadata !{i32 590080, metadata !5257, metadata !"r", metadata !3316, i32 755, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5257 = metadata !{i32 589835, metadata !5254, i32 755, i32 0, metadata !3316, i32 126} ; [ DW_TAG_lexical_block ]
!5258 = metadata !{i32 590081, metadata !3658, metadata !"fd", metadata !3316, i32 605, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5259 = metadata !{i32 590081, metadata !3658, metadata !"buf", metadata !3316, i32 605, metadata !3529, i32 0} ; [ DW_TAG_arg_variable ]
!5260 = metadata !{i32 590081, metadata !3658, metadata !"count", metadata !3316, i32 605, metadata !3419, i32 0} ; [ DW_TAG_arg_variable ]
!5261 = metadata !{i32 590080, metadata !5262, metadata !"f", metadata !3316, i32 607, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5262 = metadata !{i32 589835, metadata !3658, i32 605, i32 0, metadata !3316, i32 127} ; [ DW_TAG_lexical_block ]
!5263 = metadata !{i32 590080, metadata !5264, metadata !"r", metadata !3316, i32 624, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5264 = metadata !{i32 589835, metadata !5262, i32 625, i32 0, metadata !3316, i32 128} ; [ DW_TAG_lexical_block ]
!5265 = metadata !{i32 590080, metadata !5264, metadata !"cbuf", metadata !3316, i32 625, metadata !3340, i32 0} ; [ DW_TAG_auto_variable ]
!5266 = metadata !{i32 590080, metadata !5267, metadata !"actual_count", metadata !3316, i32 658, metadata !3419, i32 0} ; [ DW_TAG_auto_variable ]
!5267 = metadata !{i32 589835, metadata !5262, i32 658, i32 0, metadata !3316, i32 129} ; [ DW_TAG_lexical_block ]
!5268 = metadata !{i32 590081, metadata !3659, metadata !"__nptr", metadata !3660, i32 278, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5269 = metadata !{i32 590081, metadata !3661, metadata !"pathname", metadata !3316, i32 242, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5270 = metadata !{i32 590081, metadata !3661, metadata !"flags", metadata !3316, i32 242, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5271 = metadata !{i32 590081, metadata !3661, metadata !"mode", metadata !3316, i32 242, metadata !3409, i32 0} ; [ DW_TAG_arg_variable ]
!5272 = metadata !{i32 590080, metadata !5273, metadata !"df", metadata !3316, i32 243, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!5273 = metadata !{i32 589835, metadata !3661, i32 242, i32 0, metadata !3316, i32 131} ; [ DW_TAG_lexical_block ]
!5274 = metadata !{i32 590080, metadata !5273, metadata !"f", metadata !3316, i32 244, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5275 = metadata !{i32 590080, metadata !5273, metadata !"fd", metadata !3316, i32 245, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5276 = metadata !{i32 590080, metadata !5277, metadata !"os_fd", metadata !3316, i32 305, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5277 = metadata !{i32 589835, metadata !5273, i32 306, i32 0, metadata !3316, i32 132} ; [ DW_TAG_lexical_block ]
!5278 = metadata !{i32 590080, metadata !5279, metadata !"buffer", metadata !3316, i32 311, metadata !5280, i32 0} ; [ DW_TAG_auto_variable ]
!5279 = metadata !{i32 589835, metadata !5277, i32 312, i32 0, metadata !3316, i32 133} ; [ DW_TAG_lexical_block ]
!5280 = metadata !{i32 589825, metadata !3316, metadata !"", metadata !3316, i32 0, i64 8192, i64 8, i64 0, i32 0, metadata !3341, metadata !4638, i32 0, null} ; [ DW_TAG_array_type ]
!5281 = metadata !{i32 590080, metadata !5279, metadata !"runtime_fd", metadata !3316, i32 312, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5282 = metadata !{i32 590080, metadata !5279, metadata !"f", metadata !3316, i32 313, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5283 = metadata !{i32 590080, metadata !5284, metadata !"pathtail", metadata !3316, i32 315, metadata !3340, i32 0} ; [ DW_TAG_auto_variable ]
!5284 = metadata !{i32 589835, metadata !5279, i32 315, i32 0, metadata !3316, i32 134} ; [ DW_TAG_lexical_block ]
!5285 = metadata !{i32 590081, metadata !3664, metadata !"basefd", metadata !3316, i32 358, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5286 = metadata !{i32 590081, metadata !3664, metadata !"pathname", metadata !3316, i32 358, metadata !3427, i32 0} ; [ DW_TAG_arg_variable ]
!5287 = metadata !{i32 590081, metadata !3664, metadata !"flags", metadata !3316, i32 358, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!5288 = metadata !{i32 590081, metadata !3664, metadata !"mode", metadata !3316, i32 358, metadata !3409, i32 0} ; [ DW_TAG_arg_variable ]
!5289 = metadata !{i32 590080, metadata !5290, metadata !"f", metadata !3316, i32 359, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5290 = metadata !{i32 589835, metadata !3664, i32 358, i32 0, metadata !3316, i32 135} ; [ DW_TAG_lexical_block ]
!5291 = metadata !{i32 590080, metadata !5290, metadata !"fd", metadata !3316, i32 360, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5292 = metadata !{i32 590080, metadata !5290, metadata !"os_fd", metadata !3316, i32 393, metadata !3326, i32 0} ; [ DW_TAG_auto_variable ]
!5293 = metadata !{i32 590080, metadata !5294, metadata !"bf", metadata !3316, i32 362, metadata !3320, i32 0} ; [ DW_TAG_auto_variable ]
!5294 = metadata !{i32 589835, metadata !5290, i32 362, i32 0, metadata !3316, i32 136} ; [ DW_TAG_lexical_block ]
!5295 = metadata !{i32 590081, metadata !3667, metadata !"__dev", metadata !3668, i32 248, metadata !3673, i32 0} ; [ DW_TAG_arg_variable ]
!5296 = metadata !{i32 590081, metadata !3674, metadata !"__dev", metadata !3668, i32 253, metadata !3673, i32 0} ; [ DW_TAG_arg_variable ]
!5297 = metadata !{i32 590081, metadata !3675, metadata !"__major", metadata !3668, i32 258, metadata !3672, i32 0} ; [ DW_TAG_arg_variable ]
!5298 = metadata !{i32 590081, metadata !3675, metadata !"__minor", metadata !3668, i32 258, metadata !3672, i32 0} ; [ DW_TAG_arg_variable ]
!5299 = metadata !{i32 590081, metadata !3753, metadata !"sockfd", metadata !3679, i32 859, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5300 = metadata !{i32 590081, metadata !3753, metadata !"level", metadata !3679, i32 859, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5301 = metadata !{i32 590081, metadata !3753, metadata !"optname", metadata !3679, i32 859, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5302 = metadata !{i32 590081, metadata !3753, metadata !"optval", metadata !3679, i32 860, metadata !3756, i32 0} ; [ DW_TAG_arg_variable ]
!5303 = metadata !{i32 590081, metadata !3753, metadata !"optlen", metadata !3679, i32 860, metadata !3757, i32 0} ; [ DW_TAG_arg_variable ]
!5304 = metadata !{i32 590081, metadata !3758, metadata !"sockfd", metadata !3679, i32 865, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5305 = metadata !{i32 590081, metadata !3758, metadata !"level", metadata !3679, i32 865, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5306 = metadata !{i32 590081, metadata !3758, metadata !"optname", metadata !3679, i32 865, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5307 = metadata !{i32 590081, metadata !3758, metadata !"optval", metadata !3679, i32 866, metadata !3756, i32 0} ; [ DW_TAG_arg_variable ]
!5308 = metadata !{i32 590081, metadata !3758, metadata !"optlen", metadata !3679, i32 866, metadata !3750, i32 0} ; [ DW_TAG_arg_variable ]
!5309 = metadata !{i32 590081, metadata !3761, metadata !"f", metadata !3679, i32 837, metadata !3766, i32 0} ; [ DW_TAG_arg_variable ]
!5310 = metadata !{i32 590081, metadata !3778, metadata !"path_p", metadata !3668, i32 592, metadata !3785, i32 0} ; [ DW_TAG_arg_variable ]
!5311 = metadata !{i32 590081, metadata !3787, metadata !"b", metadata !3668, i32 585, metadata !3785, i32 0} ; [ DW_TAG_arg_variable ]
!5312 = metadata !{i32 590081, metadata !3790, metadata !"a", metadata !3668, i32 579, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5313 = metadata !{i32 590081, metadata !3790, metadata !"b", metadata !3668, i32 579, metadata !3689, i32 0} ; [ DW_TAG_arg_variable ]
!5314 = metadata !{i32 590081, metadata !3793, metadata !"clk_id", metadata !3668, i32 171, metadata !3796, i32 0} ; [ DW_TAG_arg_variable ]
!5315 = metadata !{i32 590081, metadata !3793, metadata !"res", metadata !3668, i32 171, metadata !3797, i32 0} ; [ DW_TAG_arg_variable ]
!5316 = metadata !{i32 590081, metadata !3799, metadata !"fd", metadata !3679, i32 798, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5317 = metadata !{i32 590081, metadata !3799, metadata !"msg", metadata !3679, i32 798, metadata !3802, i32 0} ; [ DW_TAG_arg_variable ]
!5318 = metadata !{i32 590081, metadata !3799, metadata !"flags", metadata !3679, i32 798, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5319 = metadata !{i32 590080, metadata !5320, metadata !"f", metadata !3679, i32 800, metadata !5321, i32 0} ; [ DW_TAG_auto_variable ]
!5320 = metadata !{i32 589835, metadata !3799, i32 799, i32 0, metadata !3679, i32 12} ; [ DW_TAG_lexical_block ]
!5321 = metadata !{i32 589839, metadata !3668, metadata !"", metadata !3668, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !5322} ; [ DW_TAG_pointer_type ]
!5322 = metadata !{i32 589846, metadata !3684, metadata !"exe_file_t", metadata !3684, i32 59, i64 0, i64 0, i64 0, i32 0, metadata !3767} ; [ DW_TAG_typedef ]
!5323 = metadata !{i32 590081, metadata !3820, metadata !"fd", metadata !3679, i32 793, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5324 = metadata !{i32 590081, metadata !3820, metadata !"msg", metadata !3679, i32 793, metadata !3802, i32 0} ; [ DW_TAG_arg_variable ]
!5325 = metadata !{i32 590081, metadata !3820, metadata !"flags", metadata !3679, i32 793, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5326 = metadata !{i32 590081, metadata !3821, metadata !"fd", metadata !3679, i32 705, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5327 = metadata !{i32 590081, metadata !3821, metadata !"buf", metadata !3679, i32 705, metadata !3756, i32 0} ; [ DW_TAG_arg_variable ]
!5328 = metadata !{i32 590081, metadata !3821, metadata !"len", metadata !3679, i32 705, metadata !3814, i32 0} ; [ DW_TAG_arg_variable ]
!5329 = metadata !{i32 590081, metadata !3821, metadata !"flags", metadata !3679, i32 705, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5330 = metadata !{i32 590081, metadata !3821, metadata !"from", metadata !3679, i32 705, metadata !3824, i32 0} ; [ DW_TAG_arg_variable ]
!5331 = metadata !{i32 590081, metadata !3821, metadata !"fromlen", metadata !3679, i32 705, metadata !3757, i32 0} ; [ DW_TAG_arg_variable ]
!5332 = metadata !{i32 590080, metadata !5333, metadata !"iov", metadata !3679, i32 707, metadata !3809, i32 0} ; [ DW_TAG_auto_variable ]
!5333 = metadata !{i32 589835, metadata !3821, i32 706, i32 0, metadata !3679, i32 14} ; [ DW_TAG_lexical_block ]
!5334 = metadata !{i32 590080, metadata !5333, metadata !"msg", metadata !3679, i32 708, metadata !3803, i32 0} ; [ DW_TAG_auto_variable ]
!5335 = metadata !{i32 590080, metadata !5333, metadata !"s", metadata !3679, i32 709, metadata !3764, i32 0} ; [ DW_TAG_auto_variable ]
!5336 = metadata !{i32 590081, metadata !3832, metadata !"fd", metadata !3679, i32 700, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5337 = metadata !{i32 590081, metadata !3832, metadata !"buf", metadata !3679, i32 700, metadata !3756, i32 0} ; [ DW_TAG_arg_variable ]
!5338 = metadata !{i32 590081, metadata !3832, metadata !"len", metadata !3679, i32 700, metadata !3814, i32 0} ; [ DW_TAG_arg_variable ]
!5339 = metadata !{i32 590081, metadata !3832, metadata !"flags", metadata !3679, i32 700, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5340 = metadata !{i32 590081, metadata !3832, metadata !"from", metadata !3679, i32 700, metadata !3824, i32 0} ; [ DW_TAG_arg_variable ]
!5341 = metadata !{i32 590081, metadata !3832, metadata !"fromlen", metadata !3679, i32 700, metadata !3757, i32 0} ; [ DW_TAG_arg_variable ]
!5342 = metadata !{i32 590081, metadata !3833, metadata !"fd", metadata !3679, i32 671, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5343 = metadata !{i32 590081, metadata !3833, metadata !"buf", metadata !3679, i32 671, metadata !3756, i32 0} ; [ DW_TAG_arg_variable ]
!5344 = metadata !{i32 590081, metadata !3833, metadata !"len", metadata !3679, i32 671, metadata !3814, i32 0} ; [ DW_TAG_arg_variable ]
!5345 = metadata !{i32 590081, metadata !3833, metadata !"flags", metadata !3679, i32 671, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5346 = metadata !{i32 590081, metadata !3836, metadata !"fd", metadata !3679, i32 667, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5347 = metadata !{i32 590081, metadata !3836, metadata !"buf", metadata !3679, i32 667, metadata !3756, i32 0} ; [ DW_TAG_arg_variable ]
!5348 = metadata !{i32 590081, metadata !3836, metadata !"len", metadata !3679, i32 667, metadata !3814, i32 0} ; [ DW_TAG_arg_variable ]
!5349 = metadata !{i32 590081, metadata !3836, metadata !"flags", metadata !3679, i32 667, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5350 = metadata !{i32 590081, metadata !3837, metadata !"fd", metadata !3679, i32 739, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5351 = metadata !{i32 590081, metadata !3837, metadata !"msg", metadata !3679, i32 739, metadata !3840, i32 0} ; [ DW_TAG_arg_variable ]
!5352 = metadata !{i32 590081, metadata !3837, metadata !"flags", metadata !3679, i32 739, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5353 = metadata !{i32 590080, metadata !5354, metadata !"f", metadata !3679, i32 741, metadata !5321, i32 0} ; [ DW_TAG_auto_variable ]
!5354 = metadata !{i32 589835, metadata !3837, i32 740, i32 0, metadata !3679, i32 18} ; [ DW_TAG_lexical_block ]
!5355 = metadata !{i32 590081, metadata !3842, metadata !"fd", metadata !3679, i32 734, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5356 = metadata !{i32 590081, metadata !3842, metadata !"msg", metadata !3679, i32 734, metadata !3840, i32 0} ; [ DW_TAG_arg_variable ]
!5357 = metadata !{i32 590081, metadata !3842, metadata !"flags", metadata !3679, i32 734, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5358 = metadata !{i32 590081, metadata !3843, metadata !"fd", metadata !3679, i32 681, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5359 = metadata !{i32 590081, metadata !3843, metadata !"buf", metadata !3679, i32 681, metadata !3756, i32 0} ; [ DW_TAG_arg_variable ]
!5360 = metadata !{i32 590081, metadata !3843, metadata !"len", metadata !3679, i32 681, metadata !3814, i32 0} ; [ DW_TAG_arg_variable ]
!5361 = metadata !{i32 590081, metadata !3843, metadata !"flags", metadata !3679, i32 681, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5362 = metadata !{i32 590081, metadata !3843, metadata !"to", metadata !3679, i32 681, metadata !3846, i32 0} ; [ DW_TAG_arg_variable ]
!5363 = metadata !{i32 590081, metadata !3843, metadata !"tolen", metadata !3679, i32 681, metadata !3750, i32 0} ; [ DW_TAG_arg_variable ]
!5364 = metadata !{i32 590080, metadata !5365, metadata !"iov", metadata !3679, i32 683, metadata !3809, i32 0} ; [ DW_TAG_auto_variable ]
!5365 = metadata !{i32 589835, metadata !3843, i32 682, i32 0, metadata !3679, i32 20} ; [ DW_TAG_lexical_block ]
!5366 = metadata !{i32 590080, metadata !5365, metadata !"msg", metadata !3679, i32 684, metadata !3803, i32 0} ; [ DW_TAG_auto_variable ]
!5367 = metadata !{i32 590081, metadata !3848, metadata !"fd", metadata !3679, i32 676, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5368 = metadata !{i32 590081, metadata !3848, metadata !"buf", metadata !3679, i32 676, metadata !3756, i32 0} ; [ DW_TAG_arg_variable ]
!5369 = metadata !{i32 590081, metadata !3848, metadata !"len", metadata !3679, i32 676, metadata !3814, i32 0} ; [ DW_TAG_arg_variable ]
!5370 = metadata !{i32 590081, metadata !3848, metadata !"flags", metadata !3679, i32 676, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5371 = metadata !{i32 590081, metadata !3848, metadata !"to", metadata !3679, i32 676, metadata !3846, i32 0} ; [ DW_TAG_arg_variable ]
!5372 = metadata !{i32 590081, metadata !3848, metadata !"tolen", metadata !3679, i32 676, metadata !3750, i32 0} ; [ DW_TAG_arg_variable ]
!5373 = metadata !{i32 590081, metadata !3849, metadata !"fd", metadata !3679, i32 662, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5374 = metadata !{i32 590081, metadata !3849, metadata !"buf", metadata !3679, i32 662, metadata !3756, i32 0} ; [ DW_TAG_arg_variable ]
!5375 = metadata !{i32 590081, metadata !3849, metadata !"len", metadata !3679, i32 662, metadata !3814, i32 0} ; [ DW_TAG_arg_variable ]
!5376 = metadata !{i32 590081, metadata !3849, metadata !"flags", metadata !3679, i32 662, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5377 = metadata !{i32 590081, metadata !3850, metadata !"fd", metadata !3679, i32 658, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5378 = metadata !{i32 590081, metadata !3850, metadata !"buf", metadata !3679, i32 658, metadata !3756, i32 0} ; [ DW_TAG_arg_variable ]
!5379 = metadata !{i32 590081, metadata !3850, metadata !"len", metadata !3679, i32 658, metadata !3814, i32 0} ; [ DW_TAG_arg_variable ]
!5380 = metadata !{i32 590081, metadata !3850, metadata !"flags", metadata !3679, i32 658, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5381 = metadata !{i32 590081, metadata !3851, metadata !"sockfd", metadata !3679, i32 615, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5382 = metadata !{i32 590081, metadata !3851, metadata !"how", metadata !3679, i32 615, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5383 = metadata !{i32 590080, metadata !5384, metadata !"f", metadata !3679, i32 616, metadata !5321, i32 0} ; [ DW_TAG_auto_variable ]
!5384 = metadata !{i32 589835, metadata !3851, i32 615, i32 0, metadata !3679, i32 24} ; [ DW_TAG_lexical_block ]
!5385 = metadata !{i32 590080, metadata !5386, metadata !"os_r", metadata !3679, i32 645, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5386 = metadata !{i32 589835, metadata !5384, i32 647, i32 0, metadata !3679, i32 25} ; [ DW_TAG_lexical_block ]
!5387 = metadata !{i32 590081, metadata !3854, metadata !"args", metadata !3679, i32 609, metadata !3857, i32 0} ; [ DW_TAG_arg_variable ]
!5388 = metadata !{i32 590080, metadata !5389, metadata !"sockfd", metadata !3679, i32 610, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5389 = metadata !{i32 589835, metadata !3854, i32 609, i32 0, metadata !3679, i32 26} ; [ DW_TAG_lexical_block ]
!5390 = metadata !{i32 590080, metadata !5389, metadata !"how", metadata !3679, i32 611, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5391 = metadata !{i32 590081, metadata !3858, metadata !"sockfd", metadata !3679, i32 571, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5392 = metadata !{i32 590081, metadata !3858, metadata !"addr", metadata !3679, i32 571, metadata !3824, i32 0} ; [ DW_TAG_arg_variable ]
!5393 = metadata !{i32 590081, metadata !3858, metadata !"addrlen", metadata !3679, i32 571, metadata !3757, i32 0} ; [ DW_TAG_arg_variable ]
!5394 = metadata !{i32 590080, metadata !5395, metadata !"os_r", metadata !3679, i32 572, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5395 = metadata !{i32 589835, metadata !3858, i32 571, i32 0, metadata !3679, i32 27} ; [ DW_TAG_lexical_block ]
!5396 = metadata !{i32 590080, metadata !5395, metadata !"f", metadata !3679, i32 573, metadata !5321, i32 0} ; [ DW_TAG_auto_variable ]
!5397 = metadata !{i32 590081, metadata !3861, metadata !"args", metadata !3679, i32 563, metadata !3857, i32 0} ; [ DW_TAG_arg_variable ]
!5398 = metadata !{i32 590080, metadata !5399, metadata !"sockfd", metadata !3679, i32 565, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5399 = metadata !{i32 589835, metadata !3861, i32 564, i32 0, metadata !3679, i32 28} ; [ DW_TAG_lexical_block ]
!5400 = metadata !{i32 590080, metadata !5399, metadata !"addr", metadata !3679, i32 566, metadata !3824, i32 0} ; [ DW_TAG_auto_variable ]
!5401 = metadata !{i32 590080, metadata !5399, metadata !"addrlen", metadata !3679, i32 567, metadata !3757, i32 0} ; [ DW_TAG_auto_variable ]
!5402 = metadata !{i32 590081, metadata !3862, metadata !"sockfd", metadata !3679, i32 527, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5403 = metadata !{i32 590081, metadata !3862, metadata !"addr", metadata !3679, i32 527, metadata !3824, i32 0} ; [ DW_TAG_arg_variable ]
!5404 = metadata !{i32 590081, metadata !3862, metadata !"addrlen", metadata !3679, i32 527, metadata !3757, i32 0} ; [ DW_TAG_arg_variable ]
!5405 = metadata !{i32 590080, metadata !5406, metadata !"f", metadata !3679, i32 528, metadata !5321, i32 0} ; [ DW_TAG_auto_variable ]
!5406 = metadata !{i32 589835, metadata !3862, i32 527, i32 0, metadata !3679, i32 29} ; [ DW_TAG_lexical_block ]
!5407 = metadata !{i32 590080, metadata !5406, metadata !"os_r", metadata !3679, i32 529, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5408 = metadata !{i32 590081, metadata !3863, metadata !"args", metadata !3679, i32 518, metadata !3857, i32 0} ; [ DW_TAG_arg_variable ]
!5409 = metadata !{i32 590080, metadata !5410, metadata !"sockfd", metadata !3679, i32 520, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5410 = metadata !{i32 589835, metadata !3863, i32 519, i32 0, metadata !3679, i32 30} ; [ DW_TAG_lexical_block ]
!5411 = metadata !{i32 590080, metadata !5410, metadata !"addr", metadata !3679, i32 521, metadata !3824, i32 0} ; [ DW_TAG_auto_variable ]
!5412 = metadata !{i32 590080, metadata !5410, metadata !"addrlen", metadata !3679, i32 522, metadata !3757, i32 0} ; [ DW_TAG_auto_variable ]
!5413 = metadata !{i32 590081, metadata !3864, metadata !"sockfd", metadata !3679, i32 375, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5414 = metadata !{i32 590081, metadata !3864, metadata !"backlog", metadata !3679, i32 375, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5415 = metadata !{i32 590080, metadata !5416, metadata !"os_r", metadata !3679, i32 376, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5416 = metadata !{i32 589835, metadata !3864, i32 375, i32 0, metadata !3679, i32 31} ; [ DW_TAG_lexical_block ]
!5417 = metadata !{i32 590080, metadata !5416, metadata !"f", metadata !3679, i32 377, metadata !5321, i32 0} ; [ DW_TAG_auto_variable ]
!5418 = metadata !{i32 590081, metadata !3865, metadata !"args", metadata !3679, i32 368, metadata !3857, i32 0} ; [ DW_TAG_arg_variable ]
!5419 = metadata !{i32 590080, metadata !5420, metadata !"sockfd", metadata !3679, i32 369, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5420 = metadata !{i32 589835, metadata !3865, i32 368, i32 0, metadata !3679, i32 32} ; [ DW_TAG_lexical_block ]
!5421 = metadata !{i32 590080, metadata !5420, metadata !"backlog", metadata !3679, i32 370, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5422 = metadata !{i32 590081, metadata !3866, metadata !"sockfd", metadata !3679, i32 319, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5423 = metadata !{i32 590081, metadata !3866, metadata !"addr", metadata !3679, i32 319, metadata !3846, i32 0} ; [ DW_TAG_arg_variable ]
!5424 = metadata !{i32 590081, metadata !3866, metadata !"addrlen", metadata !3679, i32 319, metadata !3750, i32 0} ; [ DW_TAG_arg_variable ]
!5425 = metadata !{i32 590080, metadata !5426, metadata !"os_r", metadata !3679, i32 320, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5426 = metadata !{i32 589835, metadata !3866, i32 319, i32 0, metadata !3679, i32 33} ; [ DW_TAG_lexical_block ]
!5427 = metadata !{i32 590080, metadata !5426, metadata !"f", metadata !3679, i32 321, metadata !5321, i32 0} ; [ DW_TAG_auto_variable ]
!5428 = metadata !{i32 590081, metadata !3869, metadata !"args", metadata !3679, i32 312, metadata !3857, i32 0} ; [ DW_TAG_arg_variable ]
!5429 = metadata !{i32 590080, metadata !5430, metadata !"sockfd", metadata !3679, i32 313, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5430 = metadata !{i32 589835, metadata !3869, i32 312, i32 0, metadata !3679, i32 34} ; [ DW_TAG_lexical_block ]
!5431 = metadata !{i32 590080, metadata !5430, metadata !"addr", metadata !3679, i32 314, metadata !3846, i32 0} ; [ DW_TAG_auto_variable ]
!5432 = metadata !{i32 590080, metadata !5430, metadata !"addrlen", metadata !3679, i32 315, metadata !3750, i32 0} ; [ DW_TAG_auto_variable ]
!5433 = metadata !{i32 590081, metadata !3870, metadata !"sockfd", metadata !3679, i32 267, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5434 = metadata !{i32 590081, metadata !3870, metadata !"addr", metadata !3679, i32 267, metadata !3846, i32 0} ; [ DW_TAG_arg_variable ]
!5435 = metadata !{i32 590081, metadata !3870, metadata !"addrlen", metadata !3679, i32 267, metadata !3750, i32 0} ; [ DW_TAG_arg_variable ]
!5436 = metadata !{i32 590080, metadata !5437, metadata !"os_r", metadata !3679, i32 268, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5437 = metadata !{i32 589835, metadata !3870, i32 267, i32 0, metadata !3679, i32 35} ; [ DW_TAG_lexical_block ]
!5438 = metadata !{i32 590080, metadata !5437, metadata !"f", metadata !3679, i32 269, metadata !5321, i32 0} ; [ DW_TAG_auto_variable ]
!5439 = metadata !{i32 590081, metadata !3871, metadata !"args", metadata !3679, i32 259, metadata !3857, i32 0} ; [ DW_TAG_arg_variable ]
!5440 = metadata !{i32 590080, metadata !5441, metadata !"sockfd", metadata !3679, i32 260, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5441 = metadata !{i32 589835, metadata !3871, i32 259, i32 0, metadata !3679, i32 36} ; [ DW_TAG_lexical_block ]
!5442 = metadata !{i32 590080, metadata !5441, metadata !"addr", metadata !3679, i32 261, metadata !3846, i32 0} ; [ DW_TAG_auto_variable ]
!5443 = metadata !{i32 590080, metadata !5441, metadata !"addrlen", metadata !3679, i32 262, metadata !3750, i32 0} ; [ DW_TAG_auto_variable ]
!5444 = metadata !{i32 590081, metadata !3872, metadata !"oldpath", metadata !3668, i32 144, metadata !3785, i32 0} ; [ DW_TAG_arg_variable ]
!5445 = metadata !{i32 590081, metadata !3872, metadata !"newpath", metadata !3668, i32 144, metadata !3785, i32 0} ; [ DW_TAG_arg_variable ]
!5446 = metadata !{i32 590080, metadata !5447, metadata !"r", metadata !3668, i32 147, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5447 = metadata !{i32 589835, metadata !3872, i32 144, i32 0, metadata !3668, i32 37} ; [ DW_TAG_lexical_block ]
!5448 = metadata !{i32 590081, metadata !3875, metadata !"domain", metadata !3679, i32 106, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5449 = metadata !{i32 590081, metadata !3875, metadata !"a", metadata !3679, i32 106, metadata !3734, i32 0} ; [ DW_TAG_arg_variable ]
!5450 = metadata !{i32 590081, metadata !3878, metadata !"sockfd", metadata !3679, i32 413, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5451 = metadata !{i32 590081, metadata !3878, metadata !"addr", metadata !3679, i32 413, metadata !3824, i32 0} ; [ DW_TAG_arg_variable ]
!5452 = metadata !{i32 590081, metadata !3878, metadata !"addrlen", metadata !3679, i32 413, metadata !3757, i32 0} ; [ DW_TAG_arg_variable ]
!5453 = metadata !{i32 590080, metadata !5454, metadata !"connfd", metadata !3679, i32 414, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5454 = metadata !{i32 589835, metadata !3878, i32 413, i32 0, metadata !3679, i32 39} ; [ DW_TAG_lexical_block ]
!5455 = metadata !{i32 590080, metadata !5454, metadata !"connf", metadata !3679, i32 415, metadata !5321, i32 0} ; [ DW_TAG_auto_variable ]
!5456 = metadata !{i32 590080, metadata !5454, metadata !"f", metadata !3679, i32 416, metadata !5321, i32 0} ; [ DW_TAG_auto_variable ]
!5457 = metadata !{i32 590080, metadata !5458, metadata !"fchild", metadata !3679, i32 498, metadata !5321, i32 0} ; [ DW_TAG_auto_variable ]
!5458 = metadata !{i32 589835, metadata !5454, i32 499, i32 0, metadata !3679, i32 40} ; [ DW_TAG_lexical_block ]
!5459 = metadata !{i32 590080, metadata !5458, metadata !"fd", metadata !3679, i32 499, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5460 = metadata !{i32 590080, metadata !5458, metadata !"os_r", metadata !3679, i32 504, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5461 = metadata !{i32 590081, metadata !3879, metadata !"sockfd", metadata !3679, i32 409, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5462 = metadata !{i32 590081, metadata !3879, metadata !"addr", metadata !3679, i32 409, metadata !3824, i32 0} ; [ DW_TAG_arg_variable ]
!5463 = metadata !{i32 590081, metadata !3879, metadata !"addrlen", metadata !3679, i32 409, metadata !3757, i32 0} ; [ DW_TAG_arg_variable ]
!5464 = metadata !{i32 590081, metadata !3880, metadata !"domain", metadata !3679, i32 141, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5465 = metadata !{i32 590081, metadata !3880, metadata !"type", metadata !3679, i32 141, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5466 = metadata !{i32 590081, metadata !3880, metadata !"protocol", metadata !3679, i32 141, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5467 = metadata !{i32 590080, metadata !5468, metadata !"fd", metadata !3679, i32 142, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5468 = metadata !{i32 589835, metadata !3880, i32 141, i32 0, metadata !3679, i32 42} ; [ DW_TAG_lexical_block ]
!5469 = metadata !{i32 590080, metadata !5468, metadata !"f", metadata !3679, i32 143, metadata !5321, i32 0} ; [ DW_TAG_auto_variable ]
!5470 = metadata !{i32 590080, metadata !5471, metadata !"os_r", metadata !3679, i32 153, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5471 = metadata !{i32 589835, metadata !5468, i32 146, i32 0, metadata !3679, i32 43} ; [ DW_TAG_lexical_block ]
!5472 = metadata !{i32 590081, metadata !3883, metadata !"args", metadata !3679, i32 132, metadata !3857, i32 0} ; [ DW_TAG_arg_variable ]
!5473 = metadata !{i32 590080, metadata !5474, metadata !"domain", metadata !3679, i32 134, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5474 = metadata !{i32 589835, metadata !3883, i32 132, i32 0, metadata !3679, i32 44} ; [ DW_TAG_lexical_block ]
!5475 = metadata !{i32 590080, metadata !5474, metadata !"type", metadata !3679, i32 135, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5476 = metadata !{i32 590080, metadata !5474, metadata !"protocol", metadata !3679, i32 136, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5477 = metadata !{i32 590081, metadata !3884, metadata !"type", metadata !3679, i32 25, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5478 = metadata !{i32 590081, metadata !3884, metadata !"args", metadata !3679, i32 25, metadata !3857, i32 0} ; [ DW_TAG_arg_variable ]
!5479 = metadata !{i32 590081, metadata !3887, metadata !"name", metadata !3668, i32 265, metadata !3785, i32 0} ; [ DW_TAG_arg_variable ]
!5480 = metadata !{i32 590081, metadata !3888, metadata !"__s1", metadata !3668, i32 243, metadata !3785, i32 0} ; [ DW_TAG_arg_variable ]
!5481 = metadata !{i32 590081, metadata !3888, metadata !"__s2", metadata !3668, i32 243, metadata !3785, i32 0} ; [ DW_TAG_arg_variable ]
!5482 = metadata !{i32 590080, metadata !5483, metadata !"__s1_len", metadata !3668, i32 244, metadata !3814, i32 0} ; [ DW_TAG_auto_variable ]
!5483 = metadata !{i32 589835, metadata !5484, i32 243, i32 0, metadata !3668, i32 48} ; [ DW_TAG_lexical_block ]
!5484 = metadata !{i32 589835, metadata !3888, i32 243, i32 0, metadata !3668, i32 47} ; [ DW_TAG_lexical_block ]
!5485 = metadata !{i32 590080, metadata !5483, metadata !"__s2_len", metadata !3668, i32 244, metadata !3814, i32 0} ; [ DW_TAG_auto_variable ]
!5486 = metadata !{i32 590081, metadata !3889, metadata !"clk_id", metadata !3668, i32 162, metadata !3796, i32 0} ; [ DW_TAG_arg_variable ]
!5487 = metadata !{i32 590081, metadata !3889, metadata !"res", metadata !3668, i32 162, metadata !3892, i32 0} ; [ DW_TAG_arg_variable ]
!5488 = metadata !{i32 590080, metadata !5489, metadata !"tv", metadata !3668, i32 163, metadata !5490, i32 0} ; [ DW_TAG_auto_variable ]
!5489 = metadata !{i32 589835, metadata !3889, i32 162, i32 0, metadata !3668, i32 49} ; [ DW_TAG_lexical_block ]
!5490 = metadata !{i32 589843, metadata !3668, metadata !"timeval", metadata !5491, i32 31, i64 128, i64 64, i64 0, i32 0, null, metadata !5492, i32 0, null} ; [ DW_TAG_structure_type ]
!5491 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3669} ; [ DW_TAG_file_type ]
!5492 = metadata !{metadata !5493, metadata !5494}
!5493 = metadata !{i32 589837, metadata !5490, metadata !"tv_sec", metadata !5491, i32 32, i64 64, i64 64, i64 0, i32 0, metadata !3726} ; [ DW_TAG_member ]
!5494 = metadata !{i32 589837, metadata !5490, metadata !"tv_usec", metadata !5491, i32 33, i64 64, i64 64, i64 64, i32 0, metadata !5495} ; [ DW_TAG_member ]
!5495 = metadata !{i32 589846, metadata !3699, metadata !"__suseconds_t", metadata !3699, i32 143, i64 0, i64 0, i64 0, i32 0, metadata !3716} ; [ DW_TAG_typedef ]
!5496 = metadata !{i32 590081, metadata !3893, metadata !"c", metadata !3668, i32 96, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5497 = metadata !{i32 590081, metadata !3893, metadata !"f", metadata !3668, i32 96, metadata !3896, i32 0} ; [ DW_TAG_arg_variable ]
!5498 = metadata !{i32 590081, metadata !3941, metadata !"f", metadata !3668, i32 91, metadata !3896, i32 0} ; [ DW_TAG_arg_variable ]
!5499 = metadata !{i32 590081, metadata !3944, metadata !"signum", metadata !3668, i32 43, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5500 = metadata !{i32 590081, metadata !3944, metadata !"act", metadata !3668, i32 43, metadata !3947, i32 0} ; [ DW_TAG_arg_variable ]
!5501 = metadata !{i32 590081, metadata !3944, metadata !"oldact", metadata !3668, i32 44, metadata !4038, i32 0} ; [ DW_TAG_arg_variable ]
!5502 = metadata !{i32 590081, metadata !3944, metadata !"_something", metadata !3668, i32 44, metadata !3814, i32 0} ; [ DW_TAG_arg_variable ]
!5503 = metadata !{i32 590081, metadata !4090, metadata !"name", metadata !4040, i32 227, metadata !4046, i32 0} ; [ DW_TAG_arg_variable ]
!5504 = metadata !{i32 590080, metadata !5505, metadata !"x", metadata !4040, i32 228, metadata !4064, i32 0} ; [ DW_TAG_auto_variable ]
!5505 = metadata !{i32 589835, metadata !4090, i32 227, i32 0, metadata !4040, i32 1} ; [ DW_TAG_lexical_block ]
!5506 = metadata !{i32 590081, metadata !4093, metadata !"path", metadata !4040, i32 349, metadata !4046, i32 0} ; [ DW_TAG_arg_variable ]
!5507 = metadata !{i32 590081, metadata !4093, metadata !"flags", metadata !4040, i32 349, metadata !4045, i32 0} ; [ DW_TAG_arg_variable ]
!5508 = metadata !{i32 590081, metadata !4093, metadata !"_buf", metadata !4040, i32 349, metadata !4096, i32 0} ; [ DW_TAG_arg_variable ]
!5509 = metadata !{i32 590080, metadata !5510, metadata !"s", metadata !4040, i32 350, metadata !4050, i32 0} ; [ DW_TAG_auto_variable ]
!5510 = metadata !{i32 589835, metadata !4093, i32 349, i32 0, metadata !4040, i32 2} ; [ DW_TAG_lexical_block ]
!5511 = metadata !{i32 590080, metadata !5510, metadata !"buf", metadata !4040, i32 351, metadata !4097, i32 0} ; [ DW_TAG_auto_variable ]
!5512 = metadata !{i32 590080, metadata !5510, metadata !"fd", metadata !4040, i32 352, metadata !4045, i32 0} ; [ DW_TAG_auto_variable ]
!5513 = metadata !{i32 590080, metadata !5510, metadata !"rd", metadata !4040, i32 359, metadata !4045, i32 0} ; [ DW_TAG_auto_variable ]
!5514 = metadata !{i32 590080, metadata !5510, metadata !"cnt", metadata !4040, i32 359, metadata !4045, i32 0} ; [ DW_TAG_auto_variable ]
!5515 = metadata !{i32 590081, metadata !4098, metadata !"dfile", metadata !4040, i32 55, metadata !4101, i32 0} ; [ DW_TAG_arg_variable ]
!5516 = metadata !{i32 590081, metadata !4098, metadata !"fill_info", metadata !4040, i32 55, metadata !4128, i32 0} ; [ DW_TAG_arg_variable ]
!5517 = metadata !{i32 590081, metadata !4098, metadata !"n_fill_info", metadata !4040, i32 55, metadata !4064, i32 0} ; [ DW_TAG_arg_variable ]
!5518 = metadata !{i32 590081, metadata !4098, metadata !"do_memset", metadata !4040, i32 55, metadata !4045, i32 0} ; [ DW_TAG_arg_variable ]
!5519 = metadata !{i32 590080, metadata !5520, metadata !"i", metadata !4040, i32 56, metadata !4064, i32 0} ; [ DW_TAG_auto_variable ]
!5520 = metadata !{i32 589835, metadata !4098, i32 55, i32 0, metadata !4040, i32 3} ; [ DW_TAG_lexical_block ]
!5521 = metadata !{i32 590080, metadata !5520, metadata !"j", metadata !4040, i32 56, metadata !4064, i32 0} ; [ DW_TAG_auto_variable ]
!5522 = metadata !{i32 590080, metadata !5520, metadata !"s", metadata !4040, i32 57, metadata !4045, i32 0} ; [ DW_TAG_auto_variable ]
!5523 = metadata !{i32 590080, metadata !5520, metadata !"file", metadata !4040, i32 58, metadata !4097, i32 0} ; [ DW_TAG_auto_variable ]
!5524 = metadata !{i32 590080, metadata !5525, metadata !"p", metadata !4040, i32 60, metadata !4128, i32 0} ; [ DW_TAG_auto_variable ]
!5525 = metadata !{i32 589835, metadata !5520, i32 60, i32 0, metadata !4040, i32 4} ; [ DW_TAG_lexical_block ]
!5526 = metadata !{i32 590081, metadata !4146, metadata !"dfile", metadata !4040, i32 101, metadata !4101, i32 0} ; [ DW_TAG_arg_variable ]
!5527 = metadata !{i32 590081, metadata !4146, metadata !"size", metadata !4040, i32 101, metadata !4064, i32 0} ; [ DW_TAG_arg_variable ]
!5528 = metadata !{i32 590081, metadata !4146, metadata !"contents", metadata !4040, i32 101, metadata !4097, i32 0} ; [ DW_TAG_arg_variable ]
!5529 = metadata !{i32 590081, metadata !4146, metadata !"name", metadata !4040, i32 102, metadata !4046, i32 0} ; [ DW_TAG_arg_variable ]
!5530 = metadata !{i32 590081, metadata !4146, metadata !"fill_info", metadata !4040, i32 103, metadata !4128, i32 0} ; [ DW_TAG_arg_variable ]
!5531 = metadata !{i32 590081, metadata !4146, metadata !"n_fill_info", metadata !4040, i32 103, metadata !4064, i32 0} ; [ DW_TAG_arg_variable ]
!5532 = metadata !{i32 590081, metadata !4146, metadata !"defaults", metadata !4040, i32 104, metadata !4049, i32 0} ; [ DW_TAG_arg_variable ]
!5533 = metadata !{i32 590081, metadata !4146, metadata !"is_foreign", metadata !4040, i32 104, metadata !4045, i32 0} ; [ DW_TAG_arg_variable ]
!5534 = metadata !{i32 590080, metadata !5535, metadata !"s", metadata !4040, i32 105, metadata !4049, i32 0} ; [ DW_TAG_auto_variable ]
!5535 = metadata !{i32 589835, metadata !4146, i32 104, i32 0, metadata !4040, i32 5} ; [ DW_TAG_lexical_block ]
!5536 = metadata !{i32 590080, metadata !5535, metadata !"sp", metadata !4040, i32 106, metadata !4046, i32 0} ; [ DW_TAG_auto_variable ]
!5537 = metadata !{i32 590080, metadata !5535, metadata !"sname", metadata !4040, i32 107, metadata !5538, i32 0} ; [ DW_TAG_auto_variable ]
!5538 = metadata !{i32 589825, metadata !4040, metadata !"", metadata !4040, i32 0, i64 2048, i64 8, i64 0, i32 0, metadata !4048, metadata !843, i32 0, null} ; [ DW_TAG_array_type ]
!5539 = metadata !{i32 590080, metadata !5535, metadata !"src_name", metadata !4040, i32 107, metadata !5538, i32 0} ; [ DW_TAG_auto_variable ]
!5540 = metadata !{i32 590080, metadata !5535, metadata !"original_file", metadata !4040, i32 115, metadata !4097, i32 0} ; [ DW_TAG_auto_variable ]
!5541 = metadata !{i32 590080, metadata !5535, metadata !"originalStat", metadata !4040, i32 163, metadata !4050, i32 0} ; [ DW_TAG_auto_variable ]
!5542 = metadata !{i32 590080, metadata !5543, metadata !"i", metadata !4040, i32 134, metadata !4064, i32 0} ; [ DW_TAG_auto_variable ]
!5543 = metadata !{i32 589835, metadata !5535, i32 135, i32 0, metadata !4040, i32 6} ; [ DW_TAG_lexical_block ]
!5544 = metadata !{i32 590080, metadata !5545, metadata !"ss", metadata !4040, i32 207, metadata !4115, i32 0} ; [ DW_TAG_auto_variable ]
!5545 = metadata !{i32 589835, metadata !5535, i32 209, i32 0, metadata !4040, i32 7} ; [ DW_TAG_lexical_block ]
!5546 = metadata !{i32 590081, metadata !4149, metadata !"path", metadata !4040, i32 370, metadata !4046, i32 0} ; [ DW_TAG_arg_variable ]
!5547 = metadata !{i32 590081, metadata !4149, metadata !"flags", metadata !4040, i32 370, metadata !4045, i32 0} ; [ DW_TAG_arg_variable ]
!5548 = metadata !{i32 590080, metadata !5549, metadata !"k", metadata !4040, i32 371, metadata !4064, i32 0} ; [ DW_TAG_auto_variable ]
!5549 = metadata !{i32 589835, metadata !4149, i32 370, i32 0, metadata !4040, i32 8} ; [ DW_TAG_lexical_block ]
!5550 = metadata !{i32 590080, metadata !5549, metadata !"fsize", metadata !4040, i32 372, metadata !4045, i32 0} ; [ DW_TAG_auto_variable ]
!5551 = metadata !{i32 590080, metadata !5549, metadata !"def", metadata !4040, i32 373, metadata !4050, i32 0} ; [ DW_TAG_auto_variable ]
!5552 = metadata !{i32 590080, metadata !5549, metadata !"buf", metadata !4040, i32 374, metadata !4097, i32 0} ; [ DW_TAG_auto_variable ]
!5553 = metadata !{i32 590081, metadata !4152, metadata !"n_files", metadata !4040, i32 242, metadata !4064, i32 0} ; [ DW_TAG_arg_variable ]
!5554 = metadata !{i32 590081, metadata !4152, metadata !"file_length", metadata !4040, i32 242, metadata !4064, i32 0} ; [ DW_TAG_arg_variable ]
!5555 = metadata !{i32 590081, metadata !4152, metadata !"sym_stdout_flag", metadata !4040, i32 243, metadata !4045, i32 0} ; [ DW_TAG_arg_variable ]
!5556 = metadata !{i32 590081, metadata !4152, metadata !"save_all_writes_flag", metadata !4040, i32 243, metadata !4045, i32 0} ; [ DW_TAG_arg_variable ]
!5557 = metadata !{i32 590081, metadata !4152, metadata !"n_streams", metadata !4040, i32 244, metadata !4064, i32 0} ; [ DW_TAG_arg_variable ]
!5558 = metadata !{i32 590081, metadata !4152, metadata !"stream_len", metadata !4040, i32 244, metadata !4064, i32 0} ; [ DW_TAG_arg_variable ]
!5559 = metadata !{i32 590081, metadata !4152, metadata !"n_dgrams", metadata !4040, i32 245, metadata !4064, i32 0} ; [ DW_TAG_arg_variable ]
!5560 = metadata !{i32 590081, metadata !4152, metadata !"dgram_len", metadata !4040, i32 245, metadata !4064, i32 0} ; [ DW_TAG_arg_variable ]
!5561 = metadata !{i32 590081, metadata !4152, metadata !"max_failures", metadata !4040, i32 246, metadata !4064, i32 0} ; [ DW_TAG_arg_variable ]
!5562 = metadata !{i32 590081, metadata !4152, metadata !"one_line_streams", metadata !4040, i32 247, metadata !4045, i32 0} ; [ DW_TAG_arg_variable ]
!5563 = metadata !{i32 590081, metadata !4152, metadata !"stream_fill_info", metadata !4040, i32 248, metadata !4128, i32 0} ; [ DW_TAG_arg_variable ]
!5564 = metadata !{i32 590081, metadata !4152, metadata !"n_stream_fill_info", metadata !4040, i32 248, metadata !4064, i32 0} ; [ DW_TAG_arg_variable ]
!5565 = metadata !{i32 590081, metadata !4152, metadata !"dgram_fill_info", metadata !4040, i32 249, metadata !4128, i32 0} ; [ DW_TAG_arg_variable ]
!5566 = metadata !{i32 590081, metadata !4152, metadata !"n_dgram_fill_info", metadata !4040, i32 249, metadata !4064, i32 0} ; [ DW_TAG_arg_variable ]
!5567 = metadata !{i32 590080, metadata !5568, metadata !"k", metadata !4040, i32 250, metadata !4064, i32 0} ; [ DW_TAG_auto_variable ]
!5568 = metadata !{i32 589835, metadata !4152, i32 249, i32 0, metadata !4040, i32 9} ; [ DW_TAG_lexical_block ]
!5569 = metadata !{i32 590080, metadata !5568, metadata !"name", metadata !4040, i32 251, metadata !5570, i32 0} ; [ DW_TAG_auto_variable ]
!5570 = metadata !{i32 589825, metadata !4040, metadata !"", metadata !4040, i32 0, i64 56, i64 8, i64 0, i32 0, metadata !4048, metadata !4341, i32 0, null} ; [ DW_TAG_array_type ]
!5571 = metadata !{i32 590080, metadata !5568, metadata !"sname", metadata !4040, i32 252, metadata !5572, i32 0} ; [ DW_TAG_auto_variable ]
!5572 = metadata !{i32 589825, metadata !4040, metadata !"", metadata !4040, i32 0, i64 64, i64 8, i64 0, i32 0, metadata !4048, metadata !3300, i32 0, null} ; [ DW_TAG_array_type ]
!5573 = metadata !{i32 590080, metadata !5568, metadata !"dname", metadata !4040, i32 253, metadata !5570, i32 0} ; [ DW_TAG_auto_variable ]
!5574 = metadata !{i32 590080, metadata !5568, metadata !"s", metadata !4040, i32 255, metadata !4050, i32 0} ; [ DW_TAG_auto_variable ]
!5575 = metadata !{i32 590080, metadata !5568, metadata !"i", metadata !4040, i32 340, metadata !4064, i32 0} ; [ DW_TAG_auto_variable ]
!5576 = metadata !{i32 590080, metadata !5568, metadata !"offset", metadata !4040, i32 341, metadata !5577, i32 0} ; [ DW_TAG_auto_variable ]
!5577 = metadata !{i32 589846, metadata !4463, metadata !"off_t", metadata !4463, i32 93, i64 0, i64 0, i64 0, i32 0, metadata !4073} ; [ DW_TAG_typedef ]
!5578 = metadata !{i32 590081, metadata !4155, metadata !"bitWidth", metadata !4156, i32 20, metadata !4160, i32 0} ; [ DW_TAG_arg_variable ]
!5579 = metadata !{i32 590081, metadata !4155, metadata !"shift", metadata !4156, i32 20, metadata !4160, i32 0} ; [ DW_TAG_arg_variable ]
!5580 = metadata !{i32 590081, metadata !4161, metadata !"s", metadata !4162, i32 19, metadata !4167, i32 0} ; [ DW_TAG_arg_variable ]
!5581 = metadata !{i32 590080, metadata !5582, metadata !"i", metadata !4162, i32 20, metadata !4166, i32 0} ; [ DW_TAG_auto_variable ]
!5582 = metadata !{i32 589835, metadata !4161, i32 19, i32 0, metadata !4162, i32 0} ; [ DW_TAG_lexical_block ]
!5583 = metadata !{i32 590081, metadata !4215, metadata !"argc", metadata !4162, i32 25, metadata !4166, i32 0} ; [ DW_TAG_arg_variable ]
!5584 = metadata !{i32 590081, metadata !4215, metadata !"argv", metadata !4162, i32 25, metadata !4218, i32 0} ; [ DW_TAG_arg_variable ]
!5585 = metadata !{i32 590080, metadata !5586, metadata !"i", metadata !4162, i32 26, metadata !4166, i32 0} ; [ DW_TAG_auto_variable ]
!5586 = metadata !{i32 589835, metadata !4215, i32 25, i32 0, metadata !4162, i32 2} ; [ DW_TAG_lexical_block ]
!5587 = metadata !{i32 590080, metadata !5586, metadata !"j", metadata !4162, i32 26, metadata !4166, i32 0} ; [ DW_TAG_auto_variable ]
!5588 = metadata !{i32 590080, metadata !5586, metadata !"len", metadata !4162, i32 26, metadata !4166, i32 0} ; [ DW_TAG_auto_variable ]
!5589 = metadata !{i32 590080, metadata !5586, metadata !"argv_i", metadata !4162, i32 27, metadata !4167, i32 0} ; [ DW_TAG_auto_variable ]
!5590 = metadata !{i32 590080, metadata !5586, metadata !"shadow", metadata !4162, i32 28, metadata !4166, i32 0} ; [ DW_TAG_auto_variable ]
!5591 = metadata !{i32 590080, metadata !5586, metadata !"standalone", metadata !4162, i32 29, metadata !4166, i32 0} ; [ DW_TAG_auto_variable ]
!5592 = metadata !{i32 590080, metadata !5593, metadata !"tmpStat", metadata !4162, i32 58, metadata !5594, i32 0} ; [ DW_TAG_auto_variable ]
!5593 = metadata !{i32 589835, metadata !5586, i32 59, i32 0, metadata !4162, i32 3} ; [ DW_TAG_lexical_block ]
!5594 = metadata !{i32 589843, metadata !4162, metadata !"stat", metadata !4177, i32 47, i64 1152, i64 64, i64 0, i32 0, null, metadata !5595, i32 0, null} ; [ DW_TAG_structure_type ]
!5595 = metadata !{metadata !5596, metadata !5597, metadata !5599, metadata !5600, metadata !5601, metadata !5602, metadata !5603, metadata !5604, metadata !5605, metadata !5606, metadata !5607, metadata !5609, metadata !5610, metadata !5611, metadata !5
!5596 = metadata !{i32 589837, metadata !5594, metadata !"st_dev", metadata !4177, i32 48, i64 64, i64 64, i64 0, i32 0, metadata !4180} ; [ DW_TAG_member ]
!5597 = metadata !{i32 589837, metadata !5594, metadata !"st_ino", metadata !4177, i32 53, i64 64, i64 64, i64 64, i32 0, metadata !5598} ; [ DW_TAG_member ]
!5598 = metadata !{i32 589846, metadata !4181, metadata !"__ino_t", metadata !4181, i32 128, i64 0, i64 0, i64 0, i32 0, metadata !4182} ; [ DW_TAG_typedef ]
!5599 = metadata !{i32 589837, metadata !5594, metadata !"st_nlink", metadata !4177, i32 61, i64 64, i64 64, i64 128, i32 0, metadata !4186} ; [ DW_TAG_member ]
!5600 = metadata !{i32 589837, metadata !5594, metadata !"st_mode", metadata !4177, i32 62, i64 32, i64 32, i64 192, i32 0, metadata !4188} ; [ DW_TAG_member ]
!5601 = metadata !{i32 589837, metadata !5594, metadata !"st_uid", metadata !4177, i32 64, i64 32, i64 32, i64 224, i32 0, metadata !4191} ; [ DW_TAG_member ]
!5602 = metadata !{i32 589837, metadata !5594, metadata !"st_gid", metadata !4177, i32 65, i64 32, i64 32, i64 256, i32 0, metadata !4193} ; [ DW_TAG_member ]
!5603 = metadata !{i32 589837, metadata !5594, metadata !"__pad0", metadata !4177, i32 67, i64 32, i64 32, i64 288, i32 0, metadata !4166} ; [ DW_TAG_member ]
!5604 = metadata !{i32 589837, metadata !5594, metadata !"st_rdev", metadata !4177, i32 69, i64 64, i64 64, i64 320, i32 0, metadata !4180} ; [ DW_TAG_member ]
!5605 = metadata !{i32 589837, metadata !5594, metadata !"st_size", metadata !4177, i32 74, i64 64, i64 64, i64 384, i32 0, metadata !4197} ; [ DW_TAG_member ]
!5606 = metadata !{i32 589837, metadata !5594, metadata !"st_blksize", metadata !4177, i32 78, i64 64, i64 64, i64 448, i32 0, metadata !4200} ; [ DW_TAG_member ]
!5607 = metadata !{i32 589837, metadata !5594, metadata !"st_blocks", metadata !4177, i32 80, i64 64, i64 64, i64 512, i32 0, metadata !5608} ; [ DW_TAG_member ]
!5608 = metadata !{i32 589846, metadata !4181, metadata !"__blkcnt_t", metadata !4181, i32 159, i64 0, i64 0, i64 0, i32 0, metadata !4198} ; [ DW_TAG_typedef ]
!5609 = metadata !{i32 589837, metadata !5594, metadata !"st_atim", metadata !4177, i32 91, i64 128, i64 64, i64 576, i32 0, metadata !4204} ; [ DW_TAG_member ]
!5610 = metadata !{i32 589837, metadata !5594, metadata !"st_mtim", metadata !4177, i32 92, i64 128, i64 64, i64 704, i32 0, metadata !4204} ; [ DW_TAG_member ]
!5611 = metadata !{i32 589837, metadata !5594, metadata !"st_ctim", metadata !4177, i32 93, i64 128, i64 64, i64 832, i32 0, metadata !4204} ; [ DW_TAG_member ]
!5612 = metadata !{i32 589837, metadata !5594, metadata !"__glibc_reserved", metadata !4177, i32 106, i64 192, i64 64, i64 960, i32 0, metadata !4214} ; [ DW_TAG_member ]
!5613 = metadata !{i32 590080, metadata !5614, metadata !"fd", metadata !4162, i32 61, metadata !4166, i32 0} ; [ DW_TAG_auto_variable ]
!5614 = metadata !{i32 589835, metadata !5593, i32 61, i32 0, metadata !4162, i32 4} ; [ DW_TAG_lexical_block ]
!5615 = metadata !{i32 590081, metadata !4219, metadata !"z", metadata !4220, i32 12, metadata !4224, i32 0} ; [ DW_TAG_arg_variable ]
!5616 = metadata !{i32 590081, metadata !4225, metadata !"start", metadata !4226, i32 13, metadata !4230, i32 0} ; [ DW_TAG_arg_variable ]
!5617 = metadata !{i32 590081, metadata !4225, metadata !"end", metadata !4226, i32 13, metadata !4230, i32 0} ; [ DW_TAG_arg_variable ]
!5618 = metadata !{i32 590081, metadata !4225, metadata !"name", metadata !4226, i32 13, metadata !4231, i32 0} ; [ DW_TAG_arg_variable ]
!5619 = metadata !{i32 590080, metadata !5620, metadata !"x", metadata !4226, i32 14, metadata !4230, i32 0} ; [ DW_TAG_auto_variable ]
!5620 = metadata !{i32 589835, metadata !4225, i32 13, i32 0, metadata !4226, i32 0} ; [ DW_TAG_lexical_block ]
!5621 = metadata !{i32 13, i32 0, metadata !5622, null}
!5622 = metadata !{i32 589835, metadata !0, i32 12, i32 0, metadata !1, i32 0} ; [ DW_TAG_lexical_block ]
!5623 = metadata !{i32 27, i32 0, metadata !5624, null}
!5624 = metadata !{i32 589835, metadata !7, i32 23, i32 0, metadata !10, i32 0} ; [ DW_TAG_lexical_block ]
!5625 = metadata !{i32 28, i32 0, metadata !5624, null}
!5626 = metadata !{i32 33, i32 0, metadata !5624, null}
!5627 = metadata !{i32 36, i32 0, metadata !5624, null}
!5628 = metadata !{i32 37, i32 0, metadata !5629, null}
!5629 = metadata !{i32 589835, metadata !5624, i32 23, i32 0, metadata !10, i32 1} ; [ DW_TAG_lexical_block ]
!5630 = metadata !{i32 38, i32 0, metadata !5629, null}
!5631 = metadata !{i32 40, i32 0, metadata !5629, null}
!5632 = metadata !{i32 43, i32 0, metadata !5624, null}
!5633 = metadata !{i32 44, i32 0, metadata !5624, null}
!5634 = metadata !{i32 48, i32 0, metadata !5624, null}
!5635 = metadata !{i32 49, i32 0, metadata !5624, null}
!5636 = metadata !{i32 50, i32 0, metadata !5624, null}
!5637 = metadata !{i32 56, i32 0, metadata !5624, null}
!5638 = metadata !{i32 57, i32 0, metadata !5624, null}
!5639 = metadata !{i32 60, i32 0, metadata !5624, null}
!5640 = metadata !{i32 61, i32 0, metadata !5624, null}
!5641 = metadata !{i32 62, i32 0, metadata !5624, null}
!5642 = metadata !{i32 63, i32 0, metadata !5624, null}
!5643 = metadata !{i32 64, i32 0, metadata !5624, null}
!5644 = metadata !{i32 68, i32 0, metadata !5645, null}
!5645 = metadata !{i32 589835, metadata !5624, i32 68, i32 0, metadata !10, i32 2} ; [ DW_TAG_lexical_block ]
!5646 = metadata !{i32 69, i32 0, metadata !5645, null}
!5647 = metadata !{i32 74, i32 0, metadata !5624, null}
!5648 = metadata !{i32 32, i32 0, metadata !5649, null}
!5649 = metadata !{i32 589835, metadata !48, i32 29, i32 0, metadata !49, i32 0} ; [ DW_TAG_lexical_block ]
!5650 = metadata !{i32 24, i32 0, metadata !5651, null}
!5651 = metadata !{i32 589835, metadata !88, i32 20, i32 0, metadata !91, i32 0} ; [ DW_TAG_lexical_block ]
!5652 = metadata !{i32 25, i32 0, metadata !5651, null}
!5653 = metadata !{i32 26, i32 0, metadata !5651, null}
!5654 = metadata !{i32 31, i32 0, metadata !5651, null}
!5655 = metadata !{i32 34, i32 0, metadata !5651, null}
!5656 = metadata !{i32 35, i32 0, metadata !5651, null}
!5657 = metadata !{i32 38, i32 0, metadata !5651, null}
!5658 = metadata !{i32 40, i32 0, metadata !5651, null}
!5659 = metadata !{i32 49, i32 0, metadata !5651, null}
!5660 = metadata !{i32 51, i32 0, metadata !5651, null}
!5661 = metadata !{i32 52, i32 0, metadata !5651, null}
!5662 = metadata !{i32 55, i32 0, metadata !5651, null}
!5663 = metadata !{i32 62, i32 0, metadata !5664, null}
!5664 = metadata !{i32 589835, metadata !5651, i32 62, i32 0, metadata !91, i32 1} ; [ DW_TAG_lexical_block ]
!5665 = metadata !{i32 63, i32 0, metadata !5664, null}
!5666 = metadata !{i32 67, i32 0, metadata !5651, null}
!5667 = metadata !{i32 71, i32 0, metadata !5651, null}
!5668 = metadata !{i32 19, i32 0, metadata !5669, null}
!5669 = metadata !{i32 589835, metadata !127, i32 16, i32 0, metadata !128, i32 0} ; [ DW_TAG_lexical_block ]
!5670 = metadata !{i32 139, i32 0, metadata !5671, null}
!5671 = metadata !{i32 589835, metadata !165, i32 137, i32 0, metadata !166, i32 0} ; [ DW_TAG_lexical_block ]
!5672 = metadata !{i32 143, i32 0, metadata !5673, null}
!5673 = metadata !{i32 589835, metadata !5671, i32 137, i32 0, metadata !166, i32 1} ; [ DW_TAG_lexical_block ]
!5674 = metadata !{i32 147, i32 0, metadata !5673, null}
!5675 = metadata !{i32 150, i32 0, metadata !5673, null}
!5676 = metadata !{i32 153, i32 0, metadata !5673, null}
!5677 = metadata !{i32 56, i32 0, metadata !5678, null}
!5678 = metadata !{i32 589835, metadata !171, i32 55, i32 0, metadata !172, i32 2} ; [ DW_TAG_lexical_block ]
!5679 = metadata !{i32 160, i32 0, metadata !5680, null}
!5680 = metadata !{i32 589835, metadata !177, i32 156, i32 0, metadata !166, i32 3} ; [ DW_TAG_lexical_block ]
!5681 = metadata !{i32 161, i32 0, metadata !5680, null}
!5682 = metadata !{i32 162, i32 0, metadata !5680, null}
!5683 = metadata !{i32 163, i32 0, metadata !5680, null}
!5684 = metadata !{i32 165, i32 0, metadata !5680, null}
!5685 = metadata !{i32 166, i32 0, metadata !5680, null}
!5686 = metadata !{i32 168, i32 0, metadata !5680, null}
!5687 = metadata !{i32 191, i32 0, metadata !5688, null}
!5688 = metadata !{i32 589835, metadata !180, i32 188, i32 0, metadata !166, i32 4} ; [ DW_TAG_lexical_block ]
!5689 = metadata !{i32 193, i32 0, metadata !5688, null}
!5690 = metadata !{i32 197, i32 0, metadata !5688, null}
!5691 = metadata !{i32 239, i32 0, metadata !5688, null}
!5692 = metadata !{i32 192, i32 0, metadata !5688, null}
!5693 = metadata !{i32 263, i32 0, metadata !5694, null}
!5694 = metadata !{i32 589835, metadata !183, i32 252, i32 0, metadata !166, i32 5} ; [ DW_TAG_lexical_block ]
!5695 = metadata !{i32 264, i32 0, metadata !5694, null}
!5696 = metadata !{i32 266, i32 0, metadata !5694, null}
!5697 = metadata !{i32 267, i32 0, metadata !5694, null}
!5698 = metadata !{i32 268, i32 0, metadata !5694, null}
!5699 = metadata !{i32 288, i32 0, metadata !5700, null}
!5700 = metadata !{i32 589835, metadata !184, i32 281, i32 0, metadata !166, i32 6} ; [ DW_TAG_lexical_block ]
!5701 = metadata !{i32 291, i32 0, metadata !5700, null}
!5702 = metadata !{i32 294, i32 0, metadata !5700, null}
!5703 = metadata !{i32 298, i32 0, metadata !5700, null}
!5704 = metadata !{i32 300, i32 0, metadata !5700, null}
!5705 = metadata !{i32 305, i32 0, metadata !5700, null}
!5706 = metadata !{i32 306, i32 0, metadata !5700, null}
!5707 = metadata !{i32 307, i32 0, metadata !5700, null}
!5708 = metadata !{i32 308, i32 0, metadata !5700, null}
!5709 = metadata !{i32 312, i32 0, metadata !5710, null}
!5710 = metadata !{i32 589835, metadata !5700, i32 312, i32 0, metadata !166, i32 7} ; [ DW_TAG_lexical_block ]
!5711 = metadata !{i32 313, i32 0, metadata !5710, null}
!5712 = metadata !{i32 314, i32 0, metadata !5710, null}
!5713 = metadata !{i32 316, i32 0, metadata !5710, null}
!5714 = metadata !{i32 311, i32 0, metadata !5700, null}
!5715 = metadata !{i32 323, i32 0, metadata !5700, null}
!5716 = metadata !{i32 327, i32 0, metadata !5700, null}
!5717 = metadata !{i32 331, i32 0, metadata !5700, null}
!5718 = metadata !{i32 336, i32 0, metadata !5700, null}
!5719 = metadata !{i32 337, i32 0, metadata !5700, null}
!5720 = metadata !{i32 338, i32 0, metadata !5700, null}
!5721 = metadata !{i32 342, i32 0, metadata !5700, null}
!5722 = metadata !{i32 354, i32 0, metadata !5700, null}
!5723 = metadata !{i32 370, i32 0, metadata !5700, null}
!5724 = metadata !{i32 371, i32 0, metadata !5700, null}
!5725 = metadata !{i32 391, i32 0, metadata !5700, null}
!5726 = metadata !{i32 392, i32 0, metadata !5700, null}
!5727 = metadata !{i32 395, i32 0, metadata !5700, null}
!5728 = metadata !{i32 396, i32 0, metadata !5700, null}
!5729 = metadata !{i32 401, i32 0, metadata !5700, null}
!5730 = metadata !{i32 930, i32 0, metadata !5731, null}
!5731 = metadata !{i32 589835, metadata !195, i32 921, i32 0, metadata !198, i32 0} ; [ DW_TAG_lexical_block ]
!5732 = metadata !{i32 118, i32 0, metadata !5733, null}
!5733 = metadata !{i32 589835, metadata !208, i32 112, i32 0, metadata !211, i32 0} ; [ DW_TAG_lexical_block ]
!5734 = metadata !{i32 34, i32 0, metadata !5735, null}
!5735 = metadata !{i32 589835, metadata !217, i32 32, i32 0, metadata !218, i32 0} ; [ DW_TAG_lexical_block ]
!5736 = metadata !{i32 36, i32 0, metadata !5735, null}
!5737 = metadata !{i32 37, i32 0, metadata !5735, null}
!5738 = metadata !{i32 41, i32 0, metadata !5735, null}
!5739 = metadata !{i32 40, i32 0, metadata !5735, null}
!5740 = metadata !{i32 49, i32 0, metadata !5735, null}
!5741 = metadata !{i32 50, i32 0, metadata !5735, null}
!5742 = metadata !{i32 52, i32 0, metadata !5735, null}
!5743 = metadata !{i32 53, i32 0, metadata !5735, null}
!5744 = metadata !{i32 54, i32 0, metadata !5735, null}
!5745 = metadata !{i32 55, i32 0, metadata !5735, null}
!5746 = metadata !{i32 57, i32 0, metadata !5735, null}
!5747 = metadata !{i32 58, i32 0, metadata !5735, null}
!5748 = metadata !{i32 59, i32 0, metadata !5735, null}
!5749 = metadata !{i32 61, i32 0, metadata !5735, null}
!5750 = metadata !{i32 62, i32 0, metadata !5735, null}
!5751 = metadata !{i32 63, i32 0, metadata !5735, null}
!5752 = metadata !{i32 65, i32 0, metadata !5735, null}
!5753 = metadata !{i32 66, i32 0, metadata !5735, null}
!5754 = metadata !{i32 67, i32 0, metadata !5735, null}
!5755 = metadata !{i32 69, i32 0, metadata !5735, null}
!5756 = metadata !{i32 70, i32 0, metadata !5735, null}
!5757 = metadata !{i32 72, i32 0, metadata !5735, null}
!5758 = metadata !{i32 73, i32 0, metadata !5735, null}
!5759 = metadata !{i32 75, i32 0, metadata !5735, null}
!5760 = metadata !{i32 86, i32 0, metadata !5761, null}
!5761 = metadata !{i32 589835, metadata !267, i32 80, i32 0, metadata !218, i32 1} ; [ DW_TAG_lexical_block ]
!5762 = metadata !{i32 87, i32 0, metadata !5761, null}
!5763 = metadata !{i32 88, i32 0, metadata !5761, null}
!5764 = metadata !{i32 89, i32 0, metadata !5761, null}
!5765 = metadata !{i32 92, i32 0, metadata !5761, null}
!5766 = metadata !{i32 94, i32 0, metadata !5761, null}
!5767 = metadata !{i32 99, i32 0, metadata !5768, null}
!5768 = metadata !{i32 589835, metadata !270, i32 98, i32 0, metadata !218, i32 2} ; [ DW_TAG_lexical_block ]
!5769 = metadata !{i32 100, i32 0, metadata !5768, null}
!5770 = metadata !{i32 102, i32 0, metadata !5768, null}
!5771 = metadata !{i32 104, i32 0, metadata !5768, null}
!5772 = metadata !{i32 106, i32 0, metadata !5768, null}
!5773 = metadata !{i32 111, i32 0, metadata !5774, null}
!5774 = metadata !{i32 589835, metadata !275, i32 110, i32 0, metadata !218, i32 3} ; [ DW_TAG_lexical_block ]
!5775 = metadata !{i32 116, i32 0, metadata !5776, null}
!5776 = metadata !{i32 589835, metadata !280, i32 115, i32 0, metadata !218, i32 4} ; [ DW_TAG_lexical_block ]
!5777 = metadata !{i32 122, i32 0, metadata !5778, null}
!5778 = metadata !{i32 589835, metadata !283, i32 121, i32 0, metadata !218, i32 5} ; [ DW_TAG_lexical_block ]
!5779 = metadata !{i32 123, i32 0, metadata !5778, null}
!5780 = metadata !{i32 124, i32 0, metadata !5778, null}
!5781 = metadata !{i32 54, i32 0, metadata !5782, null}
!5782 = metadata !{i32 589835, metadata !286, i32 51, i32 0, metadata !287, i32 0} ; [ DW_TAG_lexical_block ]
!5783 = metadata !{i32 56, i32 0, metadata !5782, null}
!5784 = metadata !{i32 57, i32 0, metadata !5782, null}
!5785 = metadata !{i32 58, i32 0, metadata !5782, null}
!5786 = metadata !{i32 59, i32 0, metadata !5782, null}
!5787 = metadata !{i32 60, i32 0, metadata !5782, null}
!5788 = metadata !{i32 61, i32 0, metadata !5782, null}
!5789 = metadata !{i32 63, i32 0, metadata !5790, null}
!5790 = metadata !{i32 589835, metadata !5782, i32 63, i32 0, metadata !287, i32 1} ; [ DW_TAG_lexical_block ]
!5791 = metadata !{i32 64, i32 0, metadata !5782, null}
!5792 = metadata !{i32 65, i32 0, metadata !5782, null}
!5793 = metadata !{i32 66, i32 0, metadata !5782, null}
!5794 = metadata !{i32 75, i32 0, metadata !5795, null}
!5795 = metadata !{i32 589835, metadata !295, i32 72, i32 0, metadata !287, i32 2} ; [ DW_TAG_lexical_block ]
!5796 = metadata !{i32 79, i32 0, metadata !5797, null}
!5797 = metadata !{i32 589835, metadata !5795, i32 79, i32 0, metadata !287, i32 3} ; [ DW_TAG_lexical_block ]
!5798 = metadata !{i32 84, i32 0, metadata !5797, null}
!5799 = metadata !{i32 85, i32 0, metadata !5797, null}
!5800 = metadata !{i32 88, i32 0, metadata !5795, null}
!5801 = metadata !{i32 90, i32 0, metadata !5795, null}
!5802 = metadata !{i32 91, i32 0, metadata !5795, null}
!5803 = metadata !{i32 93, i32 0, metadata !5795, null}
!5804 = metadata !{i32 94, i32 0, metadata !5795, null}
!5805 = metadata !{i32 95, i32 0, metadata !5795, null}
!5806 = metadata !{i32 97, i32 0, metadata !5795, null}
!5807 = metadata !{i32 98, i32 0, metadata !5795, null}
!5808 = metadata !{i32 99, i32 0, metadata !5795, null}
!5809 = metadata !{i32 101, i32 0, metadata !5810, null}
!5810 = metadata !{i32 589835, metadata !5795, i32 101, i32 0, metadata !287, i32 4} ; [ DW_TAG_lexical_block ]
!5811 = metadata !{i32 102, i32 0, metadata !5795, null}
!5812 = metadata !{i32 103, i32 0, metadata !5795, null}
!5813 = metadata !{i32 82, i32 0, metadata !5797, null}
!5814 = metadata !{i32 322, i32 0, metadata !5815, null}
!5815 = metadata !{i32 589835, metadata !299, i32 319, i32 0, metadata !302, i32 0} ; [ DW_TAG_lexical_block ]
!5816 = metadata !{i32 323, i32 0, metadata !5815, null}
!5817 = metadata !{i32 327, i32 0, metadata !5815, null}
!5818 = metadata !{i32 334, i32 0, metadata !5815, null}
!5819 = metadata !{i32 336, i32 0, metadata !5815, null}
!5820 = metadata !{i32 16, i32 0, metadata !5821, null}
!5821 = metadata !{i32 589835, metadata !306, i32 15, i32 0, metadata !307, i32 0} ; [ DW_TAG_lexical_block ]
!5822 = metadata !{i32 27, i32 0, metadata !5823, null}
!5823 = metadata !{i32 589835, metadata !5821, i32 27, i32 0, metadata !307, i32 1} ; [ DW_TAG_lexical_block ]
!5824 = metadata !{i32 28, i32 0, metadata !5823, null}
!5825 = metadata !{i32 29, i32 0, metadata !5823, null}
!5826 = metadata !{i32 32, i32 0, metadata !5823, null}
!5827 = metadata !{i32 33, i32 0, metadata !5823, null}
!5828 = metadata !{i32 36, i32 0, metadata !5823, null}
!5829 = metadata !{i32 31, i32 0, metadata !5823, null}
!5830 = metadata !{i32 51, i32 0, metadata !5821, null}
!5831 = metadata !{i32 52, i32 0, metadata !5821, null}
!5832 = metadata !{i32 56, i32 0, metadata !5821, null}
!5833 = metadata !{i32 57, i32 0, metadata !5821, null}
!5834 = metadata !{i32 60, i32 0, metadata !5821, null}
!5835 = metadata !{i32 71, i32 0, metadata !5821, null}
!5836 = metadata !{i32 72, i32 0, metadata !5821, null}
!5837 = metadata !{i32 92, i32 0, metadata !5821, null}
!5838 = metadata !{i32 101, i32 0, metadata !5821, null}
!5839 = metadata !{i32 104, i32 0, metadata !5821, null}
!5840 = metadata !{i32 17, i32 0, metadata !5841, null}
!5841 = metadata !{i32 589835, metadata !344, i32 14, i32 0, metadata !345, i32 0} ; [ DW_TAG_lexical_block ]
!5842 = metadata !{i32 18, i32 0, metadata !5843, null}
!5843 = metadata !{i32 589835, metadata !385, i32 15, i32 0, metadata !388, i32 0} ; [ DW_TAG_lexical_block ]
!5844 = metadata !{i32 73, i32 0, metadata !5845, null}
!5845 = metadata !{i32 589835, metadata !424, i32 70, i32 0, metadata !427, i32 0} ; [ DW_TAG_lexical_block ]
!5846 = metadata !{i32 77, i32 0, metadata !5845, null}
!5847 = metadata !{i32 85, i32 0, metadata !5845, null}
!5848 = metadata !{i32 86, i32 0, metadata !5845, null}
!5849 = metadata !{i32 87, i32 0, metadata !5845, null}
!5850 = metadata !{i32 90, i32 0, metadata !5845, null}
!5851 = metadata !{i32 95, i32 0, metadata !5845, null}
!5852 = metadata !{i32 103, i32 0, metadata !5845, null}
!5853 = metadata !{i32 106, i32 0, metadata !5845, null}
!5854 = metadata !{i32 110, i32 0, metadata !5845, null}
!5855 = metadata !{i32 111, i32 0, metadata !5845, null}
!5856 = metadata !{i32 112, i32 0, metadata !5845, null}
!5857 = metadata !{i32 114, i32 0, metadata !5845, null}
!5858 = metadata !{i32 119, i32 0, metadata !5845, null}
!5859 = metadata !{i32 98, i32 0, metadata !5845, null}
!5860 = metadata !{i32 124, i32 0, metadata !5845, null}
!5861 = metadata !{i32 125, i32 0, metadata !5845, null}
!5862 = metadata !{i32 126, i32 0, metadata !5845, null}
!5863 = metadata !{i32 127, i32 0, metadata !5845, null}
!5864 = metadata !{i32 129, i32 0, metadata !5845, null}
!5865 = metadata !{i32 150, i32 0, metadata !5845, null}
!5866 = metadata !{i32 18, i32 0, metadata !5867, null}
!5867 = metadata !{i32 589835, metadata !463, i32 15, i32 0, metadata !466, i32 0} ; [ DW_TAG_lexical_block ]
!5868 = metadata !{i32 19, i32 0, metadata !5867, null}
!5869 = metadata !{i32 22, i32 0, metadata !5867, null}
!5870 = metadata !{i32 23, i32 0, metadata !5867, null}
!5871 = metadata !{i32 19, i32 0, metadata !5872, null}
!5872 = metadata !{i32 589835, metadata !502, i32 15, i32 0, metadata !503, i32 0} ; [ DW_TAG_lexical_block ]
!5873 = metadata !{i32 33, i32 0, metadata !5872, null}
!5874 = metadata !{i32 35, i32 0, metadata !5872, null}
!5875 = metadata !{i32 37, i32 0, metadata !5872, null}
!5876 = metadata !{i32 39, i32 0, metadata !5872, null}
!5877 = metadata !{i32 41, i32 0, metadata !5872, null}
!5878 = metadata !{i32 25, i32 0, metadata !5879, null}
!5879 = metadata !{i32 589835, metadata !543, i32 24, i32 0, metadata !546, i32 0} ; [ DW_TAG_lexical_block ]
!5880 = metadata !{i32 27, i32 0, metadata !5879, null}
!5881 = metadata !{i32 177, i32 0, metadata !5882, null}
!5882 = metadata !{i32 589835, metadata !585, i32 173, i32 0, metadata !588, i32 0} ; [ DW_TAG_lexical_block ]
!5883 = metadata !{i32 178, i32 0, metadata !5882, null}
!5884 = metadata !{i32 179, i32 0, metadata !5882, null}
!5885 = metadata !{i32 181, i32 0, metadata !5882, null}
!5886 = metadata !{i32 28, i32 0, metadata !5887, null}
!5887 = metadata !{i32 589835, metadata !627, i32 25, i32 0, metadata !628, i32 0} ; [ DW_TAG_lexical_block ]
!5888 = metadata !{i32 22, i32 0, metadata !5889, null}
!5889 = metadata !{i32 589835, metadata !666, i32 16, i32 0, metadata !669, i32 0} ; [ DW_TAG_lexical_block ]
!5890 = metadata !{i32 27, i32 0, metadata !5889, null}
!5891 = metadata !{i32 28, i32 0, metadata !5889, null}
!5892 = metadata !{i32 32, i32 0, metadata !5889, null}
!5893 = metadata !{i32 33, i32 0, metadata !5889, null}
!5894 = metadata !{i32 36, i32 0, metadata !5889, null}
!5895 = metadata !{i32 46, i32 0, metadata !5896, null}
!5896 = metadata !{i32 589835, metadata !708, i32 29, i32 0, metadata !709, i32 0} ; [ DW_TAG_lexical_block ]
!5897 = metadata !{i32 51, i32 0, metadata !5896, null}
!5898 = metadata !{i32 52, i32 0, metadata !5896, null}
!5899 = metadata !{i32 58, i32 0, metadata !5896, null}
!5900 = metadata !{i32 63, i32 0, metadata !5896, null}
!5901 = metadata !{i32 64, i32 0, metadata !5896, null}
!5902 = metadata !{i32 65, i32 0, metadata !5896, null}
!5903 = metadata !{i32 68, i32 0, metadata !5896, null}
!5904 = metadata !{i32 69, i32 0, metadata !5896, null}
!5905 = metadata !{i32 71, i32 0, metadata !5896, null}
!5906 = metadata !{i32 77, i32 0, metadata !5896, null}
!5907 = metadata !{i32 22, i32 0, metadata !5908, null}
!5908 = metadata !{i32 589835, metadata !746, i32 18, i32 0, metadata !747, i32 0} ; [ DW_TAG_lexical_block ]
!5909 = metadata !{i32 23, i32 0, metadata !5908, null}
!5910 = metadata !{i32 24, i32 0, metadata !5908, null}
!5911 = metadata !{i32 26, i32 0, metadata !5908, null}
!5912 = metadata !{i32 27, i32 0, metadata !5908, null}
!5913 = metadata !{i32 29, i32 0, metadata !5908, null}
!5914 = metadata !{i32 25, i32 0, metadata !5908, null}
!5915 = metadata !{i32 31, i32 0, metadata !5908, null}
!5916 = metadata !{i32 221, i32 0, metadata !5917, null}
!5917 = metadata !{i32 589835, metadata !755, i32 220, i32 0, metadata !756, i32 0} ; [ DW_TAG_lexical_block ]
!5918 = metadata !{i32 222, i32 0, metadata !5917, null}
!5919 = metadata !{i32 223, i32 0, metadata !5917, null}
!5920 = metadata !{i32 255, i32 0, metadata !5917, null}
!5921 = metadata !{i32 258, i32 0, metadata !5922, null}
!5922 = metadata !{i32 589835, metadata !5917, i32 258, i32 0, metadata !756, i32 1} ; [ DW_TAG_lexical_block ]
!5923 = metadata !{i32 262, i32 0, metadata !5922, null}
!5924 = metadata !{i32 264, i32 0, metadata !5922, null}
!5925 = metadata !{i32 265, i32 0, metadata !5922, null}
!5926 = metadata !{i32 266, i32 0, metadata !5922, null}
!5927 = metadata !{i32 270, i32 0, metadata !5922, null}
!5928 = metadata !{i32 275, i32 0, metadata !5929, null}
!5929 = metadata !{i32 589835, metadata !5917, i32 275, i32 0, metadata !756, i32 2} ; [ DW_TAG_lexical_block ]
!5930 = metadata !{i32 279, i32 0, metadata !5929, null}
!5931 = metadata !{i32 281, i32 0, metadata !5929, null}
!5932 = metadata !{i32 282, i32 0, metadata !5929, null}
!5933 = metadata !{i32 283, i32 0, metadata !5929, null}
!5934 = metadata !{i32 287, i32 0, metadata !5929, null}
!5935 = metadata !{i32 253, i32 0, metadata !5917, null}
!5936 = metadata !{i32 293, i32 0, metadata !5917, null}
!5937 = metadata !{i32 294, i32 0, metadata !5917, null}
!5938 = metadata !{i32 295, i32 0, metadata !5917, null}
!5939 = metadata !{i32 307, i32 0, metadata !5940, null}
!5940 = metadata !{i32 589835, metadata !783, i32 302, i32 0, metadata !756, i32 3} ; [ DW_TAG_lexical_block ]
!5941 = metadata !{i32 309, i32 0, metadata !5940, null}
!5942 = metadata !{i32 311, i32 0, metadata !5940, null}
!5943 = metadata !{i32 315, i32 0, metadata !5940, null}
!5944 = metadata !{i32 317, i32 0, metadata !5940, null}
!5945 = metadata !{i32 318, i32 0, metadata !5940, null}
!5946 = metadata !{i32 320, i32 0, metadata !5940, null}
!5947 = metadata !{i32 322, i32 0, metadata !5940, null}
!5948 = metadata !{i32 323, i32 0, metadata !5940, null}
!5949 = metadata !{i32 325, i32 0, metadata !5940, null}
!5950 = metadata !{i32 326, i32 0, metadata !5940, null}
!5951 = metadata !{i32 328, i32 0, metadata !5940, null}
!5952 = metadata !{i32 360, i32 0, metadata !5940, null}
!5953 = metadata !{i32 424, i32 0, metadata !5954, null}
!5954 = metadata !{i32 589835, metadata !790, i32 423, i32 0, metadata !756, i32 4} ; [ DW_TAG_lexical_block ]
!5955 = metadata !{i32 425, i32 0, metadata !5954, null}
!5956 = metadata !{i32 426, i32 0, metadata !5954, null}
!5957 = metadata !{i32 428, i32 0, metadata !5954, null}
!5958 = metadata !{i32 429, i32 0, metadata !5954, null}
!5959 = metadata !{i32 431, i32 0, metadata !5954, null}
!5960 = metadata !{i32 433, i32 0, metadata !5954, null}
!5961 = metadata !{i32 435, i32 0, metadata !5954, null}
!5962 = metadata !{i32 436, i32 0, metadata !5954, null}
!5963 = metadata !{i32 437, i32 0, metadata !5954, null}
!5964 = metadata !{i32 438, i32 0, metadata !5954, null}
!5965 = metadata !{i32 453, i32 0, metadata !5954, null}
!5966 = metadata !{i32 459, i32 0, metadata !5954, null}
!5967 = metadata !{i32 460, i32 0, metadata !5954, null}
!5968 = metadata !{i32 461, i32 0, metadata !5954, null}
!5969 = metadata !{i32 462, i32 0, metadata !5954, null}
!5970 = metadata !{i32 464, i32 0, metadata !5954, null}
!5971 = metadata !{i32 469, i32 0, metadata !5954, null}
!5972 = metadata !{i32 471, i32 0, metadata !5954, null}
!5973 = metadata !{i32 472, i32 0, metadata !5954, null}
!5974 = metadata !{i32 473, i32 0, metadata !5954, null}
!5975 = metadata !{i32 479, i32 0, metadata !5954, null}
!5976 = metadata !{i32 478, i32 0, metadata !5954, null}
!5977 = metadata !{i32 480, i32 0, metadata !5954, null}
!5978 = metadata !{i32 488, i32 0, metadata !5954, null}
!5979 = metadata !{i32 490, i32 0, metadata !5954, null}
!5980 = metadata !{i32 492, i32 0, metadata !5954, null}
!5981 = metadata !{i32 494, i32 0, metadata !5954, null}
!5982 = metadata !{i32 495, i32 0, metadata !5954, null}
!5983 = metadata !{i32 496, i32 0, metadata !5954, null}
!5984 = metadata !{i32 497, i32 0, metadata !5954, null}
!5985 = metadata !{i32 499, i32 0, metadata !5954, null}
!5986 = metadata !{i32 505, i32 0, metadata !5954, null}
!5987 = metadata !{i32 509, i32 0, metadata !5954, null}
!5988 = metadata !{i32 510, i32 0, metadata !5954, null}
!5989 = metadata !{i32 511, i32 0, metadata !5954, null}
!5990 = metadata !{i32 517, i32 0, metadata !5954, null}
!5991 = metadata !{i32 519, i32 0, metadata !5954, null}
!5992 = metadata !{i32 520, i32 0, metadata !5954, null}
!5993 = metadata !{i32 521, i32 0, metadata !5954, null}
!5994 = metadata !{i32 522, i32 0, metadata !5954, null}
!5995 = metadata !{i32 528, i32 0, metadata !5954, null}
!5996 = metadata !{i32 547, i32 0, metadata !5954, null}
!5997 = metadata !{i32 554, i32 0, metadata !5998, null}
!5998 = metadata !{i32 589835, metadata !5954, i32 554, i32 0, metadata !756, i32 5} ; [ DW_TAG_lexical_block ]
!5999 = metadata !{i32 555, i32 0, metadata !5998, null}
!6000 = metadata !{i32 556, i32 0, metadata !5998, null}
!6001 = metadata !{i32 557, i32 0, metadata !5998, null}
!6002 = metadata !{i32 560, i32 0, metadata !5998, null}
!6003 = metadata !{i32 565, i32 0, metadata !5998, null}
!6004 = metadata !{i32 566, i32 0, metadata !5998, null}
!6005 = metadata !{i32 568, i32 0, metadata !5998, null}
!6006 = metadata !{i32 572, i32 0, metadata !5998, null}
!6007 = metadata !{i32 573, i32 0, metadata !5998, null}
!6008 = metadata !{i32 574, i32 0, metadata !5998, null}
!6009 = metadata !{i32 577, i32 0, metadata !5998, null}
!6010 = metadata !{i32 580, i32 0, metadata !5998, null}
!6011 = metadata !{i32 581, i32 0, metadata !5998, null}
!6012 = metadata !{i32 583, i32 0, metadata !5998, null}
!6013 = metadata !{i32 588, i32 0, metadata !5998, null}
!6014 = metadata !{i32 591, i32 0, metadata !5998, null}
!6015 = metadata !{i32 593, i32 0, metadata !5998, null}
!6016 = metadata !{i32 614, i32 0, metadata !5998, null}
!6017 = metadata !{i32 618, i32 0, metadata !5998, null}
!6018 = metadata !{i32 619, i32 0, metadata !5998, null}
!6019 = metadata !{i32 620, i32 0, metadata !5998, null}
!6020 = metadata !{i32 621, i32 0, metadata !5998, null}
!6021 = metadata !{i32 624, i32 0, metadata !5998, null}
!6022 = metadata !{i32 626, i32 0, metadata !5998, null}
!6023 = metadata !{i32 627, i32 0, metadata !5998, null}
!6024 = metadata !{i32 628, i32 0, metadata !5998, null}
!6025 = metadata !{i32 632, i32 0, metadata !5998, null}
!6026 = metadata !{i32 633, i32 0, metadata !5998, null}
!6027 = metadata !{i32 636, i32 0, metadata !5998, null}
!6028 = metadata !{i32 643, i32 0, metadata !5998, null}
!6029 = metadata !{i32 651, i32 0, metadata !5998, null}
!6030 = metadata !{i32 665, i32 0, metadata !5998, null}
!6031 = metadata !{i32 691, i32 0, metadata !5998, null}
!6032 = metadata !{i32 693, i32 0, metadata !5998, null}
!6033 = metadata !{i32 694, i32 0, metadata !5998, null}
!6034 = metadata !{i32 697, i32 0, metadata !5998, null}
!6035 = metadata !{i32 699, i32 0, metadata !5998, null}
!6036 = metadata !{i32 700, i32 0, metadata !5998, null}
!6037 = metadata !{i32 703, i32 0, metadata !5998, null}
!6038 = metadata !{i32 726, i32 0, metadata !5998, null}
!6039 = metadata !{i32 731, i32 0, metadata !5998, null}
!6040 = metadata !{i32 732, i32 0, metadata !5998, null}
!6041 = metadata !{i32 733, i32 0, metadata !5998, null}
!6042 = metadata !{i32 736, i32 0, metadata !5998, null}
!6043 = metadata !{i32 737, i32 0, metadata !5998, null}
!6044 = metadata !{i32 738, i32 0, metadata !5998, null}
!6045 = metadata !{i32 739, i32 0, metadata !5998, null}
!6046 = metadata !{i32 741, i32 0, metadata !5998, null}
!6047 = metadata !{i32 742, i32 0, metadata !5998, null}
!6048 = metadata !{i32 744, i32 0, metadata !5998, null}
!6049 = metadata !{i32 751, i32 0, metadata !5998, null}
!6050 = metadata !{i32 754, i32 0, metadata !5998, null}
!6051 = metadata !{i32 761, i32 0, metadata !5998, null}
!6052 = metadata !{i32 768, i32 0, metadata !5998, null}
!6053 = metadata !{i32 779, i32 0, metadata !5998, null}
!6054 = metadata !{i32 801, i32 0, metadata !5998, null}
!6055 = metadata !{i32 802, i32 0, metadata !5998, null}
!6056 = metadata !{i32 803, i32 0, metadata !5998, null}
!6057 = metadata !{i32 804, i32 0, metadata !5998, null}
!6058 = metadata !{i32 811, i32 0, metadata !6059, null}
!6059 = metadata !{i32 589835, metadata !5954, i32 811, i32 0, metadata !756, i32 6} ; [ DW_TAG_lexical_block ]
!6060 = metadata !{i32 812, i32 0, metadata !6059, null}
!6061 = metadata !{i32 815, i32 0, metadata !6059, null}
!6062 = metadata !{i32 816, i32 0, metadata !6059, null}
!6063 = metadata !{i32 818, i32 0, metadata !6059, null}
!6064 = metadata !{i32 820, i32 0, metadata !6059, null}
!6065 = metadata !{i32 827, i32 0, metadata !6059, null}
!6066 = metadata !{i32 834, i32 0, metadata !6059, null}
!6067 = metadata !{i32 843, i32 0, metadata !6059, null}
!6068 = metadata !{i32 864, i32 0, metadata !6059, null}
!6069 = metadata !{i32 865, i32 0, metadata !6059, null}
!6070 = metadata !{i32 1085, i32 0, metadata !6059, null}
!6071 = metadata !{i32 1087, i32 0, metadata !6059, null}
!6072 = metadata !{i32 1090, i32 0, metadata !6059, null}
!6073 = metadata !{i32 1092, i32 0, metadata !6059, null}
!6074 = metadata !{i32 1093, i32 0, metadata !6059, null}
!6075 = metadata !{i32 1096, i32 0, metadata !6059, null}
!6076 = metadata !{i32 1097, i32 0, metadata !6059, null}
!6077 = metadata !{i32 1102, i32 0, metadata !6059, null}
!6078 = metadata !{i32 1104, i32 0, metadata !6059, null}
!6079 = metadata !{i32 1107, i32 0, metadata !6059, null}
!6080 = metadata !{i32 1109, i32 0, metadata !6059, null}
!6081 = metadata !{i32 1111, i32 0, metadata !6059, null}
!6082 = metadata !{i32 1134, i32 0, metadata !6059, null}
!6083 = metadata !{i32 1139, i32 0, metadata !6059, null}
!6084 = metadata !{i32 1140, i32 0, metadata !6059, null}
!6085 = metadata !{i32 1141, i32 0, metadata !6059, null}
!6086 = metadata !{i32 1143, i32 0, metadata !6059, null}
!6087 = metadata !{i32 1148, i32 0, metadata !6059, null}
!6088 = metadata !{i32 1149, i32 0, metadata !6059, null}
!6089 = metadata !{i32 1152, i32 0, metadata !6059, null}
!6090 = metadata !{i32 1162, i32 0, metadata !6091, null}
!6091 = metadata !{i32 589835, metadata !803, i32 1159, i32 0, metadata !756, i32 7} ; [ DW_TAG_lexical_block ]
!6092 = metadata !{i32 1163, i32 0, metadata !6091, null}
!6093 = metadata !{i32 1165, i32 0, metadata !6091, null}
!6094 = metadata !{i32 1168, i32 0, metadata !6091, null}
!6095 = metadata !{i32 1169, i32 0, metadata !6091, null}
!6096 = metadata !{i32 1170, i32 0, metadata !6091, null}
!6097 = metadata !{i32 1172, i32 0, metadata !6091, null}
!6098 = metadata !{i32 1178, i32 0, metadata !6099, null}
!6099 = metadata !{i32 589835, metadata !806, i32 1177, i32 0, metadata !756, i32 8} ; [ DW_TAG_lexical_block ]
!6100 = metadata !{i32 1188, i32 0, metadata !6101, null}
!6101 = metadata !{i32 589835, metadata !809, i32 1187, i32 0, metadata !756, i32 9} ; [ DW_TAG_lexical_block ]
!6102 = metadata !{i32 1200, i32 0, metadata !6103, null}
!6103 = metadata !{i32 589835, metadata !812, i32 1199, i32 0, metadata !756, i32 10} ; [ DW_TAG_lexical_block ]
!6104 = metadata !{i32 49, i32 0, metadata !6105, null}
!6105 = metadata !{i32 589835, metadata !813, i32 46, i32 0, metadata !814, i32 0} ; [ DW_TAG_lexical_block ]
!6106 = metadata !{i32 50, i32 0, metadata !6105, null}
!6107 = metadata !{i32 51, i32 0, metadata !6105, null}
!6108 = metadata !{i32 56, i32 0, metadata !6105, null}
!6109 = metadata !{i32 57, i32 0, metadata !6105, null}
!6110 = metadata !{i32 58, i32 0, metadata !6105, null}
!6111 = metadata !{i32 60, i32 0, metadata !6105, null}
!6112 = metadata !{i32 62, i32 0, metadata !6105, null}
!6113 = metadata !{i32 63, i32 0, metadata !6105, null}
!6114 = metadata !{i32 67, i32 0, metadata !6105, null}
!6115 = metadata !{i32 64, i32 0, metadata !6105, null}
!6116 = metadata !{i32 75, i32 0, metadata !6117, null}
!6117 = metadata !{i32 589835, metadata !817, i32 73, i32 0, metadata !814, i32 1} ; [ DW_TAG_lexical_block ]
!6118 = metadata !{i32 77, i32 0, metadata !6117, null}
!6119 = metadata !{i32 83, i32 0, metadata !6120, null}
!6120 = metadata !{i32 589835, metadata !818, i32 82, i32 0, metadata !814, i32 2} ; [ DW_TAG_lexical_block ]
!6121 = metadata !{i32 85, i32 0, metadata !6120, null}
!6122 = metadata !{i32 86, i32 0, metadata !6120, null}
!6123 = metadata !{i32 88, i32 0, metadata !6120, null}
!6124 = metadata !{i32 89, i32 0, metadata !6120, null}
!6125 = metadata !{i32 92, i32 0, metadata !6120, null}
!6126 = metadata !{i32 94, i32 0, metadata !6120, null}
!6127 = metadata !{i32 97, i32 0, metadata !6120, null}
!6128 = metadata !{i32 103, i32 0, metadata !6129, null}
!6129 = metadata !{i32 589835, metadata !868, i32 101, i32 0, metadata !814, i32 3} ; [ DW_TAG_lexical_block ]
!6130 = metadata !{i32 104, i32 0, metadata !6129, null}
!6131 = metadata !{i32 105, i32 0, metadata !6129, null}
!6132 = metadata !{i32 107, i32 0, metadata !6129, null}
!6133 = metadata !{i32 111, i32 0, metadata !6134, null}
!6134 = metadata !{i32 589835, metadata !869, i32 110, i32 0, metadata !814, i32 4} ; [ DW_TAG_lexical_block ]
!6135 = metadata !{i32 114, i32 0, metadata !6134, null}
!6136 = metadata !{i32 116, i32 0, metadata !6134, null}
!6137 = metadata !{i32 124, i32 0, metadata !6138, null}
!6138 = metadata !{i32 589835, metadata !872, i32 121, i32 0, metadata !814, i32 5} ; [ DW_TAG_lexical_block ]
!6139 = metadata !{i32 125, i32 0, metadata !6138, null}
!6140 = metadata !{i32 131, i32 0, metadata !6138, null}
!6141 = metadata !{i32 133, i32 0, metadata !6138, null}
!6142 = metadata !{i32 139, i32 0, metadata !6138, null}
!6143 = metadata !{i32 143, i32 0, metadata !6138, null}
!6144 = metadata !{i32 149, i32 0, metadata !6145, null}
!6145 = metadata !{i32 589835, metadata !877, i32 148, i32 0, metadata !814, i32 6} ; [ DW_TAG_lexical_block ]
!6146 = metadata !{i32 152, i32 0, metadata !6145, null}
!6147 = metadata !{i32 154, i32 0, metadata !6145, null}
!6148 = metadata !{i32 160, i32 0, metadata !6149, null}
!6149 = metadata !{i32 589835, metadata !878, i32 159, i32 0, metadata !814, i32 7} ; [ DW_TAG_lexical_block ]
!6150 = metadata !{i32 164, i32 0, metadata !6149, null}
!6151 = metadata !{i32 163, i32 0, metadata !6149, null}
!6152 = metadata !{i32 170, i32 0, metadata !6149, null}
!6153 = metadata !{i32 178, i32 0, metadata !6154, null}
!6154 = metadata !{i32 589835, metadata !879, i32 174, i32 0, metadata !814, i32 8} ; [ DW_TAG_lexical_block ]
!6155 = metadata !{i32 180, i32 0, metadata !6154, null}
!6156 = metadata !{i32 181, i32 0, metadata !6154, null}
!6157 = metadata !{i32 183, i32 0, metadata !6154, null}
!6158 = metadata !{i32 184, i32 0, metadata !6154, null}
!6159 = metadata !{i32 185, i32 0, metadata !6154, null}
!6160 = metadata !{i32 188, i32 0, metadata !6154, null}
!6161 = metadata !{i32 194, i32 0, metadata !6162, null}
!6162 = metadata !{i32 589835, metadata !880, i32 192, i32 0, metadata !814, i32 9} ; [ DW_TAG_lexical_block ]
!6163 = metadata !{i32 195, i32 0, metadata !6162, null}
!6164 = metadata !{i32 196, i32 0, metadata !6162, null}
!6165 = metadata !{i32 197, i32 0, metadata !6162, null}
!6166 = metadata !{i32 198, i32 0, metadata !6162, null}
!6167 = metadata !{i32 201, i32 0, metadata !6162, null}
!6168 = metadata !{i32 205, i32 0, metadata !6162, null}
!6169 = metadata !{i32 206, i32 0, metadata !6162, null}
!6170 = metadata !{i32 207, i32 0, metadata !6162, null}
!6171 = metadata !{i32 209, i32 0, metadata !6162, null}
!6172 = metadata !{i32 217, i32 0, metadata !885, null}
!6173 = metadata !{i32 217, i32 0, metadata !6174, null}
!6174 = metadata !{i32 589835, metadata !885, i32 217, i32 0, metadata !888, i32 0} ; [ DW_TAG_lexical_block ]
!6175 = metadata !{i32 235, i32 0, metadata !895, null}
!6176 = metadata !{i32 235, i32 0, metadata !6177, null}
!6177 = metadata !{i32 589835, metadata !895, i32 235, i32 0, metadata !898, i32 0} ; [ DW_TAG_lexical_block ]
!6178 = metadata !{i32 259, i32 0, metadata !905, null}
!6179 = metadata !{i32 259, i32 0, metadata !6180, null}
!6180 = metadata !{i32 589835, metadata !905, i32 259, i32 0, metadata !908, i32 0} ; [ DW_TAG_lexical_block ]
!6181 = metadata !{i32 271, i32 0, metadata !915, null}
!6182 = metadata !{i32 271, i32 0, metadata !6183, null}
!6183 = metadata !{i32 589835, metadata !915, i32 271, i32 0, metadata !918, i32 0} ; [ DW_TAG_lexical_block ]
!6184 = metadata !{i32 318, i32 0, metadata !6185, null}
!6185 = metadata !{i32 589835, metadata !925, i32 317, i32 0, metadata !928, i32 0} ; [ DW_TAG_lexical_block ]
!6186 = metadata !{i32 320, i32 0, metadata !6185, null}
!6187 = metadata !{i32 322, i32 0, metadata !6185, null}
!6188 = metadata !{i32 323, i32 0, metadata !6185, null}
!6189 = metadata !{i32 324, i32 0, metadata !6185, null}
!6190 = metadata !{i32 326, i32 0, metadata !6185, null}
!6191 = metadata !{i32 328, i32 0, metadata !6185, null}
!6192 = metadata !{i32 329, i32 0, metadata !6185, null}
!6193 = metadata !{i32 330, i32 0, metadata !6185, null}
!6194 = metadata !{i32 332, i32 0, metadata !6185, null}
!6195 = metadata !{i32 287, i32 0, metadata !6196, null}
!6196 = metadata !{i32 589835, metadata !961, i32 280, i32 0, metadata !964, i32 0} ; [ DW_TAG_lexical_block ]
!6197 = metadata !{i32 288, i32 0, metadata !6196, null}
!6198 = metadata !{i32 291, i32 0, metadata !6196, null}
!6199 = metadata !{i32 292, i32 0, metadata !6196, null}
!6200 = metadata !{i32 293, i32 0, metadata !6196, null}
!6201 = metadata !{i32 294, i32 0, metadata !6196, null}
!6202 = metadata !{i32 295, i32 0, metadata !6196, null}
!6203 = metadata !{i32 296, i32 0, metadata !6196, null}
!6204 = metadata !{i32 298, i32 0, metadata !6196, null}
!6205 = metadata !{i32 302, i32 0, metadata !6196, null}
!6206 = metadata !{i32 319, i32 0, metadata !6196, null}
!6207 = metadata !{i32 321, i32 0, metadata !6196, null}
!6208 = metadata !{i32 322, i32 0, metadata !6196, null}
!6209 = metadata !{i32 323, i32 0, metadata !6196, null}
!6210 = metadata !{i32 326, i32 0, metadata !6196, null}
!6211 = metadata !{i32 252, i32 0, metadata !6212, null}
!6212 = metadata !{i32 589835, metadata !983, i32 251, i32 0, metadata !986, i32 0} ; [ DW_TAG_lexical_block ]
!6213 = metadata !{i32 1020, i32 0, metadata !6214, null}
!6214 = metadata !{i32 589835, metadata !999, i32 1018, i32 0, metadata !1002, i32 0} ; [ DW_TAG_lexical_block ]
!6215 = metadata !{i32 1022, i32 0, metadata !6214, null}
!6216 = metadata !{i32 1023, i32 0, metadata !6214, null}
!6217 = metadata !{i32 20, i32 0, metadata !6218, null}
!6218 = metadata !{i32 589835, metadata !1014, i32 19, i32 0, metadata !1015, i32 0} ; [ DW_TAG_lexical_block ]
!6219 = metadata !{i32 29, i32 0, metadata !6218, null}
!6220 = metadata !{i32 30, i32 0, metadata !6218, null}
!6221 = metadata !{i32 32, i32 0, metadata !6218, null}
!6222 = metadata !{i32 33, i32 0, metadata !6218, null}
!6223 = metadata !{i32 28, i32 0, metadata !6218, null}
!6224 = metadata !{i32 36, i32 0, metadata !6218, null}
!6225 = metadata !{i32 19, i32 0, metadata !6226, null}
!6226 = metadata !{i32 589835, metadata !1024, i32 18, i32 0, metadata !1025, i32 0} ; [ DW_TAG_lexical_block ]
!6227 = metadata !{i32 20, i32 0, metadata !6226, null}
!6228 = metadata !{i32 31, i32 0, metadata !6226, null}
!6229 = metadata !{i32 33, i32 0, metadata !6226, null}
!6230 = metadata !{i32 35, i32 0, metadata !6226, null}
!6231 = metadata !{i32 22, i32 0, metadata !6232, null}
!6232 = metadata !{i32 589835, metadata !1034, i32 21, i32 0, metadata !1035, i32 0} ; [ DW_TAG_lexical_block ]
!6233 = metadata !{i32 23, i32 0, metadata !6232, null}
!6234 = metadata !{i32 31, i32 0, metadata !6232, null}
!6235 = metadata !{i32 32, i32 0, metadata !6232, null}
!6236 = metadata !{i32 30, i32 0, metadata !6232, null}
!6237 = metadata !{i32 36, i32 0, metadata !6232, null}
!6238 = metadata !{i32 24, i32 0, metadata !6239, null}
!6239 = metadata !{i32 589835, metadata !1043, i32 15, i32 0, metadata !1044, i32 0} ; [ DW_TAG_lexical_block ]
!6240 = metadata !{i32 27, i32 0, metadata !6239, null}
!6241 = metadata !{i32 28, i32 0, metadata !6239, null}
!6242 = metadata !{i32 30, i32 0, metadata !6239, null}
!6243 = metadata !{i32 26, i32 0, metadata !6239, null}
!6244 = metadata !{i32 33, i32 0, metadata !6239, null}
!6245 = metadata !{i32 1035, i32 0, metadata !6246, null}
!6246 = metadata !{i32 589835, metadata !1053, i32 1031, i32 0, metadata !1056, i32 0} ; [ DW_TAG_lexical_block ]
!6247 = metadata !{i32 1036, i32 0, metadata !6246, null}
!6248 = metadata !{i32 1038, i32 0, metadata !6246, null}
!6249 = metadata !{i32 1041, i32 0, metadata !6246, null}
!6250 = metadata !{i32 18, i32 0, metadata !6251, null}
!6251 = metadata !{i32 589835, metadata !1064, i32 17, i32 0, metadata !1067, i32 0} ; [ DW_TAG_lexical_block ]
!6252 = metadata !{i32 20, i32 0, metadata !6251, null}
!6253 = metadata !{i32 59, i32 0, metadata !6254, null}
!6254 = metadata !{i32 589835, metadata !1071, i32 52, i32 0, metadata !1072, i32 0} ; [ DW_TAG_lexical_block ]
!6255 = metadata !{i32 64, i32 0, metadata !6254, null}
!6256 = metadata !{i32 65, i32 0, metadata !6254, null}
!6257 = metadata !{i32 66, i32 0, metadata !6254, null}
!6258 = metadata !{i32 68, i32 0, metadata !6254, null}
!6259 = metadata !{i32 69, i32 0, metadata !6254, null}
!6260 = metadata !{i32 70, i32 0, metadata !6254, null}
!6261 = metadata !{i32 73, i32 0, metadata !6254, null}
!6262 = metadata !{i32 74, i32 0, metadata !6254, null}
!6263 = metadata !{i32 75, i32 0, metadata !6254, null}
!6264 = metadata !{i32 76, i32 0, metadata !6254, null}
!6265 = metadata !{i32 79, i32 0, metadata !6254, null}
!6266 = metadata !{i32 80, i32 0, metadata !6254, null}
!6267 = metadata !{i32 81, i32 0, metadata !6254, null}
!6268 = metadata !{i32 82, i32 0, metadata !6254, null}
!6269 = metadata !{i32 83, i32 0, metadata !6254, null}
!6270 = metadata !{i32 85, i32 0, metadata !6254, null}
!6271 = metadata !{i32 86, i32 0, metadata !6254, null}
!6272 = metadata !{i32 87, i32 0, metadata !6254, null}
!6273 = metadata !{i32 88, i32 0, metadata !6254, null}
!6274 = metadata !{i32 89, i32 0, metadata !6254, null}
!6275 = metadata !{i32 91, i32 0, metadata !6254, null}
!6276 = metadata !{i32 92, i32 0, metadata !6254, null}
!6277 = metadata !{i32 97, i32 0, metadata !6254, null}
!6278 = metadata !{i32 98, i32 0, metadata !6254, null}
!6279 = metadata !{i32 101, i32 0, metadata !6254, null}
!6280 = metadata !{i32 103, i32 0, metadata !6254, null}
!6281 = metadata !{i32 104, i32 0, metadata !6254, null}
!6282 = metadata !{i32 107, i32 0, metadata !6254, null}
!6283 = metadata !{i32 108, i32 0, metadata !6254, null}
!6284 = metadata !{i32 109, i32 0, metadata !6254, null}
!6285 = metadata !{i32 111, i32 0, metadata !6254, null}
!6286 = metadata !{i32 114, i32 0, metadata !6254, null}
!6287 = metadata !{i32 121, i32 0, metadata !6254, null}
!6288 = metadata !{i32 122, i32 0, metadata !6254, null}
!6289 = metadata !{i32 123, i32 0, metadata !6254, null}
!6290 = metadata !{i32 125, i32 0, metadata !6254, null}
!6291 = metadata !{i32 120, i32 0, metadata !6254, null}
!6292 = metadata !{i32 129, i32 0, metadata !6254, null}
!6293 = metadata !{i32 130, i32 0, metadata !6254, null}
!6294 = metadata !{i32 131, i32 0, metadata !6254, null}
!6295 = metadata !{i32 133, i32 0, metadata !6254, null}
!6296 = metadata !{i32 135, i32 0, metadata !6254, null}
!6297 = metadata !{i32 136, i32 0, metadata !6254, null}
!6298 = metadata !{i32 137, i32 0, metadata !6254, null}
!6299 = metadata !{i32 139, i32 0, metadata !6254, null}
!6300 = metadata !{i32 140, i32 0, metadata !6254, null}
!6301 = metadata !{i32 144, i32 0, metadata !6254, null}
!6302 = metadata !{i32 145, i32 0, metadata !6254, null}
!6303 = metadata !{i32 146, i32 0, metadata !6254, null}
!6304 = metadata !{i32 150, i32 0, metadata !6254, null}
!6305 = metadata !{i32 152, i32 0, metadata !6254, null}
!6306 = metadata !{i32 155, i32 0, metadata !6254, null}
!6307 = metadata !{i32 157, i32 0, metadata !6254, null}
!6308 = metadata !{i32 158, i32 0, metadata !6254, null}
!6309 = metadata !{i32 161, i32 0, metadata !6254, null}
!6310 = metadata !{i32 95, i32 0, metadata !6254, null}
!6311 = metadata !{i32 164, i32 0, metadata !6254, null}
!6312 = metadata !{i32 165, i32 0, metadata !6254, null}
!6313 = metadata !{i32 167, i32 0, metadata !6254, null}
!6314 = metadata !{i32 168, i32 0, metadata !6254, null}
!6315 = metadata !{i32 163, i32 0, metadata !6316, null}
!6316 = metadata !{i32 589835, metadata !1080, i32 162, i32 0, metadata !1083, i32 0} ; [ DW_TAG_lexical_block ]
!6317 = metadata !{i32 24, i32 0, metadata !6318, null}
!6318 = metadata !{i32 589835, metadata !1091, i32 20, i32 0, metadata !1092, i32 0} ; [ DW_TAG_lexical_block ]
!6319 = metadata !{i32 25, i32 0, metadata !6318, null}
!6320 = metadata !{i32 26, i32 0, metadata !6318, null}
!6321 = metadata !{i32 27, i32 0, metadata !6318, null}
!6322 = metadata !{i32 23, i32 0, metadata !6323, null}
!6323 = metadata !{i32 589835, metadata !1104, i32 19, i32 0, metadata !1105, i32 0} ; [ DW_TAG_lexical_block ]
!6324 = metadata !{i32 24, i32 0, metadata !6323, null}
!6325 = metadata !{i32 25, i32 0, metadata !6323, null}
!6326 = metadata !{i32 27, i32 0, metadata !6323, null}
!6327 = metadata !{i32 46, i32 0, metadata !6328, null}
!6328 = metadata !{i32 589835, metadata !1114, i32 41, i32 0, metadata !1115, i32 0} ; [ DW_TAG_lexical_block ]
!6329 = metadata !{i32 47, i32 0, metadata !6328, null}
!6330 = metadata !{i32 21, i32 0, metadata !6328, null}
!6331 = metadata !{i32 23, i32 0, metadata !6328, null}
!6332 = metadata !{i32 24, i32 0, metadata !6328, null}
!6333 = metadata !{i32 25, i32 0, metadata !6328, null}
!6334 = metadata !{i32 26, i32 0, metadata !6328, null}
!6335 = metadata !{i32 27, i32 0, metadata !6328, null}
!6336 = metadata !{i32 28, i32 0, metadata !6328, null}
!6337 = metadata !{i32 30, i32 0, metadata !6328, null}
!6338 = metadata !{i32 41, i32 0, metadata !6328, null}
!6339 = metadata !{i32 42, i32 0, metadata !6328, null}
!6340 = metadata !{i32 53, i32 0, metadata !6328, null}
!6341 = metadata !{i32 54, i32 0, metadata !6328, null}
!6342 = metadata !{i32 56, i32 0, metadata !6343, null}
!6343 = metadata !{i32 589835, metadata !6328, i32 56, i32 0, metadata !6344, i32 1} ; [ DW_TAG_lexical_block ]
!6344 = metadata !{i32 589865, metadata !"internal_statvfs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/statfs", metadata !1116} ; [ DW_TAG_file_type ]
!6345 = metadata !{i32 60, i32 0, metadata !6343, null}
!6346 = metadata !{i32 61, i32 0, metadata !6343, null}
!6347 = metadata !{i32 62, i32 0, metadata !6343, null}
!6348 = metadata !{i32 64, i32 0, metadata !6343, null}
!6349 = metadata !{i32 73, i32 0, metadata !6350, null}
!6350 = metadata !{i32 589835, metadata !6351, i32 73, i32 0, metadata !6344, i32 3} ; [ DW_TAG_lexical_block ]
!6351 = metadata !{i32 589835, metadata !6343, i32 73, i32 0, metadata !6344, i32 2} ; [ DW_TAG_lexical_block ]
!6352 = metadata !{i32 78, i32 0, metadata !6353, null}
!6353 = metadata !{i32 589835, metadata !6350, i32 78, i32 0, metadata !6344, i32 4} ; [ DW_TAG_lexical_block ]
!6354 = metadata !{i32 82, i32 0, metadata !6353, null}
!6355 = metadata !{i32 83, i32 0, metadata !6353, null}
!6356 = metadata !{i32 84, i32 0, metadata !6353, null}
!6357 = metadata !{i32 85, i32 0, metadata !6353, null}
!6358 = metadata !{i32 87, i32 0, metadata !6353, null}
!6359 = metadata !{i32 88, i32 0, metadata !6353, null}
!6360 = metadata !{i32 89, i32 0, metadata !6353, null}
!6361 = metadata !{i32 90, i32 0, metadata !6353, null}
!6362 = metadata !{i32 91, i32 0, metadata !6353, null}
!6363 = metadata !{i32 92, i32 0, metadata !6353, null}
!6364 = metadata !{i32 93, i32 0, metadata !6353, null}
!6365 = metadata !{i32 94, i32 0, metadata !6353, null}
!6366 = metadata !{i32 95, i32 0, metadata !6353, null}
!6367 = metadata !{i32 96, i32 0, metadata !6353, null}
!6368 = metadata !{i32 97, i32 0, metadata !6353, null}
!6369 = metadata !{i32 98, i32 0, metadata !6353, null}
!6370 = metadata !{i32 81, i32 0, metadata !6353, null}
!6371 = metadata !{i32 68, i32 0, metadata !6351, null}
!6372 = metadata !{i32 107, i32 0, metadata !6351, null}
!6373 = metadata !{i32 110, i32 0, metadata !6343, null}
!6374 = metadata !{i32 258, i32 0, metadata !6375, null}
!6375 = metadata !{i32 589835, metadata !1146, i32 211, i32 0, metadata !1147, i32 0} ; [ DW_TAG_lexical_block ]
!6376 = metadata !{i32 261, i32 0, metadata !6375, null}
!6377 = metadata !{i32 262, i32 0, metadata !6375, null}
!6378 = metadata !{i32 274, i32 0, metadata !6375, null}
!6379 = metadata !{i32 280, i32 0, metadata !6380, null}
!6380 = metadata !{i32 589835, metadata !1150, i32 278, i32 0, metadata !1147, i32 1} ; [ DW_TAG_lexical_block ]
!6381 = metadata !{i32 282, i32 0, metadata !6380, null}
!6382 = metadata !{i32 283, i32 0, metadata !6380, null}
!6383 = metadata !{i32 284, i32 0, metadata !6380, null}
!6384 = metadata !{i32 291, i32 0, metadata !6380, null}
!6385 = metadata !{i32 19, i32 0, metadata !1151, null}
!6386 = metadata !{i32 21, i32 0, metadata !6387, null}
!6387 = metadata !{i32 589835, metadata !1151, i32 19, i32 0, metadata !1152, i32 0} ; [ DW_TAG_lexical_block ]
!6388 = metadata !{i32 22, i32 0, metadata !6387, null}
!6389 = metadata !{i32 24, i32 0, metadata !6387, null}
!6390 = metadata !{i32 26, i32 0, metadata !6387, null}
!6391 = metadata !{i32 21, i32 0, metadata !1161, null}
!6392 = metadata !{i32 34, i32 0, metadata !6393, null}
!6393 = metadata !{i32 589835, metadata !1161, i32 21, i32 0, metadata !1162, i32 0} ; [ DW_TAG_lexical_block ]
!6394 = metadata !{i32 37, i32 0, metadata !6393, null}
!6395 = metadata !{i32 20, i32 0, metadata !6396, null}
!6396 = metadata !{i32 589835, metadata !1170, i32 19, i32 0, metadata !1171, i32 0} ; [ DW_TAG_lexical_block ]
!6397 = metadata !{i32 27, i32 0, metadata !6396, null}
!6398 = metadata !{i32 30, i32 0, metadata !6396, null}
!6399 = metadata !{i32 26, i32 0, metadata !6400, null}
!6400 = metadata !{i32 589835, metadata !1179, i32 24, i32 0, metadata !1180, i32 0} ; [ DW_TAG_lexical_block ]
!6401 = metadata !{i32 28, i32 0, metadata !6400, null}
!6402 = metadata !{i32 29, i32 0, metadata !6400, null}
!6403 = metadata !{i32 32, i32 0, metadata !6400, null}
!6404 = metadata !{i32 22, i32 0, metadata !6405, null}
!6405 = metadata !{i32 589835, metadata !1188, i32 19, i32 0, metadata !1189, i32 0} ; [ DW_TAG_lexical_block ]
!6406 = metadata !{i32 24, i32 0, metadata !6405, null}
!6407 = metadata !{i32 30, i32 0, metadata !6408, null}
!6408 = metadata !{i32 589835, metadata !1199, i32 18, i32 0, metadata !1200, i32 0} ; [ DW_TAG_lexical_block ]
!6409 = metadata !{i32 32, i32 0, metadata !6408, null}
!6410 = metadata !{i32 37, i32 0, metadata !6408, null}
!6411 = metadata !{i32 22, i32 0, metadata !6412, null}
!6412 = metadata !{i32 589835, metadata !1211, i32 21, i32 0, metadata !1212, i32 0} ; [ DW_TAG_lexical_block ]
!6413 = metadata !{i32 31, i32 0, metadata !6412, null}
!6414 = metadata !{i32 32, i32 0, metadata !6412, null}
!6415 = metadata !{i32 30, i32 0, metadata !6412, null}
!6416 = metadata !{i32 35, i32 0, metadata !6412, null}
!6417 = metadata !{i32 21, i32 0, metadata !6418, null}
!6418 = metadata !{i32 589835, metadata !1222, i32 18, i32 0, metadata !1223, i32 0} ; [ DW_TAG_lexical_block ]
!6419 = metadata !{i32 23, i32 0, metadata !6418, null}
!6420 = metadata !{i32 24, i32 0, metadata !6418, null}
!6421 = metadata !{i32 26, i32 0, metadata !6418, null}
!6422 = metadata !{i32 28, i32 0, metadata !6418, null}
!6423 = metadata !{i32 20, i32 0, metadata !6424, null}
!6424 = metadata !{i32 589835, metadata !1232, i32 19, i32 0, metadata !1233, i32 0} ; [ DW_TAG_lexical_block ]
!6425 = metadata !{i32 21, i32 0, metadata !6424, null}
!6426 = metadata !{i32 24, i32 0, metadata !6424, null}
!6427 = metadata !{i32 25, i32 0, metadata !6424, null}
!6428 = metadata !{i32 26, i32 0, metadata !6424, null}
!6429 = metadata !{i32 23, i32 0, metadata !6424, null}
!6430 = metadata !{i32 29, i32 0, metadata !6424, null}
!6431 = metadata !{i32 386, i32 0, metadata !6432, null}
!6432 = metadata !{i32 589835, metadata !1243, i32 385, i32 0, metadata !1246, i32 0} ; [ DW_TAG_lexical_block ]
!6433 = metadata !{i32 1036, i32 0, metadata !6434, null}
!6434 = metadata !{i32 589835, metadata !1256, i32 1035, i32 0, metadata !1259, i32 0} ; [ DW_TAG_lexical_block ]
!6435 = metadata !{i32 1038, i32 0, metadata !6434, null}
!6436 = metadata !{i32 1140, i32 0, metadata !6437, null}
!6437 = metadata !{i32 589835, metadata !1270, i32 1136, i32 0, metadata !1273, i32 0} ; [ DW_TAG_lexical_block ]
!6438 = metadata !{i32 1141, i32 0, metadata !6437, null}
!6439 = metadata !{i32 1143, i32 0, metadata !6437, null}
!6440 = metadata !{i32 1144, i32 0, metadata !6437, null}
!6441 = metadata !{i32 1146, i32 0, metadata !6437, null}
!6442 = metadata !{i32 1149, i32 0, metadata !6437, null}
!6443 = metadata !{i32 1153, i32 0, metadata !6437, null}
!6444 = metadata !{i32 1168, i32 0, metadata !6445, null}
!6445 = metadata !{i32 589835, metadata !1282, i32 1167, i32 0, metadata !1285, i32 0} ; [ DW_TAG_lexical_block ]
!6446 = metadata !{i32 18, i32 0, metadata !6447, null}
!6447 = metadata !{i32 589835, metadata !1291, i32 17, i32 0, metadata !1292, i32 0} ; [ DW_TAG_lexical_block ]
!6448 = metadata !{i32 22, i32 0, metadata !6447, null}
!6449 = metadata !{i32 23, i32 0, metadata !6447, null}
!6450 = metadata !{i32 24, i32 0, metadata !6447, null}
!6451 = metadata !{i32 33, i32 0, metadata !6447, null}
!6452 = metadata !{i32 34, i32 0, metadata !6447, null}
!6453 = metadata !{i32 12, i32 0, metadata !6454, null}
!6454 = metadata !{i32 589835, metadata !1301, i32 11, i32 0, metadata !1302, i32 0} ; [ DW_TAG_lexical_block ]
!6455 = metadata !{i32 161, i32 0, metadata !6456, null}
!6456 = metadata !{i32 589835, metadata !1308, i32 158, i32 0, metadata !1311, i32 0} ; [ DW_TAG_lexical_block ]
!6457 = metadata !{i32 162, i32 0, metadata !6456, null}
!6458 = metadata !{i32 165, i32 0, metadata !6456, null}
!6459 = metadata !{i32 166, i32 0, metadata !6456, null}
!6460 = metadata !{i32 167, i32 0, metadata !6456, null}
!6461 = metadata !{i32 170, i32 0, metadata !6456, null}
!6462 = metadata !{i32 171, i32 0, metadata !6456, null}
!6463 = metadata !{i32 172, i32 0, metadata !6456, null}
!6464 = metadata !{i32 174, i32 0, metadata !6456, null}
!6465 = metadata !{i32 176, i32 0, metadata !6456, null}
!6466 = metadata !{i32 117, i32 0, metadata !1320, null}
!6467 = metadata !{i32 117, i32 0, metadata !6468, null}
!6468 = metadata !{i32 589835, metadata !1320, i32 117, i32 0, metadata !1323, i32 0} ; [ DW_TAG_lexical_block ]
!6469 = metadata !{i32 118, i32 0, metadata !1336, null}
!6470 = metadata !{i32 118, i32 0, metadata !6471, null}
!6471 = metadata !{i32 589835, metadata !1336, i32 118, i32 0, metadata !1323, i32 1} ; [ DW_TAG_lexical_block ]
!6472 = metadata !{i32 119, i32 0, metadata !1337, null}
!6473 = metadata !{i32 119, i32 0, metadata !6474, null}
!6474 = metadata !{i32 589835, metadata !1337, i32 119, i32 0, metadata !1323, i32 2} ; [ DW_TAG_lexical_block ]
!6475 = metadata !{i32 29, i32 0, metadata !6476, null}
!6476 = metadata !{i32 589835, metadata !1338, i32 28, i32 0, metadata !1339, i32 0} ; [ DW_TAG_lexical_block ]
!6477 = metadata !{i32 38, i32 0, metadata !6476, null}
!6478 = metadata !{i32 39, i32 0, metadata !6476, null}
!6479 = metadata !{i32 40, i32 0, metadata !6476, null}
!6480 = metadata !{i32 47, i32 0, metadata !6476, null}
!6481 = metadata !{i32 48, i32 0, metadata !6476, null}
!6482 = metadata !{i32 49, i32 0, metadata !6476, null}
!6483 = metadata !{i32 52, i32 0, metadata !6476, null}
!6484 = metadata !{i32 53, i32 0, metadata !6476, null}
!6485 = metadata !{i32 68, i32 0, metadata !6476, null}
!6486 = metadata !{i32 44, i32 0, metadata !6487, null}
!6487 = metadata !{i32 589835, metadata !1378, i32 35, i32 0, metadata !1379, i32 0} ; [ DW_TAG_lexical_block ]
!6488 = metadata !{i32 47, i32 0, metadata !6487, null}
!6489 = metadata !{i32 49, i32 0, metadata !6487, null}
!6490 = metadata !{i32 51, i32 0, metadata !6487, null}
!6491 = metadata !{i32 52, i32 0, metadata !6487, null}
!6492 = metadata !{i32 62, i32 0, metadata !6487, null}
!6493 = metadata !{i32 63, i32 0, metadata !6487, null}
!6494 = metadata !{i32 70, i32 0, metadata !6487, null}
!6495 = metadata !{i32 73, i32 0, metadata !6487, null}
!6496 = metadata !{i32 76, i32 0, metadata !6497, null}
!6497 = metadata !{i32 589835, metadata !6487, i32 76, i32 0, metadata !1379, i32 1} ; [ DW_TAG_lexical_block ]
!6498 = metadata !{i32 77, i32 0, metadata !6497, null}
!6499 = metadata !{i32 80, i32 0, metadata !6497, null}
!6500 = metadata !{i32 83, i32 0, metadata !6497, null}
!6501 = metadata !{i32 88, i32 0, metadata !6497, null}
!6502 = metadata !{i32 89, i32 0, metadata !6497, null}
!6503 = metadata !{i32 90, i32 0, metadata !6497, null}
!6504 = metadata !{i32 92, i32 0, metadata !6497, null}
!6505 = metadata !{i32 94, i32 0, metadata !6497, null}
!6506 = metadata !{i32 99, i32 0, metadata !6487, null}
!6507 = metadata !{i32 30, i32 0, metadata !6508, null}
!6508 = metadata !{i32 589835, metadata !1420, i32 21, i32 0, metadata !1421, i32 0} ; [ DW_TAG_lexical_block ]
!6509 = metadata !{i32 34, i32 0, metadata !6508, null}
!6510 = metadata !{i32 35, i32 0, metadata !6508, null}
!6511 = metadata !{i32 36, i32 0, metadata !6508, null}
!6512 = metadata !{i32 37, i32 0, metadata !6508, null}
!6513 = metadata !{i32 39, i32 0, metadata !6508, null}
!6514 = metadata !{i32 40, i32 0, metadata !6508, null}
!6515 = metadata !{i32 42, i32 0, metadata !6508, null}
!6516 = metadata !{i32 46, i32 0, metadata !6508, null}
!6517 = metadata !{i32 47, i32 0, metadata !6508, null}
!6518 = metadata !{i32 48, i32 0, metadata !6508, null}
!6519 = metadata !{i32 49, i32 0, metadata !6508, null}
!6520 = metadata !{i32 52, i32 0, metadata !6508, null}
!6521 = metadata !{i32 53, i32 0, metadata !6508, null}
!6522 = metadata !{i32 54, i32 0, metadata !6508, null}
!6523 = metadata !{i32 56, i32 0, metadata !6508, null}
!6524 = metadata !{i32 57, i32 0, metadata !6508, null}
!6525 = metadata !{i32 58, i32 0, metadata !6508, null}
!6526 = metadata !{i32 59, i32 0, metadata !6508, null}
!6527 = metadata !{i32 60, i32 0, metadata !6508, null}
!6528 = metadata !{i32 65, i32 0, metadata !6508, null}
!6529 = metadata !{i32 68, i32 0, metadata !6508, null}
!6530 = metadata !{i32 69, i32 0, metadata !6508, null}
!6531 = metadata !{i32 70, i32 0, metadata !6508, null}
!6532 = metadata !{i32 79, i32 0, metadata !6508, null}
!6533 = metadata !{i32 36, i32 0, metadata !6534, null}
!6534 = metadata !{i32 589835, metadata !1462, i32 23, i32 0, metadata !1463, i32 0} ; [ DW_TAG_lexical_block ]
!6535 = metadata !{i32 38, i32 0, metadata !6534, null}
!6536 = metadata !{i32 39, i32 0, metadata !6534, null}
!6537 = metadata !{i32 42, i32 0, metadata !6534, null}
!6538 = metadata !{i32 34, i32 0, metadata !6539, null}
!6539 = metadata !{i32 589835, metadata !1502, i32 29, i32 0, metadata !1503, i32 0} ; [ DW_TAG_lexical_block ]
!6540 = metadata !{i32 35, i32 0, metadata !6539, null}
!6541 = metadata !{i32 39, i32 0, metadata !6539, null}
!6542 = metadata !{i32 43, i32 0, metadata !6539, null}
!6543 = metadata !{i32 47, i32 0, metadata !6539, null}
!6544 = metadata !{i32 49, i32 0, metadata !6539, null}
!6545 = metadata !{i32 51, i32 0, metadata !6539, null}
!6546 = metadata !{i32 53, i32 0, metadata !6539, null}
!6547 = metadata !{i32 56, i32 0, metadata !6539, null}
!6548 = metadata !{i32 58, i32 0, metadata !6539, null}
!6549 = metadata !{i32 63, i32 0, metadata !6539, null}
!6550 = metadata !{i32 64, i32 0, metadata !6539, null}
!6551 = metadata !{i32 74, i32 0, metadata !6539, null}
!6552 = metadata !{i32 78, i32 0, metadata !6539, null}
!6553 = metadata !{i32 35, i32 0, metadata !6554, null}
!6554 = metadata !{i32 589835, metadata !1540, i32 30, i32 0, metadata !1541, i32 0} ; [ DW_TAG_lexical_block ]
!6555 = metadata !{i32 36, i32 0, metadata !6554, null}
!6556 = metadata !{i32 40, i32 0, metadata !6554, null}
!6557 = metadata !{i32 44, i32 0, metadata !6554, null}
!6558 = metadata !{i32 48, i32 0, metadata !6554, null}
!6559 = metadata !{i32 50, i32 0, metadata !6554, null}
!6560 = metadata !{i32 52, i32 0, metadata !6554, null}
!6561 = metadata !{i32 54, i32 0, metadata !6554, null}
!6562 = metadata !{i32 57, i32 0, metadata !6554, null}
!6563 = metadata !{i32 58, i32 0, metadata !6554, null}
!6564 = metadata !{i32 67, i32 0, metadata !6554, null}
!6565 = metadata !{i32 82, i32 0, metadata !6554, null}
!6566 = metadata !{i32 83, i32 0, metadata !6554, null}
!6567 = metadata !{i32 85, i32 0, metadata !6554, null}
!6568 = metadata !{i32 88, i32 0, metadata !6554, null}
!6569 = metadata !{i32 89, i32 0, metadata !6554, null}
!6570 = metadata !{i32 90, i32 0, metadata !6554, null}
!6571 = metadata !{i32 94, i32 0, metadata !6554, null}
!6572 = metadata !{i32 23, i32 0, metadata !6573, null}
!6573 = metadata !{i32 589835, metadata !1578, i32 18, i32 0, metadata !1579, i32 0} ; [ DW_TAG_lexical_block ]
!6574 = metadata !{i32 24, i32 0, metadata !6573, null}
!6575 = metadata !{i32 25, i32 0, metadata !6573, null}
!6576 = metadata !{i32 28, i32 0, metadata !6573, null}
!6577 = metadata !{i32 49, i32 0, metadata !6578, null}
!6578 = metadata !{i32 589835, metadata !1618, i32 44, i32 0, metadata !1619, i32 0} ; [ DW_TAG_lexical_block ]
!6579 = metadata !{i32 50, i32 0, metadata !6578, null}
!6580 = metadata !{i32 51, i32 0, metadata !6578, null}
!6581 = metadata !{i32 52, i32 0, metadata !6578, null}
!6582 = metadata !{i32 53, i32 0, metadata !6578, null}
!6583 = metadata !{i32 54, i32 0, metadata !6578, null}
!6584 = metadata !{i32 56, i32 0, metadata !6578, null}
!6585 = metadata !{i32 57, i32 0, metadata !6578, null}
!6586 = metadata !{i32 60, i32 0, metadata !6578, null}
!6587 = metadata !{i32 62, i32 0, metadata !6578, null}
!6588 = metadata !{i32 67, i32 0, metadata !6578, null}
!6589 = metadata !{i32 68, i32 0, metadata !6578, null}
!6590 = metadata !{i32 71, i32 0, metadata !6578, null}
!6591 = metadata !{i32 72, i32 0, metadata !6578, null}
!6592 = metadata !{i32 73, i32 0, metadata !6578, null}
!6593 = metadata !{i32 74, i32 0, metadata !6578, null}
!6594 = metadata !{i32 101, i32 0, metadata !6578, null}
!6595 = metadata !{i32 102, i32 0, metadata !6578, null}
!6596 = metadata !{i32 103, i32 0, metadata !6578, null}
!6597 = metadata !{i32 105, i32 0, metadata !6578, null}
!6598 = metadata !{i32 107, i32 0, metadata !6578, null}
!6599 = metadata !{i32 120, i32 0, metadata !6578, null}
!6600 = metadata !{i32 121, i32 0, metadata !6578, null}
!6601 = metadata !{i32 128, i32 0, metadata !6578, null}
!6602 = metadata !{i32 131, i32 0, metadata !6578, null}
!6603 = metadata !{i32 140, i32 0, metadata !6578, null}
!6604 = metadata !{i32 143, i32 0, metadata !6578, null}
!6605 = metadata !{i32 146, i32 0, metadata !6578, null}
!6606 = metadata !{i32 152, i32 0, metadata !6578, null}
!6607 = metadata !{i32 155, i32 0, metadata !6578, null}
!6608 = metadata !{i32 173, i32 0, metadata !6578, null}
!6609 = metadata !{i32 174, i32 0, metadata !6578, null}
!6610 = metadata !{i32 175, i32 0, metadata !6578, null}
!6611 = metadata !{i32 177, i32 0, metadata !6578, null}
!6612 = metadata !{i32 178, i32 0, metadata !6578, null}
!6613 = metadata !{i32 179, i32 0, metadata !6578, null}
!6614 = metadata !{i32 180, i32 0, metadata !6578, null}
!6615 = metadata !{i32 186, i32 0, metadata !6578, null}
!6616 = metadata !{i32 191, i32 0, metadata !6578, null}
!6617 = metadata !{i32 192, i32 0, metadata !6578, null}
!6618 = metadata !{i32 193, i32 0, metadata !6578, null}
!6619 = metadata !{i32 199, i32 0, metadata !6578, null}
!6620 = metadata !{i32 202, i32 0, metadata !6578, null}
!6621 = metadata !{i32 224, i32 0, metadata !6578, null}
!6622 = metadata !{i32 225, i32 0, metadata !6578, null}
!6623 = metadata !{i32 233, i32 0, metadata !6578, null}
!6624 = metadata !{i32 524, i32 0, metadata !6625, null}
!6625 = metadata !{i32 589835, metadata !1662, i32 512, i32 0, metadata !1665, i32 0} ; [ DW_TAG_lexical_block ]
!6626 = metadata !{i32 527, i32 0, metadata !6625, null}
!6627 = metadata !{i32 526, i32 0, metadata !6625, null}
!6628 = metadata !{i32 531, i32 0, metadata !6625, null}
!6629 = metadata !{i32 532, i32 0, metadata !6625, null}
!6630 = metadata !{i32 533, i32 0, metadata !6625, null}
!6631 = metadata !{i32 534, i32 0, metadata !6625, null}
!6632 = metadata !{i32 537, i32 0, metadata !6625, null}
!6633 = metadata !{i32 538, i32 0, metadata !6625, null}
!6634 = metadata !{i32 539, i32 0, metadata !6625, null}
!6635 = metadata !{i32 540, i32 0, metadata !6625, null}
!6636 = metadata !{i32 541, i32 0, metadata !6625, null}
!6637 = metadata !{i32 542, i32 0, metadata !6625, null}
!6638 = metadata !{i32 543, i32 0, metadata !6625, null}
!6639 = metadata !{i32 544, i32 0, metadata !6625, null}
!6640 = metadata !{i32 548, i32 0, metadata !6625, null}
!6641 = metadata !{i32 549, i32 0, metadata !6625, null}
!6642 = metadata !{i32 553, i32 0, metadata !6625, null}
!6643 = metadata !{i32 555, i32 0, metadata !6625, null}
!6644 = metadata !{i32 556, i32 0, metadata !6625, null}
!6645 = metadata !{i32 557, i32 0, metadata !6625, null}
!6646 = metadata !{i32 559, i32 0, metadata !6625, null}
!6647 = metadata !{i32 565, i32 0, metadata !6625, null}
!6648 = metadata !{i32 569, i32 0, metadata !6625, null}
!6649 = metadata !{i32 571, i32 0, metadata !6625, null}
!6650 = metadata !{i32 573, i32 0, metadata !6625, null}
!6651 = metadata !{i32 574, i32 0, metadata !6625, null}
!6652 = metadata !{i32 575, i32 0, metadata !6625, null}
!6653 = metadata !{i32 577, i32 0, metadata !6625, null}
!6654 = metadata !{i32 583, i32 0, metadata !6625, null}
!6655 = metadata !{i32 584, i32 0, metadata !6625, null}
!6656 = metadata !{i32 591, i32 0, metadata !6657, null}
!6657 = metadata !{i32 589835, metadata !6625, i32 591, i32 0, metadata !1665, i32 1} ; [ DW_TAG_lexical_block ]
!6658 = metadata !{i32 592, i32 0, metadata !6657, null}
!6659 = metadata !{i32 593, i32 0, metadata !6657, null}
!6660 = metadata !{i32 594, i32 0, metadata !6657, null}
!6661 = metadata !{i32 598, i32 0, metadata !6625, null}
!6662 = metadata !{i32 276, i32 0, metadata !6663, null}
!6663 = metadata !{i32 589835, metadata !1675, i32 275, i32 0, metadata !1678, i32 0} ; [ DW_TAG_lexical_block ]
!6664 = metadata !{i32 28, i32 0, metadata !6665, null}
!6665 = metadata !{i32 589835, metadata !1685, i32 18, i32 0, metadata !1688, i32 0} ; [ DW_TAG_lexical_block ]
!6666 = metadata !{i32 33, i32 0, metadata !6665, null}
!6667 = metadata !{i32 36, i32 0, metadata !6665, null}
!6668 = metadata !{i32 37, i32 0, metadata !6665, null}
!6669 = metadata !{i32 41, i32 0, metadata !6665, null}
!6670 = metadata !{i32 42, i32 0, metadata !6665, null}
!6671 = metadata !{i32 47, i32 0, metadata !6665, null}
!6672 = metadata !{i32 35, i32 0, metadata !6665, null}
!6673 = metadata !{i32 56, i32 0, metadata !6665, null}
!6674 = metadata !{i32 57, i32 0, metadata !6665, null}
!6675 = metadata !{i32 58, i32 0, metadata !6665, null}
!6676 = metadata !{i32 62, i32 0, metadata !6665, null}
!6677 = metadata !{i32 20, i32 0, metadata !6678, null}
!6678 = metadata !{i32 589835, metadata !1726, i32 19, i32 0, metadata !1727, i32 0} ; [ DW_TAG_lexical_block ]
!6679 = metadata !{i32 32, i32 0, metadata !6680, null}
!6680 = metadata !{i32 589835, metadata !1767, i32 25, i32 0, metadata !1770, i32 0} ; [ DW_TAG_lexical_block ]
!6681 = metadata !{i32 33, i32 0, metadata !6680, null}
!6682 = metadata !{i32 36, i32 0, metadata !6680, null}
!6683 = metadata !{i32 37, i32 0, metadata !6680, null}
!6684 = metadata !{i32 43, i32 0, metadata !6680, null}
!6685 = metadata !{i32 51, i32 0, metadata !6680, null}
!6686 = metadata !{i32 55, i32 0, metadata !6680, null}
!6687 = metadata !{i32 56, i32 0, metadata !6680, null}
!6688 = metadata !{i32 57, i32 0, metadata !6680, null}
!6689 = metadata !{i32 62, i32 0, metadata !6680, null}
!6690 = metadata !{i32 65, i32 0, metadata !6680, null}
!6691 = metadata !{i32 68, i32 0, metadata !6680, null}
!6692 = metadata !{i32 76, i32 0, metadata !6680, null}
!6693 = metadata !{i32 30, i32 0, metadata !6694, null}
!6694 = metadata !{i32 589835, metadata !1809, i32 27, i32 0, metadata !1810, i32 0} ; [ DW_TAG_lexical_block ]
!6695 = metadata !{i32 596, i32 0, metadata !6696, null}
!6696 = metadata !{i32 589835, metadata !1815, i32 593, i32 0, metadata !1818, i32 0} ; [ DW_TAG_lexical_block ]
!6697 = metadata !{i32 599, i32 0, metadata !6696, null}
!6698 = metadata !{i32 601, i32 0, metadata !6696, null}
!6699 = metadata !{i32 705, i32 0, metadata !6700, null}
!6700 = metadata !{i32 589835, metadata !1827, i32 698, i32 0, metadata !1830, i32 0} ; [ DW_TAG_lexical_block ]
!6701 = metadata !{i32 706, i32 0, metadata !6700, null}
!6702 = metadata !{i32 716, i32 0, metadata !6700, null}
!6703 = metadata !{i32 725, i32 0, metadata !6700, null}
!6704 = metadata !{i32 726, i32 0, metadata !6700, null}
!6705 = metadata !{i32 727, i32 0, metadata !6700, null}
!6706 = metadata !{i32 729, i32 0, metadata !6700, null}
!6707 = metadata !{i32 730, i32 0, metadata !6700, null}
!6708 = metadata !{i32 734, i32 0, metadata !6700, null}
!6709 = metadata !{i32 735, i32 0, metadata !6700, null}
!6710 = metadata !{i32 738, i32 0, metadata !6700, null}
!6711 = metadata !{i32 739, i32 0, metadata !6700, null}
!6712 = metadata !{i32 774, i32 0, metadata !6700, null}
!6713 = metadata !{i32 775, i32 0, metadata !6700, null}
!6714 = metadata !{i32 778, i32 0, metadata !6700, null}
!6715 = metadata !{i32 782, i32 0, metadata !6700, null}
!6716 = metadata !{i32 783, i32 0, metadata !6700, null}
!6717 = metadata !{i32 785, i32 0, metadata !6700, null}
!6718 = metadata !{i32 786, i32 0, metadata !6700, null}
!6719 = metadata !{i32 787, i32 0, metadata !6700, null}
!6720 = metadata !{i32 773, i32 0, metadata !6700, null}
!6721 = metadata !{i32 789, i32 0, metadata !6700, null}
!6722 = metadata !{i32 790, i32 0, metadata !6700, null}
!6723 = metadata !{i32 792, i32 0, metadata !6700, null}
!6724 = metadata !{i32 376, i32 0, metadata !6725, null}
!6725 = metadata !{i32 589835, metadata !1850, i32 373, i32 0, metadata !1853, i32 0} ; [ DW_TAG_lexical_block ]
!6726 = metadata !{i32 20, i32 0, metadata !6727, null}
!6727 = metadata !{i32 589835, metadata !1873, i32 19, i32 0, metadata !1874, i32 0} ; [ DW_TAG_lexical_block ]
!6728 = metadata !{i32 21, i32 0, metadata !6727, null}
!6729 = metadata !{i32 29, i32 0, metadata !6727, null}
!6730 = metadata !{i32 30, i32 0, metadata !6727, null}
!6731 = metadata !{i32 28, i32 0, metadata !6727, null}
!6732 = metadata !{i32 34, i32 0, metadata !6727, null}
!6733 = metadata !{i32 37, i32 0, metadata !6734, null}
!6734 = metadata !{i32 589835, metadata !1882, i32 18, i32 0, metadata !1883, i32 0} ; [ DW_TAG_lexical_block ]
!6735 = metadata !{i32 38, i32 0, metadata !6734, null}
!6736 = metadata !{i32 40, i32 0, metadata !6734, null}
!6737 = metadata !{i32 42, i32 0, metadata !6734, null}
!6738 = metadata !{i32 43, i32 0, metadata !6734, null}
!6739 = metadata !{i32 41, i32 0, metadata !6734, null}
!6740 = metadata !{i32 47, i32 0, metadata !6734, null}
!6741 = metadata !{i32 48, i32 0, metadata !6734, null}
!6742 = metadata !{i32 46, i32 0, metadata !6734, null}
!6743 = metadata !{i32 52, i32 0, metadata !6734, null}
!6744 = metadata !{i32 19, i32 0, metadata !6745, null}
!6745 = metadata !{i32 589835, metadata !1891, i32 18, i32 0, metadata !1892, i32 0} ; [ DW_TAG_lexical_block ]
!6746 = metadata !{i32 28, i32 0, metadata !6745, null}
!6747 = metadata !{i32 29, i32 0, metadata !6745, null}
!6748 = metadata !{i32 27, i32 0, metadata !6745, null}
!6749 = metadata !{i32 32, i32 0, metadata !6745, null}
!6750 = metadata !{i32 17, i32 0, metadata !6751, null}
!6751 = metadata !{i32 589835, metadata !1901, i32 16, i32 0, metadata !1902, i32 0} ; [ DW_TAG_lexical_block ]
!6752 = metadata !{i32 47, i32 0, metadata !6753, null}
!6753 = metadata !{i32 589835, metadata !1907, i32 43, i32 0, metadata !1908, i32 0} ; [ DW_TAG_lexical_block ]
!6754 = metadata !{i32 48, i32 0, metadata !6753, null}
!6755 = metadata !{i32 49, i32 0, metadata !6753, null}
!6756 = metadata !{i32 50, i32 0, metadata !6753, null}
!6757 = metadata !{i32 52, i32 0, metadata !6753, null}
!6758 = metadata !{i32 58, i32 0, metadata !6753, null}
!6759 = metadata !{i32 62, i32 0, metadata !6753, null}
!6760 = metadata !{i32 63, i32 0, metadata !6753, null}
!6761 = metadata !{i32 64, i32 0, metadata !6753, null}
!6762 = metadata !{i32 65, i32 0, metadata !6753, null}
!6763 = metadata !{i32 67, i32 0, metadata !6753, null}
!6764 = metadata !{i32 71, i32 0, metadata !6753, null}
!6765 = metadata !{i32 19, i32 0, metadata !6766, null}
!6766 = metadata !{i32 589835, metadata !2005, i32 16, i32 0, metadata !2006, i32 0} ; [ DW_TAG_lexical_block ]
!6767 = metadata !{i32 21, i32 0, metadata !6766, null}
!6768 = metadata !{i32 21, i32 0, metadata !6769, null}
!6769 = metadata !{i32 589835, metadata !2013, i32 20, i32 0, metadata !2014, i32 0} ; [ DW_TAG_lexical_block ]
!6770 = metadata !{i32 22, i32 0, metadata !6769, null}
!6771 = metadata !{i32 25, i32 0, metadata !6769, null}
!6772 = metadata !{i32 26, i32 0, metadata !6769, null}
!6773 = metadata !{i32 28, i32 0, metadata !6769, null}
!6774 = metadata !{i32 29, i32 0, metadata !6769, null}
!6775 = metadata !{i32 30, i32 0, metadata !6769, null}
!6776 = metadata !{i32 32, i32 0, metadata !6769, null}
!6777 = metadata !{i32 33, i32 0, metadata !6769, null}
!6778 = metadata !{i32 34, i32 0, metadata !6769, null}
!6779 = metadata !{i32 36, i32 0, metadata !6769, null}
!6780 = metadata !{i32 32, i32 0, metadata !6781, null}
!6781 = metadata !{i32 589835, metadata !2022, i32 27, i32 0, metadata !2023, i32 0} ; [ DW_TAG_lexical_block ]
!6782 = metadata !{i32 33, i32 0, metadata !6781, null}
!6783 = metadata !{i32 34, i32 0, metadata !6781, null}
!6784 = metadata !{i32 35, i32 0, metadata !6781, null}
!6785 = metadata !{i32 38, i32 0, metadata !6781, null}
!6786 = metadata !{i32 40, i32 0, metadata !6781, null}
!6787 = metadata !{i32 42, i32 0, metadata !6781, null}
!6788 = metadata !{i32 1226, i32 0, metadata !6789, null}
!6789 = metadata !{i32 589835, metadata !2032, i32 1225, i32 0, metadata !2035, i32 0} ; [ DW_TAG_lexical_block ]
!6790 = metadata !{i32 1228, i32 0, metadata !6789, null}
!6791 = metadata !{i32 1229, i32 0, metadata !6792, null}
!6792 = metadata !{i32 589835, metadata !6789, i32 1229, i32 0, metadata !2035, i32 1} ; [ DW_TAG_lexical_block ]
!6793 = metadata !{i32 1230, i32 0, metadata !6792, null}
!6794 = metadata !{i32 1231, i32 0, metadata !6792, null}
!6795 = metadata !{i32 1232, i32 0, metadata !6792, null}
!6796 = metadata !{i32 1235, i32 0, metadata !6792, null}
!6797 = metadata !{i32 1237, i32 0, metadata !6789, null}
!6798 = metadata !{i32 1424, i32 0, metadata !6799, null}
!6799 = metadata !{i32 589835, metadata !2076, i32 1423, i32 0, metadata !2035, i32 2} ; [ DW_TAG_lexical_block ]
!6800 = metadata !{i32 1429, i32 0, metadata !6799, null}
!6801 = metadata !{i32 1431, i32 0, metadata !6799, null}
!6802 = metadata !{i32 1430, i32 0, metadata !6799, null}
!6803 = metadata !{i32 1434, i32 0, metadata !6799, null}
!6804 = metadata !{i32 1464, i32 0, metadata !6805, null}
!6805 = metadata !{i32 589835, metadata !2079, i32 1440, i32 0, metadata !2035, i32 3} ; [ DW_TAG_lexical_block ]
!6806 = metadata !{i32 1477, i32 0, metadata !6805, null}
!6807 = metadata !{i32 1478, i32 0, metadata !6805, null}
!6808 = metadata !{i32 1479, i32 0, metadata !6805, null}
!6809 = metadata !{i32 1490, i32 0, metadata !6805, null}
!6810 = metadata !{i32 1496, i32 0, metadata !6805, null}
!6811 = metadata !{i32 1498, i32 0, metadata !6805, null}
!6812 = metadata !{i32 1510, i32 0, metadata !6813, null}
!6813 = metadata !{i32 589835, metadata !6805, i32 1510, i32 0, metadata !2035, i32 4} ; [ DW_TAG_lexical_block ]
!6814 = metadata !{i32 1513, i32 0, metadata !6813, null}
!6815 = metadata !{i32 1514, i32 0, metadata !6813, null}
!6816 = metadata !{i32 1517, i32 0, metadata !6813, null}
!6817 = metadata !{i32 1518, i32 0, metadata !6813, null}
!6818 = metadata !{i32 1523, i32 0, metadata !6819, null}
!6819 = metadata !{i32 589835, metadata !6805, i32 1523, i32 0, metadata !2035, i32 5} ; [ DW_TAG_lexical_block ]
!6820 = metadata !{i32 1525, i32 0, metadata !6819, null}
!6821 = metadata !{i32 1526, i32 0, metadata !6819, null}
!6822 = metadata !{i32 1529, i32 0, metadata !6819, null}
!6823 = metadata !{i32 1531, i32 0, metadata !6819, null}
!6824 = metadata !{i32 1532, i32 0, metadata !6819, null}
!6825 = metadata !{i32 1539, i32 0, metadata !6819, null}
!6826 = metadata !{i32 1540, i32 0, metadata !6819, null}
!6827 = metadata !{i32 1541, i32 0, metadata !6819, null}
!6828 = metadata !{i32 1543, i32 0, metadata !6819, null}
!6829 = metadata !{i32 1544, i32 0, metadata !6819, null}
!6830 = metadata !{i32 1548, i32 0, metadata !6819, null}
!6831 = metadata !{i32 1549, i32 0, metadata !6819, null}
!6832 = metadata !{i32 1550, i32 0, metadata !6819, null}
!6833 = metadata !{i32 1552, i32 0, metadata !6819, null}
!6834 = metadata !{i32 1553, i32 0, metadata !6819, null}
!6835 = metadata !{i32 1557, i32 0, metadata !6819, null}
!6836 = metadata !{i32 1559, i32 0, metadata !6819, null}
!6837 = metadata !{i32 1560, i32 0, metadata !6819, null}
!6838 = metadata !{i32 1567, i32 0, metadata !6819, null}
!6839 = metadata !{i32 1571, i32 0, metadata !6819, null}
!6840 = metadata !{i32 1572, i32 0, metadata !6819, null}
!6841 = metadata !{i32 1573, i32 0, metadata !6819, null}
!6842 = metadata !{i32 1574, i32 0, metadata !6819, null}
!6843 = metadata !{i32 1575, i32 0, metadata !6819, null}
!6844 = metadata !{i32 1576, i32 0, metadata !6819, null}
!6845 = metadata !{i32 1577, i32 0, metadata !6819, null}
!6846 = metadata !{i32 1578, i32 0, metadata !6819, null}
!6847 = metadata !{i32 1579, i32 0, metadata !6819, null}
!6848 = metadata !{i32 1582, i32 0, metadata !6819, null}
!6849 = metadata !{i32 1590, i32 0, metadata !6819, null}
!6850 = metadata !{i32 1591, i32 0, metadata !6819, null}
!6851 = metadata !{i32 1592, i32 0, metadata !6819, null}
!6852 = metadata !{i32 1593, i32 0, metadata !6819, null}
!6853 = metadata !{i32 1595, i32 0, metadata !6819, null}
!6854 = metadata !{i32 1596, i32 0, metadata !6819, null}
!6855 = metadata !{i32 1598, i32 0, metadata !6819, null}
!6856 = metadata !{i32 1599, i32 0, metadata !6819, null}
!6857 = metadata !{i32 1602, i32 0, metadata !6819, null}
!6858 = metadata !{i32 1603, i32 0, metadata !6819, null}
!6859 = metadata !{i32 1604, i32 0, metadata !6819, null}
!6860 = metadata !{i32 1606, i32 0, metadata !6819, null}
!6861 = metadata !{i32 1607, i32 0, metadata !6819, null}
!6862 = metadata !{i32 1611, i32 0, metadata !6819, null}
!6863 = metadata !{i32 1612, i32 0, metadata !6819, null}
!6864 = metadata !{i32 1613, i32 0, metadata !6819, null}
!6865 = metadata !{i32 1617, i32 0, metadata !6819, null}
!6866 = metadata !{i32 1620, i32 0, metadata !6819, null}
!6867 = metadata !{i32 1621, i32 0, metadata !6819, null}
!6868 = metadata !{i32 1624, i32 0, metadata !6869, null}
!6869 = metadata !{i32 589835, metadata !6819, i32 1624, i32 0, metadata !2035, i32 6} ; [ DW_TAG_lexical_block ]
!6870 = metadata !{i32 1630, i32 0, metadata !6869, null}
!6871 = metadata !{i32 1631, i32 0, metadata !6869, null}
!6872 = metadata !{i32 1633, i32 0, metadata !6869, null}
!6873 = metadata !{i32 1635, i32 0, metadata !6869, null}
!6874 = metadata !{i32 1639, i32 0, metadata !6819, null}
!6875 = metadata !{i32 1643, i32 0, metadata !6819, null}
!6876 = metadata !{i32 1644, i32 0, metadata !6819, null}
!6877 = metadata !{i32 1645, i32 0, metadata !6819, null}
!6878 = metadata !{i32 1653, i32 0, metadata !6819, null}
!6879 = metadata !{i32 1659, i32 0, metadata !6819, null}
!6880 = metadata !{i32 1662, i32 0, metadata !6819, null}
!6881 = metadata !{i32 1663, i32 0, metadata !6819, null}
!6882 = metadata !{i32 1664, i32 0, metadata !6819, null}
!6883 = metadata !{i32 1665, i32 0, metadata !6819, null}
!6884 = metadata !{i32 1667, i32 0, metadata !6819, null}
!6885 = metadata !{i32 1672, i32 0, metadata !6819, null}
!6886 = metadata !{i32 1673, i32 0, metadata !6819, null}
!6887 = metadata !{i32 1674, i32 0, metadata !6819, null}
!6888 = metadata !{i32 1675, i32 0, metadata !6819, null}
!6889 = metadata !{i32 1679, i32 0, metadata !6819, null}
!6890 = metadata !{i32 1685, i32 0, metadata !6819, null}
!6891 = metadata !{i32 1686, i32 0, metadata !6819, null}
!6892 = metadata !{i32 1689, i32 0, metadata !6819, null}
!6893 = metadata !{i32 1690, i32 0, metadata !6819, null}
!6894 = metadata !{i32 1691, i32 0, metadata !6819, null}
!6895 = metadata !{i32 1692, i32 0, metadata !6819, null}
!6896 = metadata !{i32 1777, i32 0, metadata !6819, null}
!6897 = metadata !{i32 1788, i32 0, metadata !6898, null}
!6898 = metadata !{i32 589835, metadata !6819, i32 1788, i32 0, metadata !2035, i32 7} ; [ DW_TAG_lexical_block ]
!6899 = metadata !{i32 1789, i32 0, metadata !6898, null}
!6900 = metadata !{i32 1790, i32 0, metadata !6898, null}
!6901 = metadata !{i32 1792, i32 0, metadata !6898, null}
!6902 = metadata !{i32 1793, i32 0, metadata !6898, null}
!6903 = metadata !{i32 1795, i32 0, metadata !6819, null}
!6904 = metadata !{i32 1796, i32 0, metadata !6819, null}
!6905 = metadata !{i32 1797, i32 0, metadata !6819, null}
!6906 = metadata !{i32 1801, i32 0, metadata !6819, null}
!6907 = metadata !{i32 1802, i32 0, metadata !6819, null}
!6908 = metadata !{i32 1803, i32 0, metadata !6819, null}
!6909 = metadata !{i32 1805, i32 0, metadata !6819, null}
!6910 = metadata !{i32 1807, i32 0, metadata !6819, null}
!6911 = metadata !{i32 1808, i32 0, metadata !6819, null}
!6912 = metadata !{i32 1809, i32 0, metadata !6819, null}
!6913 = metadata !{i32 1815, i32 0, metadata !6819, null}
!6914 = metadata !{i32 1817, i32 0, metadata !6819, null}
!6915 = metadata !{i32 1818, i32 0, metadata !6819, null}
!6916 = metadata !{i32 1822, i32 0, metadata !6917, null}
!6917 = metadata !{i32 589835, metadata !6819, i32 1822, i32 0, metadata !2035, i32 8} ; [ DW_TAG_lexical_block ]
!6918 = metadata !{i32 1824, i32 0, metadata !6917, null}
!6919 = metadata !{i32 1825, i32 0, metadata !6917, null}
!6920 = metadata !{i32 1827, i32 0, metadata !6917, null}
!6921 = metadata !{i32 1828, i32 0, metadata !6917, null}
!6922 = metadata !{i32 1830, i32 0, metadata !6917, null}
!6923 = metadata !{i32 1823, i32 0, metadata !6917, null}
!6924 = metadata !{i32 1853, i32 0, metadata !6819, null}
!6925 = metadata !{i32 1854, i32 0, metadata !6819, null}
!6926 = metadata !{i32 1858, i32 0, metadata !6805, null}
!6927 = metadata !{i32 1875, i32 0, metadata !6928, null}
!6928 = metadata !{i32 589835, metadata !2139, i32 1867, i32 0, metadata !2035, i32 9} ; [ DW_TAG_lexical_block ]
!6929 = metadata !{i32 1876, i32 0, metadata !6928, null}
!6930 = metadata !{i32 1880, i32 0, metadata !6928, null}
!6931 = metadata !{i32 1887, i32 0, metadata !6928, null}
!6932 = metadata !{i32 1888, i32 0, metadata !6928, null}
!6933 = metadata !{i32 1889, i32 0, metadata !6928, null}
!6934 = metadata !{i32 1894, i32 0, metadata !6928, null}
!6935 = metadata !{i32 1896, i32 0, metadata !6928, null}
!6936 = metadata !{i32 1900, i32 0, metadata !6928, null}
!6937 = metadata !{i32 1899, i32 0, metadata !6928, null}
!6938 = metadata !{i32 1903, i32 0, metadata !6928, null}
!6939 = metadata !{i32 1904, i32 0, metadata !6928, null}
!6940 = metadata !{i32 1905, i32 0, metadata !6928, null}
!6941 = metadata !{i32 1908, i32 0, metadata !6928, null}
!6942 = metadata !{i32 1911, i32 0, metadata !6928, null}
!6943 = metadata !{i32 1915, i32 0, metadata !6928, null}
!6944 = metadata !{i32 1917, i32 0, metadata !6928, null}
!6945 = metadata !{i32 1919, i32 0, metadata !6928, null}
!6946 = metadata !{i32 1920, i32 0, metadata !6928, null}
!6947 = metadata !{i32 1923, i32 0, metadata !6928, null}
!6948 = metadata !{i32 1925, i32 0, metadata !6928, null}
!6949 = metadata !{i32 1926, i32 0, metadata !6928, null}
!6950 = metadata !{i32 1930, i32 0, metadata !6928, null}
!6951 = metadata !{i32 1939, i32 0, metadata !6928, null}
!6952 = metadata !{i32 990, i32 0, metadata !6953, null}
!6953 = metadata !{i32 589835, metadata !2143, i32 987, i32 0, metadata !2146, i32 0} ; [ DW_TAG_lexical_block ]
!6954 = metadata !{i32 1000, i32 0, metadata !6955, null}
!6955 = metadata !{i32 589835, metadata !2210, i32 994, i32 0, metadata !2146, i32 1} ; [ DW_TAG_lexical_block ]
!6956 = metadata !{i32 1001, i32 0, metadata !6955, null}
!6957 = metadata !{i32 1002, i32 0, metadata !6955, null}
!6958 = metadata !{i32 1005, i32 0, metadata !6955, null}
!6959 = metadata !{i32 1006, i32 0, metadata !6955, null}
!6960 = metadata !{i32 1010, i32 0, metadata !6955, null}
!6961 = metadata !{i32 1012, i32 0, metadata !6955, null}
!6962 = metadata !{i32 1014, i32 0, metadata !6955, null}
!6963 = metadata !{i32 1015, i32 0, metadata !6955, null}
!6964 = metadata !{i32 1016, i32 0, metadata !6955, null}
!6965 = metadata !{i32 1018, i32 0, metadata !6955, null}
!6966 = metadata !{i32 1011, i32 0, metadata !6955, null}
!6967 = metadata !{i32 1025, i32 0, metadata !6955, null}
!6968 = metadata !{i32 1026, i32 0, metadata !6955, null}
!6969 = metadata !{i32 1027, i32 0, metadata !6955, null}
!6970 = metadata !{i32 1033, i32 0, metadata !6955, null}
!6971 = metadata !{i32 1034, i32 0, metadata !6955, null}
!6972 = metadata !{i32 1037, i32 0, metadata !6955, null}
!6973 = metadata !{i32 1038, i32 0, metadata !6955, null}
!6974 = metadata !{i32 1040, i32 0, metadata !6955, null}
!6975 = metadata !{i32 1209, i32 0, metadata !6976, null}
!6976 = metadata !{i32 589835, metadata !2211, i32 1180, i32 0, metadata !2146, i32 2} ; [ DW_TAG_lexical_block ]
!6977 = metadata !{i32 1230, i32 0, metadata !6976, null}
!6978 = metadata !{i32 1232, i32 0, metadata !6976, null}
!6979 = metadata !{i32 1239, i32 0, metadata !6976, null}
!6980 = metadata !{i32 1241, i32 0, metadata !6976, null}
!6981 = metadata !{i32 1242, i32 0, metadata !6976, null}
!6982 = metadata !{i32 1260, i32 0, metadata !6976, null}
!6983 = metadata !{i32 1266, i32 0, metadata !6976, null}
!6984 = metadata !{i32 1272, i32 0, metadata !6976, null}
!6985 = metadata !{i32 1274, i32 0, metadata !6976, null}
!6986 = metadata !{i32 1275, i32 0, metadata !6976, null}
!6987 = metadata !{i32 1281, i32 0, metadata !6976, null}
!6988 = metadata !{i32 1282, i32 0, metadata !6976, null}
!6989 = metadata !{i32 1289, i32 0, metadata !6976, null}
!6990 = metadata !{i32 1291, i32 0, metadata !6976, null}
!6991 = metadata !{i32 1292, i32 0, metadata !6976, null}
!6992 = metadata !{i32 1293, i32 0, metadata !6976, null}
!6993 = metadata !{i32 1294, i32 0, metadata !6976, null}
!6994 = metadata !{i32 1298, i32 0, metadata !6976, null}
!6995 = metadata !{i32 1299, i32 0, metadata !6976, null}
!6996 = metadata !{i32 1302, i32 0, metadata !6976, null}
!6997 = metadata !{i32 1308, i32 0, metadata !6976, null}
!6998 = metadata !{i32 1329, i32 0, metadata !6976, null}
!6999 = metadata !{i32 1332, i32 0, metadata !6976, null}
!7000 = metadata !{i32 1334, i32 0, metadata !6976, null}
!7001 = metadata !{i32 1336, i32 0, metadata !6976, null}
!7002 = metadata !{i32 1337, i32 0, metadata !6976, null}
!7003 = metadata !{i32 1340, i32 0, metadata !6976, null}
!7004 = metadata !{i32 1339, i32 0, metadata !6976, null}
!7005 = metadata !{i32 1342, i32 0, metadata !6976, null}
!7006 = metadata !{i32 1349, i32 0, metadata !6976, null}
!7007 = metadata !{i32 1351, i32 0, metadata !6976, null}
!7008 = metadata !{i32 1356, i32 0, metadata !6976, null}
!7009 = metadata !{i32 1363, i32 0, metadata !6976, null}
!7010 = metadata !{i32 1364, i32 0, metadata !6976, null}
!7011 = metadata !{i32 1369, i32 0, metadata !6976, null}
!7012 = metadata !{i32 1371, i32 0, metadata !6976, null}
!7013 = metadata !{i32 1376, i32 0, metadata !6976, null}
!7014 = metadata !{i32 1380, i32 0, metadata !6976, null}
!7015 = metadata !{i32 1385, i32 0, metadata !6976, null}
!7016 = metadata !{i32 1386, i32 0, metadata !6976, null}
!7017 = metadata !{i32 1392, i32 0, metadata !6976, null}
!7018 = metadata !{i32 1393, i32 0, metadata !7019, null}
!7019 = metadata !{i32 589835, metadata !6976, i32 1393, i32 0, metadata !2146, i32 3} ; [ DW_TAG_lexical_block ]
!7020 = metadata !{i32 1399, i32 0, metadata !7019, null}
!7021 = metadata !{i32 1400, i32 0, metadata !7019, null}
!7022 = metadata !{i32 1402, i32 0, metadata !7019, null}
!7023 = metadata !{i32 1415, i32 0, metadata !6976, null}
!7024 = metadata !{i32 1420, i32 0, metadata !6976, null}
!7025 = metadata !{i32 1421, i32 0, metadata !6976, null}
!7026 = metadata !{i32 1423, i32 0, metadata !6976, null}
!7027 = metadata !{i32 1424, i32 0, metadata !6976, null}
!7028 = metadata !{i32 1425, i32 0, metadata !6976, null}
!7029 = metadata !{i32 1429, i32 0, metadata !6976, null}
!7030 = metadata !{i32 1430, i32 0, metadata !6976, null}
!7031 = metadata !{i32 1431, i32 0, metadata !6976, null}
!7032 = metadata !{i32 1428, i32 0, metadata !6976, null}
!7033 = metadata !{i32 1433, i32 0, metadata !6976, null}
!7034 = metadata !{i32 1434, i32 0, metadata !6976, null}
!7035 = metadata !{i32 1437, i32 0, metadata !6976, null}
!7036 = metadata !{i32 1441, i32 0, metadata !6976, null}
!7037 = metadata !{i32 1444, i32 0, metadata !6976, null}
!7038 = metadata !{i32 1445, i32 0, metadata !6976, null}
!7039 = metadata !{i32 1446, i32 0, metadata !6976, null}
!7040 = metadata !{i32 1447, i32 0, metadata !6976, null}
!7041 = metadata !{i32 1443, i32 0, metadata !6976, null}
!7042 = metadata !{i32 1457, i32 0, metadata !6976, null}
!7043 = metadata !{i32 1459, i32 0, metadata !6976, null}
!7044 = metadata !{i32 1460, i32 0, metadata !6976, null}
!7045 = metadata !{i32 1461, i32 0, metadata !6976, null}
!7046 = metadata !{i32 1463, i32 0, metadata !6976, null}
!7047 = metadata !{i32 1464, i32 0, metadata !6976, null}
!7048 = metadata !{i32 1466, i32 0, metadata !6976, null}
!7049 = metadata !{i32 1467, i32 0, metadata !6976, null}
!7050 = metadata !{i32 1468, i32 0, metadata !6976, null}
!7051 = metadata !{i32 1472, i32 0, metadata !6976, null}
!7052 = metadata !{i32 1475, i32 0, metadata !6976, null}
!7053 = metadata !{i32 1478, i32 0, metadata !6976, null}
!7054 = metadata !{i32 1479, i32 0, metadata !6976, null}
!7055 = metadata !{i32 1483, i32 0, metadata !6976, null}
!7056 = metadata !{i32 1484, i32 0, metadata !6976, null}
!7057 = metadata !{i32 1488, i32 0, metadata !6976, null}
!7058 = metadata !{i32 1489, i32 0, metadata !6976, null}
!7059 = metadata !{i32 1471, i32 0, metadata !6976, null}
!7060 = metadata !{i32 1493, i32 0, metadata !6976, null}
!7061 = metadata !{i32 1500, i32 0, metadata !6976, null}
!7062 = metadata !{i32 1501, i32 0, metadata !6976, null}
!7063 = metadata !{i32 1504, i32 0, metadata !6976, null}
!7064 = metadata !{i32 1505, i32 0, metadata !6976, null}
!7065 = metadata !{i32 1506, i32 0, metadata !6976, null}
!7066 = metadata !{i32 1499, i32 0, metadata !6976, null}
!7067 = metadata !{i32 1511, i32 0, metadata !6976, null}
!7068 = metadata !{i32 1512, i32 0, metadata !6976, null}
!7069 = metadata !{i32 1515, i32 0, metadata !6976, null}
!7070 = metadata !{i32 1516, i32 0, metadata !6976, null}
!7071 = metadata !{i32 1522, i32 0, metadata !6976, null}
!7072 = metadata !{i32 1526, i32 0, metadata !7073, null}
!7073 = metadata !{i32 589835, metadata !6976, i32 1526, i32 0, metadata !2146, i32 4} ; [ DW_TAG_lexical_block ]
!7074 = metadata !{i32 1528, i32 0, metadata !7073, null}
!7075 = metadata !{i32 1529, i32 0, metadata !7073, null}
!7076 = metadata !{i32 1531, i32 0, metadata !7073, null}
!7077 = metadata !{i32 1532, i32 0, metadata !7073, null}
!7078 = metadata !{i32 1533, i32 0, metadata !7073, null}
!7079 = metadata !{i32 1537, i32 0, metadata !7073, null}
!7080 = metadata !{i32 1539, i32 0, metadata !7073, null}
!7081 = metadata !{i32 1540, i32 0, metadata !7073, null}
!7082 = metadata !{i32 1536, i32 0, metadata !7073, null}
!7083 = metadata !{i32 1543, i32 0, metadata !7073, null}
!7084 = metadata !{i32 1544, i32 0, metadata !7073, null}
!7085 = metadata !{i32 1547, i32 0, metadata !7073, null}
!7086 = metadata !{i32 1552, i32 0, metadata !7073, null}
!7087 = metadata !{i32 1555, i32 0, metadata !7073, null}
!7088 = metadata !{i32 1556, i32 0, metadata !7073, null}
!7089 = metadata !{i32 1559, i32 0, metadata !7073, null}
!7090 = metadata !{i32 1560, i32 0, metadata !7073, null}
!7091 = metadata !{i32 1561, i32 0, metadata !7073, null}
!7092 = metadata !{i32 1554, i32 0, metadata !7073, null}
!7093 = metadata !{i32 1567, i32 0, metadata !7073, null}
!7094 = metadata !{i32 1568, i32 0, metadata !7073, null}
!7095 = metadata !{i32 1569, i32 0, metadata !7073, null}
!7096 = metadata !{i32 1572, i32 0, metadata !7073, null}
!7097 = metadata !{i32 1575, i32 0, metadata !7073, null}
!7098 = metadata !{i32 1576, i32 0, metadata !7073, null}
!7099 = metadata !{i32 1577, i32 0, metadata !7073, null}
!7100 = metadata !{i32 1566, i32 0, metadata !7073, null}
!7101 = metadata !{i32 1582, i32 0, metadata !7073, null}
!7102 = metadata !{i32 1583, i32 0, metadata !7073, null}
!7103 = metadata !{i32 1586, i32 0, metadata !7073, null}
!7104 = metadata !{i32 1587, i32 0, metadata !7073, null}
!7105 = metadata !{i32 1754, i32 0, metadata !6976, null}
!7106 = metadata !{i32 1758, i32 0, metadata !6976, null}
!7107 = metadata !{i32 1763, i32 0, metadata !6976, null}
!7108 = metadata !{i32 1764, i32 0, metadata !6976, null}
!7109 = metadata !{i32 1770, i32 0, metadata !6976, null}
!7110 = metadata !{i32 1771, i32 0, metadata !6976, null}
!7111 = metadata !{i32 1774, i32 0, metadata !6976, null}
!7112 = metadata !{i32 1780, i32 0, metadata !6976, null}
!7113 = metadata !{i32 1134, i32 0, metadata !7114, null}
!7114 = metadata !{i32 589835, metadata !2225, i32 1131, i32 0, metadata !2146, i32 5} ; [ DW_TAG_lexical_block ]
!7115 = metadata !{i32 1140, i32 0, metadata !7114, null}
!7116 = metadata !{i32 1143, i32 0, metadata !7114, null}
!7117 = metadata !{i32 1144, i32 0, metadata !7114, null}
!7118 = metadata !{i32 1146, i32 0, metadata !7114, null}
!7119 = metadata !{i32 1167, i32 0, metadata !7114, null}
!7120 = metadata !{i32 36, i32 0, metadata !7121, null}
!7121 = metadata !{i32 589835, metadata !2228, i32 23, i32 0, metadata !2229, i32 0} ; [ DW_TAG_lexical_block ]
!7122 = metadata !{i32 37, i32 0, metadata !7121, null}
!7123 = metadata !{i32 40, i32 0, metadata !7121, null}
!7124 = metadata !{i32 43, i32 0, metadata !7121, null}
!7125 = metadata !{i32 50, i32 0, metadata !7121, null}
!7126 = metadata !{i32 52, i32 0, metadata !7121, null}
!7127 = metadata !{i32 53, i32 0, metadata !7121, null}
!7128 = metadata !{i32 58, i32 0, metadata !7121, null}
!7129 = metadata !{i32 59, i32 0, metadata !7121, null}
!7130 = metadata !{i32 60, i32 0, metadata !7121, null}
!7131 = metadata !{i32 61, i32 0, metadata !7121, null}
!7132 = metadata !{i32 62, i32 0, metadata !7121, null}
!7133 = metadata !{i32 64, i32 0, metadata !7121, null}
!7134 = metadata !{i32 65, i32 0, metadata !7121, null}
!7135 = metadata !{i32 66, i32 0, metadata !7121, null}
!7136 = metadata !{i32 67, i32 0, metadata !7121, null}
!7137 = metadata !{i32 69, i32 0, metadata !7121, null}
!7138 = metadata !{i32 71, i32 0, metadata !7121, null}
!7139 = metadata !{i32 395, i32 0, metadata !7140, null}
!7140 = metadata !{i32 589835, metadata !2251, i32 394, i32 0, metadata !2254, i32 0} ; [ DW_TAG_lexical_block ]
!7141 = metadata !{i32 1796, i32 0, metadata !7142, null}
!7142 = metadata !{i32 589835, metadata !2273, i32 1791, i32 0, metadata !2276, i32 0} ; [ DW_TAG_lexical_block ]
!7143 = metadata !{i32 1805, i32 0, metadata !7142, null}
!7144 = metadata !{i32 1806, i32 0, metadata !7142, null}
!7145 = metadata !{i32 1817, i32 0, metadata !7142, null}
!7146 = metadata !{i32 1818, i32 0, metadata !7142, null}
!7147 = metadata !{i32 1819, i32 0, metadata !7142, null}
!7148 = metadata !{i32 1822, i32 0, metadata !7142, null}
!7149 = metadata !{i32 1823, i32 0, metadata !7142, null}
!7150 = metadata !{i32 1825, i32 0, metadata !7142, null}
!7151 = metadata !{i32 1826, i32 0, metadata !7142, null}
!7152 = metadata !{i32 1827, i32 0, metadata !7142, null}
!7153 = metadata !{i32 1830, i32 0, metadata !7142, null}
!7154 = metadata !{i32 1834, i32 0, metadata !7142, null}
!7155 = metadata !{i32 1835, i32 0, metadata !7142, null}
!7156 = metadata !{i32 1836, i32 0, metadata !7142, null}
!7157 = metadata !{i32 1837, i32 0, metadata !7142, null}
!7158 = metadata !{i32 1840, i32 0, metadata !7142, null}
!7159 = metadata !{i32 1849, i32 0, metadata !7142, null}
!7160 = metadata !{i32 1850, i32 0, metadata !7142, null}
!7161 = metadata !{i32 1851, i32 0, metadata !7142, null}
!7162 = metadata !{i32 1854, i32 0, metadata !7142, null}
!7163 = metadata !{i32 1855, i32 0, metadata !7142, null}
!7164 = metadata !{i32 1856, i32 0, metadata !7142, null}
!7165 = metadata !{i32 1859, i32 0, metadata !7142, null}
!7166 = metadata !{i32 1860, i32 0, metadata !7142, null}
!7167 = metadata !{i32 1861, i32 0, metadata !7142, null}
!7168 = metadata !{i32 1862, i32 0, metadata !7142, null}
!7169 = metadata !{i32 1863, i32 0, metadata !7142, null}
!7170 = metadata !{i32 1871, i32 0, metadata !7142, null}
!7171 = metadata !{i32 1878, i32 0, metadata !7142, null}
!7172 = metadata !{i32 1879, i32 0, metadata !7142, null}
!7173 = metadata !{i32 1881, i32 0, metadata !7142, null}
!7174 = metadata !{i32 1883, i32 0, metadata !7142, null}
!7175 = metadata !{i32 1884, i32 0, metadata !7142, null}
!7176 = metadata !{i32 1888, i32 0, metadata !7142, null}
!7177 = metadata !{i32 1889, i32 0, metadata !7142, null}
!7178 = metadata !{i32 2057, i32 0, metadata !7142, null}
!7179 = metadata !{i32 2058, i32 0, metadata !7142, null}
!7180 = metadata !{i32 2059, i32 0, metadata !7142, null}
!7181 = metadata !{i32 2061, i32 0, metadata !7142, null}
!7182 = metadata !{i32 2062, i32 0, metadata !7142, null}
!7183 = metadata !{i32 2073, i32 0, metadata !7142, null}
!7184 = metadata !{i32 2074, i32 0, metadata !7142, null}
!7185 = metadata !{i32 2075, i32 0, metadata !7142, null}
!7186 = metadata !{i32 2078, i32 0, metadata !7142, null}
!7187 = metadata !{i32 2081, i32 0, metadata !7142, null}
!7188 = metadata !{i32 2072, i32 0, metadata !7142, null}
!7189 = metadata !{i32 2087, i32 0, metadata !7142, null}
!7190 = metadata !{i32 2088, i32 0, metadata !7142, null}
!7191 = metadata !{i32 2089, i32 0, metadata !7142, null}
!7192 = metadata !{i32 2090, i32 0, metadata !7142, null}
!7193 = metadata !{i32 2093, i32 0, metadata !7142, null}
!7194 = metadata !{i32 2094, i32 0, metadata !7142, null}
!7195 = metadata !{i32 2095, i32 0, metadata !7142, null}
!7196 = metadata !{i32 2097, i32 0, metadata !7142, null}
!7197 = metadata !{i32 2098, i32 0, metadata !7142, null}
!7198 = metadata !{i32 2101, i32 0, metadata !7142, null}
!7199 = metadata !{i32 2110, i32 0, metadata !7142, null}
!7200 = metadata !{i32 2112, i32 0, metadata !7142, null}
!7201 = metadata !{i32 2113, i32 0, metadata !7142, null}
!7202 = metadata !{i32 2114, i32 0, metadata !7142, null}
!7203 = metadata !{i32 2130, i32 0, metadata !7142, null}
!7204 = metadata !{i32 2117, i32 0, metadata !7142, null}
!7205 = metadata !{i32 2118, i32 0, metadata !7142, null}
!7206 = metadata !{i32 2123, i32 0, metadata !7142, null}
!7207 = metadata !{i32 2124, i32 0, metadata !7142, null}
!7208 = metadata !{i32 2131, i32 0, metadata !7142, null}
!7209 = metadata !{i32 2133, i32 0, metadata !7142, null}
!7210 = metadata !{i32 2134, i32 0, metadata !7142, null}
!7211 = metadata !{i32 2135, i32 0, metadata !7142, null}
!7212 = metadata !{i32 2137, i32 0, metadata !7142, null}
!7213 = metadata !{i32 2138, i32 0, metadata !7142, null}
!7214 = metadata !{i32 2139, i32 0, metadata !7142, null}
!7215 = metadata !{i32 2144, i32 0, metadata !7142, null}
!7216 = metadata !{i32 2145, i32 0, metadata !7142, null}
!7217 = metadata !{i32 2146, i32 0, metadata !7142, null}
!7218 = metadata !{i32 2148, i32 0, metadata !7142, null}
!7219 = metadata !{i32 2143, i32 0, metadata !7142, null}
!7220 = metadata !{i32 2153, i32 0, metadata !7142, null}
!7221 = metadata !{i32 2156, i32 0, metadata !7222, null}
!7222 = metadata !{i32 589835, metadata !7142, i32 2156, i32 0, metadata !2276, i32 1} ; [ DW_TAG_lexical_block ]
!7223 = metadata !{i32 2164, i32 0, metadata !7222, null}
!7224 = metadata !{i32 2166, i32 0, metadata !7222, null}
!7225 = metadata !{i32 2169, i32 0, metadata !7222, null}
!7226 = metadata !{i32 2176, i32 0, metadata !7222, null}
!7227 = metadata !{i32 2179, i32 0, metadata !7222, null}
!7228 = metadata !{i32 2180, i32 0, metadata !7222, null}
!7229 = metadata !{i32 2181, i32 0, metadata !7222, null}
!7230 = metadata !{i32 2182, i32 0, metadata !7222, null}
!7231 = metadata !{i32 2185, i32 0, metadata !7222, null}
!7232 = metadata !{i32 2199, i32 0, metadata !7142, null}
!7233 = metadata !{i32 2195, i32 0, metadata !7142, null}
!7234 = metadata !{i32 2201, i32 0, metadata !7142, null}
!7235 = metadata !{i32 2203, i32 0, metadata !7142, null}
!7236 = metadata !{i32 2204, i32 0, metadata !7142, null}
!7237 = metadata !{i32 2208, i32 0, metadata !7142, null}
!7238 = metadata !{i32 2209, i32 0, metadata !7142, null}
!7239 = metadata !{i32 2210, i32 0, metadata !7142, null}
!7240 = metadata !{i32 2218, i32 0, metadata !7142, null}
!7241 = metadata !{i32 2219, i32 0, metadata !7142, null}
!7242 = metadata !{i32 2221, i32 0, metadata !7142, null}
!7243 = metadata !{i32 2222, i32 0, metadata !7142, null}
!7244 = metadata !{i32 2223, i32 0, metadata !7142, null}
!7245 = metadata !{i32 2225, i32 0, metadata !7142, null}
!7246 = metadata !{i32 2226, i32 0, metadata !7142, null}
!7247 = metadata !{i32 2230, i32 0, metadata !7142, null}
!7248 = metadata !{i32 2231, i32 0, metadata !7142, null}
!7249 = metadata !{i32 2232, i32 0, metadata !7142, null}
!7250 = metadata !{i32 2234, i32 0, metadata !7142, null}
!7251 = metadata !{i32 2229, i32 0, metadata !7142, null}
!7252 = metadata !{i32 2237, i32 0, metadata !7142, null}
!7253 = metadata !{i32 2244, i32 0, metadata !7142, null}
!7254 = metadata !{i32 2248, i32 0, metadata !7255, null}
!7255 = metadata !{i32 589835, metadata !7142, i32 2248, i32 0, metadata !2276, i32 2} ; [ DW_TAG_lexical_block ]
!7256 = metadata !{i32 2250, i32 0, metadata !7255, null}
!7257 = metadata !{i32 2251, i32 0, metadata !7255, null}
!7258 = metadata !{i32 2252, i32 0, metadata !7255, null}
!7259 = metadata !{i32 2253, i32 0, metadata !7255, null}
!7260 = metadata !{i32 2254, i32 0, metadata !7255, null}
!7261 = metadata !{i32 2256, i32 0, metadata !7255, null}
!7262 = metadata !{i32 2258, i32 0, metadata !7255, null}
!7263 = metadata !{i32 2260, i32 0, metadata !7255, null}
!7264 = metadata !{i32 2261, i32 0, metadata !7255, null}
!7265 = metadata !{i32 2266, i32 0, metadata !7142, null}
!7266 = metadata !{i32 2267, i32 0, metadata !7142, null}
!7267 = metadata !{i32 2268, i32 0, metadata !7142, null}
!7268 = metadata !{i32 246, i32 0, metadata !7269, null}
!7269 = metadata !{i32 589835, metadata !2359, i32 239, i32 0, metadata !2362, i32 0} ; [ DW_TAG_lexical_block ]
!7270 = metadata !{i32 247, i32 0, metadata !7269, null}
!7271 = metadata !{i32 249, i32 0, metadata !7269, null}
!7272 = metadata !{i32 250, i32 0, metadata !7269, null}
!7273 = metadata !{i32 253, i32 0, metadata !7269, null}
!7274 = metadata !{i32 254, i32 0, metadata !7269, null}
!7275 = metadata !{i32 264, i32 0, metadata !7269, null}
!7276 = metadata !{i32 265, i32 0, metadata !7269, null}
!7277 = metadata !{i32 266, i32 0, metadata !7269, null}
!7278 = metadata !{i32 268, i32 0, metadata !7269, null}
!7279 = metadata !{i32 270, i32 0, metadata !7269, null}
!7280 = metadata !{i32 283, i32 0, metadata !7281, null}
!7281 = metadata !{i32 589835, metadata !2394, i32 279, i32 0, metadata !2362, i32 1} ; [ DW_TAG_lexical_block ]
!7282 = metadata !{i32 284, i32 0, metadata !7281, null}
!7283 = metadata !{i32 285, i32 0, metadata !7281, null}
!7284 = metadata !{i32 287, i32 0, metadata !7281, null}
!7285 = metadata !{i32 288, i32 0, metadata !7281, null}
!7286 = metadata !{i32 292, i32 0, metadata !7281, null}
!7287 = metadata !{i32 294, i32 0, metadata !7281, null}
!7288 = metadata !{i32 301, i32 0, metadata !7281, null}
!7289 = metadata !{i32 302, i32 0, metadata !7281, null}
!7290 = metadata !{i32 304, i32 0, metadata !7281, null}
!7291 = metadata !{i32 717, i32 0, metadata !7292, null}
!7292 = metadata !{i32 589835, metadata !2397, i32 716, i32 0, metadata !2400, i32 0} ; [ DW_TAG_lexical_block ]
!7293 = metadata !{i32 718, i32 0, metadata !7292, null}
!7294 = metadata !{i32 719, i32 0, metadata !7292, null}
!7295 = metadata !{i32 720, i32 0, metadata !7292, null}
!7296 = metadata !{i32 722, i32 0, metadata !7292, null}
!7297 = metadata !{i32 723, i32 0, metadata !7292, null}
!7298 = metadata !{i32 741, i32 0, metadata !7292, null}
!7299 = metadata !{i32 742, i32 0, metadata !7292, null}
!7300 = metadata !{i32 748, i32 0, metadata !7292, null}
!7301 = metadata !{i32 753, i32 0, metadata !7292, null}
!7302 = metadata !{i32 763, i32 0, metadata !7303, null}
!7303 = metadata !{i32 589835, metadata !2466, i32 756, i32 0, metadata !2400, i32 1} ; [ DW_TAG_lexical_block ]
!7304 = metadata !{i32 765, i32 0, metadata !7303, null}
!7305 = metadata !{i32 766, i32 0, metadata !7303, null}
!7306 = metadata !{i32 767, i32 0, metadata !7303, null}
!7307 = metadata !{i32 770, i32 0, metadata !7303, null}
!7308 = metadata !{i32 788, i32 0, metadata !7303, null}
!7309 = metadata !{i32 789, i32 0, metadata !7303, null}
!7310 = metadata !{i32 790, i32 0, metadata !7303, null}
!7311 = metadata !{i32 793, i32 0, metadata !7303, null}
!7312 = metadata !{i32 796, i32 0, metadata !7303, null}
!7313 = metadata !{i32 799, i32 0, metadata !7303, null}
!7314 = metadata !{i32 800, i32 0, metadata !7303, null}
!7315 = metadata !{i32 805, i32 0, metadata !7316, null}
!7316 = metadata !{i32 589835, metadata !2467, i32 804, i32 0, metadata !2400, i32 2} ; [ DW_TAG_lexical_block ]
!7317 = metadata !{i32 806, i32 0, metadata !7316, null}
!7318 = metadata !{i32 807, i32 0, metadata !7316, null}
!7319 = metadata !{i32 808, i32 0, metadata !7316, null}
!7320 = metadata !{i32 809, i32 0, metadata !7316, null}
!7321 = metadata !{i32 810, i32 0, metadata !7316, null}
!7322 = metadata !{i32 811, i32 0, metadata !7316, null}
!7323 = metadata !{i32 815, i32 0, metadata !7316, null}
!7324 = metadata !{i32 832, i32 0, metadata !7325, null}
!7325 = metadata !{i32 589835, metadata !2470, i32 830, i32 0, metadata !2473, i32 0} ; [ DW_TAG_lexical_block ]
!7326 = metadata !{i32 838, i32 0, metadata !7325, null}
!7327 = metadata !{i32 840, i32 0, metadata !7325, null}
!7328 = metadata !{i32 842, i32 0, metadata !7325, null}
!7329 = metadata !{i32 843, i32 0, metadata !7325, null}
!7330 = metadata !{i32 849, i32 0, metadata !7325, null}
!7331 = metadata !{i32 850, i32 0, metadata !7325, null}
!7332 = metadata !{i32 852, i32 0, metadata !7325, null}
!7333 = metadata !{i32 854, i32 0, metadata !7325, null}
!7334 = metadata !{i32 855, i32 0, metadata !7325, null}
!7335 = metadata !{i32 858, i32 0, metadata !7325, null}
!7336 = metadata !{i32 859, i32 0, metadata !7325, null}
!7337 = metadata !{i32 862, i32 0, metadata !7325, null}
!7338 = metadata !{i32 866, i32 0, metadata !7325, null}
!7339 = metadata !{i32 869, i32 0, metadata !7325, null}
!7340 = metadata !{i32 870, i32 0, metadata !7325, null}
!7341 = metadata !{i32 872, i32 0, metadata !7325, null}
!7342 = metadata !{i32 873, i32 0, metadata !7325, null}
!7343 = metadata !{i32 874, i32 0, metadata !7325, null}
!7344 = metadata !{i32 877, i32 0, metadata !7325, null}
!7345 = metadata !{i32 878, i32 0, metadata !7325, null}
!7346 = metadata !{i32 880, i32 0, metadata !7325, null}
!7347 = metadata !{i32 881, i32 0, metadata !7325, null}
!7348 = metadata !{i32 894, i32 0, metadata !7325, null}
!7349 = metadata !{i32 896, i32 0, metadata !7325, null}
!7350 = metadata !{i32 899, i32 0, metadata !7325, null}
!7351 = metadata !{i32 901, i32 0, metadata !7325, null}
!7352 = metadata !{i32 905, i32 0, metadata !7325, null}
!7353 = metadata !{i32 909, i32 0, metadata !7325, null}
!7354 = metadata !{i32 910, i32 0, metadata !7325, null}
!7355 = metadata !{i32 911, i32 0, metadata !7325, null}
!7356 = metadata !{i32 912, i32 0, metadata !7325, null}
!7357 = metadata !{i32 913, i32 0, metadata !7325, null}
!7358 = metadata !{i32 920, i32 0, metadata !7325, null}
!7359 = metadata !{i32 922, i32 0, metadata !7325, null}
!7360 = metadata !{i32 923, i32 0, metadata !7325, null}
!7361 = metadata !{i32 926, i32 0, metadata !7325, null}
!7362 = metadata !{i32 927, i32 0, metadata !7325, null}
!7363 = metadata !{i32 928, i32 0, metadata !7325, null}
!7364 = metadata !{i32 929, i32 0, metadata !7325, null}
!7365 = metadata !{i32 931, i32 0, metadata !7325, null}
!7366 = metadata !{i32 938, i32 0, metadata !7325, null}
!7367 = metadata !{i32 940, i32 0, metadata !7325, null}
!7368 = metadata !{i32 941, i32 0, metadata !7369, null}
!7369 = metadata !{i32 589835, metadata !7325, i32 941, i32 0, metadata !2473, i32 1} ; [ DW_TAG_lexical_block ]
!7370 = metadata !{i32 955, i32 0, metadata !7369, null}
!7371 = metadata !{i32 956, i32 0, metadata !7369, null}
!7372 = metadata !{i32 962, i32 0, metadata !7369, null}
!7373 = metadata !{i32 964, i32 0, metadata !7369, null}
!7374 = metadata !{i32 967, i32 0, metadata !7369, null}
!7375 = metadata !{i32 968, i32 0, metadata !7369, null}
!7376 = metadata !{i32 970, i32 0, metadata !7325, null}
!7377 = metadata !{i32 972, i32 0, metadata !7325, null}
!7378 = metadata !{i32 973, i32 0, metadata !7325, null}
!7379 = metadata !{i32 25, i32 0, metadata !7380, null}
!7380 = metadata !{i32 589835, metadata !2497, i32 21, i32 0, metadata !2498, i32 0} ; [ DW_TAG_lexical_block ]
!7381 = metadata !{i32 26, i32 0, metadata !7380, null}
!7382 = metadata !{i32 30, i32 0, metadata !7380, null}
!7383 = metadata !{i32 34, i32 0, metadata !7380, null}
!7384 = metadata !{i32 35, i32 0, metadata !7380, null}
!7385 = metadata !{i32 37, i32 0, metadata !7380, null}
!7386 = metadata !{i32 38, i32 0, metadata !7380, null}
!7387 = metadata !{i32 39, i32 0, metadata !7380, null}
!7388 = metadata !{i32 45, i32 0, metadata !7380, null}
!7389 = metadata !{i32 50, i32 0, metadata !7380, null}
!7390 = metadata !{i32 59, i32 0, metadata !7380, null}
!7391 = metadata !{i32 60, i32 0, metadata !7380, null}
!7392 = metadata !{i32 63, i32 0, metadata !7380, null}
!7393 = metadata !{i32 64, i32 0, metadata !7380, null}
!7394 = metadata !{i32 67, i32 0, metadata !7380, null}
!7395 = metadata !{i32 66, i32 0, metadata !7396, null}
!7396 = metadata !{i32 589835, metadata !2538, i32 62, i32 0, metadata !2539, i32 0} ; [ DW_TAG_lexical_block ]
!7397 = metadata !{i32 71, i32 0, metadata !7396, null}
!7398 = metadata !{i32 174, i32 0, metadata !7399, null}
!7399 = metadata !{i32 589835, metadata !2579, i32 166, i32 0, metadata !2580, i32 0} ; [ DW_TAG_lexical_block ]
!7400 = metadata !{i32 194, i32 0, metadata !7399, null}
!7401 = metadata !{i32 197, i32 0, metadata !7399, null}
!7402 = metadata !{i32 202, i32 0, metadata !7399, null}
!7403 = metadata !{i32 203, i32 0, metadata !7399, null}
!7404 = metadata !{i32 204, i32 0, metadata !7399, null}
!7405 = metadata !{i32 207, i32 0, metadata !7399, null}
!7406 = metadata !{i32 208, i32 0, metadata !7399, null}
!7407 = metadata !{i32 215, i32 0, metadata !7399, null}
!7408 = metadata !{i32 216, i32 0, metadata !7399, null}
!7409 = metadata !{i32 218, i32 0, metadata !7399, null}
!7410 = metadata !{i32 219, i32 0, metadata !7399, null}
!7411 = metadata !{i32 220, i32 0, metadata !7399, null}
!7412 = metadata !{i32 222, i32 0, metadata !7399, null}
!7413 = metadata !{i32 223, i32 0, metadata !7399, null}
!7414 = metadata !{i32 224, i32 0, metadata !7399, null}
!7415 = metadata !{i32 225, i32 0, metadata !7399, null}
!7416 = metadata !{i32 228, i32 0, metadata !7399, null}
!7417 = metadata !{i32 229, i32 0, metadata !7399, null}
!7418 = metadata !{i32 230, i32 0, metadata !7399, null}
!7419 = metadata !{i32 233, i32 0, metadata !7399, null}
!7420 = metadata !{i32 234, i32 0, metadata !7399, null}
!7421 = metadata !{i32 237, i32 0, metadata !7399, null}
!7422 = metadata !{i32 246, i32 0, metadata !7423, null}
!7423 = metadata !{i32 589835, metadata !2590, i32 207, i32 0, metadata !2591, i32 0} ; [ DW_TAG_lexical_block ]
!7424 = metadata !{i32 247, i32 0, metadata !7423, null}
!7425 = metadata !{i32 248, i32 0, metadata !7423, null}
!7426 = metadata !{i32 250, i32 0, metadata !7423, null}
!7427 = metadata !{i32 251, i32 0, metadata !7423, null}
!7428 = metadata !{i32 259, i32 0, metadata !7423, null}
!7429 = metadata !{i32 263, i32 0, metadata !7423, null}
!7430 = metadata !{i32 264, i32 0, metadata !7423, null}
!7431 = metadata !{i32 267, i32 0, metadata !7423, null}
!7432 = metadata !{i32 268, i32 0, metadata !7423, null}
!7433 = metadata !{i32 269, i32 0, metadata !7423, null}
!7434 = metadata !{i32 270, i32 0, metadata !7423, null}
!7435 = metadata !{i32 271, i32 0, metadata !7423, null}
!7436 = metadata !{i32 274, i32 0, metadata !7423, null}
!7437 = metadata !{i32 275, i32 0, metadata !7423, null}
!7438 = metadata !{i32 276, i32 0, metadata !7423, null}
!7439 = metadata !{i32 277, i32 0, metadata !7423, null}
!7440 = metadata !{i32 281, i32 0, metadata !7423, null}
!7441 = metadata !{i32 283, i32 0, metadata !7423, null}
!7442 = metadata !{i32 284, i32 0, metadata !7423, null}
!7443 = metadata !{i32 287, i32 0, metadata !7423, null}
!7444 = metadata !{i32 291, i32 0, metadata !7423, null}
!7445 = metadata !{i32 292, i32 0, metadata !7423, null}
!7446 = metadata !{i32 293, i32 0, metadata !7423, null}
!7447 = metadata !{i32 296, i32 0, metadata !7423, null}
!7448 = metadata !{i32 298, i32 0, metadata !7423, null}
!7449 = metadata !{i32 299, i32 0, metadata !7423, null}
!7450 = metadata !{i32 300, i32 0, metadata !7423, null}
!7451 = metadata !{i32 301, i32 0, metadata !7423, null}
!7452 = metadata !{i32 302, i32 0, metadata !7423, null}
!7453 = metadata !{i32 303, i32 0, metadata !7423, null}
!7454 = metadata !{i32 305, i32 0, metadata !7423, null}
!7455 = metadata !{i32 352, i32 0, metadata !7456, null}
!7456 = metadata !{i32 589835, metadata !7423, i32 352, i32 0, metadata !2591, i32 1} ; [ DW_TAG_lexical_block ]
!7457 = metadata !{i32 353, i32 0, metadata !7456, null}
!7458 = metadata !{i32 354, i32 0, metadata !7456, null}
!7459 = metadata !{i32 359, i32 0, metadata !7460, null}
!7460 = metadata !{i32 589835, metadata !7456, i32 359, i32 0, metadata !2591, i32 2} ; [ DW_TAG_lexical_block ]
!7461 = metadata !{i32 360, i32 0, metadata !7460, null}
!7462 = metadata !{i32 361, i32 0, metadata !7460, null}
!7463 = metadata !{i32 365, i32 0, metadata !7460, null}
!7464 = metadata !{i32 366, i32 0, metadata !7460, null}
!7465 = metadata !{i32 367, i32 0, metadata !7460, null}
!7466 = metadata !{i32 368, i32 0, metadata !7460, null}
!7467 = metadata !{i32 369, i32 0, metadata !7460, null}
!7468 = metadata !{i32 372, i32 0, metadata !7460, null}
!7469 = metadata !{i32 373, i32 0, metadata !7460, null}
!7470 = metadata !{i32 374, i32 0, metadata !7460, null}
!7471 = metadata !{i32 377, i32 0, metadata !7460, null}
!7472 = metadata !{i32 378, i32 0, metadata !7460, null}
!7473 = metadata !{i32 381, i32 0, metadata !7423, null}
!7474 = metadata !{i32 382, i32 0, metadata !7423, null}
!7475 = metadata !{i32 383, i32 0, metadata !7423, null}
!7476 = metadata !{i32 387, i32 0, metadata !7423, null}
!7477 = metadata !{i32 390, i32 0, metadata !7478, null}
!7478 = metadata !{i32 589835, metadata !7423, i32 390, i32 0, metadata !2591, i32 3} ; [ DW_TAG_lexical_block ]
!7479 = metadata !{i32 391, i32 0, metadata !7478, null}
!7480 = metadata !{i32 393, i32 0, metadata !7481, null}
!7481 = metadata !{i32 589835, metadata !7478, i32 393, i32 0, metadata !2591, i32 4} ; [ DW_TAG_lexical_block ]
!7482 = metadata !{i32 398, i32 0, metadata !7481, null}
!7483 = metadata !{i32 399, i32 0, metadata !7481, null}
!7484 = metadata !{i32 400, i32 0, metadata !7481, null}
!7485 = metadata !{i32 402, i32 0, metadata !7481, null}
!7486 = metadata !{i32 403, i32 0, metadata !7481, null}
!7487 = metadata !{i32 404, i32 0, metadata !7481, null}
!7488 = metadata !{i32 405, i32 0, metadata !7478, null}
!7489 = metadata !{i32 410, i32 0, metadata !7423, null}
!7490 = metadata !{i32 411, i32 0, metadata !7423, null}
!7491 = metadata !{i32 412, i32 0, metadata !7423, null}
!7492 = metadata !{i32 415, i32 0, metadata !7423, null}
!7493 = metadata !{i32 416, i32 0, metadata !7423, null}
!7494 = metadata !{i32 417, i32 0, metadata !7423, null}
!7495 = metadata !{i32 419, i32 0, metadata !7423, null}
!7496 = metadata !{i32 421, i32 0, metadata !7423, null}
!7497 = metadata !{i32 422, i32 0, metadata !7423, null}
!7498 = metadata !{i32 423, i32 0, metadata !7423, null}
!7499 = metadata !{i32 424, i32 0, metadata !7423, null}
!7500 = metadata !{i32 425, i32 0, metadata !7423, null}
!7501 = metadata !{i32 426, i32 0, metadata !7423, null}
!7502 = metadata !{i32 430, i32 0, metadata !7423, null}
!7503 = metadata !{i32 431, i32 0, metadata !7423, null}
!7504 = metadata !{i32 432, i32 0, metadata !7423, null}
!7505 = metadata !{i32 436, i32 0, metadata !7506, null}
!7506 = metadata !{i32 589835, metadata !7423, i32 436, i32 0, metadata !2591, i32 5} ; [ DW_TAG_lexical_block ]
!7507 = metadata !{i32 437, i32 0, metadata !7506, null}
!7508 = metadata !{i32 438, i32 0, metadata !7506, null}
!7509 = metadata !{i32 439, i32 0, metadata !7506, null}
!7510 = metadata !{i32 440, i32 0, metadata !7506, null}
!7511 = metadata !{i32 441, i32 0, metadata !7506, null}
!7512 = metadata !{i32 446, i32 0, metadata !7506, null}
!7513 = metadata !{i32 447, i32 0, metadata !7506, null}
!7514 = metadata !{i32 466, i32 0, metadata !7423, null}
!7515 = metadata !{i32 467, i32 0, metadata !7423, null}
!7516 = metadata !{i32 468, i32 0, metadata !7423, null}
!7517 = metadata !{i32 469, i32 0, metadata !7423, null}
!7518 = metadata !{i32 471, i32 0, metadata !7423, null}
!7519 = metadata !{i32 473, i32 0, metadata !7423, null}
!7520 = metadata !{i32 475, i32 0, metadata !7423, null}
!7521 = metadata !{i32 476, i32 0, metadata !7423, null}
!7522 = metadata !{i32 477, i32 0, metadata !7423, null}
!7523 = metadata !{i32 480, i32 0, metadata !7423, null}
!7524 = metadata !{i32 481, i32 0, metadata !7423, null}
!7525 = metadata !{i32 482, i32 0, metadata !7423, null}
!7526 = metadata !{i32 485, i32 0, metadata !7423, null}
!7527 = metadata !{i32 486, i32 0, metadata !7423, null}
!7528 = metadata !{i32 489, i32 0, metadata !7423, null}
!7529 = metadata !{i32 490, i32 0, metadata !7423, null}
!7530 = metadata !{i32 491, i32 0, metadata !7423, null}
!7531 = metadata !{i32 492, i32 0, metadata !7423, null}
!7532 = metadata !{i32 493, i32 0, metadata !7423, null}
!7533 = metadata !{i32 494, i32 0, metadata !7423, null}
!7534 = metadata !{i32 497, i32 0, metadata !7535, null}
!7535 = metadata !{i32 589835, metadata !7423, i32 497, i32 0, metadata !2591, i32 6} ; [ DW_TAG_lexical_block ]
!7536 = metadata !{i32 498, i32 0, metadata !7535, null}
!7537 = metadata !{i32 537, i32 0, metadata !7535, null}
!7538 = metadata !{i32 538, i32 0, metadata !7535, null}
!7539 = metadata !{i32 539, i32 0, metadata !7535, null}
!7540 = metadata !{i32 540, i32 0, metadata !7535, null}
!7541 = metadata !{i32 541, i32 0, metadata !7535, null}
!7542 = metadata !{i32 542, i32 0, metadata !7535, null}
!7543 = metadata !{i32 543, i32 0, metadata !7535, null}
!7544 = metadata !{i32 544, i32 0, metadata !7535, null}
!7545 = metadata !{i32 545, i32 0, metadata !7535, null}
!7546 = metadata !{i32 546, i32 0, metadata !7535, null}
!7547 = metadata !{i32 547, i32 0, metadata !7535, null}
!7548 = metadata !{i32 548, i32 0, metadata !7535, null}
!7549 = metadata !{i32 550, i32 0, metadata !7535, null}
!7550 = metadata !{i32 551, i32 0, metadata !7535, null}
!7551 = metadata !{i32 552, i32 0, metadata !7535, null}
!7552 = metadata !{i32 553, i32 0, metadata !7535, null}
!7553 = metadata !{i32 554, i32 0, metadata !7535, null}
!7554 = metadata !{i32 556, i32 0, metadata !7535, null}
!7555 = metadata !{i32 559, i32 0, metadata !7535, null}
!7556 = metadata !{i32 567, i32 0, metadata !7535, null}
!7557 = metadata !{i32 569, i32 0, metadata !7535, null}
!7558 = metadata !{i32 570, i32 0, metadata !7535, null}
!7559 = metadata !{i32 585, i32 0, metadata !7535, null}
!7560 = metadata !{i32 588, i32 0, metadata !7535, null}
!7561 = metadata !{i32 589, i32 0, metadata !7535, null}
!7562 = metadata !{i32 590, i32 0, metadata !7535, null}
!7563 = metadata !{i32 591, i32 0, metadata !7535, null}
!7564 = metadata !{i32 592, i32 0, metadata !7535, null}
!7565 = metadata !{i32 594, i32 0, metadata !7535, null}
!7566 = metadata !{i32 595, i32 0, metadata !7535, null}
!7567 = metadata !{i32 596, i32 0, metadata !7535, null}
!7568 = metadata !{i32 597, i32 0, metadata !7535, null}
!7569 = metadata !{i32 598, i32 0, metadata !7535, null}
!7570 = metadata !{i32 601, i32 0, metadata !7535, null}
!7571 = metadata !{i32 606, i32 0, metadata !7535, null}
!7572 = metadata !{i32 607, i32 0, metadata !7535, null}
!7573 = metadata !{i32 608, i32 0, metadata !7535, null}
!7574 = metadata !{i32 609, i32 0, metadata !7535, null}
!7575 = metadata !{i32 610, i32 0, metadata !7535, null}
!7576 = metadata !{i32 611, i32 0, metadata !7535, null}
!7577 = metadata !{i32 612, i32 0, metadata !7535, null}
!7578 = metadata !{i32 618, i32 0, metadata !7423, null}
!7579 = metadata !{i32 619, i32 0, metadata !7580, null}
!7580 = metadata !{i32 589835, metadata !7423, i32 619, i32 0, metadata !2591, i32 7} ; [ DW_TAG_lexical_block ]
!7581 = metadata !{i32 621, i32 0, metadata !7580, null}
!7582 = metadata !{i32 622, i32 0, metadata !7580, null}
!7583 = metadata !{i32 629, i32 0, metadata !7580, null}
!7584 = metadata !{i32 630, i32 0, metadata !7580, null}
!7585 = metadata !{i32 631, i32 0, metadata !7580, null}
!7586 = metadata !{i32 634, i32 0, metadata !7580, null}
!7587 = metadata !{i32 635, i32 0, metadata !7580, null}
!7588 = metadata !{i32 637, i32 0, metadata !7580, null}
!7589 = metadata !{i32 638, i32 0, metadata !7580, null}
!7590 = metadata !{i32 639, i32 0, metadata !7580, null}
!7591 = metadata !{i32 640, i32 0, metadata !7580, null}
!7592 = metadata !{i32 641, i32 0, metadata !7580, null}
!7593 = metadata !{i32 643, i32 0, metadata !7580, null}
!7594 = metadata !{i32 644, i32 0, metadata !7580, null}
!7595 = metadata !{i32 645, i32 0, metadata !7580, null}
!7596 = metadata !{i32 646, i32 0, metadata !7580, null}
!7597 = metadata !{i32 649, i32 0, metadata !7423, null}
!7598 = metadata !{i32 652, i32 0, metadata !7599, null}
!7599 = metadata !{i32 589835, metadata !7423, i32 652, i32 0, metadata !2591, i32 8} ; [ DW_TAG_lexical_block ]
!7600 = metadata !{i32 653, i32 0, metadata !7599, null}
!7601 = metadata !{i32 655, i32 0, metadata !7599, null}
!7602 = metadata !{i32 656, i32 0, metadata !7599, null}
!7603 = metadata !{i32 657, i32 0, metadata !7599, null}
!7604 = metadata !{i32 659, i32 0, metadata !7599, null}
!7605 = metadata !{i32 660, i32 0, metadata !7599, null}
!7606 = metadata !{i32 661, i32 0, metadata !7599, null}
!7607 = metadata !{i32 662, i32 0, metadata !7599, null}
!7608 = metadata !{i32 675, i32 0, metadata !7599, null}
!7609 = metadata !{i32 676, i32 0, metadata !7599, null}
!7610 = metadata !{i32 677, i32 0, metadata !7599, null}
!7611 = metadata !{i32 678, i32 0, metadata !7599, null}
!7612 = metadata !{i32 679, i32 0, metadata !7599, null}
!7613 = metadata !{i32 680, i32 0, metadata !7599, null}
!7614 = metadata !{i32 681, i32 0, metadata !7599, null}
!7615 = metadata !{i32 682, i32 0, metadata !7599, null}
!7616 = metadata !{i32 684, i32 0, metadata !7599, null}
!7617 = metadata !{i32 688, i32 0, metadata !7599, null}
!7618 = metadata !{i32 756, i32 0, metadata !7423, null}
!7619 = metadata !{i32 757, i32 0, metadata !7423, null}
!7620 = metadata !{i32 761, i32 0, metadata !7423, null}
!7621 = metadata !{i32 762, i32 0, metadata !7423, null}
!7622 = metadata !{i32 763, i32 0, metadata !7423, null}
!7623 = metadata !{i32 765, i32 0, metadata !7423, null}
!7624 = metadata !{i32 14, i32 0, metadata !7625, null}
!7625 = metadata !{i32 589835, metadata !2664, i32 13, i32 0, metadata !2665, i32 0} ; [ DW_TAG_lexical_block ]
!7626 = metadata !{i32 16, i32 0, metadata !7625, null}
!7627 = metadata !{i32 19, i32 0, metadata !7625, null}
!7628 = metadata !{i32 33, i32 0, metadata !7629, null}
!7629 = metadata !{i32 589835, metadata !7625, i32 13, i32 0, metadata !2665, i32 1} ; [ DW_TAG_lexical_block ]
!7630 = metadata !{i32 34, i32 0, metadata !7629, null}
!7631 = metadata !{i32 36, i32 0, metadata !7629, null}
!7632 = metadata !{i32 38, i32 0, metadata !7629, null}
!7633 = metadata !{i32 42, i32 0, metadata !7625, null}
!7634 = metadata !{i32 45, i32 0, metadata !7625, null}
!7635 = metadata !{i32 59, i32 0, metadata !7636, null}
!7636 = metadata !{i32 589835, metadata !7625, i32 59, i32 0, metadata !2665, i32 2} ; [ DW_TAG_lexical_block ]
!7637 = metadata !{i32 60, i32 0, metadata !7636, null}
!7638 = metadata !{i32 62, i32 0, metadata !7636, null}
!7639 = metadata !{i32 64, i32 0, metadata !7636, null}
!7640 = metadata !{i32 520, i32 0, metadata !7641, null}
!7641 = metadata !{i32 589835, metadata !2674, i32 516, i32 0, metadata !2677, i32 0} ; [ DW_TAG_lexical_block ]
!7642 = metadata !{i32 522, i32 0, metadata !7641, null}
!7643 = metadata !{i32 524, i32 0, metadata !7641, null}
!7644 = metadata !{i32 548, i32 0, metadata !7645, null}
!7645 = metadata !{i32 589835, metadata !7641, i32 548, i32 0, metadata !2677, i32 1} ; [ DW_TAG_lexical_block ]
!7646 = metadata !{i32 550, i32 0, metadata !7645, null}
!7647 = metadata !{i32 552, i32 0, metadata !7645, null}
!7648 = metadata !{i32 553, i32 0, metadata !7645, null}
!7649 = metadata !{i32 570, i32 0, metadata !7650, null}
!7650 = metadata !{i32 589835, metadata !7641, i32 570, i32 0, metadata !2677, i32 2} ; [ DW_TAG_lexical_block ]
!7651 = metadata !{i32 573, i32 0, metadata !7650, null}
!7652 = metadata !{i32 574, i32 0, metadata !7650, null}
!7653 = metadata !{i32 575, i32 0, metadata !7650, null}
!7654 = metadata !{i32 576, i32 0, metadata !7650, null}
!7655 = metadata !{i32 578, i32 0, metadata !7650, null}
!7656 = metadata !{i32 580, i32 0, metadata !7650, null}
!7657 = metadata !{i32 572, i32 0, metadata !7650, null}
!7658 = metadata !{i32 583, i32 0, metadata !7650, null}
!7659 = metadata !{i32 600, i32 0, metadata !7641, null}
!7660 = metadata !{i32 805, i32 0, metadata !7661, null}
!7661 = metadata !{i32 589835, metadata !2737, i32 801, i32 0, metadata !2740, i32 0} ; [ DW_TAG_lexical_block ]
!7662 = metadata !{i32 807, i32 0, metadata !7661, null}
!7663 = metadata !{i32 810, i32 0, metadata !7661, null}
!7664 = metadata !{i32 812, i32 0, metadata !7661, null}
!7665 = metadata !{i32 818, i32 0, metadata !7666, null}
!7666 = metadata !{i32 589835, metadata !2744, i32 816, i32 0, metadata !2740, i32 1} ; [ DW_TAG_lexical_block ]
!7667 = metadata !{i32 819, i32 0, metadata !7666, null}
!7668 = metadata !{i32 821, i32 0, metadata !7666, null}
!7669 = metadata !{i32 822, i32 0, metadata !7666, null}
!7670 = metadata !{i32 826, i32 0, metadata !7666, null}
!7671 = metadata !{i32 873, i32 0, metadata !7672, null}
!7672 = metadata !{i32 589835, metadata !2747, i32 845, i32 0, metadata !2740, i32 2} ; [ DW_TAG_lexical_block ]
!7673 = metadata !{i32 874, i32 0, metadata !7672, null}
!7674 = metadata !{i32 875, i32 0, metadata !7672, null}
!7675 = metadata !{i32 876, i32 0, metadata !7672, null}
!7676 = metadata !{i32 877, i32 0, metadata !7672, null}
!7677 = metadata !{i32 879, i32 0, metadata !7672, null}
!7678 = metadata !{i32 889, i32 0, metadata !7672, null}
!7679 = metadata !{i32 890, i32 0, metadata !7672, null}
!7680 = metadata !{i32 891, i32 0, metadata !7672, null}
!7681 = metadata !{i32 893, i32 0, metadata !7672, null}
!7682 = metadata !{i32 894, i32 0, metadata !7672, null}
!7683 = metadata !{i32 896, i32 0, metadata !7672, null}
!7684 = metadata !{i32 899, i32 0, metadata !7672, null}
!7685 = metadata !{i32 901, i32 0, metadata !7672, null}
!7686 = metadata !{i32 902, i32 0, metadata !7672, null}
!7687 = metadata !{i32 913, i32 0, metadata !7672, null}
!7688 = metadata !{i32 914, i32 0, metadata !7672, null}
!7689 = metadata !{i32 915, i32 0, metadata !7672, null}
!7690 = metadata !{i32 916, i32 0, metadata !7672, null}
!7691 = metadata !{i32 917, i32 0, metadata !7672, null}
!7692 = metadata !{i32 919, i32 0, metadata !7672, null}
!7693 = metadata !{i32 921, i32 0, metadata !7672, null}
!7694 = metadata !{i32 922, i32 0, metadata !7672, null}
!7695 = metadata !{i32 924, i32 0, metadata !7672, null}
!7696 = metadata !{i32 920, i32 0, metadata !7672, null}
!7697 = metadata !{i32 926, i32 0, metadata !7672, null}
!7698 = metadata !{i32 931, i32 0, metadata !7672, null}
!7699 = metadata !{i32 932, i32 0, metadata !7672, null}
!7700 = metadata !{i32 933, i32 0, metadata !7672, null}
!7701 = metadata !{i32 934, i32 0, metadata !7672, null}
!7702 = metadata !{i32 936, i32 0, metadata !7672, null}
!7703 = metadata !{i32 937, i32 0, metadata !7672, null}
!7704 = metadata !{i32 941, i32 0, metadata !7672, null}
!7705 = metadata !{i32 952, i32 0, metadata !7672, null}
!7706 = metadata !{i32 954, i32 0, metadata !7672, null}
!7707 = metadata !{i32 956, i32 0, metadata !7672, null}
!7708 = metadata !{i32 960, i32 0, metadata !7672, null}
!7709 = metadata !{i32 976, i32 0, metadata !7672, null}
!7710 = metadata !{i32 977, i32 0, metadata !7672, null}
!7711 = metadata !{i32 978, i32 0, metadata !7672, null}
!7712 = metadata !{i32 981, i32 0, metadata !7672, null}
!7713 = metadata !{i32 982, i32 0, metadata !7672, null}
!7714 = metadata !{i32 983, i32 0, metadata !7672, null}
!7715 = metadata !{i32 986, i32 0, metadata !7672, null}
!7716 = metadata !{i32 987, i32 0, metadata !7672, null}
!7717 = metadata !{i32 988, i32 0, metadata !7672, null}
!7718 = metadata !{i32 993, i32 0, metadata !7672, null}
!7719 = metadata !{i32 996, i32 0, metadata !7672, null}
!7720 = metadata !{i32 1001, i32 0, metadata !7672, null}
!7721 = metadata !{i32 1003, i32 0, metadata !7672, null}
!7722 = metadata !{i32 1004, i32 0, metadata !7672, null}
!7723 = metadata !{i32 1006, i32 0, metadata !7672, null}
!7724 = metadata !{i32 1008, i32 0, metadata !7672, null}
!7725 = metadata !{i32 1011, i32 0, metadata !7672, null}
!7726 = metadata !{i32 1013, i32 0, metadata !7672, null}
!7727 = metadata !{i32 1015, i32 0, metadata !7672, null}
!7728 = metadata !{i32 1018, i32 0, metadata !7672, null}
!7729 = metadata !{i32 1019, i32 0, metadata !7672, null}
!7730 = metadata !{i32 1020, i32 0, metadata !7672, null}
!7731 = metadata !{i32 1021, i32 0, metadata !7672, null}
!7732 = metadata !{i32 1022, i32 0, metadata !7672, null}
!7733 = metadata !{i32 1026, i32 0, metadata !7672, null}
!7734 = metadata !{i32 1030, i32 0, metadata !7672, null}
!7735 = metadata !{i32 1032, i32 0, metadata !7672, null}
!7736 = metadata !{i32 1033, i32 0, metadata !7672, null}
!7737 = metadata !{i32 1036, i32 0, metadata !7672, null}
!7738 = metadata !{i32 1037, i32 0, metadata !7672, null}
!7739 = metadata !{i32 1038, i32 0, metadata !7672, null}
!7740 = metadata !{i32 1039, i32 0, metadata !7672, null}
!7741 = metadata !{i32 1041, i32 0, metadata !7672, null}
!7742 = metadata !{i32 1044, i32 0, metadata !7672, null}
!7743 = metadata !{i32 1045, i32 0, metadata !7672, null}
!7744 = metadata !{i32 1048, i32 0, metadata !7672, null}
!7745 = metadata !{i32 1051, i32 0, metadata !7672, null}
!7746 = metadata !{i32 1052, i32 0, metadata !7672, null}
!7747 = metadata !{i32 1054, i32 0, metadata !7672, null}
!7748 = metadata !{i32 1056, i32 0, metadata !7672, null}
!7749 = metadata !{i32 1059, i32 0, metadata !7672, null}
!7750 = metadata !{i32 1060, i32 0, metadata !7672, null}
!7751 = metadata !{i32 1061, i32 0, metadata !7672, null}
!7752 = metadata !{i32 1063, i32 0, metadata !7672, null}
!7753 = metadata !{i32 1064, i32 0, metadata !7672, null}
!7754 = metadata !{i32 1065, i32 0, metadata !7672, null}
!7755 = metadata !{i32 1068, i32 0, metadata !7672, null}
!7756 = metadata !{i32 1070, i32 0, metadata !7672, null}
!7757 = metadata !{i32 1071, i32 0, metadata !7672, null}
!7758 = metadata !{i32 1072, i32 0, metadata !7672, null}
!7759 = metadata !{i32 1073, i32 0, metadata !7672, null}
!7760 = metadata !{i32 1074, i32 0, metadata !7672, null}
!7761 = metadata !{i32 1075, i32 0, metadata !7672, null}
!7762 = metadata !{i32 1077, i32 0, metadata !7672, null}
!7763 = metadata !{i32 1103, i32 0, metadata !7672, null}
!7764 = metadata !{i32 1111, i32 0, metadata !7672, null}
!7765 = metadata !{i32 1112, i32 0, metadata !7672, null}
!7766 = metadata !{i32 1115, i32 0, metadata !7672, null}
!7767 = metadata !{i32 1118, i32 0, metadata !7672, null}
!7768 = metadata !{i32 1119, i32 0, metadata !7672, null}
!7769 = metadata !{i32 1120, i32 0, metadata !7672, null}
!7770 = metadata !{i32 1123, i32 0, metadata !7672, null}
!7771 = metadata !{i32 1125, i32 0, metadata !7672, null}
!7772 = metadata !{i32 1126, i32 0, metadata !7672, null}
!7773 = metadata !{i32 1128, i32 0, metadata !7672, null}
!7774 = metadata !{i32 1131, i32 0, metadata !7672, null}
!7775 = metadata !{i32 1132, i32 0, metadata !7672, null}
!7776 = metadata !{i32 1136, i32 0, metadata !7672, null}
!7777 = metadata !{i32 1140, i32 0, metadata !7672, null}
!7778 = metadata !{i32 1141, i32 0, metadata !7672, null}
!7779 = metadata !{i32 1143, i32 0, metadata !7672, null}
!7780 = metadata !{i32 1150, i32 0, metadata !7672, null}
!7781 = metadata !{i32 609, i32 0, metadata !7782, null}
!7782 = metadata !{i32 589835, metadata !2806, i32 606, i32 0, metadata !2809, i32 0} ; [ DW_TAG_lexical_block ]
!7783 = metadata !{i32 612, i32 0, metadata !7782, null}
!7784 = metadata !{i32 613, i32 0, metadata !7782, null}
!7785 = metadata !{i32 614, i32 0, metadata !7782, null}
!7786 = metadata !{i32 615, i32 0, metadata !7782, null}
!7787 = metadata !{i32 616, i32 0, metadata !7782, null}
!7788 = metadata !{i32 619, i32 0, metadata !7782, null}
!7789 = metadata !{i32 629, i32 0, metadata !7790, null}
!7790 = metadata !{i32 589835, metadata !2870, i32 625, i32 0, metadata !2873, i32 0} ; [ DW_TAG_lexical_block ]
!7791 = metadata !{i32 634, i32 0, metadata !7790, null}
!7792 = metadata !{i32 636, i32 0, metadata !7790, null}
!7793 = metadata !{i32 637, i32 0, metadata !7790, null}
!7794 = metadata !{i32 643, i32 0, metadata !7790, null}
!7795 = metadata !{i32 644, i32 0, metadata !7790, null}
!7796 = metadata !{i32 650, i32 0, metadata !7790, null}
!7797 = metadata !{i32 652, i32 0, metadata !7790, null}
!7798 = metadata !{i32 655, i32 0, metadata !7790, null}
!7799 = metadata !{i32 660, i32 0, metadata !7790, null}
!7800 = metadata !{i32 668, i32 0, metadata !7790, null}
!7801 = metadata !{i32 672, i32 0, metadata !7790, null}
!7802 = metadata !{i32 677, i32 0, metadata !7790, null}
!7803 = metadata !{i32 680, i32 0, metadata !7790, null}
!7804 = metadata !{i32 694, i32 0, metadata !7790, null}
!7805 = metadata !{i32 699, i32 0, metadata !7790, null}
!7806 = metadata !{i32 651, i32 0, metadata !7790, null}
!7807 = metadata !{i32 703, i32 0, metadata !7790, null}
!7808 = metadata !{i32 704, i32 0, metadata !7790, null}
!7809 = metadata !{i32 707, i32 0, metadata !7790, null}
!7810 = metadata !{i32 708, i32 0, metadata !7790, null}
!7811 = metadata !{i32 715, i32 0, metadata !7790, null}
!7812 = metadata !{i32 716, i32 0, metadata !7790, null}
!7813 = metadata !{i32 717, i32 0, metadata !7790, null}
!7814 = metadata !{i32 718, i32 0, metadata !7790, null}
!7815 = metadata !{i32 719, i32 0, metadata !7790, null}
!7816 = metadata !{i32 728, i32 0, metadata !7790, null}
!7817 = metadata !{i32 34, i32 0, metadata !7818, null}
!7818 = metadata !{i32 589835, metadata !2933, i32 33, i32 0, metadata !2934, i32 0} ; [ DW_TAG_lexical_block ]
!7819 = metadata !{i32 35, i32 0, metadata !7818, null}
!7820 = metadata !{i32 39, i32 0, metadata !7818, null}
!7821 = metadata !{i32 40, i32 0, metadata !7818, null}
!7822 = metadata !{i32 45, i32 0, metadata !7818, null}
!7823 = metadata !{i32 46, i32 0, metadata !7818, null}
!7824 = metadata !{i32 51, i32 0, metadata !7818, null}
!7825 = metadata !{i32 52, i32 0, metadata !7818, null}
!7826 = metadata !{i32 57, i32 0, metadata !7818, null}
!7827 = metadata !{i32 36, i32 0, metadata !7818, null}
!7828 = metadata !{i32 35, i32 0, metadata !7829, null}
!7829 = metadata !{i32 589835, metadata !2943, i32 24, i32 0, metadata !2944, i32 0} ; [ DW_TAG_lexical_block ]
!7830 = metadata !{i32 36, i32 0, metadata !7829, null}
!7831 = metadata !{i32 37, i32 0, metadata !7829, null}
!7832 = metadata !{i32 38, i32 0, metadata !7829, null}
!7833 = metadata !{i32 39, i32 0, metadata !7829, null}
!7834 = metadata !{i32 40, i32 0, metadata !7829, null}
!7835 = metadata !{i32 59, i32 0, metadata !7829, null}
!7836 = metadata !{i32 96, i32 0, metadata !7829, null}
!7837 = metadata !{i32 97, i32 0, metadata !7829, null}
!7838 = metadata !{i32 98, i32 0, metadata !7829, null}
!7839 = metadata !{i32 99, i32 0, metadata !7829, null}
!7840 = metadata !{i32 100, i32 0, metadata !7829, null}
!7841 = metadata !{i32 102, i32 0, metadata !7829, null}
!7842 = metadata !{i32 103, i32 0, metadata !7829, null}
!7843 = metadata !{i32 122, i32 0, metadata !7829, null}
!7844 = metadata !{i32 123, i32 0, metadata !7829, null}
!7845 = metadata !{i32 124, i32 0, metadata !7829, null}
!7846 = metadata !{i32 125, i32 0, metadata !7829, null}
!7847 = metadata !{i32 126, i32 0, metadata !7829, null}
!7848 = metadata !{i32 127, i32 0, metadata !7829, null}
!7849 = metadata !{i32 129, i32 0, metadata !7829, null}
!7850 = metadata !{i32 130, i32 0, metadata !7829, null}
!7851 = metadata !{i32 142, i32 0, metadata !7829, null}
!7852 = metadata !{i32 144, i32 0, metadata !7829, null}
!7853 = metadata !{i32 148, i32 0, metadata !7829, null}
!7854 = metadata !{i32 149, i32 0, metadata !7829, null}
!7855 = metadata !{i32 152, i32 0, metadata !7829, null}
!7856 = metadata !{i32 23, i32 0, metadata !7857, null}
!7857 = metadata !{i32 589835, metadata !2962, i32 19, i32 0, metadata !2963, i32 0} ; [ DW_TAG_lexical_block ]
!7858 = metadata !{i32 24, i32 0, metadata !7857, null}
!7859 = metadata !{i32 25, i32 0, metadata !7857, null}
!7860 = metadata !{i32 28, i32 0, metadata !7857, null}
!7861 = metadata !{i32 332, i32 0, metadata !7862, null}
!7862 = metadata !{i32 589835, metadata !2971, i32 331, i32 0, metadata !2974, i32 0} ; [ DW_TAG_lexical_block ]
!7863 = metadata !{i32 43, i32 0, metadata !7864, null}
!7864 = metadata !{i32 589835, metadata !2984, i32 39, i32 0, metadata !2985, i32 0} ; [ DW_TAG_lexical_block ]
!7865 = metadata !{i32 45, i32 0, metadata !7864, null}
!7866 = metadata !{i32 46, i32 0, metadata !7864, null}
!7867 = metadata !{i32 47, i32 0, metadata !7864, null}
!7868 = metadata !{i32 48, i32 0, metadata !7864, null}
!7869 = metadata !{i32 49, i32 0, metadata !7864, null}
!7870 = metadata !{i32 61, i32 0, metadata !7864, null}
!7871 = metadata !{i32 79, i32 0, metadata !7864, null}
!7872 = metadata !{i32 351, i32 0, metadata !7873, null}
!7873 = metadata !{i32 589835, metadata !3008, i32 342, i32 0, metadata !3011, i32 0} ; [ DW_TAG_lexical_block ]
!7874 = metadata !{i32 352, i32 0, metadata !7873, null}
!7875 = metadata !{i32 353, i32 0, metadata !7873, null}
!7876 = metadata !{i32 356, i32 0, metadata !7873, null}
!7877 = metadata !{i32 357, i32 0, metadata !7873, null}
!7878 = metadata !{i32 359, i32 0, metadata !7873, null}
!7879 = metadata !{i32 360, i32 0, metadata !7873, null}
!7880 = metadata !{i32 820, i32 0, metadata !7881, null}
!7881 = metadata !{i32 589835, metadata !3028, i32 808, i32 0, metadata !3031, i32 0} ; [ DW_TAG_lexical_block ]
!7882 = metadata !{i32 829, i32 0, metadata !7881, null}
!7883 = metadata !{i32 830, i32 0, metadata !7881, null}
!7884 = metadata !{i32 831, i32 0, metadata !7881, null}
!7885 = metadata !{i32 833, i32 0, metadata !7881, null}
!7886 = metadata !{i32 834, i32 0, metadata !7881, null}
!7887 = metadata !{i32 838, i32 0, metadata !7881, null}
!7888 = metadata !{i32 839, i32 0, metadata !7881, null}
!7889 = metadata !{i32 842, i32 0, metadata !7881, null}
!7890 = metadata !{i32 843, i32 0, metadata !7881, null}
!7891 = metadata !{i32 894, i32 0, metadata !7881, null}
!7892 = metadata !{i32 898, i32 0, metadata !7881, null}
!7893 = metadata !{i32 899, i32 0, metadata !7881, null}
!7894 = metadata !{i32 901, i32 0, metadata !7881, null}
!7895 = metadata !{i32 902, i32 0, metadata !7881, null}
!7896 = metadata !{i32 905, i32 0, metadata !7881, null}
!7897 = metadata !{i32 906, i32 0, metadata !7881, null}
!7898 = metadata !{i32 907, i32 0, metadata !7881, null}
!7899 = metadata !{i32 893, i32 0, metadata !7881, null}
!7900 = metadata !{i32 909, i32 0, metadata !7881, null}
!7901 = metadata !{i32 910, i32 0, metadata !7881, null}
!7902 = metadata !{i32 912, i32 0, metadata !7881, null}
!7903 = metadata !{i32 224, i32 0, metadata !7904, null}
!7904 = metadata !{i32 589835, metadata !3050, i32 222, i32 0, metadata !3053, i32 0} ; [ DW_TAG_lexical_block ]
!7905 = metadata !{i32 229, i32 0, metadata !7904, null}
!7906 = metadata !{i32 256, i32 0, metadata !7904, null}
!7907 = metadata !{i32 255, i32 0, metadata !7904, null}
!7908 = metadata !{i32 259, i32 0, metadata !7904, null}
!7909 = metadata !{i32 260, i32 0, metadata !7904, null}
!7910 = metadata !{i32 261, i32 0, metadata !7904, null}
!7911 = metadata !{i32 262, i32 0, metadata !7904, null}
!7912 = metadata !{i32 275, i32 0, metadata !7904, null}
!7913 = metadata !{i32 277, i32 0, metadata !7904, null}
!7914 = metadata !{i32 280, i32 0, metadata !7904, null}
!7915 = metadata !{i32 282, i32 0, metadata !7904, null}
!7916 = metadata !{i32 285, i32 0, metadata !7904, null}
!7917 = metadata !{i32 286, i32 0, metadata !7904, null}
!7918 = metadata !{i32 288, i32 0, metadata !7904, null}
!7919 = metadata !{i32 289, i32 0, metadata !7904, null}
!7920 = metadata !{i32 290, i32 0, metadata !7904, null}
!7921 = metadata !{i32 297, i32 0, metadata !7904, null}
!7922 = metadata !{i32 314, i32 0, metadata !7904, null}
!7923 = metadata !{i32 283, i32 0, metadata !7904, null}
!7924 = metadata !{i32 330, i32 0, metadata !7904, null}
!7925 = metadata !{i32 331, i32 0, metadata !7904, null}
!7926 = metadata !{i32 337, i32 0, metadata !7904, null}
!7927 = metadata !{i32 346, i32 0, metadata !7904, null}
!7928 = metadata !{i32 349, i32 0, metadata !7929, null}
!7929 = metadata !{i32 589835, metadata !7904, i32 349, i32 0, metadata !3053, i32 1} ; [ DW_TAG_lexical_block ]
!7930 = metadata !{i32 359, i32 0, metadata !7931, null}
!7931 = metadata !{i32 589835, metadata !7929, i32 359, i32 0, metadata !3053, i32 2} ; [ DW_TAG_lexical_block ]
!7932 = metadata !{i32 361, i32 0, metadata !7931, null}
!7933 = metadata !{i32 362, i32 0, metadata !7931, null}
!7934 = metadata !{i32 363, i32 0, metadata !7931, null}
!7935 = metadata !{i32 364, i32 0, metadata !7931, null}
!7936 = metadata !{i32 365, i32 0, metadata !7931, null}
!7937 = metadata !{i32 367, i32 0, metadata !7931, null}
!7938 = metadata !{i32 360, i32 0, metadata !7931, null}
!7939 = metadata !{i32 371, i32 0, metadata !7931, null}
!7940 = metadata !{i32 372, i32 0, metadata !7929, null}
!7941 = metadata !{i32 377, i32 0, metadata !7904, null}
!7942 = metadata !{i32 384, i32 0, metadata !7904, null}
!7943 = metadata !{i32 385, i32 0, metadata !7904, null}
!7944 = metadata !{i32 389, i32 0, metadata !7904, null}
!7945 = metadata !{i32 390, i32 0, metadata !7904, null}
!7946 = metadata !{i32 400, i32 0, metadata !7904, null}
!7947 = metadata !{i32 401, i32 0, metadata !7904, null}
!7948 = metadata !{i32 405, i32 0, metadata !7904, null}
!7949 = metadata !{i32 407, i32 0, metadata !7904, null}
!7950 = metadata !{i32 409, i32 0, metadata !7904, null}
!7951 = metadata !{i32 410, i32 0, metadata !7904, null}
!7952 = metadata !{i32 411, i32 0, metadata !7904, null}
!7953 = metadata !{i32 412, i32 0, metadata !7904, null}
!7954 = metadata !{i32 415, i32 0, metadata !7904, null}
!7955 = metadata !{i32 416, i32 0, metadata !7904, null}
!7956 = metadata !{i32 419, i32 0, metadata !7904, null}
!7957 = metadata !{i32 420, i32 0, metadata !7904, null}
!7958 = metadata !{i32 425, i32 0, metadata !7904, null}
!7959 = metadata !{i32 417, i32 0, metadata !7904, null}
!7960 = metadata !{i32 429, i32 0, metadata !7904, null}
!7961 = metadata !{i32 430, i32 0, metadata !7904, null}
!7962 = metadata !{i32 434, i32 0, metadata !7904, null}
!7963 = metadata !{i32 438, i32 0, metadata !7904, null}
!7964 = metadata !{i32 445, i32 0, metadata !7904, null}
!7965 = metadata !{i32 447, i32 0, metadata !7904, null}
!7966 = metadata !{i32 448, i32 0, metadata !7904, null}
!7967 = metadata !{i32 452, i32 0, metadata !7904, null}
!7968 = metadata !{i32 453, i32 0, metadata !7904, null}
!7969 = metadata !{i32 457, i32 0, metadata !7904, null}
!7970 = metadata !{i32 459, i32 0, metadata !7904, null}
!7971 = metadata !{i32 462, i32 0, metadata !7904, null}
!7972 = metadata !{i32 463, i32 0, metadata !7904, null}
!7973 = metadata !{i32 451, i32 0, metadata !7904, null}
!7974 = metadata !{i32 479, i32 0, metadata !7904, null}
!7975 = metadata !{i32 480, i32 0, metadata !7904, null}
!7976 = metadata !{i32 484, i32 0, metadata !7904, null}
!7977 = metadata !{i32 486, i32 0, metadata !7904, null}
!7978 = metadata !{i32 487, i32 0, metadata !7904, null}
!7979 = metadata !{i32 491, i32 0, metadata !7904, null}
!7980 = metadata !{i32 69, i32 0, metadata !4573, null}
!7981 = metadata !{i32 72, i32 0, metadata !4575, null}
!7982 = metadata !{i32 73, i32 0, metadata !4575, null}
!7983 = metadata !{i32 74, i32 0, metadata !4575, null}
!7984 = metadata !{i32 77, i32 0, metadata !4573, null}
!7985 = metadata !{i32 208, i32 0, metadata !7986, null}
!7986 = metadata !{i32 589835, metadata !3134, i32 207, i32 0, metadata !3066, i32 1} ; [ DW_TAG_lexical_block ]
!7987 = metadata !{i32 121, i32 0, metadata !4508, null}
!7988 = metadata !{i32 43, i32 0, metadata !7989, metadata !7990}
!7989 = metadata !{i32 589835, metadata !3065, i32 42, i32 0, metadata !3066, i32 0} ; [ DW_TAG_lexical_block ]
!7990 = metadata !{i32 122, i32 0, metadata !4508, null}
!7991 = metadata !{i32 44, i32 0, metadata !7989, metadata !7990}
!7992 = metadata !{i32 45, i32 0, metadata !7989, metadata !7990}
!7993 = metadata !{i32 46, i32 0, metadata !7989, metadata !7990}
!7994 = metadata !{i32 47, i32 0, metadata !7989, metadata !7990}
!7995 = metadata !{i32 48, i32 0, metadata !7989, metadata !7990}
!7996 = metadata !{i32 49, i32 0, metadata !7989, metadata !7990}
!7997 = metadata !{i32 50, i32 0, metadata !7989, metadata !7990}
!7998 = metadata !{i32 51, i32 0, metadata !7989, metadata !7990}
!7999 = metadata !{i32 52, i32 0, metadata !7989, metadata !7990}
!8000 = metadata !{i32 53, i32 0, metadata !7989, metadata !7990}
!8001 = metadata !{i32 54, i32 0, metadata !7989, metadata !7990}
!8002 = metadata !{i32 55, i32 0, metadata !7989, metadata !7990}
!8003 = metadata !{i32 57, i32 0, metadata !7989, metadata !7990}
!8004 = metadata !{i32 58, i32 0, metadata !7989, metadata !7990}
!8005 = metadata !{i32 59, i32 0, metadata !7989, metadata !7990}
!8006 = metadata !{i32 123, i32 0, metadata !4508, null}
!8007 = metadata !{i32 114, i32 0, metadata !4514, null}
!8008 = metadata !{i32 43, i32 0, metadata !7989, metadata !8009}
!8009 = metadata !{i32 115, i32 0, metadata !4514, null}
!8010 = metadata !{i32 44, i32 0, metadata !7989, metadata !8009}
!8011 = metadata !{i32 45, i32 0, metadata !7989, metadata !8009}
!8012 = metadata !{i32 46, i32 0, metadata !7989, metadata !8009}
!8013 = metadata !{i32 47, i32 0, metadata !7989, metadata !8009}
!8014 = metadata !{i32 48, i32 0, metadata !7989, metadata !8009}
!8015 = metadata !{i32 49, i32 0, metadata !7989, metadata !8009}
!8016 = metadata !{i32 50, i32 0, metadata !7989, metadata !8009}
!8017 = metadata !{i32 51, i32 0, metadata !7989, metadata !8009}
!8018 = metadata !{i32 52, i32 0, metadata !7989, metadata !8009}
!8019 = metadata !{i32 53, i32 0, metadata !7989, metadata !8009}
!8020 = metadata !{i32 54, i32 0, metadata !7989, metadata !8009}
!8021 = metadata !{i32 55, i32 0, metadata !7989, metadata !8009}
!8022 = metadata !{i32 57, i32 0, metadata !7989, metadata !8009}
!8023 = metadata !{i32 58, i32 0, metadata !7989, metadata !8009}
!8024 = metadata !{i32 59, i32 0, metadata !7989, metadata !8009}
!8025 = metadata !{i32 116, i32 0, metadata !4514, null}
!8026 = metadata !{i32 204, i32 0, metadata !8027, null}
!8027 = metadata !{i32 589835, metadata !3143, i32 203, i32 0, metadata !3066, i32 4} ; [ DW_TAG_lexical_block ]
!8028 = metadata !{i32 107, i32 0, metadata !4521, null}
!8029 = metadata !{i32 43, i32 0, metadata !7989, metadata !8030}
!8030 = metadata !{i32 108, i32 0, metadata !4521, null}
!8031 = metadata !{i32 44, i32 0, metadata !7989, metadata !8030}
!8032 = metadata !{i32 45, i32 0, metadata !7989, metadata !8030}
!8033 = metadata !{i32 46, i32 0, metadata !7989, metadata !8030}
!8034 = metadata !{i32 47, i32 0, metadata !7989, metadata !8030}
!8035 = metadata !{i32 48, i32 0, metadata !7989, metadata !8030}
!8036 = metadata !{i32 49, i32 0, metadata !7989, metadata !8030}
!8037 = metadata !{i32 50, i32 0, metadata !7989, metadata !8030}
!8038 = metadata !{i32 51, i32 0, metadata !7989, metadata !8030}
!8039 = metadata !{i32 52, i32 0, metadata !7989, metadata !8030}
!8040 = metadata !{i32 53, i32 0, metadata !7989, metadata !8030}
!8041 = metadata !{i32 54, i32 0, metadata !7989, metadata !8030}
!8042 = metadata !{i32 55, i32 0, metadata !7989, metadata !8030}
!8043 = metadata !{i32 57, i32 0, metadata !7989, metadata !8030}
!8044 = metadata !{i32 58, i32 0, metadata !7989, metadata !8030}
!8045 = metadata !{i32 59, i32 0, metadata !7989, metadata !8030}
!8046 = metadata !{i32 109, i32 0, metadata !4521, null}
!8047 = metadata !{i32 100, i32 0, metadata !4527, null}
!8048 = metadata !{i32 43, i32 0, metadata !7989, metadata !8049}
!8049 = metadata !{i32 101, i32 0, metadata !4527, null}
!8050 = metadata !{i32 44, i32 0, metadata !7989, metadata !8049}
!8051 = metadata !{i32 45, i32 0, metadata !7989, metadata !8049}
!8052 = metadata !{i32 46, i32 0, metadata !7989, metadata !8049}
!8053 = metadata !{i32 47, i32 0, metadata !7989, metadata !8049}
!8054 = metadata !{i32 48, i32 0, metadata !7989, metadata !8049}
!8055 = metadata !{i32 49, i32 0, metadata !7989, metadata !8049}
!8056 = metadata !{i32 50, i32 0, metadata !7989, metadata !8049}
!8057 = metadata !{i32 51, i32 0, metadata !7989, metadata !8049}
!8058 = metadata !{i32 52, i32 0, metadata !7989, metadata !8049}
!8059 = metadata !{i32 53, i32 0, metadata !7989, metadata !8049}
!8060 = metadata !{i32 54, i32 0, metadata !7989, metadata !8049}
!8061 = metadata !{i32 55, i32 0, metadata !7989, metadata !8049}
!8062 = metadata !{i32 57, i32 0, metadata !7989, metadata !8049}
!8063 = metadata !{i32 58, i32 0, metadata !7989, metadata !8049}
!8064 = metadata !{i32 59, i32 0, metadata !7989, metadata !8049}
!8065 = metadata !{i32 102, i32 0, metadata !4527, null}
!8066 = metadata !{i32 200, i32 0, metadata !8067, null}
!8067 = metadata !{i32 589835, metadata !3155, i32 199, i32 0, metadata !3066, i32 7} ; [ DW_TAG_lexical_block ]
!8068 = metadata !{i32 93, i32 0, metadata !4538, null}
!8069 = metadata !{i32 43, i32 0, metadata !7989, metadata !8070}
!8070 = metadata !{i32 94, i32 0, metadata !4538, null}
!8071 = metadata !{i32 44, i32 0, metadata !7989, metadata !8070}
!8072 = metadata !{i32 45, i32 0, metadata !7989, metadata !8070}
!8073 = metadata !{i32 46, i32 0, metadata !7989, metadata !8070}
!8074 = metadata !{i32 47, i32 0, metadata !7989, metadata !8070}
!8075 = metadata !{i32 48, i32 0, metadata !7989, metadata !8070}
!8076 = metadata !{i32 49, i32 0, metadata !7989, metadata !8070}
!8077 = metadata !{i32 50, i32 0, metadata !7989, metadata !8070}
!8078 = metadata !{i32 51, i32 0, metadata !7989, metadata !8070}
!8079 = metadata !{i32 52, i32 0, metadata !7989, metadata !8070}
!8080 = metadata !{i32 53, i32 0, metadata !7989, metadata !8070}
!8081 = metadata !{i32 54, i32 0, metadata !7989, metadata !8070}
!8082 = metadata !{i32 55, i32 0, metadata !7989, metadata !8070}
!8083 = metadata !{i32 57, i32 0, metadata !7989, metadata !8070}
!8084 = metadata !{i32 58, i32 0, metadata !7989, metadata !8070}
!8085 = metadata !{i32 59, i32 0, metadata !7989, metadata !8070}
!8086 = metadata !{i32 95, i32 0, metadata !4538, null}
!8087 = metadata !{i32 86, i32 0, metadata !4544, null}
!8088 = metadata !{i32 43, i32 0, metadata !7989, metadata !8089}
!8089 = metadata !{i32 87, i32 0, metadata !4544, null}
!8090 = metadata !{i32 44, i32 0, metadata !7989, metadata !8089}
!8091 = metadata !{i32 45, i32 0, metadata !7989, metadata !8089}
!8092 = metadata !{i32 46, i32 0, metadata !7989, metadata !8089}
!8093 = metadata !{i32 47, i32 0, metadata !7989, metadata !8089}
!8094 = metadata !{i32 48, i32 0, metadata !7989, metadata !8089}
!8095 = metadata !{i32 49, i32 0, metadata !7989, metadata !8089}
!8096 = metadata !{i32 50, i32 0, metadata !7989, metadata !8089}
!8097 = metadata !{i32 51, i32 0, metadata !7989, metadata !8089}
!8098 = metadata !{i32 52, i32 0, metadata !7989, metadata !8089}
!8099 = metadata !{i32 53, i32 0, metadata !7989, metadata !8089}
!8100 = metadata !{i32 54, i32 0, metadata !7989, metadata !8089}
!8101 = metadata !{i32 55, i32 0, metadata !7989, metadata !8089}
!8102 = metadata !{i32 57, i32 0, metadata !7989, metadata !8089}
!8103 = metadata !{i32 58, i32 0, metadata !7989, metadata !8089}
!8104 = metadata !{i32 59, i32 0, metadata !7989, metadata !8089}
!8105 = metadata !{i32 88, i32 0, metadata !4544, null}
!8106 = metadata !{i32 196, i32 0, metadata !8107, null}
!8107 = metadata !{i32 589835, metadata !3158, i32 195, i32 0, metadata !3066, i32 10} ; [ DW_TAG_lexical_block ]
!8108 = metadata !{i32 81, i32 0, metadata !8109, null}
!8109 = metadata !{i32 589835, metadata !3163, i32 80, i32 0, metadata !3066, i32 11} ; [ DW_TAG_lexical_block ]
!8110 = metadata !{i32 184, i32 0, metadata !4555, null}
!8111 = metadata !{i32 187, i32 0, metadata !4558, null}
!8112 = metadata !{i32 188, i32 0, metadata !4558, null}
!8113 = metadata !{i32 189, i32 0, metadata !4558, null}
!8114 = metadata !{i32 192, i32 0, metadata !4555, null}
!8115 = metadata !{i32 157, i32 0, metadata !4580, null}
!8116 = metadata !{i32 159, i32 0, metadata !4580, null}
!8117 = metadata !{i32 160, i32 0, metadata !4592, null}
!8118 = metadata !{i32 161, i32 0, metadata !4592, null}
!8119 = metadata !{i32 164, i32 0, metadata !4594, null}
!8120 = metadata !{i32 170, i32 0, metadata !4594, null}
!8121 = metadata !{i32 174, i32 0, metadata !4580, null}
!8122 = metadata !{i32 149, i32 0, metadata !8123, null}
!8123 = metadata !{i32 589835, metadata !3188, i32 130, i32 0, metadata !3066, i32 19} ; [ DW_TAG_lexical_block ]
!8124 = metadata !{i32 127, i32 0, metadata !8125, null}
!8125 = metadata !{i32 589835, metadata !3216, i32 126, i32 0, metadata !3066, i32 20} ; [ DW_TAG_lexical_block ]
!8126 = metadata !{i32 162, i32 0, metadata !4632, null}
!8127 = metadata !{i32 163, i32 0, metadata !4632, null}
!8128 = metadata !{i32 182, i32 0, metadata !4632, null}
!8129 = metadata !{i32 186, i32 0, metadata !4632, null}
!8130 = metadata !{i32 189, i32 0, metadata !4632, null}
!8131 = metadata !{i32 130, i32 0, metadata !8132, metadata !8130}
!8132 = metadata !{i32 589835, metadata !3229, i32 129, i32 0, metadata !3220, i32 3} ; [ DW_TAG_lexical_block ]
!8133 = metadata !{i32 131, i32 0, metadata !8132, metadata !8130}
!8134 = metadata !{i32 134, i32 0, metadata !8132, metadata !8130}
!8135 = metadata !{i32 24, i32 0, metadata !8136, metadata !8137}
!8136 = metadata !{i32 589835, metadata !3237, i32 23, i32 0, metadata !3220, i32 5} ; [ DW_TAG_lexical_block ]
!8137 = metadata !{i32 190, i32 0, metadata !4632, null}
!8138 = metadata !{i32 203, i32 0, metadata !4632, null}
!8139 = metadata !{i32 130, i32 0, metadata !8132, metadata !8138}
!8140 = metadata !{i32 131, i32 0, metadata !8132, metadata !8138}
!8141 = metadata !{i32 134, i32 0, metadata !8132, metadata !8138}
!8142 = metadata !{i32 205, i32 0, metadata !4682, null}
!8143 = metadata !{i32 24, i32 0, metadata !8136, metadata !8144}
!8144 = metadata !{i32 206, i32 0, metadata !4682, null}
!8145 = metadata !{i32 208, i32 0, metadata !4682, null}
!8146 = metadata !{i32 46, i32 0, metadata !4614, metadata !8145}
!8147 = metadata !{i32 24, i32 0, metadata !8136, metadata !8146}
!8148 = metadata !{i32 47, i32 0, metadata !4614, metadata !8145}
!8149 = metadata !{i32 49, i32 0, metadata !4614, metadata !8145}
!8150 = metadata !{i32 32, i32 0, metadata !8151, metadata !8152}
!8151 = metadata !{i32 589835, metadata !3227, i32 31, i32 0, metadata !3220, i32 1} ; [ DW_TAG_lexical_block ]
!8152 = metadata !{i32 52, i32 0, metadata !4614, metadata !8145}
!8153 = metadata !{i32 53, i32 0, metadata !4614, metadata !8145}
!8154 = metadata !{i32 54, i32 0, metadata !4614, metadata !8145}
!8155 = metadata !{i32 24, i32 0, metadata !8136, metadata !8156}
!8156 = metadata !{i32 56, i32 0, metadata !4614, metadata !8145}
!8157 = metadata !{i32 51, i32 0, metadata !4614, metadata !8145}
!8158 = metadata !{i32 209, i32 0, metadata !4682, null}
!8159 = metadata !{i32 210, i32 0, metadata !4682, null}
!8160 = metadata !{i32 153, i32 0, metadata !8161, metadata !8159}
!8161 = metadata !{i32 589835, metadata !3250, i32 152, i32 0, metadata !3220, i32 9} ; [ DW_TAG_lexical_block ]
!8162 = metadata !{i32 24, i32 0, metadata !8136, metadata !8163}
!8163 = metadata !{i32 154, i32 0, metadata !8161, metadata !8159}
!8164 = metadata !{i32 156, i32 0, metadata !8161, metadata !8159}
!8165 = metadata !{i32 157, i32 0, metadata !8161, metadata !8159}
!8166 = metadata !{i32 131, i32 0, metadata !8132, metadata !8167}
!8167 = metadata !{i32 214, i32 0, metadata !4632, null}
!8168 = metadata !{i32 134, i32 0, metadata !8132, metadata !8167}
!8169 = metadata !{i32 130, i32 0, metadata !8132, metadata !8167}
!8170 = metadata !{i32 218, i32 0, metadata !4684, null}
!8171 = metadata !{i32 24, i32 0, metadata !8136, metadata !8172}
!8172 = metadata !{i32 219, i32 0, metadata !4684, null}
!8173 = metadata !{i32 221, i32 0, metadata !4684, null}
!8174 = metadata !{i32 222, i32 0, metadata !4684, null}
!8175 = metadata !{i32 46, i32 0, metadata !4614, metadata !8174}
!8176 = metadata !{i32 24, i32 0, metadata !8136, metadata !8175}
!8177 = metadata !{i32 47, i32 0, metadata !4614, metadata !8174}
!8178 = metadata !{i32 49, i32 0, metadata !4614, metadata !8174}
!8179 = metadata !{i32 32, i32 0, metadata !8151, metadata !8180}
!8180 = metadata !{i32 52, i32 0, metadata !4614, metadata !8174}
!8181 = metadata !{i32 53, i32 0, metadata !4614, metadata !8174}
!8182 = metadata !{i32 54, i32 0, metadata !4614, metadata !8174}
!8183 = metadata !{i32 24, i32 0, metadata !8136, metadata !8184}
!8184 = metadata !{i32 56, i32 0, metadata !4614, metadata !8174}
!8185 = metadata !{i32 51, i32 0, metadata !4614, metadata !8174}
!8186 = metadata !{i32 223, i32 0, metadata !4684, null}
!8187 = metadata !{i32 46, i32 0, metadata !4614, metadata !8186}
!8188 = metadata !{i32 24, i32 0, metadata !8136, metadata !8187}
!8189 = metadata !{i32 47, i32 0, metadata !4614, metadata !8186}
!8190 = metadata !{i32 49, i32 0, metadata !4614, metadata !8186}
!8191 = metadata !{i32 32, i32 0, metadata !8151, metadata !8192}
!8192 = metadata !{i32 52, i32 0, metadata !4614, metadata !8186}
!8193 = metadata !{i32 53, i32 0, metadata !4614, metadata !8186}
!8194 = metadata !{i32 54, i32 0, metadata !4614, metadata !8186}
!8195 = metadata !{i32 24, i32 0, metadata !8136, metadata !8196}
!8196 = metadata !{i32 56, i32 0, metadata !4614, metadata !8186}
!8197 = metadata !{i32 51, i32 0, metadata !4614, metadata !8186}
!8198 = metadata !{i32 224, i32 0, metadata !4684, null}
!8199 = metadata !{i32 46, i32 0, metadata !4614, metadata !8198}
!8200 = metadata !{i32 24, i32 0, metadata !8136, metadata !8199}
!8201 = metadata !{i32 47, i32 0, metadata !4614, metadata !8198}
!8202 = metadata !{i32 49, i32 0, metadata !4614, metadata !8198}
!8203 = metadata !{i32 32, i32 0, metadata !8151, metadata !8204}
!8204 = metadata !{i32 52, i32 0, metadata !4614, metadata !8198}
!8205 = metadata !{i32 53, i32 0, metadata !4614, metadata !8198}
!8206 = metadata !{i32 54, i32 0, metadata !4614, metadata !8198}
!8207 = metadata !{i32 24, i32 0, metadata !8136, metadata !8208}
!8208 = metadata !{i32 56, i32 0, metadata !4614, metadata !8198}
!8209 = metadata !{i32 51, i32 0, metadata !4614, metadata !8198}
!8210 = metadata !{i32 226, i32 0, metadata !4684, null}
!8211 = metadata !{i32 227, i32 0, metadata !4684, null}
!8212 = metadata !{i32 228, i32 0, metadata !4684, null}
!8213 = metadata !{i32 229, i32 0, metadata !4684, null}
!8214 = metadata !{i32 153, i32 0, metadata !8161, metadata !8213}
!8215 = metadata !{i32 24, i32 0, metadata !8136, metadata !8216}
!8216 = metadata !{i32 154, i32 0, metadata !8161, metadata !8213}
!8217 = metadata !{i32 156, i32 0, metadata !8161, metadata !8213}
!8218 = metadata !{i32 131, i32 0, metadata !8132, metadata !8219}
!8219 = metadata !{i32 234, i32 0, metadata !4632, null}
!8220 = metadata !{i32 134, i32 0, metadata !8132, metadata !8219}
!8221 = metadata !{i32 130, i32 0, metadata !8132, metadata !8219}
!8222 = metadata !{i32 237, i32 0, metadata !4686, null}
!8223 = metadata !{i32 24, i32 0, metadata !8136, metadata !8224}
!8224 = metadata !{i32 238, i32 0, metadata !4686, null}
!8225 = metadata !{i32 240, i32 0, metadata !4686, null}
!8226 = metadata !{i32 241, i32 0, metadata !4686, null}
!8227 = metadata !{i32 46, i32 0, metadata !4614, metadata !8226}
!8228 = metadata !{i32 24, i32 0, metadata !8136, metadata !8227}
!8229 = metadata !{i32 47, i32 0, metadata !4614, metadata !8226}
!8230 = metadata !{i32 49, i32 0, metadata !4614, metadata !8226}
!8231 = metadata !{i32 32, i32 0, metadata !8151, metadata !8232}
!8232 = metadata !{i32 52, i32 0, metadata !4614, metadata !8226}
!8233 = metadata !{i32 53, i32 0, metadata !4614, metadata !8226}
!8234 = metadata !{i32 54, i32 0, metadata !4614, metadata !8226}
!8235 = metadata !{i32 24, i32 0, metadata !8136, metadata !8236}
!8236 = metadata !{i32 56, i32 0, metadata !4614, metadata !8226}
!8237 = metadata !{i32 51, i32 0, metadata !4614, metadata !8226}
!8238 = metadata !{i32 242, i32 0, metadata !4686, null}
!8239 = metadata !{i32 46, i32 0, metadata !4614, metadata !8238}
!8240 = metadata !{i32 24, i32 0, metadata !8136, metadata !8239}
!8241 = metadata !{i32 47, i32 0, metadata !4614, metadata !8238}
!8242 = metadata !{i32 49, i32 0, metadata !4614, metadata !8238}
!8243 = metadata !{i32 32, i32 0, metadata !8151, metadata !8244}
!8244 = metadata !{i32 52, i32 0, metadata !4614, metadata !8238}
!8245 = metadata !{i32 53, i32 0, metadata !4614, metadata !8238}
!8246 = metadata !{i32 54, i32 0, metadata !4614, metadata !8238}
!8247 = metadata !{i32 24, i32 0, metadata !8136, metadata !8248}
!8248 = metadata !{i32 56, i32 0, metadata !4614, metadata !8238}
!8249 = metadata !{i32 51, i32 0, metadata !4614, metadata !8238}
!8250 = metadata !{i32 131, i32 0, metadata !8132, metadata !8251}
!8251 = metadata !{i32 245, i32 0, metadata !4632, null}
!8252 = metadata !{i32 134, i32 0, metadata !8132, metadata !8251}
!8253 = metadata !{i32 130, i32 0, metadata !8132, metadata !8251}
!8254 = metadata !{i32 247, i32 0, metadata !4632, null}
!8255 = metadata !{i32 131, i32 0, metadata !8132, metadata !8256}
!8256 = metadata !{i32 249, i32 0, metadata !4632, null}
!8257 = metadata !{i32 134, i32 0, metadata !8132, metadata !8256}
!8258 = metadata !{i32 130, i32 0, metadata !8132, metadata !8256}
!8259 = metadata !{i32 251, i32 0, metadata !4632, null}
!8260 = metadata !{i32 131, i32 0, metadata !8132, metadata !8261}
!8261 = metadata !{i32 253, i32 0, metadata !4632, null}
!8262 = metadata !{i32 134, i32 0, metadata !8132, metadata !8261}
!8263 = metadata !{i32 130, i32 0, metadata !8132, metadata !8261}
!8264 = metadata !{i32 255, i32 0, metadata !4632, null}
!8265 = metadata !{i32 131, i32 0, metadata !8132, metadata !8266}
!8266 = metadata !{i32 257, i32 0, metadata !4632, null}
!8267 = metadata !{i32 134, i32 0, metadata !8132, metadata !8266}
!8268 = metadata !{i32 130, i32 0, metadata !8132, metadata !8266}
!8269 = metadata !{i32 259, i32 0, metadata !4688, null}
!8270 = metadata !{i32 24, i32 0, metadata !8136, metadata !8271}
!8271 = metadata !{i32 260, i32 0, metadata !4688, null}
!8272 = metadata !{i32 262, i32 0, metadata !4688, null}
!8273 = metadata !{i32 46, i32 0, metadata !4614, metadata !8272}
!8274 = metadata !{i32 24, i32 0, metadata !8136, metadata !8273}
!8275 = metadata !{i32 47, i32 0, metadata !4614, metadata !8272}
!8276 = metadata !{i32 49, i32 0, metadata !4614, metadata !8272}
!8277 = metadata !{i32 32, i32 0, metadata !8151, metadata !8278}
!8278 = metadata !{i32 52, i32 0, metadata !4614, metadata !8272}
!8279 = metadata !{i32 53, i32 0, metadata !4614, metadata !8272}
!8280 = metadata !{i32 54, i32 0, metadata !4614, metadata !8272}
!8281 = metadata !{i32 24, i32 0, metadata !8136, metadata !8282}
!8282 = metadata !{i32 56, i32 0, metadata !4614, metadata !8272}
!8283 = metadata !{i32 51, i32 0, metadata !4614, metadata !8272}
!8284 = metadata !{i32 131, i32 0, metadata !8132, metadata !8285}
!8285 = metadata !{i32 264, i32 0, metadata !4632, null}
!8286 = metadata !{i32 134, i32 0, metadata !8132, metadata !8285}
!8287 = metadata !{i32 130, i32 0, metadata !8132, metadata !8285}
!8288 = metadata !{i32 267, i32 0, metadata !4690, null}
!8289 = metadata !{i32 24, i32 0, metadata !8136, metadata !8290}
!8290 = metadata !{i32 268, i32 0, metadata !4690, null}
!8291 = metadata !{i32 270, i32 0, metadata !4690, null}
!8292 = metadata !{i32 271, i32 0, metadata !4690, null}
!8293 = metadata !{i32 46, i32 0, metadata !4614, metadata !8292}
!8294 = metadata !{i32 24, i32 0, metadata !8136, metadata !8293}
!8295 = metadata !{i32 47, i32 0, metadata !4614, metadata !8292}
!8296 = metadata !{i32 49, i32 0, metadata !4614, metadata !8292}
!8297 = metadata !{i32 32, i32 0, metadata !8151, metadata !8298}
!8298 = metadata !{i32 52, i32 0, metadata !4614, metadata !8292}
!8299 = metadata !{i32 53, i32 0, metadata !4614, metadata !8292}
!8300 = metadata !{i32 54, i32 0, metadata !4614, metadata !8292}
!8301 = metadata !{i32 24, i32 0, metadata !8136, metadata !8302}
!8302 = metadata !{i32 56, i32 0, metadata !4614, metadata !8292}
!8303 = metadata !{i32 51, i32 0, metadata !4614, metadata !8292}
!8304 = metadata !{i32 272, i32 0, metadata !4690, null}
!8305 = metadata !{i32 46, i32 0, metadata !4614, metadata !8304}
!8306 = metadata !{i32 24, i32 0, metadata !8136, metadata !8305}
!8307 = metadata !{i32 47, i32 0, metadata !4614, metadata !8304}
!8308 = metadata !{i32 49, i32 0, metadata !4614, metadata !8304}
!8309 = metadata !{i32 32, i32 0, metadata !8151, metadata !8310}
!8310 = metadata !{i32 52, i32 0, metadata !4614, metadata !8304}
!8311 = metadata !{i32 53, i32 0, metadata !4614, metadata !8304}
!8312 = metadata !{i32 54, i32 0, metadata !4614, metadata !8304}
!8313 = metadata !{i32 24, i32 0, metadata !8136, metadata !8314}
!8314 = metadata !{i32 56, i32 0, metadata !4614, metadata !8304}
!8315 = metadata !{i32 51, i32 0, metadata !4614, metadata !8304}
!8316 = metadata !{i32 131, i32 0, metadata !8132, metadata !8317}
!8317 = metadata !{i32 274, i32 0, metadata !4632, null}
!8318 = metadata !{i32 134, i32 0, metadata !8132, metadata !8317}
!8319 = metadata !{i32 130, i32 0, metadata !8132, metadata !8317}
!8320 = metadata !{i32 277, i32 0, metadata !4692, null}
!8321 = metadata !{i32 24, i32 0, metadata !8136, metadata !8322}
!8322 = metadata !{i32 278, i32 0, metadata !4692, null}
!8323 = metadata !{i32 280, i32 0, metadata !4692, null}
!8324 = metadata !{i32 281, i32 0, metadata !4692, null}
!8325 = metadata !{i32 46, i32 0, metadata !4614, metadata !8324}
!8326 = metadata !{i32 24, i32 0, metadata !8136, metadata !8325}
!8327 = metadata !{i32 47, i32 0, metadata !4614, metadata !8324}
!8328 = metadata !{i32 49, i32 0, metadata !4614, metadata !8324}
!8329 = metadata !{i32 32, i32 0, metadata !8151, metadata !8330}
!8330 = metadata !{i32 52, i32 0, metadata !4614, metadata !8324}
!8331 = metadata !{i32 53, i32 0, metadata !4614, metadata !8324}
!8332 = metadata !{i32 54, i32 0, metadata !4614, metadata !8324}
!8333 = metadata !{i32 24, i32 0, metadata !8136, metadata !8334}
!8334 = metadata !{i32 56, i32 0, metadata !4614, metadata !8324}
!8335 = metadata !{i32 51, i32 0, metadata !4614, metadata !8324}
!8336 = metadata !{i32 282, i32 0, metadata !4692, null}
!8337 = metadata !{i32 46, i32 0, metadata !4614, metadata !8336}
!8338 = metadata !{i32 24, i32 0, metadata !8136, metadata !8337}
!8339 = metadata !{i32 47, i32 0, metadata !4614, metadata !8336}
!8340 = metadata !{i32 49, i32 0, metadata !4614, metadata !8336}
!8341 = metadata !{i32 32, i32 0, metadata !8151, metadata !8342}
!8342 = metadata !{i32 52, i32 0, metadata !4614, metadata !8336}
!8343 = metadata !{i32 53, i32 0, metadata !4614, metadata !8336}
!8344 = metadata !{i32 54, i32 0, metadata !4614, metadata !8336}
!8345 = metadata !{i32 24, i32 0, metadata !8136, metadata !8346}
!8346 = metadata !{i32 56, i32 0, metadata !4614, metadata !8336}
!8347 = metadata !{i32 51, i32 0, metadata !4614, metadata !8336}
!8348 = metadata !{i32 131, i32 0, metadata !8132, metadata !8349}
!8349 = metadata !{i32 284, i32 0, metadata !4632, null}
!8350 = metadata !{i32 134, i32 0, metadata !8132, metadata !8349}
!8351 = metadata !{i32 130, i32 0, metadata !8132, metadata !8349}
!8352 = metadata !{i32 286, i32 0, metadata !4632, null}
!8353 = metadata !{i32 131, i32 0, metadata !8132, metadata !8354}
!8354 = metadata !{i32 288, i32 0, metadata !4632, null}
!8355 = metadata !{i32 134, i32 0, metadata !8132, metadata !8354}
!8356 = metadata !{i32 130, i32 0, metadata !8132, metadata !8354}
!8357 = metadata !{i32 292, i32 0, metadata !4694, null}
!8358 = metadata !{i32 24, i32 0, metadata !8136, metadata !8359}
!8359 = metadata !{i32 293, i32 0, metadata !4694, null}
!8360 = metadata !{i32 294, i32 0, metadata !4694, null}
!8361 = metadata !{i32 24, i32 0, metadata !8136, metadata !8362}
!8362 = metadata !{i32 295, i32 0, metadata !4694, null}
!8363 = metadata !{i32 296, i32 0, metadata !4694, null}
!8364 = metadata !{i32 297, i32 0, metadata !4694, null}
!8365 = metadata !{i32 46, i32 0, metadata !4614, metadata !8364}
!8366 = metadata !{i32 24, i32 0, metadata !8136, metadata !8365}
!8367 = metadata !{i32 47, i32 0, metadata !4614, metadata !8364}
!8368 = metadata !{i32 49, i32 0, metadata !4614, metadata !8364}
!8369 = metadata !{i32 32, i32 0, metadata !8151, metadata !8370}
!8370 = metadata !{i32 52, i32 0, metadata !4614, metadata !8364}
!8371 = metadata !{i32 53, i32 0, metadata !4614, metadata !8364}
!8372 = metadata !{i32 54, i32 0, metadata !4614, metadata !8364}
!8373 = metadata !{i32 24, i32 0, metadata !8136, metadata !8374}
!8374 = metadata !{i32 56, i32 0, metadata !4614, metadata !8364}
!8375 = metadata !{i32 51, i32 0, metadata !4614, metadata !8364}
!8376 = metadata !{i32 298, i32 0, metadata !4694, null}
!8377 = metadata !{i32 130, i32 0, metadata !8132, metadata !8376}
!8378 = metadata !{i32 131, i32 0, metadata !8132, metadata !8376}
!8379 = metadata !{i32 134, i32 0, metadata !8132, metadata !8376}
!8380 = metadata !{i32 300, i32 0, metadata !4694, null}
!8381 = metadata !{i32 24, i32 0, metadata !8136, metadata !8382}
!8382 = metadata !{i32 301, i32 0, metadata !4694, null}
!8383 = metadata !{i32 299, i32 0, metadata !4694, null}
!8384 = metadata !{i32 302, i32 0, metadata !4694, null}
!8385 = metadata !{i32 303, i32 0, metadata !4694, null}
!8386 = metadata !{i32 46, i32 0, metadata !4614, metadata !8385}
!8387 = metadata !{i32 24, i32 0, metadata !8136, metadata !8386}
!8388 = metadata !{i32 47, i32 0, metadata !4614, metadata !8385}
!8389 = metadata !{i32 49, i32 0, metadata !4614, metadata !8385}
!8390 = metadata !{i32 32, i32 0, metadata !8151, metadata !8391}
!8391 = metadata !{i32 52, i32 0, metadata !4614, metadata !8385}
!8392 = metadata !{i32 53, i32 0, metadata !4614, metadata !8385}
!8393 = metadata !{i32 54, i32 0, metadata !4614, metadata !8385}
!8394 = metadata !{i32 24, i32 0, metadata !8136, metadata !8395}
!8395 = metadata !{i32 56, i32 0, metadata !4614, metadata !8385}
!8396 = metadata !{i32 51, i32 0, metadata !4614, metadata !8385}
!8397 = metadata !{i32 304, i32 0, metadata !4694, null}
!8398 = metadata !{i32 46, i32 0, metadata !4614, metadata !8397}
!8399 = metadata !{i32 24, i32 0, metadata !8136, metadata !8398}
!8400 = metadata !{i32 47, i32 0, metadata !4614, metadata !8397}
!8401 = metadata !{i32 49, i32 0, metadata !4614, metadata !8397}
!8402 = metadata !{i32 32, i32 0, metadata !8151, metadata !8403}
!8403 = metadata !{i32 52, i32 0, metadata !4614, metadata !8397}
!8404 = metadata !{i32 53, i32 0, metadata !4614, metadata !8397}
!8405 = metadata !{i32 54, i32 0, metadata !4614, metadata !8397}
!8406 = metadata !{i32 24, i32 0, metadata !8136, metadata !8407}
!8407 = metadata !{i32 56, i32 0, metadata !4614, metadata !8397}
!8408 = metadata !{i32 51, i32 0, metadata !4614, metadata !8397}
!8409 = metadata !{i32 305, i32 0, metadata !4694, null}
!8410 = metadata !{i32 131, i32 0, metadata !8132, metadata !8411}
!8411 = metadata !{i32 307, i32 0, metadata !4694, null}
!8412 = metadata !{i32 134, i32 0, metadata !8132, metadata !8411}
!8413 = metadata !{i32 130, i32 0, metadata !8132, metadata !8411}
!8414 = metadata !{i32 308, i32 0, metadata !4694, null}
!8415 = metadata !{i32 309, i32 0, metadata !4694, null}
!8416 = metadata !{i32 24, i32 0, metadata !8136, metadata !8417}
!8417 = metadata !{i32 310, i32 0, metadata !4694, null}
!8418 = metadata !{i32 311, i32 0, metadata !4694, null}
!8419 = metadata !{i32 312, i32 0, metadata !4694, null}
!8420 = metadata !{i32 313, i32 0, metadata !4694, null}
!8421 = metadata !{i32 315, i32 0, metadata !4694, null}
!8422 = metadata !{i32 131, i32 0, metadata !8132, metadata !8423}
!8423 = metadata !{i32 317, i32 0, metadata !4694, null}
!8424 = metadata !{i32 134, i32 0, metadata !8132, metadata !8423}
!8425 = metadata !{i32 130, i32 0, metadata !8132, metadata !8423}
!8426 = metadata !{i32 318, i32 0, metadata !4694, null}
!8427 = metadata !{i32 319, i32 0, metadata !4694, null}
!8428 = metadata !{i32 24, i32 0, metadata !8136, metadata !8429}
!8429 = metadata !{i32 320, i32 0, metadata !4694, null}
!8430 = metadata !{i32 321, i32 0, metadata !4694, null}
!8431 = metadata !{i32 322, i32 0, metadata !4694, null}
!8432 = metadata !{i32 323, i32 0, metadata !4694, null}
!8433 = metadata !{i32 24, i32 0, metadata !8136, metadata !8434}
!8434 = metadata !{i32 326, i32 0, metadata !4694, null}
!8435 = metadata !{i32 131, i32 0, metadata !8132, metadata !8436}
!8436 = metadata !{i32 329, i32 0, metadata !4632, null}
!8437 = metadata !{i32 134, i32 0, metadata !8132, metadata !8436}
!8438 = metadata !{i32 130, i32 0, metadata !8132, metadata !8436}
!8439 = metadata !{i32 333, i32 0, metadata !4697, null}
!8440 = metadata !{i32 24, i32 0, metadata !8136, metadata !8441}
!8441 = metadata !{i32 334, i32 0, metadata !4697, null}
!8442 = metadata !{i32 335, i32 0, metadata !4697, null}
!8443 = metadata !{i32 24, i32 0, metadata !8136, metadata !8444}
!8444 = metadata !{i32 336, i32 0, metadata !4697, null}
!8445 = metadata !{i32 337, i32 0, metadata !4697, null}
!8446 = metadata !{i32 338, i32 0, metadata !4697, null}
!8447 = metadata !{i32 46, i32 0, metadata !4614, metadata !8446}
!8448 = metadata !{i32 24, i32 0, metadata !8136, metadata !8447}
!8449 = metadata !{i32 47, i32 0, metadata !4614, metadata !8446}
!8450 = metadata !{i32 49, i32 0, metadata !4614, metadata !8446}
!8451 = metadata !{i32 32, i32 0, metadata !8151, metadata !8452}
!8452 = metadata !{i32 52, i32 0, metadata !4614, metadata !8446}
!8453 = metadata !{i32 53, i32 0, metadata !4614, metadata !8446}
!8454 = metadata !{i32 54, i32 0, metadata !4614, metadata !8446}
!8455 = metadata !{i32 24, i32 0, metadata !8136, metadata !8456}
!8456 = metadata !{i32 56, i32 0, metadata !4614, metadata !8446}
!8457 = metadata !{i32 51, i32 0, metadata !4614, metadata !8446}
!8458 = metadata !{i32 339, i32 0, metadata !4697, null}
!8459 = metadata !{i32 130, i32 0, metadata !8132, metadata !8458}
!8460 = metadata !{i32 131, i32 0, metadata !8132, metadata !8458}
!8461 = metadata !{i32 134, i32 0, metadata !8132, metadata !8458}
!8462 = metadata !{i32 341, i32 0, metadata !4697, null}
!8463 = metadata !{i32 24, i32 0, metadata !8136, metadata !8464}
!8464 = metadata !{i32 342, i32 0, metadata !4697, null}
!8465 = metadata !{i32 340, i32 0, metadata !4697, null}
!8466 = metadata !{i32 343, i32 0, metadata !4697, null}
!8467 = metadata !{i32 344, i32 0, metadata !4697, null}
!8468 = metadata !{i32 46, i32 0, metadata !4614, metadata !8467}
!8469 = metadata !{i32 24, i32 0, metadata !8136, metadata !8468}
!8470 = metadata !{i32 47, i32 0, metadata !4614, metadata !8467}
!8471 = metadata !{i32 49, i32 0, metadata !4614, metadata !8467}
!8472 = metadata !{i32 32, i32 0, metadata !8151, metadata !8473}
!8473 = metadata !{i32 52, i32 0, metadata !4614, metadata !8467}
!8474 = metadata !{i32 53, i32 0, metadata !4614, metadata !8467}
!8475 = metadata !{i32 54, i32 0, metadata !4614, metadata !8467}
!8476 = metadata !{i32 24, i32 0, metadata !8136, metadata !8477}
!8477 = metadata !{i32 56, i32 0, metadata !4614, metadata !8467}
!8478 = metadata !{i32 51, i32 0, metadata !4614, metadata !8467}
!8479 = metadata !{i32 345, i32 0, metadata !4697, null}
!8480 = metadata !{i32 46, i32 0, metadata !4614, metadata !8479}
!8481 = metadata !{i32 24, i32 0, metadata !8136, metadata !8480}
!8482 = metadata !{i32 47, i32 0, metadata !4614, metadata !8479}
!8483 = metadata !{i32 49, i32 0, metadata !4614, metadata !8479}
!8484 = metadata !{i32 32, i32 0, metadata !8151, metadata !8485}
!8485 = metadata !{i32 52, i32 0, metadata !4614, metadata !8479}
!8486 = metadata !{i32 53, i32 0, metadata !4614, metadata !8479}
!8487 = metadata !{i32 54, i32 0, metadata !4614, metadata !8479}
!8488 = metadata !{i32 24, i32 0, metadata !8136, metadata !8489}
!8489 = metadata !{i32 56, i32 0, metadata !4614, metadata !8479}
!8490 = metadata !{i32 51, i32 0, metadata !4614, metadata !8479}
!8491 = metadata !{i32 346, i32 0, metadata !4697, null}
!8492 = metadata !{i32 131, i32 0, metadata !8132, metadata !8493}
!8493 = metadata !{i32 348, i32 0, metadata !4697, null}
!8494 = metadata !{i32 134, i32 0, metadata !8132, metadata !8493}
!8495 = metadata !{i32 130, i32 0, metadata !8132, metadata !8493}
!8496 = metadata !{i32 349, i32 0, metadata !4697, null}
!8497 = metadata !{i32 350, i32 0, metadata !4697, null}
!8498 = metadata !{i32 24, i32 0, metadata !8136, metadata !8499}
!8499 = metadata !{i32 351, i32 0, metadata !4697, null}
!8500 = metadata !{i32 352, i32 0, metadata !4697, null}
!8501 = metadata !{i32 353, i32 0, metadata !4697, null}
!8502 = metadata !{i32 354, i32 0, metadata !4697, null}
!8503 = metadata !{i32 356, i32 0, metadata !4697, null}
!8504 = metadata !{i32 131, i32 0, metadata !8132, metadata !8505}
!8505 = metadata !{i32 358, i32 0, metadata !4697, null}
!8506 = metadata !{i32 134, i32 0, metadata !8132, metadata !8505}
!8507 = metadata !{i32 130, i32 0, metadata !8132, metadata !8505}
!8508 = metadata !{i32 359, i32 0, metadata !4697, null}
!8509 = metadata !{i32 360, i32 0, metadata !4697, null}
!8510 = metadata !{i32 24, i32 0, metadata !8136, metadata !8511}
!8511 = metadata !{i32 361, i32 0, metadata !4697, null}
!8512 = metadata !{i32 362, i32 0, metadata !4697, null}
!8513 = metadata !{i32 363, i32 0, metadata !4697, null}
!8514 = metadata !{i32 364, i32 0, metadata !4697, null}
!8515 = metadata !{i32 24, i32 0, metadata !8136, metadata !8516}
!8516 = metadata !{i32 367, i32 0, metadata !4697, null}
!8517 = metadata !{i32 153, i32 0, metadata !8161, metadata !8518}
!8518 = metadata !{i32 372, i32 0, metadata !4632, null}
!8519 = metadata !{i32 24, i32 0, metadata !8136, metadata !8520}
!8520 = metadata !{i32 154, i32 0, metadata !8161, metadata !8518}
!8521 = metadata !{i32 156, i32 0, metadata !8161, metadata !8518}
!8522 = metadata !{i32 157, i32 0, metadata !8161, metadata !8518}
!8523 = metadata !{i32 202, i32 0, metadata !4632, null}
!8524 = metadata !{i32 376, i32 0, metadata !4632, null}
!8525 = metadata !{i32 377, i32 0, metadata !4632, null}
!8526 = metadata !{i32 378, i32 0, metadata !4632, null}
!8527 = metadata !{i32 379, i32 0, metadata !4632, null}
!8528 = metadata !{i32 381, i32 0, metadata !4632, null}
!8529 = metadata !{i32 382, i32 0, metadata !4632, null}
!8530 = metadata !{i32 384, i32 0, metadata !4632, null}
!8531 = metadata !{i32 392, i32 0, metadata !4632, null}
!8532 = metadata !{i32 141, i32 0, metadata !4608, null}
!8533 = metadata !{i32 142, i32 0, metadata !4608, null}
!8534 = metadata !{i32 143, i32 0, metadata !4608, null}
!8535 = metadata !{i32 145, i32 0, metadata !4608, null}
!8536 = metadata !{i32 146, i32 0, metadata !4608, null}
!8537 = metadata !{i32 126, i32 0, metadata !8538, metadata !8536}
!8538 = metadata !{i32 589835, metadata !3228, i32 124, i32 0, metadata !3220, i32 2} ; [ DW_TAG_lexical_block ]
!8539 = metadata !{i32 148, i32 0, metadata !4608, null}
!8540 = metadata !{i32 149, i32 0, metadata !4608, null}
!8541 = metadata !{i32 66, i32 0, metadata !4620, null}
!8542 = metadata !{i32 70, i32 0, metadata !4620, null}
!8543 = metadata !{i32 72, i32 0, metadata !4620, null}
!8544 = metadata !{i32 73, i32 0, metadata !4620, null}
!8545 = metadata !{i32 75, i32 0, metadata !4623, null}
!8546 = metadata !{i32 76, i32 0, metadata !4623, null}
!8547 = metadata !{i32 77, i32 0, metadata !4623, null}
!8548 = metadata !{i32 78, i32 0, metadata !4623, null}
!8549 = metadata !{i32 79, i32 0, metadata !4623, null}
!8550 = metadata !{i32 80, i32 0, metadata !4623, null}
!8551 = metadata !{i32 81, i32 0, metadata !4623, null}
!8552 = metadata !{i32 82, i32 0, metadata !4623, null}
!8553 = metadata !{i32 28, i32 0, metadata !8554, metadata !8555}
!8554 = metadata !{i32 589835, metadata !3219, i32 27, i32 0, metadata !3220, i32 0} ; [ DW_TAG_lexical_block ]
!8555 = metadata !{i32 91, i32 0, metadata !4623, null}
!8556 = metadata !{i32 92, i32 0, metadata !4623, null}
!8557 = metadata !{i32 28, i32 0, metadata !8554, metadata !8556}
!8558 = metadata !{i32 93, i32 0, metadata !4623, null}
!8559 = metadata !{i32 94, i32 0, metadata !4623, null}
!8560 = metadata !{i32 28, i32 0, metadata !8554, metadata !8559}
!8561 = metadata !{i32 95, i32 0, metadata !4623, null}
!8562 = metadata !{i32 96, i32 0, metadata !4623, null}
!8563 = metadata !{i32 99, i32 0, metadata !4623, null}
!8564 = metadata !{i32 102, i32 0, metadata !4623, null}
!8565 = metadata !{i32 105, i32 0, metadata !4623, null}
!8566 = metadata !{i32 32, i32 0, metadata !8151, metadata !8565}
!8567 = metadata !{i32 106, i32 0, metadata !4623, null}
!8568 = metadata !{i32 107, i32 0, metadata !4623, null}
!8569 = metadata !{i32 32, i32 0, metadata !8151, metadata !8568}
!8570 = metadata !{i32 108, i32 0, metadata !4623, null}
!8571 = metadata !{i32 109, i32 0, metadata !4623, null}
!8572 = metadata !{i32 112, i32 0, metadata !4623, null}
!8573 = metadata !{i32 24, i32 0, metadata !8136, metadata !8574}
!8574 = metadata !{i32 115, i32 0, metadata !4623, null}
!8575 = metadata !{i32 68, i32 0, metadata !4620, null}
!8576 = metadata !{i32 120, i32 0, metadata !4620, null}
!8577 = metadata !{i32 23, i32 0, metadata !8578, null}
!8578 = metadata !{i32 589835, metadata !3286, i32 22, i32 0, metadata !3260, i32 8} ; [ DW_TAG_lexical_block ]
!8579 = metadata !{i32 24, i32 0, metadata !8578, null}
!8580 = metadata !{i32 25, i32 0, metadata !8578, null}
!8581 = metadata !{i32 63, i32 0, metadata !8582, null}
!8582 = metadata !{i32 589835, metadata !3259, i32 62, i32 0, metadata !3260, i32 0} ; [ DW_TAG_lexical_block ]
!8583 = metadata !{i32 64, i32 0, metadata !8582, null}
!8584 = metadata !{i32 65, i32 0, metadata !8582, null}
!8585 = metadata !{i32 63, i32 0, metadata !8582, metadata !8586}
!8586 = metadata !{i32 69, i32 0, metadata !8587, null}
!8587 = metadata !{i32 589835, metadata !3267, i32 68, i32 0, metadata !3260, i32 1} ; [ DW_TAG_lexical_block ]
!8588 = metadata !{i32 64, i32 0, metadata !8582, metadata !8586}
!8589 = metadata !{i32 60, i32 0, metadata !3268, null}
!8590 = metadata !{i32 60, i32 0, metadata !8591, null}
!8591 = metadata !{i32 589835, metadata !3268, i32 60, i32 0, metadata !3260, i32 2} ; [ DW_TAG_lexical_block ]
!8592 = metadata !{i32 59, i32 0, metadata !3277, null}
!8593 = metadata !{i32 59, i32 0, metadata !8594, null}
!8594 = metadata !{i32 589835, metadata !3277, i32 59, i32 0, metadata !3260, i32 3} ; [ DW_TAG_lexical_block ]
!8595 = metadata !{i32 58, i32 0, metadata !3280, null}
!8596 = metadata !{i32 58, i32 0, metadata !8597, null}
!8597 = metadata !{i32 589835, metadata !3280, i32 58, i32 0, metadata !3260, i32 4} ; [ DW_TAG_lexical_block ]
!8598 = metadata !{i32 57, i32 0, metadata !3281, null}
!8599 = metadata !{i32 57, i32 0, metadata !8600, null}
!8600 = metadata !{i32 589835, metadata !3281, i32 57, i32 0, metadata !3260, i32 5} ; [ DW_TAG_lexical_block ]
!8601 = metadata !{i32 56, i32 0, metadata !3284, null}
!8602 = metadata !{i32 56, i32 0, metadata !8603, null}
!8603 = metadata !{i32 589835, metadata !3284, i32 56, i32 0, metadata !3260, i32 6} ; [ DW_TAG_lexical_block ]
!8604 = metadata !{i32 55, i32 0, metadata !3285, null}
!8605 = metadata !{i32 55, i32 0, metadata !8606, null}
!8606 = metadata !{i32 589835, metadata !3285, i32 55, i32 0, metadata !3260, i32 7} ; [ DW_TAG_lexical_block ]
!8607 = metadata !{i32 35, i32 0, metadata !8608, null}
!8608 = metadata !{i32 589835, metadata !3289, i32 34, i32 0, metadata !3260, i32 9} ; [ DW_TAG_lexical_block ]
!8609 = metadata !{i32 30, i32 0, metadata !8610, null}
!8610 = metadata !{i32 589835, metadata !3312, i32 29, i32 0, metadata !3260, i32 10} ; [ DW_TAG_lexical_block ]
!8611 = metadata !{i32 31, i32 0, metadata !8610, null}
!8612 = metadata !{i32 156, i32 0, metadata !4720, null}
!8613 = metadata !{i32 157, i32 0, metadata !4719, null}
!8614 = metadata !{i32 158, i32 0, metadata !4719, null}
!8615 = metadata !{i32 159, i32 0, metadata !4719, null}
!8616 = metadata !{i32 204, i32 0, metadata !4723, null}
!8617 = metadata !{i32 205, i32 0, metadata !4723, null}
!8618 = metadata !{i32 206, i32 0, metadata !4723, null}
!8619 = metadata !{i32 156, i32 0, metadata !4720, metadata !8620}
!8620 = metadata !{i32 2484, i32 0, metadata !4735, null}
!8621 = metadata !{i32 157, i32 0, metadata !4719, metadata !8620}
!8622 = metadata !{i32 158, i32 0, metadata !4719, metadata !8620}
!8623 = metadata !{i32 159, i32 0, metadata !4719, metadata !8620}
!8624 = metadata !{i32 156, i32 0, metadata !4720, metadata !8625}
!8625 = metadata !{i32 2485, i32 0, metadata !4735, null}
!8626 = metadata !{i32 157, i32 0, metadata !4719, metadata !8625}
!8627 = metadata !{i32 158, i32 0, metadata !4719, metadata !8625}
!8628 = metadata !{i32 159, i32 0, metadata !4719, metadata !8625}
!8629 = metadata !{i32 2487, i32 0, metadata !4735, null}
!8630 = metadata !{i32 2488, i32 0, metadata !4735, null}
!8631 = metadata !{i32 2489, i32 0, metadata !4735, null}
!8632 = metadata !{i32 2491, i32 0, metadata !4738, null}
!8633 = metadata !{i32 2492, i32 0, metadata !4738, null}
!8634 = metadata !{i32 2493, i32 0, metadata !4738, null}
!8635 = metadata !{i32 2500, i32 0, metadata !8636, null}
!8636 = metadata !{i32 589835, metadata !3420, i32 2499, i32 0, metadata !3316, i32 6} ; [ DW_TAG_lexical_block ]
!8637 = metadata !{i32 156, i32 0, metadata !4720, metadata !8638}
!8638 = metadata !{i32 1716, i32 0, metadata !4745, null}
!8639 = metadata !{i32 157, i32 0, metadata !4719, metadata !8638}
!8640 = metadata !{i32 158, i32 0, metadata !4719, metadata !8638}
!8641 = metadata !{i32 1718, i32 0, metadata !4745, null}
!8642 = metadata !{i32 1719, i32 0, metadata !4745, null}
!8643 = metadata !{i32 1720, i32 0, metadata !4745, null}
!8644 = metadata !{i32 1721, i32 0, metadata !4745, null}
!8645 = metadata !{i32 1724, i32 0, metadata !4747, null}
!8646 = metadata !{i32 1725, i32 0, metadata !4747, null}
!8647 = metadata !{i32 1726, i32 0, metadata !4747, null}
!8648 = metadata !{i32 2076, i32 0, metadata !8649, null}
!8649 = metadata !{i32 589835, metadata !3424, i32 2075, i32 0, metadata !3316, i32 9} ; [ DW_TAG_lexical_block ]
!8650 = metadata !{i32 2077, i32 0, metadata !8649, null}
!8651 = metadata !{i32 2078, i32 0, metadata !8649, null}
!8652 = metadata !{i32 2081, i32 0, metadata !8649, null}
!8653 = metadata !{i32 2085, i32 0, metadata !8649, null}
!8654 = metadata !{i32 2086, i32 0, metadata !8649, null}
!8655 = metadata !{i32 2087, i32 0, metadata !8649, null}
!8656 = metadata !{i32 156, i32 0, metadata !4720, metadata !8657}
!8657 = metadata !{i32 1696, i32 0, metadata !4752, null}
!8658 = metadata !{i32 157, i32 0, metadata !4719, metadata !8657}
!8659 = metadata !{i32 158, i32 0, metadata !4719, metadata !8657}
!8660 = metadata !{i32 1698, i32 0, metadata !4752, null}
!8661 = metadata !{i32 1699, i32 0, metadata !4752, null}
!8662 = metadata !{i32 1700, i32 0, metadata !4752, null}
!8663 = metadata !{i32 1703, i32 0, metadata !4752, null}
!8664 = metadata !{i32 1704, i32 0, metadata !4752, null}
!8665 = metadata !{i32 1705, i32 0, metadata !4752, null}
!8666 = metadata !{i32 1706, i32 0, metadata !4752, null}
!8667 = metadata !{i32 1708, i32 0, metadata !4754, null}
!8668 = metadata !{i32 1709, i32 0, metadata !4754, null}
!8669 = metadata !{i32 1710, i32 0, metadata !4754, null}
!8670 = metadata !{i32 156, i32 0, metadata !4720, metadata !8671}
!8671 = metadata !{i32 1612, i32 0, metadata !4758, null}
!8672 = metadata !{i32 157, i32 0, metadata !4719, metadata !8671}
!8673 = metadata !{i32 158, i32 0, metadata !4719, metadata !8671}
!8674 = metadata !{i32 1627, i32 0, metadata !4758, null}
!8675 = metadata !{i32 1628, i32 0, metadata !4758, null}
!8676 = metadata !{i32 1629, i32 0, metadata !4758, null}
!8677 = metadata !{i32 1632, i32 0, metadata !4758, null}
!8678 = metadata !{i32 1636, i32 0, metadata !4758, null}
!8679 = metadata !{i32 1637, i32 0, metadata !4758, null}
!8680 = metadata !{i32 1638, i32 0, metadata !4758, null}
!8681 = metadata !{i32 1641, i32 0, metadata !4758, null}
!8682 = metadata !{i32 1642, i32 0, metadata !4758, null}
!8683 = metadata !{i32 1645, i32 0, metadata !4772, null}
!8684 = metadata !{i32 1650, i32 0, metadata !4758, null}
!8685 = metadata !{i32 1651, i32 0, metadata !4758, null}
!8686 = metadata !{i32 1652, i32 0, metadata !4758, null}
!8687 = metadata !{i32 1666, i32 0, metadata !4758, null}
!8688 = metadata !{i32 1667, i32 0, metadata !4758, null}
!8689 = metadata !{i32 1668, i32 0, metadata !4758, null}
!8690 = metadata !{i32 1671, i32 0, metadata !4774, null}
!8691 = metadata !{i32 1672, i32 0, metadata !4774, null}
!8692 = metadata !{i32 1673, i32 0, metadata !4774, null}
!8693 = metadata !{i32 156, i32 0, metadata !4720, metadata !8694}
!8694 = metadata !{i32 1170, i32 0, metadata !4778, null}
!8695 = metadata !{i32 157, i32 0, metadata !4719, metadata !8694}
!8696 = metadata !{i32 158, i32 0, metadata !4719, metadata !8694}
!8697 = metadata !{i32 1171, i32 0, metadata !4778, null}
!8698 = metadata !{i32 1172, i32 0, metadata !4778, null}
!8699 = metadata !{i32 1173, i32 0, metadata !4778, null}
!8700 = metadata !{i32 1174, i32 0, metadata !4778, null}
!8701 = metadata !{i32 1177, i32 0, metadata !4778, null}
!8702 = metadata !{i32 1178, i32 0, metadata !4778, null}
!8703 = metadata !{i32 1183, i32 0, metadata !4778, null}
!8704 = metadata !{i32 1184, i32 0, metadata !4778, null}
!8705 = metadata !{i32 1185, i32 0, metadata !4778, null}
!8706 = metadata !{i32 156, i32 0, metadata !4720, metadata !8707}
!8707 = metadata !{i32 997, i32 0, metadata !4787, null}
!8708 = metadata !{i32 157, i32 0, metadata !4719, metadata !8707}
!8709 = metadata !{i32 158, i32 0, metadata !4719, metadata !8707}
!8710 = metadata !{i32 999, i32 0, metadata !4787, null}
!8711 = metadata !{i32 1000, i32 0, metadata !4787, null}
!8712 = metadata !{i32 1001, i32 0, metadata !4787, null}
!8713 = metadata !{i32 1004, i32 0, metadata !4787, null}
!8714 = metadata !{i32 978, i32 0, metadata !8715, metadata !8716}
!8715 = metadata !{i32 589835, metadata !3465, i32 977, i32 0, metadata !3316, i32 16} ; [ DW_TAG_lexical_block ]
!8716 = metadata !{i32 1005, i32 0, metadata !4787, null}
!8717 = metadata !{i32 979, i32 0, metadata !8715, metadata !8716}
!8718 = metadata !{i32 1007, i32 0, metadata !4789, null}
!8719 = metadata !{i32 1008, i32 0, metadata !4789, null}
!8720 = metadata !{i32 1009, i32 0, metadata !4789, null}
!8721 = metadata !{i32 156, i32 0, metadata !4720, metadata !8722}
!8722 = metadata !{i32 812, i32 0, metadata !4792, null}
!8723 = metadata !{i32 157, i32 0, metadata !4719, metadata !8722}
!8724 = metadata !{i32 158, i32 0, metadata !4719, metadata !8722}
!8725 = metadata !{i32 814, i32 0, metadata !4792, null}
!8726 = metadata !{i32 815, i32 0, metadata !4792, null}
!8727 = metadata !{i32 816, i32 0, metadata !4792, null}
!8728 = metadata !{i32 819, i32 0, metadata !4792, null}
!8729 = metadata !{i32 820, i32 0, metadata !4792, null}
!8730 = metadata !{i32 821, i32 0, metadata !4792, null}
!8731 = metadata !{i32 822, i32 0, metadata !4792, null}
!8732 = metadata !{i32 824, i32 0, metadata !4794, null}
!8733 = metadata !{i32 825, i32 0, metadata !4794, null}
!8734 = metadata !{i32 826, i32 0, metadata !4794, null}
!8735 = metadata !{i32 156, i32 0, metadata !4720, metadata !8736}
!8736 = metadata !{i32 2304, i32 0, metadata !4798, null}
!8737 = metadata !{i32 157, i32 0, metadata !4719, metadata !8736}
!8738 = metadata !{i32 158, i32 0, metadata !4719, metadata !8736}
!8739 = metadata !{i32 2312, i32 0, metadata !4798, null}
!8740 = metadata !{i32 2313, i32 0, metadata !4798, null}
!8741 = metadata !{i32 2314, i32 0, metadata !4798, null}
!8742 = metadata !{i32 2317, i32 0, metadata !4798, null}
!8743 = metadata !{i32 2318, i32 0, metadata !4798, null}
!8744 = metadata !{i32 2319, i32 0, metadata !4798, null}
!8745 = metadata !{i32 2321, i32 0, metadata !4798, null}
!8746 = metadata !{i32 2322, i32 0, metadata !4802, null}
!8747 = metadata !{i32 2324, i32 0, metadata !4802, null}
!8748 = metadata !{i32 2328, i32 0, metadata !4804, null}
!8749 = metadata !{i32 2331, i32 0, metadata !4804, null}
!8750 = metadata !{i32 2334, i32 0, metadata !4804, null}
!8751 = metadata !{i32 2335, i32 0, metadata !4804, null}
!8752 = metadata !{i32 2336, i32 0, metadata !4804, null}
!8753 = metadata !{i32 2337, i32 0, metadata !4804, null}
!8754 = metadata !{i32 2338, i32 0, metadata !4804, null}
!8755 = metadata !{i32 2339, i32 0, metadata !4804, null}
!8756 = metadata !{i32 2340, i32 0, metadata !4804, null}
!8757 = metadata !{i32 2341, i32 0, metadata !4804, null}
!8758 = metadata !{i32 2342, i32 0, metadata !4804, null}
!8759 = metadata !{i32 2343, i32 0, metadata !4804, null}
!8760 = metadata !{i32 2344, i32 0, metadata !4804, null}
!8761 = metadata !{i32 2345, i32 0, metadata !4804, null}
!8762 = metadata !{i32 2346, i32 0, metadata !4804, null}
!8763 = metadata !{i32 2347, i32 0, metadata !4804, null}
!8764 = metadata !{i32 2348, i32 0, metadata !4804, null}
!8765 = metadata !{i32 2349, i32 0, metadata !4804, null}
!8766 = metadata !{i32 2350, i32 0, metadata !4804, null}
!8767 = metadata !{i32 2351, i32 0, metadata !4804, null}
!8768 = metadata !{i32 2352, i32 0, metadata !4804, null}
!8769 = metadata !{i32 2353, i32 0, metadata !4804, null}
!8770 = metadata !{i32 2354, i32 0, metadata !4804, null}
!8771 = metadata !{i32 2355, i32 0, metadata !4804, null}
!8772 = metadata !{i32 2356, i32 0, metadata !4804, null}
!8773 = metadata !{i32 2357, i32 0, metadata !4804, null}
!8774 = metadata !{i32 2358, i32 0, metadata !4804, null}
!8775 = metadata !{i32 2360, i32 0, metadata !4804, null}
!8776 = metadata !{i32 2361, i32 0, metadata !4804, null}
!8777 = metadata !{i32 2366, i32 0, metadata !4802, null}
!8778 = metadata !{i32 2367, i32 0, metadata !4802, null}
!8779 = metadata !{i32 2370, i32 0, metadata !4802, null}
!8780 = metadata !{i32 2371, i32 0, metadata !4802, null}
!8781 = metadata !{i32 2376, i32 0, metadata !4802, null}
!8782 = metadata !{i32 2377, i32 0, metadata !4802, null}
!8783 = metadata !{i32 2380, i32 0, metadata !4802, null}
!8784 = metadata !{i32 2381, i32 0, metadata !4802, null}
!8785 = metadata !{i32 2386, i32 0, metadata !4802, null}
!8786 = metadata !{i32 2387, i32 0, metadata !4802, null}
!8787 = metadata !{i32 2390, i32 0, metadata !4802, null}
!8788 = metadata !{i32 2391, i32 0, metadata !4802, null}
!8789 = metadata !{i32 2396, i32 0, metadata !4822, null}
!8790 = metadata !{i32 2397, i32 0, metadata !4822, null}
!8791 = metadata !{i32 2398, i32 0, metadata !4822, null}
!8792 = metadata !{i32 2399, i32 0, metadata !4822, null}
!8793 = metadata !{i32 2402, i32 0, metadata !4822, null}
!8794 = metadata !{i32 2403, i32 0, metadata !4822, null}
!8795 = metadata !{i32 2408, i32 0, metadata !4802, null}
!8796 = metadata !{i32 2409, i32 0, metadata !4802, null}
!8797 = metadata !{i32 2410, i32 0, metadata !4802, null}
!8798 = metadata !{i32 2411, i32 0, metadata !4802, null}
!8799 = metadata !{i32 2413, i32 0, metadata !4802, null}
!8800 = metadata !{i32 2414, i32 0, metadata !4802, null}
!8801 = metadata !{i32 2418, i32 0, metadata !4832, null}
!8802 = metadata !{i32 2419, i32 0, metadata !4832, null}
!8803 = metadata !{i32 2420, i32 0, metadata !4832, null}
!8804 = metadata !{i32 2421, i32 0, metadata !4832, null}
!8805 = metadata !{i32 2422, i32 0, metadata !4832, null}
!8806 = metadata !{i32 2426, i32 0, metadata !4832, null}
!8807 = metadata !{i32 2428, i32 0, metadata !4832, null}
!8808 = metadata !{i32 2429, i32 0, metadata !4832, null}
!8809 = metadata !{i32 2433, i32 0, metadata !4802, null}
!8810 = metadata !{i32 2434, i32 0, metadata !4802, null}
!8811 = metadata !{i32 2435, i32 0, metadata !4802, null}
!8812 = metadata !{i32 2439, i32 0, metadata !4834, null}
!8813 = metadata !{i32 2440, i32 0, metadata !4834, null}
!8814 = metadata !{i32 2447, i32 0, metadata !4875, null}
!8815 = metadata !{i32 2451, i32 0, metadata !4879, null}
!8816 = metadata !{i32 2453, i32 0, metadata !4879, null}
!8817 = metadata !{i32 2459, i32 0, metadata !4881, null}
!8818 = metadata !{i32 2465, i32 0, metadata !4889, null}
!8819 = metadata !{i32 2470, i32 0, metadata !4802, null}
!8820 = metadata !{i32 2471, i32 0, metadata !4802, null}
!8821 = metadata !{i32 2472, i32 0, metadata !4802, null}
!8822 = metadata !{i32 2475, i32 0, metadata !4907, null}
!8823 = metadata !{i32 2476, i32 0, metadata !4907, null}
!8824 = metadata !{i32 2477, i32 0, metadata !4907, null}
!8825 = metadata !{i32 2150, i32 0, metadata !8826, null}
!8826 = metadata !{i32 589835, metadata !3477, i32 2149, i32 0, metadata !3316, i32 32} ; [ DW_TAG_lexical_block ]
!8827 = metadata !{i32 2151, i32 0, metadata !8826, null}
!8828 = metadata !{i32 2130, i32 0, metadata !4911, null}
!8829 = metadata !{i32 2131, i32 0, metadata !4911, null}
!8830 = metadata !{i32 2133, i32 0, metadata !4911, null}
!8831 = metadata !{i32 2134, i32 0, metadata !4911, null}
!8832 = metadata !{i32 2135, i32 0, metadata !4911, null}
!8833 = metadata !{i32 2138, i32 0, metadata !4911, null}
!8834 = metadata !{i32 2141, i32 0, metadata !4911, null}
!8835 = metadata !{i32 2142, i32 0, metadata !4911, null}
!8836 = metadata !{i32 2143, i32 0, metadata !4911, null}
!8837 = metadata !{i32 2145, i32 0, metadata !4911, null}
!8838 = metadata !{i32 1885, i32 0, metadata !4918, null}
!8839 = metadata !{i32 1889, i32 0, metadata !4918, null}
!8840 = metadata !{i32 1886, i32 0, metadata !4918, null}
!8841 = metadata !{i32 1887, i32 0, metadata !4918, null}
!8842 = metadata !{i32 1892, i32 0, metadata !4918, null}
!8843 = metadata !{i32 1896, i32 0, metadata !4918, null}
!8844 = metadata !{i32 1893, i32 0, metadata !4918, null}
!8845 = metadata !{i32 1894, i32 0, metadata !4918, null}
!8846 = metadata !{i32 1899, i32 0, metadata !4918, null}
!8847 = metadata !{i32 1903, i32 0, metadata !4918, null}
!8848 = metadata !{i32 1900, i32 0, metadata !4918, null}
!8849 = metadata !{i32 1901, i32 0, metadata !4918, null}
!8850 = metadata !{i32 1906, i32 0, metadata !4918, null}
!8851 = metadata !{i32 1907, i32 0, metadata !4918, null}
!8852 = metadata !{i32 1908, i32 0, metadata !4918, null}
!8853 = metadata !{i32 1911, i32 0, metadata !4918, null}
!8854 = metadata !{i32 1912, i32 0, metadata !4918, null}
!8855 = metadata !{i32 156, i32 0, metadata !4720, metadata !8856}
!8856 = metadata !{i32 1913, i32 0, metadata !4928, null}
!8857 = metadata !{i32 158, i32 0, metadata !4719, metadata !8856}
!8858 = metadata !{i32 1914, i32 0, metadata !4928, null}
!8859 = metadata !{i32 1915, i32 0, metadata !4928, null}
!8860 = metadata !{i32 1916, i32 0, metadata !4928, null}
!8861 = metadata !{i32 1917, i32 0, metadata !4928, null}
!8862 = metadata !{i32 1920, i32 0, metadata !4930, null}
!8863 = metadata !{i32 1923, i32 0, metadata !4930, null}
!8864 = metadata !{i32 1925, i32 0, metadata !4930, null}
!8865 = metadata !{i32 1926, i32 0, metadata !4930, null}
!8866 = metadata !{i32 1927, i32 0, metadata !4930, null}
!8867 = metadata !{i32 1928, i32 0, metadata !4930, null}
!8868 = metadata !{i32 1931, i32 0, metadata !4930, null}
!8869 = metadata !{i32 1933, i32 0, metadata !4930, null}
!8870 = metadata !{i32 1936, i32 0, metadata !4930, null}
!8871 = metadata !{i32 1941, i32 0, metadata !4928, null}
!8872 = metadata !{i32 1942, i32 0, metadata !4928, null}
!8873 = metadata !{i32 1943, i32 0, metadata !4928, null}
!8874 = metadata !{i32 1944, i32 0, metadata !4928, null}
!8875 = metadata !{i32 1949, i32 0, metadata !4918, null}
!8876 = metadata !{i32 1952, i32 0, metadata !4932, null}
!8877 = metadata !{i32 1954, i32 0, metadata !4932, null}
!8878 = metadata !{i32 1956, i32 0, metadata !4932, null}
!8879 = metadata !{i32 1959, i32 0, metadata !4932, null}
!8880 = metadata !{i32 1960, i32 0, metadata !4932, null}
!8881 = metadata !{i32 1961, i32 0, metadata !4932, null}
!8882 = metadata !{i32 1964, i32 0, metadata !4932, null}
!8883 = metadata !{i32 1967, i32 0, metadata !4932, null}
!8884 = metadata !{i32 156, i32 0, metadata !4720, metadata !8885}
!8885 = metadata !{i32 1968, i32 0, metadata !4935, null}
!8886 = metadata !{i32 158, i32 0, metadata !4719, metadata !8885}
!8887 = metadata !{i32 1969, i32 0, metadata !4935, null}
!8888 = metadata !{i32 1970, i32 0, metadata !4935, null}
!8889 = metadata !{i32 1971, i32 0, metadata !4935, null}
!8890 = metadata !{i32 1972, i32 0, metadata !4935, null}
!8891 = metadata !{i32 417, i32 0, metadata !4938, null}
!8892 = metadata !{i32 156, i32 0, metadata !4720, metadata !8893}
!8893 = metadata !{i32 419, i32 0, metadata !4938, null}
!8894 = metadata !{i32 157, i32 0, metadata !4719, metadata !8893}
!8895 = metadata !{i32 158, i32 0, metadata !4719, metadata !8893}
!8896 = metadata !{i32 428, i32 0, metadata !4938, null}
!8897 = metadata !{i32 429, i32 0, metadata !4938, null}
!8898 = metadata !{i32 430, i32 0, metadata !4938, null}
!8899 = metadata !{i32 433, i32 0, metadata !4938, null}
!8900 = metadata !{i32 434, i32 0, metadata !4938, null}
!8901 = metadata !{i32 435, i32 0, metadata !4938, null}
!8902 = metadata !{i32 436, i32 0, metadata !4938, null}
!8903 = metadata !{i32 439, i32 0, metadata !4938, null}
!8904 = metadata !{i32 445, i32 0, metadata !4938, null}
!8905 = metadata !{i32 450, i32 0, metadata !4938, null}
!8906 = metadata !{i32 452, i32 0, metadata !4938, null}
!8907 = metadata !{i32 156, i32 0, metadata !4720, metadata !8908}
!8908 = metadata !{i32 1732, i32 0, metadata !4943, null}
!8909 = metadata !{i32 157, i32 0, metadata !4719, metadata !8908}
!8910 = metadata !{i32 158, i32 0, metadata !4719, metadata !8908}
!8911 = metadata !{i32 1737, i32 0, metadata !4943, null}
!8912 = metadata !{i32 1738, i32 0, metadata !4943, null}
!8913 = metadata !{i32 1739, i32 0, metadata !4943, null}
!8914 = metadata !{i32 1744, i32 0, metadata !4943, null}
!8915 = metadata !{i32 1748, i32 0, metadata !4943, null}
!8916 = metadata !{i32 1749, i32 0, metadata !4943, null}
!8917 = metadata !{i32 1743, i32 0, metadata !4943, null}
!8918 = metadata !{i32 1751, i32 0, metadata !4943, null}
!8919 = metadata !{i32 1752, i32 0, metadata !4943, null}
!8920 = metadata !{i32 1753, i32 0, metadata !4943, null}
!8921 = metadata !{i32 1756, i32 0, metadata !4943, null}
!8922 = metadata !{i32 1757, i32 0, metadata !4943, null}
!8923 = metadata !{i32 1767, i32 0, metadata !4943, null}
!8924 = metadata !{i32 1769, i32 0, metadata !4943, null}
!8925 = metadata !{i32 1776, i32 0, metadata !4943, null}
!8926 = metadata !{i32 156, i32 0, metadata !4720, metadata !8927}
!8927 = metadata !{i32 1780, i32 0, metadata !4949, null}
!8928 = metadata !{i32 157, i32 0, metadata !4719, metadata !8927}
!8929 = metadata !{i32 158, i32 0, metadata !4719, metadata !8927}
!8930 = metadata !{i32 1781, i32 0, metadata !4949, null}
!8931 = metadata !{i32 1782, i32 0, metadata !4949, null}
!8932 = metadata !{i32 1783, i32 0, metadata !4949, null}
!8933 = metadata !{i32 1790, i32 0, metadata !4951, null}
!8934 = metadata !{i32 1789, i32 0, metadata !4951, null}
!8935 = metadata !{i32 1792, i32 0, metadata !4951, null}
!8936 = metadata !{i32 1793, i32 0, metadata !4951, null}
!8937 = metadata !{i32 1794, i32 0, metadata !4951, null}
!8938 = metadata !{i32 1796, i32 0, metadata !4951, null}
!8939 = metadata !{i32 156, i32 0, metadata !4720, metadata !8940}
!8940 = metadata !{i32 1368, i32 0, metadata !4956, null}
!8941 = metadata !{i32 157, i32 0, metadata !4719, metadata !8940}
!8942 = metadata !{i32 158, i32 0, metadata !4719, metadata !8940}
!8943 = metadata !{i32 1370, i32 0, metadata !4956, null}
!8944 = metadata !{i32 1371, i32 0, metadata !4956, null}
!8945 = metadata !{i32 1372, i32 0, metadata !4956, null}
!8946 = metadata !{i32 1378, i32 0, metadata !4956, null}
!8947 = metadata !{i32 1379, i32 0, metadata !4956, null}
!8948 = metadata !{i32 1380, i32 0, metadata !4956, null}
!8949 = metadata !{i32 1381, i32 0, metadata !4956, null}
!8950 = metadata !{i32 1385, i32 0, metadata !4956, null}
!8951 = metadata !{i32 1390, i32 0, metadata !4958, null}
!8952 = metadata !{i32 1391, i32 0, metadata !4958, null}
!8953 = metadata !{i32 1396, i32 0, metadata !4958, null}
!8954 = metadata !{i32 1393, i32 0, metadata !4958, null}
!8955 = metadata !{i32 1394, i32 0, metadata !4958, null}
!8956 = metadata !{i32 1397, i32 0, metadata !4962, null}
!8957 = metadata !{i32 1398, i32 0, metadata !4962, null}
!8958 = metadata !{i32 1399, i32 0, metadata !4962, null}
!8959 = metadata !{i32 1400, i32 0, metadata !4962, null}
!8960 = metadata !{i32 1401, i32 0, metadata !4962, null}
!8961 = metadata !{i32 1402, i32 0, metadata !4962, null}
!8962 = metadata !{i32 1403, i32 0, metadata !4962, null}
!8963 = metadata !{i32 1409, i32 0, metadata !4958, null}
!8964 = metadata !{i32 1410, i32 0, metadata !4958, null}
!8965 = metadata !{i32 1411, i32 0, metadata !4958, null}
!8966 = metadata !{i32 1412, i32 0, metadata !4958, null}
!8967 = metadata !{i32 1413, i32 0, metadata !4958, null}
!8968 = metadata !{i32 1414, i32 0, metadata !4958, null}
!8969 = metadata !{i32 1415, i32 0, metadata !4958, null}
!8970 = metadata !{i32 1416, i32 0, metadata !4958, null}
!8971 = metadata !{i32 1418, i32 0, metadata !4958, null}
!8972 = metadata !{i32 1421, i32 0, metadata !4964, null}
!8973 = metadata !{i32 1432, i32 0, metadata !4964, null}
!8974 = metadata !{i32 1435, i32 0, metadata !4964, null}
!8975 = metadata !{i32 1436, i32 0, metadata !4964, null}
!8976 = metadata !{i32 1438, i32 0, metadata !4964, null}
!8977 = metadata !{i32 1439, i32 0, metadata !4964, null}
!8978 = metadata !{i32 1440, i32 0, metadata !4964, null}
!8979 = metadata !{i32 1444, i32 0, metadata !4968, null}
!8980 = metadata !{i32 1448, i32 0, metadata !4968, null}
!8981 = metadata !{i32 1449, i32 0, metadata !4970, null}
!8982 = metadata !{i32 1450, i32 0, metadata !4970, null}
!8983 = metadata !{i32 1451, i32 0, metadata !4970, null}
!8984 = metadata !{i32 2235, i32 0, metadata !4975, null}
!8985 = metadata !{i32 2244, i32 0, metadata !4977, null}
!8986 = metadata !{i32 2237, i32 0, metadata !4977, null}
!8987 = metadata !{i32 2238, i32 0, metadata !4977, null}
!8988 = metadata !{i32 2240, i32 0, metadata !4977, null}
!8989 = metadata !{i32 2245, i32 0, metadata !4977, null}
!8990 = metadata !{i32 2246, i32 0, metadata !4977, null}
!8991 = metadata !{i32 2248, i32 0, metadata !4977, null}
!8992 = metadata !{i32 2249, i32 0, metadata !4977, null}
!8993 = metadata !{i32 2255, i32 0, metadata !4977, null}
!8994 = metadata !{i32 2256, i32 0, metadata !4977, null}
!8995 = metadata !{i32 2258, i32 0, metadata !4977, null}
!8996 = metadata !{i32 2259, i32 0, metadata !4977, null}
!8997 = metadata !{i32 2261, i32 0, metadata !4977, null}
!8998 = metadata !{i32 2262, i32 0, metadata !4977, null}
!8999 = metadata !{i32 2264, i32 0, metadata !4977, null}
!9000 = metadata !{i32 2265, i32 0, metadata !4977, null}
!9001 = metadata !{i32 2266, i32 0, metadata !4977, null}
!9002 = metadata !{i32 2236, i32 0, metadata !4975, null}
!9003 = metadata !{i32 2271, i32 0, metadata !4979, null}
!9004 = metadata !{i32 2272, i32 0, metadata !4979, null}
!9005 = metadata !{i32 2273, i32 0, metadata !4979, null}
!9006 = metadata !{i32 2274, i32 0, metadata !4979, null}
!9007 = metadata !{i32 2269, i32 0, metadata !4975, null}
!9008 = metadata !{i32 156, i32 0, metadata !4720, metadata !9009}
!9009 = metadata !{i32 2281, i32 0, metadata !4984, null}
!9010 = metadata !{i32 157, i32 0, metadata !4719, metadata !9009}
!9011 = metadata !{i32 158, i32 0, metadata !4719, metadata !9009}
!9012 = metadata !{i32 2282, i32 0, metadata !4984, null}
!9013 = metadata !{i32 2283, i32 0, metadata !4984, null}
!9014 = metadata !{i32 2284, i32 0, metadata !4984, null}
!9015 = metadata !{i32 2287, i32 0, metadata !4984, null}
!9016 = metadata !{i32 2290, i32 0, metadata !4986, null}
!9017 = metadata !{i32 2292, i32 0, metadata !4986, null}
!9018 = metadata !{i32 2293, i32 0, metadata !4986, null}
!9019 = metadata !{i32 2294, i32 0, metadata !4986, null}
!9020 = metadata !{i32 2296, i32 0, metadata !4986, null}
!9021 = metadata !{i32 2299, i32 0, metadata !4984, null}
!9022 = metadata !{i32 156, i32 0, metadata !4720, metadata !9023}
!9023 = metadata !{i32 1029, i32 0, metadata !4990, null}
!9024 = metadata !{i32 157, i32 0, metadata !4719, metadata !9023}
!9025 = metadata !{i32 158, i32 0, metadata !4719, metadata !9023}
!9026 = metadata !{i32 1038, i32 0, metadata !4990, null}
!9027 = metadata !{i32 1039, i32 0, metadata !4990, null}
!9028 = metadata !{i32 1040, i32 0, metadata !4990, null}
!9029 = metadata !{i32 1043, i32 0, metadata !4990, null}
!9030 = metadata !{i32 1045, i32 0, metadata !4992, null}
!9031 = metadata !{i32 1049, i32 0, metadata !4992, null}
!9032 = metadata !{i32 1050, i32 0, metadata !4992, null}
!9033 = metadata !{i32 1061, i32 0, metadata !4990, null}
!9034 = metadata !{i32 1062, i32 0, metadata !4990, null}
!9035 = metadata !{i32 2182, i32 0, metadata !4998, null}
!9036 = metadata !{i32 2183, i32 0, metadata !4998, null}
!9037 = metadata !{i32 2186, i32 0, metadata !4997, null}
!9038 = metadata !{i32 2187, i32 0, metadata !4997, null}
!9039 = metadata !{i32 2190, i32 0, metadata !4997, null}
!9040 = metadata !{i32 2191, i32 0, metadata !5000, null}
!9041 = metadata !{i32 2192, i32 0, metadata !5000, null}
!9042 = metadata !{i32 2193, i32 0, metadata !5000, null}
!9043 = metadata !{i32 2194, i32 0, metadata !5000, null}
!9044 = metadata !{i32 2195, i32 0, metadata !5000, null}
!9045 = metadata !{i32 2196, i32 0, metadata !5000, null}
!9046 = metadata !{i32 2201, i32 0, metadata !5002, null}
!9047 = metadata !{i32 2202, i32 0, metadata !5002, null}
!9048 = metadata !{i32 2203, i32 0, metadata !5002, null}
!9049 = metadata !{i32 2204, i32 0, metadata !5002, null}
!9050 = metadata !{i32 2209, i32 0, metadata !5004, null}
!9051 = metadata !{i32 2216, i32 0, metadata !5004, null}
!9052 = metadata !{i32 2217, i32 0, metadata !5004, null}
!9053 = metadata !{i32 2218, i32 0, metadata !5004, null}
!9054 = metadata !{i32 2211, i32 0, metadata !5004, null}
!9055 = metadata !{i32 2220, i32 0, metadata !5004, null}
!9056 = metadata !{i32 2221, i32 0, metadata !5004, null}
!9057 = metadata !{i32 2222, i32 0, metadata !5004, null}
!9058 = metadata !{i32 2223, i32 0, metadata !5004, null}
!9059 = metadata !{i32 2224, i32 0, metadata !5004, null}
!9060 = metadata !{i32 2208, i32 0, metadata !5004, null}
!9061 = metadata !{i32 2188, i32 0, metadata !4997, null}
!9062 = metadata !{i32 910, i32 0, metadata !9063, null}
!9063 = metadata !{i32 589835, metadata !3536, i32 909, i32 0, metadata !3316, i32 61} ; [ DW_TAG_lexical_block ]
!9064 = metadata !{i32 911, i32 0, metadata !9063, null}
!9065 = metadata !{i32 2130, i32 0, metadata !4911, metadata !9066}
!9066 = metadata !{i32 2159, i32 0, metadata !5011, null}
!9067 = metadata !{i32 2131, i32 0, metadata !4911, metadata !9066}
!9068 = metadata !{i32 2133, i32 0, metadata !4911, metadata !9066}
!9069 = metadata !{i32 2134, i32 0, metadata !4911, metadata !9066}
!9070 = metadata !{i32 2138, i32 0, metadata !4911, metadata !9066}
!9071 = metadata !{i32 2141, i32 0, metadata !4911, metadata !9066}
!9072 = metadata !{i32 2142, i32 0, metadata !4911, metadata !9066}
!9073 = metadata !{i32 2143, i32 0, metadata !4911, metadata !9066}
!9074 = metadata !{i32 2160, i32 0, metadata !5011, null}
!9075 = metadata !{i32 2161, i32 0, metadata !5011, null}
!9076 = metadata !{i32 2131, i32 0, metadata !4911, metadata !9077}
!9077 = metadata !{i32 2163, i32 0, metadata !5011, null}
!9078 = metadata !{i32 2130, i32 0, metadata !4911, metadata !9077}
!9079 = metadata !{i32 2133, i32 0, metadata !4911, metadata !9077}
!9080 = metadata !{i32 2134, i32 0, metadata !4911, metadata !9077}
!9081 = metadata !{i32 2138, i32 0, metadata !4911, metadata !9077}
!9082 = metadata !{i32 2141, i32 0, metadata !4911, metadata !9077}
!9083 = metadata !{i32 2142, i32 0, metadata !4911, metadata !9077}
!9084 = metadata !{i32 2143, i32 0, metadata !4911, metadata !9077}
!9085 = metadata !{i32 2164, i32 0, metadata !5011, null}
!9086 = metadata !{i32 2165, i32 0, metadata !5011, null}
!9087 = metadata !{i32 2168, i32 0, metadata !5011, null}
!9088 = metadata !{i32 2169, i32 0, metadata !5011, null}
!9089 = metadata !{i32 2170, i32 0, metadata !5011, null}
!9090 = metadata !{i32 2171, i32 0, metadata !5011, null}
!9091 = metadata !{i32 2174, i32 0, metadata !5011, null}
!9092 = metadata !{i32 2175, i32 0, metadata !5011, null}
!9093 = metadata !{i32 2176, i32 0, metadata !5011, null}
!9094 = metadata !{i32 2177, i32 0, metadata !5011, null}
!9095 = metadata !{i32 64, i32 0, metadata !5030, null}
!9096 = metadata !{i32 67, i32 0, metadata !5030, null}
!9097 = metadata !{i32 68, i32 0, metadata !5030, null}
!9098 = metadata !{i32 69, i32 0, metadata !5030, null}
!9099 = metadata !{i32 71, i32 0, metadata !5030, null}
!9100 = metadata !{i32 72, i32 0, metadata !5030, null}
!9101 = metadata !{i32 73, i32 0, metadata !5033, null}
!9102 = metadata !{i32 74, i32 0, metadata !5033, null}
!9103 = metadata !{i32 76, i32 0, metadata !5033, null}
!9104 = metadata !{i32 79, i32 0, metadata !5030, null}
!9105 = metadata !{i32 82, i32 0, metadata !5035, null}
!9106 = metadata !{i32 83, i32 0, metadata !5035, null}
!9107 = metadata !{i32 86, i32 0, metadata !5035, null}
!9108 = metadata !{i32 90, i32 0, metadata !5038, null}
!9109 = metadata !{i32 91, i32 0, metadata !5038, null}
!9110 = metadata !{i32 91, i32 0, metadata !5040, null}
!9111 = metadata !{i32 93, i32 0, metadata !5038, null}
!9112 = metadata !{i32 97, i32 0, metadata !5048, null}
!9113 = metadata !{i32 99, i32 0, metadata !5048, null}
!9114 = metadata !{i32 106, i32 0, metadata !5052, null}
!9115 = metadata !{i32 107, i32 0, metadata !5052, null}
!9116 = metadata !{i32 109, i32 0, metadata !5052, null}
!9117 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9118}
!9118 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9119}
!9119 = metadata !{i32 113, i32 0, metadata !5048, null}
!9120 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9118}
!9121 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9119}
!9122 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9119}
!9123 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9119}
!9124 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9119}
!9125 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9119}
!9126 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9119}
!9127 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9119}
!9128 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9119}
!9129 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9119}
!9130 = metadata !{i32 114, i32 0, metadata !5048, null}
!9131 = metadata !{i32 115, i32 0, metadata !5048, null}
!9132 = metadata !{i32 115, i32 0, metadata !5055, null}
!9133 = metadata !{i32 116, i32 0, metadata !5048, null}
!9134 = metadata !{i32 119, i32 0, metadata !5048, null}
!9135 = metadata !{i32 120, i32 0, metadata !5048, null}
!9136 = metadata !{i32 126, i32 0, metadata !5048, null}
!9137 = metadata !{i32 127, i32 0, metadata !5048, null}
!9138 = metadata !{i32 133, i32 0, metadata !5035, null}
!9139 = metadata !{i32 134, i32 0, metadata !5035, null}
!9140 = metadata !{i32 65, i32 0, metadata !5030, null}
!9141 = metadata !{i32 57, i32 0, metadata !9142, metadata !9143}
!9142 = metadata !{i32 589835, metadata !3553, i32 56, i32 0, metadata !3316, i32 76} ; [ DW_TAG_lexical_block ]
!9143 = metadata !{i32 2109, i32 0, metadata !5061, null}
!9144 = metadata !{i32 2111, i32 0, metadata !5061, null}
!9145 = metadata !{i32 2113, i32 0, metadata !5061, null}
!9146 = metadata !{i32 2114, i32 0, metadata !5061, null}
!9147 = metadata !{i32 2115, i32 0, metadata !5061, null}
!9148 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9149}
!9149 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9150}
!9150 = metadata !{i32 2118, i32 0, metadata !5061, null}
!9151 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9149}
!9152 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9150}
!9153 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9150}
!9154 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9150}
!9155 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9150}
!9156 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9150}
!9157 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9150}
!9158 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9150}
!9159 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9150}
!9160 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9150}
!9161 = metadata !{i32 2119, i32 0, metadata !5061, null}
!9162 = metadata !{i32 2120, i32 0, metadata !5061, null}
!9163 = metadata !{i32 57, i32 0, metadata !9142, metadata !9164}
!9164 = metadata !{i32 1843, i32 0, metadata !5067, null}
!9165 = metadata !{i32 1844, i32 0, metadata !5067, null}
!9166 = metadata !{i32 1847, i32 0, metadata !5067, null}
!9167 = metadata !{i32 1848, i32 0, metadata !5067, null}
!9168 = metadata !{i32 1849, i32 0, metadata !5067, null}
!9169 = metadata !{i32 1850, i32 0, metadata !5067, null}
!9170 = metadata !{i32 1851, i32 0, metadata !5067, null}
!9171 = metadata !{i32 1852, i32 0, metadata !5067, null}
!9172 = metadata !{i32 1853, i32 0, metadata !5067, null}
!9173 = metadata !{i32 1855, i32 0, metadata !5067, null}
!9174 = metadata !{i32 1856, i32 0, metadata !5067, null}
!9175 = metadata !{i32 1859, i32 0, metadata !5069, null}
!9176 = metadata !{i32 1860, i32 0, metadata !5069, null}
!9177 = metadata !{i32 1861, i32 0, metadata !5069, null}
!9178 = metadata !{i32 1862, i32 0, metadata !5069, null}
!9179 = metadata !{i32 57, i32 0, metadata !9142, metadata !9180}
!9180 = metadata !{i32 2091, i32 0, metadata !5073, null}
!9181 = metadata !{i32 2093, i32 0, metadata !5073, null}
!9182 = metadata !{i32 2094, i32 0, metadata !5073, null}
!9183 = metadata !{i32 2095, i32 0, metadata !5073, null}
!9184 = metadata !{i32 2096, i32 0, metadata !5073, null}
!9185 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9186}
!9186 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9187}
!9187 = metadata !{i32 2101, i32 0, metadata !5073, null}
!9188 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9186}
!9189 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9187}
!9190 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9187}
!9191 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9187}
!9192 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9187}
!9193 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9187}
!9194 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9187}
!9195 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9187}
!9196 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9187}
!9197 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9187}
!9198 = metadata !{i32 2102, i32 0, metadata !5073, null}
!9199 = metadata !{i32 2103, i32 0, metadata !5073, null}
!9200 = metadata !{i32 57, i32 0, metadata !9142, metadata !9201}
!9201 = metadata !{i32 1821, i32 0, metadata !5077, null}
!9202 = metadata !{i32 1822, i32 0, metadata !5077, null}
!9203 = metadata !{i32 1824, i32 0, metadata !5077, null}
!9204 = metadata !{i32 1825, i32 0, metadata !5077, null}
!9205 = metadata !{i32 1826, i32 0, metadata !5077, null}
!9206 = metadata !{i32 1827, i32 0, metadata !5077, null}
!9207 = metadata !{i32 1828, i32 0, metadata !5077, null}
!9208 = metadata !{i32 1829, i32 0, metadata !5077, null}
!9209 = metadata !{i32 1831, i32 0, metadata !5077, null}
!9210 = metadata !{i32 1832, i32 0, metadata !5077, null}
!9211 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9212}
!9212 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9213}
!9213 = metadata !{i32 1835, i32 0, metadata !5079, null}
!9214 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9212}
!9215 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9213}
!9216 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9213}
!9217 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9213}
!9218 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9213}
!9219 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9213}
!9220 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9213}
!9221 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9213}
!9222 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9213}
!9223 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9213}
!9224 = metadata !{i32 1836, i32 0, metadata !5079, null}
!9225 = metadata !{i32 1837, i32 0, metadata !5079, null}
!9226 = metadata !{i32 57, i32 0, metadata !9142, metadata !9227}
!9227 = metadata !{i32 1802, i32 0, metadata !5082, null}
!9228 = metadata !{i32 1803, i32 0, metadata !5082, null}
!9229 = metadata !{i32 1805, i32 0, metadata !5082, null}
!9230 = metadata !{i32 1806, i32 0, metadata !5082, null}
!9231 = metadata !{i32 1807, i32 0, metadata !5082, null}
!9232 = metadata !{i32 1809, i32 0, metadata !5082, null}
!9233 = metadata !{i32 1810, i32 0, metadata !5082, null}
!9234 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9235}
!9235 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9236}
!9236 = metadata !{i32 1813, i32 0, metadata !5084, null}
!9237 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9235}
!9238 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9236}
!9239 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9236}
!9240 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9236}
!9241 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9236}
!9242 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9236}
!9243 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9236}
!9244 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9236}
!9245 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9236}
!9246 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9236}
!9247 = metadata !{i32 1814, i32 0, metadata !5084, null}
!9248 = metadata !{i32 1815, i32 0, metadata !5084, null}
!9249 = metadata !{i32 57, i32 0, metadata !9142, metadata !9250}
!9250 = metadata !{i32 1679, i32 0, metadata !5088, null}
!9251 = metadata !{i32 1680, i32 0, metadata !5088, null}
!9252 = metadata !{i32 1682, i32 0, metadata !5088, null}
!9253 = metadata !{i32 1683, i32 0, metadata !5088, null}
!9254 = metadata !{i32 1684, i32 0, metadata !5088, null}
!9255 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9256}
!9256 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9257}
!9257 = metadata !{i32 1688, i32 0, metadata !5090, null}
!9258 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9256}
!9259 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9257}
!9260 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9257}
!9261 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9257}
!9262 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9257}
!9263 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9257}
!9264 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9257}
!9265 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9257}
!9266 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9257}
!9267 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9257}
!9268 = metadata !{i32 1689, i32 0, metadata !5090, null}
!9269 = metadata !{i32 1690, i32 0, metadata !5090, null}
!9270 = metadata !{i32 156, i32 0, metadata !4720, metadata !9271}
!9271 = metadata !{i32 1234, i32 0, metadata !5095, null}
!9272 = metadata !{i32 157, i32 0, metadata !4719, metadata !9271}
!9273 = metadata !{i32 158, i32 0, metadata !4719, metadata !9271}
!9274 = metadata !{i32 1236, i32 0, metadata !5095, null}
!9275 = metadata !{i32 1237, i32 0, metadata !5095, null}
!9276 = metadata !{i32 1238, i32 0, metadata !5095, null}
!9277 = metadata !{i32 1239, i32 0, metadata !5095, null}
!9278 = metadata !{i32 1247, i32 0, metadata !5095, null}
!9279 = metadata !{i32 1248, i32 0, metadata !5095, null}
!9280 = metadata !{i32 1249, i32 0, metadata !5095, null}
!9281 = metadata !{i32 1251, i32 0, metadata !5095, null}
!9282 = metadata !{i32 1252, i32 0, metadata !5095, null}
!9283 = metadata !{i32 1253, i32 0, metadata !5095, null}
!9284 = metadata !{i32 1256, i32 0, metadata !5095, null}
!9285 = metadata !{i32 1259, i32 0, metadata !5095, null}
!9286 = metadata !{i32 1260, i32 0, metadata !5095, null}
!9287 = metadata !{i32 1261, i32 0, metadata !5095, null}
!9288 = metadata !{i32 1262, i32 0, metadata !5095, null}
!9289 = metadata !{i32 1305, i32 0, metadata !5100, null}
!9290 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9291}
!9291 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9289}
!9292 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9291}
!9293 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9289}
!9294 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9289}
!9295 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9289}
!9296 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9289}
!9297 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9289}
!9298 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9289}
!9299 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9289}
!9300 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9289}
!9301 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9289}
!9302 = metadata !{i32 1307, i32 0, metadata !5100, null}
!9303 = metadata !{i32 1315, i32 0, metadata !5100, null}
!9304 = metadata !{i32 1318, i32 0, metadata !5095, null}
!9305 = metadata !{i32 1319, i32 0, metadata !5095, null}
!9306 = metadata !{i32 1320, i32 0, metadata !5095, null}
!9307 = metadata !{i32 1322, i32 0, metadata !5095, null}
!9308 = metadata !{i32 1324, i32 0, metadata !5095, null}
!9309 = metadata !{i32 57, i32 0, metadata !9142, metadata !9310}
!9310 = metadata !{i32 1210, i32 0, metadata !5104, null}
!9311 = metadata !{i32 1211, i32 0, metadata !5104, null}
!9312 = metadata !{i32 1212, i32 0, metadata !5104, null}
!9313 = metadata !{i32 1213, i32 0, metadata !5104, null}
!9314 = metadata !{i32 1214, i32 0, metadata !5104, null}
!9315 = metadata !{i32 57, i32 0, metadata !9142, metadata !9316}
!9316 = metadata !{i32 1216, i32 0, metadata !5104, null}
!9317 = metadata !{i32 1217, i32 0, metadata !5104, null}
!9318 = metadata !{i32 1218, i32 0, metadata !5104, null}
!9319 = metadata !{i32 1219, i32 0, metadata !5104, null}
!9320 = metadata !{i32 1220, i32 0, metadata !5104, null}
!9321 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9322}
!9322 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9323}
!9323 = metadata !{i32 1222, i32 0, metadata !5104, null}
!9324 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9322}
!9325 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9323}
!9326 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9323}
!9327 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9323}
!9328 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9323}
!9329 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9323}
!9330 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9323}
!9331 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9323}
!9332 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9323}
!9333 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9323}
!9334 = metadata !{i32 1223, i32 0, metadata !5104, null}
!9335 = metadata !{i32 1224, i32 0, metadata !5104, null}
!9336 = metadata !{i32 57, i32 0, metadata !9142, metadata !9337}
!9337 = metadata !{i32 1191, i32 0, metadata !5109, null}
!9338 = metadata !{i32 1192, i32 0, metadata !5109, null}
!9339 = metadata !{i32 1193, i32 0, metadata !5109, null}
!9340 = metadata !{i32 1194, i32 0, metadata !5109, null}
!9341 = metadata !{i32 1195, i32 0, metadata !5109, null}
!9342 = metadata !{i32 57, i32 0, metadata !9142, metadata !9343}
!9343 = metadata !{i32 1197, i32 0, metadata !5109, null}
!9344 = metadata !{i32 1198, i32 0, metadata !5109, null}
!9345 = metadata !{i32 1199, i32 0, metadata !5109, null}
!9346 = metadata !{i32 1200, i32 0, metadata !5109, null}
!9347 = metadata !{i32 1201, i32 0, metadata !5109, null}
!9348 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9349}
!9349 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9350}
!9350 = metadata !{i32 1203, i32 0, metadata !5109, null}
!9351 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9349}
!9352 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9350}
!9353 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9350}
!9354 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9350}
!9355 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9350}
!9356 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9350}
!9357 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9350}
!9358 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9350}
!9359 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9350}
!9360 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9350}
!9361 = metadata !{i32 1204, i32 0, metadata !5109, null}
!9362 = metadata !{i32 1205, i32 0, metadata !5109, null}
!9363 = metadata !{i32 57, i32 0, metadata !9142, metadata !9364}
!9364 = metadata !{i32 1140, i32 0, metadata !5115, null}
!9365 = metadata !{i32 1141, i32 0, metadata !5115, null}
!9366 = metadata !{i32 1142, i32 0, metadata !5115, null}
!9367 = metadata !{i32 1143, i32 0, metadata !5115, null}
!9368 = metadata !{i32 1144, i32 0, metadata !5115, null}
!9369 = metadata !{i32 156, i32 0, metadata !4720, metadata !9370}
!9370 = metadata !{i32 1146, i32 0, metadata !5115, null}
!9371 = metadata !{i32 157, i32 0, metadata !4719, metadata !9370}
!9372 = metadata !{i32 158, i32 0, metadata !4719, metadata !9370}
!9373 = metadata !{i32 1147, i32 0, metadata !5115, null}
!9374 = metadata !{i32 1148, i32 0, metadata !5115, null}
!9375 = metadata !{i32 1149, i32 0, metadata !5115, null}
!9376 = metadata !{i32 1150, i32 0, metadata !5115, null}
!9377 = metadata !{i32 1152, i32 0, metadata !5115, null}
!9378 = metadata !{i32 1158, i32 0, metadata !5115, null}
!9379 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9380}
!9380 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9378}
!9381 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9380}
!9382 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9378}
!9383 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9378}
!9384 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9378}
!9385 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9378}
!9386 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9378}
!9387 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9378}
!9388 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9378}
!9389 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9378}
!9390 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9378}
!9391 = metadata !{i32 1159, i32 0, metadata !5115, null}
!9392 = metadata !{i32 1160, i32 0, metadata !5115, null}
!9393 = metadata !{i32 57, i32 0, metadata !9142, metadata !9394}
!9394 = metadata !{i32 1107, i32 0, metadata !5122, null}
!9395 = metadata !{i32 1108, i32 0, metadata !5122, null}
!9396 = metadata !{i32 1109, i32 0, metadata !5122, null}
!9397 = metadata !{i32 1110, i32 0, metadata !5122, null}
!9398 = metadata !{i32 1111, i32 0, metadata !5122, null}
!9399 = metadata !{i32 156, i32 0, metadata !4720, metadata !9400}
!9400 = metadata !{i32 1113, i32 0, metadata !5122, null}
!9401 = metadata !{i32 157, i32 0, metadata !4719, metadata !9400}
!9402 = metadata !{i32 158, i32 0, metadata !4719, metadata !9400}
!9403 = metadata !{i32 1114, i32 0, metadata !5122, null}
!9404 = metadata !{i32 1115, i32 0, metadata !5122, null}
!9405 = metadata !{i32 1116, i32 0, metadata !5122, null}
!9406 = metadata !{i32 1117, i32 0, metadata !5122, null}
!9407 = metadata !{i32 1125, i32 0, metadata !5122, null}
!9408 = metadata !{i32 1128, i32 0, metadata !5122, null}
!9409 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9410}
!9410 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9408}
!9411 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9410}
!9412 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9408}
!9413 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9408}
!9414 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9408}
!9415 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9408}
!9416 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9408}
!9417 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9408}
!9418 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9408}
!9419 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9408}
!9420 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9408}
!9421 = metadata !{i32 1129, i32 0, metadata !5122, null}
!9422 = metadata !{i32 1130, i32 0, metadata !5122, null}
!9423 = metadata !{i32 57, i32 0, metadata !9142, metadata !9424}
!9424 = metadata !{i32 1066, i32 0, metadata !5130, null}
!9425 = metadata !{i32 1067, i32 0, metadata !5130, null}
!9426 = metadata !{i32 1068, i32 0, metadata !5130, null}
!9427 = metadata !{i32 1069, i32 0, metadata !5130, null}
!9428 = metadata !{i32 1070, i32 0, metadata !5130, null}
!9429 = metadata !{i32 156, i32 0, metadata !4720, metadata !9430}
!9430 = metadata !{i32 1072, i32 0, metadata !5130, null}
!9431 = metadata !{i32 157, i32 0, metadata !4719, metadata !9430}
!9432 = metadata !{i32 158, i32 0, metadata !4719, metadata !9430}
!9433 = metadata !{i32 1074, i32 0, metadata !5130, null}
!9434 = metadata !{i32 1075, i32 0, metadata !5130, null}
!9435 = metadata !{i32 1076, i32 0, metadata !5130, null}
!9436 = metadata !{i32 1077, i32 0, metadata !5130, null}
!9437 = metadata !{i32 1085, i32 0, metadata !5130, null}
!9438 = metadata !{i32 1090, i32 0, metadata !5130, null}
!9439 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9440}
!9440 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9438}
!9441 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9440}
!9442 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9438}
!9443 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9438}
!9444 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9438}
!9445 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9438}
!9446 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9438}
!9447 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9438}
!9448 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9438}
!9449 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9438}
!9450 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9438}
!9451 = metadata !{i32 1096, i32 0, metadata !5130, null}
!9452 = metadata !{i32 1097, i32 0, metadata !5130, null}
!9453 = metadata !{i32 57, i32 0, metadata !9142, metadata !9454}
!9454 = metadata !{i32 1016, i32 0, metadata !5137, null}
!9455 = metadata !{i32 1018, i32 0, metadata !5137, null}
!9456 = metadata !{i32 978, i32 0, metadata !8715, metadata !9457}
!9457 = metadata !{i32 1019, i32 0, metadata !5137, null}
!9458 = metadata !{i32 979, i32 0, metadata !8715, metadata !9457}
!9459 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9460}
!9460 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9461}
!9461 = metadata !{i32 1021, i32 0, metadata !5139, null}
!9462 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9460}
!9463 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9461}
!9464 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9461}
!9465 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9461}
!9466 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9461}
!9467 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9461}
!9468 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9461}
!9469 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9461}
!9470 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9461}
!9471 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9461}
!9472 = metadata !{i32 1022, i32 0, metadata !5139, null}
!9473 = metadata !{i32 1023, i32 0, metadata !5139, null}
!9474 = metadata !{i32 57, i32 0, metadata !9142, metadata !9475}
!9475 = metadata !{i32 984, i32 0, metadata !5144, null}
!9476 = metadata !{i32 986, i32 0, metadata !5144, null}
!9477 = metadata !{i32 978, i32 0, metadata !8715, metadata !9478}
!9478 = metadata !{i32 987, i32 0, metadata !5144, null}
!9479 = metadata !{i32 979, i32 0, metadata !8715, metadata !9478}
!9480 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9481}
!9481 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9482}
!9482 = metadata !{i32 989, i32 0, metadata !5146, null}
!9483 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9481}
!9484 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9482}
!9485 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9482}
!9486 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9482}
!9487 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9482}
!9488 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9482}
!9489 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9482}
!9490 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9482}
!9491 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9482}
!9492 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9482}
!9493 = metadata !{i32 990, i32 0, metadata !5146, null}
!9494 = metadata !{i32 991, i32 0, metadata !5146, null}
!9495 = metadata !{i32 57, i32 0, metadata !9142, metadata !9496}
!9496 = metadata !{i32 794, i32 0, metadata !5149, null}
!9497 = metadata !{i32 796, i32 0, metadata !5149, null}
!9498 = metadata !{i32 798, i32 0, metadata !5149, null}
!9499 = metadata !{i32 799, i32 0, metadata !5149, null}
!9500 = metadata !{i32 800, i32 0, metadata !5149, null}
!9501 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9502}
!9502 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9503}
!9503 = metadata !{i32 804, i32 0, metadata !5151, null}
!9504 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9502}
!9505 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9503}
!9506 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9503}
!9507 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9503}
!9508 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9503}
!9509 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9503}
!9510 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9503}
!9511 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9503}
!9512 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9503}
!9513 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9503}
!9514 = metadata !{i32 805, i32 0, metadata !5151, null}
!9515 = metadata !{i32 806, i32 0, metadata !5151, null}
!9516 = metadata !{i32 57, i32 0, metadata !9142, metadata !9517}
!9517 = metadata !{i32 185, i32 0, metadata !5155, null}
!9518 = metadata !{i32 190, i32 0, metadata !5155, null}
!9519 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9520}
!9520 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9521}
!9521 = metadata !{i32 195, i32 0, metadata !5157, null}
!9522 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9520}
!9523 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9521}
!9524 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9521}
!9525 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9521}
!9526 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9521}
!9527 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9521}
!9528 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9521}
!9529 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9521}
!9530 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9521}
!9531 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9521}
!9532 = metadata !{i32 196, i32 0, metadata !5157, null}
!9533 = metadata !{i32 197, i32 0, metadata !5157, null}
!9534 = metadata !{i32 193, i32 0, metadata !5155, null}
!9535 = metadata !{i32 57, i32 0, metadata !9142, metadata !9536}
!9536 = metadata !{i32 167, i32 0, metadata !5161, null}
!9537 = metadata !{i32 172, i32 0, metadata !5161, null}
!9538 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9539}
!9539 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9540}
!9540 = metadata !{i32 177, i32 0, metadata !5163, null}
!9541 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9539}
!9542 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9540}
!9543 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9540}
!9544 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9540}
!9545 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9540}
!9546 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9540}
!9547 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9540}
!9548 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9540}
!9549 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9540}
!9550 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9540}
!9551 = metadata !{i32 178, i32 0, metadata !5163, null}
!9552 = metadata !{i32 179, i32 0, metadata !5163, null}
!9553 = metadata !{i32 175, i32 0, metadata !5161, null}
!9554 = metadata !{i32 1988, i32 0, metadata !5170, null}
!9555 = metadata !{i32 1990, i32 0, metadata !5170, null}
!9556 = metadata !{i32 1991, i32 0, metadata !5170, null}
!9557 = metadata !{i32 1992, i32 0, metadata !5170, null}
!9558 = metadata !{i32 1993, i32 0, metadata !5170, null}
!9559 = metadata !{i32 1996, i32 0, metadata !5170, null}
!9560 = metadata !{i32 1997, i32 0, metadata !5170, null}
!9561 = metadata !{i32 1999, i32 0, metadata !5170, null}
!9562 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9563}
!9563 = metadata !{i32 2002, i32 0, metadata !5170, null}
!9564 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9563}
!9565 = metadata !{i32 2027, i32 0, metadata !5166, metadata !9566}
!9566 = metadata !{i32 2003, i32 0, metadata !5170, null}
!9567 = metadata !{i32 2028, i32 0, metadata !5166, metadata !9566}
!9568 = metadata !{i32 2007, i32 0, metadata !5170, null}
!9569 = metadata !{i32 2008, i32 0, metadata !5170, null}
!9570 = metadata !{i32 2009, i32 0, metadata !5170, null}
!9571 = metadata !{i32 2010, i32 0, metadata !5170, null}
!9572 = metadata !{i32 2011, i32 0, metadata !5170, null}
!9573 = metadata !{i32 156, i32 0, metadata !4720, metadata !9574}
!9574 = metadata !{i32 1335, i32 0, metadata !5174, null}
!9575 = metadata !{i32 157, i32 0, metadata !4719, metadata !9574}
!9576 = metadata !{i32 158, i32 0, metadata !4719, metadata !9574}
!9577 = metadata !{i32 1337, i32 0, metadata !5174, null}
!9578 = metadata !{i32 1339, i32 0, metadata !5174, null}
!9579 = metadata !{i32 1340, i32 0, metadata !5174, null}
!9580 = metadata !{i32 1341, i32 0, metadata !5174, null}
!9581 = metadata !{i32 1344, i32 0, metadata !5174, null}
!9582 = metadata !{i32 1345, i32 0, metadata !5174, null}
!9583 = metadata !{i32 1346, i32 0, metadata !5174, null}
!9584 = metadata !{i32 1347, i32 0, metadata !5174, null}
!9585 = metadata !{i32 1350, i32 0, metadata !5174, null}
!9586 = metadata !{i32 1351, i32 0, metadata !5174, null}
!9587 = metadata !{i32 1352, i32 0, metadata !5174, null}
!9588 = metadata !{i32 1353, i32 0, metadata !5174, null}
!9589 = metadata !{i32 2027, i32 0, metadata !5166, metadata !9590}
!9590 = metadata !{i32 1355, i32 0, metadata !5176, null}
!9591 = metadata !{i32 2028, i32 0, metadata !5166, metadata !9590}
!9592 = metadata !{i32 1357, i32 0, metadata !5176, null}
!9593 = metadata !{i32 1361, i32 0, metadata !5176, null}
!9594 = metadata !{i32 1362, i32 0, metadata !5176, null}
!9595 = metadata !{i32 156, i32 0, metadata !4720, metadata !9596}
!9596 = metadata !{i32 687, i32 0, metadata !5181, null}
!9597 = metadata !{i32 157, i32 0, metadata !4719, metadata !9596}
!9598 = metadata !{i32 158, i32 0, metadata !4719, metadata !9596}
!9599 = metadata !{i32 159, i32 0, metadata !4719, metadata !9596}
!9600 = metadata !{i32 2027, i32 0, metadata !5166, metadata !9601}
!9601 = metadata !{i32 688, i32 0, metadata !5181, null}
!9602 = metadata !{i32 2028, i32 0, metadata !5166, metadata !9601}
!9603 = metadata !{i32 689, i32 0, metadata !5181, null}
!9604 = metadata !{i32 690, i32 0, metadata !5181, null}
!9605 = metadata !{i32 691, i32 0, metadata !5181, null}
!9606 = metadata !{i32 694, i32 0, metadata !5181, null}
!9607 = metadata !{i32 701, i32 0, metadata !5181, null}
!9608 = metadata !{i32 702, i32 0, metadata !5181, null}
!9609 = metadata !{i32 704, i32 0, metadata !5181, null}
!9610 = metadata !{i32 708, i32 0, metadata !5181, null}
!9611 = metadata !{i32 709, i32 0, metadata !5181, null}
!9612 = metadata !{i32 710, i32 0, metadata !5181, null}
!9613 = metadata !{i32 714, i32 0, metadata !5181, null}
!9614 = metadata !{i32 715, i32 0, metadata !5181, null}
!9615 = metadata !{i32 716, i32 0, metadata !5181, null}
!9616 = metadata !{i32 719, i32 0, metadata !5181, null}
!9617 = metadata !{i32 720, i32 0, metadata !5181, null}
!9618 = metadata !{i32 723, i32 0, metadata !5181, null}
!9619 = metadata !{i32 725, i32 0, metadata !5181, null}
!9620 = metadata !{i32 726, i32 0, metadata !5181, null}
!9621 = metadata !{i32 728, i32 0, metadata !5181, null}
!9622 = metadata !{i32 729, i32 0, metadata !5181, null}
!9623 = metadata !{i32 733, i32 0, metadata !5181, null}
!9624 = metadata !{i32 734, i32 0, metadata !5181, null}
!9625 = metadata !{i32 735, i32 0, metadata !5181, null}
!9626 = metadata !{i32 738, i32 0, metadata !5181, null}
!9627 = metadata !{i32 739, i32 0, metadata !5181, null}
!9628 = metadata !{i32 544, i32 0, metadata !5188, null}
!9629 = metadata !{i32 546, i32 0, metadata !5188, null}
!9630 = metadata !{i32 549, i32 0, metadata !5188, null}
!9631 = metadata !{i32 550, i32 0, metadata !5188, null}
!9632 = metadata !{i32 551, i32 0, metadata !5188, null}
!9633 = metadata !{i32 553, i32 0, metadata !5188, null}
!9634 = metadata !{i32 554, i32 0, metadata !5188, null}
!9635 = metadata !{i32 555, i32 0, metadata !5188, null}
!9636 = metadata !{i32 156, i32 0, metadata !4720, metadata !9637}
!9637 = metadata !{i32 558, i32 0, metadata !5188, null}
!9638 = metadata !{i32 157, i32 0, metadata !4719, metadata !9637}
!9639 = metadata !{i32 158, i32 0, metadata !4719, metadata !9637}
!9640 = metadata !{i32 560, i32 0, metadata !5188, null}
!9641 = metadata !{i32 561, i32 0, metadata !5188, null}
!9642 = metadata !{i32 562, i32 0, metadata !5188, null}
!9643 = metadata !{i32 565, i32 0, metadata !5188, null}
!9644 = metadata !{i32 566, i32 0, metadata !5188, null}
!9645 = metadata !{i32 567, i32 0, metadata !5188, null}
!9646 = metadata !{i32 568, i32 0, metadata !5188, null}
!9647 = metadata !{i32 571, i32 0, metadata !5188, null}
!9648 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9649}
!9649 = metadata !{i32 574, i32 0, metadata !5190, null}
!9650 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9649}
!9651 = metadata !{i32 2027, i32 0, metadata !5166, metadata !9652}
!9652 = metadata !{i32 575, i32 0, metadata !5190, null}
!9653 = metadata !{i32 2028, i32 0, metadata !5166, metadata !9652}
!9654 = metadata !{i32 579, i32 0, metadata !5190, null}
!9655 = metadata !{i32 581, i32 0, metadata !5190, null}
!9656 = metadata !{i32 583, i32 0, metadata !5190, null}
!9657 = metadata !{i32 584, i32 0, metadata !5190, null}
!9658 = metadata !{i32 585, i32 0, metadata !5190, null}
!9659 = metadata !{i32 588, i32 0, metadata !5190, null}
!9660 = metadata !{i32 591, i32 0, metadata !5188, null}
!9661 = metadata !{i32 594, i32 0, metadata !5188, null}
!9662 = metadata !{i32 595, i32 0, metadata !5188, null}
!9663 = metadata !{i32 598, i32 0, metadata !5188, null}
!9664 = metadata !{i32 599, i32 0, metadata !5188, null}
!9665 = metadata !{i32 547, i32 0, metadata !5188, null}
!9666 = metadata !{i32 459, i32 0, metadata !5195, null}
!9667 = metadata !{i32 461, i32 0, metadata !5195, null}
!9668 = metadata !{i32 464, i32 0, metadata !5195, null}
!9669 = metadata !{i32 465, i32 0, metadata !5195, null}
!9670 = metadata !{i32 466, i32 0, metadata !5195, null}
!9671 = metadata !{i32 156, i32 0, metadata !4720, metadata !9672}
!9672 = metadata !{i32 469, i32 0, metadata !5195, null}
!9673 = metadata !{i32 157, i32 0, metadata !4719, metadata !9672}
!9674 = metadata !{i32 158, i32 0, metadata !4719, metadata !9672}
!9675 = metadata !{i32 471, i32 0, metadata !5195, null}
!9676 = metadata !{i32 472, i32 0, metadata !5195, null}
!9677 = metadata !{i32 473, i32 0, metadata !5195, null}
!9678 = metadata !{i32 476, i32 0, metadata !5195, null}
!9679 = metadata !{i32 477, i32 0, metadata !5195, null}
!9680 = metadata !{i32 478, i32 0, metadata !5195, null}
!9681 = metadata !{i32 479, i32 0, metadata !5195, null}
!9682 = metadata !{i32 482, i32 0, metadata !5195, null}
!9683 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9684}
!9684 = metadata !{i32 485, i32 0, metadata !5197, null}
!9685 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9684}
!9686 = metadata !{i32 2027, i32 0, metadata !5166, metadata !9687}
!9687 = metadata !{i32 486, i32 0, metadata !5197, null}
!9688 = metadata !{i32 2028, i32 0, metadata !5166, metadata !9687}
!9689 = metadata !{i32 490, i32 0, metadata !5197, null}
!9690 = metadata !{i32 492, i32 0, metadata !5197, null}
!9691 = metadata !{i32 496, i32 0, metadata !5197, null}
!9692 = metadata !{i32 497, i32 0, metadata !5197, null}
!9693 = metadata !{i32 498, i32 0, metadata !5197, null}
!9694 = metadata !{i32 503, i32 0, metadata !5197, null}
!9695 = metadata !{i32 504, i32 0, metadata !5197, null}
!9696 = metadata !{i32 506, i32 0, metadata !5197, null}
!9697 = metadata !{i32 508, i32 0, metadata !5197, null}
!9698 = metadata !{i32 509, i32 0, metadata !5197, null}
!9699 = metadata !{i32 510, i32 0, metadata !5197, null}
!9700 = metadata !{i32 511, i32 0, metadata !5197, null}
!9701 = metadata !{i32 513, i32 0, metadata !5197, null}
!9702 = metadata !{i32 516, i32 0, metadata !5197, null}
!9703 = metadata !{i32 517, i32 0, metadata !5197, null}
!9704 = metadata !{i32 518, i32 0, metadata !5197, null}
!9705 = metadata !{i32 520, i32 0, metadata !5197, null}
!9706 = metadata !{i32 522, i32 0, metadata !5197, null}
!9707 = metadata !{i32 521, i32 0, metadata !5197, null}
!9708 = metadata !{i32 525, i32 0, metadata !5195, null}
!9709 = metadata !{i32 526, i32 0, metadata !5195, null}
!9710 = metadata !{i32 529, i32 0, metadata !5195, null}
!9711 = metadata !{i32 530, i32 0, metadata !5195, null}
!9712 = metadata !{i32 533, i32 0, metadata !5195, null}
!9713 = metadata !{i32 534, i32 0, metadata !5195, null}
!9714 = metadata !{i32 536, i32 0, metadata !5195, null}
!9715 = metadata !{i32 462, i32 0, metadata !5195, null}
!9716 = metadata !{i32 832, i32 0, metadata !5203, null}
!9717 = metadata !{i32 833, i32 0, metadata !5203, null}
!9718 = metadata !{i32 835, i32 0, metadata !5203, null}
!9719 = metadata !{i32 838, i32 0, metadata !5203, null}
!9720 = metadata !{i32 840, i32 0, metadata !5203, null}
!9721 = metadata !{i32 843, i32 0, metadata !5203, null}
!9722 = metadata !{i32 846, i32 0, metadata !5203, null}
!9723 = metadata !{i32 837, i32 0, metadata !5203, null}
!9724 = metadata !{i32 848, i32 0, metadata !5203, null}
!9725 = metadata !{i32 882, i32 0, metadata !5213, null}
!9726 = metadata !{i32 883, i32 0, metadata !5213, null}
!9727 = metadata !{i32 885, i32 0, metadata !5213, null}
!9728 = metadata !{i32 886, i32 0, metadata !5213, null}
!9729 = metadata !{i32 854, i32 0, metadata !5221, null}
!9730 = metadata !{i32 855, i32 0, metadata !5221, null}
!9731 = metadata !{i32 857, i32 0, metadata !5221, null}
!9732 = metadata !{i32 858, i32 0, metadata !5221, null}
!9733 = metadata !{i32 156, i32 0, metadata !4720, metadata !9734}
!9734 = metadata !{i32 953, i32 0, metadata !5235, null}
!9735 = metadata !{i32 157, i32 0, metadata !4719, metadata !9734}
!9736 = metadata !{i32 158, i32 0, metadata !4719, metadata !9734}
!9737 = metadata !{i32 955, i32 0, metadata !5235, null}
!9738 = metadata !{i32 956, i32 0, metadata !5235, null}
!9739 = metadata !{i32 957, i32 0, metadata !5235, null}
!9740 = metadata !{i32 960, i32 0, metadata !5235, null}
!9741 = metadata !{i32 961, i32 0, metadata !5235, null}
!9742 = metadata !{i32 962, i32 0, metadata !5235, null}
!9743 = metadata !{i32 963, i32 0, metadata !5235, null}
!9744 = metadata !{i32 964, i32 0, metadata !5235, null}
!9745 = metadata !{i32 967, i32 0, metadata !5235, null}
!9746 = metadata !{i32 916, i32 0, metadata !9747, metadata !9748}
!9747 = metadata !{i32 589835, metadata !3645, i32 915, i32 0, metadata !3316, i32 118} ; [ DW_TAG_lexical_block ]
!9748 = metadata !{i32 968, i32 0, metadata !5235, null}
!9749 = metadata !{i32 917, i32 0, metadata !9747, metadata !9748}
!9750 = metadata !{i32 918, i32 0, metadata !9747, metadata !9748}
!9751 = metadata !{i32 919, i32 0, metadata !9747, metadata !9748}
!9752 = metadata !{i32 921, i32 0, metadata !9747, metadata !9748}
!9753 = metadata !{i32 923, i32 0, metadata !9747, metadata !9748}
!9754 = metadata !{i32 924, i32 0, metadata !9747, metadata !9748}
!9755 = metadata !{i32 970, i32 0, metadata !5237, null}
!9756 = metadata !{i32 971, i32 0, metadata !5237, null}
!9757 = metadata !{i32 972, i32 0, metadata !5237, null}
!9758 = metadata !{i32 57, i32 0, metadata !9142, metadata !9759}
!9759 = metadata !{i32 931, i32 0, metadata !5241, null}
!9760 = metadata !{i32 933, i32 0, metadata !5241, null}
!9761 = metadata !{i32 934, i32 0, metadata !5241, null}
!9762 = metadata !{i32 935, i32 0, metadata !5241, null}
!9763 = metadata !{i32 936, i32 0, metadata !5241, null}
!9764 = metadata !{i32 937, i32 0, metadata !5241, null}
!9765 = metadata !{i32 940, i32 0, metadata !5241, null}
!9766 = metadata !{i32 916, i32 0, metadata !9747, metadata !9767}
!9767 = metadata !{i32 941, i32 0, metadata !5241, null}
!9768 = metadata !{i32 917, i32 0, metadata !9747, metadata !9767}
!9769 = metadata !{i32 918, i32 0, metadata !9747, metadata !9767}
!9770 = metadata !{i32 919, i32 0, metadata !9747, metadata !9767}
!9771 = metadata !{i32 921, i32 0, metadata !9747, metadata !9767}
!9772 = metadata !{i32 923, i32 0, metadata !9747, metadata !9767}
!9773 = metadata !{i32 924, i32 0, metadata !9747, metadata !9767}
!9774 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9775}
!9775 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9776}
!9776 = metadata !{i32 943, i32 0, metadata !5243, null}
!9777 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9775}
!9778 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9776}
!9779 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9776}
!9780 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9776}
!9781 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9776}
!9782 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9776}
!9783 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9776}
!9784 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9776}
!9785 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9776}
!9786 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9776}
!9787 = metadata !{i32 944, i32 0, metadata !5243, null}
!9788 = metadata !{i32 945, i32 0, metadata !5243, null}
!9789 = metadata !{i32 57, i32 0, metadata !9142, metadata !9790}
!9790 = metadata !{i32 772, i32 0, metadata !5247, null}
!9791 = metadata !{i32 773, i32 0, metadata !5247, null}
!9792 = metadata !{i32 774, i32 0, metadata !5247, null}
!9793 = metadata !{i32 775, i32 0, metadata !5247, null}
!9794 = metadata !{i32 778, i32 0, metadata !5247, null}
!9795 = metadata !{i32 779, i32 0, metadata !5247, null}
!9796 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9797}
!9797 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9798}
!9798 = metadata !{i32 782, i32 0, metadata !5250, null}
!9799 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9797}
!9800 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9798}
!9801 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9798}
!9802 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9798}
!9803 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9798}
!9804 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9798}
!9805 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9798}
!9806 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9798}
!9807 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9798}
!9808 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9798}
!9809 = metadata !{i32 786, i32 0, metadata !5250, null}
!9810 = metadata !{i32 787, i32 0, metadata !5250, null}
!9811 = metadata !{i32 788, i32 0, metadata !5250, null}
!9812 = metadata !{i32 789, i32 0, metadata !5250, null}
!9813 = metadata !{i32 57, i32 0, metadata !9142, metadata !9814}
!9814 = metadata !{i32 743, i32 0, metadata !5254, null}
!9815 = metadata !{i32 744, i32 0, metadata !5254, null}
!9816 = metadata !{i32 745, i32 0, metadata !5254, null}
!9817 = metadata !{i32 746, i32 0, metadata !5254, null}
!9818 = metadata !{i32 751, i32 0, metadata !5254, null}
!9819 = metadata !{i32 752, i32 0, metadata !5254, null}
!9820 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9821}
!9821 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9822}
!9822 = metadata !{i32 755, i32 0, metadata !5257, null}
!9823 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9821}
!9824 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9822}
!9825 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9822}
!9826 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9822}
!9827 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9822}
!9828 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9822}
!9829 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9822}
!9830 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9822}
!9831 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9822}
!9832 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9822}
!9833 = metadata !{i32 759, i32 0, metadata !5257, null}
!9834 = metadata !{i32 760, i32 0, metadata !5257, null}
!9835 = metadata !{i32 766, i32 0, metadata !5257, null}
!9836 = metadata !{i32 767, i32 0, metadata !5257, null}
!9837 = metadata !{i32 609, i32 0, metadata !5262, null}
!9838 = metadata !{i32 156, i32 0, metadata !4720, metadata !9839}
!9839 = metadata !{i32 611, i32 0, metadata !5262, null}
!9840 = metadata !{i32 157, i32 0, metadata !4719, metadata !9839}
!9841 = metadata !{i32 158, i32 0, metadata !4719, metadata !9839}
!9842 = metadata !{i32 612, i32 0, metadata !5262, null}
!9843 = metadata !{i32 613, i32 0, metadata !5262, null}
!9844 = metadata !{i32 614, i32 0, metadata !5262, null}
!9845 = metadata !{i32 617, i32 0, metadata !5262, null}
!9846 = metadata !{i32 618, i32 0, metadata !5262, null}
!9847 = metadata !{i32 619, i32 0, metadata !5262, null}
!9848 = metadata !{i32 620, i32 0, metadata !5262, null}
!9849 = metadata !{i32 623, i32 0, metadata !5262, null}
!9850 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9851}
!9851 = metadata !{i32 626, i32 0, metadata !5264, null}
!9852 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9851}
!9853 = metadata !{i32 2027, i32 0, metadata !5166, metadata !9854}
!9854 = metadata !{i32 627, i32 0, metadata !5264, null}
!9855 = metadata !{i32 2028, i32 0, metadata !5166, metadata !9854}
!9856 = metadata !{i32 631, i32 0, metadata !5264, null}
!9857 = metadata !{i32 632, i32 0, metadata !5264, null}
!9858 = metadata !{i32 633, i32 0, metadata !5264, null}
!9859 = metadata !{i32 635, i32 0, metadata !5264, null}
!9860 = metadata !{i32 636, i32 0, metadata !5264, null}
!9861 = metadata !{i32 638, i32 0, metadata !5264, null}
!9862 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9863}
!9863 = metadata !{i32 2057, i32 0, metadata !5225, metadata !9861}
!9864 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9863}
!9865 = metadata !{i32 2060, i32 0, metadata !5225, metadata !9861}
!9866 = metadata !{i32 2061, i32 0, metadata !5228, metadata !9861}
!9867 = metadata !{i32 2062, i32 0, metadata !5228, metadata !9861}
!9868 = metadata !{i32 2063, i32 0, metadata !5228, metadata !9861}
!9869 = metadata !{i32 2064, i32 0, metadata !5228, metadata !9861}
!9870 = metadata !{i32 640, i32 0, metadata !5264, null}
!9871 = metadata !{i32 641, i32 0, metadata !5264, null}
!9872 = metadata !{i32 642, i32 0, metadata !5264, null}
!9873 = metadata !{i32 643, i32 0, metadata !5264, null}
!9874 = metadata !{i32 645, i32 0, metadata !5264, null}
!9875 = metadata !{i32 646, i32 0, metadata !5264, null}
!9876 = metadata !{i32 647, i32 0, metadata !5264, null}
!9877 = metadata !{i32 650, i32 0, metadata !5264, null}
!9878 = metadata !{i32 651, i32 0, metadata !5264, null}
!9879 = metadata !{i32 654, i32 0, metadata !5264, null}
!9880 = metadata !{i32 652, i32 0, metadata !5264, null}
!9881 = metadata !{i32 659, i32 0, metadata !5267, null}
!9882 = metadata !{i32 662, i32 0, metadata !5267, null}
!9883 = metadata !{i32 663, i32 0, metadata !5267, null}
!9884 = metadata !{i32 665, i32 0, metadata !5267, null}
!9885 = metadata !{i32 666, i32 0, metadata !5267, null}
!9886 = metadata !{i32 670, i32 0, metadata !5267, null}
!9887 = metadata !{i32 671, i32 0, metadata !5267, null}
!9888 = metadata !{i32 673, i32 0, metadata !5267, null}
!9889 = metadata !{i32 674, i32 0, metadata !5267, null}
!9890 = metadata !{i32 676, i32 0, metadata !5267, null}
!9891 = metadata !{i32 677, i32 0, metadata !5267, null}
!9892 = metadata !{i32 679, i32 0, metadata !5267, null}
!9893 = metadata !{i32 680, i32 0, metadata !5267, null}
!9894 = metadata !{i32 247, i32 0, metadata !5273, null}
!9895 = metadata !{i32 248, i32 0, metadata !5273, null}
!9896 = metadata !{i32 250, i32 0, metadata !5273, null}
!9897 = metadata !{i32 251, i32 0, metadata !5273, null}
!9898 = metadata !{i32 252, i32 0, metadata !5273, null}
!9899 = metadata !{i32 255, i32 0, metadata !5273, null}
!9900 = metadata !{i32 263, i32 0, metadata !5273, null}
!9901 = metadata !{i32 264, i32 0, metadata !5273, null}
!9902 = metadata !{i32 270, i32 0, metadata !5273, null}
!9903 = metadata !{i32 276, i32 0, metadata !5273, null}
!9904 = metadata !{i32 277, i32 0, metadata !5273, null}
!9905 = metadata !{i32 291, i32 0, metadata !5273, null}
!9906 = metadata !{i32 292, i32 0, metadata !5273, null}
!9907 = metadata !{i32 293, i32 0, metadata !5273, null}
!9908 = metadata !{i32 296, i32 0, metadata !5273, null}
!9909 = metadata !{i32 214, i32 0, metadata !4727, metadata !9908}
!9910 = metadata !{i32 216, i32 0, metadata !4727, metadata !9908}
!9911 = metadata !{i32 233, i32 0, metadata !4727, metadata !9908}
!9912 = metadata !{i32 236, i32 0, metadata !4727, metadata !9908}
!9913 = metadata !{i32 297, i32 0, metadata !5273, null}
!9914 = metadata !{i32 298, i32 0, metadata !5273, null}
!9915 = metadata !{i32 301, i32 0, metadata !5273, null}
!9916 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9917}
!9917 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9918}
!9918 = metadata !{i32 306, i32 0, metadata !5277, null}
!9919 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9917}
!9920 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9918}
!9921 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9918}
!9922 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9918}
!9923 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9918}
!9924 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9918}
!9925 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9918}
!9926 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9918}
!9927 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9918}
!9928 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9918}
!9929 = metadata !{i32 308, i32 0, metadata !5277, null}
!9930 = metadata !{i32 312, i32 0, metadata !5279, null}
!9931 = metadata !{i32 280, i32 0, metadata !9932, metadata !9930}
!9932 = metadata !{i32 589835, metadata !3659, i32 279, i32 0, metadata !3660, i32 130} ; [ DW_TAG_lexical_block ]
!9933 = metadata !{i32 156, i32 0, metadata !4720, metadata !9934}
!9934 = metadata !{i32 313, i32 0, metadata !5279, null}
!9935 = metadata !{i32 157, i32 0, metadata !4719, metadata !9934}
!9936 = metadata !{i32 158, i32 0, metadata !4719, metadata !9934}
!9937 = metadata !{i32 314, i32 0, metadata !5279, null}
!9938 = metadata !{i32 315, i32 0, metadata !5284, null}
!9939 = metadata !{i32 316, i32 0, metadata !5284, null}
!9940 = metadata !{i32 317, i32 0, metadata !5284, null}
!9941 = metadata !{i32 318, i32 0, metadata !5284, null}
!9942 = metadata !{i32 323, i32 0, metadata !5279, null}
!9943 = metadata !{i32 328, i32 0, metadata !5277, null}
!9944 = metadata !{i32 336, i32 0, metadata !5277, null}
!9945 = metadata !{i32 337, i32 0, metadata !5277, null}
!9946 = metadata !{i32 338, i32 0, metadata !5277, null}
!9947 = metadata !{i32 340, i32 0, metadata !5277, null}
!9948 = metadata !{i32 343, i32 0, metadata !5273, null}
!9949 = metadata !{i32 344, i32 0, metadata !5273, null}
!9950 = metadata !{i32 345, i32 0, metadata !5273, null}
!9951 = metadata !{i32 346, i32 0, metadata !5273, null}
!9952 = metadata !{i32 347, i32 0, metadata !5273, null}
!9953 = metadata !{i32 349, i32 0, metadata !5273, null}
!9954 = metadata !{i32 361, i32 0, metadata !5290, null}
!9955 = metadata !{i32 156, i32 0, metadata !4720, metadata !9956}
!9956 = metadata !{i32 362, i32 0, metadata !5294, null}
!9957 = metadata !{i32 157, i32 0, metadata !4719, metadata !9956}
!9958 = metadata !{i32 158, i32 0, metadata !4719, metadata !9956}
!9959 = metadata !{i32 364, i32 0, metadata !5294, null}
!9960 = metadata !{i32 365, i32 0, metadata !5294, null}
!9961 = metadata !{i32 366, i32 0, metadata !5294, null}
!9962 = metadata !{i32 367, i32 0, metadata !5294, null}
!9963 = metadata !{i32 368, i32 0, metadata !5294, null}
!9964 = metadata !{i32 369, i32 0, metadata !5294, null}
!9965 = metadata !{i32 370, i32 0, metadata !5294, null}
!9966 = metadata !{i32 372, i32 0, metadata !5294, null}
!9967 = metadata !{i32 57, i32 0, metadata !9142, metadata !9968}
!9968 = metadata !{i32 375, i32 0, metadata !5290, null}
!9969 = metadata !{i32 377, i32 0, metadata !5290, null}
!9970 = metadata !{i32 381, i32 0, metadata !5290, null}
!9971 = metadata !{i32 380, i32 0, metadata !5290, null}
!9972 = metadata !{i32 383, i32 0, metadata !5290, null}
!9973 = metadata !{i32 384, i32 0, metadata !5290, null}
!9974 = metadata !{i32 385, i32 0, metadata !5290, null}
!9975 = metadata !{i32 388, i32 0, metadata !5290, null}
!9976 = metadata !{i32 391, i32 0, metadata !5290, null}
!9977 = metadata !{i32 393, i32 0, metadata !5290, null}
!9978 = metadata !{i32 2021, i32 0, metadata !5017, metadata !9979}
!9979 = metadata !{i32 2033, i32 0, metadata !5020, metadata !9977}
!9980 = metadata !{i32 2022, i32 0, metadata !5017, metadata !9979}
!9981 = metadata !{i32 2036, i32 0, metadata !5020, metadata !9977}
!9982 = metadata !{i32 2037, i32 0, metadata !5023, metadata !9977}
!9983 = metadata !{i32 2038, i32 0, metadata !5023, metadata !9977}
!9984 = metadata !{i32 2040, i32 0, metadata !5023, metadata !9977}
!9985 = metadata !{i32 2043, i32 0, metadata !5023, metadata !9977}
!9986 = metadata !{i32 2046, i32 0, metadata !5025, metadata !9977}
!9987 = metadata !{i32 2047, i32 0, metadata !5025, metadata !9977}
!9988 = metadata !{i32 2048, i32 0, metadata !5025, metadata !9977}
!9989 = metadata !{i32 2049, i32 0, metadata !5025, metadata !9977}
!9990 = metadata !{i32 394, i32 0, metadata !5290, null}
!9991 = metadata !{i32 395, i32 0, metadata !5290, null}
!9992 = metadata !{i32 396, i32 0, metadata !5290, null}
!9993 = metadata !{i32 399, i32 0, metadata !5290, null}
!9994 = metadata !{i32 400, i32 0, metadata !5290, null}
!9995 = metadata !{i32 401, i32 0, metadata !5290, null}
!9996 = metadata !{i32 402, i32 0, metadata !5290, null}
!9997 = metadata !{i32 404, i32 0, metadata !5290, null}
!9998 = metadata !{i32 406, i32 0, metadata !5290, null}
!9999 = metadata !{i32 45, i32 0, metadata !10000, null}
!10000 = metadata !{i32 589835, metadata !3944, i32 44, i32 0, metadata !3668, i32 52} ; [ DW_TAG_lexical_block ]
!10001 = metadata !{i32 46, i32 0, metadata !10000, null}
!10002 = metadata !{i32 92, i32 0, metadata !10003, null}
!10003 = metadata !{i32 589835, metadata !3941, i32 91, i32 0, metadata !3668, i32 51} ; [ DW_TAG_lexical_block ]
!10004 = metadata !{i32 97, i32 0, metadata !10005, null}
!10005 = metadata !{i32 589835, metadata !3893, i32 96, i32 0, metadata !3668, i32 50} ; [ DW_TAG_lexical_block ]
!10006 = metadata !{i32 145, i32 0, metadata !5447, null}
!10007 = metadata !{i32 147, i32 0, metadata !5447, null}
!10008 = metadata !{i32 148, i32 0, metadata !5447, null}
!10009 = metadata !{i32 149, i32 0, metadata !5447, null}
!10010 = metadata !{i32 151, i32 0, metadata !5447, null}
!10011 = metadata !{i32 164, i32 0, metadata !5489, null}
!10012 = metadata !{i32 165, i32 0, metadata !5489, null}
!10013 = metadata !{i32 166, i32 0, metadata !5489, null}
!10014 = metadata !{i32 167, i32 0, metadata !5489, null}
!10015 = metadata !{i32 172, i32 0, metadata !10016, null}
!10016 = metadata !{i32 589835, metadata !3793, i32 171, i32 0, metadata !3668, i32 11} ; [ DW_TAG_lexical_block ]
!10017 = metadata !{i32 173, i32 0, metadata !10016, null}
!10018 = metadata !{i32 174, i32 0, metadata !10016, null}
!10019 = metadata !{i32 244, i32 0, metadata !5483, null}
!10020 = metadata !{i32 244, i32 0, metadata !5484, null}
!10021 = metadata !{i32 249, i32 0, metadata !10022, null}
!10022 = metadata !{i32 589835, metadata !3667, i32 248, i32 0, metadata !3668, i32 0} ; [ DW_TAG_lexical_block ]
!10023 = metadata !{i32 254, i32 0, metadata !10024, null}
!10024 = metadata !{i32 589835, metadata !3674, i32 253, i32 0, metadata !3668, i32 1} ; [ DW_TAG_lexical_block ]
!10025 = metadata !{i32 259, i32 0, metadata !10026, null}
!10026 = metadata !{i32 589835, metadata !3675, i32 258, i32 0, metadata !3668, i32 2} ; [ DW_TAG_lexical_block ]
!10027 = metadata !{i32 862, i32 0, metadata !10028, null}
!10028 = metadata !{i32 589835, metadata !3753, i32 861, i32 0, metadata !3679, i32 5} ; [ DW_TAG_lexical_block ]
!10029 = metadata !{i32 868, i32 0, metadata !10030, null}
!10030 = metadata !{i32 589835, metadata !3758, i32 867, i32 0, metadata !3679, i32 6} ; [ DW_TAG_lexical_block ]
!10031 = metadata !{i32 839, i32 0, metadata !10032, null}
!10032 = metadata !{i32 589835, metadata !3761, i32 838, i32 0, metadata !3679, i32 7} ; [ DW_TAG_lexical_block ]
!10033 = metadata !{i32 840, i32 0, metadata !10032, null}
!10034 = metadata !{i32 841, i32 0, metadata !10032, null}
!10035 = metadata !{i32 842, i32 0, metadata !10032, null}
!10036 = metadata !{i32 847, i32 0, metadata !10032, null}
!10037 = metadata !{i32 100, i32 0, metadata !10038, metadata !10039}
!10038 = metadata !{i32 589835, metadata !3752, i32 99, i32 0, metadata !3679, i32 4} ; [ DW_TAG_lexical_block ]
!10039 = metadata !{i32 848, i32 0, metadata !10032, null}
!10040 = metadata !{i32 102, i32 0, metadata !10038, metadata !10039}
!10041 = metadata !{i32 849, i32 0, metadata !10032, null}
!10042 = metadata !{i32 851, i32 0, metadata !10032, null}
!10043 = metadata !{i32 852, i32 0, metadata !10032, null}
!10044 = metadata !{i32 853, i32 0, metadata !10032, null}
!10045 = metadata !{i32 593, i32 0, metadata !10046, null}
!10046 = metadata !{i32 589835, metadata !3778, i32 592, i32 0, metadata !3668, i32 8} ; [ DW_TAG_lexical_block ]
!10047 = metadata !{i32 594, i32 0, metadata !10046, null}
!10048 = metadata !{i32 595, i32 0, metadata !10046, null}
!10049 = metadata !{i32 800, i32 0, metadata !5320, null}
!10050 = metadata !{i32 801, i32 0, metadata !5320, null}
!10051 = metadata !{i32 802, i32 0, metadata !5320, null}
!10052 = metadata !{i32 803, i32 0, metadata !5320, null}
!10053 = metadata !{i32 806, i32 0, metadata !5320, null}
!10054 = metadata !{i32 807, i32 0, metadata !5320, null}
!10055 = metadata !{i32 808, i32 0, metadata !5320, null}
!10056 = metadata !{i32 811, i32 0, metadata !5320, null}
!10057 = metadata !{i32 812, i32 0, metadata !5320, null}
!10058 = metadata !{i32 813, i32 0, metadata !5320, null}
!10059 = metadata !{i32 816, i32 0, metadata !5320, null}
!10060 = metadata !{i32 818, i32 0, metadata !5320, null}
!10061 = metadata !{i32 821, i32 0, metadata !5320, null}
!10062 = metadata !{i32 824, i32 0, metadata !5320, null}
!10063 = metadata !{i32 828, i32 0, metadata !5320, null}
!10064 = metadata !{i32 825, i32 0, metadata !5320, null}
!10065 = metadata !{i32 826, i32 0, metadata !5320, null}
!10066 = metadata !{i32 830, i32 0, metadata !5320, null}
!10067 = metadata !{i32 831, i32 0, metadata !5320, null}
!10068 = metadata !{i32 833, i32 0, metadata !5320, null}
!10069 = metadata !{i32 795, i32 0, metadata !10070, null}
!10070 = metadata !{i32 589835, metadata !3820, i32 794, i32 0, metadata !3679, i32 13} ; [ DW_TAG_lexical_block ]
!10071 = metadata !{i32 711, i32 0, metadata !5333, null}
!10072 = metadata !{i32 712, i32 0, metadata !5333, null}
!10073 = metadata !{i32 713, i32 0, metadata !5333, null}
!10074 = metadata !{i32 716, i32 0, metadata !5333, null}
!10075 = metadata !{i32 717, i32 0, metadata !5333, null}
!10076 = metadata !{i32 719, i32 0, metadata !5333, null}
!10077 = metadata !{i32 720, i32 0, metadata !5333, null}
!10078 = metadata !{i32 721, i32 0, metadata !5333, null}
!10079 = metadata !{i32 722, i32 0, metadata !5333, null}
!10080 = metadata !{i32 723, i32 0, metadata !5333, null}
!10081 = metadata !{i32 724, i32 0, metadata !5333, null}
!10082 = metadata !{i32 725, i32 0, metadata !5333, null}
!10083 = metadata !{i32 727, i32 0, metadata !5333, null}
!10084 = metadata !{i32 729, i32 0, metadata !5333, null}
!10085 = metadata !{i32 711, i32 0, metadata !5333, metadata !10086}
!10086 = metadata !{i32 702, i32 0, metadata !10087, null}
!10087 = metadata !{i32 589835, metadata !3832, i32 701, i32 0, metadata !3679, i32 15} ; [ DW_TAG_lexical_block ]
!10088 = metadata !{i32 712, i32 0, metadata !5333, metadata !10086}
!10089 = metadata !{i32 713, i32 0, metadata !5333, metadata !10086}
!10090 = metadata !{i32 716, i32 0, metadata !5333, metadata !10086}
!10091 = metadata !{i32 717, i32 0, metadata !5333, metadata !10086}
!10092 = metadata !{i32 719, i32 0, metadata !5333, metadata !10086}
!10093 = metadata !{i32 720, i32 0, metadata !5333, metadata !10086}
!10094 = metadata !{i32 721, i32 0, metadata !5333, metadata !10086}
!10095 = metadata !{i32 722, i32 0, metadata !5333, metadata !10086}
!10096 = metadata !{i32 723, i32 0, metadata !5333, metadata !10086}
!10097 = metadata !{i32 724, i32 0, metadata !5333, metadata !10086}
!10098 = metadata !{i32 725, i32 0, metadata !5333, metadata !10086}
!10099 = metadata !{i32 727, i32 0, metadata !5333, metadata !10086}
!10100 = metadata !{i32 729, i32 0, metadata !5333, metadata !10086}
!10101 = metadata !{i32 716, i32 0, metadata !5333, metadata !10102}
!10102 = metadata !{i32 673, i32 0, metadata !10103, null}
!10103 = metadata !{i32 589835, metadata !3833, i32 672, i32 0, metadata !3679, i32 16} ; [ DW_TAG_lexical_block ]
!10104 = metadata !{i32 717, i32 0, metadata !5333, metadata !10102}
!10105 = metadata !{i32 719, i32 0, metadata !5333, metadata !10102}
!10106 = metadata !{i32 720, i32 0, metadata !5333, metadata !10102}
!10107 = metadata !{i32 721, i32 0, metadata !5333, metadata !10102}
!10108 = metadata !{i32 722, i32 0, metadata !5333, metadata !10102}
!10109 = metadata !{i32 723, i32 0, metadata !5333, metadata !10102}
!10110 = metadata !{i32 724, i32 0, metadata !5333, metadata !10102}
!10111 = metadata !{i32 725, i32 0, metadata !5333, metadata !10102}
!10112 = metadata !{i32 727, i32 0, metadata !5333, metadata !10102}
!10113 = metadata !{i32 716, i32 0, metadata !5333, metadata !10114}
!10114 = metadata !{i32 673, i32 0, metadata !10103, metadata !10115}
!10115 = metadata !{i32 668, i32 0, metadata !10116, null}
!10116 = metadata !{i32 589835, metadata !3836, i32 667, i32 0, metadata !3679, i32 17} ; [ DW_TAG_lexical_block ]
!10117 = metadata !{i32 717, i32 0, metadata !5333, metadata !10114}
!10118 = metadata !{i32 719, i32 0, metadata !5333, metadata !10114}
!10119 = metadata !{i32 720, i32 0, metadata !5333, metadata !10114}
!10120 = metadata !{i32 721, i32 0, metadata !5333, metadata !10114}
!10121 = metadata !{i32 722, i32 0, metadata !5333, metadata !10114}
!10122 = metadata !{i32 723, i32 0, metadata !5333, metadata !10114}
!10123 = metadata !{i32 724, i32 0, metadata !5333, metadata !10114}
!10124 = metadata !{i32 725, i32 0, metadata !5333, metadata !10114}
!10125 = metadata !{i32 727, i32 0, metadata !5333, metadata !10114}
!10126 = metadata !{i32 741, i32 0, metadata !5354, null}
!10127 = metadata !{i32 742, i32 0, metadata !5354, null}
!10128 = metadata !{i32 743, i32 0, metadata !5354, null}
!10129 = metadata !{i32 744, i32 0, metadata !5354, null}
!10130 = metadata !{i32 747, i32 0, metadata !5354, null}
!10131 = metadata !{i32 748, i32 0, metadata !5354, null}
!10132 = metadata !{i32 749, i32 0, metadata !5354, null}
!10133 = metadata !{i32 752, i32 0, metadata !5354, null}
!10134 = metadata !{i32 753, i32 0, metadata !5354, null}
!10135 = metadata !{i32 754, i32 0, metadata !5354, null}
!10136 = metadata !{i32 757, i32 0, metadata !5354, null}
!10137 = metadata !{i32 759, i32 0, metadata !5354, null}
!10138 = metadata !{i32 762, i32 0, metadata !5354, null}
!10139 = metadata !{i32 763, i32 0, metadata !5354, null}
!10140 = metadata !{i32 764, i32 0, metadata !5354, null}
!10141 = metadata !{i32 765, i32 0, metadata !5354, null}
!10142 = metadata !{i32 766, i32 0, metadata !5354, null}
!10143 = metadata !{i32 770, i32 0, metadata !5354, null}
!10144 = metadata !{i32 771, i32 0, metadata !5354, null}
!10145 = metadata !{i32 772, i32 0, metadata !5354, null}
!10146 = metadata !{i32 775, i32 0, metadata !5354, null}
!10147 = metadata !{i32 776, i32 0, metadata !5354, null}
!10148 = metadata !{i32 777, i32 0, metadata !5354, null}
!10149 = metadata !{i32 781, i32 0, metadata !5354, null}
!10150 = metadata !{i32 782, i32 0, metadata !5354, null}
!10151 = metadata !{i32 786, i32 0, metadata !5354, null}
!10152 = metadata !{i32 787, i32 0, metadata !5354, null}
!10153 = metadata !{i32 789, i32 0, metadata !5354, null}
!10154 = metadata !{i32 736, i32 0, metadata !10155, null}
!10155 = metadata !{i32 589835, metadata !3842, i32 735, i32 0, metadata !3679, i32 19} ; [ DW_TAG_lexical_block ]
!10156 = metadata !{i32 686, i32 0, metadata !5365, null}
!10157 = metadata !{i32 687, i32 0, metadata !5365, null}
!10158 = metadata !{i32 689, i32 0, metadata !5365, null}
!10159 = metadata !{i32 690, i32 0, metadata !5365, null}
!10160 = metadata !{i32 691, i32 0, metadata !5365, null}
!10161 = metadata !{i32 692, i32 0, metadata !5365, null}
!10162 = metadata !{i32 693, i32 0, metadata !5365, null}
!10163 = metadata !{i32 694, i32 0, metadata !5365, null}
!10164 = metadata !{i32 695, i32 0, metadata !5365, null}
!10165 = metadata !{i32 697, i32 0, metadata !5365, null}
!10166 = metadata !{i32 686, i32 0, metadata !5365, metadata !10167}
!10167 = metadata !{i32 678, i32 0, metadata !10168, null}
!10168 = metadata !{i32 589835, metadata !3848, i32 677, i32 0, metadata !3679, i32 21} ; [ DW_TAG_lexical_block ]
!10169 = metadata !{i32 687, i32 0, metadata !5365, metadata !10167}
!10170 = metadata !{i32 689, i32 0, metadata !5365, metadata !10167}
!10171 = metadata !{i32 690, i32 0, metadata !5365, metadata !10167}
!10172 = metadata !{i32 691, i32 0, metadata !5365, metadata !10167}
!10173 = metadata !{i32 692, i32 0, metadata !5365, metadata !10167}
!10174 = metadata !{i32 693, i32 0, metadata !5365, metadata !10167}
!10175 = metadata !{i32 694, i32 0, metadata !5365, metadata !10167}
!10176 = metadata !{i32 695, i32 0, metadata !5365, metadata !10167}
!10177 = metadata !{i32 697, i32 0, metadata !5365, metadata !10167}
!10178 = metadata !{i32 686, i32 0, metadata !5365, metadata !10179}
!10179 = metadata !{i32 664, i32 0, metadata !10180, null}
!10180 = metadata !{i32 589835, metadata !3849, i32 663, i32 0, metadata !3679, i32 22} ; [ DW_TAG_lexical_block ]
!10181 = metadata !{i32 687, i32 0, metadata !5365, metadata !10179}
!10182 = metadata !{i32 689, i32 0, metadata !5365, metadata !10179}
!10183 = metadata !{i32 690, i32 0, metadata !5365, metadata !10179}
!10184 = metadata !{i32 691, i32 0, metadata !5365, metadata !10179}
!10185 = metadata !{i32 692, i32 0, metadata !5365, metadata !10179}
!10186 = metadata !{i32 693, i32 0, metadata !5365, metadata !10179}
!10187 = metadata !{i32 694, i32 0, metadata !5365, metadata !10179}
!10188 = metadata !{i32 695, i32 0, metadata !5365, metadata !10179}
!10189 = metadata !{i32 697, i32 0, metadata !5365, metadata !10179}
!10190 = metadata !{i32 686, i32 0, metadata !5365, metadata !10191}
!10191 = metadata !{i32 664, i32 0, metadata !10180, metadata !10192}
!10192 = metadata !{i32 659, i32 0, metadata !10193, null}
!10193 = metadata !{i32 589835, metadata !3850, i32 658, i32 0, metadata !3679, i32 23} ; [ DW_TAG_lexical_block ]
!10194 = metadata !{i32 687, i32 0, metadata !5365, metadata !10191}
!10195 = metadata !{i32 689, i32 0, metadata !5365, metadata !10191}
!10196 = metadata !{i32 690, i32 0, metadata !5365, metadata !10191}
!10197 = metadata !{i32 691, i32 0, metadata !5365, metadata !10191}
!10198 = metadata !{i32 692, i32 0, metadata !5365, metadata !10191}
!10199 = metadata !{i32 693, i32 0, metadata !5365, metadata !10191}
!10200 = metadata !{i32 694, i32 0, metadata !5365, metadata !10191}
!10201 = metadata !{i32 695, i32 0, metadata !5365, metadata !10191}
!10202 = metadata !{i32 697, i32 0, metadata !5365, metadata !10191}
!10203 = metadata !{i32 616, i32 0, metadata !5384, null}
!10204 = metadata !{i32 618, i32 0, metadata !5384, null}
!10205 = metadata !{i32 619, i32 0, metadata !5384, null}
!10206 = metadata !{i32 620, i32 0, metadata !5384, null}
!10207 = metadata !{i32 623, i32 0, metadata !5384, null}
!10208 = metadata !{i32 624, i32 0, metadata !5384, null}
!10209 = metadata !{i32 625, i32 0, metadata !5384, null}
!10210 = metadata !{i32 628, i32 0, metadata !5384, null}
!10211 = metadata !{i32 631, i32 0, metadata !5384, null}
!10212 = metadata !{i32 633, i32 0, metadata !5384, null}
!10213 = metadata !{i32 635, i32 0, metadata !5384, null}
!10214 = metadata !{i32 637, i32 0, metadata !5384, null}
!10215 = metadata !{i32 639, i32 0, metadata !5384, null}
!10216 = metadata !{i32 640, i32 0, metadata !5384, null}
!10217 = metadata !{i32 647, i32 0, metadata !5386, null}
!10218 = metadata !{i32 648, i32 0, metadata !5386, null}
!10219 = metadata !{i32 649, i32 0, metadata !5386, null}
!10220 = metadata !{i32 650, i32 0, metadata !5386, null}
!10221 = metadata !{i32 610, i32 0, metadata !5389, null}
!10222 = metadata !{i32 611, i32 0, metadata !5389, null}
!10223 = metadata !{i32 612, i32 0, metadata !5389, null}
!10224 = metadata !{i32 573, i32 0, metadata !5395, null}
!10225 = metadata !{i32 575, i32 0, metadata !5395, null}
!10226 = metadata !{i32 576, i32 0, metadata !5395, null}
!10227 = metadata !{i32 577, i32 0, metadata !5395, null}
!10228 = metadata !{i32 580, i32 0, metadata !5395, null}
!10229 = metadata !{i32 581, i32 0, metadata !5395, null}
!10230 = metadata !{i32 582, i32 0, metadata !5395, null}
!10231 = metadata !{i32 585, i32 0, metadata !5395, null}
!10232 = metadata !{i32 587, i32 0, metadata !5395, null}
!10233 = metadata !{i32 588, i32 0, metadata !5395, null}
!10234 = metadata !{i32 589, i32 0, metadata !5395, null}
!10235 = metadata !{i32 590, i32 0, metadata !5395, null}
!10236 = metadata !{i32 592, i32 0, metadata !5395, null}
!10237 = metadata !{i32 593, i32 0, metadata !5395, null}
!10238 = metadata !{i32 598, i32 0, metadata !5395, null}
!10239 = metadata !{i32 599, i32 0, metadata !5395, null}
!10240 = metadata !{i32 600, i32 0, metadata !5395, null}
!10241 = metadata !{i32 601, i32 0, metadata !5395, null}
!10242 = metadata !{i32 565, i32 0, metadata !5399, null}
!10243 = metadata !{i32 566, i32 0, metadata !5399, null}
!10244 = metadata !{i32 567, i32 0, metadata !5399, null}
!10245 = metadata !{i32 568, i32 0, metadata !5399, null}
!10246 = metadata !{i32 528, i32 0, metadata !5406, null}
!10247 = metadata !{i32 531, i32 0, metadata !5406, null}
!10248 = metadata !{i32 532, i32 0, metadata !5406, null}
!10249 = metadata !{i32 533, i32 0, metadata !5406, null}
!10250 = metadata !{i32 536, i32 0, metadata !5406, null}
!10251 = metadata !{i32 537, i32 0, metadata !5406, null}
!10252 = metadata !{i32 538, i32 0, metadata !5406, null}
!10253 = metadata !{i32 541, i32 0, metadata !5406, null}
!10254 = metadata !{i32 543, i32 0, metadata !5406, null}
!10255 = metadata !{i32 544, i32 0, metadata !5406, null}
!10256 = metadata !{i32 545, i32 0, metadata !5406, null}
!10257 = metadata !{i32 546, i32 0, metadata !5406, null}
!10258 = metadata !{i32 548, i32 0, metadata !5406, null}
!10259 = metadata !{i32 549, i32 0, metadata !5406, null}
!10260 = metadata !{i32 552, i32 0, metadata !5406, null}
!10261 = metadata !{i32 553, i32 0, metadata !5406, null}
!10262 = metadata !{i32 554, i32 0, metadata !5406, null}
!10263 = metadata !{i32 555, i32 0, metadata !5406, null}
!10264 = metadata !{i32 520, i32 0, metadata !5410, null}
!10265 = metadata !{i32 521, i32 0, metadata !5410, null}
!10266 = metadata !{i32 522, i32 0, metadata !5410, null}
!10267 = metadata !{i32 524, i32 0, metadata !5410, null}
!10268 = metadata !{i32 377, i32 0, metadata !5416, null}
!10269 = metadata !{i32 379, i32 0, metadata !5416, null}
!10270 = metadata !{i32 380, i32 0, metadata !5416, null}
!10271 = metadata !{i32 381, i32 0, metadata !5416, null}
!10272 = metadata !{i32 384, i32 0, metadata !5416, null}
!10273 = metadata !{i32 385, i32 0, metadata !5416, null}
!10274 = metadata !{i32 386, i32 0, metadata !5416, null}
!10275 = metadata !{i32 389, i32 0, metadata !5416, null}
!10276 = metadata !{i32 390, i32 0, metadata !5416, null}
!10277 = metadata !{i32 391, i32 0, metadata !5416, null}
!10278 = metadata !{i32 394, i32 0, metadata !5416, null}
!10279 = metadata !{i32 398, i32 0, metadata !5416, null}
!10280 = metadata !{i32 399, i32 0, metadata !5416, null}
!10281 = metadata !{i32 400, i32 0, metadata !5416, null}
!10282 = metadata !{i32 404, i32 0, metadata !5416, null}
!10283 = metadata !{i32 406, i32 0, metadata !5416, null}
!10284 = metadata !{i32 369, i32 0, metadata !5420, null}
!10285 = metadata !{i32 370, i32 0, metadata !5420, null}
!10286 = metadata !{i32 372, i32 0, metadata !5420, null}
!10287 = metadata !{i32 321, i32 0, metadata !5426, null}
!10288 = metadata !{i32 323, i32 0, metadata !5426, null}
!10289 = metadata !{i32 324, i32 0, metadata !5426, null}
!10290 = metadata !{i32 325, i32 0, metadata !5426, null}
!10291 = metadata !{i32 328, i32 0, metadata !5426, null}
!10292 = metadata !{i32 329, i32 0, metadata !5426, null}
!10293 = metadata !{i32 330, i32 0, metadata !5426, null}
!10294 = metadata !{i32 333, i32 0, metadata !5426, null}
!10295 = metadata !{i32 335, i32 0, metadata !5426, null}
!10296 = metadata !{i32 336, i32 0, metadata !5426, null}
!10297 = metadata !{i32 337, i32 0, metadata !5426, null}
!10298 = metadata !{i32 338, i32 0, metadata !5426, null}
!10299 = metadata !{i32 339, i32 0, metadata !5426, null}
!10300 = metadata !{i32 341, i32 0, metadata !5426, null}
!10301 = metadata !{i32 342, i32 0, metadata !5426, null}
!10302 = metadata !{i32 343, i32 0, metadata !5426, null}
!10303 = metadata !{i32 345, i32 0, metadata !5426, null}
!10304 = metadata !{i32 346, i32 0, metadata !5426, null}
!10305 = metadata !{i32 348, i32 0, metadata !5426, null}
!10306 = metadata !{i32 352, i32 0, metadata !5426, null}
!10307 = metadata !{i32 364, i32 0, metadata !5426, null}
!10308 = metadata !{i32 357, i32 0, metadata !5426, null}
!10309 = metadata !{i32 358, i32 0, metadata !5426, null}
!10310 = metadata !{i32 359, i32 0, metadata !5426, null}
!10311 = metadata !{i32 313, i32 0, metadata !5430, null}
!10312 = metadata !{i32 314, i32 0, metadata !5430, null}
!10313 = metadata !{i32 315, i32 0, metadata !5430, null}
!10314 = metadata !{i32 316, i32 0, metadata !5430, null}
!10315 = metadata !{i32 269, i32 0, metadata !5437, null}
!10316 = metadata !{i32 271, i32 0, metadata !5437, null}
!10317 = metadata !{i32 272, i32 0, metadata !5437, null}
!10318 = metadata !{i32 273, i32 0, metadata !5437, null}
!10319 = metadata !{i32 276, i32 0, metadata !5437, null}
!10320 = metadata !{i32 277, i32 0, metadata !5437, null}
!10321 = metadata !{i32 278, i32 0, metadata !5437, null}
!10322 = metadata !{i32 281, i32 0, metadata !5437, null}
!10323 = metadata !{i32 283, i32 0, metadata !5437, null}
!10324 = metadata !{i32 284, i32 0, metadata !5437, null}
!10325 = metadata !{i32 285, i32 0, metadata !5437, null}
!10326 = metadata !{i32 286, i32 0, metadata !5437, null}
!10327 = metadata !{i32 288, i32 0, metadata !5437, null}
!10328 = metadata !{i32 289, i32 0, metadata !5437, null}
!10329 = metadata !{i32 290, i32 0, metadata !5437, null}
!10330 = metadata !{i32 293, i32 0, metadata !5437, null}
!10331 = metadata !{i32 294, i32 0, metadata !5437, null}
!10332 = metadata !{i32 302, i32 0, metadata !5437, null}
!10333 = metadata !{i32 303, i32 0, metadata !5437, null}
!10334 = metadata !{i32 304, i32 0, metadata !5437, null}
!10335 = metadata !{i32 260, i32 0, metadata !5441, null}
!10336 = metadata !{i32 261, i32 0, metadata !5441, null}
!10337 = metadata !{i32 262, i32 0, metadata !5441, null}
!10338 = metadata !{i32 264, i32 0, metadata !5441, null}
!10339 = metadata !{i32 107, i32 0, metadata !10340, null}
!10340 = metadata !{i32 589835, metadata !3875, i32 106, i32 0, metadata !3679, i32 38} ; [ DW_TAG_lexical_block ]
!10341 = metadata !{i32 108, i32 0, metadata !10340, null}
!10342 = metadata !{i32 117, i32 0, metadata !10340, null}
!10343 = metadata !{i32 120, i32 0, metadata !10340, null}
!10344 = metadata !{i32 123, i32 0, metadata !10340, null}
!10345 = metadata !{i32 127, i32 0, metadata !10340, null}
!10346 = metadata !{i32 416, i32 0, metadata !5454, null}
!10347 = metadata !{i32 418, i32 0, metadata !5454, null}
!10348 = metadata !{i32 419, i32 0, metadata !5454, null}
!10349 = metadata !{i32 420, i32 0, metadata !5454, null}
!10350 = metadata !{i32 423, i32 0, metadata !5454, null}
!10351 = metadata !{i32 424, i32 0, metadata !5454, null}
!10352 = metadata !{i32 425, i32 0, metadata !5454, null}
!10353 = metadata !{i32 428, i32 0, metadata !5454, null}
!10354 = metadata !{i32 429, i32 0, metadata !5454, null}
!10355 = metadata !{i32 430, i32 0, metadata !5454, null}
!10356 = metadata !{i32 433, i32 0, metadata !5454, null}
!10357 = metadata !{i32 434, i32 0, metadata !5454, null}
!10358 = metadata !{i32 435, i32 0, metadata !5454, null}
!10359 = metadata !{i32 446, i32 0, metadata !5454, null}
!10360 = metadata !{i32 448, i32 0, metadata !5454, null}
!10361 = metadata !{i32 449, i32 0, metadata !5454, null}
!10362 = metadata !{i32 450, i32 0, metadata !5454, null}
!10363 = metadata !{i32 452, i32 0, metadata !5454, null}
!10364 = metadata !{i32 93, i32 0, metadata !10365, metadata !10363}
!10365 = metadata !{i32 589835, metadata !3678, i32 88, i32 0, metadata !3679, i32 3} ; [ DW_TAG_lexical_block ]
!10366 = metadata !{i32 95, i32 0, metadata !10365, metadata !10363}
!10367 = metadata !{i32 453, i32 0, metadata !5454, null}
!10368 = metadata !{i32 454, i32 0, metadata !5454, null}
!10369 = metadata !{i32 455, i32 0, metadata !5454, null}
!10370 = metadata !{i32 456, i32 0, metadata !5454, null}
!10371 = metadata !{i32 457, i32 0, metadata !5454, null}
!10372 = metadata !{i32 461, i32 0, metadata !5454, null}
!10373 = metadata !{i32 462, i32 0, metadata !5454, null}
!10374 = metadata !{i32 463, i32 0, metadata !5454, null}
!10375 = metadata !{i32 464, i32 0, metadata !5454, null}
!10376 = metadata !{i32 465, i32 0, metadata !5454, null}
!10377 = metadata !{i32 470, i32 0, metadata !5454, null}
!10378 = metadata !{i32 471, i32 0, metadata !5454, null}
!10379 = metadata !{i32 474, i32 0, metadata !5454, null}
!10380 = metadata !{i32 477, i32 0, metadata !5454, null}
!10381 = metadata !{i32 478, i32 0, metadata !5454, null}
!10382 = metadata !{i32 479, i32 0, metadata !5454, null}
!10383 = metadata !{i32 480, i32 0, metadata !5454, null}
!10384 = metadata !{i32 481, i32 0, metadata !5454, null}
!10385 = metadata !{i32 482, i32 0, metadata !5454, null}
!10386 = metadata !{i32 483, i32 0, metadata !5454, null}
!10387 = metadata !{i32 484, i32 0, metadata !5454, null}
!10388 = metadata !{i32 485, i32 0, metadata !5454, null}
!10389 = metadata !{i32 487, i32 0, metadata !5454, null}
!10390 = metadata !{i32 488, i32 0, metadata !5454, null}
!10391 = metadata !{i32 491, i32 0, metadata !5454, null}
!10392 = metadata !{i32 496, i32 0, metadata !5454, null}
!10393 = metadata !{i32 499, i32 0, metadata !5458, null}
!10394 = metadata !{i32 500, i32 0, metadata !5458, null}
!10395 = metadata !{i32 501, i32 0, metadata !5458, null}
!10396 = metadata !{i32 502, i32 0, metadata !5458, null}
!10397 = metadata !{i32 504, i32 0, metadata !5458, null}
!10398 = metadata !{i32 505, i32 0, metadata !5458, null}
!10399 = metadata !{i32 506, i32 0, metadata !5458, null}
!10400 = metadata !{i32 507, i32 0, metadata !5458, null}
!10401 = metadata !{i32 508, i32 0, metadata !5458, null}
!10402 = metadata !{i32 510, i32 0, metadata !5458, null}
!10403 = metadata !{i32 511, i32 0, metadata !5458, null}
!10404 = metadata !{i32 512, i32 0, metadata !5458, null}
!10405 = metadata !{i32 513, i32 0, metadata !5458, null}
!10406 = metadata !{i32 410, i32 0, metadata !10407, null}
!10407 = metadata !{i32 589835, metadata !3879, i32 409, i32 0, metadata !3679, i32 41} ; [ DW_TAG_lexical_block ]
!10408 = metadata !{i32 145, i32 0, metadata !5468, null}
!10409 = metadata !{i32 146, i32 0, metadata !5471, null}
!10410 = metadata !{i32 147, i32 0, metadata !5471, null}
!10411 = metadata !{i32 148, i32 0, metadata !5471, null}
!10412 = metadata !{i32 149, i32 0, metadata !5471, null}
!10413 = metadata !{i32 150, i32 0, metadata !5471, null}
!10414 = metadata !{i32 153, i32 0, metadata !5471, null}
!10415 = metadata !{i32 154, i32 0, metadata !5471, null}
!10416 = metadata !{i32 155, i32 0, metadata !5471, null}
!10417 = metadata !{i32 156, i32 0, metadata !5471, null}
!10418 = metadata !{i32 157, i32 0, metadata !5471, null}
!10419 = metadata !{i32 159, i32 0, metadata !5471, null}
!10420 = metadata !{i32 160, i32 0, metadata !5471, null}
!10421 = metadata !{i32 161, i32 0, metadata !5471, null}
!10422 = metadata !{i32 163, i32 0, metadata !5471, null}
!10423 = metadata !{i32 166, i32 0, metadata !5468, null}
!10424 = metadata !{i32 171, i32 0, metadata !5468, null}
!10425 = metadata !{i32 174, i32 0, metadata !5468, null}
!10426 = metadata !{i32 175, i32 0, metadata !5468, null}
!10427 = metadata !{i32 176, i32 0, metadata !5468, null}
!10428 = metadata !{i32 178, i32 0, metadata !5468, null}
!10429 = metadata !{i32 179, i32 0, metadata !5468, null}
!10430 = metadata !{i32 180, i32 0, metadata !5468, null}
!10431 = metadata !{i32 181, i32 0, metadata !5468, null}
!10432 = metadata !{i32 184, i32 0, metadata !5468, null}
!10433 = metadata !{i32 185, i32 0, metadata !5468, null}
!10434 = metadata !{i32 186, i32 0, metadata !5468, null}
!10435 = metadata !{i32 187, i32 0, metadata !5468, null}
!10436 = metadata !{i32 188, i32 0, metadata !5468, null}
!10437 = metadata !{i32 189, i32 0, metadata !5468, null}
!10438 = metadata !{i32 192, i32 0, metadata !5468, null}
!10439 = metadata !{i32 193, i32 0, metadata !5468, null}
!10440 = metadata !{i32 194, i32 0, metadata !5468, null}
!10441 = metadata !{i32 195, i32 0, metadata !5468, null}
!10442 = metadata !{i32 196, i32 0, metadata !5468, null}
!10443 = metadata !{i32 197, i32 0, metadata !5468, null}
!10444 = metadata !{i32 200, i32 0, metadata !5468, null}
!10445 = metadata !{i32 201, i32 0, metadata !5468, null}
!10446 = metadata !{i32 204, i32 0, metadata !5468, null}
!10447 = metadata !{i32 211, i32 0, metadata !5468, null}
!10448 = metadata !{i32 212, i32 0, metadata !5468, null}
!10449 = metadata !{i32 213, i32 0, metadata !5468, null}
!10450 = metadata !{i32 215, i32 0, metadata !5468, null}
!10451 = metadata !{i32 216, i32 0, metadata !5468, null}
!10452 = metadata !{i32 217, i32 0, metadata !5468, null}
!10453 = metadata !{i32 218, i32 0, metadata !5468, null}
!10454 = metadata !{i32 221, i32 0, metadata !5468, null}
!10455 = metadata !{i32 222, i32 0, metadata !5468, null}
!10456 = metadata !{i32 223, i32 0, metadata !5468, null}
!10457 = metadata !{i32 224, i32 0, metadata !5468, null}
!10458 = metadata !{i32 225, i32 0, metadata !5468, null}
!10459 = metadata !{i32 226, i32 0, metadata !5468, null}
!10460 = metadata !{i32 229, i32 0, metadata !5468, null}
!10461 = metadata !{i32 230, i32 0, metadata !5468, null}
!10462 = metadata !{i32 231, i32 0, metadata !5468, null}
!10463 = metadata !{i32 232, i32 0, metadata !5468, null}
!10464 = metadata !{i32 233, i32 0, metadata !5468, null}
!10465 = metadata !{i32 234, i32 0, metadata !5468, null}
!10466 = metadata !{i32 237, i32 0, metadata !5468, null}
!10467 = metadata !{i32 238, i32 0, metadata !5468, null}
!10468 = metadata !{i32 243, i32 0, metadata !5468, null}
!10469 = metadata !{i32 244, i32 0, metadata !5468, null}
!10470 = metadata !{i32 245, i32 0, metadata !5468, null}
!10471 = metadata !{i32 251, i32 0, metadata !5468, null}
!10472 = metadata !{i32 252, i32 0, metadata !5468, null}
!10473 = metadata !{i32 253, i32 0, metadata !5468, null}
!10474 = metadata !{i32 134, i32 0, metadata !5474, null}
!10475 = metadata !{i32 135, i32 0, metadata !5474, null}
!10476 = metadata !{i32 136, i32 0, metadata !5474, null}
!10477 = metadata !{i32 138, i32 0, metadata !5474, null}
!10478 = metadata !{i32 26, i32 0, metadata !10479, null}
!10479 = metadata !{i32 589835, metadata !3884, i32 25, i32 0, metadata !3679, i32 45} ; [ DW_TAG_lexical_block ]
!10480 = metadata !{i32 134, i32 0, metadata !5474, metadata !10481}
!10481 = metadata !{i32 28, i32 0, metadata !10479, null}
!10482 = metadata !{i32 135, i32 0, metadata !5474, metadata !10481}
!10483 = metadata !{i32 136, i32 0, metadata !5474, metadata !10481}
!10484 = metadata !{i32 138, i32 0, metadata !5474, metadata !10481}
!10485 = metadata !{i32 260, i32 0, metadata !5441, metadata !10486}
!10486 = metadata !{i32 30, i32 0, metadata !10479, null}
!10487 = metadata !{i32 261, i32 0, metadata !5441, metadata !10486}
!10488 = metadata !{i32 262, i32 0, metadata !5441, metadata !10486}
!10489 = metadata !{i32 264, i32 0, metadata !5441, metadata !10486}
!10490 = metadata !{i32 313, i32 0, metadata !5430, metadata !10491}
!10491 = metadata !{i32 32, i32 0, metadata !10479, null}
!10492 = metadata !{i32 314, i32 0, metadata !5430, metadata !10491}
!10493 = metadata !{i32 315, i32 0, metadata !5430, metadata !10491}
!10494 = metadata !{i32 316, i32 0, metadata !5430, metadata !10491}
!10495 = metadata !{i32 369, i32 0, metadata !5420, metadata !10496}
!10496 = metadata !{i32 34, i32 0, metadata !10479, null}
!10497 = metadata !{i32 370, i32 0, metadata !5420, metadata !10496}
!10498 = metadata !{i32 372, i32 0, metadata !5420, metadata !10496}
!10499 = metadata !{i32 36, i32 0, metadata !10479, null}
!10500 = metadata !{i32 520, i32 0, metadata !5410, metadata !10501}
!10501 = metadata !{i32 38, i32 0, metadata !10479, null}
!10502 = metadata !{i32 521, i32 0, metadata !5410, metadata !10501}
!10503 = metadata !{i32 522, i32 0, metadata !5410, metadata !10501}
!10504 = metadata !{i32 524, i32 0, metadata !5410, metadata !10501}
!10505 = metadata !{i32 565, i32 0, metadata !5399, metadata !10506}
!10506 = metadata !{i32 40, i32 0, metadata !10479, null}
!10507 = metadata !{i32 566, i32 0, metadata !5399, metadata !10506}
!10508 = metadata !{i32 567, i32 0, metadata !5399, metadata !10506}
!10509 = metadata !{i32 568, i32 0, metadata !5399, metadata !10506}
!10510 = metadata !{i32 44, i32 0, metadata !10479, null}
!10511 = metadata !{i32 686, i32 0, metadata !5365, metadata !10512}
!10512 = metadata !{i32 664, i32 0, metadata !10180, metadata !10510}
!10513 = metadata !{i32 687, i32 0, metadata !5365, metadata !10512}
!10514 = metadata !{i32 689, i32 0, metadata !5365, metadata !10512}
!10515 = metadata !{i32 690, i32 0, metadata !5365, metadata !10512}
!10516 = metadata !{i32 691, i32 0, metadata !5365, metadata !10512}
!10517 = metadata !{i32 692, i32 0, metadata !5365, metadata !10512}
!10518 = metadata !{i32 693, i32 0, metadata !5365, metadata !10512}
!10519 = metadata !{i32 694, i32 0, metadata !5365, metadata !10512}
!10520 = metadata !{i32 695, i32 0, metadata !5365, metadata !10512}
!10521 = metadata !{i32 697, i32 0, metadata !5365, metadata !10512}
!10522 = metadata !{i32 46, i32 0, metadata !10479, null}
!10523 = metadata !{i32 716, i32 0, metadata !5333, metadata !10524}
!10524 = metadata !{i32 673, i32 0, metadata !10103, metadata !10522}
!10525 = metadata !{i32 717, i32 0, metadata !5333, metadata !10524}
!10526 = metadata !{i32 719, i32 0, metadata !5333, metadata !10524}
!10527 = metadata !{i32 720, i32 0, metadata !5333, metadata !10524}
!10528 = metadata !{i32 721, i32 0, metadata !5333, metadata !10524}
!10529 = metadata !{i32 722, i32 0, metadata !5333, metadata !10524}
!10530 = metadata !{i32 723, i32 0, metadata !5333, metadata !10524}
!10531 = metadata !{i32 724, i32 0, metadata !5333, metadata !10524}
!10532 = metadata !{i32 725, i32 0, metadata !5333, metadata !10524}
!10533 = metadata !{i32 727, i32 0, metadata !5333, metadata !10524}
!10534 = metadata !{i32 48, i32 0, metadata !10479, null}
!10535 = metadata !{i32 686, i32 0, metadata !5365, metadata !10534}
!10536 = metadata !{i32 687, i32 0, metadata !5365, metadata !10534}
!10537 = metadata !{i32 689, i32 0, metadata !5365, metadata !10534}
!10538 = metadata !{i32 690, i32 0, metadata !5365, metadata !10534}
!10539 = metadata !{i32 691, i32 0, metadata !5365, metadata !10534}
!10540 = metadata !{i32 692, i32 0, metadata !5365, metadata !10534}
!10541 = metadata !{i32 693, i32 0, metadata !5365, metadata !10534}
!10542 = metadata !{i32 694, i32 0, metadata !5365, metadata !10534}
!10543 = metadata !{i32 695, i32 0, metadata !5365, metadata !10534}
!10544 = metadata !{i32 697, i32 0, metadata !5365, metadata !10534}
!10545 = metadata !{i32 51, i32 0, metadata !10479, null}
!10546 = metadata !{i32 711, i32 0, metadata !5333, metadata !10545}
!10547 = metadata !{i32 712, i32 0, metadata !5333, metadata !10545}
!10548 = metadata !{i32 713, i32 0, metadata !5333, metadata !10545}
!10549 = metadata !{i32 716, i32 0, metadata !5333, metadata !10545}
!10550 = metadata !{i32 717, i32 0, metadata !5333, metadata !10545}
!10551 = metadata !{i32 719, i32 0, metadata !5333, metadata !10545}
!10552 = metadata !{i32 720, i32 0, metadata !5333, metadata !10545}
!10553 = metadata !{i32 721, i32 0, metadata !5333, metadata !10545}
!10554 = metadata !{i32 722, i32 0, metadata !5333, metadata !10545}
!10555 = metadata !{i32 723, i32 0, metadata !5333, metadata !10545}
!10556 = metadata !{i32 724, i32 0, metadata !5333, metadata !10545}
!10557 = metadata !{i32 725, i32 0, metadata !5333, metadata !10545}
!10558 = metadata !{i32 727, i32 0, metadata !5333, metadata !10545}
!10559 = metadata !{i32 729, i32 0, metadata !5333, metadata !10545}
!10560 = metadata !{i32 610, i32 0, metadata !5389, metadata !10561}
!10561 = metadata !{i32 54, i32 0, metadata !10479, null}
!10562 = metadata !{i32 611, i32 0, metadata !5389, metadata !10561}
!10563 = metadata !{i32 612, i32 0, metadata !5389, metadata !10561}
!10564 = metadata !{i32 56, i32 0, metadata !10479, null}
!10565 = metadata !{i32 57, i32 0, metadata !10479, null}
!10566 = metadata !{i32 59, i32 0, metadata !10479, null}
!10567 = metadata !{i32 60, i32 0, metadata !10479, null}
!10568 = metadata !{i32 62, i32 0, metadata !10479, null}
!10569 = metadata !{i32 64, i32 0, metadata !10479, null}
!10570 = metadata !{i32 66, i32 0, metadata !10479, null}
!10571 = metadata !{i32 67, i32 0, metadata !10479, null}
!10572 = metadata !{i32 68, i32 0, metadata !10479, null}
!10573 = metadata !{i32 266, i32 0, metadata !10574, null}
!10574 = metadata !{i32 589835, metadata !3887, i32 265, i32 0, metadata !3668, i32 46} ; [ DW_TAG_lexical_block ]
!10575 = metadata !{i32 504, i32 0, metadata !10576, metadata !10577}
!10576 = metadata !{i32 589835, metadata !4039, i32 503, i32 0, metadata !4042, i32 0} ; [ DW_TAG_lexical_block ]
!10577 = metadata !{i32 353, i32 0, metadata !5510, null}
!10578 = metadata !{i32 355, i32 0, metadata !5510, null}
!10579 = metadata !{i32 356, i32 0, metadata !5510, null}
!10580 = metadata !{i32 357, i32 0, metadata !5510, null}
!10581 = metadata !{i32 361, i32 0, metadata !5510, null}
!10582 = metadata !{i32 362, i32 0, metadata !5510, null}
!10583 = metadata !{i32 364, i32 0, metadata !5510, null}
!10584 = metadata !{i32 360, i32 0, metadata !5510, null}
!10585 = metadata !{i32 366, i32 0, metadata !5510, null}
!10586 = metadata !{i32 367, i32 0, metadata !5510, null}
!10587 = metadata !{i32 354, i32 0, metadata !5510, null}
!10588 = metadata !{i32 64, i32 0, metadata !5525, null}
!10589 = metadata !{i32 65, i32 0, metadata !5525, null}
!10590 = metadata !{i32 86, i32 0, metadata !5525, null}
!10591 = metadata !{i32 59, i32 0, metadata !5520, null}
!10592 = metadata !{i32 61, i32 0, metadata !5525, null}
!10593 = metadata !{i32 67, i32 0, metadata !5525, null}
!10594 = metadata !{i32 68, i32 0, metadata !5525, null}
!10595 = metadata !{i32 78, i32 0, metadata !5525, null}
!10596 = metadata !{i32 75, i32 0, metadata !5525, null}
!10597 = metadata !{i32 76, i32 0, metadata !5525, null}
!10598 = metadata !{i32 79, i32 0, metadata !5525, null}
!10599 = metadata !{i32 84, i32 0, metadata !5525, null}
!10600 = metadata !{i32 85, i32 0, metadata !5525, null}
!10601 = metadata !{i32 87, i32 0, metadata !5525, null}
!10602 = metadata !{i32 90, i32 0, metadata !5525, null}
!10603 = metadata !{i32 91, i32 0, metadata !5525, null}
!10604 = metadata !{i32 88, i32 0, metadata !5525, null}
!10605 = metadata !{i32 96, i32 0, metadata !5525, null}
!10606 = metadata !{i32 99, i32 0, metadata !5520, null}
!10607 = metadata !{i32 105, i32 0, metadata !5535, null}
!10608 = metadata !{i32 108, i32 0, metadata !5535, null}
!10609 = metadata !{i32 110, i32 0, metadata !5535, null}
!10610 = metadata !{i32 109, i32 0, metadata !5535, null}
!10611 = metadata !{i32 112, i32 0, metadata !5535, null}
!10612 = metadata !{i32 114, i32 0, metadata !5535, null}
!10613 = metadata !{i32 121, i32 0, metadata !5535, null}
!10614 = metadata !{i32 116, i32 0, metadata !5535, null}
!10615 = metadata !{i32 119, i32 0, metadata !5535, null}
!10616 = metadata !{i32 124, i32 0, metadata !5535, null}
!10617 = metadata !{i32 125, i32 0, metadata !5535, null}
!10618 = metadata !{i32 126, i32 0, metadata !5535, null}
!10619 = metadata !{i32 128, i32 0, metadata !5535, null}
!10620 = metadata !{i32 129, i32 0, metadata !5535, null}
!10621 = metadata !{i32 133, i32 0, metadata !5535, null}
!10622 = metadata !{i32 135, i32 0, metadata !5543, null}
!10623 = metadata !{i32 136, i32 0, metadata !5543, null}
!10624 = metadata !{i32 138, i32 0, metadata !5543, null}
!10625 = metadata !{i32 141, i32 0, metadata !5535, null}
!10626 = metadata !{i32 504, i32 0, metadata !10576, metadata !10627}
!10627 = metadata !{i32 143, i32 0, metadata !5535, null}
!10628 = metadata !{i32 146, i32 0, metadata !5535, null}
!10629 = metadata !{i32 148, i32 0, metadata !5535, null}
!10630 = metadata !{i32 152, i32 0, metadata !5535, null}
!10631 = metadata !{i32 154, i32 0, metadata !5535, null}
!10632 = metadata !{i32 159, i32 0, metadata !5535, null}
!10633 = metadata !{i32 164, i32 0, metadata !5535, null}
!10634 = metadata !{i32 165, i32 0, metadata !5535, null}
!10635 = metadata !{i32 504, i32 0, metadata !10576, metadata !10636}
!10636 = metadata !{i32 167, i32 0, metadata !5535, null}
!10637 = metadata !{i32 168, i32 0, metadata !5535, null}
!10638 = metadata !{i32 170, i32 0, metadata !5535, null}
!10639 = metadata !{i32 172, i32 0, metadata !5535, null}
!10640 = metadata !{i32 176, i32 0, metadata !5535, null}
!10641 = metadata !{i32 177, i32 0, metadata !5535, null}
!10642 = metadata !{i32 178, i32 0, metadata !5535, null}
!10643 = metadata !{i32 179, i32 0, metadata !5535, null}
!10644 = metadata !{i32 182, i32 0, metadata !5535, null}
!10645 = metadata !{i32 183, i32 0, metadata !5535, null}
!10646 = metadata !{i32 184, i32 0, metadata !5535, null}
!10647 = metadata !{i32 185, i32 0, metadata !5535, null}
!10648 = metadata !{i32 186, i32 0, metadata !5535, null}
!10649 = metadata !{i32 188, i32 0, metadata !5535, null}
!10650 = metadata !{i32 189, i32 0, metadata !5535, null}
!10651 = metadata !{i32 190, i32 0, metadata !5535, null}
!10652 = metadata !{i32 191, i32 0, metadata !5535, null}
!10653 = metadata !{i32 192, i32 0, metadata !5535, null}
!10654 = metadata !{i32 193, i32 0, metadata !5535, null}
!10655 = metadata !{i32 194, i32 0, metadata !5535, null}
!10656 = metadata !{i32 197, i32 0, metadata !5535, null}
!10657 = metadata !{i32 198, i32 0, metadata !5535, null}
!10658 = metadata !{i32 200, i32 0, metadata !5535, null}
!10659 = metadata !{i32 202, i32 0, metadata !5535, null}
!10660 = metadata !{i32 203, i32 0, metadata !5535, null}
!10661 = metadata !{i32 205, i32 0, metadata !5535, null}
!10662 = metadata !{i32 206, i32 0, metadata !5535, null}
!10663 = metadata !{i32 209, i32 0, metadata !5545, null}
!10664 = metadata !{i32 211, i32 0, metadata !5545, null}
!10665 = metadata !{i32 213, i32 0, metadata !5545, null}
!10666 = metadata !{i32 212, i32 0, metadata !5545, null}
!10667 = metadata !{i32 215, i32 0, metadata !5545, null}
!10668 = metadata !{i32 216, i32 0, metadata !5545, null}
!10669 = metadata !{i32 217, i32 0, metadata !5545, null}
!10670 = metadata !{i32 222, i32 0, metadata !5545, null}
!10671 = metadata !{i32 223, i32 0, metadata !5545, null}
!10672 = metadata !{i32 225, i32 0, metadata !5545, null}
!10673 = metadata !{i32 376, i32 0, metadata !5549, null}
!10674 = metadata !{i32 377, i32 0, metadata !5549, null}
!10675 = metadata !{i32 504, i32 0, metadata !10576, metadata !10676}
!10676 = metadata !{i32 379, i32 0, metadata !5549, null}
!10677 = metadata !{i32 380, i32 0, metadata !5549, null}
!10678 = metadata !{i32 381, i32 0, metadata !5549, null}
!10679 = metadata !{i32 382, i32 0, metadata !5549, null}
!10680 = metadata !{i32 384, i32 0, metadata !5549, null}
!10681 = metadata !{i32 385, i32 0, metadata !5549, null}
!10682 = metadata !{i32 386, i32 0, metadata !5549, null}
!10683 = metadata !{i32 378, i32 0, metadata !5549, null}
!10684 = metadata !{i32 251, i32 0, metadata !5568, null}
!10685 = metadata !{i32 252, i32 0, metadata !5568, null}
!10686 = metadata !{i32 253, i32 0, metadata !5568, null}
!10687 = metadata !{i32 504, i32 0, metadata !10576, metadata !10688}
!10688 = metadata !{i32 256, i32 0, metadata !5568, null}
!10689 = metadata !{i32 259, i32 0, metadata !5568, null}
!10690 = metadata !{i32 260, i32 0, metadata !5568, null}
!10691 = metadata !{i32 261, i32 0, metadata !5568, null}
!10692 = metadata !{i32 262, i32 0, metadata !5568, null}
!10693 = metadata !{i32 265, i32 0, metadata !5568, null}
!10694 = metadata !{i32 266, i32 0, metadata !5568, null}
!10695 = metadata !{i32 267, i32 0, metadata !5568, null}
!10696 = metadata !{i32 269, i32 0, metadata !5568, null}
!10697 = metadata !{i32 270, i32 0, metadata !5568, null}
!10698 = metadata !{i32 271, i32 0, metadata !5568, null}
!10699 = metadata !{i32 273, i32 0, metadata !5568, null}
!10700 = metadata !{i32 274, i32 0, metadata !5568, null}
!10701 = metadata !{i32 278, i32 0, metadata !5568, null}
!10702 = metadata !{i32 279, i32 0, metadata !5568, null}
!10703 = metadata !{i32 280, i32 0, metadata !5568, null}
!10704 = metadata !{i32 281, i32 0, metadata !5568, null}
!10705 = metadata !{i32 283, i32 0, metadata !5568, null}
!10706 = metadata !{i32 285, i32 0, metadata !5568, null}
!10707 = metadata !{i32 286, i32 0, metadata !5568, null}
!10708 = metadata !{i32 287, i32 0, metadata !5568, null}
!10709 = metadata !{i32 288, i32 0, metadata !5568, null}
!10710 = metadata !{i32 289, i32 0, metadata !5568, null}
!10711 = metadata !{i32 290, i32 0, metadata !5568, null}
!10712 = metadata !{i32 291, i32 0, metadata !5568, null}
!10713 = metadata !{i32 293, i32 0, metadata !5568, null}
!10714 = metadata !{i32 294, i32 0, metadata !5568, null}
!10715 = metadata !{i32 295, i32 0, metadata !5568, null}
!10716 = metadata !{i32 296, i32 0, metadata !5568, null}
!10717 = metadata !{i32 297, i32 0, metadata !5568, null}
!10718 = metadata !{i32 301, i32 0, metadata !5568, null}
!10719 = metadata !{i32 302, i32 0, metadata !5568, null}
!10720 = metadata !{i32 303, i32 0, metadata !5568, null}
!10721 = metadata !{i32 304, i32 0, metadata !5568, null}
!10722 = metadata !{i32 305, i32 0, metadata !5568, null}
!10723 = metadata !{i32 307, i32 0, metadata !5568, null}
!10724 = metadata !{i32 309, i32 0, metadata !5568, null}
!10725 = metadata !{i32 229, i32 0, metadata !5505, metadata !10726}
!10726 = metadata !{i32 310, i32 0, metadata !5568, null}
!10727 = metadata !{i32 230, i32 0, metadata !5505, metadata !10726}
!10728 = metadata !{i32 311, i32 0, metadata !5568, null}
!10729 = metadata !{i32 313, i32 0, metadata !5568, null}
!10730 = metadata !{i32 317, i32 0, metadata !5568, null}
!10731 = metadata !{i32 318, i32 0, metadata !5568, null}
!10732 = metadata !{i32 319, i32 0, metadata !5568, null}
!10733 = metadata !{i32 320, i32 0, metadata !5568, null}
!10734 = metadata !{i32 321, i32 0, metadata !5568, null}
!10735 = metadata !{i32 322, i32 0, metadata !5568, null}
!10736 = metadata !{i32 323, i32 0, metadata !5568, null}
!10737 = metadata !{i32 325, i32 0, metadata !5568, null}
!10738 = metadata !{i32 329, i32 0, metadata !5568, null}
!10739 = metadata !{i32 330, i32 0, metadata !5568, null}
!10740 = metadata !{i32 331, i32 0, metadata !5568, null}
!10741 = metadata !{i32 332, i32 0, metadata !5568, null}
!10742 = metadata !{i32 333, i32 0, metadata !5568, null}
!10743 = metadata !{i32 334, i32 0, metadata !5568, null}
!10744 = metadata !{i32 335, i32 0, metadata !5568, null}
!10745 = metadata !{i32 337, i32 0, metadata !5568, null}
!10746 = metadata !{i32 343, i32 0, metadata !5568, null}
!10747 = metadata !{i32 344, i32 0, metadata !5568, null}
!10748 = metadata !{i32 345, i32 0, metadata !5568, null}
!10749 = metadata !{i32 347, i32 0, metadata !5568, null}
!10750 = metadata !{i32 21, i32 0, metadata !10751, null}
!10751 = metadata !{i32 589835, metadata !4155, i32 20, i32 0, metadata !4156, i32 0} ; [ DW_TAG_lexical_block ]
!10752 = metadata !{i32 27, i32 0, metadata !10751, null}
!10753 = metadata !{i32 29, i32 0, metadata !10751, null}
!10754 = metadata !{i32 28, i32 0, metadata !5586, null}
!10755 = metadata !{i32 29, i32 0, metadata !5586, null}
!10756 = metadata !{i32 31, i32 0, metadata !5586, null}
!10757 = metadata !{i32 33, i32 0, metadata !5586, null}
!10758 = metadata !{i32 43, i32 0, metadata !5586, null}
!10759 = metadata !{i32 32, i32 0, metadata !5586, null}
!10760 = metadata !{i32 20, i32 0, metadata !5582, metadata !10759}
!10761 = metadata !{i32 21, i32 0, metadata !5582, metadata !10759}
!10762 = metadata !{i32 37, i32 0, metadata !5586, null}
!10763 = metadata !{i32 34, i32 0, metadata !5586, null}
!10764 = metadata !{i32 35, i32 0, metadata !5586, null}
!10765 = metadata !{i32 38, i32 0, metadata !5586, null}
!10766 = metadata !{i32 39, i32 0, metadata !5586, null}
!10767 = metadata !{i32 40, i32 0, metadata !5586, null}
!10768 = metadata !{i32 41, i32 0, metadata !5586, null}
!10769 = metadata !{i32 504, i32 0, metadata !10770, metadata !10771}
!10770 = metadata !{i32 589835, metadata !4169, i32 503, i32 0, metadata !4170, i32 1} ; [ DW_TAG_lexical_block ]
!10771 = metadata !{i32 59, i32 0, metadata !5593, null}
!10772 = metadata !{i32 61, i32 0, metadata !5614, null}
!10773 = metadata !{i32 62, i32 0, metadata !5614, null}
!10774 = metadata !{i32 63, i32 0, metadata !5614, null}
!10775 = metadata !{i32 67, i32 0, metadata !5586, null}
!10776 = metadata !{i32 71, i32 0, metadata !5586, null}
!10777 = metadata !{i32 14, i32 0, metadata !10778, null}
!10778 = metadata !{i32 589835, metadata !4219, i32 12, i32 0, metadata !4220, i32 0} ; [ DW_TAG_lexical_block ]
!10779 = metadata !{i32 15, i32 0, metadata !10778, null}
!10780 = metadata !{i32 16, i32 0, metadata !10778, null}
!10781 = metadata !{i32 17, i32 0, metadata !10778, null}
!10782 = metadata !{i32 18, i32 0, metadata !10778, null}
!10783 = metadata !{i32 16, i32 0, metadata !5620, null}
!10784 = metadata !{i32 17, i32 0, metadata !5620, null}
!10785 = metadata !{i32 19, i32 0, metadata !5620, null}
!10786 = metadata !{i32 22, i32 0, metadata !5620, null}
!10787 = metadata !{i32 25, i32 0, metadata !5620, null}
!10788 = metadata !{i32 26, i32 0, metadata !5620, null}
!10789 = metadata !{i32 28, i32 0, metadata !5620, null}
!10790 = metadata !{i32 29, i32 0, metadata !5620, null}
!10791 = metadata !{i32 32, i32 0, metadata !5620, null}
!10792 = metadata !{i32 20, i32 0, metadata !5620, null}
